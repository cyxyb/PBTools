// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/JSBY.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace JSBY {

  /// <summary>Holder for reflection information generated from Proto/SubGame/JSBY.proto</summary>
  public static partial class JSBYReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/JSBY.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JSBYReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90by9TdWJHYW1lL0pTQlkucHJvdG8SBEpTQlkiRwoISGVyb0luZm8S",
            "CgoCSUQYASABKAUSDQoFTGV2ZWwYAiABKAUSEAoIUG9zaXRpb24YAyABKAUS",
            "DgoGVW5sb2NrGAQgASgFIk4KFENTTG9naW5HYW1lV2l0aFRva2VuEhAKCFBs",
            "YXllcklkGAEgASgFEg0KBVRva2VuGAIgASgJEhUKDUNsaWVudFZlcnNpb24Y",
            "AyABKAkiTQoUU0NMb2dpbkdhbWVXaXRoVG9rZW4SDQoFTW9uZXkYASABKAUS",
            "FAoMSXNGaXJzdExvZ2luGAIgASgFEhAKCFVzZVJhdGlvGAMgASgFImEKDFVz",
            "ZXJCb21UaW1lcxIVCg1Vc2VQb3NpdGlvbklkGAEgASgFEhgKEFVzZVBvc2l0",
            "aW9uVGltZXMYAiABKAUSDwoHT3ZlckJvbRgDIAEoCBIPCgdBbGxPdmVyGAQg",
            "ASgIImUKFFNwZWNpYWxNb25zdGVyQXR0YWNrEhIKClBvc2l0aW9uSWQYASAB",
            "KAUSEQoJTW9uc3RlcklkGAIgASgFEhEKCUNoYW5uZWxJZBgDIAEoBRITCgtQ",
            "cm9jZXNzVGltZRgEIAEoBSL1AQoPQ1NSZXF1ZXN0QXR0YWNrEg0KBVJhdGlv",
            "GAEgASgFEgwKBE1vZGUYAiABKAUSEQoJTW9uc3RlcklkGAMgASgFEhIKClBv",
            "c2l0aW9uSWQYBCABKAUSFQoNVXNlUG9zaXRpb25JZBgFIAEoBRIYChBVc2VQ",
            "b3NpdGlvblRpbWVzGAYgASgFEhMKC1NwZWNpYWxUeXBlGAcgASgFEi8KC1Nw",
            "ZWNpYWxJbmZvGAggAygLMhouSlNCWS5TcGVjaWFsTW9uc3RlckF0dGFjaxIR",
            "CglEcmFnb25FbmQYCSABKAgSFAoMSGVyb1VuaXF1ZUlkGAogASgFIhEKD1ND",
            "UmVxdWVzdEF0dGFjayIzChFTcGVjaWFsQXR0YWNrSW5mbxIOCgZLaWxsSUQY",
            "ASABKAUSDgoGU2VsZklEGAIgASgFIpYDCgtTQ1N5bmNNb25leRINCgVNb25l",
            "eRgBIAEoBRIRCglNb25zdGVySWQYAiABKAUSEgoKUG9zaXRpb25JZBgDIAEo",
            "BRIMCgRUeXBlGAQgASgFEg0KBVJhdGlvGAUgASgFEhAKCFBsYXllcklkGAYg",
            "ASgFEhYKDk1vbmV5VmFyaWF0aW9uGAcgASgFEh8KA0JvbRgIIAEoCzISLkpT",
            "QlkuVXNlckJvbVRpbWVzEhQKDEhlcm9VbmlxdWVJZBgJIAEoBRIrCgpBdHRh",
            "Y2tJbmZvGAogASgLMhcuSlNCWS5TcGVjaWFsQXR0YWNrSW5mbxINCgVFYXJl",
            "ZBgLIAEoBRIQCghBZGRSYXRpbxgMIAEoBRIUCgxCYWxsb29uUmF0aW8YDSAB",
            "KAUSDgoGT3RoZXJzGA4gASgJEhUKDUdpYW50SGl0UG93ZXIYDyABKAUSFAoM",
            "TXhsU2VhbE1vbmV5GBAgASgFEhwKFE14bFNlYWxBZGRBd2FyZFJhdGlvGBEg",
            "ASgFEhQKDEJlYXJNdWx0aXBsZRgSIAEoCSKvAQoQU0NQb2lzb25Cb21UaW1l",
            "cxISCgpQb3NpdGlvbklkGAEgASgFEg0KBVRpbWVzGAIgASgFEg0KBVJhdGlv",
            "GAMgASgFEhAKCEFkZFRpbWVzGAQgAygFEhQKDEtpbGxQbGF5ZXJJZBgFIAEo",
            "BRIUCgxIZXJvVW5pcXVlSWQYBiABKAUSKwoKQXR0YWNrSW5mbxgHIAEoCzIX",
            "LkpTQlkuU3BlY2lhbEF0dGFja0luZm8iXQoWQ1NDaGFuZ2VQb2lzb25Cb21U",
            "aW1lcxISCgpQb3NpdGlvbklkGAEgASgFEhgKEFVzZVBvc2l0aW9uVGltZXMY",
            "AiABKAUSFQoNTmV3UG9zaXRpb25JZBgDIAEoBSIYChZTQ0NoYW5nZVBvaXNv",
            "bkJvbVRpbWVzIjsKDENTRW50ZXJTdGFnZRINCgVFbnRlchgBIAEoCBIcCgRN",
            "b2RlGAIgASgOMg4uSlNCWS5Nb2RlVHlwZSIgCgxTQ0VudGVyU3RhZ2USEAoI",
            "VXNlUmF0aW8YASABKAUiHAoLQ1NLZWVwUmF0aW8SDQoFUmF0aW8YASABKAUi",
            "DQoLU0NLZWVwUmF0aW8ipwEKD1RydXN0ZWVzaGlwSW5mbxIVCg1Jc1RydXN0",
            "ZWVzaGlwGAEgASgIEhQKDEhpZ2hTZXRWYWx1ZRgCIAEoBRITCgtIaWdoU2V0",
            "T3BlbhgDIAEoCBITCgtMb3dTZXRWYWx1ZRgEIAEoBRISCgpMb3dTZXRPcGVu",
            "GAUgASgIEhQKDFRpbWVTZXRWYWx1ZRgGIAEoAhITCgtUaW1lU2V0T3BlbhgH",
            "IAEoCCISChBDU0dldFRydXN0ZWVzaGlwIlsKEFNDR2V0VHJ1c3RlZXNoaXAS",
            "IwoESW5mbxgBIAEoCzIVLkpTQlkuVHJ1c3RlZXNoaXBJbmZvEhAKCExlZnRU",
            "aW1lGAIgASgFEhAKCFZJUExldmVsGAMgASgFIjcKEENTU2V0VHJ1c3RlZXNo",
            "aXASIwoESW5mbxgBIAEoCzIVLkpTQlkuVHJ1c3RlZXNoaXBJbmZvIhIKEFND",
            "U2V0VHJ1c3RlZXNoaXAiNgoQVHJ1c3RlZXNoaXBNb25leRITCgtNb25zdGVy",
            "VHlwZRgBIAEoBRINCgVNb25leRgCIAEoBSIiChBDU0VuZFRydXN0ZWVzaGlw",
            "Eg4KBk5vdGlmeRgBIAEoCCJfChBTQ0VuZFRydXN0ZWVzaGlwEiQKBEluZm8Y",
            "ASABKAsyFi5KU0JZLlRydXN0ZWVzaGlwTW9uZXkSEgoKVG90YWxNb25leRgC",
            "IAEoBRIRCglUb3RhbFRpbWUYAyABKAUiDgoMQ1NHZXRWZXJzaW9uIh0KDFND",
            "R2V0VmVyc2lvbhINCgVJc05ldxgBIAEoCCJVCgxBY3Rpdml0eUluZm8SCgoC",
            "SUQYASABKAUSDQoFTW9uZXkYAiABKAUSDgoGRW56eW1lGAMgASgFEgwKBE5h",
            "bWUYBCABKAkSDAoERmxhZxgFIAEoBSIQCg5DU0FjdGl2aXR5SW5mbyJqCg5T",
            "Q0FjdGl2aXR5SW5mbxIgCgRJbmZvGAEgASgLMhIuSlNCWS5BY3Rpdml0eUlu",
            "Zm8SEAoITGVmdFRpbWUYAiABKAUSEwoLQmVnaW50MzJpbWUYAyABKAkSDwoH",
            "RW5kVGltZRgEIAEoCSJwChRTQ05vdGlmeUFjdGl2aXR5SW5mbxIgCgRJbmZv",
            "GAEgASgLMhIuSlNCWS5BY3Rpdml0eUluZm8SEAoITGVmdFRpbWUYAiABKAUS",
            "EwoLQmVnaW50MzJpbWUYAyABKAkSDwoHRW5kVGltZRgEIAEoCSIgChJDU0dl",
            "dEFjdGl2aXR5QXdhcmQSCgoCSUQYASABKAUiLgoSU0NHZXRBY3Rpdml0eUF3",
            "YXJkEgoKAklEGAEgASgFEgwKBEZsYWcYAiABKAUiKwoPQ1NCdXR0b25SZWNv",
            "cmRzEgoKAklEGAEgASgFEgwKBE1vZGUYAiABKAUiEQoPU0NCdXR0b25SZWNv",
            "cmRzIoEBCg1Ub3dlckhlcm9JbmZvEg4KBkhlcm9JZBgBIAEoBRISCgpQb3Np",
            "dGlvbklkGAIgASgFEg0KBUlzQXRrGAMgASgIEhEKCVRpbWVzdGFtcBgEIAEo",
            "BRIYChBUYXJnZXRQb3NpdGlvbklkGAUgASgFEhAKCFVuaXF1ZUlkGAYgASgF",
            "IjkKEFRvd2VySGVyb0F0a0luZm8SFgoOSGVyb1Bvc2l0aW9uSWQYASABKAUS",
            "DQoFSXNBdGsYAiABKAgi7AEKD1RhYmxlUGxheWVySW5mbxIPCgdDaGFpcklk",
            "GAEgASgFEhAKCFBsYXllcklkGAIgASgFEg0KBU1vbmV5GAMgASgFEgsKA1Nl",
            "eBgEIAEoBRIMCgROYW1lGAUgASgJEgwKBEhlYWQYBiABKAkSIQoESW5mbxgH",
            "IAMoCzITLkpTQlkuVG93ZXJIZXJvSW5mbxIWCg5Nb25leVZhcmlhdGlvbhgI",
            "IAEoBRIQCghWaXBMZXZlbBgJIAEoBRINCgVJc1ZpcBgKIAEoCBISCgpCYWNr",
            "Z3JvdW5kGAsgASgFEg4KBkVmZmVjdBgMIAEoBSJQChhTQ05vdGlmeVRvd2Vy",
            "VGFibGVQbGF5ZXISIwoESW5mbxgBIAMoCzIVLkpTQlkuVGFibGVQbGF5ZXJJ",
            "bmZvEg8KB1RhYmxlSUQYAiABKAUiOwoRU0NMZWF2ZVRvd2VyVGFibGUSEAoI",
            "UGxheWVySWQYASABKAUSFAoMSXNBZ2FpbkVudGVyGAIgASgIIosBCgxUb3dl",
            "ck1vbnN0ZXISEAoIUG9zaXRpb24YASABKAUSEwoLUHJvY2Vzc1RpbWUYAiAB",
            "KAUSEQoJUmVhZHlUaW1lGAMgASgFEhEKCU1vbnN0ZXJJRBgEIAEoBRIMCgRC",
            "dWZmGAUgAygFEhEKCUlzQ29ubmVjdBgGIAEoCBINCgVMZXZlbBgHIAEoBSJR",
            "ChNDaGFubmVsVG93ZXJNb25zdGVyEhEKCUNoYW5uZWxJZBgBIAEoBRInCgtD",
            "aGFubmVsSW5mbxgCIAMoCzISLkpTQlkuVG93ZXJNb25zdGVyIigKEVNDR2V0",
            "VG93ZXJNb25zdGVyEhMKC1JlcVBsYXllcklkGAEgASgFIlEKEUNTR2V0VG93",
            "ZXJNb25zdGVyEhMKC1JlcVBsYXllcklkGAEgASgFEicKBEluZm8YAiABKAsy",
            "GS5KU0JZLkNoYW5uZWxUb3dlck1vbnN0ZXIiUQoVU0NTeW5jR2V0VG93ZXJN",
            "b25zdGVyEg8KB1RhYmxlSUQYASABKAUSJwoESW5mbxgCIAMoCzIZLkpTQlku",
            "Q2hhbm5lbFRvd2VyTW9uc3RlciJKCg5TQ1Rvd2VyTW9uc3RlchIPCgdUYWJs",
            "ZUlEGAEgASgFEicKBEluZm8YAiADKAsyGS5KU0JZLkNoYW5uZWxUb3dlck1v",
            "bnN0ZXIiOgoSQ1NUb3dlckhlcm9BdGtJbmZvEiQKBEluZm8YASADKAsyFi5K",
            "U0JZLlRvd2VySGVyb0F0a0luZm8iOgoSU0NUb3dlckhlcm9BdGtJbmZvEiQK",
            "BEluZm8YASADKAsyFi5KU0JZLlRvd2VySGVyb0F0a0luZm8iRQoRQ1NUb3dl",
            "clVwZGF0ZUhlcm8SIQoESW5mbxgBIAEoCzITLkpTQlkuVG93ZXJIZXJvSW5m",
            "bxINCgVMZWF2ZRgCIAEoCCIlChFTQ1Rvd2VyVXBkYXRlSGVybxIQCghVbmlx",
            "dWVJZBgBIAEoBSJeChVTQ1B1c2hUb3dlclVwZGF0ZUhlcm8SIQoESW5mbxgB",
            "IAEoCzITLkpTQlkuVG93ZXJIZXJvSW5mbxITCgtSZXFQbGF5ZXJJZBgCIAEo",
            "BRINCgVMZWF2ZRgDIAEoCCI+Cg5Mb2NrVGFyZ2V0SW5mbxISCgpQb3NpdGlv",
            "bklkGAEgASgFEhgKEFRhcmdldFBvc2l0aW9uSWQYAiABKAUiQQoXQ1NUb3dl",
            "clBsYXllckxvY2tUYXJnZXQSJgoITG9ja0luZm8YASADKAsyFC5KU0JZLkxv",
            "Y2tUYXJnZXRJbmZvIkEKF1NDVG93ZXJQbGF5ZXJMb2NrVGFyZ2V0EiYKCExv",
            "Y2tJbmZvGAEgAygLMhQuSlNCWS5Mb2NrVGFyZ2V0SW5mbyIkChJDU0NoYW5n",
            "ZUJhY2tncm91bmQSDgoGSXNCYWNrGAEgASgIIhQKElNDQ2hhbmdlQmFja2dy",
            "b3VuZCIoChJDU1Rvd2VyTW9uc3RlckV4aXQSEgoKUG9zaXRpb25JZBgBIAEo",
            "BSIUChJTQ1Rvd2VyTW9uc3RlckV4aXQiEgoQQ1NHZXRDdXJyZW50VGltZSIl",
            "ChBTQ0dldEN1cnJlbnRUaW1lEhEKCVRpbWVzdGFtcBgBIAEoBSI0Cg5Ub3dl",
            "ckd1aWRlSW5mbxIRCglHdWlkZVN0ZXAYASABKAUSDwoHSXNGaW5zaBgCIAEo",
            "CCIQCg5DU0dldFRvd2VyU3RlcCI6Cg9TQ0dldFRvd2VyR3VpZGUSJwoJR3Vp",
            "ZGVJbmZvGAEgASgLMhQuSlNCWS5Ub3dlckd1aWRlSW5mbyI5Cg5DU1NldFRv",
            "d2VyU3RlcBInCglHdWlkZUluZm8YASABKAsyFC5KU0JZLlRvd2VyR3VpZGVJ",
            "bmZvIhAKDlNDU2V0VG93ZXJTdGVwIkMKE0NTVG93ZXJFeGNoYW5nZUhlcm8S",
            "FQoNTmV3UG9zaXRpb25JZBgBIAEoBRIVCg1PbGRQb3NpdGlvbklkGAIgASgF",
            "IlgKE1NDVG93ZXJFeGNoYW5nZUhlcm8SFQoNTmV3UG9zaXRpb25JZBgBIAEo",
            "BRIVCg1PbGRQb3NpdGlvbklkGAIgASgFEhMKC1JlcVBsYXllcklkGAMgASgF",
            "Ii0KGlNDTGVhdmVUb3dlclRhYmxlQ291bnRkb3duEg8KB1RhYmxlSUQYASAB",
            "KAUiRQoSUG9pc29uQm9tYkxvY2F0aW9uEgoKAklEGAEgASgFEgkKAVgYAiAB",
            "KAUSCQoBWRgDIAEoBRINCgVBbmdsZRgEIAEoBSI+ChRDU1BvaXNvbkJvbWJM",
            "b2NhdGlvbhImCgRJbmZvGAEgAygLMhguSlNCWS5Qb2lzb25Cb21iTG9jYXRp",
            "b24iPgoUU0NQb2lzb25Cb21iTG9jYXRpb24SJgoESW5mbxgBIAMoCzIYLkpT",
            "QlkuUG9pc29uQm9tYkxvY2F0aW9uIlAKEVBvaXNvbmJvbWJDb252ZXJ0EhEK",
            "CU1vbnN0ZXJJZBgBIAEoBRISCgpQb3NpdGlvbklkGAIgASgFEhQKDFBvaXNv",
            "bkJvbWJJZBgDIAEoBSJoChNTQ1BvaXNvbkJvbWJDb252ZXJ0EhQKDFBvaXNv",
            "bkJvbWJJZBgBIAEoBRIlCgRJbmZvGAIgAygLMhcuSlNCWS5Qb2lzb25ib21i",
            "Q29udmVydBIUCgxLaWxsUGxheWVySUQYAyABKAUikwEKDlBvaXNvbmJvbWJU",
            "eXBlEhEKCU1vbnN0ZXJJZBgBIAEoBRIaChJNYXN0ZXJQb2lzb25Cb21iSWQY",
            "AiABKAUSFAoMUG9pc29uQm9tYklkGAMgASgFEhQKDEtpbGxQbGF5ZXJJZBgE",
            "IAEoBRIRCglDaGFubmVsSWQYBSABKAUSEwoLUHJvY2Vzc1RpbWUYBiABKAUi",
            "NwoRU0NQb2lzb25ib21iVHlwZXMSIgoESW5mbxgBIAMoCzIULkpTQlkuUG9p",
            "c29uYm9tYlR5cGUiMQoPQ1NEcmFnb25SZWxlYXNlEg0KBVJhdGlvGAEgASgC",
            "Eg8KB1Byb3BzSUQYAiABKAUiYwoPU0NEcmFnb25SZWxlYXNlEhEKCVN0YXJ0",
            "VGltZRgBIAEoBRIQCghQbGF5ZXJJZBgCIAEoBRIrCgpBdHRhY2tJbmZvGAMg",
            "ASgLMhcuSlNCWS5TcGVjaWFsQXR0YWNrSW5mbyJnChNTQ1B1c2hEcmFnb25S",
            "ZWxlYXNlEhEKCVN0YXJ0VGltZRgBIAEoBRIQCghQbGF5ZXJJZBgCIAEoBRIr",
            "CgpBdHRhY2tJbmZvGAMgASgLMhcuSlNCWS5TcGVjaWFsQXR0YWNrSW5mbyIj",
            "Cg9TQ1B1c2hEcmFnb25FbmQSEAoIUGxheWVySWQYASABKAUiVwoVU0NQdXNo",
            "U2VsZkRyYWdvblN0YXRlEhgKEFByb2dyZXNzQmFyQ291bnQYASABKAUSEwoL",
            "UHJvZ3Jlc3NCYXIYAiABKAUSDwoHUHJvcHNJRBgDIAEoBSIkChJDU09uZUtl",
            "eVVwZGF0ZUhlcm8SDgoGSGVyb0lkGAEgAygFIogBChJTQ09uZUtleVVwZGF0",
            "ZUhlcm8SEAoIUGxheWVySWQYASABKAUSJgoJTGVhdmVJbmZvGAIgAygLMhMu",
            "SlNCWS5Ub3dlckhlcm9JbmZvEicKCnVwZGF0ZUluZm8YAyADKAsyEy5KU0JZ",
            "LlRvd2VySGVyb0luZm8SDwoHVGFibGVJZBgEIAEoBSK2AQoYU0NQdXNoR2hv",
            "c3REcmFnb25SZWxlYXNlEhEKCVN0YXJ0VGltZRgBIAEoBRIQCghQbGF5ZXJJ",
            "ZBgCIAEoBRISCgpQb3NpdGlvbklkGAMgASgFEhMKC0F0dGFja0NvdW50GAQg",
            "ASgFEhAKCFVzZUNvdW50GAUgASgFEg0KBVJhdGlvGAYgASgFEisKCkF0dGFj",
            "a0luZm8YByABKAsyFy5KU0JZLlNwZWNpYWxBdHRhY2tJbmZvIjkKFFNDUHVz",
            "aEdob3N0RHJhZ29uRW5kEhAKCFBsYXllcklkGAEgASgFEg8KB1RhYmxlSUQY",
            "AiABKAUiKwoaU0NQdXNoU2VsZkdob3N0RHJhZ29uU3RhdGUSDQoFQ291bnQY",
            "ASABKAUiPgoJSGVyb01vbmV5EhAKCFVuaXF1ZUlkGAEgASgFEhAKCFBsYXll",
            "cklkGAIgASgFEg0KBU1vbmV5GAMgASgFIjkKE1NDUHVzaFN5bmNIZXJvTW9u",
            "ZXkSIgoJSGVyb01vbmV5GAEgAygLMg8uSlNCWS5IZXJvTW9uZXkiOAoRU0NQ",
            "dXNoTW9uc3RlckRlYWQSEgoKUG9zaXRpb25JRBgBIAEoBRIPCgdUYWJsZUlE",
            "GAIgASgFIiAKC0NTRGVidWdEYXRhEhEKCURlYnVnRGF0YRgBIAEoCSINCgtT",
            "Q0RlYnVnRGF0YSJIChFTQ1B1c2hNb25zdGVyQnVmZhISCgpQb3NpdGlvbklE",
            "GAEgASgFEhAKCEJ1ZmZUeXBlGAIgASgFEg0KBVN0YXRlGAMgASgFIjIKClRh",
            "YmxlU3RhdGUSDwoHVGFibGVJZBgBIAEoBRITCgtUYWJsZVBsYXllchgCIAEo",
            "BSIOCgxDU0dldFRhYmxlSWQiMQoMU0NHZXRUYWJsZUlkEiEKB1RhYmxlSWQY",
            "ASABKAsyEC5KU0JZLlRhYmxlU3RhdGUiQgoQU0NQbGF5ZXJWaXBMZXZlbBIQ",
            "CghQbGF5ZXJJZBgBIAEoBRINCgVMZXZlbBgCIAEoBRINCgVJc1ZpcBgDIAEo",
            "CCJNCgtEcmFnb25Qcm9wcxIYChBQcm9ncmVzc0JhckNvdW50GAEgASgFEhMK",
            "C1Byb2dyZXNzQmFyGAIgASgFEg8KB1Byb3BzSUQYAyABKAUiEgoQQ1NHZXRE",
            "cmFnb25Qcm9wcyIzChBTQ0dldERyYWdvblByb3BzEh8KBEluZm8YASADKAsy",
            "ES5KU0JZLkRyYWdvblByb3BzIiUKEkNTRXF1aXBEcmFnb25Qcm9wcxIPCgdQ",
            "cm9wc0lEGAEgASgFIjUKElNDRXF1aXBEcmFnb25Qcm9wcxIfCgRJbmZvGAEg",
            "ASgLMhEuSlNCWS5EcmFnb25Qcm9wcyI0ChFTQ1B1c2hEcmFnb25Qcm9wcxIf",
            "CgRJbmZvGAEgASgLMhEuSlNCWS5EcmFnb25Qcm9wcyJpCghTaG9wSW5mbxIO",
            "CgZTaG9wSUQYASABKAUSDAoETmFtZRgCIAEoCRINCgVWYWx1ZRgDIAEoBRIU",
            "CgxDdXJyZW5jeVR5cGUYBCABKAUSDQoFUHJpY2UYBSABKAUSCwoDTnVtGAYg",
            "ASgFIjUKDUNTR2V0U2hvcEluZm8SJAoMU2hvcEluZm9UeXBlGAEgASgOMg4u",
            "SlNCWS5TaG9wVHlwZSItCg1TQ0dldFNob3BJbmZvEhwKBEluZm8YASADKAsy",
            "Di5KU0JZLlNob3BJbmZvIj4KCVByb3BzSW5mbxIPCgdQcm9wc0lEGAEgASgF",
            "EhAKCFRvdGFsTnVtGAIgASgFEg4KBkFkZE51bRgDIAEoBSIwCg9TQ1B1c2hQ",
            "cm9wc0luZm8SHQoESW5mbxgBIAMoCzIPLkpTQlkuUHJvcHNJbmZvIhQKEkNT",
            "R2V0TWF0ZXJpYWxzSW5mbyIzChJTQ0dldE1hdGVyaWFsc0luZm8SHQoESW5m",
            "bxgBIAMoCzIPLkpTQlkuUHJvcHNJbmZvIh8KDUNTRXhjaGFuZ2VCb3gSDgoG",
            "VHlwZUlEGAEgASgFIi0KClJld2FyZEluZm8SDgoGUHJvcElEGAEgASgFEg8K",
            "B1Byb3BOdW0YAiABKAUiiAEKDVNDRXhjaGFuZ2VCb3gSDgoGVHlwZUlEGAEg",
            "ASgFEgoKAklEGAIgASgFEiAKBlJld2FyZBgDIAEoCzIQLkpTQlkuUmV3YXJk",
            "SW5mbxIjCglBZGRSZXdhcmQYBCABKAsyEC5KU0JZLlJld2FyZEluZm8SFAoM",
            "RG91YmxpbmdDb3N0GAUgASgFIiMKDUNTRG91YmxpbmdCb3gSEgoKSXNEb3Vi",
            "bGluZxgBIAEoCCJ0Cg1TQ0RvdWJsaW5nQm94EhAKCElzRG91YmxlGAEgASgI",
            "EgoKAklEGAIgASgFEiAKBlJld2FyZBgDIAEoCzIQLkpTQlkuUmV3YXJkSW5m",
            "bxIjCglBZGRSZXdhcmQYBCABKAsyEC5KU0JZLlJld2FyZEluZm8iLgoJQ1NT",
            "aG9wQnV5Eg8KB1Byb3BzSUQYASABKAUSEAoIUHJvcHNOdW0YAiABKAUiLgoJ",
            "U0NTaG9wQnV5Eg8KB1Byb3BzSUQYASABKAUSEAoIUHJvcHNOdW0YAiABKAUi",
            "QQoNTWF0ZXJpYWxzSW5mbxISCgpQb3NpdGlvbklkGAEgASgFEg8KB1Byb3Bz",
            "SUQYAiABKAUSCwoDTnVtGAMgASgFIjgKE1NDUHVzaERyb3BNYXRlcmlhbHMS",
            "IQoESW5mbxgBIAMoCzITLkpTQlkuTWF0ZXJpYWxzSW5mbyKxAQoSU0NQdXNo",
            "QmFsbG9vblRpbWVzEhIKClBvc2l0aW9uSWQYASABKAUSEAoIUGxheWVySWQY",
            "AiABKAUSEQoJRnJlZVRpbWVzGAMgASgFEg0KBVJhdGlvGAQgASgFEhEKCVN0",
            "YXJ0VGltZRgFIAEoBRITCgtBdHRhY2tDb3VudBgGIAEoBRIrCgpBdHRhY2tJ",
            "bmZvGAcgASgLMhcuSlNCWS5TcGVjaWFsQXR0YWNrSW5mbyImCgpTd2l0Y2hJ",
            "bmZvEgoKAklkGAEgASgFEgwKBE9wZW4YAiABKAgiMgoQU0NGdW5jdGlvblN3",
            "aXRjaBIeCgRJbmZvGAEgAygLMhAuSlNCWS5Td2l0Y2hJbmZvIhQKEkNTU2Vh",
            "bENvbnZlcnRNb25leSJDChJTQ1NlYWxDb252ZXJ0TW9uZXkSEAoIUGxheWVy",
            "SWQYASABKAUSDAoEU2VhbBgCIAEoBRINCgVNb25leRgDIAEoBSI3Cg5Db25u",
            "ZWN0TW9uc3RlchISCgpQb3NpdGlvbklEGAEgASgFEhEKCU1vbnN0ZXJJRBgC",
            "IAEoBSJqChRTQ1B1c2hDb25uZWN0TW9uc3RlchIlCgdDb25uZWN0GAEgAygL",
            "MhQuSlNCWS5Db25uZWN0TW9uc3RlchIRCglDb25uZWN0SUQYAiABKAUSGAoQ",
            "QXR0YWNrUG9zaXRpb25JRBgDIAEoBSKmAQoOU0NHaWFudFVwZ3JhZGUSEAoI",
            "UGxheWVySWQYASABKAUSEgoKUG9zaXRpb25JZBgCIAEoBRINCgVMZXZlbBgD",
            "IAEoBRITCgtBdHRhY2tUaW1lcxgEIAEoBRIrCgpBdHRhY2tJbmZvGAUgASgL",
            "MhcuSlNCWS5TcGVjaWFsQXR0YWNrSW5mbxIOCgZJc092ZXIYBiABKAgSDQoF",
            "UmF0aW8YByABKAUiNgoOU0NQdXNoR2lhbnRFbmQSEAoIUGxheWVySWQYASAB",
            "KAUSEgoKUG9zaXRpb25JZBgCIAEoBSKEAQoKU0NEcm9wQ2FyZBIKCgJJRBgB",
            "IAEoBRIOCgZUeXBlSUQYAiABKAUSDwoHUXVhbGl0eRgDIAEoBRIRCglCYXNl",
            "UG93ZXIYBCABKAUSEwoLRXh0ZW5kUG93ZXIYBSABKAUSDQoFRXF1aXAYBiAB",
            "KAUSEgoKUG9zaXRpb25JRBgHIAEoBSJXCg1TQ0FjcXVpcmVTZWFsEhAKCFBs",
            "YXllcklkGAEgASgFEhwKFE14bFNlYWxBZGRBd2FyZFJhdGlvGAIgASgFEhYK",
            "Dkhlcm9Qb3NpdGlvbklkGAMgASgFIkwKCkZyZXNoTW9uZXkSEAoIUGxheWVy",
            "SWQYASABKAUSCwoDRmVlGAIgASgFEg4KBkdhbWVJRBgDIAEoBRIPCgdDWU1v",
            "bmV5GAQgASgFIkQKD1NodXRkb3duU2VydmljZRIOCgZHYW1lSUQYASABKAUS",
            "DwoHQXJlbmFJRBgCIAEoBRIQCghTZXJ2ZXJJRBgDIAEoBSqqEAoNRU1zZ0lE",
            "U3ViR2FtZRIPCgtSZXFfSW52YWxpZBAAEg0KCFJlcV9QaW5nEOgHEhsKFlJl",
            "cV9Mb2dpbkdhbWVXaXRoVG9rZW4Q6QcSEwoOUmVxX0xvZ291dEdhbWUQ6gcS",
            "FAoPUHVzaF9Mb2dvdXRHYW1lEOsHEhYKEVJlcV9SZXF1ZXN0QXR0YWNrEOwH",
            "EhMKDlB1c2hfU3luY01vbmV5EO0HEhcKElB1c2hfU3luY0ZyZWVUaW1lcxDu",
            "BxIXChJSZXFfVXBkYXRlSGVyb0luZm8Q7wcSGAoTUmVxX1VwZ3JhZGVIZXJv",
            "SW5mbxDwBxITCg5SZXFfRW50ZXJTdGFnZRDxBxIYChNQdXNoX1BvaXNvbkJv",
            "bVRpbWVzEIQIEhcKElJlcV9HZXRUcnVzdGVlc2hpcBCFCBIXChJSZXFfU2V0",
            "VHJ1c3RlZXNoaXAQhggSFwoSUmVxX0VuZFRydXN0ZWVzaGlwEIcIEhgKE1B1",
            "c2hfRW5kVHJ1c3RlZXNoaXAQiAgSEwoOUmVxX0dldFZlcnNpb24QjwgSHQoY",
            "UmVxX0NoYW5nZVBvaXNvbkJvbVRpbWVzEJAIEhIKDVJlcV9LZWVwUmF0aW8Q",
            "lAgSGQoUUHVzaF9MZWF2ZVRvd2VyVGFibGUQlggSIAobUHVzaF9Ob3RpZnlU",
            "b3dlclRhYmxlUGxheWVyEJcIEhkKFFB1c2hfR2V0VG93ZXJNb25zdGVyEJgI",
            "EhgKE1JlcV9HZXRUb3dlck1vbnN0ZXIQmQgSFgoRUHVzaF9Ub3dlck1vbnN0",
            "ZXIQmggSGQoUUmVxX1Rvd2VySGVyb0F0a0luZm8QmwgSGgoVUHVzaF9Ub3dl",
            "ckhlcm9BdGtJbmZvEJwIEhgKE1JlcV9Ub3dlclVwZGF0ZUhlcm8QnQgSGQoU",
            "UHVzaF9Ub3dlclVwZGF0ZUhlcm8QnggSHgoZUmVxX1Rvd2VyUGxheWVyTG9j",
            "a1RhcmdldBCfCBIfChpQdXNoX1Rvd2VyUGxheWVyTG9ja1RhcmdldBCgCBIZ",
            "ChRSZXFfQ2hhbmdlQmFja2dyb3VuZBChCBIXChJSZXFfR2V0Q3VycmVudFRp",
            "bWUQoggSHQoYUHVzaF9TeW5jR2V0VG93ZXJNb25zdGVyEK4IEhkKFFJlcV9U",
            "b3dlck1vbnN0ZXJFeGl0ELcIEhkKFFJlcV9HZXRUb3dlck5ld0d1aWRlELkI",
            "EhkKFFJlcV9TZXRUb3dlck5ld0d1aWRlELoIEhUKEFJlcV9BY3Rpdml0eUlu",
            "Zm8QuwgSHAoXUHVzaF9Ob3RpZnlBY3Rpdml0eUluZm8QvAgSGQoUUmVxX0dl",
            "dEFjdGl2aXR5QXdhcmQQvQgSGgoVUmVxX1Rvd2VyRXhjaGFuZ2VIZXJvEMEI",
            "EhsKFlB1c2hfVG93ZXJFeGNoYW5nZUhlcm8QywgSFgoRUmVxX0J1dHRvblJl",
            "Y29yZHMQzAgSGwoWUHVzaF9TeW5jQmF0QnVsbGV0SW5mbxDNCBIiCh1QdXNo",
            "X0xlYXZlVG93ZXJUYWJsZUNvdW50ZG93bhDOCBIbChZSZXFfUG9pc29uQm9t",
            "YkxvY2F0aW9uEM8IEhwKF1B1c2hfUG9pc29uQm9tYkxvY2F0aW9uENAIEhsK",
            "FlB1c2hfUG9pc29uQm9tYkNvbnZlcnQQ0QgSGAoTUHVzaF9Qb2lzb25Cb21i",
            "VHlwZRDSCBIWChFSZXFfRHJhZ29uUmVsZWFzZRDTCBIXChJQdXNoX0RyYWdv",
            "blJlbGVhc2UQ1AgSEwoOUHVzaF9EcmFnb25FbmQQ1QgSGQoUUHVzaF9TZWxm",
            "RHJhZ29uU3RhdGUQ1ggSGQoUUmVxX09uZUtleVVwZGF0ZUhlcm8Q1wgSGgoV",
            "UHVzaF9PbmVLZXlVcGRhdGVIZXJvENgIEhwKF1B1c2hfR2hvc3REcmFnb25S",
            "ZWxlYXNlENkIEhgKE1B1c2hfR2hvc3REcmFnb25FbmQQ2ggSHgoZUHVzaF9T",
            "ZWxmR2hvc3REcmFnb25TdGF0ZRDbCBIXChJQdXNoX1N5bmNIZXJvTW9uZXkQ",
            "3AgSGQoUUHVzaF9QdXNoTW9uc3RlckRlYWQQ3QgSEgoNUmVxX0RlYnVnRGF0",
            "YRDeCBIZChRQdXNoX1B1c2hNb25zdGVyQnVmZhDfCBITCg5SZXFfR2V0VGFi",
            "bGVJZBDgCBIYChNQdXNoX1BsYXllclZpcExldmVsEOEIEhcKElJlcV9HZXRE",
            "cmFnb25Qcm9wcxDiCBIZChRSZXFfRXF1aXBEcmFnb25Qcm9wcxDjCBIVChBQ",
            "dXNoX0RyYWdvblByb3BzEOQIEhQKD1JlcV9HZXRTaG9wSW5mbxDlCBITCg5Q",
            "dXNoX1Byb3BzSW5mbxDmCBIZChRSZXFfR2V0TWF0ZXJpYWxzSW5mbxDnCBIU",
            "Cg9SZXFfRXhjaGFuZ2VCb3gQ6AgSFAoPUmVxX0RvdWJsaW5nQm94EOkIEhAK",
            "C1JlcV9TaG9wQnV5EOoIEhcKElB1c2hfRHJvcE1hdGVyaWFscxDrCBIWChFQ",
            "dXNoX0JhbGxvb25UaW1lcxDsCBIYChNQdXNoX0Z1bmN0aW9uU3dpdGNoEO0I",
            "EhgKE1B1c2hfQ29ubmVjdE1vbnN0ZXIQ7ggSFgoRUHVzaF9HaWFudFVwZ3Jh",
            "ZGUQ9AgSFgoRUHVzaF9QdXNoR2lhbnRFbmQQ9QgSEgoNUHVzaF9Ecm9wQ2Fy",
            "ZBD2CBIYChNQdXNoX0FjcXVpcmVNeGxTZWFsEPcIEhkKFFJlcV9TZWFsQ29u",
            "dmVydE1vbmV5EPgIKqYVCgdFcnJDb2RlEgsKB1N1Y2Nlc3MQABIXChJFbnRl",
            "clJvb21Jc0Nsb3NpbmcQ5wcSFgoRUVBFbnRlclJvb21GYWlsZWQQkU4SHAoX",
            "UVBCYXNlVXNlckluZm9HZXRGYWlsZWQQkk4SFQoQUVBSZWFkR29sZEZhaWxl",
            "ZBCTThIWChFMYWNrTW9uZXlJblNlcnZlchCUThIZChRMb2FkUGxheWVyRGF0",
            "YUZhaWxlZBCVThIVChBQYXJhbWV0ZXJJc1dyb25nEJZOEhAKC0xhY2tPZk1v",
            "bmV5EJdOEhYKEURlc2VyaWFsaXplRmFpbGVkEJhOEhcKEkNyZWF0ZVBsYXll",
            "ckZhaWxlZBCZThITCg5QbGF5ZXJOb3RFeGlzdBCaThIXChJQbGF5ZXJBbHJl",
            "YWR5TG9naW4Qm04SFAoPQ29uZmlnTm9IYXNIZXJvEJxOEhQKD1BsYXllck5v",
            "SGFzSGVybxCdThIWChFIZXJvUG9zaXRpb25FcnJvchCeThIbChZIZXJvSGFz",
            "VXBncmFkZU1heExldmVsEJ9OEhcKEkhhc05vdEVub3VnaEVuenltZRCgThIX",
            "ChJDb25maWdOb0hhc01vbnN0ZXIQoU4SFQoQSGVyb1VwZGF0ZUZhaWxlZBCi",
            "ThIRCgxIZXJvSGFzRXhpc3QQo04SGAoTQXR0YWNrTW9uc3RlckZhaWxlZBCk",
            "ThIUCg9Nb25zdGVyU2NvcmVFcnIQpU4SGgoVTm90RmluZExpcXVpZE1lZGlj",
            "aW5lEKZOEh8KGkhhc05vdEVub3VnaExpcXVpZE1lZGljaW5lEKdOEhYKEU5v",
            "dEZpbmRMYWJvcmF0b3J5EKhOEh4KGUxhYm9yYXRvcnlVcGdyYWRlTWF4TGV2",
            "ZWwQqU4SHwoaTm90RmluZExldmVsVW5sb2NrRXF1YXRpb24Qqk4SGQoUVW5s",
            "b2NrUGFyYW1ldGVyRXJyb3IQq04SGAoTTGFib3JhdG9yeU5vdFVubG9jaxCs",
            "ThIaChVOb3RGaW5kRW56eW1lRXF1YXRpb24QrU4SIgodTGFib3JhdG9yeU5v",
            "dFJlYWNoVW5sb2NrTGV2ZWwQrk4SGAoTTGFib3JhdG9yeUhhc1VubG9jaxCv",
            "ThIVChBOb3RGaW5kRGFpbHlUYXNrELBOEhgKE05vdEZpbmREYWlseVRhc2tD",
            "ZmcQsU4SGQoUSGFzR2V0RGFpbHlUYXNrQXdhcmQQsk4SHgoZTm9SZWFjaERh",
            "aWx5VGFza0NvbmRpdGlvbhCzThIdChhOb1JlYWNoRGFpbHlUYXNrU2NoZWR1",
            "bGUQtE4SFQoQRGFpbHlUYXNrSURFcnJvchC1ThIXChJSZWFjaERhaWx5VGFz",
            "a092ZXIQtk4SEwoOSXNOb3RTdGFnZU1vZGUQt04SFwoSTW9kZU5vdEV4aXN0",
            "TW9zdGVyELhOEhYKEU5vRXhpc3RHaG9zdExvb25nELlOEh4KGUJ1eUxpcXVp",
            "ZE1lZGljaW5lTWF4VGltZXMQuk4SHAoXSGlnaE1vZGVNb25zdGVyU2V0RXJy",
            "b3IQu04SEwoOTW9uc3Rlckhhc0tpbGwQvE4SFQoQVHJ1c3RlZXNoaXBJc0Vu",
            "ZBC9ThIYChNUcnVzdGVlc2hpcENmZ0Vycm9yEL5OEhoKFVRydXN0ZWVzaGlw",
            "Tm9WSVBMZXZlbBC/ThIVChBOb3RVc2VTYW1lTGlxdWlkEMBOEhkKFFBsYXll",
            "ck5vdFRydXN0ZWVzaGlwEMFOEhQKD0V4aXN0V2FpdFBsYXllchDCThIYChNT",
            "ZW5kUHJvdG9GcmVxdWVudGx5EMNOEh0KGFBvaXNvbkJvbVBvc2l0aW9uSWRF",
            "cnJvchDEThIaChVQb2lzb25Cb21UaW1lc05vdEZpbmQQxU4SHQoYTm90UmVh",
            "Y2hVbmxvY2tDb25kaXRpb25zEMZOEhgKE0hhc0dldFNjaGVkdWxlQXdhcmQQ",
            "x04SFwoSTm90RmluZFNjaGVkdWxlQ2ZnEMhOEhwKF0J1eU5vc3RydW1MaXF1",
            "aWRPbmx5T25lEMlOEhcKEkhlcm9MZXZlbE5vdFVubG9jaxDKThIWChFOb0V4",
            "aXN0TWVyZ2VTa2lsbBDLThIWChFIYXNOb3RFbm91Z2hTdG9uZRDMThIdChhI",
            "YXNOb3RFbm91Z2hDcnlzdGFsU3RvbmUQzU4SHQoYTm90S2lsbGluZ0Vub3Vn",
            "aE1vbnN0ZXJzEM5OEhUKEE5vdGludDMyb3dlck1vZGUQz04SFAoPTm90aW50",
            "MzJoaXNNb2RlENBOEhQKD05vdEV4aXN0TW9uc3RlchDRThIaChVIYXNIZXJv",
            "T2ZPdGhlclBsYXllcnMQ0k4SFgoRSGFzTm90RW5vdWdoU2NvcmUQ004SFgoR",
            "UG9zaXRpb25Ob0hhc0hlcm8Q1E4SEwoOUGFzc05vTm90RXhpc3QQ1U4SEwoO",
            "Tm90SW5NdWx0aU1vZGUQ1k4SGQoUSGlnaE1vZGVNb25zdGVyTm9DZmcQ104S",
            "GAoTTmlnaHRLaW5nQm9zc0hhc01heBDYThIWChFIZXJvQXBwZWFyZWRJc01h",
            "eBDZThIYChNGYWlsdXJlVG9FbnRlclN0YWdlENpOEhoKFVBvc2l0aW9uSXNP",
            "dGhlclBsYXllchDbThIZChRNdWx0aVRhYmxlU3RhdGVFcnJvchDcThIQCgtJ",
            "bk90aGVyTW9kZRDdThIWChFOb3RFbm91Z2hTdGFnZU51bRDeThIZChROZXdH",
            "dWlkZUhhc0NvbXBsZXRlZBDfThIVChBBY3Rpdml0eU5vdEV4aXN0EOBOEhkK",
            "FEFjdGl2aXR5Tm90Q29uZGl0aW9uEOFOEhgKE0FjdGl2aXR5SGFzR2V0QXdh",
            "cmQQ4k4SGAoTQWN0aXZpdHlJc05vdFdlQ2hhdBDjThIRCgxIYXNPdGhlckhl",
            "cm8Q5E4SFQoQQmF0QnVsbGV0Tm90RmluZBDlThIVChBEcmFnb25Ob3RSZWxl",
            "YXNlEOZOEhUKEERyYWdvbk5vd1JlbGVhc2UQ504SEwoORHJhZ29uQ29vbERv",
            "d24Q6E4SHwoaVHJ1c3RlZXNoaXBEcmFnb25Ob3RSZWFsc2UQ6U4SGwoWRHJh",
            "Z29uQXR0YWNrQ29uZmlnV3JvbhDqThIaChVHaG9zdERyYWdvbk5vdFJlbGVh",
            "c2UQ604SEQoMSW52YWxpZFRva2VuEOxOEh4KGUxvYWRQbGF5ZXJXaXRoUHJv",
            "cHNGYWlsZWQQ7U4SFQoQUGxheWVyRGF0YUZhaWxlZBDuThIYChNFbnRlckdh",
            "bWVOb3RpZnlIYWxsEO9OEhMKDk5vdERyYWdvblByb3BzEPBOEhQKD1ZpcFBy",
            "b3BzRXhwaXJlZBDxThIYChNVc2VIZXJvTmVlZFZpcFByb3BzEPJOEhYKEU5v",
            "dEVub3VnaFZpcExldmVsEPNOEhcKEk5vdEVub3VnaE1hdGVyaWFscxD0ThIW",
            "ChFOb3RFbm91Z2hEaWFtb25kcxD1ThIVChBOb3RGaW5kR3JhZ29uQm94EPZO",
            "EhEKDE5vdEZpbmRHb29kcxD3ThISCg1Hb29kc051bUVycm9yEPhOEhYKEU5v",
            "dEF0dGFja1NhbWVUeXBlEPlOEhUKEEhlcm9NeGxPdmVyTGltaXQQ+k4qSAoI",
            "TW9kZVR5cGUSCQoFU3RhZ2UQABIICgRIaWdoEAESCQoFVG93ZXIQAhIJCgVN",
            "dWx0aRADEggKBE5vbmUQBBIHCgNNYXgQBSpOCghTdGVwVHlwZRIMCghTdGVw",
            "SGlnaBAAEhMKD1N0ZXBVcGdyYWRlSGVybxABEhIKDlN0ZXBHaG9zdExvb25n",
            "EAISCwoHU3RlcE1heBADKjgKCFNob3BUeXBlEgwKCE5vbmVUeXBlEAASDQoJ",
            "TWF0ZXJpYWxzEAESDwoLTWF4U2hvcFR5cGUQAiqJBAoLSGFsbE1zZ0NvZGUS",
            "DwoLSE1DX0ludmFsaWQQABIMCghITUNfQ0hhdBABEhQKEEhNQ19TZXJ2ZXJV",
            "cGRhdGUQAhITCg9ITUNfTWFpbFB1Ymxpc2gQBxIXChNITUNfQXdhcmRHb2xk",
            "VXBkYXRlEAgSHQoZSE1DX1RyaWdnZXJBcmVuYUF3YXJkR29sZBAJEh8KG0hN",
            "Q19Bd2FyZEdvbGRQb29sVHJpZ2dlckxvZxAKEhIKDkhNQ19GcmVzaE1vbmV5",
            "EAsSHAoYSE1DX0JwbFVwZGF0ZUphY2twb3RQb29sEAwSHgoaSE1DX0JwbElu",
            "c2VydEphY2twb3RSZWNvcmQQDRIjCh9ITUNfQWRkQXJlbmFBd2FyZEdvbGRQ",
            "b29sTm90aWZ5EA4SDAoISE1DX1BpbmcQDxIXChNITUNfU2h1dGRvd25TZXJ2",
            "aWNlEBASGgoWSE1DX1RyYW5zZmVyVG9DZWxpbnQzMhAREhgKFEhNQ19DaGVj",
            "a1dlQ2hhdExvZ2luEBISHQoZSE1DX1VzZXJJbmZvVXNlckVudGVyR2FtZRAT",
            "EhwKGEhNQ19Vc2VySW5mb1VzZXJFeGl0R2FtZRAUEhIKDkhNQ19BbnRpbkR1",
            "bGdlEBUSFwoTSE1DX1R1cm50YWJsZVJlY29yZBAWEhkKFUhNQ19HZXRBd2Fy",
            "ZEdvbGRWYWx1ZRAXKrwBChBIYWxsTXNnRXJyb3JDb2RlEhAKDEhNRUNfSW52",
            "YWxpZBAAEg4KCkhNRUNfUGFyYW0QARIRCg1ITUVDX1JlZ2lzdGVyEAISDwoL",
            "SE1FQ19TdWNlc3MQAxIXChNITUVDX1BsYXllck5vdEV4aXN0EAQSGgoWSE1F",
            "Q19EZXNlcmlhbGl6ZUZhaWxlZBAFEhcKE0hNRUNfRnJlc2hVc2VyTW9uZXkQ",
            "BhIUChBITUVDX1N5c3RlbUVycm9yEAdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::JSBY.EMsgIDSubGame), typeof(global::JSBY.ErrCode), typeof(global::JSBY.ModeType), typeof(global::JSBY.StepType), typeof(global::JSBY.ShopType), typeof(global::JSBY.HallMsgCode), typeof(global::JSBY.HallMsgErrorCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.HeroInfo), global::JSBY.HeroInfo.Parser, new[]{ "ID", "Level", "Position", "Unlock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSLoginGameWithToken), global::JSBY.CSLoginGameWithToken.Parser, new[]{ "PlayerId", "Token", "ClientVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCLoginGameWithToken), global::JSBY.SCLoginGameWithToken.Parser, new[]{ "Money", "IsFirstLogin", "UseRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.UserBomTimes), global::JSBY.UserBomTimes.Parser, new[]{ "UsePositionId", "UsePositionTimes", "OverBom", "AllOver" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SpecialMonsterAttack), global::JSBY.SpecialMonsterAttack.Parser, new[]{ "PositionId", "MonsterId", "ChannelId", "ProcessTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSRequestAttack), global::JSBY.CSRequestAttack.Parser, new[]{ "Ratio", "Mode", "MonsterId", "PositionId", "UsePositionId", "UsePositionTimes", "SpecialType", "SpecialInfo", "DragonEnd", "HeroUniqueId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCRequestAttack), global::JSBY.SCRequestAttack.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SpecialAttackInfo), global::JSBY.SpecialAttackInfo.Parser, new[]{ "KillID", "SelfID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCSyncMoney), global::JSBY.SCSyncMoney.Parser, new[]{ "Money", "MonsterId", "PositionId", "Type", "Ratio", "PlayerId", "MoneyVariation", "Bom", "HeroUniqueId", "AttackInfo", "Eared", "AddRatio", "BalloonRatio", "Others", "GiantHitPower", "MxlSealMoney", "MxlSealAddAwardRatio", "BearMultiple" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPoisonBomTimes), global::JSBY.SCPoisonBomTimes.Parser, new[]{ "PositionId", "Times", "Ratio", "AddTimes", "KillPlayerId", "HeroUniqueId", "AttackInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSChangePoisonBomTimes), global::JSBY.CSChangePoisonBomTimes.Parser, new[]{ "PositionId", "UsePositionTimes", "NewPositionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCChangePoisonBomTimes), global::JSBY.SCChangePoisonBomTimes.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSEnterStage), global::JSBY.CSEnterStage.Parser, new[]{ "Enter", "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCEnterStage), global::JSBY.SCEnterStage.Parser, new[]{ "UseRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSKeepRatio), global::JSBY.CSKeepRatio.Parser, new[]{ "Ratio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCKeepRatio), global::JSBY.SCKeepRatio.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TrusteeshipInfo), global::JSBY.TrusteeshipInfo.Parser, new[]{ "IsTrusteeship", "HighSetValue", "HighSetOpen", "LowSetValue", "LowSetOpen", "TimeSetValue", "TimeSetOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetTrusteeship), global::JSBY.CSGetTrusteeship.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetTrusteeship), global::JSBY.SCGetTrusteeship.Parser, new[]{ "Info", "LeftTime", "VIPLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSSetTrusteeship), global::JSBY.CSSetTrusteeship.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCSetTrusteeship), global::JSBY.SCSetTrusteeship.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TrusteeshipMoney), global::JSBY.TrusteeshipMoney.Parser, new[]{ "MonsterType", "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSEndTrusteeship), global::JSBY.CSEndTrusteeship.Parser, new[]{ "Notify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCEndTrusteeship), global::JSBY.SCEndTrusteeship.Parser, new[]{ "Info", "TotalMoney", "TotalTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetVersion), global::JSBY.CSGetVersion.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetVersion), global::JSBY.SCGetVersion.Parser, new[]{ "IsNew" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.ActivityInfo), global::JSBY.ActivityInfo.Parser, new[]{ "ID", "Money", "Enzyme", "Name", "Flag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSActivityInfo), global::JSBY.CSActivityInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCActivityInfo), global::JSBY.SCActivityInfo.Parser, new[]{ "Info", "LeftTime", "Begint32Ime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCNotifyActivityInfo), global::JSBY.SCNotifyActivityInfo.Parser, new[]{ "Info", "LeftTime", "Begint32Ime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetActivityAward), global::JSBY.CSGetActivityAward.Parser, new[]{ "ID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetActivityAward), global::JSBY.SCGetActivityAward.Parser, new[]{ "ID", "Flag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSButtonRecords), global::JSBY.CSButtonRecords.Parser, new[]{ "ID", "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCButtonRecords), global::JSBY.SCButtonRecords.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TowerHeroInfo), global::JSBY.TowerHeroInfo.Parser, new[]{ "HeroId", "PositionId", "IsAtk", "Timestamp", "TargetPositionId", "UniqueId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TowerHeroAtkInfo), global::JSBY.TowerHeroAtkInfo.Parser, new[]{ "HeroPositionId", "IsAtk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TablePlayerInfo), global::JSBY.TablePlayerInfo.Parser, new[]{ "ChairId", "PlayerId", "Money", "Sex", "Name", "Head", "Info", "MoneyVariation", "VipLevel", "IsVip", "Background", "Effect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCNotifyTowerTablePlayer), global::JSBY.SCNotifyTowerTablePlayer.Parser, new[]{ "Info", "TableID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCLeaveTowerTable), global::JSBY.SCLeaveTowerTable.Parser, new[]{ "PlayerId", "IsAgainEnter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TowerMonster), global::JSBY.TowerMonster.Parser, new[]{ "Position", "ProcessTime", "ReadyTime", "MonsterID", "Buff", "IsConnect", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.ChannelTowerMonster), global::JSBY.ChannelTowerMonster.Parser, new[]{ "ChannelId", "ChannelInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetTowerMonster), global::JSBY.SCGetTowerMonster.Parser, new[]{ "ReqPlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetTowerMonster), global::JSBY.CSGetTowerMonster.Parser, new[]{ "ReqPlayerId", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCSyncGetTowerMonster), global::JSBY.SCSyncGetTowerMonster.Parser, new[]{ "TableID", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCTowerMonster), global::JSBY.SCTowerMonster.Parser, new[]{ "TableID", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSTowerHeroAtkInfo), global::JSBY.CSTowerHeroAtkInfo.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCTowerHeroAtkInfo), global::JSBY.SCTowerHeroAtkInfo.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSTowerUpdateHero), global::JSBY.CSTowerUpdateHero.Parser, new[]{ "Info", "Leave" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCTowerUpdateHero), global::JSBY.SCTowerUpdateHero.Parser, new[]{ "UniqueId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushTowerUpdateHero), global::JSBY.SCPushTowerUpdateHero.Parser, new[]{ "Info", "ReqPlayerId", "Leave" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.LockTargetInfo), global::JSBY.LockTargetInfo.Parser, new[]{ "PositionId", "TargetPositionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSTowerPlayerLockTarget), global::JSBY.CSTowerPlayerLockTarget.Parser, new[]{ "LockInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCTowerPlayerLockTarget), global::JSBY.SCTowerPlayerLockTarget.Parser, new[]{ "LockInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSChangeBackground), global::JSBY.CSChangeBackground.Parser, new[]{ "IsBack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCChangeBackground), global::JSBY.SCChangeBackground.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSTowerMonsterExit), global::JSBY.CSTowerMonsterExit.Parser, new[]{ "PositionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCTowerMonsterExit), global::JSBY.SCTowerMonsterExit.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetCurrentTime), global::JSBY.CSGetCurrentTime.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetCurrentTime), global::JSBY.SCGetCurrentTime.Parser, new[]{ "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TowerGuideInfo), global::JSBY.TowerGuideInfo.Parser, new[]{ "GuideStep", "IsFinsh" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetTowerStep), global::JSBY.CSGetTowerStep.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetTowerGuide), global::JSBY.SCGetTowerGuide.Parser, new[]{ "GuideInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSSetTowerStep), global::JSBY.CSSetTowerStep.Parser, new[]{ "GuideInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCSetTowerStep), global::JSBY.SCSetTowerStep.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSTowerExchangeHero), global::JSBY.CSTowerExchangeHero.Parser, new[]{ "NewPositionId", "OldPositionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCTowerExchangeHero), global::JSBY.SCTowerExchangeHero.Parser, new[]{ "NewPositionId", "OldPositionId", "ReqPlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCLeaveTowerTableCountdown), global::JSBY.SCLeaveTowerTableCountdown.Parser, new[]{ "TableID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.PoisonBombLocation), global::JSBY.PoisonBombLocation.Parser, new[]{ "ID", "X", "Y", "Angle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSPoisonBombLocation), global::JSBY.CSPoisonBombLocation.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPoisonBombLocation), global::JSBY.SCPoisonBombLocation.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.PoisonbombConvert), global::JSBY.PoisonbombConvert.Parser, new[]{ "MonsterId", "PositionId", "PoisonBombId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPoisonBombConvert), global::JSBY.SCPoisonBombConvert.Parser, new[]{ "PoisonBombId", "Info", "KillPlayerID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.PoisonbombType), global::JSBY.PoisonbombType.Parser, new[]{ "MonsterId", "MasterPoisonBombId", "PoisonBombId", "KillPlayerId", "ChannelId", "ProcessTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPoisonbombTypes), global::JSBY.SCPoisonbombTypes.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSDragonRelease), global::JSBY.CSDragonRelease.Parser, new[]{ "Ratio", "PropsID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCDragonRelease), global::JSBY.SCDragonRelease.Parser, new[]{ "StartTime", "PlayerId", "AttackInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushDragonRelease), global::JSBY.SCPushDragonRelease.Parser, new[]{ "StartTime", "PlayerId", "AttackInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushDragonEnd), global::JSBY.SCPushDragonEnd.Parser, new[]{ "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushSelfDragonState), global::JSBY.SCPushSelfDragonState.Parser, new[]{ "ProgressBarCount", "ProgressBar", "PropsID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSOneKeyUpdateHero), global::JSBY.CSOneKeyUpdateHero.Parser, new[]{ "HeroId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCOneKeyUpdateHero), global::JSBY.SCOneKeyUpdateHero.Parser, new[]{ "PlayerId", "LeaveInfo", "UpdateInfo", "TableId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushGhostDragonRelease), global::JSBY.SCPushGhostDragonRelease.Parser, new[]{ "StartTime", "PlayerId", "PositionId", "AttackCount", "UseCount", "Ratio", "AttackInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushGhostDragonEnd), global::JSBY.SCPushGhostDragonEnd.Parser, new[]{ "PlayerId", "TableID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushSelfGhostDragonState), global::JSBY.SCPushSelfGhostDragonState.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.HeroMoney), global::JSBY.HeroMoney.Parser, new[]{ "UniqueId", "PlayerId", "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushSyncHeroMoney), global::JSBY.SCPushSyncHeroMoney.Parser, new[]{ "HeroMoney" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushMonsterDead), global::JSBY.SCPushMonsterDead.Parser, new[]{ "PositionID", "TableID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSDebugData), global::JSBY.CSDebugData.Parser, new[]{ "DebugData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCDebugData), global::JSBY.SCDebugData.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushMonsterBuff), global::JSBY.SCPushMonsterBuff.Parser, new[]{ "PositionID", "BuffType", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.TableState), global::JSBY.TableState.Parser, new[]{ "TableId", "TablePlayer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetTableId), global::JSBY.CSGetTableId.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetTableId), global::JSBY.SCGetTableId.Parser, new[]{ "TableId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPlayerVipLevel), global::JSBY.SCPlayerVipLevel.Parser, new[]{ "PlayerId", "Level", "IsVip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.DragonProps), global::JSBY.DragonProps.Parser, new[]{ "ProgressBarCount", "ProgressBar", "PropsID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetDragonProps), global::JSBY.CSGetDragonProps.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetDragonProps), global::JSBY.SCGetDragonProps.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSEquipDragonProps), global::JSBY.CSEquipDragonProps.Parser, new[]{ "PropsID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCEquipDragonProps), global::JSBY.SCEquipDragonProps.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushDragonProps), global::JSBY.SCPushDragonProps.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.ShopInfo), global::JSBY.ShopInfo.Parser, new[]{ "ShopID", "Name", "Value", "CurrencyType", "Price", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetShopInfo), global::JSBY.CSGetShopInfo.Parser, new[]{ "ShopInfoType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetShopInfo), global::JSBY.SCGetShopInfo.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.PropsInfo), global::JSBY.PropsInfo.Parser, new[]{ "PropsID", "TotalNum", "AddNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushPropsInfo), global::JSBY.SCPushPropsInfo.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSGetMaterialsInfo), global::JSBY.CSGetMaterialsInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGetMaterialsInfo), global::JSBY.SCGetMaterialsInfo.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSExchangeBox), global::JSBY.CSExchangeBox.Parser, new[]{ "TypeID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.RewardInfo), global::JSBY.RewardInfo.Parser, new[]{ "PropID", "PropNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCExchangeBox), global::JSBY.SCExchangeBox.Parser, new[]{ "TypeID", "ID", "Reward", "AddReward", "DoublingCost" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSDoublingBox), global::JSBY.CSDoublingBox.Parser, new[]{ "IsDoubling" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCDoublingBox), global::JSBY.SCDoublingBox.Parser, new[]{ "IsDouble", "ID", "Reward", "AddReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSShopBuy), global::JSBY.CSShopBuy.Parser, new[]{ "PropsID", "PropsNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCShopBuy), global::JSBY.SCShopBuy.Parser, new[]{ "PropsID", "PropsNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.MaterialsInfo), global::JSBY.MaterialsInfo.Parser, new[]{ "PositionId", "PropsID", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushDropMaterials), global::JSBY.SCPushDropMaterials.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushBalloonTimes), global::JSBY.SCPushBalloonTimes.Parser, new[]{ "PositionId", "PlayerId", "FreeTimes", "Ratio", "StartTime", "AttackCount", "AttackInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SwitchInfo), global::JSBY.SwitchInfo.Parser, new[]{ "Id", "Open" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCFunctionSwitch), global::JSBY.SCFunctionSwitch.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.CSSealConvertMoney), global::JSBY.CSSealConvertMoney.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCSealConvertMoney), global::JSBY.SCSealConvertMoney.Parser, new[]{ "PlayerId", "Seal", "Money" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.ConnectMonster), global::JSBY.ConnectMonster.Parser, new[]{ "PositionID", "MonsterID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushConnectMonster), global::JSBY.SCPushConnectMonster.Parser, new[]{ "Connect", "ConnectID", "AttackPositionID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCGiantUpgrade), global::JSBY.SCGiantUpgrade.Parser, new[]{ "PlayerId", "PositionId", "Level", "AttackTimes", "AttackInfo", "IsOver", "Ratio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCPushGiantEnd), global::JSBY.SCPushGiantEnd.Parser, new[]{ "PlayerId", "PositionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCDropCard), global::JSBY.SCDropCard.Parser, new[]{ "ID", "TypeID", "Quality", "BasePower", "ExtendPower", "Equip", "PositionID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.SCAcquireSeal), global::JSBY.SCAcquireSeal.Parser, new[]{ "PlayerId", "MxlSealAddAwardRatio", "HeroPositionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.FreshMoney), global::JSBY.FreshMoney.Parser, new[]{ "PlayerId", "Fee", "GameID", "CYMoney" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JSBY.ShutdownService), global::JSBY.ShutdownService.Parser, new[]{ "GameID", "ArenaID", "ServerID" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EMsgIDSubGame {
    [pbr::OriginalName("Req_Invalid")] ReqInvalid = 0,
    [pbr::OriginalName("Req_Ping")] ReqPing = 1000,
    [pbr::OriginalName("Req_LoginGameWithToken")] ReqLoginGameWithToken = 1001,
    [pbr::OriginalName("Req_LogoutGame")] ReqLogoutGame = 1002,
    [pbr::OriginalName("Push_LogoutGame")] PushLogoutGame = 1003,
    [pbr::OriginalName("Req_RequestAttack")] ReqRequestAttack = 1004,
    [pbr::OriginalName("Push_SyncMoney")] PushSyncMoney = 1005,
    [pbr::OriginalName("Push_SyncFreeTimes")] PushSyncFreeTimes = 1006,
    [pbr::OriginalName("Req_UpdateHeroInfo")] ReqUpdateHeroInfo = 1007,
    [pbr::OriginalName("Req_UpgradeHeroInfo")] ReqUpgradeHeroInfo = 1008,
    [pbr::OriginalName("Req_EnterStage")] ReqEnterStage = 1009,
    [pbr::OriginalName("Push_PoisonBomTimes")] PushPoisonBomTimes = 1028,
    [pbr::OriginalName("Req_GetTrusteeship")] ReqGetTrusteeship = 1029,
    [pbr::OriginalName("Req_SetTrusteeship")] ReqSetTrusteeship = 1030,
    [pbr::OriginalName("Req_EndTrusteeship")] ReqEndTrusteeship = 1031,
    [pbr::OriginalName("Push_EndTrusteeship")] PushEndTrusteeship = 1032,
    [pbr::OriginalName("Req_GetVersion")] ReqGetVersion = 1039,
    [pbr::OriginalName("Req_ChangePoisonBomTimes")] ReqChangePoisonBomTimes = 1040,
    [pbr::OriginalName("Req_KeepRatio")] ReqKeepRatio = 1044,
    [pbr::OriginalName("Push_LeaveTowerTable")] PushLeaveTowerTable = 1046,
    [pbr::OriginalName("Push_NotifyTowerTablePlayer")] PushNotifyTowerTablePlayer = 1047,
    [pbr::OriginalName("Push_GetTowerMonster")] PushGetTowerMonster = 1048,
    [pbr::OriginalName("Req_GetTowerMonster")] ReqGetTowerMonster = 1049,
    [pbr::OriginalName("Push_TowerMonster")] PushTowerMonster = 1050,
    [pbr::OriginalName("Req_TowerHeroAtkInfo")] ReqTowerHeroAtkInfo = 1051,
    [pbr::OriginalName("Push_TowerHeroAtkInfo")] PushTowerHeroAtkInfo = 1052,
    [pbr::OriginalName("Req_TowerUpdateHero")] ReqTowerUpdateHero = 1053,
    [pbr::OriginalName("Push_TowerUpdateHero")] PushTowerUpdateHero = 1054,
    [pbr::OriginalName("Req_TowerPlayerLockTarget")] ReqTowerPlayerLockTarget = 1055,
    [pbr::OriginalName("Push_TowerPlayerLockTarget")] PushTowerPlayerLockTarget = 1056,
    [pbr::OriginalName("Req_ChangeBackground")] ReqChangeBackground = 1057,
    [pbr::OriginalName("Req_GetCurrentTime")] ReqGetCurrentTime = 1058,
    [pbr::OriginalName("Push_SyncGetTowerMonster")] PushSyncGetTowerMonster = 1070,
    [pbr::OriginalName("Req_TowerMonsterExit")] ReqTowerMonsterExit = 1079,
    [pbr::OriginalName("Req_GetTowerNewGuide")] ReqGetTowerNewGuide = 1081,
    [pbr::OriginalName("Req_SetTowerNewGuide")] ReqSetTowerNewGuide = 1082,
    [pbr::OriginalName("Req_ActivityInfo")] ReqActivityInfo = 1083,
    [pbr::OriginalName("Push_NotifyActivityInfo")] PushNotifyActivityInfo = 1084,
    [pbr::OriginalName("Req_GetActivityAward")] ReqGetActivityAward = 1085,
    [pbr::OriginalName("Req_TowerExchangeHero")] ReqTowerExchangeHero = 1089,
    [pbr::OriginalName("Push_TowerExchangeHero")] PushTowerExchangeHero = 1099,
    [pbr::OriginalName("Req_ButtonRecords")] ReqButtonRecords = 1100,
    [pbr::OriginalName("Push_SyncBatBulletInfo")] PushSyncBatBulletInfo = 1101,
    [pbr::OriginalName("Push_LeaveTowerTableCountdown")] PushLeaveTowerTableCountdown = 1102,
    [pbr::OriginalName("Req_PoisonBombLocation")] ReqPoisonBombLocation = 1103,
    [pbr::OriginalName("Push_PoisonBombLocation")] PushPoisonBombLocation = 1104,
    [pbr::OriginalName("Push_PoisonBombConvert")] PushPoisonBombConvert = 1105,
    [pbr::OriginalName("Push_PoisonBombType")] PushPoisonBombType = 1106,
    [pbr::OriginalName("Req_DragonRelease")] ReqDragonRelease = 1107,
    [pbr::OriginalName("Push_DragonRelease")] PushDragonRelease = 1108,
    [pbr::OriginalName("Push_DragonEnd")] PushDragonEnd = 1109,
    [pbr::OriginalName("Push_SelfDragonState")] PushSelfDragonState = 1110,
    [pbr::OriginalName("Req_OneKeyUpdateHero")] ReqOneKeyUpdateHero = 1111,
    [pbr::OriginalName("Push_OneKeyUpdateHero")] PushOneKeyUpdateHero = 1112,
    [pbr::OriginalName("Push_GhostDragonRelease")] PushGhostDragonRelease = 1113,
    [pbr::OriginalName("Push_GhostDragonEnd")] PushGhostDragonEnd = 1114,
    [pbr::OriginalName("Push_SelfGhostDragonState")] PushSelfGhostDragonState = 1115,
    [pbr::OriginalName("Push_SyncHeroMoney")] PushSyncHeroMoney = 1116,
    [pbr::OriginalName("Push_PushMonsterDead")] PushPushMonsterDead = 1117,
    [pbr::OriginalName("Req_DebugData")] ReqDebugData = 1118,
    [pbr::OriginalName("Push_PushMonsterBuff")] PushPushMonsterBuff = 1119,
    [pbr::OriginalName("Req_GetTableId")] ReqGetTableId = 1120,
    [pbr::OriginalName("Push_PlayerVipLevel")] PushPlayerVipLevel = 1121,
    [pbr::OriginalName("Req_GetDragonProps")] ReqGetDragonProps = 1122,
    [pbr::OriginalName("Req_EquipDragonProps")] ReqEquipDragonProps = 1123,
    [pbr::OriginalName("Push_DragonProps")] PushDragonProps = 1124,
    [pbr::OriginalName("Req_GetShopInfo")] ReqGetShopInfo = 1125,
    [pbr::OriginalName("Push_PropsInfo")] PushPropsInfo = 1126,
    [pbr::OriginalName("Req_GetMaterialsInfo")] ReqGetMaterialsInfo = 1127,
    [pbr::OriginalName("Req_ExchangeBox")] ReqExchangeBox = 1128,
    [pbr::OriginalName("Req_DoublingBox")] ReqDoublingBox = 1129,
    [pbr::OriginalName("Req_ShopBuy")] ReqShopBuy = 1130,
    [pbr::OriginalName("Push_DropMaterials")] PushDropMaterials = 1131,
    [pbr::OriginalName("Push_BalloonTimes")] PushBalloonTimes = 1132,
    [pbr::OriginalName("Push_FunctionSwitch")] PushFunctionSwitch = 1133,
    [pbr::OriginalName("Push_ConnectMonster")] PushConnectMonster = 1134,
    [pbr::OriginalName("Push_GiantUpgrade")] PushGiantUpgrade = 1140,
    [pbr::OriginalName("Push_PushGiantEnd")] PushPushGiantEnd = 1141,
    [pbr::OriginalName("Push_DropCard")] PushDropCard = 1142,
    [pbr::OriginalName("Push_AcquireMxlSeal")] PushAcquireMxlSeal = 1143,
    [pbr::OriginalName("Req_SealConvertMoney")] ReqSealConvertMoney = 1144,
  }

  public enum ErrCode {
    [pbr::OriginalName("Success")] Success = 0,
    [pbr::OriginalName("EnterRoomIsClosing")] EnterRoomIsClosing = 999,
    [pbr::OriginalName("QPEnterRoomFailed")] QpenterRoomFailed = 10001,
    [pbr::OriginalName("QPBaseUserInfoGetFailed")] QpbaseUserInfoGetFailed = 10002,
    [pbr::OriginalName("QPReadGoldFailed")] QpreadGoldFailed = 10003,
    [pbr::OriginalName("LackMoneyInServer")] LackMoneyInServer = 10004,
    [pbr::OriginalName("LoadPlayerDataFailed")] LoadPlayerDataFailed = 10005,
    [pbr::OriginalName("ParameterIsWrong")] ParameterIsWrong = 10006,
    [pbr::OriginalName("LackOfMoney")] LackOfMoney = 10007,
    [pbr::OriginalName("DeserializeFailed")] DeserializeFailed = 10008,
    [pbr::OriginalName("CreatePlayerFailed")] CreatePlayerFailed = 10009,
    [pbr::OriginalName("PlayerNotExist")] PlayerNotExist = 10010,
    [pbr::OriginalName("PlayerAlreadyLogin")] PlayerAlreadyLogin = 10011,
    [pbr::OriginalName("ConfigNoHasHero")] ConfigNoHasHero = 10012,
    [pbr::OriginalName("PlayerNoHasHero")] PlayerNoHasHero = 10013,
    [pbr::OriginalName("HeroPositionError")] HeroPositionError = 10014,
    [pbr::OriginalName("HeroHasUpgradeMaxLevel")] HeroHasUpgradeMaxLevel = 10015,
    [pbr::OriginalName("HasNotEnoughEnzyme")] HasNotEnoughEnzyme = 10016,
    [pbr::OriginalName("ConfigNoHasMonster")] ConfigNoHasMonster = 10017,
    [pbr::OriginalName("HeroUpdateFailed")] HeroUpdateFailed = 10018,
    [pbr::OriginalName("HeroHasExist")] HeroHasExist = 10019,
    [pbr::OriginalName("AttackMonsterFailed")] AttackMonsterFailed = 10020,
    [pbr::OriginalName("MonsterScoreErr")] MonsterScoreErr = 10021,
    [pbr::OriginalName("NotFindLiquidMedicine")] NotFindLiquidMedicine = 10022,
    [pbr::OriginalName("HasNotEnoughLiquidMedicine")] HasNotEnoughLiquidMedicine = 10023,
    [pbr::OriginalName("NotFindLaboratory")] NotFindLaboratory = 10024,
    [pbr::OriginalName("LaboratoryUpgradeMaxLevel")] LaboratoryUpgradeMaxLevel = 10025,
    [pbr::OriginalName("NotFindLevelUnlockEquation")] NotFindLevelUnlockEquation = 10026,
    [pbr::OriginalName("UnlockParameterError")] UnlockParameterError = 10027,
    [pbr::OriginalName("LaboratoryNotUnlock")] LaboratoryNotUnlock = 10028,
    [pbr::OriginalName("NotFindEnzymeEquation")] NotFindEnzymeEquation = 10029,
    [pbr::OriginalName("LaboratoryNotReachUnlockLevel")] LaboratoryNotReachUnlockLevel = 10030,
    [pbr::OriginalName("LaboratoryHasUnlock")] LaboratoryHasUnlock = 10031,
    [pbr::OriginalName("NotFindDailyTask")] NotFindDailyTask = 10032,
    [pbr::OriginalName("NotFindDailyTaskCfg")] NotFindDailyTaskCfg = 10033,
    [pbr::OriginalName("HasGetDailyTaskAward")] HasGetDailyTaskAward = 10034,
    [pbr::OriginalName("NoReachDailyTaskCondition")] NoReachDailyTaskCondition = 10035,
    [pbr::OriginalName("NoReachDailyTaskSchedule")] NoReachDailyTaskSchedule = 10036,
    [pbr::OriginalName("DailyTaskIDError")] DailyTaskIderror = 10037,
    [pbr::OriginalName("ReachDailyTaskOver")] ReachDailyTaskOver = 10038,
    [pbr::OriginalName("IsNotStageMode")] IsNotStageMode = 10039,
    [pbr::OriginalName("ModeNotExistMoster")] ModeNotExistMoster = 10040,
    [pbr::OriginalName("NoExistGhostLoong")] NoExistGhostLoong = 10041,
    [pbr::OriginalName("BuyLiquidMedicineMaxTimes")] BuyLiquidMedicineMaxTimes = 10042,
    [pbr::OriginalName("HighModeMonsterSetError")] HighModeMonsterSetError = 10043,
    [pbr::OriginalName("MonsterHasKill")] MonsterHasKill = 10044,
    [pbr::OriginalName("TrusteeshipIsEnd")] TrusteeshipIsEnd = 10045,
    [pbr::OriginalName("TrusteeshipCfgError")] TrusteeshipCfgError = 10046,
    [pbr::OriginalName("TrusteeshipNoVIPLevel")] TrusteeshipNoViplevel = 10047,
    [pbr::OriginalName("NotUseSameLiquid")] NotUseSameLiquid = 10048,
    [pbr::OriginalName("PlayerNotTrusteeship")] PlayerNotTrusteeship = 10049,
    [pbr::OriginalName("ExistWaitPlayer")] ExistWaitPlayer = 10050,
    [pbr::OriginalName("SendProtoFrequently")] SendProtoFrequently = 10051,
    [pbr::OriginalName("PoisonBomPositionIdError")] PoisonBomPositionIdError = 10052,
    [pbr::OriginalName("PoisonBomTimesNotFind")] PoisonBomTimesNotFind = 10053,
    [pbr::OriginalName("NotReachUnlockConditions")] NotReachUnlockConditions = 10054,
    [pbr::OriginalName("HasGetScheduleAward")] HasGetScheduleAward = 10055,
    [pbr::OriginalName("NotFindScheduleCfg")] NotFindScheduleCfg = 10056,
    [pbr::OriginalName("BuyNostrumLiquidOnlyOne")] BuyNostrumLiquidOnlyOne = 10057,
    [pbr::OriginalName("HeroLevelNotUnlock")] HeroLevelNotUnlock = 10058,
    [pbr::OriginalName("NoExistMergeSkill")] NoExistMergeSkill = 10059,
    [pbr::OriginalName("HasNotEnoughStone")] HasNotEnoughStone = 10060,
    [pbr::OriginalName("HasNotEnoughCrystalStone")] HasNotEnoughCrystalStone = 10061,
    [pbr::OriginalName("NotKillingEnoughMonsters")] NotKillingEnoughMonsters = 10062,
    [pbr::OriginalName("Notint32owerMode")] Notint32OwerMode = 10063,
    [pbr::OriginalName("Notint32hisMode")] Notint32HisMode = 10064,
    [pbr::OriginalName("NotExistMonster")] NotExistMonster = 10065,
    [pbr::OriginalName("HasHeroOfOtherPlayers")] HasHeroOfOtherPlayers = 10066,
    [pbr::OriginalName("HasNotEnoughScore")] HasNotEnoughScore = 10067,
    [pbr::OriginalName("PositionNoHasHero")] PositionNoHasHero = 10068,
    [pbr::OriginalName("PassNoNotExist")] PassNoNotExist = 10069,
    [pbr::OriginalName("NotInMultiMode")] NotInMultiMode = 10070,
    [pbr::OriginalName("HighModeMonsterNoCfg")] HighModeMonsterNoCfg = 10071,
    [pbr::OriginalName("NightKingBossHasMax")] NightKingBossHasMax = 10072,
    [pbr::OriginalName("HeroAppearedIsMax")] HeroAppearedIsMax = 10073,
    [pbr::OriginalName("FailureToEnterStage")] FailureToEnterStage = 10074,
    [pbr::OriginalName("PositionIsOtherPlayer")] PositionIsOtherPlayer = 10075,
    [pbr::OriginalName("MultiTableStateError")] MultiTableStateError = 10076,
    [pbr::OriginalName("InOtherMode")] InOtherMode = 10077,
    [pbr::OriginalName("NotEnoughStageNum")] NotEnoughStageNum = 10078,
    [pbr::OriginalName("NewGuideHasCompleted")] NewGuideHasCompleted = 10079,
    [pbr::OriginalName("ActivityNotExist")] ActivityNotExist = 10080,
    [pbr::OriginalName("ActivityNotCondition")] ActivityNotCondition = 10081,
    [pbr::OriginalName("ActivityHasGetAward")] ActivityHasGetAward = 10082,
    [pbr::OriginalName("ActivityIsNotWeChat")] ActivityIsNotWeChat = 10083,
    [pbr::OriginalName("HasOtherHero")] HasOtherHero = 10084,
    [pbr::OriginalName("BatBulletNotFind")] BatBulletNotFind = 10085,
    [pbr::OriginalName("DragonNotRelease")] DragonNotRelease = 10086,
    [pbr::OriginalName("DragonNowRelease")] DragonNowRelease = 10087,
    [pbr::OriginalName("DragonCoolDown")] DragonCoolDown = 10088,
    [pbr::OriginalName("TrusteeshipDragonNotRealse")] TrusteeshipDragonNotRealse = 10089,
    [pbr::OriginalName("DragonAttackConfigWron")] DragonAttackConfigWron = 10090,
    [pbr::OriginalName("GhostDragonNotRelease")] GhostDragonNotRelease = 10091,
    [pbr::OriginalName("InvalidToken")] InvalidToken = 10092,
    [pbr::OriginalName("LoadPlayerWithPropsFailed")] LoadPlayerWithPropsFailed = 10093,
    [pbr::OriginalName("PlayerDataFailed")] PlayerDataFailed = 10094,
    [pbr::OriginalName("EnterGameNotifyHall")] EnterGameNotifyHall = 10095,
    [pbr::OriginalName("NotDragonProps")] NotDragonProps = 10096,
    [pbr::OriginalName("VipPropsExpired")] VipPropsExpired = 10097,
    [pbr::OriginalName("UseHeroNeedVipProps")] UseHeroNeedVipProps = 10098,
    [pbr::OriginalName("NotEnoughVipLevel")] NotEnoughVipLevel = 10099,
    [pbr::OriginalName("NotEnoughMaterials")] NotEnoughMaterials = 10100,
    [pbr::OriginalName("NotEnoughDiamonds")] NotEnoughDiamonds = 10101,
    [pbr::OriginalName("NotFindGragonBox")] NotFindGragonBox = 10102,
    [pbr::OriginalName("NotFindGoods")] NotFindGoods = 10103,
    [pbr::OriginalName("GoodsNumError")] GoodsNumError = 10104,
    [pbr::OriginalName("NotAttackSameType")] NotAttackSameType = 10105,
    [pbr::OriginalName("HeroMxlOverLimit")] HeroMxlOverLimit = 10106,
  }

  public enum ModeType {
    [pbr::OriginalName("Stage")] Stage = 0,
    [pbr::OriginalName("High")] High = 1,
    [pbr::OriginalName("Tower")] Tower = 2,
    [pbr::OriginalName("Multi")] Multi = 3,
    [pbr::OriginalName("None")] None = 4,
    [pbr::OriginalName("Max")] Max = 5,
  }

  public enum StepType {
    [pbr::OriginalName("StepHigh")] StepHigh = 0,
    [pbr::OriginalName("StepUpgradeHero")] StepUpgradeHero = 1,
    [pbr::OriginalName("StepGhostLoong")] StepGhostLoong = 2,
    [pbr::OriginalName("StepMax")] StepMax = 3,
  }

  public enum ShopType {
    [pbr::OriginalName("NoneType")] NoneType = 0,
    [pbr::OriginalName("Materials")] Materials = 1,
    [pbr::OriginalName("MaxShopType")] MaxShopType = 2,
  }

  public enum HallMsgCode {
    [pbr::OriginalName("HMC_Invalid")] HmcInvalid = 0,
    [pbr::OriginalName("HMC_CHat")] HmcChat = 1,
    [pbr::OriginalName("HMC_ServerUpdate")] HmcServerUpdate = 2,
    [pbr::OriginalName("HMC_MailPublish")] HmcMailPublish = 7,
    [pbr::OriginalName("HMC_AwardGoldUpdate")] HmcAwardGoldUpdate = 8,
    [pbr::OriginalName("HMC_TriggerArenaAwardGold")] HmcTriggerArenaAwardGold = 9,
    [pbr::OriginalName("HMC_AwardGoldPoolTriggerLog")] HmcAwardGoldPoolTriggerLog = 10,
    [pbr::OriginalName("HMC_FreshMoney")] HmcFreshMoney = 11,
    [pbr::OriginalName("HMC_BplUpdateJackpotPool")] HmcBplUpdateJackpotPool = 12,
    [pbr::OriginalName("HMC_BplInsertJackpotRecord")] HmcBplInsertJackpotRecord = 13,
    [pbr::OriginalName("HMC_AddArenaAwardGoldPoolNotify")] HmcAddArenaAwardGoldPoolNotify = 14,
    [pbr::OriginalName("HMC_Ping")] HmcPing = 15,
    [pbr::OriginalName("HMC_ShutdownService")] HmcShutdownService = 16,
    [pbr::OriginalName("HMC_TransferToCelint32")] HmcTransferToCelint32 = 17,
    [pbr::OriginalName("HMC_CheckWeChatLogin")] HmcCheckWeChatLogin = 18,
    [pbr::OriginalName("HMC_UserInfoUserEnterGame")] HmcUserInfoUserEnterGame = 19,
    [pbr::OriginalName("HMC_UserInfoUserExitGame")] HmcUserInfoUserExitGame = 20,
    [pbr::OriginalName("HMC_AntinDulge")] HmcAntinDulge = 21,
    [pbr::OriginalName("HMC_TurntableRecord")] HmcTurntableRecord = 22,
    [pbr::OriginalName("HMC_GetAwardGoldValue")] HmcGetAwardGoldValue = 23,
  }

  public enum HallMsgErrorCode {
    [pbr::OriginalName("HMEC_Invalid")] HmecInvalid = 0,
    [pbr::OriginalName("HMEC_Param")] HmecParam = 1,
    [pbr::OriginalName("HMEC_Register")] HmecRegister = 2,
    [pbr::OriginalName("HMEC_Sucess")] HmecSucess = 3,
    [pbr::OriginalName("HMEC_PlayerNotExist")] HmecPlayerNotExist = 4,
    [pbr::OriginalName("HMEC_DeserializeFailed")] HmecDeserializeFailed = 5,
    [pbr::OriginalName("HMEC_FreshUserMoney")] HmecFreshUserMoney = 6,
    [pbr::OriginalName("HMEC_SystemError")] HmecSystemError = 7,
  }

  #endregion

  #region Messages
  public sealed partial class HeroInfo : pb::IMessage<HeroInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeroInfo> _parser = new pb::MessageParser<HeroInfo>(() => new HeroInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfo(HeroInfo other) : this() {
      iD_ = other.iD_;
      level_ = other.level_;
      position_ = other.position_;
      unlock_ = other.unlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroInfo Clone() {
      return new HeroInfo(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 3;
    private int position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "Unlock" field.</summary>
    public const int UnlockFieldNumber = 4;
    private int unlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unlock {
      get { return unlock_; }
      set {
        unlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Level != other.Level) return false;
      if (Position != other.Position) return false;
      if (Unlock != other.Unlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Position != 0) hash ^= Position.GetHashCode();
      if (Unlock != 0) hash ^= Unlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Position != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Position);
      }
      if (Unlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Unlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Position != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Position);
      }
      if (Unlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Unlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Position != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Position);
      }
      if (Unlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroInfo other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Position != 0) {
        Position = other.Position;
      }
      if (other.Unlock != 0) {
        Unlock = other.Unlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            Position = input.ReadInt32();
            break;
          }
          case 32: {
            Unlock = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            Position = input.ReadInt32();
            break;
          }
          case 32: {
            Unlock = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLoginGameWithToken : pb::IMessage<CSLoginGameWithToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLoginGameWithToken> _parser = new pb::MessageParser<CSLoginGameWithToken>(() => new CSLoginGameWithToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLoginGameWithToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLoginGameWithToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLoginGameWithToken(CSLoginGameWithToken other) : this() {
      playerId_ = other.playerId_;
      token_ = other.token_;
      clientVersion_ = other.clientVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLoginGameWithToken Clone() {
      return new CSLoginGameWithToken(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 3;
    private string clientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLoginGameWithToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLoginGameWithToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Token != other.Token) return false;
      if (ClientVersion != other.ClientVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLoginGameWithToken other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            ClientVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26: {
            ClientVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLoginGameWithToken : pb::IMessage<SCLoginGameWithToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLoginGameWithToken> _parser = new pb::MessageParser<SCLoginGameWithToken>(() => new SCLoginGameWithToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLoginGameWithToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLoginGameWithToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLoginGameWithToken(SCLoginGameWithToken other) : this() {
      money_ = other.money_;
      isFirstLogin_ = other.isFirstLogin_;
      useRatio_ = other.useRatio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLoginGameWithToken Clone() {
      return new SCLoginGameWithToken(this);
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 1;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "IsFirstLogin" field.</summary>
    public const int IsFirstLoginFieldNumber = 2;
    private int isFirstLogin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsFirstLogin {
      get { return isFirstLogin_; }
      set {
        isFirstLogin_ = value;
      }
    }

    /// <summary>Field number for the "UseRatio" field.</summary>
    public const int UseRatioFieldNumber = 3;
    private int useRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UseRatio {
      get { return useRatio_; }
      set {
        useRatio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLoginGameWithToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLoginGameWithToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Money != other.Money) return false;
      if (IsFirstLogin != other.IsFirstLogin) return false;
      if (UseRatio != other.UseRatio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Money != 0) hash ^= Money.GetHashCode();
      if (IsFirstLogin != 0) hash ^= IsFirstLogin.GetHashCode();
      if (UseRatio != 0) hash ^= UseRatio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Money != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Money);
      }
      if (IsFirstLogin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IsFirstLogin);
      }
      if (UseRatio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UseRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Money != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Money);
      }
      if (IsFirstLogin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IsFirstLogin);
      }
      if (UseRatio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UseRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (IsFirstLogin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsFirstLogin);
      }
      if (UseRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseRatio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLoginGameWithToken other) {
      if (other == null) {
        return;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.IsFirstLogin != 0) {
        IsFirstLogin = other.IsFirstLogin;
      }
      if (other.UseRatio != 0) {
        UseRatio = other.UseRatio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Money = input.ReadInt32();
            break;
          }
          case 16: {
            IsFirstLogin = input.ReadInt32();
            break;
          }
          case 24: {
            UseRatio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Money = input.ReadInt32();
            break;
          }
          case 16: {
            IsFirstLogin = input.ReadInt32();
            break;
          }
          case 24: {
            UseRatio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserBomTimes : pb::IMessage<UserBomTimes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserBomTimes> _parser = new pb::MessageParser<UserBomTimes>(() => new UserBomTimes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserBomTimes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBomTimes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBomTimes(UserBomTimes other) : this() {
      usePositionId_ = other.usePositionId_;
      usePositionTimes_ = other.usePositionTimes_;
      overBom_ = other.overBom_;
      allOver_ = other.allOver_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBomTimes Clone() {
      return new UserBomTimes(this);
    }

    /// <summary>Field number for the "UsePositionId" field.</summary>
    public const int UsePositionIdFieldNumber = 1;
    private int usePositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsePositionId {
      get { return usePositionId_; }
      set {
        usePositionId_ = value;
      }
    }

    /// <summary>Field number for the "UsePositionTimes" field.</summary>
    public const int UsePositionTimesFieldNumber = 2;
    private int usePositionTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsePositionTimes {
      get { return usePositionTimes_; }
      set {
        usePositionTimes_ = value;
      }
    }

    /// <summary>Field number for the "OverBom" field.</summary>
    public const int OverBomFieldNumber = 3;
    private bool overBom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OverBom {
      get { return overBom_; }
      set {
        overBom_ = value;
      }
    }

    /// <summary>Field number for the "AllOver" field.</summary>
    public const int AllOverFieldNumber = 4;
    private bool allOver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllOver {
      get { return allOver_; }
      set {
        allOver_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserBomTimes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserBomTimes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UsePositionId != other.UsePositionId) return false;
      if (UsePositionTimes != other.UsePositionTimes) return false;
      if (OverBom != other.OverBom) return false;
      if (AllOver != other.AllOver) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UsePositionId != 0) hash ^= UsePositionId.GetHashCode();
      if (UsePositionTimes != 0) hash ^= UsePositionTimes.GetHashCode();
      if (OverBom != false) hash ^= OverBom.GetHashCode();
      if (AllOver != false) hash ^= AllOver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UsePositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UsePositionId);
      }
      if (UsePositionTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UsePositionTimes);
      }
      if (OverBom != false) {
        output.WriteRawTag(24);
        output.WriteBool(OverBom);
      }
      if (AllOver != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllOver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UsePositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UsePositionId);
      }
      if (UsePositionTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UsePositionTimes);
      }
      if (OverBom != false) {
        output.WriteRawTag(24);
        output.WriteBool(OverBom);
      }
      if (AllOver != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllOver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UsePositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsePositionId);
      }
      if (UsePositionTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsePositionTimes);
      }
      if (OverBom != false) {
        size += 1 + 1;
      }
      if (AllOver != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserBomTimes other) {
      if (other == null) {
        return;
      }
      if (other.UsePositionId != 0) {
        UsePositionId = other.UsePositionId;
      }
      if (other.UsePositionTimes != 0) {
        UsePositionTimes = other.UsePositionTimes;
      }
      if (other.OverBom != false) {
        OverBom = other.OverBom;
      }
      if (other.AllOver != false) {
        AllOver = other.AllOver;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UsePositionId = input.ReadInt32();
            break;
          }
          case 16: {
            UsePositionTimes = input.ReadInt32();
            break;
          }
          case 24: {
            OverBom = input.ReadBool();
            break;
          }
          case 32: {
            AllOver = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UsePositionId = input.ReadInt32();
            break;
          }
          case 16: {
            UsePositionTimes = input.ReadInt32();
            break;
          }
          case 24: {
            OverBom = input.ReadBool();
            break;
          }
          case 32: {
            AllOver = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpecialMonsterAttack : pb::IMessage<SpecialMonsterAttack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecialMonsterAttack> _parser = new pb::MessageParser<SpecialMonsterAttack>(() => new SpecialMonsterAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecialMonsterAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialMonsterAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialMonsterAttack(SpecialMonsterAttack other) : this() {
      positionId_ = other.positionId_;
      monsterId_ = other.monsterId_;
      channelId_ = other.channelId_;
      processTime_ = other.processTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialMonsterAttack Clone() {
      return new SpecialMonsterAttack(this);
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "MonsterId" field.</summary>
    public const int MonsterIdFieldNumber = 2;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "ChannelId" field.</summary>
    public const int ChannelIdFieldNumber = 3;
    private int channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "ProcessTime" field.</summary>
    public const int ProcessTimeFieldNumber = 4;
    private int processTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessTime {
      get { return processTime_; }
      set {
        processTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecialMonsterAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecialMonsterAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionId != other.PositionId) return false;
      if (MonsterId != other.MonsterId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (ProcessTime != other.ProcessTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (ProcessTime != 0) hash ^= ProcessTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterId);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChannelId);
      }
      if (ProcessTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProcessTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterId);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChannelId);
      }
      if (ProcessTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProcessTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
      }
      if (ProcessTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecialMonsterAttack other) {
      if (other == null) {
        return;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.ProcessTime != 0) {
        ProcessTime = other.ProcessTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 24: {
            ChannelId = input.ReadInt32();
            break;
          }
          case 32: {
            ProcessTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 24: {
            ChannelId = input.ReadInt32();
            break;
          }
          case 32: {
            ProcessTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSRequestAttack : pb::IMessage<CSRequestAttack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSRequestAttack> _parser = new pb::MessageParser<CSRequestAttack>(() => new CSRequestAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSRequestAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRequestAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRequestAttack(CSRequestAttack other) : this() {
      ratio_ = other.ratio_;
      mode_ = other.mode_;
      monsterId_ = other.monsterId_;
      positionId_ = other.positionId_;
      usePositionId_ = other.usePositionId_;
      usePositionTimes_ = other.usePositionTimes_;
      specialType_ = other.specialType_;
      specialInfo_ = other.specialInfo_.Clone();
      dragonEnd_ = other.dragonEnd_;
      heroUniqueId_ = other.heroUniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRequestAttack Clone() {
      return new CSRequestAttack(this);
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 1;
    private int ratio_;
    /// <summary>
    ///子弹金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "Mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private int mode_;
    /// <summary>
    ///模式()
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "MonsterId" field.</summary>
    public const int MonsterIdFieldNumber = 3;
    private int monsterId_;
    /// <summary>
    ///怪物kindID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 4;
    private int positionId_;
    /// <summary>
    ///位置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "UsePositionId" field.</summary>
    public const int UsePositionIdFieldNumber = 5;
    private int usePositionId_;
    /// <summary>
    ///无用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsePositionId {
      get { return usePositionId_; }
      set {
        usePositionId_ = value;
      }
    }

    /// <summary>Field number for the "UsePositionTimes" field.</summary>
    public const int UsePositionTimesFieldNumber = 6;
    private int usePositionTimes_;
    /// <summary>
    ///无用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsePositionTimes {
      get { return usePositionTimes_; }
      set {
        usePositionTimes_ = value;
      }
    }

    /// <summary>Field number for the "SpecialType" field.</summary>
    public const int SpecialTypeFieldNumber = 7;
    private int specialType_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpecialType {
      get { return specialType_; }
      set {
        specialType_ = value;
      }
    }

    /// <summary>Field number for the "SpecialInfo" field.</summary>
    public const int SpecialInfoFieldNumber = 8;
    private static readonly pb::FieldCodec<global::JSBY.SpecialMonsterAttack> _repeated_specialInfo_codec
        = pb::FieldCodec.ForMessage(66, global::JSBY.SpecialMonsterAttack.Parser);
    private readonly pbc::RepeatedField<global::JSBY.SpecialMonsterAttack> specialInfo_ = new pbc::RepeatedField<global::JSBY.SpecialMonsterAttack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.SpecialMonsterAttack> SpecialInfo {
      get { return specialInfo_; }
    }

    /// <summary>Field number for the "DragonEnd" field.</summary>
    public const int DragonEndFieldNumber = 9;
    private bool dragonEnd_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DragonEnd {
      get { return dragonEnd_; }
      set {
        dragonEnd_ = value;
      }
    }

    /// <summary>Field number for the "HeroUniqueId" field.</summary>
    public const int HeroUniqueIdFieldNumber = 10;
    private int heroUniqueId_;
    /// <summary>
    ///英雄唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroUniqueId {
      get { return heroUniqueId_; }
      set {
        heroUniqueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSRequestAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSRequestAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ratio != other.Ratio) return false;
      if (Mode != other.Mode) return false;
      if (MonsterId != other.MonsterId) return false;
      if (PositionId != other.PositionId) return false;
      if (UsePositionId != other.UsePositionId) return false;
      if (UsePositionTimes != other.UsePositionTimes) return false;
      if (SpecialType != other.SpecialType) return false;
      if(!specialInfo_.Equals(other.specialInfo_)) return false;
      if (DragonEnd != other.DragonEnd) return false;
      if (HeroUniqueId != other.HeroUniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (Mode != 0) hash ^= Mode.GetHashCode();
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (UsePositionId != 0) hash ^= UsePositionId.GetHashCode();
      if (UsePositionTimes != 0) hash ^= UsePositionTimes.GetHashCode();
      if (SpecialType != 0) hash ^= SpecialType.GetHashCode();
      hash ^= specialInfo_.GetHashCode();
      if (DragonEnd != false) hash ^= DragonEnd.GetHashCode();
      if (HeroUniqueId != 0) hash ^= HeroUniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ratio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ratio);
      }
      if (Mode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mode);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MonsterId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PositionId);
      }
      if (UsePositionId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UsePositionId);
      }
      if (UsePositionTimes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UsePositionTimes);
      }
      if (SpecialType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpecialType);
      }
      specialInfo_.WriteTo(output, _repeated_specialInfo_codec);
      if (DragonEnd != false) {
        output.WriteRawTag(72);
        output.WriteBool(DragonEnd);
      }
      if (HeroUniqueId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HeroUniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ratio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ratio);
      }
      if (Mode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mode);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MonsterId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PositionId);
      }
      if (UsePositionId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UsePositionId);
      }
      if (UsePositionTimes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UsePositionTimes);
      }
      if (SpecialType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpecialType);
      }
      specialInfo_.WriteTo(ref output, _repeated_specialInfo_codec);
      if (DragonEnd != false) {
        output.WriteRawTag(72);
        output.WriteBool(DragonEnd);
      }
      if (HeroUniqueId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HeroUniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (Mode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mode);
      }
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (UsePositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsePositionId);
      }
      if (UsePositionTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsePositionTimes);
      }
      if (SpecialType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpecialType);
      }
      size += specialInfo_.CalculateSize(_repeated_specialInfo_codec);
      if (DragonEnd != false) {
        size += 1 + 1;
      }
      if (HeroUniqueId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroUniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSRequestAttack other) {
      if (other == null) {
        return;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.Mode != 0) {
        Mode = other.Mode;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.UsePositionId != 0) {
        UsePositionId = other.UsePositionId;
      }
      if (other.UsePositionTimes != 0) {
        UsePositionTimes = other.UsePositionTimes;
      }
      if (other.SpecialType != 0) {
        SpecialType = other.SpecialType;
      }
      specialInfo_.Add(other.specialInfo_);
      if (other.DragonEnd != false) {
        DragonEnd = other.DragonEnd;
      }
      if (other.HeroUniqueId != 0) {
        HeroUniqueId = other.HeroUniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ratio = input.ReadInt32();
            break;
          }
          case 16: {
            Mode = input.ReadInt32();
            break;
          }
          case 24: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 32: {
            PositionId = input.ReadInt32();
            break;
          }
          case 40: {
            UsePositionId = input.ReadInt32();
            break;
          }
          case 48: {
            UsePositionTimes = input.ReadInt32();
            break;
          }
          case 56: {
            SpecialType = input.ReadInt32();
            break;
          }
          case 66: {
            specialInfo_.AddEntriesFrom(input, _repeated_specialInfo_codec);
            break;
          }
          case 72: {
            DragonEnd = input.ReadBool();
            break;
          }
          case 80: {
            HeroUniqueId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ratio = input.ReadInt32();
            break;
          }
          case 16: {
            Mode = input.ReadInt32();
            break;
          }
          case 24: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 32: {
            PositionId = input.ReadInt32();
            break;
          }
          case 40: {
            UsePositionId = input.ReadInt32();
            break;
          }
          case 48: {
            UsePositionTimes = input.ReadInt32();
            break;
          }
          case 56: {
            SpecialType = input.ReadInt32();
            break;
          }
          case 66: {
            specialInfo_.AddEntriesFrom(ref input, _repeated_specialInfo_codec);
            break;
          }
          case 72: {
            DragonEnd = input.ReadBool();
            break;
          }
          case 80: {
            HeroUniqueId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCRequestAttack : pb::IMessage<SCRequestAttack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCRequestAttack> _parser = new pb::MessageParser<SCRequestAttack>(() => new SCRequestAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRequestAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRequestAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRequestAttack(SCRequestAttack other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRequestAttack Clone() {
      return new SCRequestAttack(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRequestAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRequestAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRequestAttack other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SpecialAttackInfo : pb::IMessage<SpecialAttackInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecialAttackInfo> _parser = new pb::MessageParser<SpecialAttackInfo>(() => new SpecialAttackInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecialAttackInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialAttackInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialAttackInfo(SpecialAttackInfo other) : this() {
      killID_ = other.killID_;
      selfID_ = other.selfID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecialAttackInfo Clone() {
      return new SpecialAttackInfo(this);
    }

    /// <summary>Field number for the "KillID" field.</summary>
    public const int KillIDFieldNumber = 1;
    private int killID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillID {
      get { return killID_; }
      set {
        killID_ = value;
      }
    }

    /// <summary>Field number for the "SelfID" field.</summary>
    public const int SelfIDFieldNumber = 2;
    private int selfID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelfID {
      get { return selfID_; }
      set {
        selfID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecialAttackInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecialAttackInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KillID != other.KillID) return false;
      if (SelfID != other.SelfID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KillID != 0) hash ^= KillID.GetHashCode();
      if (SelfID != 0) hash ^= SelfID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KillID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(KillID);
      }
      if (SelfID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SelfID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KillID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(KillID);
      }
      if (SelfID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SelfID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KillID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillID);
      }
      if (SelfID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecialAttackInfo other) {
      if (other == null) {
        return;
      }
      if (other.KillID != 0) {
        KillID = other.KillID;
      }
      if (other.SelfID != 0) {
        SelfID = other.SelfID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KillID = input.ReadInt32();
            break;
          }
          case 16: {
            SelfID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            KillID = input.ReadInt32();
            break;
          }
          case 16: {
            SelfID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncMoney : pb::IMessage<SCSyncMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncMoney> _parser = new pb::MessageParser<SCSyncMoney>(() => new SCSyncMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncMoney(SCSyncMoney other) : this() {
      money_ = other.money_;
      monsterId_ = other.monsterId_;
      positionId_ = other.positionId_;
      type_ = other.type_;
      ratio_ = other.ratio_;
      playerId_ = other.playerId_;
      moneyVariation_ = other.moneyVariation_;
      bom_ = other.bom_ != null ? other.bom_.Clone() : null;
      heroUniqueId_ = other.heroUniqueId_;
      attackInfo_ = other.attackInfo_ != null ? other.attackInfo_.Clone() : null;
      eared_ = other.eared_;
      addRatio_ = other.addRatio_;
      balloonRatio_ = other.balloonRatio_;
      others_ = other.others_;
      giantHitPower_ = other.giantHitPower_;
      mxlSealMoney_ = other.mxlSealMoney_;
      mxlSealAddAwardRatio_ = other.mxlSealAddAwardRatio_;
      bearMultiple_ = other.bearMultiple_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncMoney Clone() {
      return new SCSyncMoney(this);
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 1;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "MonsterId" field.</summary>
    public const int MonsterIdFieldNumber = 2;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 3;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 5;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 6;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "MoneyVariation" field.</summary>
    public const int MoneyVariationFieldNumber = 7;
    private int moneyVariation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MoneyVariation {
      get { return moneyVariation_; }
      set {
        moneyVariation_ = value;
      }
    }

    /// <summary>Field number for the "Bom" field.</summary>
    public const int BomFieldNumber = 8;
    private global::JSBY.UserBomTimes bom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.UserBomTimes Bom {
      get { return bom_; }
      set {
        bom_ = value;
      }
    }

    /// <summary>Field number for the "HeroUniqueId" field.</summary>
    public const int HeroUniqueIdFieldNumber = 9;
    private int heroUniqueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroUniqueId {
      get { return heroUniqueId_; }
      set {
        heroUniqueId_ = value;
      }
    }

    /// <summary>Field number for the "AttackInfo" field.</summary>
    public const int AttackInfoFieldNumber = 10;
    private global::JSBY.SpecialAttackInfo attackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.SpecialAttackInfo AttackInfo {
      get { return attackInfo_; }
      set {
        attackInfo_ = value;
      }
    }

    /// <summary>Field number for the "Eared" field.</summary>
    public const int EaredFieldNumber = 11;
    private int eared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Eared {
      get { return eared_; }
      set {
        eared_ = value;
      }
    }

    /// <summary>Field number for the "AddRatio" field.</summary>
    public const int AddRatioFieldNumber = 12;
    private int addRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AddRatio {
      get { return addRatio_; }
      set {
        addRatio_ = value;
      }
    }

    /// <summary>Field number for the "BalloonRatio" field.</summary>
    public const int BalloonRatioFieldNumber = 13;
    private int balloonRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BalloonRatio {
      get { return balloonRatio_; }
      set {
        balloonRatio_ = value;
      }
    }

    /// <summary>Field number for the "Others" field.</summary>
    public const int OthersFieldNumber = 14;
    private string others_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Others {
      get { return others_; }
      set {
        others_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GiantHitPower" field.</summary>
    public const int GiantHitPowerFieldNumber = 15;
    private int giantHitPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GiantHitPower {
      get { return giantHitPower_; }
      set {
        giantHitPower_ = value;
      }
    }

    /// <summary>Field number for the "MxlSealMoney" field.</summary>
    public const int MxlSealMoneyFieldNumber = 16;
    private int mxlSealMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MxlSealMoney {
      get { return mxlSealMoney_; }
      set {
        mxlSealMoney_ = value;
      }
    }

    /// <summary>Field number for the "MxlSealAddAwardRatio" field.</summary>
    public const int MxlSealAddAwardRatioFieldNumber = 17;
    private int mxlSealAddAwardRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MxlSealAddAwardRatio {
      get { return mxlSealAddAwardRatio_; }
      set {
        mxlSealAddAwardRatio_ = value;
      }
    }

    /// <summary>Field number for the "BearMultiple" field.</summary>
    public const int BearMultipleFieldNumber = 18;
    private string bearMultiple_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearMultiple {
      get { return bearMultiple_; }
      set {
        bearMultiple_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Money != other.Money) return false;
      if (MonsterId != other.MonsterId) return false;
      if (PositionId != other.PositionId) return false;
      if (Type != other.Type) return false;
      if (Ratio != other.Ratio) return false;
      if (PlayerId != other.PlayerId) return false;
      if (MoneyVariation != other.MoneyVariation) return false;
      if (!object.Equals(Bom, other.Bom)) return false;
      if (HeroUniqueId != other.HeroUniqueId) return false;
      if (!object.Equals(AttackInfo, other.AttackInfo)) return false;
      if (Eared != other.Eared) return false;
      if (AddRatio != other.AddRatio) return false;
      if (BalloonRatio != other.BalloonRatio) return false;
      if (Others != other.Others) return false;
      if (GiantHitPower != other.GiantHitPower) return false;
      if (MxlSealMoney != other.MxlSealMoney) return false;
      if (MxlSealAddAwardRatio != other.MxlSealAddAwardRatio) return false;
      if (BearMultiple != other.BearMultiple) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Money != 0) hash ^= Money.GetHashCode();
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (MoneyVariation != 0) hash ^= MoneyVariation.GetHashCode();
      if (bom_ != null) hash ^= Bom.GetHashCode();
      if (HeroUniqueId != 0) hash ^= HeroUniqueId.GetHashCode();
      if (attackInfo_ != null) hash ^= AttackInfo.GetHashCode();
      if (Eared != 0) hash ^= Eared.GetHashCode();
      if (AddRatio != 0) hash ^= AddRatio.GetHashCode();
      if (BalloonRatio != 0) hash ^= BalloonRatio.GetHashCode();
      if (Others.Length != 0) hash ^= Others.GetHashCode();
      if (GiantHitPower != 0) hash ^= GiantHitPower.GetHashCode();
      if (MxlSealMoney != 0) hash ^= MxlSealMoney.GetHashCode();
      if (MxlSealAddAwardRatio != 0) hash ^= MxlSealAddAwardRatio.GetHashCode();
      if (BearMultiple.Length != 0) hash ^= BearMultiple.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Money != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Money);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PositionId);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (Ratio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Ratio);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PlayerId);
      }
      if (MoneyVariation != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MoneyVariation);
      }
      if (bom_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Bom);
      }
      if (HeroUniqueId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HeroUniqueId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AttackInfo);
      }
      if (Eared != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Eared);
      }
      if (AddRatio != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AddRatio);
      }
      if (BalloonRatio != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BalloonRatio);
      }
      if (Others.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Others);
      }
      if (GiantHitPower != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(GiantHitPower);
      }
      if (MxlSealMoney != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MxlSealMoney);
      }
      if (MxlSealAddAwardRatio != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MxlSealAddAwardRatio);
      }
      if (BearMultiple.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(BearMultiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Money != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Money);
      }
      if (MonsterId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PositionId);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (Ratio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Ratio);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PlayerId);
      }
      if (MoneyVariation != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MoneyVariation);
      }
      if (bom_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Bom);
      }
      if (HeroUniqueId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HeroUniqueId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AttackInfo);
      }
      if (Eared != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Eared);
      }
      if (AddRatio != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AddRatio);
      }
      if (BalloonRatio != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BalloonRatio);
      }
      if (Others.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Others);
      }
      if (GiantHitPower != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(GiantHitPower);
      }
      if (MxlSealMoney != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(MxlSealMoney);
      }
      if (MxlSealAddAwardRatio != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(MxlSealAddAwardRatio);
      }
      if (BearMultiple.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(BearMultiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (MoneyVariation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoneyVariation);
      }
      if (bom_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bom);
      }
      if (HeroUniqueId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroUniqueId);
      }
      if (attackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackInfo);
      }
      if (Eared != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eared);
      }
      if (AddRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddRatio);
      }
      if (BalloonRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BalloonRatio);
      }
      if (Others.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Others);
      }
      if (GiantHitPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GiantHitPower);
      }
      if (MxlSealMoney != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MxlSealMoney);
      }
      if (MxlSealAddAwardRatio != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MxlSealAddAwardRatio);
      }
      if (BearMultiple.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BearMultiple);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncMoney other) {
      if (other == null) {
        return;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.MoneyVariation != 0) {
        MoneyVariation = other.MoneyVariation;
      }
      if (other.bom_ != null) {
        if (bom_ == null) {
          Bom = new global::JSBY.UserBomTimes();
        }
        Bom.MergeFrom(other.Bom);
      }
      if (other.HeroUniqueId != 0) {
        HeroUniqueId = other.HeroUniqueId;
      }
      if (other.attackInfo_ != null) {
        if (attackInfo_ == null) {
          AttackInfo = new global::JSBY.SpecialAttackInfo();
        }
        AttackInfo.MergeFrom(other.AttackInfo);
      }
      if (other.Eared != 0) {
        Eared = other.Eared;
      }
      if (other.AddRatio != 0) {
        AddRatio = other.AddRatio;
      }
      if (other.BalloonRatio != 0) {
        BalloonRatio = other.BalloonRatio;
      }
      if (other.Others.Length != 0) {
        Others = other.Others;
      }
      if (other.GiantHitPower != 0) {
        GiantHitPower = other.GiantHitPower;
      }
      if (other.MxlSealMoney != 0) {
        MxlSealMoney = other.MxlSealMoney;
      }
      if (other.MxlSealAddAwardRatio != 0) {
        MxlSealAddAwardRatio = other.MxlSealAddAwardRatio;
      }
      if (other.BearMultiple.Length != 0) {
        BearMultiple = other.BearMultiple;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Money = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 24: {
            PositionId = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            Ratio = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 56: {
            MoneyVariation = input.ReadInt32();
            break;
          }
          case 66: {
            if (bom_ == null) {
              Bom = new global::JSBY.UserBomTimes();
            }
            input.ReadMessage(Bom);
            break;
          }
          case 72: {
            HeroUniqueId = input.ReadInt32();
            break;
          }
          case 82: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
          case 88: {
            Eared = input.ReadInt32();
            break;
          }
          case 96: {
            AddRatio = input.ReadInt32();
            break;
          }
          case 104: {
            BalloonRatio = input.ReadInt32();
            break;
          }
          case 114: {
            Others = input.ReadString();
            break;
          }
          case 120: {
            GiantHitPower = input.ReadInt32();
            break;
          }
          case 128: {
            MxlSealMoney = input.ReadInt32();
            break;
          }
          case 136: {
            MxlSealAddAwardRatio = input.ReadInt32();
            break;
          }
          case 146: {
            BearMultiple = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Money = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 24: {
            PositionId = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            Ratio = input.ReadInt32();
            break;
          }
          case 48: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 56: {
            MoneyVariation = input.ReadInt32();
            break;
          }
          case 66: {
            if (bom_ == null) {
              Bom = new global::JSBY.UserBomTimes();
            }
            input.ReadMessage(Bom);
            break;
          }
          case 72: {
            HeroUniqueId = input.ReadInt32();
            break;
          }
          case 82: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
          case 88: {
            Eared = input.ReadInt32();
            break;
          }
          case 96: {
            AddRatio = input.ReadInt32();
            break;
          }
          case 104: {
            BalloonRatio = input.ReadInt32();
            break;
          }
          case 114: {
            Others = input.ReadString();
            break;
          }
          case 120: {
            GiantHitPower = input.ReadInt32();
            break;
          }
          case 128: {
            MxlSealMoney = input.ReadInt32();
            break;
          }
          case 136: {
            MxlSealAddAwardRatio = input.ReadInt32();
            break;
          }
          case 146: {
            BearMultiple = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPoisonBomTimes : pb::IMessage<SCPoisonBomTimes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPoisonBomTimes> _parser = new pb::MessageParser<SCPoisonBomTimes>(() => new SCPoisonBomTimes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPoisonBomTimes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBomTimes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBomTimes(SCPoisonBomTimes other) : this() {
      positionId_ = other.positionId_;
      times_ = other.times_;
      ratio_ = other.ratio_;
      addTimes_ = other.addTimes_.Clone();
      killPlayerId_ = other.killPlayerId_;
      heroUniqueId_ = other.heroUniqueId_;
      attackInfo_ = other.attackInfo_ != null ? other.attackInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBomTimes Clone() {
      return new SCPoisonBomTimes(this);
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "Times" field.</summary>
    public const int TimesFieldNumber = 2;
    private int times_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 3;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "AddTimes" field.</summary>
    public const int AddTimesFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_addTimes_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> addTimes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AddTimes {
      get { return addTimes_; }
    }

    /// <summary>Field number for the "KillPlayerId" field.</summary>
    public const int KillPlayerIdFieldNumber = 5;
    private int killPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillPlayerId {
      get { return killPlayerId_; }
      set {
        killPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "HeroUniqueId" field.</summary>
    public const int HeroUniqueIdFieldNumber = 6;
    private int heroUniqueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroUniqueId {
      get { return heroUniqueId_; }
      set {
        heroUniqueId_ = value;
      }
    }

    /// <summary>Field number for the "AttackInfo" field.</summary>
    public const int AttackInfoFieldNumber = 7;
    private global::JSBY.SpecialAttackInfo attackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.SpecialAttackInfo AttackInfo {
      get { return attackInfo_; }
      set {
        attackInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPoisonBomTimes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPoisonBomTimes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionId != other.PositionId) return false;
      if (Times != other.Times) return false;
      if (Ratio != other.Ratio) return false;
      if(!addTimes_.Equals(other.addTimes_)) return false;
      if (KillPlayerId != other.KillPlayerId) return false;
      if (HeroUniqueId != other.HeroUniqueId) return false;
      if (!object.Equals(AttackInfo, other.AttackInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (Times != 0) hash ^= Times.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      hash ^= addTimes_.GetHashCode();
      if (KillPlayerId != 0) hash ^= KillPlayerId.GetHashCode();
      if (HeroUniqueId != 0) hash ^= HeroUniqueId.GetHashCode();
      if (attackInfo_ != null) hash ^= AttackInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (Ratio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Ratio);
      }
      addTimes_.WriteTo(output, _repeated_addTimes_codec);
      if (KillPlayerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(KillPlayerId);
      }
      if (HeroUniqueId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HeroUniqueId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (Ratio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Ratio);
      }
      addTimes_.WriteTo(ref output, _repeated_addTimes_codec);
      if (KillPlayerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(KillPlayerId);
      }
      if (HeroUniqueId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HeroUniqueId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (Times != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      size += addTimes_.CalculateSize(_repeated_addTimes_codec);
      if (KillPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillPlayerId);
      }
      if (HeroUniqueId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroUniqueId);
      }
      if (attackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPoisonBomTimes other) {
      if (other == null) {
        return;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.Times != 0) {
        Times = other.Times;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      addTimes_.Add(other.addTimes_);
      if (other.KillPlayerId != 0) {
        KillPlayerId = other.KillPlayerId;
      }
      if (other.HeroUniqueId != 0) {
        HeroUniqueId = other.HeroUniqueId;
      }
      if (other.attackInfo_ != null) {
        if (attackInfo_ == null) {
          AttackInfo = new global::JSBY.SpecialAttackInfo();
        }
        AttackInfo.MergeFrom(other.AttackInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
          case 24: {
            Ratio = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            addTimes_.AddEntriesFrom(input, _repeated_addTimes_codec);
            break;
          }
          case 40: {
            KillPlayerId = input.ReadInt32();
            break;
          }
          case 48: {
            HeroUniqueId = input.ReadInt32();
            break;
          }
          case 58: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
          case 24: {
            Ratio = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            addTimes_.AddEntriesFrom(ref input, _repeated_addTimes_codec);
            break;
          }
          case 40: {
            KillPlayerId = input.ReadInt32();
            break;
          }
          case 48: {
            HeroUniqueId = input.ReadInt32();
            break;
          }
          case 58: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSChangePoisonBomTimes : pb::IMessage<CSChangePoisonBomTimes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSChangePoisonBomTimes> _parser = new pb::MessageParser<CSChangePoisonBomTimes>(() => new CSChangePoisonBomTimes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSChangePoisonBomTimes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangePoisonBomTimes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangePoisonBomTimes(CSChangePoisonBomTimes other) : this() {
      positionId_ = other.positionId_;
      usePositionTimes_ = other.usePositionTimes_;
      newPositionId_ = other.newPositionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangePoisonBomTimes Clone() {
      return new CSChangePoisonBomTimes(this);
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "UsePositionTimes" field.</summary>
    public const int UsePositionTimesFieldNumber = 2;
    private int usePositionTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsePositionTimes {
      get { return usePositionTimes_; }
      set {
        usePositionTimes_ = value;
      }
    }

    /// <summary>Field number for the "NewPositionId" field.</summary>
    public const int NewPositionIdFieldNumber = 3;
    private int newPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewPositionId {
      get { return newPositionId_; }
      set {
        newPositionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSChangePoisonBomTimes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSChangePoisonBomTimes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionId != other.PositionId) return false;
      if (UsePositionTimes != other.UsePositionTimes) return false;
      if (NewPositionId != other.NewPositionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (UsePositionTimes != 0) hash ^= UsePositionTimes.GetHashCode();
      if (NewPositionId != 0) hash ^= NewPositionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (UsePositionTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UsePositionTimes);
      }
      if (NewPositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NewPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (UsePositionTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UsePositionTimes);
      }
      if (NewPositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NewPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (UsePositionTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsePositionTimes);
      }
      if (NewPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewPositionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSChangePoisonBomTimes other) {
      if (other == null) {
        return;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.UsePositionTimes != 0) {
        UsePositionTimes = other.UsePositionTimes;
      }
      if (other.NewPositionId != 0) {
        NewPositionId = other.NewPositionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            UsePositionTimes = input.ReadInt32();
            break;
          }
          case 24: {
            NewPositionId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            UsePositionTimes = input.ReadInt32();
            break;
          }
          case 24: {
            NewPositionId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCChangePoisonBomTimes : pb::IMessage<SCChangePoisonBomTimes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCChangePoisonBomTimes> _parser = new pb::MessageParser<SCChangePoisonBomTimes>(() => new SCChangePoisonBomTimes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChangePoisonBomTimes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangePoisonBomTimes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangePoisonBomTimes(SCChangePoisonBomTimes other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangePoisonBomTimes Clone() {
      return new SCChangePoisonBomTimes(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChangePoisonBomTimes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChangePoisonBomTimes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChangePoisonBomTimes other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CSEnterStage : pb::IMessage<CSEnterStage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSEnterStage> _parser = new pb::MessageParser<CSEnterStage>(() => new CSEnterStage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSEnterStage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEnterStage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEnterStage(CSEnterStage other) : this() {
      enter_ = other.enter_;
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEnterStage Clone() {
      return new CSEnterStage(this);
    }

    /// <summary>Field number for the "Enter" field.</summary>
    public const int EnterFieldNumber = 1;
    private bool enter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enter {
      get { return enter_; }
      set {
        enter_ = value;
      }
    }

    /// <summary>Field number for the "Mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private global::JSBY.ModeType mode_ = global::JSBY.ModeType.Stage;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.ModeType Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSEnterStage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSEnterStage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enter != other.Enter) return false;
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enter != false) hash ^= Enter.GetHashCode();
      if (Mode != global::JSBY.ModeType.Stage) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Enter != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enter);
      }
      if (Mode != global::JSBY.ModeType.Stage) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Enter != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enter);
      }
      if (Mode != global::JSBY.ModeType.Stage) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enter != false) {
        size += 1 + 1;
      }
      if (Mode != global::JSBY.ModeType.Stage) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSEnterStage other) {
      if (other == null) {
        return;
      }
      if (other.Enter != false) {
        Enter = other.Enter;
      }
      if (other.Mode != global::JSBY.ModeType.Stage) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enter = input.ReadBool();
            break;
          }
          case 16: {
            Mode = (global::JSBY.ModeType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enter = input.ReadBool();
            break;
          }
          case 16: {
            Mode = (global::JSBY.ModeType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCEnterStage : pb::IMessage<SCEnterStage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCEnterStage> _parser = new pb::MessageParser<SCEnterStage>(() => new SCEnterStage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCEnterStage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEnterStage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEnterStage(SCEnterStage other) : this() {
      useRatio_ = other.useRatio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEnterStage Clone() {
      return new SCEnterStage(this);
    }

    /// <summary>Field number for the "UseRatio" field.</summary>
    public const int UseRatioFieldNumber = 1;
    private int useRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UseRatio {
      get { return useRatio_; }
      set {
        useRatio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCEnterStage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCEnterStage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UseRatio != other.UseRatio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UseRatio != 0) hash ^= UseRatio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UseRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UseRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UseRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UseRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UseRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseRatio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCEnterStage other) {
      if (other == null) {
        return;
      }
      if (other.UseRatio != 0) {
        UseRatio = other.UseRatio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UseRatio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UseRatio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSKeepRatio : pb::IMessage<CSKeepRatio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSKeepRatio> _parser = new pb::MessageParser<CSKeepRatio>(() => new CSKeepRatio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSKeepRatio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSKeepRatio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSKeepRatio(CSKeepRatio other) : this() {
      ratio_ = other.ratio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSKeepRatio Clone() {
      return new CSKeepRatio(this);
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 1;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSKeepRatio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSKeepRatio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ratio != other.Ratio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ratio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ratio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSKeepRatio other) {
      if (other == null) {
        return;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCKeepRatio : pb::IMessage<SCKeepRatio>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCKeepRatio> _parser = new pb::MessageParser<SCKeepRatio>(() => new SCKeepRatio());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCKeepRatio> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCKeepRatio() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCKeepRatio(SCKeepRatio other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCKeepRatio Clone() {
      return new SCKeepRatio(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCKeepRatio);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCKeepRatio other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCKeepRatio other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TrusteeshipInfo : pb::IMessage<TrusteeshipInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrusteeshipInfo> _parser = new pb::MessageParser<TrusteeshipInfo>(() => new TrusteeshipInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrusteeshipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrusteeshipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrusteeshipInfo(TrusteeshipInfo other) : this() {
      isTrusteeship_ = other.isTrusteeship_;
      highSetValue_ = other.highSetValue_;
      highSetOpen_ = other.highSetOpen_;
      lowSetValue_ = other.lowSetValue_;
      lowSetOpen_ = other.lowSetOpen_;
      timeSetValue_ = other.timeSetValue_;
      timeSetOpen_ = other.timeSetOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrusteeshipInfo Clone() {
      return new TrusteeshipInfo(this);
    }

    /// <summary>Field number for the "IsTrusteeship" field.</summary>
    public const int IsTrusteeshipFieldNumber = 1;
    private bool isTrusteeship_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTrusteeship {
      get { return isTrusteeship_; }
      set {
        isTrusteeship_ = value;
      }
    }

    /// <summary>Field number for the "HighSetValue" field.</summary>
    public const int HighSetValueFieldNumber = 2;
    private int highSetValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HighSetValue {
      get { return highSetValue_; }
      set {
        highSetValue_ = value;
      }
    }

    /// <summary>Field number for the "HighSetOpen" field.</summary>
    public const int HighSetOpenFieldNumber = 3;
    private bool highSetOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HighSetOpen {
      get { return highSetOpen_; }
      set {
        highSetOpen_ = value;
      }
    }

    /// <summary>Field number for the "LowSetValue" field.</summary>
    public const int LowSetValueFieldNumber = 4;
    private int lowSetValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LowSetValue {
      get { return lowSetValue_; }
      set {
        lowSetValue_ = value;
      }
    }

    /// <summary>Field number for the "LowSetOpen" field.</summary>
    public const int LowSetOpenFieldNumber = 5;
    private bool lowSetOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LowSetOpen {
      get { return lowSetOpen_; }
      set {
        lowSetOpen_ = value;
      }
    }

    /// <summary>Field number for the "TimeSetValue" field.</summary>
    public const int TimeSetValueFieldNumber = 6;
    private float timeSetValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TimeSetValue {
      get { return timeSetValue_; }
      set {
        timeSetValue_ = value;
      }
    }

    /// <summary>Field number for the "TimeSetOpen" field.</summary>
    public const int TimeSetOpenFieldNumber = 7;
    private bool timeSetOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TimeSetOpen {
      get { return timeSetOpen_; }
      set {
        timeSetOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrusteeshipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrusteeshipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsTrusteeship != other.IsTrusteeship) return false;
      if (HighSetValue != other.HighSetValue) return false;
      if (HighSetOpen != other.HighSetOpen) return false;
      if (LowSetValue != other.LowSetValue) return false;
      if (LowSetOpen != other.LowSetOpen) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeSetValue, other.TimeSetValue)) return false;
      if (TimeSetOpen != other.TimeSetOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsTrusteeship != false) hash ^= IsTrusteeship.GetHashCode();
      if (HighSetValue != 0) hash ^= HighSetValue.GetHashCode();
      if (HighSetOpen != false) hash ^= HighSetOpen.GetHashCode();
      if (LowSetValue != 0) hash ^= LowSetValue.GetHashCode();
      if (LowSetOpen != false) hash ^= LowSetOpen.GetHashCode();
      if (TimeSetValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeSetValue);
      if (TimeSetOpen != false) hash ^= TimeSetOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsTrusteeship != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsTrusteeship);
      }
      if (HighSetValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HighSetValue);
      }
      if (HighSetOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(HighSetOpen);
      }
      if (LowSetValue != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LowSetValue);
      }
      if (LowSetOpen != false) {
        output.WriteRawTag(40);
        output.WriteBool(LowSetOpen);
      }
      if (TimeSetValue != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TimeSetValue);
      }
      if (TimeSetOpen != false) {
        output.WriteRawTag(56);
        output.WriteBool(TimeSetOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsTrusteeship != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsTrusteeship);
      }
      if (HighSetValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HighSetValue);
      }
      if (HighSetOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(HighSetOpen);
      }
      if (LowSetValue != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LowSetValue);
      }
      if (LowSetOpen != false) {
        output.WriteRawTag(40);
        output.WriteBool(LowSetOpen);
      }
      if (TimeSetValue != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TimeSetValue);
      }
      if (TimeSetOpen != false) {
        output.WriteRawTag(56);
        output.WriteBool(TimeSetOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsTrusteeship != false) {
        size += 1 + 1;
      }
      if (HighSetValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HighSetValue);
      }
      if (HighSetOpen != false) {
        size += 1 + 1;
      }
      if (LowSetValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowSetValue);
      }
      if (LowSetOpen != false) {
        size += 1 + 1;
      }
      if (TimeSetValue != 0F) {
        size += 1 + 4;
      }
      if (TimeSetOpen != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrusteeshipInfo other) {
      if (other == null) {
        return;
      }
      if (other.IsTrusteeship != false) {
        IsTrusteeship = other.IsTrusteeship;
      }
      if (other.HighSetValue != 0) {
        HighSetValue = other.HighSetValue;
      }
      if (other.HighSetOpen != false) {
        HighSetOpen = other.HighSetOpen;
      }
      if (other.LowSetValue != 0) {
        LowSetValue = other.LowSetValue;
      }
      if (other.LowSetOpen != false) {
        LowSetOpen = other.LowSetOpen;
      }
      if (other.TimeSetValue != 0F) {
        TimeSetValue = other.TimeSetValue;
      }
      if (other.TimeSetOpen != false) {
        TimeSetOpen = other.TimeSetOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsTrusteeship = input.ReadBool();
            break;
          }
          case 16: {
            HighSetValue = input.ReadInt32();
            break;
          }
          case 24: {
            HighSetOpen = input.ReadBool();
            break;
          }
          case 32: {
            LowSetValue = input.ReadInt32();
            break;
          }
          case 40: {
            LowSetOpen = input.ReadBool();
            break;
          }
          case 53: {
            TimeSetValue = input.ReadFloat();
            break;
          }
          case 56: {
            TimeSetOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsTrusteeship = input.ReadBool();
            break;
          }
          case 16: {
            HighSetValue = input.ReadInt32();
            break;
          }
          case 24: {
            HighSetOpen = input.ReadBool();
            break;
          }
          case 32: {
            LowSetValue = input.ReadInt32();
            break;
          }
          case 40: {
            LowSetOpen = input.ReadBool();
            break;
          }
          case 53: {
            TimeSetValue = input.ReadFloat();
            break;
          }
          case 56: {
            TimeSetOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetTrusteeship : pb::IMessage<CSGetTrusteeship>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetTrusteeship> _parser = new pb::MessageParser<CSGetTrusteeship>(() => new CSGetTrusteeship());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetTrusteeship> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTrusteeship() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTrusteeship(CSGetTrusteeship other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTrusteeship Clone() {
      return new CSGetTrusteeship(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetTrusteeship);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetTrusteeship other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetTrusteeship other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetTrusteeship : pb::IMessage<SCGetTrusteeship>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetTrusteeship> _parser = new pb::MessageParser<SCGetTrusteeship>(() => new SCGetTrusteeship());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetTrusteeship> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTrusteeship() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTrusteeship(SCGetTrusteeship other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      leftTime_ = other.leftTime_;
      vIPLevel_ = other.vIPLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTrusteeship Clone() {
      return new SCGetTrusteeship(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.TrusteeshipInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TrusteeshipInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "LeftTime" field.</summary>
    public const int LeftTimeFieldNumber = 2;
    private int leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftTime {
      get { return leftTime_; }
      set {
        leftTime_ = value;
      }
    }

    /// <summary>Field number for the "VIPLevel" field.</summary>
    public const int VIPLevelFieldNumber = 3;
    private int vIPLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VIPLevel {
      get { return vIPLevel_; }
      set {
        vIPLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetTrusteeship);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetTrusteeship other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (LeftTime != other.LeftTime) return false;
      if (VIPLevel != other.VIPLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (LeftTime != 0) hash ^= LeftTime.GetHashCode();
      if (VIPLevel != 0) hash ^= VIPLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (LeftTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      if (VIPLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(VIPLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (LeftTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      if (VIPLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(VIPLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (LeftTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (VIPLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VIPLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetTrusteeship other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.TrusteeshipInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.LeftTime != 0) {
        LeftTime = other.LeftTime;
      }
      if (other.VIPLevel != 0) {
        VIPLevel = other.VIPLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TrusteeshipInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 24: {
            VIPLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TrusteeshipInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 24: {
            VIPLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSetTrusteeship : pb::IMessage<CSSetTrusteeship>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSetTrusteeship> _parser = new pb::MessageParser<CSSetTrusteeship>(() => new CSSetTrusteeship());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSetTrusteeship> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetTrusteeship() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetTrusteeship(CSSetTrusteeship other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetTrusteeship Clone() {
      return new CSSetTrusteeship(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.TrusteeshipInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TrusteeshipInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSetTrusteeship);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSetTrusteeship other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSetTrusteeship other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.TrusteeshipInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TrusteeshipInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TrusteeshipInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSetTrusteeship : pb::IMessage<SCSetTrusteeship>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSetTrusteeship> _parser = new pb::MessageParser<SCSetTrusteeship>(() => new SCSetTrusteeship());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSetTrusteeship> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetTrusteeship() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetTrusteeship(SCSetTrusteeship other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetTrusteeship Clone() {
      return new SCSetTrusteeship(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSetTrusteeship);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSetTrusteeship other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSetTrusteeship other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TrusteeshipMoney : pb::IMessage<TrusteeshipMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrusteeshipMoney> _parser = new pb::MessageParser<TrusteeshipMoney>(() => new TrusteeshipMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrusteeshipMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrusteeshipMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrusteeshipMoney(TrusteeshipMoney other) : this() {
      monsterType_ = other.monsterType_;
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrusteeshipMoney Clone() {
      return new TrusteeshipMoney(this);
    }

    /// <summary>Field number for the "MonsterType" field.</summary>
    public const int MonsterTypeFieldNumber = 1;
    private int monsterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterType {
      get { return monsterType_; }
      set {
        monsterType_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrusteeshipMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrusteeshipMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MonsterType != other.MonsterType) return false;
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MonsterType != 0) hash ^= MonsterType.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MonsterType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterType);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MonsterType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterType);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MonsterType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterType);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrusteeshipMoney other) {
      if (other == null) {
        return;
      }
      if (other.MonsterType != 0) {
        MonsterType = other.MonsterType;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MonsterType = input.ReadInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MonsterType = input.ReadInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSEndTrusteeship : pb::IMessage<CSEndTrusteeship>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSEndTrusteeship> _parser = new pb::MessageParser<CSEndTrusteeship>(() => new CSEndTrusteeship());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSEndTrusteeship> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEndTrusteeship() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEndTrusteeship(CSEndTrusteeship other) : this() {
      notify_ = other.notify_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEndTrusteeship Clone() {
      return new CSEndTrusteeship(this);
    }

    /// <summary>Field number for the "Notify" field.</summary>
    public const int NotifyFieldNumber = 1;
    private bool notify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Notify {
      get { return notify_; }
      set {
        notify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSEndTrusteeship);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSEndTrusteeship other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Notify != other.Notify) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Notify != false) hash ^= Notify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Notify != false) {
        output.WriteRawTag(8);
        output.WriteBool(Notify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Notify != false) {
        output.WriteRawTag(8);
        output.WriteBool(Notify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Notify != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSEndTrusteeship other) {
      if (other == null) {
        return;
      }
      if (other.Notify != false) {
        Notify = other.Notify;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Notify = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Notify = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCEndTrusteeship : pb::IMessage<SCEndTrusteeship>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCEndTrusteeship> _parser = new pb::MessageParser<SCEndTrusteeship>(() => new SCEndTrusteeship());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCEndTrusteeship> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEndTrusteeship() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEndTrusteeship(SCEndTrusteeship other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      totalMoney_ = other.totalMoney_;
      totalTime_ = other.totalTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEndTrusteeship Clone() {
      return new SCEndTrusteeship(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.TrusteeshipMoney info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TrusteeshipMoney Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "TotalMoney" field.</summary>
    public const int TotalMoneyFieldNumber = 2;
    private int totalMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalMoney {
      get { return totalMoney_; }
      set {
        totalMoney_ = value;
      }
    }

    /// <summary>Field number for the "TotalTime" field.</summary>
    public const int TotalTimeFieldNumber = 3;
    private int totalTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalTime {
      get { return totalTime_; }
      set {
        totalTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCEndTrusteeship);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCEndTrusteeship other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (TotalMoney != other.TotalMoney) return false;
      if (TotalTime != other.TotalTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (TotalMoney != 0) hash ^= TotalMoney.GetHashCode();
      if (TotalTime != 0) hash ^= TotalTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (TotalMoney != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalMoney);
      }
      if (TotalTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (TotalMoney != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalMoney);
      }
      if (TotalTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (TotalMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalMoney);
      }
      if (TotalTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCEndTrusteeship other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.TrusteeshipMoney();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.TotalMoney != 0) {
        TotalMoney = other.TotalMoney;
      }
      if (other.TotalTime != 0) {
        TotalTime = other.TotalTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TrusteeshipMoney();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            TotalMoney = input.ReadInt32();
            break;
          }
          case 24: {
            TotalTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TrusteeshipMoney();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            TotalMoney = input.ReadInt32();
            break;
          }
          case 24: {
            TotalTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetVersion : pb::IMessage<CSGetVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetVersion> _parser = new pb::MessageParser<CSGetVersion>(() => new CSGetVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetVersion(CSGetVersion other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetVersion Clone() {
      return new CSGetVersion(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetVersion other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetVersion : pb::IMessage<SCGetVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetVersion> _parser = new pb::MessageParser<SCGetVersion>(() => new SCGetVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetVersion(SCGetVersion other) : this() {
      isNew_ = other.isNew_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetVersion Clone() {
      return new SCGetVersion(this);
    }

    /// <summary>Field number for the "IsNew" field.</summary>
    public const int IsNewFieldNumber = 1;
    private bool isNew_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNew {
      get { return isNew_; }
      set {
        isNew_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsNew != other.IsNew) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsNew != false) hash ^= IsNew.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsNew != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsNew);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsNew != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsNew);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsNew != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetVersion other) {
      if (other == null) {
        return;
      }
      if (other.IsNew != false) {
        IsNew = other.IsNew;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsNew = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsNew = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActivityInfo : pb::IMessage<ActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActivityInfo> _parser = new pb::MessageParser<ActivityInfo>(() => new ActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityInfo(ActivityInfo other) : this() {
      iD_ = other.iD_;
      money_ = other.money_;
      enzyme_ = other.enzyme_;
      name_ = other.name_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityInfo Clone() {
      return new ActivityInfo(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "Enzyme" field.</summary>
    public const int EnzymeFieldNumber = 3;
    private int enzyme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Enzyme {
      get { return enzyme_; }
      set {
        enzyme_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Flag" field.</summary>
    public const int FlagFieldNumber = 5;
    private int flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Money != other.Money) return false;
      if (Enzyme != other.Enzyme) return false;
      if (Name != other.Name) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (Enzyme != 0) hash ^= Enzyme.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Flag != 0) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (Enzyme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Enzyme);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Flag != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      if (Enzyme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Enzyme);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Flag != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (Enzyme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Enzyme);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Flag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.Enzyme != 0) {
        Enzyme = other.Enzyme;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Flag != 0) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
          case 24: {
            Enzyme = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
          case 24: {
            Enzyme = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSActivityInfo : pb::IMessage<CSActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSActivityInfo> _parser = new pb::MessageParser<CSActivityInfo>(() => new CSActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSActivityInfo(CSActivityInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSActivityInfo Clone() {
      return new CSActivityInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSActivityInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCActivityInfo : pb::IMessage<SCActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCActivityInfo> _parser = new pb::MessageParser<SCActivityInfo>(() => new SCActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityInfo(SCActivityInfo other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      leftTime_ = other.leftTime_;
      begint32Ime_ = other.begint32Ime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityInfo Clone() {
      return new SCActivityInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.ActivityInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.ActivityInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "LeftTime" field.</summary>
    public const int LeftTimeFieldNumber = 2;
    private int leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftTime {
      get { return leftTime_; }
      set {
        leftTime_ = value;
      }
    }

    /// <summary>Field number for the "Begint32ime" field.</summary>
    public const int Begint32ImeFieldNumber = 3;
    private string begint32Ime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Begint32Ime {
      get { return begint32Ime_; }
      set {
        begint32Ime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private string endTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (LeftTime != other.LeftTime) return false;
      if (Begint32Ime != other.Begint32Ime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (LeftTime != 0) hash ^= LeftTime.GetHashCode();
      if (Begint32Ime.Length != 0) hash ^= Begint32Ime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (LeftTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      if (Begint32Ime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Begint32Ime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (LeftTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      if (Begint32Ime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Begint32Ime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (LeftTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (Begint32Ime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Begint32Ime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.ActivityInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.LeftTime != 0) {
        LeftTime = other.LeftTime;
      }
      if (other.Begint32Ime.Length != 0) {
        Begint32Ime = other.Begint32Ime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.ActivityInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            Begint32Ime = input.ReadString();
            break;
          }
          case 34: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.ActivityInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            Begint32Ime = input.ReadString();
            break;
          }
          case 34: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCNotifyActivityInfo : pb::IMessage<SCNotifyActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCNotifyActivityInfo> _parser = new pb::MessageParser<SCNotifyActivityInfo>(() => new SCNotifyActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCNotifyActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyActivityInfo(SCNotifyActivityInfo other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      leftTime_ = other.leftTime_;
      begint32Ime_ = other.begint32Ime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyActivityInfo Clone() {
      return new SCNotifyActivityInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.ActivityInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.ActivityInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "LeftTime" field.</summary>
    public const int LeftTimeFieldNumber = 2;
    private int leftTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftTime {
      get { return leftTime_; }
      set {
        leftTime_ = value;
      }
    }

    /// <summary>Field number for the "Begint32ime" field.</summary>
    public const int Begint32ImeFieldNumber = 3;
    private string begint32Ime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Begint32Ime {
      get { return begint32Ime_; }
      set {
        begint32Ime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private string endTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCNotifyActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCNotifyActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (LeftTime != other.LeftTime) return false;
      if (Begint32Ime != other.Begint32Ime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (LeftTime != 0) hash ^= LeftTime.GetHashCode();
      if (Begint32Ime.Length != 0) hash ^= Begint32Ime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (LeftTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      if (Begint32Ime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Begint32Ime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (LeftTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LeftTime);
      }
      if (Begint32Ime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Begint32Ime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (LeftTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftTime);
      }
      if (Begint32Ime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Begint32Ime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCNotifyActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.ActivityInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.LeftTime != 0) {
        LeftTime = other.LeftTime;
      }
      if (other.Begint32Ime.Length != 0) {
        Begint32Ime = other.Begint32Ime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.ActivityInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            Begint32Ime = input.ReadString();
            break;
          }
          case 34: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.ActivityInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            LeftTime = input.ReadInt32();
            break;
          }
          case 26: {
            Begint32Ime = input.ReadString();
            break;
          }
          case 34: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetActivityAward : pb::IMessage<CSGetActivityAward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetActivityAward> _parser = new pb::MessageParser<CSGetActivityAward>(() => new CSGetActivityAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetActivityAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetActivityAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetActivityAward(CSGetActivityAward other) : this() {
      iD_ = other.iD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetActivityAward Clone() {
      return new CSGetActivityAward(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetActivityAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetActivityAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetActivityAward other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetActivityAward : pb::IMessage<SCGetActivityAward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetActivityAward> _parser = new pb::MessageParser<SCGetActivityAward>(() => new SCGetActivityAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetActivityAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetActivityAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetActivityAward(SCGetActivityAward other) : this() {
      iD_ = other.iD_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetActivityAward Clone() {
      return new SCGetActivityAward(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private int flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetActivityAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetActivityAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (Flag != 0) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Flag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Flag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (Flag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetActivityAward other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.Flag != 0) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Flag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSButtonRecords : pb::IMessage<CSButtonRecords>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSButtonRecords> _parser = new pb::MessageParser<CSButtonRecords>(() => new CSButtonRecords());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSButtonRecords> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSButtonRecords() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSButtonRecords(CSButtonRecords other) : this() {
      iD_ = other.iD_;
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSButtonRecords Clone() {
      return new CSButtonRecords(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private int mode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSButtonRecords);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSButtonRecords other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (Mode != 0) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Mode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (Mode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (Mode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSButtonRecords other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.Mode != 0) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Mode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            Mode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCButtonRecords : pb::IMessage<SCButtonRecords>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCButtonRecords> _parser = new pb::MessageParser<SCButtonRecords>(() => new SCButtonRecords());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCButtonRecords> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCButtonRecords() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCButtonRecords(SCButtonRecords other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCButtonRecords Clone() {
      return new SCButtonRecords(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCButtonRecords);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCButtonRecords other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCButtonRecords other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class TowerHeroInfo : pb::IMessage<TowerHeroInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TowerHeroInfo> _parser = new pb::MessageParser<TowerHeroInfo>(() => new TowerHeroInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TowerHeroInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerHeroInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerHeroInfo(TowerHeroInfo other) : this() {
      heroId_ = other.heroId_;
      positionId_ = other.positionId_;
      isAtk_ = other.isAtk_;
      timestamp_ = other.timestamp_;
      targetPositionId_ = other.targetPositionId_;
      uniqueId_ = other.uniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerHeroInfo Clone() {
      return new TowerHeroInfo(this);
    }

    /// <summary>Field number for the "HeroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private int heroId_;
    /// <summary>
    ///kindID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroId {
      get { return heroId_; }
      set {
        heroId_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 2;
    private int positionId_;
    /// <summary>
    ///位置ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "IsAtk" field.</summary>
    public const int IsAtkFieldNumber = 3;
    private bool isAtk_;
    /// <summary>
    ///是否自动攻击
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAtk {
      get { return isAtk_; }
      set {
        isAtk_ = value;
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private int timestamp_;
    /// <summary>
    ///todo 暂时不管
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "TargetPositionId" field.</summary>
    public const int TargetPositionIdFieldNumber = 5;
    private int targetPositionId_;
    /// <summary>
    ///锁定目标ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetPositionId {
      get { return targetPositionId_; }
      set {
        targetPositionId_ = value;
      }
    }

    /// <summary>Field number for the "UniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 6;
    private int uniqueId_;
    /// <summary>
    ///唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TowerHeroInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TowerHeroInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      if (PositionId != other.PositionId) return false;
      if (IsAtk != other.IsAtk) return false;
      if (Timestamp != other.Timestamp) return false;
      if (TargetPositionId != other.TargetPositionId) return false;
      if (UniqueId != other.UniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId != 0) hash ^= HeroId.GetHashCode();
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (IsAtk != false) hash ^= IsAtk.GetHashCode();
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      if (TargetPositionId != 0) hash ^= TargetPositionId.GetHashCode();
      if (UniqueId != 0) hash ^= UniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HeroId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeroId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (IsAtk != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAtk);
      }
      if (Timestamp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Timestamp);
      }
      if (TargetPositionId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetPositionId);
      }
      if (UniqueId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HeroId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeroId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (IsAtk != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAtk);
      }
      if (Timestamp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Timestamp);
      }
      if (TargetPositionId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetPositionId);
      }
      if (UniqueId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroId);
      }
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (IsAtk != false) {
        size += 1 + 1;
      }
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
      }
      if (TargetPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetPositionId);
      }
      if (UniqueId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TowerHeroInfo other) {
      if (other == null) {
        return;
      }
      if (other.HeroId != 0) {
        HeroId = other.HeroId;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.IsAtk != false) {
        IsAtk = other.IsAtk;
      }
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      if (other.TargetPositionId != 0) {
        TargetPositionId = other.TargetPositionId;
      }
      if (other.UniqueId != 0) {
        UniqueId = other.UniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
          case 24: {
            IsAtk = input.ReadBool();
            break;
          }
          case 32: {
            Timestamp = input.ReadInt32();
            break;
          }
          case 40: {
            TargetPositionId = input.ReadInt32();
            break;
          }
          case 48: {
            UniqueId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HeroId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
          case 24: {
            IsAtk = input.ReadBool();
            break;
          }
          case 32: {
            Timestamp = input.ReadInt32();
            break;
          }
          case 40: {
            TargetPositionId = input.ReadInt32();
            break;
          }
          case 48: {
            UniqueId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TowerHeroAtkInfo : pb::IMessage<TowerHeroAtkInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TowerHeroAtkInfo> _parser = new pb::MessageParser<TowerHeroAtkInfo>(() => new TowerHeroAtkInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TowerHeroAtkInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerHeroAtkInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerHeroAtkInfo(TowerHeroAtkInfo other) : this() {
      heroPositionId_ = other.heroPositionId_;
      isAtk_ = other.isAtk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerHeroAtkInfo Clone() {
      return new TowerHeroAtkInfo(this);
    }

    /// <summary>Field number for the "HeroPositionId" field.</summary>
    public const int HeroPositionIdFieldNumber = 1;
    private int heroPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroPositionId {
      get { return heroPositionId_; }
      set {
        heroPositionId_ = value;
      }
    }

    /// <summary>Field number for the "IsAtk" field.</summary>
    public const int IsAtkFieldNumber = 2;
    private bool isAtk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAtk {
      get { return isAtk_; }
      set {
        isAtk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TowerHeroAtkInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TowerHeroAtkInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroPositionId != other.HeroPositionId) return false;
      if (IsAtk != other.IsAtk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroPositionId != 0) hash ^= HeroPositionId.GetHashCode();
      if (IsAtk != false) hash ^= IsAtk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HeroPositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeroPositionId);
      }
      if (IsAtk != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAtk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HeroPositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HeroPositionId);
      }
      if (IsAtk != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAtk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeroPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroPositionId);
      }
      if (IsAtk != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TowerHeroAtkInfo other) {
      if (other == null) {
        return;
      }
      if (other.HeroPositionId != 0) {
        HeroPositionId = other.HeroPositionId;
      }
      if (other.IsAtk != false) {
        IsAtk = other.IsAtk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroPositionId = input.ReadInt32();
            break;
          }
          case 16: {
            IsAtk = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HeroPositionId = input.ReadInt32();
            break;
          }
          case 16: {
            IsAtk = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TablePlayerInfo : pb::IMessage<TablePlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TablePlayerInfo> _parser = new pb::MessageParser<TablePlayerInfo>(() => new TablePlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TablePlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablePlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablePlayerInfo(TablePlayerInfo other) : this() {
      chairId_ = other.chairId_;
      playerId_ = other.playerId_;
      money_ = other.money_;
      sex_ = other.sex_;
      name_ = other.name_;
      head_ = other.head_;
      info_ = other.info_.Clone();
      moneyVariation_ = other.moneyVariation_;
      vipLevel_ = other.vipLevel_;
      isVip_ = other.isVip_;
      background_ = other.background_;
      effect_ = other.effect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TablePlayerInfo Clone() {
      return new TablePlayerInfo(this);
    }

    /// <summary>Field number for the "ChairId" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "Sex" field.</summary>
    public const int SexFieldNumber = 4;
    private int sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Head" field.</summary>
    public const int HeadFieldNumber = 6;
    private string head_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Head {
      get { return head_; }
      set {
        head_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 7;
    private static readonly pb::FieldCodec<global::JSBY.TowerHeroInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(58, global::JSBY.TowerHeroInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.TowerHeroInfo> info_ = new pbc::RepeatedField<global::JSBY.TowerHeroInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.TowerHeroInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "MoneyVariation" field.</summary>
    public const int MoneyVariationFieldNumber = 8;
    private int moneyVariation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MoneyVariation {
      get { return moneyVariation_; }
      set {
        moneyVariation_ = value;
      }
    }

    /// <summary>Field number for the "VipLevel" field.</summary>
    public const int VipLevelFieldNumber = 9;
    private int vipLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "IsVip" field.</summary>
    public const int IsVipFieldNumber = 10;
    private bool isVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVip {
      get { return isVip_; }
      set {
        isVip_ = value;
      }
    }

    /// <summary>Field number for the "Background" field.</summary>
    public const int BackgroundFieldNumber = 11;
    private int background_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Background {
      get { return background_; }
      set {
        background_ = value;
      }
    }

    /// <summary>Field number for the "Effect" field.</summary>
    public const int EffectFieldNumber = 12;
    private int effect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Effect {
      get { return effect_; }
      set {
        effect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TablePlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TablePlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Money != other.Money) return false;
      if (Sex != other.Sex) return false;
      if (Name != other.Name) return false;
      if (Head != other.Head) return false;
      if(!info_.Equals(other.info_)) return false;
      if (MoneyVariation != other.MoneyVariation) return false;
      if (VipLevel != other.VipLevel) return false;
      if (IsVip != other.IsVip) return false;
      if (Background != other.Background) return false;
      if (Effect != other.Effect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Head.Length != 0) hash ^= Head.GetHashCode();
      hash ^= info_.GetHashCode();
      if (MoneyVariation != 0) hash ^= MoneyVariation.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (IsVip != false) hash ^= IsVip.GetHashCode();
      if (Background != 0) hash ^= Background.GetHashCode();
      if (Effect != 0) hash ^= Effect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      if (Sex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Sex);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Head.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Head);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (MoneyVariation != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MoneyVariation);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(VipLevel);
      }
      if (IsVip != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsVip);
      }
      if (Background != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Background);
      }
      if (Effect != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Effect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      if (Sex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Sex);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Head.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Head);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (MoneyVariation != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MoneyVariation);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(VipLevel);
      }
      if (IsVip != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsVip);
      }
      if (Background != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Background);
      }
      if (Effect != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Effect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Head.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Head);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (MoneyVariation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoneyVariation);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (IsVip != false) {
        size += 1 + 1;
      }
      if (Background != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Background);
      }
      if (Effect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Effect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TablePlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Head.Length != 0) {
        Head = other.Head;
      }
      info_.Add(other.info_);
      if (other.MoneyVariation != 0) {
        MoneyVariation = other.MoneyVariation;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.IsVip != false) {
        IsVip = other.IsVip;
      }
      if (other.Background != 0) {
        Background = other.Background;
      }
      if (other.Effect != 0) {
        Effect = other.Effect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
          case 32: {
            Sex = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Head = input.ReadString();
            break;
          }
          case 58: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 64: {
            MoneyVariation = input.ReadInt32();
            break;
          }
          case 72: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 80: {
            IsVip = input.ReadBool();
            break;
          }
          case 88: {
            Background = input.ReadInt32();
            break;
          }
          case 96: {
            Effect = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
          case 32: {
            Sex = input.ReadInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Head = input.ReadString();
            break;
          }
          case 58: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 64: {
            MoneyVariation = input.ReadInt32();
            break;
          }
          case 72: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 80: {
            IsVip = input.ReadBool();
            break;
          }
          case 88: {
            Background = input.ReadInt32();
            break;
          }
          case 96: {
            Effect = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCNotifyTowerTablePlayer : pb::IMessage<SCNotifyTowerTablePlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCNotifyTowerTablePlayer> _parser = new pb::MessageParser<SCNotifyTowerTablePlayer>(() => new SCNotifyTowerTablePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCNotifyTowerTablePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyTowerTablePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyTowerTablePlayer(SCNotifyTowerTablePlayer other) : this() {
      info_ = other.info_.Clone();
      tableID_ = other.tableID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyTowerTablePlayer Clone() {
      return new SCNotifyTowerTablePlayer(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.TablePlayerInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.TablePlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.TablePlayerInfo> info_ = new pbc::RepeatedField<global::JSBY.TablePlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.TablePlayerInfo> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "TableID" field.</summary>
    public const int TableIDFieldNumber = 2;
    private int tableID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableID {
      get { return tableID_; }
      set {
        tableID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCNotifyTowerTablePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCNotifyTowerTablePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      if (TableID != other.TableID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (TableID != 0) hash ^= TableID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (TableID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (TableID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (TableID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCNotifyTowerTablePlayer other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      if (other.TableID != 0) {
        TableID = other.TableID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 16: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 16: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLeaveTowerTable : pb::IMessage<SCLeaveTowerTable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLeaveTowerTable> _parser = new pb::MessageParser<SCLeaveTowerTable>(() => new SCLeaveTowerTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLeaveTowerTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveTowerTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveTowerTable(SCLeaveTowerTable other) : this() {
      playerId_ = other.playerId_;
      isAgainEnter_ = other.isAgainEnter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveTowerTable Clone() {
      return new SCLeaveTowerTable(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "IsAgainEnter" field.</summary>
    public const int IsAgainEnterFieldNumber = 2;
    private bool isAgainEnter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAgainEnter {
      get { return isAgainEnter_; }
      set {
        isAgainEnter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLeaveTowerTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLeaveTowerTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (IsAgainEnter != other.IsAgainEnter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (IsAgainEnter != false) hash ^= IsAgainEnter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (IsAgainEnter != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAgainEnter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (IsAgainEnter != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAgainEnter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (IsAgainEnter != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLeaveTowerTable other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.IsAgainEnter != false) {
        IsAgainEnter = other.IsAgainEnter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            IsAgainEnter = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            IsAgainEnter = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TowerMonster : pb::IMessage<TowerMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TowerMonster> _parser = new pb::MessageParser<TowerMonster>(() => new TowerMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TowerMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerMonster(TowerMonster other) : this() {
      position_ = other.position_;
      processTime_ = other.processTime_;
      readyTime_ = other.readyTime_;
      monsterID_ = other.monsterID_;
      buff_ = other.buff_.Clone();
      isConnect_ = other.isConnect_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerMonster Clone() {
      return new TowerMonster(this);
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 1;
    private int position_;
    /// <summary>
    ///ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "ProcessTime" field.</summary>
    public const int ProcessTimeFieldNumber = 2;
    private int processTime_;
    /// <summary>
    ///已过时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessTime {
      get { return processTime_; }
      set {
        processTime_ = value;
      }
    }

    /// <summary>Field number for the "ReadyTime" field.</summary>
    public const int ReadyTimeFieldNumber = 3;
    private int readyTime_;
    /// <summary>
    ///出生时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReadyTime {
      get { return readyTime_; }
      set {
        readyTime_ = value;
      }
    }

    /// <summary>Field number for the "MonsterID" field.</summary>
    public const int MonsterIDFieldNumber = 4;
    private int monsterID_;
    /// <summary>
    ///kindID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterID {
      get { return monsterID_; }
      set {
        monsterID_ = value;
      }
    }

    /// <summary>Field number for the "Buff" field.</summary>
    public const int BuffFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_buff_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> buff_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///todo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Buff {
      get { return buff_; }
    }

    /// <summary>Field number for the "IsConnect" field.</summary>
    public const int IsConnectFieldNumber = 6;
    private bool isConnect_;
    /// <summary>
    ///是否是连接怪
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConnect {
      get { return isConnect_; }
      set {
        isConnect_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 7;
    private int level_;
    /// <summary>
    ///倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TowerMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TowerMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Position != other.Position) return false;
      if (ProcessTime != other.ProcessTime) return false;
      if (ReadyTime != other.ReadyTime) return false;
      if (MonsterID != other.MonsterID) return false;
      if(!buff_.Equals(other.buff_)) return false;
      if (IsConnect != other.IsConnect) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Position != 0) hash ^= Position.GetHashCode();
      if (ProcessTime != 0) hash ^= ProcessTime.GetHashCode();
      if (ReadyTime != 0) hash ^= ReadyTime.GetHashCode();
      if (MonsterID != 0) hash ^= MonsterID.GetHashCode();
      hash ^= buff_.GetHashCode();
      if (IsConnect != false) hash ^= IsConnect.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Position != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Position);
      }
      if (ProcessTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProcessTime);
      }
      if (ReadyTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReadyTime);
      }
      if (MonsterID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MonsterID);
      }
      buff_.WriteTo(output, _repeated_buff_codec);
      if (IsConnect != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsConnect);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Position != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Position);
      }
      if (ProcessTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProcessTime);
      }
      if (ReadyTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReadyTime);
      }
      if (MonsterID != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MonsterID);
      }
      buff_.WriteTo(ref output, _repeated_buff_codec);
      if (IsConnect != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsConnect);
      }
      if (Level != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Position != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Position);
      }
      if (ProcessTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessTime);
      }
      if (ReadyTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReadyTime);
      }
      if (MonsterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterID);
      }
      size += buff_.CalculateSize(_repeated_buff_codec);
      if (IsConnect != false) {
        size += 1 + 1;
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TowerMonster other) {
      if (other == null) {
        return;
      }
      if (other.Position != 0) {
        Position = other.Position;
      }
      if (other.ProcessTime != 0) {
        ProcessTime = other.ProcessTime;
      }
      if (other.ReadyTime != 0) {
        ReadyTime = other.ReadyTime;
      }
      if (other.MonsterID != 0) {
        MonsterID = other.MonsterID;
      }
      buff_.Add(other.buff_);
      if (other.IsConnect != false) {
        IsConnect = other.IsConnect;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Position = input.ReadInt32();
            break;
          }
          case 16: {
            ProcessTime = input.ReadInt32();
            break;
          }
          case 24: {
            ReadyTime = input.ReadInt32();
            break;
          }
          case 32: {
            MonsterID = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            buff_.AddEntriesFrom(input, _repeated_buff_codec);
            break;
          }
          case 48: {
            IsConnect = input.ReadBool();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Position = input.ReadInt32();
            break;
          }
          case 16: {
            ProcessTime = input.ReadInt32();
            break;
          }
          case 24: {
            ReadyTime = input.ReadInt32();
            break;
          }
          case 32: {
            MonsterID = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            buff_.AddEntriesFrom(ref input, _repeated_buff_codec);
            break;
          }
          case 48: {
            IsConnect = input.ReadBool();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChannelTowerMonster : pb::IMessage<ChannelTowerMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChannelTowerMonster> _parser = new pb::MessageParser<ChannelTowerMonster>(() => new ChannelTowerMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChannelTowerMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelTowerMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelTowerMonster(ChannelTowerMonster other) : this() {
      channelId_ = other.channelId_;
      channelInfo_ = other.channelInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelTowerMonster Clone() {
      return new ChannelTowerMonster(this);
    }

    /// <summary>Field number for the "ChannelId" field.</summary>
    public const int ChannelIdFieldNumber = 1;
    private int channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "ChannelInfo" field.</summary>
    public const int ChannelInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::JSBY.TowerMonster> _repeated_channelInfo_codec
        = pb::FieldCodec.ForMessage(18, global::JSBY.TowerMonster.Parser);
    private readonly pbc::RepeatedField<global::JSBY.TowerMonster> channelInfo_ = new pbc::RepeatedField<global::JSBY.TowerMonster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.TowerMonster> ChannelInfo {
      get { return channelInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChannelTowerMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChannelTowerMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      if(!channelInfo_.Equals(other.channelInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      hash ^= channelInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChannelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChannelId);
      }
      channelInfo_.WriteTo(output, _repeated_channelInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChannelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChannelId);
      }
      channelInfo_.WriteTo(ref output, _repeated_channelInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
      }
      size += channelInfo_.CalculateSize(_repeated_channelInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChannelTowerMonster other) {
      if (other == null) {
        return;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      channelInfo_.Add(other.channelInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelId = input.ReadInt32();
            break;
          }
          case 18: {
            channelInfo_.AddEntriesFrom(input, _repeated_channelInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChannelId = input.ReadInt32();
            break;
          }
          case 18: {
            channelInfo_.AddEntriesFrom(ref input, _repeated_channelInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetTowerMonster : pb::IMessage<SCGetTowerMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetTowerMonster> _parser = new pb::MessageParser<SCGetTowerMonster>(() => new SCGetTowerMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetTowerMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTowerMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTowerMonster(SCGetTowerMonster other) : this() {
      reqPlayerId_ = other.reqPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTowerMonster Clone() {
      return new SCGetTowerMonster(this);
    }

    /// <summary>Field number for the "ReqPlayerId" field.</summary>
    public const int ReqPlayerIdFieldNumber = 1;
    private int reqPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqPlayerId {
      get { return reqPlayerId_; }
      set {
        reqPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetTowerMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetTowerMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqPlayerId != other.ReqPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReqPlayerId != 0) hash ^= ReqPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReqPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReqPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReqPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetTowerMonster other) {
      if (other == null) {
        return;
      }
      if (other.ReqPlayerId != 0) {
        ReqPlayerId = other.ReqPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetTowerMonster : pb::IMessage<CSGetTowerMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetTowerMonster> _parser = new pb::MessageParser<CSGetTowerMonster>(() => new CSGetTowerMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetTowerMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTowerMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTowerMonster(CSGetTowerMonster other) : this() {
      reqPlayerId_ = other.reqPlayerId_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTowerMonster Clone() {
      return new CSGetTowerMonster(this);
    }

    /// <summary>Field number for the "ReqPlayerId" field.</summary>
    public const int ReqPlayerIdFieldNumber = 1;
    private int reqPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqPlayerId {
      get { return reqPlayerId_; }
      set {
        reqPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::JSBY.ChannelTowerMonster info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.ChannelTowerMonster Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetTowerMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetTowerMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqPlayerId != other.ReqPlayerId) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReqPlayerId != 0) hash ^= ReqPlayerId.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReqPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqPlayerId);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReqPlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqPlayerId);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReqPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqPlayerId);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetTowerMonster other) {
      if (other == null) {
        return;
      }
      if (other.ReqPlayerId != 0) {
        ReqPlayerId = other.ReqPlayerId;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.ChannelTowerMonster();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::JSBY.ChannelTowerMonster();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::JSBY.ChannelTowerMonster();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncGetTowerMonster : pb::IMessage<SCSyncGetTowerMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncGetTowerMonster> _parser = new pb::MessageParser<SCSyncGetTowerMonster>(() => new SCSyncGetTowerMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncGetTowerMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncGetTowerMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncGetTowerMonster(SCSyncGetTowerMonster other) : this() {
      tableID_ = other.tableID_;
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncGetTowerMonster Clone() {
      return new SCSyncGetTowerMonster(this);
    }

    /// <summary>Field number for the "TableID" field.</summary>
    public const int TableIDFieldNumber = 1;
    private int tableID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableID {
      get { return tableID_; }
      set {
        tableID_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::JSBY.ChannelTowerMonster> _repeated_info_codec
        = pb::FieldCodec.ForMessage(18, global::JSBY.ChannelTowerMonster.Parser);
    private readonly pbc::RepeatedField<global::JSBY.ChannelTowerMonster> info_ = new pbc::RepeatedField<global::JSBY.ChannelTowerMonster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.ChannelTowerMonster> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncGetTowerMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncGetTowerMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableID != other.TableID) return false;
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableID != 0) hash ^= TableID.GetHashCode();
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableID);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableID);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableID);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncGetTowerMonster other) {
      if (other == null) {
        return;
      }
      if (other.TableID != 0) {
        TableID = other.TableID;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableID = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableID = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTowerMonster : pb::IMessage<SCTowerMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTowerMonster> _parser = new pb::MessageParser<SCTowerMonster>(() => new SCTowerMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTowerMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerMonster(SCTowerMonster other) : this() {
      tableID_ = other.tableID_;
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerMonster Clone() {
      return new SCTowerMonster(this);
    }

    /// <summary>Field number for the "TableID" field.</summary>
    public const int TableIDFieldNumber = 1;
    private int tableID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableID {
      get { return tableID_; }
      set {
        tableID_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::JSBY.ChannelTowerMonster> _repeated_info_codec
        = pb::FieldCodec.ForMessage(18, global::JSBY.ChannelTowerMonster.Parser);
    private readonly pbc::RepeatedField<global::JSBY.ChannelTowerMonster> info_ = new pbc::RepeatedField<global::JSBY.ChannelTowerMonster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.ChannelTowerMonster> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTowerMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTowerMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableID != other.TableID) return false;
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableID != 0) hash ^= TableID.GetHashCode();
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableID);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableID);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableID);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTowerMonster other) {
      if (other == null) {
        return;
      }
      if (other.TableID != 0) {
        TableID = other.TableID;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableID = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableID = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSTowerHeroAtkInfo : pb::IMessage<CSTowerHeroAtkInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTowerHeroAtkInfo> _parser = new pb::MessageParser<CSTowerHeroAtkInfo>(() => new CSTowerHeroAtkInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTowerHeroAtkInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerHeroAtkInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerHeroAtkInfo(CSTowerHeroAtkInfo other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerHeroAtkInfo Clone() {
      return new CSTowerHeroAtkInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.TowerHeroAtkInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.TowerHeroAtkInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.TowerHeroAtkInfo> info_ = new pbc::RepeatedField<global::JSBY.TowerHeroAtkInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.TowerHeroAtkInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTowerHeroAtkInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTowerHeroAtkInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTowerHeroAtkInfo other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTowerHeroAtkInfo : pb::IMessage<SCTowerHeroAtkInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTowerHeroAtkInfo> _parser = new pb::MessageParser<SCTowerHeroAtkInfo>(() => new SCTowerHeroAtkInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTowerHeroAtkInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerHeroAtkInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerHeroAtkInfo(SCTowerHeroAtkInfo other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerHeroAtkInfo Clone() {
      return new SCTowerHeroAtkInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.TowerHeroAtkInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.TowerHeroAtkInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.TowerHeroAtkInfo> info_ = new pbc::RepeatedField<global::JSBY.TowerHeroAtkInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.TowerHeroAtkInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTowerHeroAtkInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTowerHeroAtkInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTowerHeroAtkInfo other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSTowerUpdateHero : pb::IMessage<CSTowerUpdateHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTowerUpdateHero> _parser = new pb::MessageParser<CSTowerUpdateHero>(() => new CSTowerUpdateHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTowerUpdateHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerUpdateHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerUpdateHero(CSTowerUpdateHero other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      leave_ = other.leave_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerUpdateHero Clone() {
      return new CSTowerUpdateHero(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.TowerHeroInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TowerHeroInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "Leave" field.</summary>
    public const int LeaveFieldNumber = 2;
    private bool leave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Leave {
      get { return leave_; }
      set {
        leave_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTowerUpdateHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTowerUpdateHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (Leave != other.Leave) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (Leave != false) hash ^= Leave.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (Leave != false) {
        output.WriteRawTag(16);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (Leave != false) {
        output.WriteRawTag(16);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (Leave != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTowerUpdateHero other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.TowerHeroInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.Leave != false) {
        Leave = other.Leave;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TowerHeroInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TowerHeroInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTowerUpdateHero : pb::IMessage<SCTowerUpdateHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTowerUpdateHero> _parser = new pb::MessageParser<SCTowerUpdateHero>(() => new SCTowerUpdateHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTowerUpdateHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerUpdateHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerUpdateHero(SCTowerUpdateHero other) : this() {
      uniqueId_ = other.uniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerUpdateHero Clone() {
      return new SCTowerUpdateHero(this);
    }

    /// <summary>Field number for the "UniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 1;
    private int uniqueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTowerUpdateHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTowerUpdateHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueId != other.UniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueId != 0) hash ^= UniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UniqueId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTowerUpdateHero other) {
      if (other == null) {
        return;
      }
      if (other.UniqueId != 0) {
        UniqueId = other.UniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UniqueId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushTowerUpdateHero : pb::IMessage<SCPushTowerUpdateHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushTowerUpdateHero> _parser = new pb::MessageParser<SCPushTowerUpdateHero>(() => new SCPushTowerUpdateHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushTowerUpdateHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushTowerUpdateHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushTowerUpdateHero(SCPushTowerUpdateHero other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      reqPlayerId_ = other.reqPlayerId_;
      leave_ = other.leave_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushTowerUpdateHero Clone() {
      return new SCPushTowerUpdateHero(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.TowerHeroInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TowerHeroInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "ReqPlayerId" field.</summary>
    public const int ReqPlayerIdFieldNumber = 2;
    private int reqPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqPlayerId {
      get { return reqPlayerId_; }
      set {
        reqPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "Leave" field.</summary>
    public const int LeaveFieldNumber = 3;
    private bool leave_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Leave {
      get { return leave_; }
      set {
        leave_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushTowerUpdateHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushTowerUpdateHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if (ReqPlayerId != other.ReqPlayerId) return false;
      if (Leave != other.Leave) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (ReqPlayerId != 0) hash ^= ReqPlayerId.GetHashCode();
      if (Leave != false) hash ^= Leave.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (ReqPlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReqPlayerId);
      }
      if (Leave != false) {
        output.WriteRawTag(24);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (ReqPlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReqPlayerId);
      }
      if (Leave != false) {
        output.WriteRawTag(24);
        output.WriteBool(Leave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (ReqPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqPlayerId);
      }
      if (Leave != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushTowerUpdateHero other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.TowerHeroInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.ReqPlayerId != 0) {
        ReqPlayerId = other.ReqPlayerId;
      }
      if (other.Leave != false) {
        Leave = other.Leave;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TowerHeroInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.TowerHeroInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 16: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Leave = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LockTargetInfo : pb::IMessage<LockTargetInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LockTargetInfo> _parser = new pb::MessageParser<LockTargetInfo>(() => new LockTargetInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LockTargetInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockTargetInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockTargetInfo(LockTargetInfo other) : this() {
      positionId_ = other.positionId_;
      targetPositionId_ = other.targetPositionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockTargetInfo Clone() {
      return new LockTargetInfo(this);
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "TargetPositionId" field.</summary>
    public const int TargetPositionIdFieldNumber = 2;
    private int targetPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetPositionId {
      get { return targetPositionId_; }
      set {
        targetPositionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LockTargetInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LockTargetInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionId != other.PositionId) return false;
      if (TargetPositionId != other.TargetPositionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (TargetPositionId != 0) hash ^= TargetPositionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (TargetPositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (TargetPositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (TargetPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetPositionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LockTargetInfo other) {
      if (other == null) {
        return;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.TargetPositionId != 0) {
        TargetPositionId = other.TargetPositionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            TargetPositionId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            TargetPositionId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSTowerPlayerLockTarget : pb::IMessage<CSTowerPlayerLockTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTowerPlayerLockTarget> _parser = new pb::MessageParser<CSTowerPlayerLockTarget>(() => new CSTowerPlayerLockTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTowerPlayerLockTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerPlayerLockTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerPlayerLockTarget(CSTowerPlayerLockTarget other) : this() {
      lockInfo_ = other.lockInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerPlayerLockTarget Clone() {
      return new CSTowerPlayerLockTarget(this);
    }

    /// <summary>Field number for the "LockInfo" field.</summary>
    public const int LockInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.LockTargetInfo> _repeated_lockInfo_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.LockTargetInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.LockTargetInfo> lockInfo_ = new pbc::RepeatedField<global::JSBY.LockTargetInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.LockTargetInfo> LockInfo {
      get { return lockInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTowerPlayerLockTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTowerPlayerLockTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lockInfo_.Equals(other.lockInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lockInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      lockInfo_.WriteTo(output, _repeated_lockInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      lockInfo_.WriteTo(ref output, _repeated_lockInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lockInfo_.CalculateSize(_repeated_lockInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTowerPlayerLockTarget other) {
      if (other == null) {
        return;
      }
      lockInfo_.Add(other.lockInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lockInfo_.AddEntriesFrom(input, _repeated_lockInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            lockInfo_.AddEntriesFrom(ref input, _repeated_lockInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTowerPlayerLockTarget : pb::IMessage<SCTowerPlayerLockTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTowerPlayerLockTarget> _parser = new pb::MessageParser<SCTowerPlayerLockTarget>(() => new SCTowerPlayerLockTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTowerPlayerLockTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerPlayerLockTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerPlayerLockTarget(SCTowerPlayerLockTarget other) : this() {
      lockInfo_ = other.lockInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerPlayerLockTarget Clone() {
      return new SCTowerPlayerLockTarget(this);
    }

    /// <summary>Field number for the "LockInfo" field.</summary>
    public const int LockInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.LockTargetInfo> _repeated_lockInfo_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.LockTargetInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.LockTargetInfo> lockInfo_ = new pbc::RepeatedField<global::JSBY.LockTargetInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.LockTargetInfo> LockInfo {
      get { return lockInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTowerPlayerLockTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTowerPlayerLockTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lockInfo_.Equals(other.lockInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lockInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      lockInfo_.WriteTo(output, _repeated_lockInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      lockInfo_.WriteTo(ref output, _repeated_lockInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lockInfo_.CalculateSize(_repeated_lockInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTowerPlayerLockTarget other) {
      if (other == null) {
        return;
      }
      lockInfo_.Add(other.lockInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lockInfo_.AddEntriesFrom(input, _repeated_lockInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            lockInfo_.AddEntriesFrom(ref input, _repeated_lockInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSChangeBackground : pb::IMessage<CSChangeBackground>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSChangeBackground> _parser = new pb::MessageParser<CSChangeBackground>(() => new CSChangeBackground());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSChangeBackground> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangeBackground() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangeBackground(CSChangeBackground other) : this() {
      isBack_ = other.isBack_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangeBackground Clone() {
      return new CSChangeBackground(this);
    }

    /// <summary>Field number for the "IsBack" field.</summary>
    public const int IsBackFieldNumber = 1;
    private bool isBack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBack {
      get { return isBack_; }
      set {
        isBack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSChangeBackground);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSChangeBackground other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBack != other.IsBack) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBack != false) hash ^= IsBack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsBack != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsBack != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBack != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSChangeBackground other) {
      if (other == null) {
        return;
      }
      if (other.IsBack != false) {
        IsBack = other.IsBack;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBack = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsBack = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCChangeBackground : pb::IMessage<SCChangeBackground>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCChangeBackground> _parser = new pb::MessageParser<SCChangeBackground>(() => new SCChangeBackground());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChangeBackground> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeBackground() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeBackground(SCChangeBackground other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeBackground Clone() {
      return new SCChangeBackground(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChangeBackground);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChangeBackground other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChangeBackground other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CSTowerMonsterExit : pb::IMessage<CSTowerMonsterExit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTowerMonsterExit> _parser = new pb::MessageParser<CSTowerMonsterExit>(() => new CSTowerMonsterExit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTowerMonsterExit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerMonsterExit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerMonsterExit(CSTowerMonsterExit other) : this() {
      positionId_ = other.positionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerMonsterExit Clone() {
      return new CSTowerMonsterExit(this);
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTowerMonsterExit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTowerMonsterExit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionId != other.PositionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTowerMonsterExit other) {
      if (other == null) {
        return;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTowerMonsterExit : pb::IMessage<SCTowerMonsterExit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTowerMonsterExit> _parser = new pb::MessageParser<SCTowerMonsterExit>(() => new SCTowerMonsterExit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTowerMonsterExit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerMonsterExit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerMonsterExit(SCTowerMonsterExit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerMonsterExit Clone() {
      return new SCTowerMonsterExit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTowerMonsterExit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTowerMonsterExit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTowerMonsterExit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetCurrentTime : pb::IMessage<CSGetCurrentTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetCurrentTime> _parser = new pb::MessageParser<CSGetCurrentTime>(() => new CSGetCurrentTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetCurrentTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetCurrentTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetCurrentTime(CSGetCurrentTime other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetCurrentTime Clone() {
      return new CSGetCurrentTime(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetCurrentTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetCurrentTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetCurrentTime other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetCurrentTime : pb::IMessage<SCGetCurrentTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetCurrentTime> _parser = new pb::MessageParser<SCGetCurrentTime>(() => new SCGetCurrentTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetCurrentTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetCurrentTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetCurrentTime(SCGetCurrentTime other) : this() {
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetCurrentTime Clone() {
      return new SCGetCurrentTime(this);
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private int timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetCurrentTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetCurrentTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Timestamp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Timestamp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetCurrentTime other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TowerGuideInfo : pb::IMessage<TowerGuideInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TowerGuideInfo> _parser = new pb::MessageParser<TowerGuideInfo>(() => new TowerGuideInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TowerGuideInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerGuideInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerGuideInfo(TowerGuideInfo other) : this() {
      guideStep_ = other.guideStep_;
      isFinsh_ = other.isFinsh_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TowerGuideInfo Clone() {
      return new TowerGuideInfo(this);
    }

    /// <summary>Field number for the "GuideStep" field.</summary>
    public const int GuideStepFieldNumber = 1;
    private int guideStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GuideStep {
      get { return guideStep_; }
      set {
        guideStep_ = value;
      }
    }

    /// <summary>Field number for the "IsFinsh" field.</summary>
    public const int IsFinshFieldNumber = 2;
    private bool isFinsh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFinsh {
      get { return isFinsh_; }
      set {
        isFinsh_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TowerGuideInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TowerGuideInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuideStep != other.GuideStep) return false;
      if (IsFinsh != other.IsFinsh) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuideStep != 0) hash ^= GuideStep.GetHashCode();
      if (IsFinsh != false) hash ^= IsFinsh.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GuideStep != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GuideStep);
      }
      if (IsFinsh != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFinsh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GuideStep != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GuideStep);
      }
      if (IsFinsh != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFinsh);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuideStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GuideStep);
      }
      if (IsFinsh != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TowerGuideInfo other) {
      if (other == null) {
        return;
      }
      if (other.GuideStep != 0) {
        GuideStep = other.GuideStep;
      }
      if (other.IsFinsh != false) {
        IsFinsh = other.IsFinsh;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GuideStep = input.ReadInt32();
            break;
          }
          case 16: {
            IsFinsh = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GuideStep = input.ReadInt32();
            break;
          }
          case 16: {
            IsFinsh = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetTowerStep : pb::IMessage<CSGetTowerStep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetTowerStep> _parser = new pb::MessageParser<CSGetTowerStep>(() => new CSGetTowerStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetTowerStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTowerStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTowerStep(CSGetTowerStep other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTowerStep Clone() {
      return new CSGetTowerStep(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetTowerStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetTowerStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetTowerStep other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetTowerGuide : pb::IMessage<SCGetTowerGuide>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetTowerGuide> _parser = new pb::MessageParser<SCGetTowerGuide>(() => new SCGetTowerGuide());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetTowerGuide> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTowerGuide() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTowerGuide(SCGetTowerGuide other) : this() {
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTowerGuide Clone() {
      return new SCGetTowerGuide(this);
    }

    /// <summary>Field number for the "GuideInfo" field.</summary>
    public const int GuideInfoFieldNumber = 1;
    private global::JSBY.TowerGuideInfo guideInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TowerGuideInfo GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetTowerGuide);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetTowerGuide other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (guideInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GuideInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (guideInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GuideInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetTowerGuide other) {
      if (other == null) {
        return;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::JSBY.TowerGuideInfo();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (guideInfo_ == null) {
              GuideInfo = new global::JSBY.TowerGuideInfo();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (guideInfo_ == null) {
              GuideInfo = new global::JSBY.TowerGuideInfo();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSetTowerStep : pb::IMessage<CSSetTowerStep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSetTowerStep> _parser = new pb::MessageParser<CSSetTowerStep>(() => new CSSetTowerStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSetTowerStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetTowerStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetTowerStep(CSSetTowerStep other) : this() {
      guideInfo_ = other.guideInfo_ != null ? other.guideInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetTowerStep Clone() {
      return new CSSetTowerStep(this);
    }

    /// <summary>Field number for the "GuideInfo" field.</summary>
    public const int GuideInfoFieldNumber = 1;
    private global::JSBY.TowerGuideInfo guideInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TowerGuideInfo GuideInfo {
      get { return guideInfo_; }
      set {
        guideInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSetTowerStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSetTowerStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GuideInfo, other.GuideInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (guideInfo_ != null) hash ^= GuideInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (guideInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GuideInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (guideInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GuideInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (guideInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSetTowerStep other) {
      if (other == null) {
        return;
      }
      if (other.guideInfo_ != null) {
        if (guideInfo_ == null) {
          GuideInfo = new global::JSBY.TowerGuideInfo();
        }
        GuideInfo.MergeFrom(other.GuideInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (guideInfo_ == null) {
              GuideInfo = new global::JSBY.TowerGuideInfo();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (guideInfo_ == null) {
              GuideInfo = new global::JSBY.TowerGuideInfo();
            }
            input.ReadMessage(GuideInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSetTowerStep : pb::IMessage<SCSetTowerStep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSetTowerStep> _parser = new pb::MessageParser<SCSetTowerStep>(() => new SCSetTowerStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSetTowerStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetTowerStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetTowerStep(SCSetTowerStep other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetTowerStep Clone() {
      return new SCSetTowerStep(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSetTowerStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSetTowerStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSetTowerStep other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CSTowerExchangeHero : pb::IMessage<CSTowerExchangeHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTowerExchangeHero> _parser = new pb::MessageParser<CSTowerExchangeHero>(() => new CSTowerExchangeHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTowerExchangeHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerExchangeHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerExchangeHero(CSTowerExchangeHero other) : this() {
      newPositionId_ = other.newPositionId_;
      oldPositionId_ = other.oldPositionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTowerExchangeHero Clone() {
      return new CSTowerExchangeHero(this);
    }

    /// <summary>Field number for the "NewPositionId" field.</summary>
    public const int NewPositionIdFieldNumber = 1;
    private int newPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewPositionId {
      get { return newPositionId_; }
      set {
        newPositionId_ = value;
      }
    }

    /// <summary>Field number for the "OldPositionId" field.</summary>
    public const int OldPositionIdFieldNumber = 2;
    private int oldPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OldPositionId {
      get { return oldPositionId_; }
      set {
        oldPositionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTowerExchangeHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTowerExchangeHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewPositionId != other.NewPositionId) return false;
      if (OldPositionId != other.OldPositionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewPositionId != 0) hash ^= NewPositionId.GetHashCode();
      if (OldPositionId != 0) hash ^= OldPositionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NewPositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewPositionId);
      }
      if (OldPositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OldPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NewPositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewPositionId);
      }
      if (OldPositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OldPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewPositionId);
      }
      if (OldPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldPositionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTowerExchangeHero other) {
      if (other == null) {
        return;
      }
      if (other.NewPositionId != 0) {
        NewPositionId = other.NewPositionId;
      }
      if (other.OldPositionId != 0) {
        OldPositionId = other.OldPositionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewPositionId = input.ReadInt32();
            break;
          }
          case 16: {
            OldPositionId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NewPositionId = input.ReadInt32();
            break;
          }
          case 16: {
            OldPositionId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTowerExchangeHero : pb::IMessage<SCTowerExchangeHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTowerExchangeHero> _parser = new pb::MessageParser<SCTowerExchangeHero>(() => new SCTowerExchangeHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTowerExchangeHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerExchangeHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerExchangeHero(SCTowerExchangeHero other) : this() {
      newPositionId_ = other.newPositionId_;
      oldPositionId_ = other.oldPositionId_;
      reqPlayerId_ = other.reqPlayerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTowerExchangeHero Clone() {
      return new SCTowerExchangeHero(this);
    }

    /// <summary>Field number for the "NewPositionId" field.</summary>
    public const int NewPositionIdFieldNumber = 1;
    private int newPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewPositionId {
      get { return newPositionId_; }
      set {
        newPositionId_ = value;
      }
    }

    /// <summary>Field number for the "OldPositionId" field.</summary>
    public const int OldPositionIdFieldNumber = 2;
    private int oldPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OldPositionId {
      get { return oldPositionId_; }
      set {
        oldPositionId_ = value;
      }
    }

    /// <summary>Field number for the "ReqPlayerId" field.</summary>
    public const int ReqPlayerIdFieldNumber = 3;
    private int reqPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqPlayerId {
      get { return reqPlayerId_; }
      set {
        reqPlayerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTowerExchangeHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTowerExchangeHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewPositionId != other.NewPositionId) return false;
      if (OldPositionId != other.OldPositionId) return false;
      if (ReqPlayerId != other.ReqPlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NewPositionId != 0) hash ^= NewPositionId.GetHashCode();
      if (OldPositionId != 0) hash ^= OldPositionId.GetHashCode();
      if (ReqPlayerId != 0) hash ^= ReqPlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NewPositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewPositionId);
      }
      if (OldPositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OldPositionId);
      }
      if (ReqPlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReqPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NewPositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewPositionId);
      }
      if (OldPositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OldPositionId);
      }
      if (ReqPlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ReqPlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NewPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewPositionId);
      }
      if (OldPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldPositionId);
      }
      if (ReqPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqPlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTowerExchangeHero other) {
      if (other == null) {
        return;
      }
      if (other.NewPositionId != 0) {
        NewPositionId = other.NewPositionId;
      }
      if (other.OldPositionId != 0) {
        OldPositionId = other.OldPositionId;
      }
      if (other.ReqPlayerId != 0) {
        ReqPlayerId = other.ReqPlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewPositionId = input.ReadInt32();
            break;
          }
          case 16: {
            OldPositionId = input.ReadInt32();
            break;
          }
          case 24: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NewPositionId = input.ReadInt32();
            break;
          }
          case 16: {
            OldPositionId = input.ReadInt32();
            break;
          }
          case 24: {
            ReqPlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLeaveTowerTableCountdown : pb::IMessage<SCLeaveTowerTableCountdown>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLeaveTowerTableCountdown> _parser = new pb::MessageParser<SCLeaveTowerTableCountdown>(() => new SCLeaveTowerTableCountdown());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLeaveTowerTableCountdown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveTowerTableCountdown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveTowerTableCountdown(SCLeaveTowerTableCountdown other) : this() {
      tableID_ = other.tableID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLeaveTowerTableCountdown Clone() {
      return new SCLeaveTowerTableCountdown(this);
    }

    /// <summary>Field number for the "TableID" field.</summary>
    public const int TableIDFieldNumber = 1;
    private int tableID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableID {
      get { return tableID_; }
      set {
        tableID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLeaveTowerTableCountdown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLeaveTowerTableCountdown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableID != other.TableID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableID != 0) hash ^= TableID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLeaveTowerTableCountdown other) {
      if (other == null) {
        return;
      }
      if (other.TableID != 0) {
        TableID = other.TableID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoisonBombLocation : pb::IMessage<PoisonBombLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoisonBombLocation> _parser = new pb::MessageParser<PoisonBombLocation>(() => new PoisonBombLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoisonBombLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonBombLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonBombLocation(PoisonBombLocation other) : this() {
      iD_ = other.iD_;
      x_ = other.x_;
      y_ = other.y_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonBombLocation Clone() {
      return new PoisonBombLocation(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 2;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 3;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Angle" field.</summary>
    public const int AngleFieldNumber = 4;
    private int angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoisonBombLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoisonBombLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Angle != other.Angle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Angle != 0) hash ^= Angle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (Angle != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Y);
      }
      if (Angle != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Angle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Angle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoisonBombLocation other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Angle != 0) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Angle = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            X = input.ReadInt32();
            break;
          }
          case 24: {
            Y = input.ReadInt32();
            break;
          }
          case 32: {
            Angle = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSPoisonBombLocation : pb::IMessage<CSPoisonBombLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSPoisonBombLocation> _parser = new pb::MessageParser<CSPoisonBombLocation>(() => new CSPoisonBombLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSPoisonBombLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSPoisonBombLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSPoisonBombLocation(CSPoisonBombLocation other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSPoisonBombLocation Clone() {
      return new CSPoisonBombLocation(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.PoisonBombLocation> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.PoisonBombLocation.Parser);
    private readonly pbc::RepeatedField<global::JSBY.PoisonBombLocation> info_ = new pbc::RepeatedField<global::JSBY.PoisonBombLocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.PoisonBombLocation> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSPoisonBombLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSPoisonBombLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSPoisonBombLocation other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPoisonBombLocation : pb::IMessage<SCPoisonBombLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPoisonBombLocation> _parser = new pb::MessageParser<SCPoisonBombLocation>(() => new SCPoisonBombLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPoisonBombLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBombLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBombLocation(SCPoisonBombLocation other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBombLocation Clone() {
      return new SCPoisonBombLocation(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.PoisonBombLocation> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.PoisonBombLocation.Parser);
    private readonly pbc::RepeatedField<global::JSBY.PoisonBombLocation> info_ = new pbc::RepeatedField<global::JSBY.PoisonBombLocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.PoisonBombLocation> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPoisonBombLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPoisonBombLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPoisonBombLocation other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoisonbombConvert : pb::IMessage<PoisonbombConvert>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoisonbombConvert> _parser = new pb::MessageParser<PoisonbombConvert>(() => new PoisonbombConvert());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoisonbombConvert> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonbombConvert() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonbombConvert(PoisonbombConvert other) : this() {
      monsterId_ = other.monsterId_;
      positionId_ = other.positionId_;
      poisonBombId_ = other.poisonBombId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonbombConvert Clone() {
      return new PoisonbombConvert(this);
    }

    /// <summary>Field number for the "MonsterId" field.</summary>
    public const int MonsterIdFieldNumber = 1;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 2;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "PoisonBombId" field.</summary>
    public const int PoisonBombIdFieldNumber = 3;
    private int poisonBombId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoisonBombId {
      get { return poisonBombId_; }
      set {
        poisonBombId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoisonbombConvert);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoisonbombConvert other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MonsterId != other.MonsterId) return false;
      if (PositionId != other.PositionId) return false;
      if (PoisonBombId != other.PoisonBombId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (PoisonBombId != 0) hash ^= PoisonBombId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MonsterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (PoisonBombId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoisonBombId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MonsterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (PoisonBombId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoisonBombId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (PoisonBombId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoisonBombId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoisonbombConvert other) {
      if (other == null) {
        return;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.PoisonBombId != 0) {
        PoisonBombId = other.PoisonBombId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
          case 24: {
            PoisonBombId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
          case 24: {
            PoisonBombId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPoisonBombConvert : pb::IMessage<SCPoisonBombConvert>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPoisonBombConvert> _parser = new pb::MessageParser<SCPoisonBombConvert>(() => new SCPoisonBombConvert());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPoisonBombConvert> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBombConvert() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBombConvert(SCPoisonBombConvert other) : this() {
      poisonBombId_ = other.poisonBombId_;
      info_ = other.info_.Clone();
      killPlayerID_ = other.killPlayerID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonBombConvert Clone() {
      return new SCPoisonBombConvert(this);
    }

    /// <summary>Field number for the "PoisonBombId" field.</summary>
    public const int PoisonBombIdFieldNumber = 1;
    private int poisonBombId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoisonBombId {
      get { return poisonBombId_; }
      set {
        poisonBombId_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::JSBY.PoisonbombConvert> _repeated_info_codec
        = pb::FieldCodec.ForMessage(18, global::JSBY.PoisonbombConvert.Parser);
    private readonly pbc::RepeatedField<global::JSBY.PoisonbombConvert> info_ = new pbc::RepeatedField<global::JSBY.PoisonbombConvert>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.PoisonbombConvert> Info {
      get { return info_; }
    }

    /// <summary>Field number for the "KillPlayerID" field.</summary>
    public const int KillPlayerIDFieldNumber = 3;
    private int killPlayerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillPlayerID {
      get { return killPlayerID_; }
      set {
        killPlayerID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPoisonBombConvert);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPoisonBombConvert other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoisonBombId != other.PoisonBombId) return false;
      if(!info_.Equals(other.info_)) return false;
      if (KillPlayerID != other.KillPlayerID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoisonBombId != 0) hash ^= PoisonBombId.GetHashCode();
      hash ^= info_.GetHashCode();
      if (KillPlayerID != 0) hash ^= KillPlayerID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PoisonBombId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PoisonBombId);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (KillPlayerID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(KillPlayerID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PoisonBombId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PoisonBombId);
      }
      info_.WriteTo(ref output, _repeated_info_codec);
      if (KillPlayerID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(KillPlayerID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoisonBombId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoisonBombId);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (KillPlayerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillPlayerID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPoisonBombConvert other) {
      if (other == null) {
        return;
      }
      if (other.PoisonBombId != 0) {
        PoisonBombId = other.PoisonBombId;
      }
      info_.Add(other.info_);
      if (other.KillPlayerID != 0) {
        KillPlayerID = other.KillPlayerID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PoisonBombId = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
          case 24: {
            KillPlayerID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PoisonBombId = input.ReadInt32();
            break;
          }
          case 18: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
          case 24: {
            KillPlayerID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PoisonbombType : pb::IMessage<PoisonbombType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PoisonbombType> _parser = new pb::MessageParser<PoisonbombType>(() => new PoisonbombType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoisonbombType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonbombType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonbombType(PoisonbombType other) : this() {
      monsterId_ = other.monsterId_;
      masterPoisonBombId_ = other.masterPoisonBombId_;
      poisonBombId_ = other.poisonBombId_;
      killPlayerId_ = other.killPlayerId_;
      channelId_ = other.channelId_;
      processTime_ = other.processTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoisonbombType Clone() {
      return new PoisonbombType(this);
    }

    /// <summary>Field number for the "MonsterId" field.</summary>
    public const int MonsterIdFieldNumber = 1;
    private int monsterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterId {
      get { return monsterId_; }
      set {
        monsterId_ = value;
      }
    }

    /// <summary>Field number for the "MasterPoisonBombId" field.</summary>
    public const int MasterPoisonBombIdFieldNumber = 2;
    private int masterPoisonBombId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MasterPoisonBombId {
      get { return masterPoisonBombId_; }
      set {
        masterPoisonBombId_ = value;
      }
    }

    /// <summary>Field number for the "PoisonBombId" field.</summary>
    public const int PoisonBombIdFieldNumber = 3;
    private int poisonBombId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoisonBombId {
      get { return poisonBombId_; }
      set {
        poisonBombId_ = value;
      }
    }

    /// <summary>Field number for the "KillPlayerId" field.</summary>
    public const int KillPlayerIdFieldNumber = 4;
    private int killPlayerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int KillPlayerId {
      get { return killPlayerId_; }
      set {
        killPlayerId_ = value;
      }
    }

    /// <summary>Field number for the "ChannelId" field.</summary>
    public const int ChannelIdFieldNumber = 5;
    private int channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "ProcessTime" field.</summary>
    public const int ProcessTimeFieldNumber = 6;
    private int processTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessTime {
      get { return processTime_; }
      set {
        processTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoisonbombType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoisonbombType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MonsterId != other.MonsterId) return false;
      if (MasterPoisonBombId != other.MasterPoisonBombId) return false;
      if (PoisonBombId != other.PoisonBombId) return false;
      if (KillPlayerId != other.KillPlayerId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (ProcessTime != other.ProcessTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MonsterId != 0) hash ^= MonsterId.GetHashCode();
      if (MasterPoisonBombId != 0) hash ^= MasterPoisonBombId.GetHashCode();
      if (PoisonBombId != 0) hash ^= PoisonBombId.GetHashCode();
      if (KillPlayerId != 0) hash ^= KillPlayerId.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (ProcessTime != 0) hash ^= ProcessTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MonsterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterId);
      }
      if (MasterPoisonBombId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MasterPoisonBombId);
      }
      if (PoisonBombId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoisonBombId);
      }
      if (KillPlayerId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(KillPlayerId);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ChannelId);
      }
      if (ProcessTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ProcessTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MonsterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MonsterId);
      }
      if (MasterPoisonBombId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MasterPoisonBombId);
      }
      if (PoisonBombId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoisonBombId);
      }
      if (KillPlayerId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(KillPlayerId);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ChannelId);
      }
      if (ProcessTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ProcessTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MonsterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterId);
      }
      if (MasterPoisonBombId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MasterPoisonBombId);
      }
      if (PoisonBombId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoisonBombId);
      }
      if (KillPlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillPlayerId);
      }
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
      }
      if (ProcessTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoisonbombType other) {
      if (other == null) {
        return;
      }
      if (other.MonsterId != 0) {
        MonsterId = other.MonsterId;
      }
      if (other.MasterPoisonBombId != 0) {
        MasterPoisonBombId = other.MasterPoisonBombId;
      }
      if (other.PoisonBombId != 0) {
        PoisonBombId = other.PoisonBombId;
      }
      if (other.KillPlayerId != 0) {
        KillPlayerId = other.KillPlayerId;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.ProcessTime != 0) {
        ProcessTime = other.ProcessTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 16: {
            MasterPoisonBombId = input.ReadInt32();
            break;
          }
          case 24: {
            PoisonBombId = input.ReadInt32();
            break;
          }
          case 32: {
            KillPlayerId = input.ReadInt32();
            break;
          }
          case 40: {
            ChannelId = input.ReadInt32();
            break;
          }
          case 48: {
            ProcessTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MonsterId = input.ReadInt32();
            break;
          }
          case 16: {
            MasterPoisonBombId = input.ReadInt32();
            break;
          }
          case 24: {
            PoisonBombId = input.ReadInt32();
            break;
          }
          case 32: {
            KillPlayerId = input.ReadInt32();
            break;
          }
          case 40: {
            ChannelId = input.ReadInt32();
            break;
          }
          case 48: {
            ProcessTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPoisonbombTypes : pb::IMessage<SCPoisonbombTypes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPoisonbombTypes> _parser = new pb::MessageParser<SCPoisonbombTypes>(() => new SCPoisonbombTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPoisonbombTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonbombTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonbombTypes(SCPoisonbombTypes other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPoisonbombTypes Clone() {
      return new SCPoisonbombTypes(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.PoisonbombType> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.PoisonbombType.Parser);
    private readonly pbc::RepeatedField<global::JSBY.PoisonbombType> info_ = new pbc::RepeatedField<global::JSBY.PoisonbombType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.PoisonbombType> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPoisonbombTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPoisonbombTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPoisonbombTypes other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSDragonRelease : pb::IMessage<CSDragonRelease>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSDragonRelease> _parser = new pb::MessageParser<CSDragonRelease>(() => new CSDragonRelease());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSDragonRelease> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonRelease() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonRelease(CSDragonRelease other) : this() {
      ratio_ = other.ratio_;
      propsID_ = other.propsID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonRelease Clone() {
      return new CSDragonRelease(this);
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 1;
    private float ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 2;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSDragonRelease);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSDragonRelease other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ratio, other.Ratio)) return false;
      if (PropsID != other.PropsID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ratio != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ratio);
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ratio != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Ratio);
      }
      if (PropsID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ratio != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Ratio);
      }
      if (PropsID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ratio != 0F) {
        size += 1 + 4;
      }
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSDragonRelease other) {
      if (other == null) {
        return;
      }
      if (other.Ratio != 0F) {
        Ratio = other.Ratio;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Ratio = input.ReadFloat();
            break;
          }
          case 16: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Ratio = input.ReadFloat();
            break;
          }
          case 16: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCDragonRelease : pb::IMessage<SCDragonRelease>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCDragonRelease> _parser = new pb::MessageParser<SCDragonRelease>(() => new SCDragonRelease());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDragonRelease> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonRelease() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonRelease(SCDragonRelease other) : this() {
      startTime_ = other.startTime_;
      playerId_ = other.playerId_;
      attackInfo_ = other.attackInfo_ != null ? other.attackInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonRelease Clone() {
      return new SCDragonRelease(this);
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private int startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "AttackInfo" field.</summary>
    public const int AttackInfoFieldNumber = 3;
    private global::JSBY.SpecialAttackInfo attackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.SpecialAttackInfo AttackInfo {
      get { return attackInfo_; }
      set {
        attackInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDragonRelease);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDragonRelease other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(AttackInfo, other.AttackInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (attackInfo_ != null) hash ^= AttackInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartTime);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartTime);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (attackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDragonRelease other) {
      if (other == null) {
        return;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.attackInfo_ != null) {
        if (attackInfo_ == null) {
          AttackInfo = new global::JSBY.SpecialAttackInfo();
        }
        AttackInfo.MergeFrom(other.AttackInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTime = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTime = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushDragonRelease : pb::IMessage<SCPushDragonRelease>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushDragonRelease> _parser = new pb::MessageParser<SCPushDragonRelease>(() => new SCPushDragonRelease());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushDragonRelease> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonRelease() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonRelease(SCPushDragonRelease other) : this() {
      startTime_ = other.startTime_;
      playerId_ = other.playerId_;
      attackInfo_ = other.attackInfo_ != null ? other.attackInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonRelease Clone() {
      return new SCPushDragonRelease(this);
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private int startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "AttackInfo" field.</summary>
    public const int AttackInfoFieldNumber = 3;
    private global::JSBY.SpecialAttackInfo attackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.SpecialAttackInfo AttackInfo {
      get { return attackInfo_; }
      set {
        attackInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushDragonRelease);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushDragonRelease other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(AttackInfo, other.AttackInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (attackInfo_ != null) hash ^= AttackInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartTime);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartTime);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (attackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushDragonRelease other) {
      if (other == null) {
        return;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.attackInfo_ != null) {
        if (attackInfo_ == null) {
          AttackInfo = new global::JSBY.SpecialAttackInfo();
        }
        AttackInfo.MergeFrom(other.AttackInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTime = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTime = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 26: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushDragonEnd : pb::IMessage<SCPushDragonEnd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushDragonEnd> _parser = new pb::MessageParser<SCPushDragonEnd>(() => new SCPushDragonEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushDragonEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonEnd(SCPushDragonEnd other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonEnd Clone() {
      return new SCPushDragonEnd(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushDragonEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushDragonEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushDragonEnd other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushSelfDragonState : pb::IMessage<SCPushSelfDragonState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushSelfDragonState> _parser = new pb::MessageParser<SCPushSelfDragonState>(() => new SCPushSelfDragonState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushSelfDragonState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSelfDragonState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSelfDragonState(SCPushSelfDragonState other) : this() {
      progressBarCount_ = other.progressBarCount_;
      progressBar_ = other.progressBar_;
      propsID_ = other.propsID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSelfDragonState Clone() {
      return new SCPushSelfDragonState(this);
    }

    /// <summary>Field number for the "ProgressBarCount" field.</summary>
    public const int ProgressBarCountFieldNumber = 1;
    private int progressBarCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgressBarCount {
      get { return progressBarCount_; }
      set {
        progressBarCount_ = value;
      }
    }

    /// <summary>Field number for the "ProgressBar" field.</summary>
    public const int ProgressBarFieldNumber = 2;
    private int progressBar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgressBar {
      get { return progressBar_; }
      set {
        progressBar_ = value;
      }
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 3;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushSelfDragonState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushSelfDragonState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProgressBarCount != other.ProgressBarCount) return false;
      if (ProgressBar != other.ProgressBar) return false;
      if (PropsID != other.PropsID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProgressBarCount != 0) hash ^= ProgressBarCount.GetHashCode();
      if (ProgressBar != 0) hash ^= ProgressBar.GetHashCode();
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProgressBarCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProgressBarCount);
      }
      if (ProgressBar != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProgressBar);
      }
      if (PropsID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProgressBarCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProgressBarCount);
      }
      if (ProgressBar != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProgressBar);
      }
      if (PropsID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProgressBarCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgressBarCount);
      }
      if (ProgressBar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgressBar);
      }
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushSelfDragonState other) {
      if (other == null) {
        return;
      }
      if (other.ProgressBarCount != 0) {
        ProgressBarCount = other.ProgressBarCount;
      }
      if (other.ProgressBar != 0) {
        ProgressBar = other.ProgressBar;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProgressBarCount = input.ReadInt32();
            break;
          }
          case 16: {
            ProgressBar = input.ReadInt32();
            break;
          }
          case 24: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProgressBarCount = input.ReadInt32();
            break;
          }
          case 16: {
            ProgressBar = input.ReadInt32();
            break;
          }
          case 24: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSOneKeyUpdateHero : pb::IMessage<CSOneKeyUpdateHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSOneKeyUpdateHero> _parser = new pb::MessageParser<CSOneKeyUpdateHero>(() => new CSOneKeyUpdateHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSOneKeyUpdateHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOneKeyUpdateHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOneKeyUpdateHero(CSOneKeyUpdateHero other) : this() {
      heroId_ = other.heroId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOneKeyUpdateHero Clone() {
      return new CSOneKeyUpdateHero(this);
    }

    /// <summary>Field number for the "HeroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_heroId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> heroId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> HeroId {
      get { return heroId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSOneKeyUpdateHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSOneKeyUpdateHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!heroId_.Equals(other.heroId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= heroId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      heroId_.WriteTo(output, _repeated_heroId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      heroId_.WriteTo(ref output, _repeated_heroId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += heroId_.CalculateSize(_repeated_heroId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSOneKeyUpdateHero other) {
      if (other == null) {
        return;
      }
      heroId_.Add(other.heroId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            heroId_.AddEntriesFrom(input, _repeated_heroId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            heroId_.AddEntriesFrom(ref input, _repeated_heroId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCOneKeyUpdateHero : pb::IMessage<SCOneKeyUpdateHero>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCOneKeyUpdateHero> _parser = new pb::MessageParser<SCOneKeyUpdateHero>(() => new SCOneKeyUpdateHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCOneKeyUpdateHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOneKeyUpdateHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOneKeyUpdateHero(SCOneKeyUpdateHero other) : this() {
      playerId_ = other.playerId_;
      leaveInfo_ = other.leaveInfo_.Clone();
      updateInfo_ = other.updateInfo_.Clone();
      tableId_ = other.tableId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOneKeyUpdateHero Clone() {
      return new SCOneKeyUpdateHero(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "LeaveInfo" field.</summary>
    public const int LeaveInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::JSBY.TowerHeroInfo> _repeated_leaveInfo_codec
        = pb::FieldCodec.ForMessage(18, global::JSBY.TowerHeroInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.TowerHeroInfo> leaveInfo_ = new pbc::RepeatedField<global::JSBY.TowerHeroInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.TowerHeroInfo> LeaveInfo {
      get { return leaveInfo_; }
    }

    /// <summary>Field number for the "updateInfo" field.</summary>
    public const int UpdateInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::JSBY.TowerHeroInfo> _repeated_updateInfo_codec
        = pb::FieldCodec.ForMessage(26, global::JSBY.TowerHeroInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.TowerHeroInfo> updateInfo_ = new pbc::RepeatedField<global::JSBY.TowerHeroInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.TowerHeroInfo> UpdateInfo {
      get { return updateInfo_; }
    }

    /// <summary>Field number for the "TableId" field.</summary>
    public const int TableIdFieldNumber = 4;
    private int tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCOneKeyUpdateHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCOneKeyUpdateHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if(!leaveInfo_.Equals(other.leaveInfo_)) return false;
      if(!updateInfo_.Equals(other.updateInfo_)) return false;
      if (TableId != other.TableId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      hash ^= leaveInfo_.GetHashCode();
      hash ^= updateInfo_.GetHashCode();
      if (TableId != 0) hash ^= TableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      leaveInfo_.WriteTo(output, _repeated_leaveInfo_codec);
      updateInfo_.WriteTo(output, _repeated_updateInfo_codec);
      if (TableId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      leaveInfo_.WriteTo(ref output, _repeated_leaveInfo_codec);
      updateInfo_.WriteTo(ref output, _repeated_updateInfo_codec);
      if (TableId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      size += leaveInfo_.CalculateSize(_repeated_leaveInfo_codec);
      size += updateInfo_.CalculateSize(_repeated_updateInfo_codec);
      if (TableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCOneKeyUpdateHero other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      leaveInfo_.Add(other.leaveInfo_);
      updateInfo_.Add(other.updateInfo_);
      if (other.TableId != 0) {
        TableId = other.TableId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            leaveInfo_.AddEntriesFrom(input, _repeated_leaveInfo_codec);
            break;
          }
          case 26: {
            updateInfo_.AddEntriesFrom(input, _repeated_updateInfo_codec);
            break;
          }
          case 32: {
            TableId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            leaveInfo_.AddEntriesFrom(ref input, _repeated_leaveInfo_codec);
            break;
          }
          case 26: {
            updateInfo_.AddEntriesFrom(ref input, _repeated_updateInfo_codec);
            break;
          }
          case 32: {
            TableId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushGhostDragonRelease : pb::IMessage<SCPushGhostDragonRelease>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushGhostDragonRelease> _parser = new pb::MessageParser<SCPushGhostDragonRelease>(() => new SCPushGhostDragonRelease());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushGhostDragonRelease> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGhostDragonRelease() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGhostDragonRelease(SCPushGhostDragonRelease other) : this() {
      startTime_ = other.startTime_;
      playerId_ = other.playerId_;
      positionId_ = other.positionId_;
      attackCount_ = other.attackCount_;
      useCount_ = other.useCount_;
      ratio_ = other.ratio_;
      attackInfo_ = other.attackInfo_ != null ? other.attackInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGhostDragonRelease Clone() {
      return new SCPushGhostDragonRelease(this);
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private int startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 3;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "AttackCount" field.</summary>
    public const int AttackCountFieldNumber = 4;
    private int attackCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackCount {
      get { return attackCount_; }
      set {
        attackCount_ = value;
      }
    }

    /// <summary>Field number for the "UseCount" field.</summary>
    public const int UseCountFieldNumber = 5;
    private int useCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UseCount {
      get { return useCount_; }
      set {
        useCount_ = value;
      }
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 6;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "AttackInfo" field.</summary>
    public const int AttackInfoFieldNumber = 7;
    private global::JSBY.SpecialAttackInfo attackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.SpecialAttackInfo AttackInfo {
      get { return attackInfo_; }
      set {
        attackInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushGhostDragonRelease);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushGhostDragonRelease other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PositionId != other.PositionId) return false;
      if (AttackCount != other.AttackCount) return false;
      if (UseCount != other.UseCount) return false;
      if (Ratio != other.Ratio) return false;
      if (!object.Equals(AttackInfo, other.AttackInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (AttackCount != 0) hash ^= AttackCount.GetHashCode();
      if (UseCount != 0) hash ^= UseCount.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (attackInfo_ != null) hash ^= AttackInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartTime);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PositionId);
      }
      if (AttackCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackCount);
      }
      if (UseCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UseCount);
      }
      if (Ratio != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Ratio);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartTime);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PositionId);
      }
      if (AttackCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackCount);
      }
      if (UseCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UseCount);
      }
      if (Ratio != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Ratio);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (AttackCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackCount);
      }
      if (UseCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UseCount);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (attackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushGhostDragonRelease other) {
      if (other == null) {
        return;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.AttackCount != 0) {
        AttackCount = other.AttackCount;
      }
      if (other.UseCount != 0) {
        UseCount = other.UseCount;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.attackInfo_ != null) {
        if (attackInfo_ == null) {
          AttackInfo = new global::JSBY.SpecialAttackInfo();
        }
        AttackInfo.MergeFrom(other.AttackInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTime = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            PositionId = input.ReadInt32();
            break;
          }
          case 32: {
            AttackCount = input.ReadInt32();
            break;
          }
          case 40: {
            UseCount = input.ReadInt32();
            break;
          }
          case 48: {
            Ratio = input.ReadInt32();
            break;
          }
          case 58: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartTime = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            PositionId = input.ReadInt32();
            break;
          }
          case 32: {
            AttackCount = input.ReadInt32();
            break;
          }
          case 40: {
            UseCount = input.ReadInt32();
            break;
          }
          case 48: {
            Ratio = input.ReadInt32();
            break;
          }
          case 58: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushGhostDragonEnd : pb::IMessage<SCPushGhostDragonEnd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushGhostDragonEnd> _parser = new pb::MessageParser<SCPushGhostDragonEnd>(() => new SCPushGhostDragonEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushGhostDragonEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGhostDragonEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGhostDragonEnd(SCPushGhostDragonEnd other) : this() {
      playerId_ = other.playerId_;
      tableID_ = other.tableID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGhostDragonEnd Clone() {
      return new SCPushGhostDragonEnd(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "TableID" field.</summary>
    public const int TableIDFieldNumber = 2;
    private int tableID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableID {
      get { return tableID_; }
      set {
        tableID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushGhostDragonEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushGhostDragonEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (TableID != other.TableID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (TableID != 0) hash ^= TableID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (TableID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (TableID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (TableID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushGhostDragonEnd other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.TableID != 0) {
        TableID = other.TableID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushSelfGhostDragonState : pb::IMessage<SCPushSelfGhostDragonState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushSelfGhostDragonState> _parser = new pb::MessageParser<SCPushSelfGhostDragonState>(() => new SCPushSelfGhostDragonState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushSelfGhostDragonState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSelfGhostDragonState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSelfGhostDragonState(SCPushSelfGhostDragonState other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSelfGhostDragonState Clone() {
      return new SCPushSelfGhostDragonState(this);
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushSelfGhostDragonState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushSelfGhostDragonState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushSelfGhostDragonState other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HeroMoney : pb::IMessage<HeroMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HeroMoney> _parser = new pb::MessageParser<HeroMoney>(() => new HeroMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeroMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMoney(HeroMoney other) : this() {
      uniqueId_ = other.uniqueId_;
      playerId_ = other.playerId_;
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeroMoney Clone() {
      return new HeroMoney(this);
    }

    /// <summary>Field number for the "UniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 1;
    private int uniqueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeroMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeroMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueId != other.UniqueId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueId != 0) hash ^= UniqueId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UniqueId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UniqueId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeroMoney other) {
      if (other == null) {
        return;
      }
      if (other.UniqueId != 0) {
        UniqueId = other.UniqueId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UniqueId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushSyncHeroMoney : pb::IMessage<SCPushSyncHeroMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushSyncHeroMoney> _parser = new pb::MessageParser<SCPushSyncHeroMoney>(() => new SCPushSyncHeroMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushSyncHeroMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSyncHeroMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSyncHeroMoney(SCPushSyncHeroMoney other) : this() {
      heroMoney_ = other.heroMoney_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushSyncHeroMoney Clone() {
      return new SCPushSyncHeroMoney(this);
    }

    /// <summary>Field number for the "HeroMoney" field.</summary>
    public const int HeroMoneyFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.HeroMoney> _repeated_heroMoney_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.HeroMoney.Parser);
    private readonly pbc::RepeatedField<global::JSBY.HeroMoney> heroMoney_ = new pbc::RepeatedField<global::JSBY.HeroMoney>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.HeroMoney> HeroMoney {
      get { return heroMoney_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushSyncHeroMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushSyncHeroMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!heroMoney_.Equals(other.heroMoney_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= heroMoney_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      heroMoney_.WriteTo(output, _repeated_heroMoney_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      heroMoney_.WriteTo(ref output, _repeated_heroMoney_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += heroMoney_.CalculateSize(_repeated_heroMoney_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushSyncHeroMoney other) {
      if (other == null) {
        return;
      }
      heroMoney_.Add(other.heroMoney_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            heroMoney_.AddEntriesFrom(input, _repeated_heroMoney_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            heroMoney_.AddEntriesFrom(ref input, _repeated_heroMoney_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushMonsterDead : pb::IMessage<SCPushMonsterDead>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushMonsterDead> _parser = new pb::MessageParser<SCPushMonsterDead>(() => new SCPushMonsterDead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushMonsterDead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushMonsterDead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushMonsterDead(SCPushMonsterDead other) : this() {
      positionID_ = other.positionID_;
      tableID_ = other.tableID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushMonsterDead Clone() {
      return new SCPushMonsterDead(this);
    }

    /// <summary>Field number for the "PositionID" field.</summary>
    public const int PositionIDFieldNumber = 1;
    private int positionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionID {
      get { return positionID_; }
      set {
        positionID_ = value;
      }
    }

    /// <summary>Field number for the "TableID" field.</summary>
    public const int TableIDFieldNumber = 2;
    private int tableID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableID {
      get { return tableID_; }
      set {
        tableID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushMonsterDead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushMonsterDead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionID != other.PositionID) return false;
      if (TableID != other.TableID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionID != 0) hash ^= PositionID.GetHashCode();
      if (TableID != 0) hash ^= TableID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (TableID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (TableID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionID);
      }
      if (TableID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushMonsterDead other) {
      if (other == null) {
        return;
      }
      if (other.PositionID != 0) {
        PositionID = other.PositionID;
      }
      if (other.TableID != 0) {
        TableID = other.TableID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            TableID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSDebugData : pb::IMessage<CSDebugData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSDebugData> _parser = new pb::MessageParser<CSDebugData>(() => new CSDebugData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSDebugData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDebugData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDebugData(CSDebugData other) : this() {
      debugData_ = other.debugData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDebugData Clone() {
      return new CSDebugData(this);
    }

    /// <summary>Field number for the "DebugData" field.</summary>
    public const int DebugDataFieldNumber = 1;
    private string debugData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DebugData {
      get { return debugData_; }
      set {
        debugData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSDebugData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSDebugData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DebugData != other.DebugData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DebugData.Length != 0) hash ^= DebugData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DebugData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DebugData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DebugData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DebugData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DebugData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DebugData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSDebugData other) {
      if (other == null) {
        return;
      }
      if (other.DebugData.Length != 0) {
        DebugData = other.DebugData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DebugData = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DebugData = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCDebugData : pb::IMessage<SCDebugData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCDebugData> _parser = new pb::MessageParser<SCDebugData>(() => new SCDebugData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDebugData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDebugData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDebugData(SCDebugData other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDebugData Clone() {
      return new SCDebugData(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDebugData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDebugData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDebugData other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushMonsterBuff : pb::IMessage<SCPushMonsterBuff>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushMonsterBuff> _parser = new pb::MessageParser<SCPushMonsterBuff>(() => new SCPushMonsterBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushMonsterBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushMonsterBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushMonsterBuff(SCPushMonsterBuff other) : this() {
      positionID_ = other.positionID_;
      buffType_ = other.buffType_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushMonsterBuff Clone() {
      return new SCPushMonsterBuff(this);
    }

    /// <summary>Field number for the "PositionID" field.</summary>
    public const int PositionIDFieldNumber = 1;
    private int positionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionID {
      get { return positionID_; }
      set {
        positionID_ = value;
      }
    }

    /// <summary>Field number for the "BuffType" field.</summary>
    public const int BuffTypeFieldNumber = 2;
    private int buffType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuffType {
      get { return buffType_; }
      set {
        buffType_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 3;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushMonsterBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushMonsterBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionID != other.PositionID) return false;
      if (BuffType != other.BuffType) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionID != 0) hash ^= PositionID.GetHashCode();
      if (BuffType != 0) hash ^= BuffType.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (BuffType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuffType);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (BuffType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuffType);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionID);
      }
      if (BuffType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffType);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushMonsterBuff other) {
      if (other == null) {
        return;
      }
      if (other.PositionID != 0) {
        PositionID = other.PositionID;
      }
      if (other.BuffType != 0) {
        BuffType = other.BuffType;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            BuffType = input.ReadInt32();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            BuffType = input.ReadInt32();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TableState : pb::IMessage<TableState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TableState> _parser = new pb::MessageParser<TableState>(() => new TableState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableState(TableState other) : this() {
      tableId_ = other.tableId_;
      tablePlayer_ = other.tablePlayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableState Clone() {
      return new TableState(this);
    }

    /// <summary>Field number for the "TableId" field.</summary>
    public const int TableIdFieldNumber = 1;
    private int tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    /// <summary>Field number for the "TablePlayer" field.</summary>
    public const int TablePlayerFieldNumber = 2;
    private int tablePlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TablePlayer {
      get { return tablePlayer_; }
      set {
        tablePlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableId != other.TableId) return false;
      if (TablePlayer != other.TablePlayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableId != 0) hash ^= TableId.GetHashCode();
      if (TablePlayer != 0) hash ^= TablePlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TableId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableId);
      }
      if (TablePlayer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TablePlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TableId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TableId);
      }
      if (TablePlayer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TablePlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableId);
      }
      if (TablePlayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TablePlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableState other) {
      if (other == null) {
        return;
      }
      if (other.TableId != 0) {
        TableId = other.TableId;
      }
      if (other.TablePlayer != 0) {
        TablePlayer = other.TablePlayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableId = input.ReadInt32();
            break;
          }
          case 16: {
            TablePlayer = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TableId = input.ReadInt32();
            break;
          }
          case 16: {
            TablePlayer = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetTableId : pb::IMessage<CSGetTableId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetTableId> _parser = new pb::MessageParser<CSGetTableId>(() => new CSGetTableId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetTableId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTableId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTableId(CSGetTableId other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetTableId Clone() {
      return new CSGetTableId(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetTableId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetTableId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetTableId other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetTableId : pb::IMessage<SCGetTableId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetTableId> _parser = new pb::MessageParser<SCGetTableId>(() => new SCGetTableId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetTableId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTableId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTableId(SCGetTableId other) : this() {
      tableId_ = other.tableId_ != null ? other.tableId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetTableId Clone() {
      return new SCGetTableId(this);
    }

    /// <summary>Field number for the "TableId" field.</summary>
    public const int TableIdFieldNumber = 1;
    private global::JSBY.TableState tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.TableState TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetTableId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetTableId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableId, other.TableId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableId_ != null) hash ^= TableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tableId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tableId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetTableId other) {
      if (other == null) {
        return;
      }
      if (other.tableId_ != null) {
        if (tableId_ == null) {
          TableId = new global::JSBY.TableState();
        }
        TableId.MergeFrom(other.TableId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableId_ == null) {
              TableId = new global::JSBY.TableState();
            }
            input.ReadMessage(TableId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tableId_ == null) {
              TableId = new global::JSBY.TableState();
            }
            input.ReadMessage(TableId);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPlayerVipLevel : pb::IMessage<SCPlayerVipLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPlayerVipLevel> _parser = new pb::MessageParser<SCPlayerVipLevel>(() => new SCPlayerVipLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPlayerVipLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPlayerVipLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPlayerVipLevel(SCPlayerVipLevel other) : this() {
      playerId_ = other.playerId_;
      level_ = other.level_;
      isVip_ = other.isVip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPlayerVipLevel Clone() {
      return new SCPlayerVipLevel(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "IsVip" field.</summary>
    public const int IsVipFieldNumber = 3;
    private bool isVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVip {
      get { return isVip_; }
      set {
        isVip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPlayerVipLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPlayerVipLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Level != other.Level) return false;
      if (IsVip != other.IsVip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (IsVip != false) hash ^= IsVip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (IsVip != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsVip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (IsVip != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsVip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (IsVip != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPlayerVipLevel other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.IsVip != false) {
        IsVip = other.IsVip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            IsVip = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            IsVip = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DragonProps : pb::IMessage<DragonProps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DragonProps> _parser = new pb::MessageParser<DragonProps>(() => new DragonProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DragonProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonProps(DragonProps other) : this() {
      progressBarCount_ = other.progressBarCount_;
      progressBar_ = other.progressBar_;
      propsID_ = other.propsID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonProps Clone() {
      return new DragonProps(this);
    }

    /// <summary>Field number for the "ProgressBarCount" field.</summary>
    public const int ProgressBarCountFieldNumber = 1;
    private int progressBarCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgressBarCount {
      get { return progressBarCount_; }
      set {
        progressBarCount_ = value;
      }
    }

    /// <summary>Field number for the "ProgressBar" field.</summary>
    public const int ProgressBarFieldNumber = 2;
    private int progressBar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProgressBar {
      get { return progressBar_; }
      set {
        progressBar_ = value;
      }
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 3;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DragonProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DragonProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProgressBarCount != other.ProgressBarCount) return false;
      if (ProgressBar != other.ProgressBar) return false;
      if (PropsID != other.PropsID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProgressBarCount != 0) hash ^= ProgressBarCount.GetHashCode();
      if (ProgressBar != 0) hash ^= ProgressBar.GetHashCode();
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ProgressBarCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProgressBarCount);
      }
      if (ProgressBar != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProgressBar);
      }
      if (PropsID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ProgressBarCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProgressBarCount);
      }
      if (ProgressBar != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProgressBar);
      }
      if (PropsID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProgressBarCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgressBarCount);
      }
      if (ProgressBar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProgressBar);
      }
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DragonProps other) {
      if (other == null) {
        return;
      }
      if (other.ProgressBarCount != 0) {
        ProgressBarCount = other.ProgressBarCount;
      }
      if (other.ProgressBar != 0) {
        ProgressBar = other.ProgressBar;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProgressBarCount = input.ReadInt32();
            break;
          }
          case 16: {
            ProgressBar = input.ReadInt32();
            break;
          }
          case 24: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ProgressBarCount = input.ReadInt32();
            break;
          }
          case 16: {
            ProgressBar = input.ReadInt32();
            break;
          }
          case 24: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetDragonProps : pb::IMessage<CSGetDragonProps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetDragonProps> _parser = new pb::MessageParser<CSGetDragonProps>(() => new CSGetDragonProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetDragonProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetDragonProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetDragonProps(CSGetDragonProps other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetDragonProps Clone() {
      return new CSGetDragonProps(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetDragonProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetDragonProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetDragonProps other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetDragonProps : pb::IMessage<SCGetDragonProps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetDragonProps> _parser = new pb::MessageParser<SCGetDragonProps>(() => new SCGetDragonProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetDragonProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetDragonProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetDragonProps(SCGetDragonProps other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetDragonProps Clone() {
      return new SCGetDragonProps(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.DragonProps> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.DragonProps.Parser);
    private readonly pbc::RepeatedField<global::JSBY.DragonProps> info_ = new pbc::RepeatedField<global::JSBY.DragonProps>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.DragonProps> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetDragonProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetDragonProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetDragonProps other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSEquipDragonProps : pb::IMessage<CSEquipDragonProps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSEquipDragonProps> _parser = new pb::MessageParser<CSEquipDragonProps>(() => new CSEquipDragonProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSEquipDragonProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEquipDragonProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEquipDragonProps(CSEquipDragonProps other) : this() {
      propsID_ = other.propsID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSEquipDragonProps Clone() {
      return new CSEquipDragonProps(this);
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 1;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSEquipDragonProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSEquipDragonProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropsID != other.PropsID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSEquipDragonProps other) {
      if (other == null) {
        return;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCEquipDragonProps : pb::IMessage<SCEquipDragonProps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCEquipDragonProps> _parser = new pb::MessageParser<SCEquipDragonProps>(() => new SCEquipDragonProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCEquipDragonProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEquipDragonProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEquipDragonProps(SCEquipDragonProps other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCEquipDragonProps Clone() {
      return new SCEquipDragonProps(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.DragonProps info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.DragonProps Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCEquipDragonProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCEquipDragonProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCEquipDragonProps other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.DragonProps();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.DragonProps();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.DragonProps();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushDragonProps : pb::IMessage<SCPushDragonProps>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushDragonProps> _parser = new pb::MessageParser<SCPushDragonProps>(() => new SCPushDragonProps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushDragonProps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonProps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonProps(SCPushDragonProps other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDragonProps Clone() {
      return new SCPushDragonProps(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::JSBY.DragonProps info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.DragonProps Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushDragonProps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushDragonProps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushDragonProps other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::JSBY.DragonProps();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.DragonProps();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::JSBY.DragonProps();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShopInfo : pb::IMessage<ShopInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShopInfo> _parser = new pb::MessageParser<ShopInfo>(() => new ShopInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopInfo(ShopInfo other) : this() {
      shopID_ = other.shopID_;
      name_ = other.name_;
      value_ = other.value_;
      currencyType_ = other.currencyType_;
      price_ = other.price_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopInfo Clone() {
      return new ShopInfo(this);
    }

    /// <summary>Field number for the "ShopID" field.</summary>
    public const int ShopIDFieldNumber = 1;
    private int shopID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopID {
      get { return shopID_; }
      set {
        shopID_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 3;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "CurrencyType" field.</summary>
    public const int CurrencyTypeFieldNumber = 4;
    private int currencyType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrencyType {
      get { return currencyType_; }
      set {
        currencyType_ = value;
      }
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 5;
    private int price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "Num" field.</summary>
    public const int NumFieldNumber = 6;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopID != other.ShopID) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (CurrencyType != other.CurrencyType) return false;
      if (Price != other.Price) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopID != 0) hash ^= ShopID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (CurrencyType != 0) hash ^= CurrencyType.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShopID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShopID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Value);
      }
      if (CurrencyType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrencyType);
      }
      if (Price != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Price);
      }
      if (Num != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShopID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShopID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Value);
      }
      if (CurrencyType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrencyType);
      }
      if (Price != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Price);
      }
      if (Num != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (CurrencyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrencyType);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopInfo other) {
      if (other == null) {
        return;
      }
      if (other.ShopID != 0) {
        ShopID = other.ShopID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.CurrencyType != 0) {
        CurrencyType = other.CurrencyType;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShopID = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadInt32();
            break;
          }
          case 32: {
            CurrencyType = input.ReadInt32();
            break;
          }
          case 40: {
            Price = input.ReadInt32();
            break;
          }
          case 48: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShopID = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadInt32();
            break;
          }
          case 32: {
            CurrencyType = input.ReadInt32();
            break;
          }
          case 40: {
            Price = input.ReadInt32();
            break;
          }
          case 48: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetShopInfo : pb::IMessage<CSGetShopInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetShopInfo> _parser = new pb::MessageParser<CSGetShopInfo>(() => new CSGetShopInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetShopInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetShopInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetShopInfo(CSGetShopInfo other) : this() {
      shopInfoType_ = other.shopInfoType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetShopInfo Clone() {
      return new CSGetShopInfo(this);
    }

    /// <summary>Field number for the "ShopInfoType" field.</summary>
    public const int ShopInfoTypeFieldNumber = 1;
    private global::JSBY.ShopType shopInfoType_ = global::JSBY.ShopType.NoneType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.ShopType ShopInfoType {
      get { return shopInfoType_; }
      set {
        shopInfoType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetShopInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetShopInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopInfoType != other.ShopInfoType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopInfoType != global::JSBY.ShopType.NoneType) hash ^= ShopInfoType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShopInfoType != global::JSBY.ShopType.NoneType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ShopInfoType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShopInfoType != global::JSBY.ShopType.NoneType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ShopInfoType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopInfoType != global::JSBY.ShopType.NoneType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShopInfoType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetShopInfo other) {
      if (other == null) {
        return;
      }
      if (other.ShopInfoType != global::JSBY.ShopType.NoneType) {
        ShopInfoType = other.ShopInfoType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShopInfoType = (global::JSBY.ShopType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShopInfoType = (global::JSBY.ShopType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetShopInfo : pb::IMessage<SCGetShopInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetShopInfo> _parser = new pb::MessageParser<SCGetShopInfo>(() => new SCGetShopInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetShopInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetShopInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetShopInfo(SCGetShopInfo other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetShopInfo Clone() {
      return new SCGetShopInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.ShopInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.ShopInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.ShopInfo> info_ = new pbc::RepeatedField<global::JSBY.ShopInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.ShopInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetShopInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetShopInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetShopInfo other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropsInfo : pb::IMessage<PropsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropsInfo> _parser = new pb::MessageParser<PropsInfo>(() => new PropsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropsInfo(PropsInfo other) : this() {
      propsID_ = other.propsID_;
      totalNum_ = other.totalNum_;
      addNum_ = other.addNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropsInfo Clone() {
      return new PropsInfo(this);
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 1;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    /// <summary>Field number for the "TotalNum" field.</summary>
    public const int TotalNumFieldNumber = 2;
    private int totalNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalNum {
      get { return totalNum_; }
      set {
        totalNum_ = value;
      }
    }

    /// <summary>Field number for the "AddNum" field.</summary>
    public const int AddNumFieldNumber = 3;
    private int addNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AddNum {
      get { return addNum_; }
      set {
        addNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropsID != other.PropsID) return false;
      if (TotalNum != other.TotalNum) return false;
      if (AddNum != other.AddNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (TotalNum != 0) hash ^= TotalNum.GetHashCode();
      if (AddNum != 0) hash ^= AddNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalNum);
      }
      if (AddNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AddNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalNum);
      }
      if (AddNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AddNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (TotalNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (AddNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropsInfo other) {
      if (other == null) {
        return;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      if (other.TotalNum != 0) {
        TotalNum = other.TotalNum;
      }
      if (other.AddNum != 0) {
        AddNum = other.AddNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
          case 16: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 24: {
            AddNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
          case 16: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 24: {
            AddNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushPropsInfo : pb::IMessage<SCPushPropsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushPropsInfo> _parser = new pb::MessageParser<SCPushPropsInfo>(() => new SCPushPropsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushPropsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushPropsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushPropsInfo(SCPushPropsInfo other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushPropsInfo Clone() {
      return new SCPushPropsInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.PropsInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.PropsInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.PropsInfo> info_ = new pbc::RepeatedField<global::JSBY.PropsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.PropsInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushPropsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushPropsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushPropsInfo other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetMaterialsInfo : pb::IMessage<CSGetMaterialsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetMaterialsInfo> _parser = new pb::MessageParser<CSGetMaterialsInfo>(() => new CSGetMaterialsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetMaterialsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetMaterialsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetMaterialsInfo(CSGetMaterialsInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetMaterialsInfo Clone() {
      return new CSGetMaterialsInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetMaterialsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetMaterialsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetMaterialsInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetMaterialsInfo : pb::IMessage<SCGetMaterialsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetMaterialsInfo> _parser = new pb::MessageParser<SCGetMaterialsInfo>(() => new SCGetMaterialsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetMaterialsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetMaterialsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetMaterialsInfo(SCGetMaterialsInfo other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetMaterialsInfo Clone() {
      return new SCGetMaterialsInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.PropsInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.PropsInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.PropsInfo> info_ = new pbc::RepeatedField<global::JSBY.PropsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.PropsInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetMaterialsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetMaterialsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetMaterialsInfo other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSExchangeBox : pb::IMessage<CSExchangeBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSExchangeBox> _parser = new pb::MessageParser<CSExchangeBox>(() => new CSExchangeBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSExchangeBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSExchangeBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSExchangeBox(CSExchangeBox other) : this() {
      typeID_ = other.typeID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSExchangeBox Clone() {
      return new CSExchangeBox(this);
    }

    /// <summary>Field number for the "TypeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private int typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSExchangeBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSExchangeBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeID != other.TypeID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeID != 0) hash ^= TypeID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TypeID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TypeID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSExchangeBox other) {
      if (other == null) {
        return;
      }
      if (other.TypeID != 0) {
        TypeID = other.TypeID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TypeID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TypeID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardInfo : pb::IMessage<RewardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardInfo> _parser = new pb::MessageParser<RewardInfo>(() => new RewardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardInfo(RewardInfo other) : this() {
      propID_ = other.propID_;
      propNum_ = other.propNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardInfo Clone() {
      return new RewardInfo(this);
    }

    /// <summary>Field number for the "PropID" field.</summary>
    public const int PropIDFieldNumber = 1;
    private int propID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropID {
      get { return propID_; }
      set {
        propID_ = value;
      }
    }

    /// <summary>Field number for the "PropNum" field.</summary>
    public const int PropNumFieldNumber = 2;
    private int propNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropNum {
      get { return propNum_; }
      set {
        propNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropID != other.PropID) return false;
      if (PropNum != other.PropNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropID != 0) hash ^= PropID.GetHashCode();
      if (PropNum != 0) hash ^= PropNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropID);
      }
      if (PropNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropID);
      }
      if (PropNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropID);
      }
      if (PropNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardInfo other) {
      if (other == null) {
        return;
      }
      if (other.PropID != 0) {
        PropID = other.PropID;
      }
      if (other.PropNum != 0) {
        PropNum = other.PropNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropID = input.ReadInt32();
            break;
          }
          case 16: {
            PropNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropID = input.ReadInt32();
            break;
          }
          case 16: {
            PropNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCExchangeBox : pb::IMessage<SCExchangeBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCExchangeBox> _parser = new pb::MessageParser<SCExchangeBox>(() => new SCExchangeBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCExchangeBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCExchangeBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCExchangeBox(SCExchangeBox other) : this() {
      typeID_ = other.typeID_;
      iD_ = other.iD_;
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      addReward_ = other.addReward_ != null ? other.addReward_.Clone() : null;
      doublingCost_ = other.doublingCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCExchangeBox Clone() {
      return new SCExchangeBox(this);
    }

    /// <summary>Field number for the "TypeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private int typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 2;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Reward" field.</summary>
    public const int RewardFieldNumber = 3;
    private global::JSBY.RewardInfo reward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.RewardInfo Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    /// <summary>Field number for the "AddReward" field.</summary>
    public const int AddRewardFieldNumber = 4;
    private global::JSBY.RewardInfo addReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.RewardInfo AddReward {
      get { return addReward_; }
      set {
        addReward_ = value;
      }
    }

    /// <summary>Field number for the "DoublingCost" field.</summary>
    public const int DoublingCostFieldNumber = 5;
    private int doublingCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DoublingCost {
      get { return doublingCost_; }
      set {
        doublingCost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCExchangeBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCExchangeBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeID != other.TypeID) return false;
      if (ID != other.ID) return false;
      if (!object.Equals(Reward, other.Reward)) return false;
      if (!object.Equals(AddReward, other.AddReward)) return false;
      if (DoublingCost != other.DoublingCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeID != 0) hash ^= TypeID.GetHashCode();
      if (ID != 0) hash ^= ID.GetHashCode();
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (addReward_ != null) hash ^= AddReward.GetHashCode();
      if (DoublingCost != 0) hash ^= DoublingCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TypeID);
      }
      if (ID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ID);
      }
      if (reward_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Reward);
      }
      if (addReward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddReward);
      }
      if (DoublingCost != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DoublingCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TypeID);
      }
      if (ID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ID);
      }
      if (reward_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Reward);
      }
      if (addReward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddReward);
      }
      if (DoublingCost != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DoublingCost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeID);
      }
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (addReward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddReward);
      }
      if (DoublingCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DoublingCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCExchangeBox other) {
      if (other == null) {
        return;
      }
      if (other.TypeID != 0) {
        TypeID = other.TypeID;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::JSBY.RewardInfo();
        }
        Reward.MergeFrom(other.Reward);
      }
      if (other.addReward_ != null) {
        if (addReward_ == null) {
          AddReward = new global::JSBY.RewardInfo();
        }
        AddReward.MergeFrom(other.AddReward);
      }
      if (other.DoublingCost != 0) {
        DoublingCost = other.DoublingCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TypeID = input.ReadInt32();
            break;
          }
          case 16: {
            ID = input.ReadInt32();
            break;
          }
          case 26: {
            if (reward_ == null) {
              Reward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 34: {
            if (addReward_ == null) {
              AddReward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(AddReward);
            break;
          }
          case 40: {
            DoublingCost = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TypeID = input.ReadInt32();
            break;
          }
          case 16: {
            ID = input.ReadInt32();
            break;
          }
          case 26: {
            if (reward_ == null) {
              Reward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 34: {
            if (addReward_ == null) {
              AddReward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(AddReward);
            break;
          }
          case 40: {
            DoublingCost = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSDoublingBox : pb::IMessage<CSDoublingBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSDoublingBox> _parser = new pb::MessageParser<CSDoublingBox>(() => new CSDoublingBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSDoublingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDoublingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDoublingBox(CSDoublingBox other) : this() {
      isDoubling_ = other.isDoubling_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDoublingBox Clone() {
      return new CSDoublingBox(this);
    }

    /// <summary>Field number for the "IsDoubling" field.</summary>
    public const int IsDoublingFieldNumber = 1;
    private bool isDoubling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDoubling {
      get { return isDoubling_; }
      set {
        isDoubling_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSDoublingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSDoublingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsDoubling != other.IsDoubling) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsDoubling != false) hash ^= IsDoubling.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsDoubling != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsDoubling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsDoubling != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsDoubling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsDoubling != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSDoublingBox other) {
      if (other == null) {
        return;
      }
      if (other.IsDoubling != false) {
        IsDoubling = other.IsDoubling;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsDoubling = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsDoubling = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCDoublingBox : pb::IMessage<SCDoublingBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCDoublingBox> _parser = new pb::MessageParser<SCDoublingBox>(() => new SCDoublingBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDoublingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDoublingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDoublingBox(SCDoublingBox other) : this() {
      isDouble_ = other.isDouble_;
      iD_ = other.iD_;
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      addReward_ = other.addReward_ != null ? other.addReward_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDoublingBox Clone() {
      return new SCDoublingBox(this);
    }

    /// <summary>Field number for the "IsDouble" field.</summary>
    public const int IsDoubleFieldNumber = 1;
    private bool isDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDouble {
      get { return isDouble_; }
      set {
        isDouble_ = value;
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 2;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Reward" field.</summary>
    public const int RewardFieldNumber = 3;
    private global::JSBY.RewardInfo reward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.RewardInfo Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    /// <summary>Field number for the "AddReward" field.</summary>
    public const int AddRewardFieldNumber = 4;
    private global::JSBY.RewardInfo addReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.RewardInfo AddReward {
      get { return addReward_; }
      set {
        addReward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDoublingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDoublingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsDouble != other.IsDouble) return false;
      if (ID != other.ID) return false;
      if (!object.Equals(Reward, other.Reward)) return false;
      if (!object.Equals(AddReward, other.AddReward)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsDouble != false) hash ^= IsDouble.GetHashCode();
      if (ID != 0) hash ^= ID.GetHashCode();
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (addReward_ != null) hash ^= AddReward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsDouble != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsDouble);
      }
      if (ID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ID);
      }
      if (reward_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Reward);
      }
      if (addReward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsDouble != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsDouble);
      }
      if (ID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ID);
      }
      if (reward_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Reward);
      }
      if (addReward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsDouble != false) {
        size += 1 + 1;
      }
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (addReward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddReward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDoublingBox other) {
      if (other == null) {
        return;
      }
      if (other.IsDouble != false) {
        IsDouble = other.IsDouble;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::JSBY.RewardInfo();
        }
        Reward.MergeFrom(other.Reward);
      }
      if (other.addReward_ != null) {
        if (addReward_ == null) {
          AddReward = new global::JSBY.RewardInfo();
        }
        AddReward.MergeFrom(other.AddReward);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsDouble = input.ReadBool();
            break;
          }
          case 16: {
            ID = input.ReadInt32();
            break;
          }
          case 26: {
            if (reward_ == null) {
              Reward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 34: {
            if (addReward_ == null) {
              AddReward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(AddReward);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsDouble = input.ReadBool();
            break;
          }
          case 16: {
            ID = input.ReadInt32();
            break;
          }
          case 26: {
            if (reward_ == null) {
              Reward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 34: {
            if (addReward_ == null) {
              AddReward = new global::JSBY.RewardInfo();
            }
            input.ReadMessage(AddReward);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSShopBuy : pb::IMessage<CSShopBuy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSShopBuy> _parser = new pb::MessageParser<CSShopBuy>(() => new CSShopBuy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSShopBuy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSShopBuy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSShopBuy(CSShopBuy other) : this() {
      propsID_ = other.propsID_;
      propsNum_ = other.propsNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSShopBuy Clone() {
      return new CSShopBuy(this);
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 1;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    /// <summary>Field number for the "PropsNum" field.</summary>
    public const int PropsNumFieldNumber = 2;
    private int propsNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsNum {
      get { return propsNum_; }
      set {
        propsNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSShopBuy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSShopBuy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropsID != other.PropsID) return false;
      if (PropsNum != other.PropsNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (PropsNum != 0) hash ^= PropsNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (PropsNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (PropsNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (PropsNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSShopBuy other) {
      if (other == null) {
        return;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      if (other.PropsNum != 0) {
        PropsNum = other.PropsNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
          case 16: {
            PropsNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
          case 16: {
            PropsNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCShopBuy : pb::IMessage<SCShopBuy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCShopBuy> _parser = new pb::MessageParser<SCShopBuy>(() => new SCShopBuy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCShopBuy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCShopBuy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCShopBuy(SCShopBuy other) : this() {
      propsID_ = other.propsID_;
      propsNum_ = other.propsNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCShopBuy Clone() {
      return new SCShopBuy(this);
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 1;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    /// <summary>Field number for the "PropsNum" field.</summary>
    public const int PropsNumFieldNumber = 2;
    private int propsNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsNum {
      get { return propsNum_; }
      set {
        propsNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCShopBuy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCShopBuy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropsID != other.PropsID) return false;
      if (PropsNum != other.PropsNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (PropsNum != 0) hash ^= PropsNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (PropsNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropsID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropsID);
      }
      if (PropsNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (PropsNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCShopBuy other) {
      if (other == null) {
        return;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      if (other.PropsNum != 0) {
        PropsNum = other.PropsNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
          case 16: {
            PropsNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropsID = input.ReadInt32();
            break;
          }
          case 16: {
            PropsNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MaterialsInfo : pb::IMessage<MaterialsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaterialsInfo> _parser = new pb::MessageParser<MaterialsInfo>(() => new MaterialsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaterialsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterialsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterialsInfo(MaterialsInfo other) : this() {
      positionId_ = other.positionId_;
      propsID_ = other.propsID_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaterialsInfo Clone() {
      return new MaterialsInfo(this);
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "PropsID" field.</summary>
    public const int PropsIDFieldNumber = 2;
    private int propsID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropsID {
      get { return propsID_; }
      set {
        propsID_ = value;
      }
    }

    /// <summary>Field number for the "Num" field.</summary>
    public const int NumFieldNumber = 3;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaterialsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaterialsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionId != other.PositionId) return false;
      if (PropsID != other.PropsID) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (PropsID != 0) hash ^= PropsID.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (PropsID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsID);
      }
      if (Num != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (PropsID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropsID);
      }
      if (Num != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (PropsID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropsID);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaterialsInfo other) {
      if (other == null) {
        return;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.PropsID != 0) {
        PropsID = other.PropsID;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            PropsID = input.ReadInt32();
            break;
          }
          case 24: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            PropsID = input.ReadInt32();
            break;
          }
          case 24: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushDropMaterials : pb::IMessage<SCPushDropMaterials>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushDropMaterials> _parser = new pb::MessageParser<SCPushDropMaterials>(() => new SCPushDropMaterials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushDropMaterials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDropMaterials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDropMaterials(SCPushDropMaterials other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushDropMaterials Clone() {
      return new SCPushDropMaterials(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.MaterialsInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.MaterialsInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.MaterialsInfo> info_ = new pbc::RepeatedField<global::JSBY.MaterialsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.MaterialsInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushDropMaterials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushDropMaterials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushDropMaterials other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushBalloonTimes : pb::IMessage<SCPushBalloonTimes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushBalloonTimes> _parser = new pb::MessageParser<SCPushBalloonTimes>(() => new SCPushBalloonTimes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushBalloonTimes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushBalloonTimes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushBalloonTimes(SCPushBalloonTimes other) : this() {
      positionId_ = other.positionId_;
      playerId_ = other.playerId_;
      freeTimes_ = other.freeTimes_;
      ratio_ = other.ratio_;
      startTime_ = other.startTime_;
      attackCount_ = other.attackCount_;
      attackInfo_ = other.attackInfo_ != null ? other.attackInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushBalloonTimes Clone() {
      return new SCPushBalloonTimes(this);
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 1;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "FreeTimes" field.</summary>
    public const int FreeTimesFieldNumber = 3;
    private int freeTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeTimes {
      get { return freeTimes_; }
      set {
        freeTimes_ = value;
      }
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 4;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private int startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "AttackCount" field.</summary>
    public const int AttackCountFieldNumber = 6;
    private int attackCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackCount {
      get { return attackCount_; }
      set {
        attackCount_ = value;
      }
    }

    /// <summary>Field number for the "AttackInfo" field.</summary>
    public const int AttackInfoFieldNumber = 7;
    private global::JSBY.SpecialAttackInfo attackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.SpecialAttackInfo AttackInfo {
      get { return attackInfo_; }
      set {
        attackInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushBalloonTimes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushBalloonTimes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionId != other.PositionId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (FreeTimes != other.FreeTimes) return false;
      if (Ratio != other.Ratio) return false;
      if (StartTime != other.StartTime) return false;
      if (AttackCount != other.AttackCount) return false;
      if (!object.Equals(AttackInfo, other.AttackInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (FreeTimes != 0) hash ^= FreeTimes.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (AttackCount != 0) hash ^= AttackCount.GetHashCode();
      if (attackInfo_ != null) hash ^= AttackInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (FreeTimes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeTimes);
      }
      if (Ratio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ratio);
      }
      if (StartTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StartTime);
      }
      if (AttackCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttackCount);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlayerId);
      }
      if (FreeTimes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeTimes);
      }
      if (Ratio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ratio);
      }
      if (StartTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StartTime);
      }
      if (AttackCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttackCount);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AttackInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (FreeTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTimes);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (AttackCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackCount);
      }
      if (attackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushBalloonTimes other) {
      if (other == null) {
        return;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.FreeTimes != 0) {
        FreeTimes = other.FreeTimes;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.AttackCount != 0) {
        AttackCount = other.AttackCount;
      }
      if (other.attackInfo_ != null) {
        if (attackInfo_ == null) {
          AttackInfo = new global::JSBY.SpecialAttackInfo();
        }
        AttackInfo.MergeFrom(other.AttackInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            FreeTimes = input.ReadInt32();
            break;
          }
          case 32: {
            Ratio = input.ReadInt32();
            break;
          }
          case 40: {
            StartTime = input.ReadInt32();
            break;
          }
          case 48: {
            AttackCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionId = input.ReadInt32();
            break;
          }
          case 16: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 24: {
            FreeTimes = input.ReadInt32();
            break;
          }
          case 32: {
            Ratio = input.ReadInt32();
            break;
          }
          case 40: {
            StartTime = input.ReadInt32();
            break;
          }
          case 48: {
            AttackCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SwitchInfo : pb::IMessage<SwitchInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchInfo> _parser = new pb::MessageParser<SwitchInfo>(() => new SwitchInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SwitchInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwitchInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwitchInfo(SwitchInfo other) : this() {
      id_ = other.id_;
      open_ = other.open_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SwitchInfo Clone() {
      return new SwitchInfo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Open" field.</summary>
    public const int OpenFieldNumber = 2;
    private bool open_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SwitchInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SwitchInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Open != other.Open) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Open != false) hash ^= Open.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Open != false) {
        output.WriteRawTag(16);
        output.WriteBool(Open);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Open != false) {
        output.WriteRawTag(16);
        output.WriteBool(Open);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Open != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SwitchInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Open != false) {
        Open = other.Open;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Open = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Open = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCFunctionSwitch : pb::IMessage<SCFunctionSwitch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCFunctionSwitch> _parser = new pb::MessageParser<SCFunctionSwitch>(() => new SCFunctionSwitch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFunctionSwitch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFunctionSwitch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFunctionSwitch(SCFunctionSwitch other) : this() {
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFunctionSwitch Clone() {
      return new SCFunctionSwitch(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.SwitchInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.SwitchInfo.Parser);
    private readonly pbc::RepeatedField<global::JSBY.SwitchInfo> info_ = new pbc::RepeatedField<global::JSBY.SwitchInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.SwitchInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFunctionSwitch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFunctionSwitch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      info_.WriteTo(ref output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFunctionSwitch other) {
      if (other == null) {
        return;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            info_.AddEntriesFrom(ref input, _repeated_info_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSealConvertMoney : pb::IMessage<CSSealConvertMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSealConvertMoney> _parser = new pb::MessageParser<CSSealConvertMoney>(() => new CSSealConvertMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSealConvertMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSealConvertMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSealConvertMoney(CSSealConvertMoney other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSealConvertMoney Clone() {
      return new CSSealConvertMoney(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSealConvertMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSealConvertMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSealConvertMoney other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCSealConvertMoney : pb::IMessage<SCSealConvertMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSealConvertMoney> _parser = new pb::MessageParser<SCSealConvertMoney>(() => new SCSealConvertMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSealConvertMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSealConvertMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSealConvertMoney(SCSealConvertMoney other) : this() {
      playerId_ = other.playerId_;
      seal_ = other.seal_;
      money_ = other.money_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSealConvertMoney Clone() {
      return new SCSealConvertMoney(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Seal" field.</summary>
    public const int SealFieldNumber = 2;
    private int seal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seal {
      get { return seal_; }
      set {
        seal_ = value;
      }
    }

    /// <summary>Field number for the "Money" field.</summary>
    public const int MoneyFieldNumber = 3;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSealConvertMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSealConvertMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Seal != other.Seal) return false;
      if (Money != other.Money) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Seal != 0) hash ^= Seal.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Seal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Seal);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Seal != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Seal);
      }
      if (Money != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Money);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Seal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seal);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSealConvertMoney other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Seal != 0) {
        Seal = other.Seal;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Seal = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Seal = input.ReadInt32();
            break;
          }
          case 24: {
            Money = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ConnectMonster : pb::IMessage<ConnectMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConnectMonster> _parser = new pb::MessageParser<ConnectMonster>(() => new ConnectMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectMonster(ConnectMonster other) : this() {
      positionID_ = other.positionID_;
      monsterID_ = other.monsterID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectMonster Clone() {
      return new ConnectMonster(this);
    }

    /// <summary>Field number for the "PositionID" field.</summary>
    public const int PositionIDFieldNumber = 1;
    private int positionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionID {
      get { return positionID_; }
      set {
        positionID_ = value;
      }
    }

    /// <summary>Field number for the "MonsterID" field.</summary>
    public const int MonsterIDFieldNumber = 2;
    private int monsterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterID {
      get { return monsterID_; }
      set {
        monsterID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PositionID != other.PositionID) return false;
      if (MonsterID != other.MonsterID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PositionID != 0) hash ^= PositionID.GetHashCode();
      if (MonsterID != 0) hash ^= MonsterID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (MonsterID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PositionID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PositionID);
      }
      if (MonsterID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MonsterID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PositionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionID);
      }
      if (MonsterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectMonster other) {
      if (other == null) {
        return;
      }
      if (other.PositionID != 0) {
        PositionID = other.PositionID;
      }
      if (other.MonsterID != 0) {
        MonsterID = other.MonsterID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PositionID = input.ReadInt32();
            break;
          }
          case 16: {
            MonsterID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushConnectMonster : pb::IMessage<SCPushConnectMonster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushConnectMonster> _parser = new pb::MessageParser<SCPushConnectMonster>(() => new SCPushConnectMonster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushConnectMonster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushConnectMonster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushConnectMonster(SCPushConnectMonster other) : this() {
      connect_ = other.connect_.Clone();
      connectID_ = other.connectID_;
      attackPositionID_ = other.attackPositionID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushConnectMonster Clone() {
      return new SCPushConnectMonster(this);
    }

    /// <summary>Field number for the "Connect" field.</summary>
    public const int ConnectFieldNumber = 1;
    private static readonly pb::FieldCodec<global::JSBY.ConnectMonster> _repeated_connect_codec
        = pb::FieldCodec.ForMessage(10, global::JSBY.ConnectMonster.Parser);
    private readonly pbc::RepeatedField<global::JSBY.ConnectMonster> connect_ = new pbc::RepeatedField<global::JSBY.ConnectMonster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::JSBY.ConnectMonster> Connect {
      get { return connect_; }
    }

    /// <summary>Field number for the "ConnectID" field.</summary>
    public const int ConnectIDFieldNumber = 2;
    private int connectID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConnectID {
      get { return connectID_; }
      set {
        connectID_ = value;
      }
    }

    /// <summary>Field number for the "AttackPositionID" field.</summary>
    public const int AttackPositionIDFieldNumber = 3;
    private int attackPositionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackPositionID {
      get { return attackPositionID_; }
      set {
        attackPositionID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushConnectMonster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushConnectMonster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!connect_.Equals(other.connect_)) return false;
      if (ConnectID != other.ConnectID) return false;
      if (AttackPositionID != other.AttackPositionID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= connect_.GetHashCode();
      if (ConnectID != 0) hash ^= ConnectID.GetHashCode();
      if (AttackPositionID != 0) hash ^= AttackPositionID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      connect_.WriteTo(output, _repeated_connect_codec);
      if (ConnectID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConnectID);
      }
      if (AttackPositionID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackPositionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      connect_.WriteTo(ref output, _repeated_connect_codec);
      if (ConnectID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConnectID);
      }
      if (AttackPositionID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttackPositionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += connect_.CalculateSize(_repeated_connect_codec);
      if (ConnectID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectID);
      }
      if (AttackPositionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackPositionID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushConnectMonster other) {
      if (other == null) {
        return;
      }
      connect_.Add(other.connect_);
      if (other.ConnectID != 0) {
        ConnectID = other.ConnectID;
      }
      if (other.AttackPositionID != 0) {
        AttackPositionID = other.AttackPositionID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            connect_.AddEntriesFrom(input, _repeated_connect_codec);
            break;
          }
          case 16: {
            ConnectID = input.ReadInt32();
            break;
          }
          case 24: {
            AttackPositionID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            connect_.AddEntriesFrom(ref input, _repeated_connect_codec);
            break;
          }
          case 16: {
            ConnectID = input.ReadInt32();
            break;
          }
          case 24: {
            AttackPositionID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCGiantUpgrade : pb::IMessage<SCGiantUpgrade>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGiantUpgrade> _parser = new pb::MessageParser<SCGiantUpgrade>(() => new SCGiantUpgrade());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGiantUpgrade> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGiantUpgrade() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGiantUpgrade(SCGiantUpgrade other) : this() {
      playerId_ = other.playerId_;
      positionId_ = other.positionId_;
      level_ = other.level_;
      attackTimes_ = other.attackTimes_;
      attackInfo_ = other.attackInfo_ != null ? other.attackInfo_.Clone() : null;
      isOver_ = other.isOver_;
      ratio_ = other.ratio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGiantUpgrade Clone() {
      return new SCGiantUpgrade(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 2;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "AttackTimes" field.</summary>
    public const int AttackTimesFieldNumber = 4;
    private int attackTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackTimes {
      get { return attackTimes_; }
      set {
        attackTimes_ = value;
      }
    }

    /// <summary>Field number for the "AttackInfo" field.</summary>
    public const int AttackInfoFieldNumber = 5;
    private global::JSBY.SpecialAttackInfo attackInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JSBY.SpecialAttackInfo AttackInfo {
      get { return attackInfo_; }
      set {
        attackInfo_ = value;
      }
    }

    /// <summary>Field number for the "IsOver" field.</summary>
    public const int IsOverFieldNumber = 6;
    private bool isOver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOver {
      get { return isOver_; }
      set {
        isOver_ = value;
      }
    }

    /// <summary>Field number for the "Ratio" field.</summary>
    public const int RatioFieldNumber = 7;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGiantUpgrade);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGiantUpgrade other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PositionId != other.PositionId) return false;
      if (Level != other.Level) return false;
      if (AttackTimes != other.AttackTimes) return false;
      if (!object.Equals(AttackInfo, other.AttackInfo)) return false;
      if (IsOver != other.IsOver) return false;
      if (Ratio != other.Ratio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (AttackTimes != 0) hash ^= AttackTimes.GetHashCode();
      if (attackInfo_ != null) hash ^= AttackInfo.GetHashCode();
      if (IsOver != false) hash ^= IsOver.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (AttackTimes != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackTimes);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AttackInfo);
      }
      if (IsOver != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsOver);
      }
      if (Ratio != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (AttackTimes != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackTimes);
      }
      if (attackInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AttackInfo);
      }
      if (IsOver != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsOver);
      }
      if (Ratio != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (AttackTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackTimes);
      }
      if (attackInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackInfo);
      }
      if (IsOver != false) {
        size += 1 + 1;
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGiantUpgrade other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.AttackTimes != 0) {
        AttackTimes = other.AttackTimes;
      }
      if (other.attackInfo_ != null) {
        if (attackInfo_ == null) {
          AttackInfo = new global::JSBY.SpecialAttackInfo();
        }
        AttackInfo.MergeFrom(other.AttackInfo);
      }
      if (other.IsOver != false) {
        IsOver = other.IsOver;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            AttackTimes = input.ReadInt32();
            break;
          }
          case 42: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
          case 48: {
            IsOver = input.ReadBool();
            break;
          }
          case 56: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            AttackTimes = input.ReadInt32();
            break;
          }
          case 42: {
            if (attackInfo_ == null) {
              AttackInfo = new global::JSBY.SpecialAttackInfo();
            }
            input.ReadMessage(AttackInfo);
            break;
          }
          case 48: {
            IsOver = input.ReadBool();
            break;
          }
          case 56: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPushGiantEnd : pb::IMessage<SCPushGiantEnd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPushGiantEnd> _parser = new pb::MessageParser<SCPushGiantEnd>(() => new SCPushGiantEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPushGiantEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGiantEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGiantEnd(SCPushGiantEnd other) : this() {
      playerId_ = other.playerId_;
      positionId_ = other.positionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPushGiantEnd Clone() {
      return new SCPushGiantEnd(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "PositionId" field.</summary>
    public const int PositionIdFieldNumber = 2;
    private int positionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionId {
      get { return positionId_; }
      set {
        positionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPushGiantEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPushGiantEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PositionId != other.PositionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PositionId != 0) hash ^= PositionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PositionId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPushGiantEnd other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PositionId != 0) {
        PositionId = other.PositionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            PositionId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCDropCard : pb::IMessage<SCDropCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCDropCard> _parser = new pb::MessageParser<SCDropCard>(() => new SCDropCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDropCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDropCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDropCard(SCDropCard other) : this() {
      iD_ = other.iD_;
      typeID_ = other.typeID_;
      quality_ = other.quality_;
      basePower_ = other.basePower_;
      extendPower_ = other.extendPower_;
      equip_ = other.equip_;
      positionID_ = other.positionID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDropCard Clone() {
      return new SCDropCard(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "TypeID" field.</summary>
    public const int TypeIDFieldNumber = 2;
    private int typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    /// <summary>Field number for the "Quality" field.</summary>
    public const int QualityFieldNumber = 3;
    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "BasePower" field.</summary>
    public const int BasePowerFieldNumber = 4;
    private int basePower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasePower {
      get { return basePower_; }
      set {
        basePower_ = value;
      }
    }

    /// <summary>Field number for the "ExtendPower" field.</summary>
    public const int ExtendPowerFieldNumber = 5;
    private int extendPower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtendPower {
      get { return extendPower_; }
      set {
        extendPower_ = value;
      }
    }

    /// <summary>Field number for the "Equip" field.</summary>
    public const int EquipFieldNumber = 6;
    private int equip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Equip {
      get { return equip_; }
      set {
        equip_ = value;
      }
    }

    /// <summary>Field number for the "PositionID" field.</summary>
    public const int PositionIDFieldNumber = 7;
    private int positionID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PositionID {
      get { return positionID_; }
      set {
        positionID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDropCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDropCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (TypeID != other.TypeID) return false;
      if (Quality != other.Quality) return false;
      if (BasePower != other.BasePower) return false;
      if (ExtendPower != other.ExtendPower) return false;
      if (Equip != other.Equip) return false;
      if (PositionID != other.PositionID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (TypeID != 0) hash ^= TypeID.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (BasePower != 0) hash ^= BasePower.GetHashCode();
      if (ExtendPower != 0) hash ^= ExtendPower.GetHashCode();
      if (Equip != 0) hash ^= Equip.GetHashCode();
      if (PositionID != 0) hash ^= PositionID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (TypeID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TypeID);
      }
      if (Quality != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quality);
      }
      if (BasePower != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BasePower);
      }
      if (ExtendPower != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExtendPower);
      }
      if (Equip != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Equip);
      }
      if (PositionID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PositionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (TypeID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TypeID);
      }
      if (Quality != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quality);
      }
      if (BasePower != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BasePower);
      }
      if (ExtendPower != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExtendPower);
      }
      if (Equip != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Equip);
      }
      if (PositionID != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PositionID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (TypeID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeID);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (BasePower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasePower);
      }
      if (ExtendPower != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtendPower);
      }
      if (Equip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Equip);
      }
      if (PositionID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PositionID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDropCard other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.TypeID != 0) {
        TypeID = other.TypeID;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.BasePower != 0) {
        BasePower = other.BasePower;
      }
      if (other.ExtendPower != 0) {
        ExtendPower = other.ExtendPower;
      }
      if (other.Equip != 0) {
        Equip = other.Equip;
      }
      if (other.PositionID != 0) {
        PositionID = other.PositionID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            TypeID = input.ReadInt32();
            break;
          }
          case 24: {
            Quality = input.ReadInt32();
            break;
          }
          case 32: {
            BasePower = input.ReadInt32();
            break;
          }
          case 40: {
            ExtendPower = input.ReadInt32();
            break;
          }
          case 48: {
            Equip = input.ReadInt32();
            break;
          }
          case 56: {
            PositionID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            TypeID = input.ReadInt32();
            break;
          }
          case 24: {
            Quality = input.ReadInt32();
            break;
          }
          case 32: {
            BasePower = input.ReadInt32();
            break;
          }
          case 40: {
            ExtendPower = input.ReadInt32();
            break;
          }
          case 48: {
            Equip = input.ReadInt32();
            break;
          }
          case 56: {
            PositionID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCAcquireSeal : pb::IMessage<SCAcquireSeal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCAcquireSeal> _parser = new pb::MessageParser<SCAcquireSeal>(() => new SCAcquireSeal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCAcquireSeal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAcquireSeal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAcquireSeal(SCAcquireSeal other) : this() {
      playerId_ = other.playerId_;
      mxlSealAddAwardRatio_ = other.mxlSealAddAwardRatio_;
      heroPositionId_ = other.heroPositionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAcquireSeal Clone() {
      return new SCAcquireSeal(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "MxlSealAddAwardRatio" field.</summary>
    public const int MxlSealAddAwardRatioFieldNumber = 2;
    private int mxlSealAddAwardRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MxlSealAddAwardRatio {
      get { return mxlSealAddAwardRatio_; }
      set {
        mxlSealAddAwardRatio_ = value;
      }
    }

    /// <summary>Field number for the "HeroPositionId" field.</summary>
    public const int HeroPositionIdFieldNumber = 3;
    private int heroPositionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeroPositionId {
      get { return heroPositionId_; }
      set {
        heroPositionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCAcquireSeal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCAcquireSeal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (MxlSealAddAwardRatio != other.MxlSealAddAwardRatio) return false;
      if (HeroPositionId != other.HeroPositionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (MxlSealAddAwardRatio != 0) hash ^= MxlSealAddAwardRatio.GetHashCode();
      if (HeroPositionId != 0) hash ^= HeroPositionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (MxlSealAddAwardRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MxlSealAddAwardRatio);
      }
      if (HeroPositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (MxlSealAddAwardRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MxlSealAddAwardRatio);
      }
      if (HeroPositionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HeroPositionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (MxlSealAddAwardRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MxlSealAddAwardRatio);
      }
      if (HeroPositionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeroPositionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCAcquireSeal other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.MxlSealAddAwardRatio != 0) {
        MxlSealAddAwardRatio = other.MxlSealAddAwardRatio;
      }
      if (other.HeroPositionId != 0) {
        HeroPositionId = other.HeroPositionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            MxlSealAddAwardRatio = input.ReadInt32();
            break;
          }
          case 24: {
            HeroPositionId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            MxlSealAddAwardRatio = input.ReadInt32();
            break;
          }
          case 24: {
            HeroPositionId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FreshMoney : pb::IMessage<FreshMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FreshMoney> _parser = new pb::MessageParser<FreshMoney>(() => new FreshMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FreshMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreshMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreshMoney(FreshMoney other) : this() {
      playerId_ = other.playerId_;
      fee_ = other.fee_;
      gameID_ = other.gameID_;
      cYMoney_ = other.cYMoney_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreshMoney Clone() {
      return new FreshMoney(this);
    }

    /// <summary>Field number for the "PlayerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Fee" field.</summary>
    public const int FeeFieldNumber = 2;
    private int fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "GameID" field.</summary>
    public const int GameIDFieldNumber = 3;
    private int gameID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameID {
      get { return gameID_; }
      set {
        gameID_ = value;
      }
    }

    /// <summary>Field number for the "CYMoney" field.</summary>
    public const int CYMoneyFieldNumber = 4;
    private int cYMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CYMoney {
      get { return cYMoney_; }
      set {
        cYMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FreshMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FreshMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Fee != other.Fee) return false;
      if (GameID != other.GameID) return false;
      if (CYMoney != other.CYMoney) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Fee != 0) hash ^= Fee.GetHashCode();
      if (GameID != 0) hash ^= GameID.GetHashCode();
      if (CYMoney != 0) hash ^= CYMoney.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Fee != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Fee);
      }
      if (GameID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GameID);
      }
      if (CYMoney != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CYMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Fee != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Fee);
      }
      if (GameID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GameID);
      }
      if (CYMoney != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CYMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Fee != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fee);
      }
      if (GameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameID);
      }
      if (CYMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CYMoney);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FreshMoney other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Fee != 0) {
        Fee = other.Fee;
      }
      if (other.GameID != 0) {
        GameID = other.GameID;
      }
      if (other.CYMoney != 0) {
        CYMoney = other.CYMoney;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Fee = input.ReadInt32();
            break;
          }
          case 24: {
            GameID = input.ReadInt32();
            break;
          }
          case 32: {
            CYMoney = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Fee = input.ReadInt32();
            break;
          }
          case 24: {
            GameID = input.ReadInt32();
            break;
          }
          case 32: {
            CYMoney = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShutdownService : pb::IMessage<ShutdownService>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShutdownService> _parser = new pb::MessageParser<ShutdownService>(() => new ShutdownService());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownService> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JSBY.JSBYReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownService() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownService(ShutdownService other) : this() {
      gameID_ = other.gameID_;
      arenaID_ = other.arenaID_;
      serverID_ = other.serverID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownService Clone() {
      return new ShutdownService(this);
    }

    /// <summary>Field number for the "GameID" field.</summary>
    public const int GameIDFieldNumber = 1;
    private int gameID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameID {
      get { return gameID_; }
      set {
        gameID_ = value;
      }
    }

    /// <summary>Field number for the "ArenaID" field.</summary>
    public const int ArenaIDFieldNumber = 2;
    private int arenaID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArenaID {
      get { return arenaID_; }
      set {
        arenaID_ = value;
      }
    }

    /// <summary>Field number for the "ServerID" field.</summary>
    public const int ServerIDFieldNumber = 3;
    private int serverID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ServerID {
      get { return serverID_; }
      set {
        serverID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownService);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownService other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameID != other.GameID) return false;
      if (ArenaID != other.ArenaID) return false;
      if (ServerID != other.ServerID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameID != 0) hash ^= GameID.GetHashCode();
      if (ArenaID != 0) hash ^= ArenaID.GetHashCode();
      if (ServerID != 0) hash ^= ServerID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameID);
      }
      if (ArenaID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaID);
      }
      if (ServerID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ServerID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameID);
      }
      if (ArenaID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaID);
      }
      if (ServerID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ServerID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameID);
      }
      if (ArenaID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArenaID);
      }
      if (ServerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownService other) {
      if (other == null) {
        return;
      }
      if (other.GameID != 0) {
        GameID = other.GameID;
      }
      if (other.ArenaID != 0) {
        ArenaID = other.ArenaID;
      }
      if (other.ServerID != 0) {
        ServerID = other.ServerID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameID = input.ReadInt32();
            break;
          }
          case 16: {
            ArenaID = input.ReadInt32();
            break;
          }
          case 24: {
            ServerID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameID = input.ReadInt32();
            break;
          }
          case 16: {
            ArenaID = input.ReadInt32();
            break;
          }
          case 24: {
            ServerID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
