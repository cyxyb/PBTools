// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/WPBY.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Proto/SubGame/WPBY.proto</summary>
public static partial class WPBYReflection {

  #region Descriptor
  /// <summary>File descriptor for Proto/SubGame/WPBY.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static WPBYReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhQcm90by9TdWJHYW1lL1dQQlkucHJvdG8iUgoQQ01EX1NfUm9ib3RTaG9v",
          "dBIQCghjaGFpcl9pZBgBIAEoBRINCgVsZXZlbBgCIAEoBRIMCgR0eXBlGAMg",
          "ASgFEg8KB2lzX2xvY2sYBCABKAUiIwoPQ01EX1NfUm9ib3RMaXN0EhAKCGlz",
          "X3JvYm90GAEgAygIIjUKEENNRF9TX1BsYXllckxvY2sSEAoIY2hhaXJfaWQY",
          "ASABKAUSDwoHZmlzaF9pZBgCIAEoBSKkAQoNQ01EX1NfU2hvb3RMSxIQCghj",
          "aGFpcl9pZBgBIAEoBRIKCgJpZBgCIAEoBRINCgVzY29yZRgDIAEoBRIQCght",
          "dWx0aXBsZRgEIAEoBRIRCglpc19kZWFkZWQYBSABKAgSEQoJamJwX3N0YWdl",
          "GAYgASgFEhQKDGN1cl9sa19zY29yZRgHIAEoBRIYChBjdXJfcGxheWVyX3Nj",
          "b3JlGAggASgDIjUKEENNRF9TX0p1QnVaaGFEYW4SEAoIY2hhaXJfaWQYASAB",
          "KAUSDwoHZmlzaF9pZBgCIAEoBSI4ChFDTURfU19ZaVdhbmdEYUppbhIQCghj",
          "aGFpcl9pZBgBIAEoBRIRCglidWxsZXRfaWQYAiABKAUiRgoTQ01EX1NfVG9u",
          "Z0xlaVpoYURhbhIQCghjaGFpcl9pZBgBIAEoBRIPCgdmaXNoX2lkGAIgASgF",
          "EgwKBGtpbmQYAyABKAUi9gEKCExvYWRGaXNoEgwKBGtpbmQYASABKAUSCgoC",
          "aWQYAiABKAUSEwoLY3JlYXRlX3RpbWUYAyABKAUSFQoNY29udGludWVfdGlt",
          "ZRgEIAEoBRIMCgRyb2FkGAUgASgFEhAKCGdyb3VwX2lkGAYgASgFEhAKCGdy",
          "b3VwX25vGAcgASgFEhAKCG5vd190aW1lGAggASgFEgsKA211bBgJIAEoBRIN",
          "CgVzdGFnZRgKIAEoBRIPCgdpc19hY2VkGAsgASgFEhEKCWpicF9zdGFnZRgM",
          "IAEoBRIOCgZsa19tdWwYDSABKAUSEAoIbGtfc2NvcmUYDiABKAUiXgoMQ01E",
          "X1NfWXVXYW5nEhAKCGNoYWlyX2lkGAEgASgFEgwKBGtpbmQYAiABKAUSEgoK",
          "eXVfd2FuZ19pZBgDIAEoBRIaCgdmaXNoX2lkGAQgAygLMgkuTG9hZEZpc2gi",
          "OwoMQ01EX1NfRGFTaVhpEgoKAmlkGAEgASgFEhAKCGNoYWlyX2lkGAIgASgF",
          "Eg0KBXNjb3JlGAMgASgFIl4KFENNRF9TX0RhSmlhbmdaaGFuZ1l1EgoKAmlk",
          "GAEgASgFEhAKCGNoYWlyX2lkGAIgASgFEgwKBG9kZDEYAyABKAUSDAoEb2Rk",
          "MhgEIAEoBRIMCgRvZGQzGAUgASgFIkgKEUNNRF9TX1pob25nWWlUYW5nEhAK",
          "CGNoYWlyX2lkGAEgASgFEhAKCGFkZF90aW1lGAIgASgFEg8KB2FkZF9tdWwY",
          "AyABKAUiSgoRQ01EX1NfU2h1aUh1Wmh1YW4SEAoIY2hhaXJfaWQYASABKAUS",
          "DwoHZmlzaF9pZBgCIAMoBRISCgpmaXNoX3Njb3JlGAMgAygFIlAKF0NNRF9T",
          "X0NoYW5nZUJ1bGxldExldmVsEhAKCGNoYWlyX2lkGAEgASgFEhAKCGd1bl90",
          "eXBlGAIgASgFEhEKCWd1bl9sZXZlbBgDIAEoBSJ6CgxDTURfU19DT05GSUcS",
          "FAoMYnVsbGV0X3Njb3JlGAEgAygFEh0KFWJhY2tncm91bmRfcGljdHVyZV9p",
          "ZBgCIAEoBRIbChNwbGF5ZXJfbG9ja19maXNoX2lkGAMgAygFEhgKEHBsYXll",
          "cl9jdXJfc2NvcmUYBCADKAMiOwoUQ01EX1NfUGxheWVyR3VuTGV2ZWwSEQoJ",
          "Z3VuX2xldmVsGAEgAygFEhAKCGd1bl90eXBlGAIgAygFIi0KDUNNRF9TX0Fk",
          "ZEZpc2gSHAoJbG9hZF9maXNoGAEgAygLMgkuTG9hZEZpc2giMQoRQ01EX1Nf",
          "UGxheWVyRW50ZXISHAoJbG9hZF9maXNoGAEgAygLMgkuTG9hZEZpc2giRwoT",
          "Q01EX1NfUGxheWVyWUNFbnRlchISCgp5dV9jaGFvX2lkGAEgASgFEhwKCWxv",
          "YWRfZmlzaBgCIAMoCzIJLkxvYWRGaXNoIikKDEZpc2hEZWFkSW5mbxIKCgJp",
          "ZBgBIAEoBRINCgVzY29yZRgCIAEoBSJkCg5DTURfU19GaXNoRGVhZBIQCghj",
          "aGFpcl9pZBgBIAEoBRIbCgRmaXNoGAIgAygLMg0uRmlzaERlYWRJbmZvEg0K",
          "BXNjb3JlGAMgASgDEhQKDGxlaV9sb25nX29kZBgEIAEoBSJyChFDTURfU19Q",
          "bGF5ZXJTaG9vdBIQCghjaGFpcl9pZBgBIAEoBRIJCgF4GAIgASgCEgkKAXkY",
          "AyABKAISDQoFbGV2ZWwYBCABKAUSDAoEdHlwZRgFIAEoBRIYChBwbGF5ZXJf",
          "Y3VyX3Njb3JlGAYgASgDIlIKEENNRF9DX1JvYm90U2hvb3QSEAoIY2hhaXJf",
          "aWQYASABKAUSDQoFbGV2ZWwYAiABKAUSDAoEdHlwZRgDIAEoBRIPCgdpc19s",
          "b2NrGAQgASgFIjUKEENNRF9DX1BsYXllckxvY2sSEAoIY2hhaXJfaWQYASAB",
          "KAUSDwoHZmlzaF9pZBgCIAEoBSJLChBDTURfQ19KdUJ1WmhhRGFuEhAKCGNo",
          "YWlyX2lkGAEgASgFEhQKDHRlX3NodV9pdV9pZBgCIAEoBRIPCgdmaXNoX2lk",
          "GAMgAygFIk4KE0NNRF9DX1RvbmdMZWlaaGFEYW4SEAoIY2hhaXJfaWQYASAB",
          "KAUSFAoMdGVfc2h1X2l1X2lkGAIgASgFEg8KB2Zpc2hfaWQYAyADKAUiTAoR",
          "Q01EX0NfU2h1aUh1Wmh1YW4SEAoIY2hhaXJfaWQYASABKAUSFAoMdGVfc2h1",
          "X2l1X2lkGAIgASgFEg8KB2Zpc2hfaWQYAyADKAUiUAoXQ01EX0NfQ2hhbmdl",
          "QnVsbGV0TGV2ZWwSEAoIY2hhaXJfaWQYASABKAUSEAoIZ3VuX3R5cGUYAiAB",
          "KAUSEQoJZ3VuX2xldmVsGAMgASgFImUKBkJ1bGxldBIKCgJpZBgBIAEoBRIT",
          "CgtidWxsZXRfa2luZBgCIAEoBRIOCgZpc191c2UYAyABKAUSDQoFbGV2ZWwY",
          "BCABKAUSDAoEdHlwZRgFIAEoBRINCgVjaGlwcxgGIAEoBSJTChBDTURfQ19Q",
          "cmVzc1Nob290EgkKAXgYASABKAISCQoBeRgCIAEoAhIQCghjaGFpcl9pZBgD",
          "IAEoBRIXCgZidWxsZXQYBCABKAsyBy5CdWxsZXQiTgoPQ01EX0NfSGl0ZWRG",
          "aXNoEhcKBmJ1bGxldBgBIAEoCzIHLkJ1bGxldBIQCghjaGFpcl9pZBgCIAEo",
          "BRIQCghoaXRfZmlzaBgDIAMoBSr0BwoNRU1zZ0lEU3ViR2FtZRIVChFNc2dJ",
          "RFN1YkdhbWVfTnVsbBAAEhQKDlNVQl9TX0NhblNob290EOj+AhIVCg9TVUJf",
          "U19DYW50U2hvb3QQ6f4CEhYKEFNVQl9DX1JvYm90U2hvb3QQ6v4CEhYKEFNV",
          "Ql9TX0dBTUVfU1RBUlQQ0YYDEhQKDlNVQl9TX0FERF9GSVNIENKGAxIVCg9T",
          "VUJfU19GSVNIX0RFQUQQ04YDEhgKElNVQl9TX1BMQVlFUl9TSE9PVBDUhgMS",
          "EgoMU1VCX1NfQ09ORklHENWGAxIdChdTVUJfU19DSEFOR0VCVUxMRVRMRVZF",
          "TBDWhgMSFwoRU1VCX1NfU0hVSUhVWkhVQU4Q14YDEhcKEVNVQl9TX1pIT05H",
          "WUlUQU5HENiGAxIVCg9TVUJfU19EQVNBTllVQU4Q2YYDEhIKDFNVQl9TX0RB",
          "U0lYSRDahgMSEgoMU1VCX1NfWVVXQU5HENuGAxIZChNTVUJfU19UT05HTEVJ",
          "WkhBREFOENyGAxIXChFTVUJfU19ZSVdBTkdEQUpJThDdhgMSFgoQU1VCX1Nf",
          "SlVCVVpIQURBThDehgMSGAoSU1VCX1NfUExBWUVSX0VOVEVSEN+GAxIUCg5T",
          "VUJfU19TSE9PVF9MSxDghgMSFgoQU1VCX1NfWVVDSEFPQ09NRRDhhgMSFQoP",
          "U1VCX1NfWVVDSEFPUFJFEOKGAxIaChRTVUJfU19QTEFZRVJHVU5MRVZFTBDj",
          "hgMSFgoQU1VCX1NfUGxheWVyTG9jaxDkhgMSHAoWU1VCX1NfUGxheWVyQ2Fu",
          "Y2VsTG9jaxDlhgMSFQoPU1VCX1NfUm9ib3RDb21lEOaGAxIVCg9TVUJfU19S",
          "b2JvdExpc3QQ54YDEhYKEFNVQl9TX1JvYm90U2hvb3QQ6IYDEh8KGVNVQl9T",
          "X1JvYm90TW9uZXlOb3RFbm91Z2gQ6YYDEhsKFVNVQl9TX1BMQVlFUl9ZQ19F",
          "TlRFUhDqhgMSHQoXU1VCX1NfQ0hFQ0tfUk9CT1RfTEVBVkUQ64YDEhcKEVNV",
          "Ql9DX1BSRVNTX1NIT09UELSHAxIWChBTVUJfQ19ISVRFRF9GSVNIELWHAxId",
          "ChdTVUJfQ19DSEFOR0VCVUxMRVRMRVZFTBC2hwMSFwoRU1VCX0NfU0hVSUhV",
          "WkhVQU4Qt4cDEhIKDFNVQl9DX1lVV0FORxC4hwMSGQoTU1VCX0NfVE9OR0xF",
          "SVpIQURBThC5hwMSFgoQU1VCX0NfSlVCVVpIQURBThC6hwMSFgoQU1VCX0Nf",
          "UGxheWVyTG9jaxC7hwMSHAoWU1VCX0NfUGxheWVyQ2FuY2VsTG9jaxC8hwNi",
          "BnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EMsgIDSubGame), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_RobotShoot), global::CMD_S_RobotShoot.Parser, new[]{ "ChairId", "Level", "Type", "IsLock" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_RobotList), global::CMD_S_RobotList.Parser, new[]{ "IsRobot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_PlayerLock), global::CMD_S_PlayerLock.Parser, new[]{ "ChairId", "FishId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_ShootLK), global::CMD_S_ShootLK.Parser, new[]{ "ChairId", "Id", "Score", "Multiple", "IsDeaded", "JbpStage", "CurLkScore", "CurPlayerScore" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_JuBuZhaDan), global::CMD_S_JuBuZhaDan.Parser, new[]{ "ChairId", "FishId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_YiWangDaJin), global::CMD_S_YiWangDaJin.Parser, new[]{ "ChairId", "BulletId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_TongLeiZhaDan), global::CMD_S_TongLeiZhaDan.Parser, new[]{ "ChairId", "FishId", "Kind" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoadFish), global::LoadFish.Parser, new[]{ "Kind", "Id", "CreateTime", "ContinueTime", "Road", "GroupId", "GroupNo", "NowTime", "Mul", "Stage", "IsAced", "JbpStage", "LkMul", "LkScore" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_YuWang), global::CMD_S_YuWang.Parser, new[]{ "ChairId", "Kind", "YuWangId", "FishId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_DaSiXi), global::CMD_S_DaSiXi.Parser, new[]{ "Id", "ChairId", "Score" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_DaJiangZhangYu), global::CMD_S_DaJiangZhangYu.Parser, new[]{ "Id", "ChairId", "Odd1", "Odd2", "Odd3" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_ZhongYiTang), global::CMD_S_ZhongYiTang.Parser, new[]{ "ChairId", "AddTime", "AddMul" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_ShuiHuZhuan), global::CMD_S_ShuiHuZhuan.Parser, new[]{ "ChairId", "FishId", "FishScore" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_ChangeBulletLevel), global::CMD_S_ChangeBulletLevel.Parser, new[]{ "ChairId", "GunType", "GunLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_CONFIG), global::CMD_S_CONFIG.Parser, new[]{ "BulletScore", "BackgroundPictureId", "PlayerLockFishId", "PlayerCurScore" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_PlayerGunLevel), global::CMD_S_PlayerGunLevel.Parser, new[]{ "GunLevel", "GunType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_AddFish), global::CMD_S_AddFish.Parser, new[]{ "LoadFish" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_PlayerEnter), global::CMD_S_PlayerEnter.Parser, new[]{ "LoadFish" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_PlayerYCEnter), global::CMD_S_PlayerYCEnter.Parser, new[]{ "YuChaoId", "LoadFish" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FishDeadInfo), global::FishDeadInfo.Parser, new[]{ "Id", "Score" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_FishDead), global::CMD_S_FishDead.Parser, new[]{ "ChairId", "Fish", "Score", "LeiLongOdd" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_S_PlayerShoot), global::CMD_S_PlayerShoot.Parser, new[]{ "ChairId", "X", "Y", "Level", "Type", "PlayerCurScore" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_RobotShoot), global::CMD_C_RobotShoot.Parser, new[]{ "ChairId", "Level", "Type", "IsLock" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_PlayerLock), global::CMD_C_PlayerLock.Parser, new[]{ "ChairId", "FishId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_JuBuZhaDan), global::CMD_C_JuBuZhaDan.Parser, new[]{ "ChairId", "TeShuIuId", "FishId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_TongLeiZhaDan), global::CMD_C_TongLeiZhaDan.Parser, new[]{ "ChairId", "TeShuIuId", "FishId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_ShuiHuZhuan), global::CMD_C_ShuiHuZhuan.Parser, new[]{ "ChairId", "TeShuIuId", "FishId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_ChangeBulletLevel), global::CMD_C_ChangeBulletLevel.Parser, new[]{ "ChairId", "GunType", "GunLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Bullet), global::Bullet.Parser, new[]{ "Id", "BulletKind", "IsUse", "Level", "Type", "Chips" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_PressShoot), global::CMD_C_PressShoot.Parser, new[]{ "X", "Y", "ChairId", "Bullet" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMD_C_HitedFish), global::CMD_C_HitedFish.Parser, new[]{ "Bullet", "ChairId", "HitFish" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EMsgIDSubGame {
  [pbr::OriginalName("MsgIDSubGame_Null")] MsgIdsubGameNull = 0,
  /// <summary>
  ///可以发炮
  /// </summary>
  [pbr::OriginalName("SUB_S_CanShoot")] SubSCanShoot = 49000,
  /// <summary>
  ///不可以发炮
  /// </summary>
  [pbr::OriginalName("SUB_S_CantShoot")] SubSCantShoot = 49001,
  /// <summary>
  ///机器人发炮
  /// </summary>
  [pbr::OriginalName("SUB_C_RobotShoot")] SubCRobotShoot = 49002,
  /// <summary>
  ///游戏开始
  /// </summary>
  [pbr::OriginalName("SUB_S_GAME_START")] SubSGameStart = 50001,
  /// <summary>
  ///增加鱼
  /// </summary>
  [pbr::OriginalName("SUB_S_ADD_FISH")] SubSAddFish = 50002,
  /// <summary>
  ///鱼死亡
  /// </summary>
  [pbr::OriginalName("SUB_S_FISH_DEAD")] SubSFishDead = 50003,
  /// <summary>
  ///玩家发炮
  /// </summary>
  [pbr::OriginalName("SUB_S_PLAYER_SHOOT")] SubSPlayerShoot = 50004,
  /// <summary>
  ///配置信息
  /// </summary>
  [pbr::OriginalName("SUB_S_CONFIG")] SubSConfig = 50005,
  /// <summary>
  ///切换炮台等级
  /// </summary>
  [pbr::OriginalName("SUB_S_CHANGEBULLETLEVEL")] SubSChangebulletlevel = 50006,
  /// <summary>
  ///打死水浒传
  /// </summary>
  [pbr::OriginalName("SUB_S_SHUIHUZHUAN")] SubSShuihuzhuan = 50007,
  /// <summary>
  ///打死忠义堂
  /// </summary>
  [pbr::OriginalName("SUB_S_ZHONGYITANG")] SubSZhongyitang = 50008,
  /// <summary>
  ///打死大三元
  /// </summary>
  [pbr::OriginalName("SUB_S_DASANYUAN")] SubSDasanyuan = 50009,
  /// <summary>
  ///打死大四喜
  /// </summary>
  [pbr::OriginalName("SUB_S_DASIXI")] SubSDasixi = 50010,
  /// <summary>
  ///打死鱼王
  /// </summary>
  [pbr::OriginalName("SUB_S_YUWANG")] SubSYuwang = 50011,
  /// <summary>
  ///打死同类炸弹
  /// </summary>
  [pbr::OriginalName("SUB_S_TONGLEIZHADAN")] SubSTongleizhadan = 50012,
  /// <summary>
  ///打死一网打尽
  /// </summary>
  [pbr::OriginalName("SUB_S_YIWANGDAJIN")] SubSYiwangdajin = 50013,
  /// <summary>
  ///打死局部炸弹
  /// </summary>
  [pbr::OriginalName("SUB_S_JUBUZHADAN")] SubSJubuzhadan = 50014,
  /// <summary>
  ///玩家进入
  /// </summary>
  [pbr::OriginalName("SUB_S_PLAYER_ENTER")] SubSPlayerEnter = 50015,
  /// <summary>
  ///击中李逵
  /// </summary>
  [pbr::OriginalName("SUB_S_SHOOT_LK")] SubSShootLk = 50016,
  /// <summary>
  ///鱼潮来临
  /// </summary>
  [pbr::OriginalName("SUB_S_YUCHAOCOME")] SubSYuchaocome = 50017,
  /// <summary>
  ///鱼潮即将来临
  /// </summary>
  [pbr::OriginalName("SUB_S_YUCHAOPRE")] SubSYuchaopre = 50018,
  /// <summary>
  ///玩家炮台信息
  /// </summary>
  [pbr::OriginalName("SUB_S_PLAYERGUNLEVEL")] SubSPlayergunlevel = 50019,
  /// <summary>
  ///玩家锁定
  /// </summary>
  [pbr::OriginalName("SUB_S_PlayerLock")] SubSPlayerLock = 50020,
  /// <summary>
  ///玩家取消锁定
  /// </summary>
  [pbr::OriginalName("SUB_S_PlayerCancelLock")] SubSPlayerCancelLock = 50021,
  /// <summary>
  ///机器人进入
  /// </summary>
  [pbr::OriginalName("SUB_S_RobotCome")] SubSRobotCome = 50022,
  /// <summary>
  ///机器人列表
  /// </summary>
  [pbr::OriginalName("SUB_S_RobotList")] SubSRobotList = 50023,
  /// <summary>
  ///机器人发炮
  /// </summary>
  [pbr::OriginalName("SUB_S_RobotShoot")] SubSRobotShoot = 50024,
  /// <summary>
  ///机器人钱不足
  /// </summary>
  [pbr::OriginalName("SUB_S_RobotMoneyNotEnough")] SubSRobotMoneyNotEnough = 50025,
  /// <summary>
  ///玩家进入
  /// </summary>
  [pbr::OriginalName("SUB_S_PLAYER_YC_ENTER")] SubSPlayerYcEnter = 50026,
  /// <summary>
  ///检查机器人是否离开
  /// </summary>
  [pbr::OriginalName("SUB_S_CHECK_ROBOT_LEAVE")] SubSCheckRobotLeave = 50027,
  /// <summary>
  ///发射子弹
  /// </summary>
  [pbr::OriginalName("SUB_C_PRESS_SHOOT")] SubCPressShoot = 50100,
  /// <summary>
  ///玩家命中
  /// </summary>
  [pbr::OriginalName("SUB_C_HITED_FISH")] SubCHitedFish = 50101,
  /// <summary>
  ///切换炮台等级
  /// </summary>
  [pbr::OriginalName("SUB_C_CHANGEBULLETLEVEL")] SubCChangebulletlevel = 50102,
  /// <summary>
  ///击中水浒传
  /// </summary>
  [pbr::OriginalName("SUB_C_SHUIHUZHUAN")] SubCShuihuzhuan = 50103,
  /// <summary>
  ///打死鱼王
  /// </summary>
  [pbr::OriginalName("SUB_C_YUWANG")] SubCYuwang = 50104,
  /// <summary>
  ///打死同类炸弹
  /// </summary>
  [pbr::OriginalName("SUB_C_TONGLEIZHADAN")] SubCTongleizhadan = 50105,
  /// <summary>
  ///打死局部炸弹
  /// </summary>
  [pbr::OriginalName("SUB_C_JUBUZHADAN")] SubCJubuzhadan = 50106,
  /// <summary>
  ///玩家锁定
  /// </summary>
  [pbr::OriginalName("SUB_C_PlayerLock")] SubCPlayerLock = 50107,
  /// <summary>
  ///玩家取消锁定
  /// </summary>
  [pbr::OriginalName("SUB_C_PlayerCancelLock")] SubCPlayerCancelLock = 50108,
}

#endregion

#region Messages
/// <summary>
///机器人发炮
/// </summary>
public sealed partial class CMD_S_RobotShoot : pb::IMessage<CMD_S_RobotShoot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_RobotShoot> _parser = new pb::MessageParser<CMD_S_RobotShoot>(() => new CMD_S_RobotShoot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_RobotShoot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_RobotShoot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_RobotShoot(CMD_S_RobotShoot other) : this() {
    chairId_ = other.chairId_;
    level_ = other.level_;
    type_ = other.type_;
    isLock_ = other.isLock_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_RobotShoot Clone() {
    return new CMD_S_RobotShoot(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///机器人座位号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 2;
  private int level_;
  /// <summary>
  ///等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private int type_;
  /// <summary>
  ///类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "is_lock" field.</summary>
  public const int IsLockFieldNumber = 4;
  private int isLock_;
  /// <summary>
  ///是否锁定
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsLock {
    get { return isLock_; }
    set {
      isLock_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_RobotShoot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_RobotShoot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (Level != other.Level) return false;
    if (Type != other.Type) return false;
    if (IsLock != other.IsLock) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (IsLock != 0) hash ^= IsLock.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (IsLock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(IsLock);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (IsLock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(IsLock);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (IsLock != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsLock);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_RobotShoot other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.IsLock != 0) {
      IsLock = other.IsLock;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Level = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          IsLock = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Level = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          IsLock = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///机器人列表
/// </summary>
public sealed partial class CMD_S_RobotList : pb::IMessage<CMD_S_RobotList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_RobotList> _parser = new pb::MessageParser<CMD_S_RobotList>(() => new CMD_S_RobotList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_RobotList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_RobotList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_RobotList(CMD_S_RobotList other) : this() {
    isRobot_ = other.isRobot_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_RobotList Clone() {
    return new CMD_S_RobotList(this);
  }

  /// <summary>Field number for the "is_robot" field.</summary>
  public const int IsRobotFieldNumber = 1;
  private static readonly pb::FieldCodec<bool> _repeated_isRobot_codec
      = pb::FieldCodec.ForBool(10);
  private readonly pbc::RepeatedField<bool> isRobot_ = new pbc::RepeatedField<bool>();
  /// <summary>
  ///是否机器人
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<bool> IsRobot {
    get { return isRobot_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_RobotList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_RobotList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!isRobot_.Equals(other.isRobot_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= isRobot_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    isRobot_.WriteTo(output, _repeated_isRobot_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    isRobot_.WriteTo(ref output, _repeated_isRobot_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += isRobot_.CalculateSize(_repeated_isRobot_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_RobotList other) {
    if (other == null) {
      return;
    }
    isRobot_.Add(other.isRobot_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          isRobot_.AddEntriesFrom(input, _repeated_isRobot_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          isRobot_.AddEntriesFrom(ref input, _repeated_isRobot_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家锁定
/// </summary>
public sealed partial class CMD_S_PlayerLock : pb::IMessage<CMD_S_PlayerLock>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_PlayerLock> _parser = new pb::MessageParser<CMD_S_PlayerLock>(() => new CMD_S_PlayerLock());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_PlayerLock> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerLock() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerLock(CMD_S_PlayerLock other) : this() {
    chairId_ = other.chairId_;
    fishId_ = other.fishId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerLock Clone() {
    return new CMD_S_PlayerLock(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///玩家id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 2;
  private int fishId_;
  /// <summary>
  ///锁定鱼ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishId {
    get { return fishId_; }
    set {
      fishId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_PlayerLock);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_PlayerLock other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (FishId != other.FishId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (FishId != 0) hash ^= FishId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (FishId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_PlayerLock other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.FishId != 0) {
      FishId = other.FishId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打中李逵
/// </summary>
public sealed partial class CMD_S_ShootLK : pb::IMessage<CMD_S_ShootLK>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_ShootLK> _parser = new pb::MessageParser<CMD_S_ShootLK>(() => new CMD_S_ShootLK());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_ShootLK> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ShootLK() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ShootLK(CMD_S_ShootLK other) : this() {
    chairId_ = other.chairId_;
    id_ = other.id_;
    score_ = other.score_;
    multiple_ = other.multiple_;
    isDeaded_ = other.isDeaded_;
    jbpStage_ = other.jbpStage_;
    curLkScore_ = other.curLkScore_;
    curPlayerScore_ = other.curPlayerScore_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ShootLK Clone() {
    return new CMD_S_ShootLK(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 3;
  private int score_;
  /// <summary>
  ///李逵分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "multiple" field.</summary>
  public const int MultipleFieldNumber = 4;
  private int multiple_;
  /// <summary>
  ///李逵当前倍数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Multiple {
    get { return multiple_; }
    set {
      multiple_ = value;
    }
  }

  /// <summary>Field number for the "is_deaded" field.</summary>
  public const int IsDeadedFieldNumber = 5;
  private bool isDeaded_;
  /// <summary>
  ///是否死亡
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsDeaded {
    get { return isDeaded_; }
    set {
      isDeaded_ = value;
    }
  }

  /// <summary>Field number for the "jbp_stage" field.</summary>
  public const int JbpStageFieldNumber = 6;
  private int jbpStage_;
  /// <summary>
  ///当前等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int JbpStage {
    get { return jbpStage_; }
    set {
      jbpStage_ = value;
    }
  }

  /// <summary>Field number for the "cur_lk_score" field.</summary>
  public const int CurLkScoreFieldNumber = 7;
  private int curLkScore_;
  /// <summary>
  ///当前分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurLkScore {
    get { return curLkScore_; }
    set {
      curLkScore_ = value;
    }
  }

  /// <summary>Field number for the "cur_player_score" field.</summary>
  public const int CurPlayerScoreFieldNumber = 8;
  private long curPlayerScore_;
  /// <summary>
  ///玩家当前分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CurPlayerScore {
    get { return curPlayerScore_; }
    set {
      curPlayerScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_ShootLK);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_ShootLK other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (Id != other.Id) return false;
    if (Score != other.Score) return false;
    if (Multiple != other.Multiple) return false;
    if (IsDeaded != other.IsDeaded) return false;
    if (JbpStage != other.JbpStage) return false;
    if (CurLkScore != other.CurLkScore) return false;
    if (CurPlayerScore != other.CurPlayerScore) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Score != 0) hash ^= Score.GetHashCode();
    if (Multiple != 0) hash ^= Multiple.GetHashCode();
    if (IsDeaded != false) hash ^= IsDeaded.GetHashCode();
    if (JbpStage != 0) hash ^= JbpStage.GetHashCode();
    if (CurLkScore != 0) hash ^= CurLkScore.GetHashCode();
    if (CurPlayerScore != 0L) hash ^= CurPlayerScore.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (Score != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Score);
    }
    if (Multiple != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Multiple);
    }
    if (IsDeaded != false) {
      output.WriteRawTag(40);
      output.WriteBool(IsDeaded);
    }
    if (JbpStage != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(JbpStage);
    }
    if (CurLkScore != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(CurLkScore);
    }
    if (CurPlayerScore != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(CurPlayerScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (Score != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Score);
    }
    if (Multiple != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Multiple);
    }
    if (IsDeaded != false) {
      output.WriteRawTag(40);
      output.WriteBool(IsDeaded);
    }
    if (JbpStage != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(JbpStage);
    }
    if (CurLkScore != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(CurLkScore);
    }
    if (CurPlayerScore != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(CurPlayerScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    if (Multiple != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
    }
    if (IsDeaded != false) {
      size += 1 + 1;
    }
    if (JbpStage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(JbpStage);
    }
    if (CurLkScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurLkScore);
    }
    if (CurPlayerScore != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurPlayerScore);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_ShootLK other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    if (other.Multiple != 0) {
      Multiple = other.Multiple;
    }
    if (other.IsDeaded != false) {
      IsDeaded = other.IsDeaded;
    }
    if (other.JbpStage != 0) {
      JbpStage = other.JbpStage;
    }
    if (other.CurLkScore != 0) {
      CurLkScore = other.CurLkScore;
    }
    if (other.CurPlayerScore != 0L) {
      CurPlayerScore = other.CurPlayerScore;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          Score = input.ReadInt32();
          break;
        }
        case 32: {
          Multiple = input.ReadInt32();
          break;
        }
        case 40: {
          IsDeaded = input.ReadBool();
          break;
        }
        case 48: {
          JbpStage = input.ReadInt32();
          break;
        }
        case 56: {
          CurLkScore = input.ReadInt32();
          break;
        }
        case 64: {
          CurPlayerScore = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          Score = input.ReadInt32();
          break;
        }
        case 32: {
          Multiple = input.ReadInt32();
          break;
        }
        case 40: {
          IsDeaded = input.ReadBool();
          break;
        }
        case 48: {
          JbpStage = input.ReadInt32();
          break;
        }
        case 56: {
          CurLkScore = input.ReadInt32();
          break;
        }
        case 64: {
          CurPlayerScore = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死局部炸弹
/// </summary>
public sealed partial class CMD_S_JuBuZhaDan : pb::IMessage<CMD_S_JuBuZhaDan>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_JuBuZhaDan> _parser = new pb::MessageParser<CMD_S_JuBuZhaDan>(() => new CMD_S_JuBuZhaDan());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_JuBuZhaDan> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_JuBuZhaDan() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_JuBuZhaDan(CMD_S_JuBuZhaDan other) : this() {
    chairId_ = other.chairId_;
    fishId_ = other.fishId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_JuBuZhaDan Clone() {
    return new CMD_S_JuBuZhaDan(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 2;
  private int fishId_;
  /// <summary>
  ///特殊鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishId {
    get { return fishId_; }
    set {
      fishId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_JuBuZhaDan);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_JuBuZhaDan other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (FishId != other.FishId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (FishId != 0) hash ^= FishId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (FishId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_JuBuZhaDan other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.FishId != 0) {
      FishId = other.FishId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死一网打尽
/// </summary>
public sealed partial class CMD_S_YiWangDaJin : pb::IMessage<CMD_S_YiWangDaJin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_YiWangDaJin> _parser = new pb::MessageParser<CMD_S_YiWangDaJin>(() => new CMD_S_YiWangDaJin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_YiWangDaJin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_YiWangDaJin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_YiWangDaJin(CMD_S_YiWangDaJin other) : this() {
    chairId_ = other.chairId_;
    bulletId_ = other.bulletId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_YiWangDaJin Clone() {
    return new CMD_S_YiWangDaJin(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "bullet_id" field.</summary>
  public const int BulletIdFieldNumber = 2;
  private int bulletId_;
  /// <summary>
  ///子弹id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BulletId {
    get { return bulletId_; }
    set {
      bulletId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_YiWangDaJin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_YiWangDaJin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (BulletId != other.BulletId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (BulletId != 0) hash ^= BulletId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (BulletId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BulletId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (BulletId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BulletId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (BulletId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_YiWangDaJin other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.BulletId != 0) {
      BulletId = other.BulletId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          BulletId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          BulletId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死同类炸弹
/// </summary>
public sealed partial class CMD_S_TongLeiZhaDan : pb::IMessage<CMD_S_TongLeiZhaDan>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_TongLeiZhaDan> _parser = new pb::MessageParser<CMD_S_TongLeiZhaDan>(() => new CMD_S_TongLeiZhaDan());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_TongLeiZhaDan> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_TongLeiZhaDan() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_TongLeiZhaDan(CMD_S_TongLeiZhaDan other) : this() {
    chairId_ = other.chairId_;
    fishId_ = other.fishId_;
    kind_ = other.kind_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_TongLeiZhaDan Clone() {
    return new CMD_S_TongLeiZhaDan(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 2;
  private int fishId_;
  /// <summary>
  ///特殊鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishId {
    get { return fishId_; }
    set {
      fishId_ = value;
    }
  }

  /// <summary>Field number for the "kind" field.</summary>
  public const int KindFieldNumber = 3;
  private int kind_;
  /// <summary>
  ///鱼类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Kind {
    get { return kind_; }
    set {
      kind_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_TongLeiZhaDan);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_TongLeiZhaDan other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (FishId != other.FishId) return false;
    if (Kind != other.Kind) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (FishId != 0) hash ^= FishId.GetHashCode();
    if (Kind != 0) hash ^= Kind.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (Kind != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Kind);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (Kind != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Kind);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (FishId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
    }
    if (Kind != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kind);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_TongLeiZhaDan other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.FishId != 0) {
      FishId = other.FishId;
    }
    if (other.Kind != 0) {
      Kind = other.Kind;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
        case 24: {
          Kind = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
        case 24: {
          Kind = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class LoadFish : pb::IMessage<LoadFish>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LoadFish> _parser = new pb::MessageParser<LoadFish>(() => new LoadFish());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoadFish> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadFish() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadFish(LoadFish other) : this() {
    kind_ = other.kind_;
    id_ = other.id_;
    createTime_ = other.createTime_;
    continueTime_ = other.continueTime_;
    road_ = other.road_;
    groupId_ = other.groupId_;
    groupNo_ = other.groupNo_;
    nowTime_ = other.nowTime_;
    mul_ = other.mul_;
    stage_ = other.stage_;
    isAced_ = other.isAced_;
    jbpStage_ = other.jbpStage_;
    lkMul_ = other.lkMul_;
    lkScore_ = other.lkScore_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadFish Clone() {
    return new LoadFish(this);
  }

  /// <summary>Field number for the "kind" field.</summary>
  public const int KindFieldNumber = 1;
  private int kind_;
  /// <summary>
  ///鱼的种类
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Kind {
    get { return kind_; }
    set {
      kind_ = value;
    }
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 2;
  private int id_;
  /// <summary>
  ///鱼的id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "create_time" field.</summary>
  public const int CreateTimeFieldNumber = 3;
  private int createTime_;
  /// <summary>
  ///创建时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CreateTime {
    get { return createTime_; }
    set {
      createTime_ = value;
    }
  }

  /// <summary>Field number for the "continue_time" field.</summary>
  public const int ContinueTimeFieldNumber = 4;
  private int continueTime_;
  /// <summary>
  ///持续时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ContinueTime {
    get { return continueTime_; }
    set {
      continueTime_ = value;
    }
  }

  /// <summary>Field number for the "road" field.</summary>
  public const int RoadFieldNumber = 5;
  private int road_;
  /// <summary>
  ///鱼线
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Road {
    get { return road_; }
    set {
      road_ = value;
    }
  }

  /// <summary>Field number for the "group_id" field.</summary>
  public const int GroupIdFieldNumber = 6;
  private int groupId_;
  /// <summary>
  ///鱼阵id(4个 1普通蜻蜓（14个鱼），2普通蝴蝶（5个鱼），3雷电蜻蜓（雷电在8），4雷电蝴蝶（雷电在1）)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GroupId {
    get { return groupId_; }
    set {
      groupId_ = value;
    }
  }

  /// <summary>Field number for the "group_no" field.</summary>
  public const int GroupNoFieldNumber = 7;
  private int groupNo_;
  /// <summary>
  ///鱼阵鱼编号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GroupNo {
    get { return groupNo_; }
    set {
      groupNo_ = value;
    }
  }

  /// <summary>Field number for the "now_time" field.</summary>
  public const int NowTimeFieldNumber = 8;
  private int nowTime_;
  /// <summary>
  ///当前已过时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NowTime {
    get { return nowTime_; }
    set {
      nowTime_ = value;
    }
  }

  /// <summary>Field number for the "mul" field.</summary>
  public const int MulFieldNumber = 9;
  private int mul_;
  /// <summary>
  ///倍数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Mul {
    get { return mul_; }
    set {
      mul_ = value;
    }
  }

  /// <summary>Field number for the "stage" field.</summary>
  public const int StageFieldNumber = 10;
  private int stage_;
  /// <summary>
  ///河豚阶段1-4
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Stage {
    get { return stage_; }
    set {
      stage_ = value;
    }
  }

  /// <summary>Field number for the "is_aced" field.</summary>
  public const int IsAcedFieldNumber = 11;
  private int isAced_;
  /// <summary>
  ///是否是一网打尽
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsAced {
    get { return isAced_; }
    set {
      isAced_ = value;
    }
  }

  /// <summary>Field number for the "jbp_stage" field.</summary>
  public const int JbpStageFieldNumber = 12;
  private int jbpStage_;
  /// <summary>
  ///聚宝盆阶段1-4
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int JbpStage {
    get { return jbpStage_; }
    set {
      jbpStage_ = value;
    }
  }

  /// <summary>Field number for the "lk_mul" field.</summary>
  public const int LkMulFieldNumber = 13;
  private int lkMul_;
  /// <summary>
  ///李逵倍数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LkMul {
    get { return lkMul_; }
    set {
      lkMul_ = value;
    }
  }

  /// <summary>Field number for the "lk_score" field.</summary>
  public const int LkScoreFieldNumber = 14;
  private int lkScore_;
  /// <summary>
  ///李逵分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LkScore {
    get { return lkScore_; }
    set {
      lkScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoadFish);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoadFish other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Kind != other.Kind) return false;
    if (Id != other.Id) return false;
    if (CreateTime != other.CreateTime) return false;
    if (ContinueTime != other.ContinueTime) return false;
    if (Road != other.Road) return false;
    if (GroupId != other.GroupId) return false;
    if (GroupNo != other.GroupNo) return false;
    if (NowTime != other.NowTime) return false;
    if (Mul != other.Mul) return false;
    if (Stage != other.Stage) return false;
    if (IsAced != other.IsAced) return false;
    if (JbpStage != other.JbpStage) return false;
    if (LkMul != other.LkMul) return false;
    if (LkScore != other.LkScore) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Kind != 0) hash ^= Kind.GetHashCode();
    if (Id != 0) hash ^= Id.GetHashCode();
    if (CreateTime != 0) hash ^= CreateTime.GetHashCode();
    if (ContinueTime != 0) hash ^= ContinueTime.GetHashCode();
    if (Road != 0) hash ^= Road.GetHashCode();
    if (GroupId != 0) hash ^= GroupId.GetHashCode();
    if (GroupNo != 0) hash ^= GroupNo.GetHashCode();
    if (NowTime != 0) hash ^= NowTime.GetHashCode();
    if (Mul != 0) hash ^= Mul.GetHashCode();
    if (Stage != 0) hash ^= Stage.GetHashCode();
    if (IsAced != 0) hash ^= IsAced.GetHashCode();
    if (JbpStage != 0) hash ^= JbpStage.GetHashCode();
    if (LkMul != 0) hash ^= LkMul.GetHashCode();
    if (LkScore != 0) hash ^= LkScore.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Kind != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Kind);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (CreateTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CreateTime);
    }
    if (ContinueTime != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ContinueTime);
    }
    if (Road != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Road);
    }
    if (GroupId != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(GroupId);
    }
    if (GroupNo != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(GroupNo);
    }
    if (NowTime != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(NowTime);
    }
    if (Mul != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Mul);
    }
    if (Stage != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(Stage);
    }
    if (IsAced != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(IsAced);
    }
    if (JbpStage != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(JbpStage);
    }
    if (LkMul != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(LkMul);
    }
    if (LkScore != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(LkScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Kind != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Kind);
    }
    if (Id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Id);
    }
    if (CreateTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CreateTime);
    }
    if (ContinueTime != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ContinueTime);
    }
    if (Road != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Road);
    }
    if (GroupId != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(GroupId);
    }
    if (GroupNo != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(GroupNo);
    }
    if (NowTime != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(NowTime);
    }
    if (Mul != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Mul);
    }
    if (Stage != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(Stage);
    }
    if (IsAced != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(IsAced);
    }
    if (JbpStage != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(JbpStage);
    }
    if (LkMul != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(LkMul);
    }
    if (LkScore != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(LkScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Kind != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kind);
    }
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (CreateTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreateTime);
    }
    if (ContinueTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContinueTime);
    }
    if (Road != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Road);
    }
    if (GroupId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
    }
    if (GroupNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupNo);
    }
    if (NowTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NowTime);
    }
    if (Mul != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mul);
    }
    if (Stage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
    }
    if (IsAced != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsAced);
    }
    if (JbpStage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(JbpStage);
    }
    if (LkMul != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LkMul);
    }
    if (LkScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LkScore);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoadFish other) {
    if (other == null) {
      return;
    }
    if (other.Kind != 0) {
      Kind = other.Kind;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.CreateTime != 0) {
      CreateTime = other.CreateTime;
    }
    if (other.ContinueTime != 0) {
      ContinueTime = other.ContinueTime;
    }
    if (other.Road != 0) {
      Road = other.Road;
    }
    if (other.GroupId != 0) {
      GroupId = other.GroupId;
    }
    if (other.GroupNo != 0) {
      GroupNo = other.GroupNo;
    }
    if (other.NowTime != 0) {
      NowTime = other.NowTime;
    }
    if (other.Mul != 0) {
      Mul = other.Mul;
    }
    if (other.Stage != 0) {
      Stage = other.Stage;
    }
    if (other.IsAced != 0) {
      IsAced = other.IsAced;
    }
    if (other.JbpStage != 0) {
      JbpStage = other.JbpStage;
    }
    if (other.LkMul != 0) {
      LkMul = other.LkMul;
    }
    if (other.LkScore != 0) {
      LkScore = other.LkScore;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Kind = input.ReadInt32();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          CreateTime = input.ReadInt32();
          break;
        }
        case 32: {
          ContinueTime = input.ReadInt32();
          break;
        }
        case 40: {
          Road = input.ReadInt32();
          break;
        }
        case 48: {
          GroupId = input.ReadInt32();
          break;
        }
        case 56: {
          GroupNo = input.ReadInt32();
          break;
        }
        case 64: {
          NowTime = input.ReadInt32();
          break;
        }
        case 72: {
          Mul = input.ReadInt32();
          break;
        }
        case 80: {
          Stage = input.ReadInt32();
          break;
        }
        case 88: {
          IsAced = input.ReadInt32();
          break;
        }
        case 96: {
          JbpStage = input.ReadInt32();
          break;
        }
        case 104: {
          LkMul = input.ReadInt32();
          break;
        }
        case 112: {
          LkScore = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Kind = input.ReadInt32();
          break;
        }
        case 16: {
          Id = input.ReadInt32();
          break;
        }
        case 24: {
          CreateTime = input.ReadInt32();
          break;
        }
        case 32: {
          ContinueTime = input.ReadInt32();
          break;
        }
        case 40: {
          Road = input.ReadInt32();
          break;
        }
        case 48: {
          GroupId = input.ReadInt32();
          break;
        }
        case 56: {
          GroupNo = input.ReadInt32();
          break;
        }
        case 64: {
          NowTime = input.ReadInt32();
          break;
        }
        case 72: {
          Mul = input.ReadInt32();
          break;
        }
        case 80: {
          Stage = input.ReadInt32();
          break;
        }
        case 88: {
          IsAced = input.ReadInt32();
          break;
        }
        case 96: {
          JbpStage = input.ReadInt32();
          break;
        }
        case 104: {
          LkMul = input.ReadInt32();
          break;
        }
        case 112: {
          LkScore = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死鱼王
/// </summary>
public sealed partial class CMD_S_YuWang : pb::IMessage<CMD_S_YuWang>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_YuWang> _parser = new pb::MessageParser<CMD_S_YuWang>(() => new CMD_S_YuWang());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_YuWang> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_YuWang() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_YuWang(CMD_S_YuWang other) : this() {
    chairId_ = other.chairId_;
    kind_ = other.kind_;
    yuWangId_ = other.yuWangId_;
    fishId_ = other.fishId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_YuWang Clone() {
    return new CMD_S_YuWang(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "kind" field.</summary>
  public const int KindFieldNumber = 2;
  private int kind_;
  /// <summary>
  ///鱼类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Kind {
    get { return kind_; }
    set {
      kind_ = value;
    }
  }

  /// <summary>Field number for the "yu_wang_id" field.</summary>
  public const int YuWangIdFieldNumber = 3;
  private int yuWangId_;
  /// <summary>
  ///鱼王id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int YuWangId {
    get { return yuWangId_; }
    set {
      yuWangId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 4;
  private static readonly pb::FieldCodec<global::LoadFish> _repeated_fishId_codec
      = pb::FieldCodec.ForMessage(34, global::LoadFish.Parser);
  private readonly pbc::RepeatedField<global::LoadFish> fishId_ = new pbc::RepeatedField<global::LoadFish>();
  /// <summary>
  ///鱼王鱼潮生成的鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LoadFish> FishId {
    get { return fishId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_YuWang);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_YuWang other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (Kind != other.Kind) return false;
    if (YuWangId != other.YuWangId) return false;
    if(!fishId_.Equals(other.fishId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (Kind != 0) hash ^= Kind.GetHashCode();
    if (YuWangId != 0) hash ^= YuWangId.GetHashCode();
    hash ^= fishId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Kind != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Kind);
    }
    if (YuWangId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(YuWangId);
    }
    fishId_.WriteTo(output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Kind != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Kind);
    }
    if (YuWangId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(YuWangId);
    }
    fishId_.WriteTo(ref output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (Kind != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kind);
    }
    if (YuWangId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(YuWangId);
    }
    size += fishId_.CalculateSize(_repeated_fishId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_YuWang other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.Kind != 0) {
      Kind = other.Kind;
    }
    if (other.YuWangId != 0) {
      YuWangId = other.YuWangId;
    }
    fishId_.Add(other.fishId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Kind = input.ReadInt32();
          break;
        }
        case 24: {
          YuWangId = input.ReadInt32();
          break;
        }
        case 34: {
          fishId_.AddEntriesFrom(input, _repeated_fishId_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Kind = input.ReadInt32();
          break;
        }
        case 24: {
          YuWangId = input.ReadInt32();
          break;
        }
        case 34: {
          fishId_.AddEntriesFrom(ref input, _repeated_fishId_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死大四喜
/// </summary>
public sealed partial class CMD_S_DaSiXi : pb::IMessage<CMD_S_DaSiXi>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_DaSiXi> _parser = new pb::MessageParser<CMD_S_DaSiXi>(() => new CMD_S_DaSiXi());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_DaSiXi> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_DaSiXi() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_DaSiXi(CMD_S_DaSiXi other) : this() {
    id_ = other.id_;
    chairId_ = other.chairId_;
    score_ = other.score_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_DaSiXi Clone() {
    return new CMD_S_DaSiXi(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 2;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 3;
  private int score_;
  /// <summary>
  ///得分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_DaSiXi);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_DaSiXi other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (ChairId != other.ChairId) return false;
    if (Score != other.Score) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (Score != 0) hash ^= Score.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (ChairId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChairId);
    }
    if (Score != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Score);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (ChairId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChairId);
    }
    if (Score != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Score);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_DaSiXi other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          ChairId = input.ReadInt32();
          break;
        }
        case 24: {
          Score = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          ChairId = input.ReadInt32();
          break;
        }
        case 24: {
          Score = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死大奖章鱼
/// </summary>
public sealed partial class CMD_S_DaJiangZhangYu : pb::IMessage<CMD_S_DaJiangZhangYu>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_DaJiangZhangYu> _parser = new pb::MessageParser<CMD_S_DaJiangZhangYu>(() => new CMD_S_DaJiangZhangYu());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_DaJiangZhangYu> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_DaJiangZhangYu() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_DaJiangZhangYu(CMD_S_DaJiangZhangYu other) : this() {
    id_ = other.id_;
    chairId_ = other.chairId_;
    odd1_ = other.odd1_;
    odd2_ = other.odd2_;
    odd3_ = other.odd3_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_DaJiangZhangYu Clone() {
    return new CMD_S_DaJiangZhangYu(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 2;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "odd1" field.</summary>
  public const int Odd1FieldNumber = 3;
  private int odd1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Odd1 {
    get { return odd1_; }
    set {
      odd1_ = value;
    }
  }

  /// <summary>Field number for the "odd2" field.</summary>
  public const int Odd2FieldNumber = 4;
  private int odd2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Odd2 {
    get { return odd2_; }
    set {
      odd2_ = value;
    }
  }

  /// <summary>Field number for the "odd3" field.</summary>
  public const int Odd3FieldNumber = 5;
  private int odd3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Odd3 {
    get { return odd3_; }
    set {
      odd3_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_DaJiangZhangYu);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_DaJiangZhangYu other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (ChairId != other.ChairId) return false;
    if (Odd1 != other.Odd1) return false;
    if (Odd2 != other.Odd2) return false;
    if (Odd3 != other.Odd3) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (Odd1 != 0) hash ^= Odd1.GetHashCode();
    if (Odd2 != 0) hash ^= Odd2.GetHashCode();
    if (Odd3 != 0) hash ^= Odd3.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (ChairId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChairId);
    }
    if (Odd1 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Odd1);
    }
    if (Odd2 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Odd2);
    }
    if (Odd3 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Odd3);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (ChairId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChairId);
    }
    if (Odd1 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Odd1);
    }
    if (Odd2 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Odd2);
    }
    if (Odd3 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Odd3);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (Odd1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Odd1);
    }
    if (Odd2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Odd2);
    }
    if (Odd3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Odd3);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_DaJiangZhangYu other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.Odd1 != 0) {
      Odd1 = other.Odd1;
    }
    if (other.Odd2 != 0) {
      Odd2 = other.Odd2;
    }
    if (other.Odd3 != 0) {
      Odd3 = other.Odd3;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          ChairId = input.ReadInt32();
          break;
        }
        case 24: {
          Odd1 = input.ReadInt32();
          break;
        }
        case 32: {
          Odd2 = input.ReadInt32();
          break;
        }
        case 40: {
          Odd3 = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          ChairId = input.ReadInt32();
          break;
        }
        case 24: {
          Odd1 = input.ReadInt32();
          break;
        }
        case 32: {
          Odd2 = input.ReadInt32();
          break;
        }
        case 40: {
          Odd3 = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死忠义堂
/// </summary>
public sealed partial class CMD_S_ZhongYiTang : pb::IMessage<CMD_S_ZhongYiTang>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_ZhongYiTang> _parser = new pb::MessageParser<CMD_S_ZhongYiTang>(() => new CMD_S_ZhongYiTang());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_ZhongYiTang> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ZhongYiTang() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ZhongYiTang(CMD_S_ZhongYiTang other) : this() {
    chairId_ = other.chairId_;
    addTime_ = other.addTime_;
    addMul_ = other.addMul_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ZhongYiTang Clone() {
    return new CMD_S_ZhongYiTang(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "add_time" field.</summary>
  public const int AddTimeFieldNumber = 2;
  private int addTime_;
  /// <summary>
  ///持续时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AddTime {
    get { return addTime_; }
    set {
      addTime_ = value;
    }
  }

  /// <summary>Field number for the "add_mul" field.</summary>
  public const int AddMulFieldNumber = 3;
  private int addMul_;
  /// <summary>
  ///增加的倍数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AddMul {
    get { return addMul_; }
    set {
      addMul_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_ZhongYiTang);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_ZhongYiTang other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (AddTime != other.AddTime) return false;
    if (AddMul != other.AddMul) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (AddTime != 0) hash ^= AddTime.GetHashCode();
    if (AddMul != 0) hash ^= AddMul.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (AddTime != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AddTime);
    }
    if (AddMul != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AddMul);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (AddTime != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AddTime);
    }
    if (AddMul != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AddMul);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (AddTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddTime);
    }
    if (AddMul != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddMul);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_ZhongYiTang other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.AddTime != 0) {
      AddTime = other.AddTime;
    }
    if (other.AddMul != 0) {
      AddMul = other.AddMul;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          AddTime = input.ReadInt32();
          break;
        }
        case 24: {
          AddMul = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          AddTime = input.ReadInt32();
          break;
        }
        case 24: {
          AddMul = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打死水浒传
/// </summary>
public sealed partial class CMD_S_ShuiHuZhuan : pb::IMessage<CMD_S_ShuiHuZhuan>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_ShuiHuZhuan> _parser = new pb::MessageParser<CMD_S_ShuiHuZhuan>(() => new CMD_S_ShuiHuZhuan());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_ShuiHuZhuan> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ShuiHuZhuan() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ShuiHuZhuan(CMD_S_ShuiHuZhuan other) : this() {
    chairId_ = other.chairId_;
    fishId_ = other.fishId_.Clone();
    fishScore_ = other.fishScore_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ShuiHuZhuan Clone() {
    return new CMD_S_ShuiHuZhuan(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_fishId_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> fishId_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///特殊鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> FishId {
    get { return fishId_; }
  }

  /// <summary>Field number for the "fish_score" field.</summary>
  public const int FishScoreFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_fishScore_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> fishScore_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///得分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> FishScore {
    get { return fishScore_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_ShuiHuZhuan);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_ShuiHuZhuan other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if(!fishId_.Equals(other.fishId_)) return false;
    if(!fishScore_.Equals(other.fishScore_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    hash ^= fishId_.GetHashCode();
    hash ^= fishScore_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    fishId_.WriteTo(output, _repeated_fishId_codec);
    fishScore_.WriteTo(output, _repeated_fishScore_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    fishId_.WriteTo(ref output, _repeated_fishId_codec);
    fishScore_.WriteTo(ref output, _repeated_fishScore_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    size += fishId_.CalculateSize(_repeated_fishId_codec);
    size += fishScore_.CalculateSize(_repeated_fishScore_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_ShuiHuZhuan other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    fishId_.Add(other.fishId_);
    fishScore_.Add(other.fishScore_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          fishId_.AddEntriesFrom(input, _repeated_fishId_codec);
          break;
        }
        case 26:
        case 24: {
          fishScore_.AddEntriesFrom(input, _repeated_fishScore_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          fishId_.AddEntriesFrom(ref input, _repeated_fishId_codec);
          break;
        }
        case 26:
        case 24: {
          fishScore_.AddEntriesFrom(ref input, _repeated_fishScore_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///切换炮台
/// </summary>
public sealed partial class CMD_S_ChangeBulletLevel : pb::IMessage<CMD_S_ChangeBulletLevel>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_ChangeBulletLevel> _parser = new pb::MessageParser<CMD_S_ChangeBulletLevel>(() => new CMD_S_ChangeBulletLevel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_ChangeBulletLevel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ChangeBulletLevel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ChangeBulletLevel(CMD_S_ChangeBulletLevel other) : this() {
    chairId_ = other.chairId_;
    gunType_ = other.gunType_;
    gunLevel_ = other.gunLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_ChangeBulletLevel Clone() {
    return new CMD_S_ChangeBulletLevel(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "gun_type" field.</summary>
  public const int GunTypeFieldNumber = 2;
  private int gunType_;
  /// <summary>
  ///炮台类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GunType {
    get { return gunType_; }
    set {
      gunType_ = value;
    }
  }

  /// <summary>Field number for the "gun_level" field.</summary>
  public const int GunLevelFieldNumber = 3;
  private int gunLevel_;
  /// <summary>
  ///炮台等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GunLevel {
    get { return gunLevel_; }
    set {
      gunLevel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_ChangeBulletLevel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_ChangeBulletLevel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (GunType != other.GunType) return false;
    if (GunLevel != other.GunLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (GunType != 0) hash ^= GunType.GetHashCode();
    if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (GunType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GunType);
    }
    if (GunLevel != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GunLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (GunType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GunType);
    }
    if (GunLevel != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GunLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (GunType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
    }
    if (GunLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_ChangeBulletLevel other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.GunType != 0) {
      GunType = other.GunType;
    }
    if (other.GunLevel != 0) {
      GunLevel = other.GunLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          GunType = input.ReadInt32();
          break;
        }
        case 24: {
          GunLevel = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          GunType = input.ReadInt32();
          break;
        }
        case 24: {
          GunLevel = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///配置信息
/// </summary>
public sealed partial class CMD_S_CONFIG : pb::IMessage<CMD_S_CONFIG>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_CONFIG> _parser = new pb::MessageParser<CMD_S_CONFIG>(() => new CMD_S_CONFIG());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_CONFIG> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_CONFIG() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_CONFIG(CMD_S_CONFIG other) : this() {
    bulletScore_ = other.bulletScore_.Clone();
    backgroundPictureId_ = other.backgroundPictureId_;
    playerLockFishId_ = other.playerLockFishId_.Clone();
    playerCurScore_ = other.playerCurScore_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_CONFIG Clone() {
    return new CMD_S_CONFIG(this);
  }

  /// <summary>Field number for the "bullet_score" field.</summary>
  public const int BulletScoreFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_bulletScore_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> bulletScore_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///子弹分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> BulletScore {
    get { return bulletScore_; }
  }

  /// <summary>Field number for the "background_picture_id" field.</summary>
  public const int BackgroundPictureIdFieldNumber = 2;
  private int backgroundPictureId_;
  /// <summary>
  ///背景图id(0-17)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BackgroundPictureId {
    get { return backgroundPictureId_; }
    set {
      backgroundPictureId_ = value;
    }
  }

  /// <summary>Field number for the "player_lock_fish_id" field.</summary>
  public const int PlayerLockFishIdFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_playerLockFishId_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> playerLockFishId_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///玩家是否锁定
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> PlayerLockFishId {
    get { return playerLockFishId_; }
  }

  /// <summary>Field number for the "player_cur_score" field.</summary>
  public const int PlayerCurScoreFieldNumber = 4;
  private static readonly pb::FieldCodec<long> _repeated_playerCurScore_codec
      = pb::FieldCodec.ForInt64(34);
  private readonly pbc::RepeatedField<long> playerCurScore_ = new pbc::RepeatedField<long>();
  /// <summary>
  ///玩家当前分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<long> PlayerCurScore {
    get { return playerCurScore_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_CONFIG);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_CONFIG other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!bulletScore_.Equals(other.bulletScore_)) return false;
    if (BackgroundPictureId != other.BackgroundPictureId) return false;
    if(!playerLockFishId_.Equals(other.playerLockFishId_)) return false;
    if(!playerCurScore_.Equals(other.playerCurScore_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= bulletScore_.GetHashCode();
    if (BackgroundPictureId != 0) hash ^= BackgroundPictureId.GetHashCode();
    hash ^= playerLockFishId_.GetHashCode();
    hash ^= playerCurScore_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    bulletScore_.WriteTo(output, _repeated_bulletScore_codec);
    if (BackgroundPictureId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BackgroundPictureId);
    }
    playerLockFishId_.WriteTo(output, _repeated_playerLockFishId_codec);
    playerCurScore_.WriteTo(output, _repeated_playerCurScore_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    bulletScore_.WriteTo(ref output, _repeated_bulletScore_codec);
    if (BackgroundPictureId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BackgroundPictureId);
    }
    playerLockFishId_.WriteTo(ref output, _repeated_playerLockFishId_codec);
    playerCurScore_.WriteTo(ref output, _repeated_playerCurScore_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += bulletScore_.CalculateSize(_repeated_bulletScore_codec);
    if (BackgroundPictureId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BackgroundPictureId);
    }
    size += playerLockFishId_.CalculateSize(_repeated_playerLockFishId_codec);
    size += playerCurScore_.CalculateSize(_repeated_playerCurScore_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_CONFIG other) {
    if (other == null) {
      return;
    }
    bulletScore_.Add(other.bulletScore_);
    if (other.BackgroundPictureId != 0) {
      BackgroundPictureId = other.BackgroundPictureId;
    }
    playerLockFishId_.Add(other.playerLockFishId_);
    playerCurScore_.Add(other.playerCurScore_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          bulletScore_.AddEntriesFrom(input, _repeated_bulletScore_codec);
          break;
        }
        case 16: {
          BackgroundPictureId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          playerLockFishId_.AddEntriesFrom(input, _repeated_playerLockFishId_codec);
          break;
        }
        case 34:
        case 32: {
          playerCurScore_.AddEntriesFrom(input, _repeated_playerCurScore_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          bulletScore_.AddEntriesFrom(ref input, _repeated_bulletScore_codec);
          break;
        }
        case 16: {
          BackgroundPictureId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          playerLockFishId_.AddEntriesFrom(ref input, _repeated_playerLockFishId_codec);
          break;
        }
        case 34:
        case 32: {
          playerCurScore_.AddEntriesFrom(ref input, _repeated_playerCurScore_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_S_PlayerGunLevel : pb::IMessage<CMD_S_PlayerGunLevel>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_PlayerGunLevel> _parser = new pb::MessageParser<CMD_S_PlayerGunLevel>(() => new CMD_S_PlayerGunLevel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_PlayerGunLevel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerGunLevel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerGunLevel(CMD_S_PlayerGunLevel other) : this() {
    gunLevel_ = other.gunLevel_.Clone();
    gunType_ = other.gunType_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerGunLevel Clone() {
    return new CMD_S_PlayerGunLevel(this);
  }

  /// <summary>Field number for the "gun_level" field.</summary>
  public const int GunLevelFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_gunLevel_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> gunLevel_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> GunLevel {
    get { return gunLevel_; }
  }

  /// <summary>Field number for the "gun_type" field.</summary>
  public const int GunTypeFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_gunType_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> gunType_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> GunType {
    get { return gunType_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_PlayerGunLevel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_PlayerGunLevel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!gunLevel_.Equals(other.gunLevel_)) return false;
    if(!gunType_.Equals(other.gunType_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= gunLevel_.GetHashCode();
    hash ^= gunType_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    gunLevel_.WriteTo(output, _repeated_gunLevel_codec);
    gunType_.WriteTo(output, _repeated_gunType_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    gunLevel_.WriteTo(ref output, _repeated_gunLevel_codec);
    gunType_.WriteTo(ref output, _repeated_gunType_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += gunLevel_.CalculateSize(_repeated_gunLevel_codec);
    size += gunType_.CalculateSize(_repeated_gunType_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_PlayerGunLevel other) {
    if (other == null) {
      return;
    }
    gunLevel_.Add(other.gunLevel_);
    gunType_.Add(other.gunType_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          gunLevel_.AddEntriesFrom(input, _repeated_gunLevel_codec);
          break;
        }
        case 18:
        case 16: {
          gunType_.AddEntriesFrom(input, _repeated_gunType_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          gunLevel_.AddEntriesFrom(ref input, _repeated_gunLevel_codec);
          break;
        }
        case 18:
        case 16: {
          gunType_.AddEntriesFrom(ref input, _repeated_gunType_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///增加鱼
/// </summary>
public sealed partial class CMD_S_AddFish : pb::IMessage<CMD_S_AddFish>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_AddFish> _parser = new pb::MessageParser<CMD_S_AddFish>(() => new CMD_S_AddFish());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_AddFish> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_AddFish() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_AddFish(CMD_S_AddFish other) : this() {
    loadFish_ = other.loadFish_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_AddFish Clone() {
    return new CMD_S_AddFish(this);
  }

  /// <summary>Field number for the "load_fish" field.</summary>
  public const int LoadFishFieldNumber = 1;
  private static readonly pb::FieldCodec<global::LoadFish> _repeated_loadFish_codec
      = pb::FieldCodec.ForMessage(10, global::LoadFish.Parser);
  private readonly pbc::RepeatedField<global::LoadFish> loadFish_ = new pbc::RepeatedField<global::LoadFish>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LoadFish> LoadFish {
    get { return loadFish_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_AddFish);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_AddFish other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!loadFish_.Equals(other.loadFish_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= loadFish_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    loadFish_.WriteTo(output, _repeated_loadFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    loadFish_.WriteTo(ref output, _repeated_loadFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += loadFish_.CalculateSize(_repeated_loadFish_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_AddFish other) {
    if (other == null) {
      return;
    }
    loadFish_.Add(other.loadFish_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          loadFish_.AddEntriesFrom(input, _repeated_loadFish_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          loadFish_.AddEntriesFrom(ref input, _repeated_loadFish_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家进入
/// </summary>
public sealed partial class CMD_S_PlayerEnter : pb::IMessage<CMD_S_PlayerEnter>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_PlayerEnter> _parser = new pb::MessageParser<CMD_S_PlayerEnter>(() => new CMD_S_PlayerEnter());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_PlayerEnter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerEnter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerEnter(CMD_S_PlayerEnter other) : this() {
    loadFish_ = other.loadFish_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerEnter Clone() {
    return new CMD_S_PlayerEnter(this);
  }

  /// <summary>Field number for the "load_fish" field.</summary>
  public const int LoadFishFieldNumber = 1;
  private static readonly pb::FieldCodec<global::LoadFish> _repeated_loadFish_codec
      = pb::FieldCodec.ForMessage(10, global::LoadFish.Parser);
  private readonly pbc::RepeatedField<global::LoadFish> loadFish_ = new pbc::RepeatedField<global::LoadFish>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LoadFish> LoadFish {
    get { return loadFish_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_PlayerEnter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_PlayerEnter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!loadFish_.Equals(other.loadFish_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= loadFish_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    loadFish_.WriteTo(output, _repeated_loadFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    loadFish_.WriteTo(ref output, _repeated_loadFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += loadFish_.CalculateSize(_repeated_loadFish_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_PlayerEnter other) {
    if (other == null) {
      return;
    }
    loadFish_.Add(other.loadFish_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          loadFish_.AddEntriesFrom(input, _repeated_loadFish_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          loadFish_.AddEntriesFrom(ref input, _repeated_loadFish_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家进入
/// </summary>
public sealed partial class CMD_S_PlayerYCEnter : pb::IMessage<CMD_S_PlayerYCEnter>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_PlayerYCEnter> _parser = new pb::MessageParser<CMD_S_PlayerYCEnter>(() => new CMD_S_PlayerYCEnter());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_PlayerYCEnter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerYCEnter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerYCEnter(CMD_S_PlayerYCEnter other) : this() {
    yuChaoId_ = other.yuChaoId_;
    loadFish_ = other.loadFish_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerYCEnter Clone() {
    return new CMD_S_PlayerYCEnter(this);
  }

  /// <summary>Field number for the "yu_chao_id" field.</summary>
  public const int YuChaoIdFieldNumber = 1;
  private int yuChaoId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int YuChaoId {
    get { return yuChaoId_; }
    set {
      yuChaoId_ = value;
    }
  }

  /// <summary>Field number for the "load_fish" field.</summary>
  public const int LoadFishFieldNumber = 2;
  private static readonly pb::FieldCodec<global::LoadFish> _repeated_loadFish_codec
      = pb::FieldCodec.ForMessage(18, global::LoadFish.Parser);
  private readonly pbc::RepeatedField<global::LoadFish> loadFish_ = new pbc::RepeatedField<global::LoadFish>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::LoadFish> LoadFish {
    get { return loadFish_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_PlayerYCEnter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_PlayerYCEnter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (YuChaoId != other.YuChaoId) return false;
    if(!loadFish_.Equals(other.loadFish_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (YuChaoId != 0) hash ^= YuChaoId.GetHashCode();
    hash ^= loadFish_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (YuChaoId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(YuChaoId);
    }
    loadFish_.WriteTo(output, _repeated_loadFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (YuChaoId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(YuChaoId);
    }
    loadFish_.WriteTo(ref output, _repeated_loadFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (YuChaoId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(YuChaoId);
    }
    size += loadFish_.CalculateSize(_repeated_loadFish_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_PlayerYCEnter other) {
    if (other == null) {
      return;
    }
    if (other.YuChaoId != 0) {
      YuChaoId = other.YuChaoId;
    }
    loadFish_.Add(other.loadFish_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          YuChaoId = input.ReadInt32();
          break;
        }
        case 18: {
          loadFish_.AddEntriesFrom(input, _repeated_loadFish_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          YuChaoId = input.ReadInt32();
          break;
        }
        case 18: {
          loadFish_.AddEntriesFrom(ref input, _repeated_loadFish_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class FishDeadInfo : pb::IMessage<FishDeadInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<FishDeadInfo> _parser = new pb::MessageParser<FishDeadInfo>(() => new FishDeadInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FishDeadInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishDeadInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishDeadInfo(FishDeadInfo other) : this() {
    id_ = other.id_;
    score_ = other.score_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FishDeadInfo Clone() {
    return new FishDeadInfo(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 鱼ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 2;
  private int score_;
  /// <summary>
  /// 得分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FishDeadInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FishDeadInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Score != other.Score) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (Score != 0) hash ^= Score.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Score != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (Score != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FishDeadInfo other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///鱼死亡
/// </summary>
public sealed partial class CMD_S_FishDead : pb::IMessage<CMD_S_FishDead>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_FishDead> _parser = new pb::MessageParser<CMD_S_FishDead>(() => new CMD_S_FishDead());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_FishDead> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_FishDead() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_FishDead(CMD_S_FishDead other) : this() {
    chairId_ = other.chairId_;
    fish_ = other.fish_.Clone();
    score_ = other.score_;
    leiLongOdd_ = other.leiLongOdd_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_FishDead Clone() {
    return new CMD_S_FishDead(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///玩家椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "fish" field.</summary>
  public const int FishFieldNumber = 2;
  private static readonly pb::FieldCodec<global::FishDeadInfo> _repeated_fish_codec
      = pb::FieldCodec.ForMessage(18, global::FishDeadInfo.Parser);
  private readonly pbc::RepeatedField<global::FishDeadInfo> fish_ = new pbc::RepeatedField<global::FishDeadInfo>();
  /// <summary>
  ///鱼信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::FishDeadInfo> Fish {
    get { return fish_; }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 3;
  private long score_;
  /// <summary>
  ///玩家当前分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "lei_long_odd" field.</summary>
  public const int LeiLongOddFieldNumber = 4;
  private int leiLongOdd_;
  /// <summary>
  ///本次雷龙倍数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LeiLongOdd {
    get { return leiLongOdd_; }
    set {
      leiLongOdd_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_FishDead);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_FishDead other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if(!fish_.Equals(other.fish_)) return false;
    if (Score != other.Score) return false;
    if (LeiLongOdd != other.LeiLongOdd) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    hash ^= fish_.GetHashCode();
    if (Score != 0L) hash ^= Score.GetHashCode();
    if (LeiLongOdd != 0) hash ^= LeiLongOdd.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    fish_.WriteTo(output, _repeated_fish_codec);
    if (Score != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(Score);
    }
    if (LeiLongOdd != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(LeiLongOdd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    fish_.WriteTo(ref output, _repeated_fish_codec);
    if (Score != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(Score);
    }
    if (LeiLongOdd != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(LeiLongOdd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    size += fish_.CalculateSize(_repeated_fish_codec);
    if (Score != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
    }
    if (LeiLongOdd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeiLongOdd);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_FishDead other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    fish_.Add(other.fish_);
    if (other.Score != 0L) {
      Score = other.Score;
    }
    if (other.LeiLongOdd != 0) {
      LeiLongOdd = other.LeiLongOdd;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 18: {
          fish_.AddEntriesFrom(input, _repeated_fish_codec);
          break;
        }
        case 24: {
          Score = input.ReadInt64();
          break;
        }
        case 32: {
          LeiLongOdd = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 18: {
          fish_.AddEntriesFrom(ref input, _repeated_fish_codec);
          break;
        }
        case 24: {
          Score = input.ReadInt64();
          break;
        }
        case 32: {
          LeiLongOdd = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家发炮
/// </summary>
public sealed partial class CMD_S_PlayerShoot : pb::IMessage<CMD_S_PlayerShoot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_S_PlayerShoot> _parser = new pb::MessageParser<CMD_S_PlayerShoot>(() => new CMD_S_PlayerShoot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_S_PlayerShoot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerShoot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerShoot(CMD_S_PlayerShoot other) : this() {
    chairId_ = other.chairId_;
    x_ = other.x_;
    y_ = other.y_;
    level_ = other.level_;
    type_ = other.type_;
    playerCurScore_ = other.playerCurScore_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_S_PlayerShoot Clone() {
    return new CMD_S_PlayerShoot(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///玩家椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 2;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 3;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 4;
  private int level_;
  /// <summary>
  ///炮弹等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 5;
  private int type_;
  /// <summary>
  ///炮弹类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "player_cur_score" field.</summary>
  public const int PlayerCurScoreFieldNumber = 6;
  private long playerCurScore_;
  /// <summary>
  ///玩家当前分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long PlayerCurScore {
    get { return playerCurScore_; }
    set {
      playerCurScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_S_PlayerShoot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_S_PlayerShoot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (Level != other.Level) return false;
    if (Type != other.Type) return false;
    if (PlayerCurScore != other.PlayerCurScore) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (PlayerCurScore != 0L) hash ^= PlayerCurScore.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (X != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Y);
    }
    if (Level != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Type);
    }
    if (PlayerCurScore != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(PlayerCurScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (X != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Y);
    }
    if (Level != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Type);
    }
    if (PlayerCurScore != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(PlayerCurScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (PlayerCurScore != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerCurScore);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_S_PlayerShoot other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.PlayerCurScore != 0L) {
      PlayerCurScore = other.PlayerCurScore;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 21: {
          X = input.ReadFloat();
          break;
        }
        case 29: {
          Y = input.ReadFloat();
          break;
        }
        case 32: {
          Level = input.ReadInt32();
          break;
        }
        case 40: {
          Type = input.ReadInt32();
          break;
        }
        case 48: {
          PlayerCurScore = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 21: {
          X = input.ReadFloat();
          break;
        }
        case 29: {
          Y = input.ReadFloat();
          break;
        }
        case 32: {
          Level = input.ReadInt32();
          break;
        }
        case 40: {
          Type = input.ReadInt32();
          break;
        }
        case 48: {
          PlayerCurScore = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_C_RobotShoot : pb::IMessage<CMD_C_RobotShoot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_RobotShoot> _parser = new pb::MessageParser<CMD_C_RobotShoot>(() => new CMD_C_RobotShoot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_RobotShoot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_RobotShoot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_RobotShoot(CMD_C_RobotShoot other) : this() {
    chairId_ = other.chairId_;
    level_ = other.level_;
    type_ = other.type_;
    isLock_ = other.isLock_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_RobotShoot Clone() {
    return new CMD_C_RobotShoot(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///机器人座位号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 2;
  private int level_;
  /// <summary>
  ///等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private int type_;
  /// <summary>
  ///类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "is_lock" field.</summary>
  public const int IsLockFieldNumber = 4;
  private int isLock_;
  /// <summary>
  ///是否锁定
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsLock {
    get { return isLock_; }
    set {
      isLock_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_RobotShoot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_RobotShoot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (Level != other.Level) return false;
    if (Type != other.Type) return false;
    if (IsLock != other.IsLock) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (IsLock != 0) hash ^= IsLock.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (IsLock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(IsLock);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (IsLock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(IsLock);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (IsLock != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsLock);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_RobotShoot other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.IsLock != 0) {
      IsLock = other.IsLock;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Level = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          IsLock = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Level = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          IsLock = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家锁定
/// </summary>
public sealed partial class CMD_C_PlayerLock : pb::IMessage<CMD_C_PlayerLock>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_PlayerLock> _parser = new pb::MessageParser<CMD_C_PlayerLock>(() => new CMD_C_PlayerLock());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_PlayerLock> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_PlayerLock() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_PlayerLock(CMD_C_PlayerLock other) : this() {
    chairId_ = other.chairId_;
    fishId_ = other.fishId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_PlayerLock Clone() {
    return new CMD_C_PlayerLock(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///玩家椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 2;
  private int fishId_;
  /// <summary>
  ///鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FishId {
    get { return fishId_; }
    set {
      fishId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_PlayerLock);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_PlayerLock other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (FishId != other.FishId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (FishId != 0) hash ^= FishId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (FishId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(FishId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (FishId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_PlayerLock other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.FishId != 0) {
      FishId = other.FishId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          FishId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_C_JuBuZhaDan : pb::IMessage<CMD_C_JuBuZhaDan>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_JuBuZhaDan> _parser = new pb::MessageParser<CMD_C_JuBuZhaDan>(() => new CMD_C_JuBuZhaDan());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_JuBuZhaDan> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_JuBuZhaDan() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_JuBuZhaDan(CMD_C_JuBuZhaDan other) : this() {
    chairId_ = other.chairId_;
    teShuIuId_ = other.teShuIuId_;
    fishId_ = other.fishId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_JuBuZhaDan Clone() {
    return new CMD_C_JuBuZhaDan(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "te_shu_iu_id" field.</summary>
  public const int TeShuIuIdFieldNumber = 2;
  private int teShuIuId_;
  /// <summary>
  ///特殊鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TeShuIuId {
    get { return teShuIuId_; }
    set {
      teShuIuId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_fishId_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> fishId_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> FishId {
    get { return fishId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_JuBuZhaDan);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_JuBuZhaDan other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (TeShuIuId != other.TeShuIuId) return false;
    if(!fishId_.Equals(other.fishId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (TeShuIuId != 0) hash ^= TeShuIuId.GetHashCode();
    hash ^= fishId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (TeShuIuId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TeShuIuId);
    }
    fishId_.WriteTo(output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (TeShuIuId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TeShuIuId);
    }
    fishId_.WriteTo(ref output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (TeShuIuId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeShuIuId);
    }
    size += fishId_.CalculateSize(_repeated_fishId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_JuBuZhaDan other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.TeShuIuId != 0) {
      TeShuIuId = other.TeShuIuId;
    }
    fishId_.Add(other.fishId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          TeShuIuId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fishId_.AddEntriesFrom(input, _repeated_fishId_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          TeShuIuId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fishId_.AddEntriesFrom(ref input, _repeated_fishId_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_C_TongLeiZhaDan : pb::IMessage<CMD_C_TongLeiZhaDan>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_TongLeiZhaDan> _parser = new pb::MessageParser<CMD_C_TongLeiZhaDan>(() => new CMD_C_TongLeiZhaDan());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_TongLeiZhaDan> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_TongLeiZhaDan() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_TongLeiZhaDan(CMD_C_TongLeiZhaDan other) : this() {
    chairId_ = other.chairId_;
    teShuIuId_ = other.teShuIuId_;
    fishId_ = other.fishId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_TongLeiZhaDan Clone() {
    return new CMD_C_TongLeiZhaDan(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "te_shu_iu_id" field.</summary>
  public const int TeShuIuIdFieldNumber = 2;
  private int teShuIuId_;
  /// <summary>
  ///特殊鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TeShuIuId {
    get { return teShuIuId_; }
    set {
      teShuIuId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_fishId_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> fishId_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> FishId {
    get { return fishId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_TongLeiZhaDan);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_TongLeiZhaDan other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (TeShuIuId != other.TeShuIuId) return false;
    if(!fishId_.Equals(other.fishId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (TeShuIuId != 0) hash ^= TeShuIuId.GetHashCode();
    hash ^= fishId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (TeShuIuId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TeShuIuId);
    }
    fishId_.WriteTo(output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (TeShuIuId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TeShuIuId);
    }
    fishId_.WriteTo(ref output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (TeShuIuId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeShuIuId);
    }
    size += fishId_.CalculateSize(_repeated_fishId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_TongLeiZhaDan other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.TeShuIuId != 0) {
      TeShuIuId = other.TeShuIuId;
    }
    fishId_.Add(other.fishId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          TeShuIuId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fishId_.AddEntriesFrom(input, _repeated_fishId_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          TeShuIuId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fishId_.AddEntriesFrom(ref input, _repeated_fishId_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_C_ShuiHuZhuan : pb::IMessage<CMD_C_ShuiHuZhuan>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_ShuiHuZhuan> _parser = new pb::MessageParser<CMD_C_ShuiHuZhuan>(() => new CMD_C_ShuiHuZhuan());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_ShuiHuZhuan> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_ShuiHuZhuan() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_ShuiHuZhuan(CMD_C_ShuiHuZhuan other) : this() {
    chairId_ = other.chairId_;
    teShuIuId_ = other.teShuIuId_;
    fishId_ = other.fishId_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_ShuiHuZhuan Clone() {
    return new CMD_C_ShuiHuZhuan(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "te_shu_iu_id" field.</summary>
  public const int TeShuIuIdFieldNumber = 2;
  private int teShuIuId_;
  /// <summary>
  ///特殊鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TeShuIuId {
    get { return teShuIuId_; }
    set {
      teShuIuId_ = value;
    }
  }

  /// <summary>Field number for the "fish_id" field.</summary>
  public const int FishIdFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_fishId_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> fishId_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///鱼id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> FishId {
    get { return fishId_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_ShuiHuZhuan);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_ShuiHuZhuan other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (TeShuIuId != other.TeShuIuId) return false;
    if(!fishId_.Equals(other.fishId_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (TeShuIuId != 0) hash ^= TeShuIuId.GetHashCode();
    hash ^= fishId_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (TeShuIuId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TeShuIuId);
    }
    fishId_.WriteTo(output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (TeShuIuId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TeShuIuId);
    }
    fishId_.WriteTo(ref output, _repeated_fishId_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (TeShuIuId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeShuIuId);
    }
    size += fishId_.CalculateSize(_repeated_fishId_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_ShuiHuZhuan other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.TeShuIuId != 0) {
      TeShuIuId = other.TeShuIuId;
    }
    fishId_.Add(other.fishId_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          TeShuIuId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fishId_.AddEntriesFrom(input, _repeated_fishId_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          TeShuIuId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fishId_.AddEntriesFrom(ref input, _repeated_fishId_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_C_ChangeBulletLevel : pb::IMessage<CMD_C_ChangeBulletLevel>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_ChangeBulletLevel> _parser = new pb::MessageParser<CMD_C_ChangeBulletLevel>(() => new CMD_C_ChangeBulletLevel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_ChangeBulletLevel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_ChangeBulletLevel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_ChangeBulletLevel(CMD_C_ChangeBulletLevel other) : this() {
    chairId_ = other.chairId_;
    gunType_ = other.gunType_;
    gunLevel_ = other.gunLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_ChangeBulletLevel Clone() {
    return new CMD_C_ChangeBulletLevel(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "gun_type" field.</summary>
  public const int GunTypeFieldNumber = 2;
  private int gunType_;
  /// <summary>
  ///炮台类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GunType {
    get { return gunType_; }
    set {
      gunType_ = value;
    }
  }

  /// <summary>Field number for the "gun_level" field.</summary>
  public const int GunLevelFieldNumber = 3;
  private int gunLevel_;
  /// <summary>
  ///炮台等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GunLevel {
    get { return gunLevel_; }
    set {
      gunLevel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_ChangeBulletLevel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_ChangeBulletLevel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (GunType != other.GunType) return false;
    if (GunLevel != other.GunLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (GunType != 0) hash ^= GunType.GetHashCode();
    if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (GunType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GunType);
    }
    if (GunLevel != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GunLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (GunType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GunType);
    }
    if (GunLevel != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GunLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (GunType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunType);
    }
    if (GunLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_ChangeBulletLevel other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.GunType != 0) {
      GunType = other.GunType;
    }
    if (other.GunLevel != 0) {
      GunLevel = other.GunLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          GunType = input.ReadInt32();
          break;
        }
        case 24: {
          GunLevel = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          GunType = input.ReadInt32();
          break;
        }
        case 24: {
          GunLevel = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Bullet : pb::IMessage<Bullet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Bullet> _parser = new pb::MessageParser<Bullet>(() => new Bullet());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Bullet> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Bullet() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Bullet(Bullet other) : this() {
    id_ = other.id_;
    bulletKind_ = other.bulletKind_;
    isUse_ = other.isUse_;
    level_ = other.level_;
    type_ = other.type_;
    chips_ = other.chips_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Bullet Clone() {
    return new Bullet(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private int id_;
  /// <summary>
  ///子弹id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "bullet_kind" field.</summary>
  public const int BulletKindFieldNumber = 2;
  private int bulletKind_;
  /// <summary>
  ///子弹类型（0：普通弹，1：能量弹）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BulletKind {
    get { return bulletKind_; }
    set {
      bulletKind_ = value;
    }
  }

  /// <summary>Field number for the "is_use" field.</summary>
  public const int IsUseFieldNumber = 3;
  private int isUse_;
  /// <summary>
  ///子弹是否用过
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsUse {
    get { return isUse_; }
    set {
      isUse_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 4;
  private int level_;
  /// <summary>
  ///子弹等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 5;
  private int type_;
  /// <summary>
  ///子弹类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "chips" field.</summary>
  public const int ChipsFieldNumber = 6;
  private int chips_;
  /// <summary>
  ///子弹金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Chips {
    get { return chips_; }
    set {
      chips_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Bullet);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Bullet other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (BulletKind != other.BulletKind) return false;
    if (IsUse != other.IsUse) return false;
    if (Level != other.Level) return false;
    if (Type != other.Type) return false;
    if (Chips != other.Chips) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id != 0) hash ^= Id.GetHashCode();
    if (BulletKind != 0) hash ^= BulletKind.GetHashCode();
    if (IsUse != 0) hash ^= IsUse.GetHashCode();
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Chips != 0) hash ^= Chips.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (BulletKind != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BulletKind);
    }
    if (IsUse != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(IsUse);
    }
    if (Level != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Type);
    }
    if (Chips != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Chips);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (BulletKind != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BulletKind);
    }
    if (IsUse != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(IsUse);
    }
    if (Level != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Level);
    }
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Type);
    }
    if (Chips != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Chips);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (BulletKind != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletKind);
    }
    if (IsUse != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsUse);
    }
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Chips != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chips);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Bullet other) {
    if (other == null) {
      return;
    }
    if (other.Id != 0) {
      Id = other.Id;
    }
    if (other.BulletKind != 0) {
      BulletKind = other.BulletKind;
    }
    if (other.IsUse != 0) {
      IsUse = other.IsUse;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Chips != 0) {
      Chips = other.Chips;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          BulletKind = input.ReadInt32();
          break;
        }
        case 24: {
          IsUse = input.ReadInt32();
          break;
        }
        case 32: {
          Level = input.ReadInt32();
          break;
        }
        case 40: {
          Type = input.ReadInt32();
          break;
        }
        case 48: {
          Chips = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          BulletKind = input.ReadInt32();
          break;
        }
        case 24: {
          IsUse = input.ReadInt32();
          break;
        }
        case 32: {
          Level = input.ReadInt32();
          break;
        }
        case 40: {
          Type = input.ReadInt32();
          break;
        }
        case 48: {
          Chips = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_C_PressShoot : pb::IMessage<CMD_C_PressShoot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_PressShoot> _parser = new pb::MessageParser<CMD_C_PressShoot>(() => new CMD_C_PressShoot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_PressShoot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_PressShoot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_PressShoot(CMD_C_PressShoot other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    chairId_ = other.chairId_;
    bullet_ = other.bullet_ != null ? other.bullet_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_PressShoot Clone() {
    return new CMD_C_PressShoot(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  /// <summary>
  ///x轴
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  /// <summary>
  ///y轴
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 3;
  private int chairId_;
  /// <summary>
  ///座位号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "bullet" field.</summary>
  public const int BulletFieldNumber = 4;
  private global::Bullet bullet_;
  /// <summary>
  ///子弹
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Bullet Bullet {
    get { return bullet_; }
    set {
      bullet_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_PressShoot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_PressShoot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (ChairId != other.ChairId) return false;
    if (!object.Equals(Bullet, other.Bullet)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (bullet_ != null) hash ^= Bullet.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (ChairId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ChairId);
    }
    if (bullet_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Bullet);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (ChairId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ChairId);
    }
    if (bullet_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Bullet);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (bullet_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bullet);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_PressShoot other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.bullet_ != null) {
      if (bullet_ == null) {
        Bullet = new global::Bullet();
      }
      Bullet.MergeFrom(other.Bullet);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 24: {
          ChairId = input.ReadInt32();
          break;
        }
        case 34: {
          if (bullet_ == null) {
            Bullet = new global::Bullet();
          }
          input.ReadMessage(Bullet);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 24: {
          ChairId = input.ReadInt32();
          break;
        }
        case 34: {
          if (bullet_ == null) {
            Bullet = new global::Bullet();
          }
          input.ReadMessage(Bullet);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class CMD_C_HitedFish : pb::IMessage<CMD_C_HitedFish>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMD_C_HitedFish> _parser = new pb::MessageParser<CMD_C_HitedFish>(() => new CMD_C_HitedFish());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CMD_C_HitedFish> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WPBYReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_HitedFish() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_HitedFish(CMD_C_HitedFish other) : this() {
    bullet_ = other.bullet_ != null ? other.bullet_.Clone() : null;
    chairId_ = other.chairId_;
    hitFish_ = other.hitFish_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CMD_C_HitedFish Clone() {
    return new CMD_C_HitedFish(this);
  }

  /// <summary>Field number for the "bullet" field.</summary>
  public const int BulletFieldNumber = 1;
  private global::Bullet bullet_;
  /// <summary>
  ///子弹
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Bullet Bullet {
    get { return bullet_; }
    set {
      bullet_ = value;
    }
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 2;
  private int chairId_;
  /// <summary>
  ///座位号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "hit_fish" field.</summary>
  public const int HitFishFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_hitFish_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> hitFish_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///击中鱼的id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> HitFish {
    get { return hitFish_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CMD_C_HitedFish);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CMD_C_HitedFish other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Bullet, other.Bullet)) return false;
    if (ChairId != other.ChairId) return false;
    if(!hitFish_.Equals(other.hitFish_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (bullet_ != null) hash ^= Bullet.GetHashCode();
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    hash ^= hitFish_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (bullet_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Bullet);
    }
    if (ChairId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChairId);
    }
    hitFish_.WriteTo(output, _repeated_hitFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (bullet_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Bullet);
    }
    if (ChairId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ChairId);
    }
    hitFish_.WriteTo(ref output, _repeated_hitFish_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (bullet_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bullet);
    }
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    size += hitFish_.CalculateSize(_repeated_hitFish_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CMD_C_HitedFish other) {
    if (other == null) {
      return;
    }
    if (other.bullet_ != null) {
      if (bullet_ == null) {
        Bullet = new global::Bullet();
      }
      Bullet.MergeFrom(other.Bullet);
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    hitFish_.Add(other.hitFish_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (bullet_ == null) {
            Bullet = new global::Bullet();
          }
          input.ReadMessage(Bullet);
          break;
        }
        case 16: {
          ChairId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          hitFish_.AddEntriesFrom(input, _repeated_hitFish_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (bullet_ == null) {
            Bullet = new global::Bullet();
          }
          input.ReadMessage(Bullet);
          break;
        }
        case 16: {
          ChairId = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          hitFish_.AddEntriesFrom(ref input, _repeated_hitFish_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
