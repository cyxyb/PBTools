// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/FingerGuess.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FingerGuess {

  /// <summary>Holder for reflection information generated from Proto/SubGame/FingerGuess.proto</summary>
  public static partial class FingerGuessReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/FingerGuess.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FingerGuessReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Qcm90by9TdWJHYW1lL0Zpbmdlckd1ZXNzLnByb3RvEgtGaW5nZXJHdWVz",
            "cyKGAQoMTXNnU2NlbmVJbmZvEg8KB3Jvb21faWQYASABKAUSCwoDYmV0GAIg",
            "AygFEg8KB2N1cl9iZXQYAyABKAUSEAoIcGFzc3dvcmQYBCABKAkSDwoHbWlu",
            "X2JldBgFIAEoBRIPCgdtYXhfYmV0GAYgASgDEhMKC2hvdXNlX293bmVyGAcg",
            "ASgIIlcKCU1zZ1Jlc3VsdBIOCgZyZXN1bHQYASABKAUSDAoEZ29sZBgCIAEo",
            "AxIVCg1iYW5rZXJfcmVzdWx0GAMgASgFEhUKDXBsYXllcl9yZXN1bHQYBCAB",
            "KAUiVQoMTXNnUm91bmREYXRhEgwKBHRpbWUYASABKAUSEwoLd2luX3VzZXJf",
            "aWQYAiABKAUSFAoMbG9zZV91c2VyX2lkGAMgASgFEgwKBGdvbGQYBCABKAMi",
            "QgoRTXNnVG90YWxSb3VuZERhdGESLQoKcm91bmRfZGF0YRgBIAMoCzIZLkZp",
            "bmdlckd1ZXNzLk1zZ1JvdW5kRGF0YSKqAQoKTXNnRGF5RGF0YRIMCgR0aW1l",
            "GAEgASgJEhgKEHRvdGFsX3BsYXlfY291bnQYAiABKAUSEgoKbG9zZV9jb3Vu",
            "dBgDIAEoBRIRCglsb3NlX2dvbGQYBCABKAMSEQoJd2luX2NvdW50GAUgASgF",
            "EhAKCHdpbl9nb2xkGAYgASgDEhIKCnRvdGFsX2dvbGQYByABKAMSFAoMc3Vy",
            "cGx1c19nb2xkGAggASgDIj4KD01zZ1RvdGFsRGF5RGF0YRIrCgpkYWlseV9k",
            "YXRhGAEgAygLMhcuRmluZ2VyR3Vlc3MuTXNnRGF5RGF0YSI5Cg5Nc2dRdWVy",
            "eVJlY29yZBIMCgRwYWdlGAEgASgFEgsKA251bRgCIAEoBRIMCgR0eXBlGAMg",
            "ASgFKpcECg1FTXNnSURTdWJHYW1lEhUKEU1zZ0lEU3ViR2FtZV9OdWxsEAAS",
            "HAoYTXNnSURTdWJHYW1lX1BsYXllclJlYWR5EAESIAocTXNnSURTdWJHYW1l",
            "X1BsYXllclJlYWR5UmVzcBACEiAKHE1zZ0lEU3ViR2FtZV9CYW5rZXJDaGFu",
            "Z2VCZXQQAxIkCiBNc2dJRFN1YkdhbWVfQmFua2VyQ2hhbmdlQmV0UmVzcBAE",
            "EiEKHU1zZ0lEU3ViR2FtZV9QbGF5ZXJDb25maXJtQmV0EAUSJQohTXNnSURT",
            "dWJHYW1lX1BsYXllckNvbmZpcm1CZXRSZXNwEAYSGgoWTXNnSURTdWJHYW1l",
            "X1N0YXJ0R2FtZRAHEhsKF01zZ0lEU3ViR2FtZV9SZXN1bHRSZXNwEAgSHAoY",
            "TXNnSURTdWJHYW1lX1F1ZXJ5UmVjb3JkEAkSJQohTXNnSURTdWJHYW1lX1F1",
            "ZXJ5Um91bmRSZWNvcmRSZXNwEAoSIwofTXNnSURTdWJHYW1lX1F1ZXJ5RGF5",
            "UmVjb3JkUmVzcBALEhsKF01zZ0lEU3ViR2FtZV9LaWNrUGxheWVyEAwSHQoZ",
            "TXNnSURTdWJHYW1lX0FkZE9uZVJlY29yZBANEhwKGE1zZ0lEU3ViR2FtZV9D",
            "YW5jZWxSZWFkeRAOEiAKHE1zZ0lEU3ViR2FtZV9DYW5jZWxSZWFkeVJlc3AQ",
            "D2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::FingerGuess.EMsgIDSubGame), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FingerGuess.MsgSceneInfo), global::FingerGuess.MsgSceneInfo.Parser, new[]{ "RoomId", "Bet", "CurBet", "Password", "MinBet", "MaxBet", "HouseOwner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FingerGuess.MsgResult), global::FingerGuess.MsgResult.Parser, new[]{ "Result", "Gold", "BankerResult", "PlayerResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FingerGuess.MsgRoundData), global::FingerGuess.MsgRoundData.Parser, new[]{ "Time", "WinUserId", "LoseUserId", "Gold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FingerGuess.MsgTotalRoundData), global::FingerGuess.MsgTotalRoundData.Parser, new[]{ "RoundData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FingerGuess.MsgDayData), global::FingerGuess.MsgDayData.Parser, new[]{ "Time", "TotalPlayCount", "LoseCount", "LoseGold", "WinCount", "WinGold", "TotalGold", "SurplusGold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FingerGuess.MsgTotalDayData), global::FingerGuess.MsgTotalDayData.Parser, new[]{ "DailyData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FingerGuess.MsgQueryRecord), global::FingerGuess.MsgQueryRecord.Parser, new[]{ "Page", "Num", "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EMsgIDSubGame {
    [pbr::OriginalName("MsgIDSubGame_Null")] MsgIdsubGameNull = 0,
    /// <summary>
    ///玩家准备(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_PlayerReady")] MsgIdsubGamePlayerReady = 1,
    /// <summary>
    ///玩家准备返回(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_PlayerReadyResp")] MsgIdsubGamePlayerReadyResp = 2,
    /// <summary>
    ///庄家更改下注(MsgCommonN64)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_BankerChangeBet")] MsgIdsubGameBankerChangeBet = 3,
    /// <summary>
    ///庄家更改下注返回(MsgCommonN64)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_BankerChangeBetResp")] MsgIdsubGameBankerChangeBetResp = 4,
    /// <summary>
    ///玩家确认更改下注值(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_PlayerConfirmBet")] MsgIdsubGamePlayerConfirmBet = 5,
    /// <summary>
    ///玩家确认更改下注值返回(MsgCommonN32 1:同意 2:取消准备)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_PlayerConfirmBetResp")] MsgIdsubGamePlayerConfirmBetResp = 6,
    /// <summary>
    ///开始游戏(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_StartGame")] MsgIdsubGameStartGame = 7,
    /// <summary>
    ///游戏结果(MsgResult)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_ResultResp")] MsgIdsubGameResultResp = 8,
    /// <summary>
    ///查询数据记录(MsgQueryRecord 1:每局数据 2:每日数据)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_QueryRecord")] MsgIdsubGameQueryRecord = 9,
    /// <summary>
    ///每局数据数据记录(MsgTotalRoundData)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_QueryRoundRecordResp")] MsgIdsubGameQueryRoundRecordResp = 10,
    /// <summary>
    ///每日数据数据记录(MsgTotalDayData)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_QueryDayRecordResp")] MsgIdsubGameQueryDayRecordResp = 11,
    /// <summary>
    ///踢出玩家(MsgCommonBool)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_KickPlayer")] MsgIdsubGameKickPlayer = 12,
    /// <summary>
    ///增加一条记录
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_AddOneRecord")] MsgIdsubGameAddOneRecord = 13,
    /// <summary>
    ///玩家取消准备(MsgCommonBool)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_CancelReady")] MsgIdsubGameCancelReady = 14,
    /// <summary>
    ///玩家取消准备返回(MsgCommonBool)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_CancelReadyResp")] MsgIdsubGameCancelReadyResp = 15,
  }

  #endregion

  #region Messages
  /// <summary>
  ///场景消息
  /// </summary>
  public sealed partial class MsgSceneInfo : pb::IMessage<MsgSceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgSceneInfo> _parser = new pb::MessageParser<MsgSceneInfo>(() => new MsgSceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgSceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FingerGuess.FingerGuessReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo(MsgSceneInfo other) : this() {
      roomId_ = other.roomId_;
      bet_ = other.bet_.Clone();
      curBet_ = other.curBet_;
      password_ = other.password_;
      minBet_ = other.minBet_;
      maxBet_ = other.maxBet_;
      houseOwner_ = other.houseOwner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo Clone() {
      return new MsgSceneInfo(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private int roomId_;
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_bet_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> bet_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///固定押注配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Bet {
      get { return bet_; }
    }

    /// <summary>Field number for the "cur_bet" field.</summary>
    public const int CurBetFieldNumber = 3;
    private int curBet_;
    /// <summary>
    ///当前押注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurBet {
      get { return curBet_; }
      set {
        curBet_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 4;
    private string password_ = "";
    /// <summary>
    ///房间密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_bet" field.</summary>
    public const int MinBetFieldNumber = 5;
    private int minBet_;
    /// <summary>
    ///最小押注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinBet {
      get { return minBet_; }
      set {
        minBet_ = value;
      }
    }

    /// <summary>Field number for the "max_bet" field.</summary>
    public const int MaxBetFieldNumber = 6;
    private long maxBet_;
    /// <summary>
    ///最大押注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxBet {
      get { return maxBet_; }
      set {
        maxBet_ = value;
      }
    }

    /// <summary>Field number for the "house_owner" field.</summary>
    public const int HouseOwnerFieldNumber = 7;
    private bool houseOwner_;
    /// <summary>
    ///是否房主
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HouseOwner {
      get { return houseOwner_; }
      set {
        houseOwner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgSceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgSceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if(!bet_.Equals(other.bet_)) return false;
      if (CurBet != other.CurBet) return false;
      if (Password != other.Password) return false;
      if (MinBet != other.MinBet) return false;
      if (MaxBet != other.MaxBet) return false;
      if (HouseOwner != other.HouseOwner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0) hash ^= RoomId.GetHashCode();
      hash ^= bet_.GetHashCode();
      if (CurBet != 0) hash ^= CurBet.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (MinBet != 0) hash ^= MinBet.GetHashCode();
      if (MaxBet != 0L) hash ^= MaxBet.GetHashCode();
      if (HouseOwner != false) hash ^= HouseOwner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      bet_.WriteTo(output, _repeated_bet_codec);
      if (CurBet != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurBet);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (MinBet != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MinBet);
      }
      if (MaxBet != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MaxBet);
      }
      if (HouseOwner != false) {
        output.WriteRawTag(56);
        output.WriteBool(HouseOwner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomId);
      }
      bet_.WriteTo(ref output, _repeated_bet_codec);
      if (CurBet != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurBet);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (MinBet != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MinBet);
      }
      if (MaxBet != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(MaxBet);
      }
      if (HouseOwner != false) {
        output.WriteRawTag(56);
        output.WriteBool(HouseOwner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
      }
      size += bet_.CalculateSize(_repeated_bet_codec);
      if (CurBet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurBet);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (MinBet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinBet);
      }
      if (MaxBet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBet);
      }
      if (HouseOwner != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgSceneInfo other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0) {
        RoomId = other.RoomId;
      }
      bet_.Add(other.bet_);
      if (other.CurBet != 0) {
        CurBet = other.CurBet;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.MinBet != 0) {
        MinBet = other.MinBet;
      }
      if (other.MaxBet != 0L) {
        MaxBet = other.MaxBet;
      }
      if (other.HouseOwner != false) {
        HouseOwner = other.HouseOwner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            bet_.AddEntriesFrom(input, _repeated_bet_codec);
            break;
          }
          case 24: {
            CurBet = input.ReadInt32();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
          case 40: {
            MinBet = input.ReadInt32();
            break;
          }
          case 48: {
            MaxBet = input.ReadInt64();
            break;
          }
          case 56: {
            HouseOwner = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            bet_.AddEntriesFrom(ref input, _repeated_bet_codec);
            break;
          }
          case 24: {
            CurBet = input.ReadInt32();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
          case 40: {
            MinBet = input.ReadInt32();
            break;
          }
          case 48: {
            MaxBet = input.ReadInt64();
            break;
          }
          case 56: {
            HouseOwner = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏结果
  /// </summary>
  public sealed partial class MsgResult : pb::IMessage<MsgResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgResult> _parser = new pb::MessageParser<MsgResult>(() => new MsgResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FingerGuess.FingerGuessReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult(MsgResult other) : this() {
      result_ = other.result_;
      gold_ = other.gold_;
      bankerResult_ = other.bankerResult_;
      playerResult_ = other.playerResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult Clone() {
      return new MsgResult(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    /// <summary>
    ///游戏结果(1:庄家赢 2:玩家赢 3: 和)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 2;
    private long gold_;
    /// <summary>
    ///金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "banker_result" field.</summary>
    public const int BankerResultFieldNumber = 3;
    private int bankerResult_;
    /// <summary>
    ///庄家结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BankerResult {
      get { return bankerResult_; }
      set {
        bankerResult_ = value;
      }
    }

    /// <summary>Field number for the "player_result" field.</summary>
    public const int PlayerResultFieldNumber = 4;
    private int playerResult_;
    /// <summary>
    ///玩家结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerResult {
      get { return playerResult_; }
      set {
        playerResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Gold != other.Gold) return false;
      if (BankerResult != other.BankerResult) return false;
      if (PlayerResult != other.PlayerResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (BankerResult != 0) hash ^= BankerResult.GetHashCode();
      if (PlayerResult != 0) hash ^= PlayerResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (BankerResult != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BankerResult);
      }
      if (PlayerResult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (BankerResult != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BankerResult);
      }
      if (PlayerResult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (BankerResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BankerResult);
      }
      if (PlayerResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgResult other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      if (other.BankerResult != 0) {
        BankerResult = other.BankerResult;
      }
      if (other.PlayerResult != 0) {
        PlayerResult = other.PlayerResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
          case 24: {
            BankerResult = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerResult = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
          case 24: {
            BankerResult = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerResult = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///每局数据
  /// </summary>
  public sealed partial class MsgRoundData : pb::IMessage<MsgRoundData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgRoundData> _parser = new pb::MessageParser<MsgRoundData>(() => new MsgRoundData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgRoundData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FingerGuess.FingerGuessReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRoundData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRoundData(MsgRoundData other) : this() {
      time_ = other.time_;
      winUserId_ = other.winUserId_;
      loseUserId_ = other.loseUserId_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRoundData Clone() {
      return new MsgRoundData(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private int time_;
    /// <summary>
    ///时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "win_user_id" field.</summary>
    public const int WinUserIdFieldNumber = 2;
    private int winUserId_;
    /// <summary>
    ///胜利玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinUserId {
      get { return winUserId_; }
      set {
        winUserId_ = value;
      }
    }

    /// <summary>Field number for the "lose_user_id" field.</summary>
    public const int LoseUserIdFieldNumber = 3;
    private int loseUserId_;
    /// <summary>
    ///失败玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoseUserId {
      get { return loseUserId_; }
      set {
        loseUserId_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 4;
    private long gold_;
    /// <summary>
    ///金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgRoundData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgRoundData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      if (WinUserId != other.WinUserId) return false;
      if (LoseUserId != other.LoseUserId) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0) hash ^= Time.GetHashCode();
      if (WinUserId != 0) hash ^= WinUserId.GetHashCode();
      if (LoseUserId != 0) hash ^= LoseUserId.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Time != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Time);
      }
      if (WinUserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WinUserId);
      }
      if (LoseUserId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LoseUserId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Time != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Time);
      }
      if (WinUserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WinUserId);
      }
      if (LoseUserId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LoseUserId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (WinUserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinUserId);
      }
      if (LoseUserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoseUserId);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgRoundData other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.WinUserId != 0) {
        WinUserId = other.WinUserId;
      }
      if (other.LoseUserId != 0) {
        LoseUserId = other.LoseUserId;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt32();
            break;
          }
          case 16: {
            WinUserId = input.ReadInt32();
            break;
          }
          case 24: {
            LoseUserId = input.ReadInt32();
            break;
          }
          case 32: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Time = input.ReadInt32();
            break;
          }
          case 16: {
            WinUserId = input.ReadInt32();
            break;
          }
          case 24: {
            LoseUserId = input.ReadInt32();
            break;
          }
          case 32: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///总的每局数据
  /// </summary>
  public sealed partial class MsgTotalRoundData : pb::IMessage<MsgTotalRoundData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgTotalRoundData> _parser = new pb::MessageParser<MsgTotalRoundData>(() => new MsgTotalRoundData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgTotalRoundData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FingerGuess.FingerGuessReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTotalRoundData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTotalRoundData(MsgTotalRoundData other) : this() {
      roundData_ = other.roundData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTotalRoundData Clone() {
      return new MsgTotalRoundData(this);
    }

    /// <summary>Field number for the "round_data" field.</summary>
    public const int RoundDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FingerGuess.MsgRoundData> _repeated_roundData_codec
        = pb::FieldCodec.ForMessage(10, global::FingerGuess.MsgRoundData.Parser);
    private readonly pbc::RepeatedField<global::FingerGuess.MsgRoundData> roundData_ = new pbc::RepeatedField<global::FingerGuess.MsgRoundData>();
    /// <summary>
    ///每局数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FingerGuess.MsgRoundData> RoundData {
      get { return roundData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgTotalRoundData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgTotalRoundData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundData_.Equals(other.roundData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundData_.WriteTo(output, _repeated_roundData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundData_.WriteTo(ref output, _repeated_roundData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roundData_.CalculateSize(_repeated_roundData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgTotalRoundData other) {
      if (other == null) {
        return;
      }
      roundData_.Add(other.roundData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundData_.AddEntriesFrom(input, _repeated_roundData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundData_.AddEntriesFrom(ref input, _repeated_roundData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///每日数据
  /// </summary>
  public sealed partial class MsgDayData : pb::IMessage<MsgDayData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgDayData> _parser = new pb::MessageParser<MsgDayData>(() => new MsgDayData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgDayData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FingerGuess.FingerGuessReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgDayData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgDayData(MsgDayData other) : this() {
      time_ = other.time_;
      totalPlayCount_ = other.totalPlayCount_;
      loseCount_ = other.loseCount_;
      loseGold_ = other.loseGold_;
      winCount_ = other.winCount_;
      winGold_ = other.winGold_;
      totalGold_ = other.totalGold_;
      surplusGold_ = other.surplusGold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgDayData Clone() {
      return new MsgDayData(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private string time_ = "";
    /// <summary>
    ///日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_play_count" field.</summary>
    public const int TotalPlayCountFieldNumber = 2;
    private int totalPlayCount_;
    /// <summary>
    ///总游玩次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPlayCount {
      get { return totalPlayCount_; }
      set {
        totalPlayCount_ = value;
      }
    }

    /// <summary>Field number for the "lose_count" field.</summary>
    public const int LoseCountFieldNumber = 3;
    private int loseCount_;
    /// <summary>
    ///输次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoseCount {
      get { return loseCount_; }
      set {
        loseCount_ = value;
      }
    }

    /// <summary>Field number for the "lose_gold" field.</summary>
    public const int LoseGoldFieldNumber = 4;
    private long loseGold_;
    /// <summary>
    ///输金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LoseGold {
      get { return loseGold_; }
      set {
        loseGold_ = value;
      }
    }

    /// <summary>Field number for the "win_count" field.</summary>
    public const int WinCountFieldNumber = 5;
    private int winCount_;
    /// <summary>
    ///赢次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinCount {
      get { return winCount_; }
      set {
        winCount_ = value;
      }
    }

    /// <summary>Field number for the "win_gold" field.</summary>
    public const int WinGoldFieldNumber = 6;
    private long winGold_;
    /// <summary>
    ///赢金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WinGold {
      get { return winGold_; }
      set {
        winGold_ = value;
      }
    }

    /// <summary>Field number for the "total_gold" field.</summary>
    public const int TotalGoldFieldNumber = 7;
    private long totalGold_;
    /// <summary>
    ///总输赢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalGold {
      get { return totalGold_; }
      set {
        totalGold_ = value;
      }
    }

    /// <summary>Field number for the "surplus_gold" field.</summary>
    public const int SurplusGoldFieldNumber = 8;
    private long surplusGold_;
    /// <summary>
    ///当日剩余金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SurplusGold {
      get { return surplusGold_; }
      set {
        surplusGold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgDayData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgDayData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      if (TotalPlayCount != other.TotalPlayCount) return false;
      if (LoseCount != other.LoseCount) return false;
      if (LoseGold != other.LoseGold) return false;
      if (WinCount != other.WinCount) return false;
      if (WinGold != other.WinGold) return false;
      if (TotalGold != other.TotalGold) return false;
      if (SurplusGold != other.SurplusGold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (TotalPlayCount != 0) hash ^= TotalPlayCount.GetHashCode();
      if (LoseCount != 0) hash ^= LoseCount.GetHashCode();
      if (LoseGold != 0L) hash ^= LoseGold.GetHashCode();
      if (WinCount != 0) hash ^= WinCount.GetHashCode();
      if (WinGold != 0L) hash ^= WinGold.GetHashCode();
      if (TotalGold != 0L) hash ^= TotalGold.GetHashCode();
      if (SurplusGold != 0L) hash ^= SurplusGold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Time.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Time);
      }
      if (TotalPlayCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalPlayCount);
      }
      if (LoseCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LoseCount);
      }
      if (LoseGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LoseGold);
      }
      if (WinCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WinCount);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(WinGold);
      }
      if (TotalGold != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalGold);
      }
      if (SurplusGold != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(SurplusGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Time.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Time);
      }
      if (TotalPlayCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalPlayCount);
      }
      if (LoseCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LoseCount);
      }
      if (LoseGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LoseGold);
      }
      if (WinCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WinCount);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(WinGold);
      }
      if (TotalGold != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalGold);
      }
      if (SurplusGold != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(SurplusGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (TotalPlayCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayCount);
      }
      if (LoseCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoseCount);
      }
      if (LoseGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LoseGold);
      }
      if (WinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinCount);
      }
      if (WinGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinGold);
      }
      if (TotalGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalGold);
      }
      if (SurplusGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SurplusGold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgDayData other) {
      if (other == null) {
        return;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.TotalPlayCount != 0) {
        TotalPlayCount = other.TotalPlayCount;
      }
      if (other.LoseCount != 0) {
        LoseCount = other.LoseCount;
      }
      if (other.LoseGold != 0L) {
        LoseGold = other.LoseGold;
      }
      if (other.WinCount != 0) {
        WinCount = other.WinCount;
      }
      if (other.WinGold != 0L) {
        WinGold = other.WinGold;
      }
      if (other.TotalGold != 0L) {
        TotalGold = other.TotalGold;
      }
      if (other.SurplusGold != 0L) {
        SurplusGold = other.SurplusGold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Time = input.ReadString();
            break;
          }
          case 16: {
            TotalPlayCount = input.ReadInt32();
            break;
          }
          case 24: {
            LoseCount = input.ReadInt32();
            break;
          }
          case 32: {
            LoseGold = input.ReadInt64();
            break;
          }
          case 40: {
            WinCount = input.ReadInt32();
            break;
          }
          case 48: {
            WinGold = input.ReadInt64();
            break;
          }
          case 56: {
            TotalGold = input.ReadInt64();
            break;
          }
          case 64: {
            SurplusGold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Time = input.ReadString();
            break;
          }
          case 16: {
            TotalPlayCount = input.ReadInt32();
            break;
          }
          case 24: {
            LoseCount = input.ReadInt32();
            break;
          }
          case 32: {
            LoseGold = input.ReadInt64();
            break;
          }
          case 40: {
            WinCount = input.ReadInt32();
            break;
          }
          case 48: {
            WinGold = input.ReadInt64();
            break;
          }
          case 56: {
            TotalGold = input.ReadInt64();
            break;
          }
          case 64: {
            SurplusGold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///总的每局数据
  /// </summary>
  public sealed partial class MsgTotalDayData : pb::IMessage<MsgTotalDayData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgTotalDayData> _parser = new pb::MessageParser<MsgTotalDayData>(() => new MsgTotalDayData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgTotalDayData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FingerGuess.FingerGuessReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTotalDayData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTotalDayData(MsgTotalDayData other) : this() {
      dailyData_ = other.dailyData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTotalDayData Clone() {
      return new MsgTotalDayData(this);
    }

    /// <summary>Field number for the "daily_data" field.</summary>
    public const int DailyDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FingerGuess.MsgDayData> _repeated_dailyData_codec
        = pb::FieldCodec.ForMessage(10, global::FingerGuess.MsgDayData.Parser);
    private readonly pbc::RepeatedField<global::FingerGuess.MsgDayData> dailyData_ = new pbc::RepeatedField<global::FingerGuess.MsgDayData>();
    /// <summary>
    ///每日数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FingerGuess.MsgDayData> DailyData {
      get { return dailyData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgTotalDayData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgTotalDayData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dailyData_.Equals(other.dailyData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dailyData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dailyData_.WriteTo(output, _repeated_dailyData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dailyData_.WriteTo(ref output, _repeated_dailyData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dailyData_.CalculateSize(_repeated_dailyData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgTotalDayData other) {
      if (other == null) {
        return;
      }
      dailyData_.Add(other.dailyData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dailyData_.AddEntriesFrom(input, _repeated_dailyData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dailyData_.AddEntriesFrom(ref input, _repeated_dailyData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///查询数据记录
  /// </summary>
  public sealed partial class MsgQueryRecord : pb::IMessage<MsgQueryRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgQueryRecord> _parser = new pb::MessageParser<MsgQueryRecord>(() => new MsgQueryRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgQueryRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FingerGuess.FingerGuessReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgQueryRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgQueryRecord(MsgQueryRecord other) : this() {
      page_ = other.page_;
      num_ = other.num_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgQueryRecord Clone() {
      return new MsgQueryRecord(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    ///当前页(从0开始)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    /// <summary>
    ///每页条数(最大每页50条)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    /// <summary>
    ///1:每局数据 2:每日数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgQueryRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgQueryRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (Num != other.Num) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgQueryRecord other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
