// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/BattleRoyale.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BattleRoyale {

  /// <summary>Holder for reflection information generated from Proto/SubGame/BattleRoyale.proto</summary>
  public static partial class BattleRoyaleReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/BattleRoyale.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleRoyaleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBQcm90by9TdWJHYW1lL0JhdHRsZVJveWFsZS5wcm90bxIMQmF0dGxlUm95",
            "YWxlIj8KD01zZ0NoYWlyQmV0RGF0YRIQCghjaGFpcl9pZBgBIAEoBRIMCgRn",
            "b2xkGAIgASgDEgwKBGFyZWEYAyABKAUiLgoNTXNnUmVjb3JkRGF0YRIMCgRh",
            "cmVhGAEgASgFEg8KB3Nlcmlfbm8YAiABKAUi0AEKDE1zZ1NjZW5lSW5mbxIL",
            "CgNiZXQYASADKAUSKwoGcmVjb3JkGAIgAygLMhsuQmF0dGxlUm95YWxlLk1z",
            "Z1JlY29yZERhdGESEQoJYmV0X2xpbWl0GAMgASgFEhIKCnN0YXRlX3RpbWUY",
            "BCADKAUSEQoJcGFzc190aW1lGAUgASgFEg0KBXN0YXRlGAYgASgFEhAKCG1h",
            "eF9hcmVhGAcgASgFEisKBGRhdGEYCCADKAsyHS5CYXR0bGVSb3lhbGUuTXNn",
            "Q2hhaXJCZXREYXRhIiUKBk1zZ0JldBINCgVpbmRleBgBIAEoBRIMCgRhcmVh",
            "GAIgASgFIkYKCk1zZ0JldFJlc3ASEAoIY2hhaXJfaWQYASABKAUSJgoIYmV0",
            "X2luZm8YAiABKAsyFC5CYXR0bGVSb3lhbGUuTXNnQmV0IkAKDE1zZ0NoYW5n",
            "ZUJldBIQCghjdXJfYXJlYRgBIAEoBRIQCghuZXdfYXJlYRgCIAEoBRIMCgRn",
            "b2xkGAMgASgDIlIKEE1zZ0NoYW5nZUJldFJlc3ASEAoIY2hhaXJfaWQYASAB",
            "KAUSLAoIYmV0X2luZm8YAiABKAsyGi5CYXR0bGVSb3lhbGUuTXNnQ2hhbmdl",
            "QmV0IiwKCk1zZ1dpbkRhdGESEAoIY2hhaXJfaWQYASABKAUSDAoEZ29sZBgC",
            "IAEoAyJECglNc2dSZXN1bHQSDAoEYXJlYRgBIAEoBRIpCgdyZXN1bHRzGAIg",
            "AygLMhguQmF0dGxlUm95YWxlLk1zZ1dpbkRhdGEq8gEKDUVNc2dJRFN1Ykdh",
            "bWUSFQoRTXNnSURTdWJHYW1lX051bGwQABIUChBNc2dJRFN1YkdhbWVfQmV0",
            "EAESGAoUTXNnSURTdWJHYW1lX0JldFJlc3AQAhIaChZNc2dJRFN1YkdhbWVf",
            "QmV0Q2hhbmdlEAMSHgoaTXNnSURTdWJHYW1lX0JldENoYW5nZVJlc3AQBBIf",
            "ChtNc2dJRFN1YkdhbWVfR2FtZVJlc3VsdFJlc3AQBxIgChxNc2dJRFN1Ykdh",
            "bWVfTm90aWZ5U3RhdGVSZXNwEAgSGwoXU1VCX1NfQ0hFQ0tfUk9CT1RfTEVB",
            "VkUQCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BattleRoyale.EMsgIDSubGame), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgChairBetData), global::BattleRoyale.MsgChairBetData.Parser, new[]{ "ChairId", "Gold", "Area" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgRecordData), global::BattleRoyale.MsgRecordData.Parser, new[]{ "Area", "SeriNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgSceneInfo), global::BattleRoyale.MsgSceneInfo.Parser, new[]{ "Bet", "Record", "BetLimit", "StateTime", "PassTime", "State", "MaxArea", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgBet), global::BattleRoyale.MsgBet.Parser, new[]{ "Index", "Area" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgBetResp), global::BattleRoyale.MsgBetResp.Parser, new[]{ "ChairId", "BetInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgChangeBet), global::BattleRoyale.MsgChangeBet.Parser, new[]{ "CurArea", "NewArea", "Gold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgChangeBetResp), global::BattleRoyale.MsgChangeBetResp.Parser, new[]{ "ChairId", "BetInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgWinData), global::BattleRoyale.MsgWinData.Parser, new[]{ "ChairId", "Gold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BattleRoyale.MsgResult), global::BattleRoyale.MsgResult.Parser, new[]{ "Area", "Results" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EMsgIDSubGame {
    [pbr::OriginalName("MsgIDSubGame_Null")] MsgIdsubGameNull = 0,
    /// <summary>
    ///玩家下注(MsgBet)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_Bet")] MsgIdsubGameBet = 1,
    /// <summary>
    ///玩家下注返回(MsgBetResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_BetResp")] MsgIdsubGameBetResp = 2,
    /// <summary>
    ///玩家更换下注区域(MsgChangeBet)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_BetChange")] MsgIdsubGameBetChange = 3,
    /// <summary>
    ///玩家更换下注区域结果(MsgChangeBetResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_BetChangeResp")] MsgIdsubGameBetChangeResp = 4,
    /// <summary>
    ///游戏结果(MsgResult)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_GameResultResp")] MsgIdsubGameGameResultResp = 7,
    /// <summary>
    ///游戏状态(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_NotifyStateResp")] MsgIdsubGameNotifyStateResp = 8,
    /// <summary>
    ///检测机器人退出
    /// </summary>
    [pbr::OriginalName("SUB_S_CHECK_ROBOT_LEAVE")] SubSCheckRobotLeave = 9,
  }

  #endregion

  #region Messages
  public sealed partial class MsgChairBetData : pb::IMessage<MsgChairBetData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgChairBetData> _parser = new pb::MessageParser<MsgChairBetData>(() => new MsgChairBetData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgChairBetData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChairBetData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChairBetData(MsgChairBetData other) : this() {
      chairId_ = other.chairId_;
      gold_ = other.gold_;
      area_ = other.area_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChairBetData Clone() {
      return new MsgChairBetData(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 2;
    private long gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 3;
    private int area_;
    /// <summary>
    ///下注区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgChairBetData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgChairBetData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (Gold != other.Gold) return false;
      if (Area != other.Area) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (Area != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (Area != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgChairBetData other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
          case 24: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
          case 24: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgRecordData : pb::IMessage<MsgRecordData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgRecordData> _parser = new pb::MessageParser<MsgRecordData>(() => new MsgRecordData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgRecordData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRecordData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRecordData(MsgRecordData other) : this() {
      area_ = other.area_;
      seriNo_ = other.seriNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRecordData Clone() {
      return new MsgRecordData(this);
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 1;
    private int area_;
    /// <summary>
    ///区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "seri_no" field.</summary>
    public const int SeriNoFieldNumber = 2;
    private int seriNo_;
    /// <summary>
    ///局数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SeriNo {
      get { return seriNo_; }
      set {
        seriNo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgRecordData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgRecordData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Area != other.Area) return false;
      if (SeriNo != other.SeriNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Area != 0) hash ^= Area.GetHashCode();
      if (SeriNo != 0) hash ^= SeriNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Area != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Area);
      }
      if (SeriNo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeriNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Area != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Area);
      }
      if (SeriNo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeriNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (SeriNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeriNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgRecordData other) {
      if (other == null) {
        return;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      if (other.SeriNo != 0) {
        SeriNo = other.SeriNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Area = input.ReadInt32();
            break;
          }
          case 16: {
            SeriNo = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Area = input.ReadInt32();
            break;
          }
          case 16: {
            SeriNo = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///场景消息
  /// </summary>
  public sealed partial class MsgSceneInfo : pb::IMessage<MsgSceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgSceneInfo> _parser = new pb::MessageParser<MsgSceneInfo>(() => new MsgSceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgSceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo(MsgSceneInfo other) : this() {
      bet_ = other.bet_.Clone();
      record_ = other.record_.Clone();
      betLimit_ = other.betLimit_;
      stateTime_ = other.stateTime_.Clone();
      passTime_ = other.passTime_;
      state_ = other.state_;
      maxArea_ = other.maxArea_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo Clone() {
      return new MsgSceneInfo(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_bet_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> bet_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///下注配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Bet {
      get { return bet_; }
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BattleRoyale.MsgRecordData> _repeated_record_codec
        = pb::FieldCodec.ForMessage(18, global::BattleRoyale.MsgRecordData.Parser);
    private readonly pbc::RepeatedField<global::BattleRoyale.MsgRecordData> record_ = new pbc::RepeatedField<global::BattleRoyale.MsgRecordData>();
    /// <summary>
    ///游戏记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BattleRoyale.MsgRecordData> Record {
      get { return record_; }
    }

    /// <summary>Field number for the "bet_limit" field.</summary>
    public const int BetLimitFieldNumber = 3;
    private int betLimit_;
    /// <summary>
    ///下注最大限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetLimit {
      get { return betLimit_; }
      set {
        betLimit_ = value;
      }
    }

    /// <summary>Field number for the "state_time" field.</summary>
    public const int StateTimeFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_stateTime_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> stateTime_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///时间状态(0:准备 1:下注 2:结算)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> StateTime {
      get { return stateTime_; }
    }

    /// <summary>Field number for the "pass_time" field.</summary>
    public const int PassTimeFieldNumber = 5;
    private int passTime_;
    /// <summary>
    ///当前状态已过时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PassTime {
      get { return passTime_; }
      set {
        passTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private int state_;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "max_area" field.</summary>
    public const int MaxAreaFieldNumber = 7;
    private int maxArea_;
    /// <summary>
    ///最大下注区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxArea {
      get { return maxArea_; }
      set {
        maxArea_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 8;
    private static readonly pb::FieldCodec<global::BattleRoyale.MsgChairBetData> _repeated_data_codec
        = pb::FieldCodec.ForMessage(66, global::BattleRoyale.MsgChairBetData.Parser);
    private readonly pbc::RepeatedField<global::BattleRoyale.MsgChairBetData> data_ = new pbc::RepeatedField<global::BattleRoyale.MsgChairBetData>();
    /// <summary>
    ///当前桌子上下注分布
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BattleRoyale.MsgChairBetData> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgSceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgSceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bet_.Equals(other.bet_)) return false;
      if(!record_.Equals(other.record_)) return false;
      if (BetLimit != other.BetLimit) return false;
      if(!stateTime_.Equals(other.stateTime_)) return false;
      if (PassTime != other.PassTime) return false;
      if (State != other.State) return false;
      if (MaxArea != other.MaxArea) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bet_.GetHashCode();
      hash ^= record_.GetHashCode();
      if (BetLimit != 0) hash ^= BetLimit.GetHashCode();
      hash ^= stateTime_.GetHashCode();
      if (PassTime != 0) hash ^= PassTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (MaxArea != 0) hash ^= MaxArea.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bet_.WriteTo(output, _repeated_bet_codec);
      record_.WriteTo(output, _repeated_record_codec);
      if (BetLimit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetLimit);
      }
      stateTime_.WriteTo(output, _repeated_stateTime_codec);
      if (PassTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PassTime);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (MaxArea != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxArea);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bet_.WriteTo(ref output, _repeated_bet_codec);
      record_.WriteTo(ref output, _repeated_record_codec);
      if (BetLimit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetLimit);
      }
      stateTime_.WriteTo(ref output, _repeated_stateTime_codec);
      if (PassTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PassTime);
      }
      if (State != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(State);
      }
      if (MaxArea != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxArea);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bet_.CalculateSize(_repeated_bet_codec);
      size += record_.CalculateSize(_repeated_record_codec);
      if (BetLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetLimit);
      }
      size += stateTime_.CalculateSize(_repeated_stateTime_codec);
      if (PassTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (MaxArea != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxArea);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgSceneInfo other) {
      if (other == null) {
        return;
      }
      bet_.Add(other.bet_);
      record_.Add(other.record_);
      if (other.BetLimit != 0) {
        BetLimit = other.BetLimit;
      }
      stateTime_.Add(other.stateTime_);
      if (other.PassTime != 0) {
        PassTime = other.PassTime;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.MaxArea != 0) {
        MaxArea = other.MaxArea;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            bet_.AddEntriesFrom(input, _repeated_bet_codec);
            break;
          }
          case 18: {
            record_.AddEntriesFrom(input, _repeated_record_codec);
            break;
          }
          case 24: {
            BetLimit = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            stateTime_.AddEntriesFrom(input, _repeated_stateTime_codec);
            break;
          }
          case 40: {
            PassTime = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
          case 56: {
            MaxArea = input.ReadInt32();
            break;
          }
          case 66: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            bet_.AddEntriesFrom(ref input, _repeated_bet_codec);
            break;
          }
          case 18: {
            record_.AddEntriesFrom(ref input, _repeated_record_codec);
            break;
          }
          case 24: {
            BetLimit = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            stateTime_.AddEntriesFrom(ref input, _repeated_stateTime_codec);
            break;
          }
          case 40: {
            PassTime = input.ReadInt32();
            break;
          }
          case 48: {
            State = input.ReadInt32();
            break;
          }
          case 56: {
            MaxArea = input.ReadInt32();
            break;
          }
          case 66: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgBet : pb::IMessage<MsgBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgBet> _parser = new pb::MessageParser<MsgBet>(() => new MsgBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet(MsgBet other) : this() {
      index_ = other.index_;
      area_ = other.area_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet Clone() {
      return new MsgBet(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    /// <summary>
    ///下注金额下标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///下注区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Area != other.Area) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgBet other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgBetResp : pb::IMessage<MsgBetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgBetResp> _parser = new pb::MessageParser<MsgBetResp>(() => new MsgBetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgBetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp(MsgBetResp other) : this() {
      chairId_ = other.chairId_;
      betInfo_ = other.betInfo_ != null ? other.betInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp Clone() {
      return new MsgBetResp(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///下注座位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_info" field.</summary>
    public const int BetInfoFieldNumber = 2;
    private global::BattleRoyale.MsgBet betInfo_;
    /// <summary>
    ///下注信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BattleRoyale.MsgBet BetInfo {
      get { return betInfo_; }
      set {
        betInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgBetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgBetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (!object.Equals(BetInfo, other.BetInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (betInfo_ != null) hash ^= BetInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (betInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BetInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgBetResp other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.betInfo_ != null) {
        if (betInfo_ == null) {
          BetInfo = new global::BattleRoyale.MsgBet();
        }
        BetInfo.MergeFrom(other.BetInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (betInfo_ == null) {
              BetInfo = new global::BattleRoyale.MsgBet();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (betInfo_ == null) {
              BetInfo = new global::BattleRoyale.MsgBet();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家转投
  /// </summary>
  public sealed partial class MsgChangeBet : pb::IMessage<MsgChangeBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgChangeBet> _parser = new pb::MessageParser<MsgChangeBet>(() => new MsgChangeBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgChangeBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChangeBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChangeBet(MsgChangeBet other) : this() {
      curArea_ = other.curArea_;
      newArea_ = other.newArea_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChangeBet Clone() {
      return new MsgChangeBet(this);
    }

    /// <summary>Field number for the "cur_area" field.</summary>
    public const int CurAreaFieldNumber = 1;
    private int curArea_;
    /// <summary>
    ///当前投注区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurArea {
      get { return curArea_; }
      set {
        curArea_ = value;
      }
    }

    /// <summary>Field number for the "new_area" field.</summary>
    public const int NewAreaFieldNumber = 2;
    private int newArea_;
    /// <summary>
    ///新区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewArea {
      get { return newArea_; }
      set {
        newArea_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 3;
    private long gold_;
    /// <summary>
    ///金币 (客户端请求消息可不发此字段)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgChangeBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgChangeBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurArea != other.CurArea) return false;
      if (NewArea != other.NewArea) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurArea != 0) hash ^= CurArea.GetHashCode();
      if (NewArea != 0) hash ^= NewArea.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurArea != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurArea);
      }
      if (NewArea != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewArea);
      }
      if (Gold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurArea != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurArea);
      }
      if (NewArea != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewArea);
      }
      if (Gold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurArea != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurArea);
      }
      if (NewArea != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewArea);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgChangeBet other) {
      if (other == null) {
        return;
      }
      if (other.CurArea != 0) {
        CurArea = other.CurArea;
      }
      if (other.NewArea != 0) {
        NewArea = other.NewArea;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurArea = input.ReadInt32();
            break;
          }
          case 16: {
            NewArea = input.ReadInt32();
            break;
          }
          case 24: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurArea = input.ReadInt32();
            break;
          }
          case 16: {
            NewArea = input.ReadInt32();
            break;
          }
          case 24: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家转投返回
  /// </summary>
  public sealed partial class MsgChangeBetResp : pb::IMessage<MsgChangeBetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgChangeBetResp> _parser = new pb::MessageParser<MsgChangeBetResp>(() => new MsgChangeBetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgChangeBetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChangeBetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChangeBetResp(MsgChangeBetResp other) : this() {
      chairId_ = other.chairId_;
      betInfo_ = other.betInfo_ != null ? other.betInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgChangeBetResp Clone() {
      return new MsgChangeBetResp(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家座位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_info" field.</summary>
    public const int BetInfoFieldNumber = 2;
    private global::BattleRoyale.MsgChangeBet betInfo_;
    /// <summary>
    ///下注信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BattleRoyale.MsgChangeBet BetInfo {
      get { return betInfo_; }
      set {
        betInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgChangeBetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgChangeBetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (!object.Equals(BetInfo, other.BetInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (betInfo_ != null) hash ^= BetInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (betInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BetInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgChangeBetResp other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.betInfo_ != null) {
        if (betInfo_ == null) {
          BetInfo = new global::BattleRoyale.MsgChangeBet();
        }
        BetInfo.MergeFrom(other.BetInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (betInfo_ == null) {
              BetInfo = new global::BattleRoyale.MsgChangeBet();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (betInfo_ == null) {
              BetInfo = new global::BattleRoyale.MsgChangeBet();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgWinData : pb::IMessage<MsgWinData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgWinData> _parser = new pb::MessageParser<MsgWinData>(() => new MsgWinData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgWinData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgWinData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgWinData(MsgWinData other) : this() {
      chairId_ = other.chairId_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgWinData Clone() {
      return new MsgWinData(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///座位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 2;
    private long gold_;
    /// <summary>
    ///金币输赢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgWinData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgWinData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgWinData other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgResult : pb::IMessage<MsgResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgResult> _parser = new pb::MessageParser<MsgResult>(() => new MsgResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BattleRoyale.BattleRoyaleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult(MsgResult other) : this() {
      area_ = other.area_;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult Clone() {
      return new MsgResult(this);
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 1;
    private int area_;
    /// <summary>
    ///输家区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BattleRoyale.MsgWinData> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::BattleRoyale.MsgWinData.Parser);
    private readonly pbc::RepeatedField<global::BattleRoyale.MsgWinData> results_ = new pbc::RepeatedField<global::BattleRoyale.MsgWinData>();
    /// <summary>
    ///输赢情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BattleRoyale.MsgWinData> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Area != other.Area) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Area != 0) hash ^= Area.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Area != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Area);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Area != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Area);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgResult other) {
      if (other == null) {
        return;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Area = input.ReadInt32();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Area = input.ReadInt32();
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
