// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/Crash.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CRASH {

  /// <summary>Holder for reflection information generated from Proto/SubGame/Crash.proto</summary>
  public static partial class CrashReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/Crash.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CrashReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90by9TdWJHYW1lL0NyYXNoLnByb3RvEgVDUkFTSCJNCg1zQzJTUGxh",
            "eWVyQmV0EhIKCmFyZWFfaW5kZXgYASABKAUSEQoJYmV0X2luZGV4GAIgASgF",
            "EhUKDWRvdF9vZGRfaW5kZXgYAyABKAUi5gEKDFNDX1NjZW5lSW5mbxIRCglj",
            "dXJfc3RhdGUYASABKAUSEwoLcmVtYWluX3RpbWUYAiABKAUSEgoKcGxheWVy",
            "X2JldBgDIAMoBRIXCg9wbGF5ZXJfd2luX2dvbGQYBCADKAMSGgoScGxheWVy",
            "X3dpbl9kb3Rfb2RkGAUgAygFEh4KFnBsYXllcl90b3RhbF93aW5fc29jcmUY",
            "BiADKAMSGAoQcGxheWVyX21heF9zY29yZRgHIAMoAxITCgtoaXN0b3J5X251",
            "bRgIIAEoBRIWCg5oaXN0b3J5X3Jlc3VsdBgJIAMoBSJBCg1zUzJDUGxheWVy",
            "QmV0Eg8KB2NoYWlyaWQYASABKAUSEgoKYXJlYV9pbmRleBgCIAEoBRILCgNi",
            "ZXQYAyABKAUiLQoNc1MyQ0NhbmNlbEJldBIPCgdjaGFpcmlkGAEgASgFEgsK",
            "A2JldBgCIAEoBSJTCg1zUzJDUGxheWVyRG90Eg8KB2NoYWlyaWQYASABKAUS",
            "EgoKYXJlYV9pbmRleBgCIAEoBRILCgNvZGQYAyABKAUSEAoId2luX2dvbGQY",
            "BCABKAMiNgoSc1MyQ05vdGlmeVByb2dyZXNzEg8KB2lzX2Jvb20YASABKAgS",
            "DwoHY3VyX29kZBgCIAEoBSrVAQoLRU1zZ0lEQ1JBU0gSDgoKU1VCX0NTX0Jl",
            "dBAAEhQKEFNVQl9DU19DYW5jZWxCZXQQARIUChBTVUJfQ1NfUGxheWVyRG90",
            "EAISDgoKU1VCX1NDX0JldBADEhQKEFNVQl9TQ19DYW5jZWxCZXQQBBIUChBT",
            "VUJfU0NfUGxheWVyRG90EAUSGQoVU1VCX1NDX05vdGlmeVByb2dyZXNzEAYS",
            "FgoSU1VCX1NDX0NoYW5nZVN0YXRlEAcSGwoXU1VCX1NfQ0hFQ0tfUk9CT1Rf",
            "TEVBVkUQCGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CRASH.EMsgIDCRASH), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CRASH.sC2SPlayerBet), global::CRASH.sC2SPlayerBet.Parser, new[]{ "AreaIndex", "BetIndex", "DotOddIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CRASH.SC_SceneInfo), global::CRASH.SC_SceneInfo.Parser, new[]{ "CurState", "RemainTime", "PlayerBet", "PlayerWinGold", "PlayerWinDotOdd", "PlayerTotalWinSocre", "PlayerMaxScore", "HistoryNum", "HistoryResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CRASH.sS2CPlayerBet), global::CRASH.sS2CPlayerBet.Parser, new[]{ "Chairid", "AreaIndex", "Bet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CRASH.sS2CCancelBet), global::CRASH.sS2CCancelBet.Parser, new[]{ "Chairid", "Bet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CRASH.sS2CPlayerDot), global::CRASH.sS2CPlayerDot.Parser, new[]{ "Chairid", "AreaIndex", "Odd", "WinGold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CRASH.sS2CNotifyProgress), global::CRASH.sS2CNotifyProgress.Parser, new[]{ "IsBoom", "CurOdd" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EMsgIDCRASH {
    /// <summary>
    ///押注(sC2SPlayerBet)
    /// </summary>
    [pbr::OriginalName("SUB_CS_Bet")] SubCsBet = 0,
    /// <summary>
    ///取消下注(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("SUB_CS_CancelBet")] SubCsCancelBet = 1,
    /// <summary>
    ///玩家打点(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("SUB_CS_PlayerDot")] SubCsPlayerDot = 2,
    /// <summary>
    ///玩家下注(sS2CPlayerBet)
    /// </summary>
    [pbr::OriginalName("SUB_SC_Bet")] SubScBet = 3,
    /// <summary>
    ///取消下注(sS2CCancelBet)
    /// </summary>
    [pbr::OriginalName("SUB_SC_CancelBet")] SubScCancelBet = 4,
    /// <summary>
    ///玩家打点(sS2CPlayerDot)
    /// </summary>
    [pbr::OriginalName("SUB_SC_PlayerDot")] SubScPlayerDot = 5,
    /// <summary>
    ///通知进度(sS2CNotifyProgress)
    /// </summary>
    [pbr::OriginalName("SUB_SC_NotifyProgress")] SubScNotifyProgress = 6,
    /// <summary>
    ///通知状态更改(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("SUB_SC_ChangeState")] SubScChangeState = 7,
    /// <summary>
    ///检测机器人退出
    /// </summary>
    [pbr::OriginalName("SUB_S_CHECK_ROBOT_LEAVE")] SubSCheckRobotLeave = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 押注		
  /// </summary>
  public sealed partial class sC2SPlayerBet : pb::IMessage<sC2SPlayerBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<sC2SPlayerBet> _parser = new pb::MessageParser<sC2SPlayerBet>(() => new sC2SPlayerBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<sC2SPlayerBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CRASH.CrashReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sC2SPlayerBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sC2SPlayerBet(sC2SPlayerBet other) : this() {
      areaIndex_ = other.areaIndex_;
      betIndex_ = other.betIndex_;
      dotOddIndex_ = other.dotOddIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sC2SPlayerBet Clone() {
      return new sC2SPlayerBet(this);
    }

    /// <summary>Field number for the "area_index" field.</summary>
    public const int AreaIndexFieldNumber = 1;
    private int areaIndex_;
    /// <summary>
    ///索引（0，1，2）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaIndex {
      get { return areaIndex_; }
      set {
        areaIndex_ = value;
      }
    }

    /// <summary>Field number for the "bet_index" field.</summary>
    public const int BetIndexFieldNumber = 2;
    private int betIndex_;
    /// <summary>
    ///押注索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetIndex {
      get { return betIndex_; }
      set {
        betIndex_ = value;
      }
    }

    /// <summary>Field number for the "dot_odd_index" field.</summary>
    public const int DotOddIndexFieldNumber = 3;
    private int dotOddIndex_;
    /// <summary>
    ///打点倍数索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DotOddIndex {
      get { return dotOddIndex_; }
      set {
        dotOddIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as sC2SPlayerBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(sC2SPlayerBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaIndex != other.AreaIndex) return false;
      if (BetIndex != other.BetIndex) return false;
      if (DotOddIndex != other.DotOddIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaIndex != 0) hash ^= AreaIndex.GetHashCode();
      if (BetIndex != 0) hash ^= BetIndex.GetHashCode();
      if (DotOddIndex != 0) hash ^= DotOddIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AreaIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaIndex);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (DotOddIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DotOddIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AreaIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaIndex);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (DotOddIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DotOddIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AreaIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaIndex);
      }
      if (BetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetIndex);
      }
      if (DotOddIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DotOddIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(sC2SPlayerBet other) {
      if (other == null) {
        return;
      }
      if (other.AreaIndex != 0) {
        AreaIndex = other.AreaIndex;
      }
      if (other.BetIndex != 0) {
        BetIndex = other.BetIndex;
      }
      if (other.DotOddIndex != 0) {
        DotOddIndex = other.DotOddIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaIndex = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
          case 24: {
            DotOddIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AreaIndex = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
          case 24: {
            DotOddIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///场景
  /// </summary>
  public sealed partial class SC_SceneInfo : pb::IMessage<SC_SceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SC_SceneInfo> _parser = new pb::MessageParser<SC_SceneInfo>(() => new SC_SceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_SceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CRASH.CrashReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_SceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_SceneInfo(SC_SceneInfo other) : this() {
      curState_ = other.curState_;
      remainTime_ = other.remainTime_;
      playerBet_ = other.playerBet_.Clone();
      playerWinGold_ = other.playerWinGold_.Clone();
      playerWinDotOdd_ = other.playerWinDotOdd_.Clone();
      playerTotalWinSocre_ = other.playerTotalWinSocre_.Clone();
      playerMaxScore_ = other.playerMaxScore_.Clone();
      historyNum_ = other.historyNum_;
      historyResult_ = other.historyResult_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_SceneInfo Clone() {
      return new SC_SceneInfo(this);
    }

    /// <summary>Field number for the "cur_state" field.</summary>
    public const int CurStateFieldNumber = 1;
    private int curState_;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurState {
      get { return curState_; }
      set {
        curState_ = value;
      }
    }

    /// <summary>Field number for the "remain_time" field.</summary>
    public const int RemainTimeFieldNumber = 2;
    private int remainTime_;
    /// <summary>
    ///剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainTime {
      get { return remainTime_; }
      set {
        remainTime_ = value;
      }
    }

    /// <summary>Field number for the "player_bet" field.</summary>
    public const int PlayerBetFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_playerBet_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> playerBet_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///玩家下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerBet {
      get { return playerBet_; }
    }

    /// <summary>Field number for the "player_win_gold" field.</summary>
    public const int PlayerWinGoldFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_playerWinGold_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> playerWinGold_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///玩家输赢金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> PlayerWinGold {
      get { return playerWinGold_; }
    }

    /// <summary>Field number for the "player_win_dot_odd" field.</summary>
    public const int PlayerWinDotOddFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_playerWinDotOdd_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> playerWinDotOdd_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///打点倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerWinDotOdd {
      get { return playerWinDotOdd_; }
    }

    /// <summary>Field number for the "player_total_win_socre" field.</summary>
    public const int PlayerTotalWinSocreFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_playerTotalWinSocre_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> playerTotalWinSocre_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///玩家总赢分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> PlayerTotalWinSocre {
      get { return playerTotalWinSocre_; }
    }

    /// <summary>Field number for the "player_max_score" field.</summary>
    public const int PlayerMaxScoreFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_playerMaxScore_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> playerMaxScore_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///玩家赢得最大分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> PlayerMaxScore {
      get { return playerMaxScore_; }
    }

    /// <summary>Field number for the "history_num" field.</summary>
    public const int HistoryNumFieldNumber = 8;
    private int historyNum_;
    /// <summary>
    ///历史记录条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HistoryNum {
      get { return historyNum_; }
      set {
        historyNum_ = value;
      }
    }

    /// <summary>Field number for the "history_result" field.</summary>
    public const int HistoryResultFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_historyResult_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> historyResult_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///历史记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> HistoryResult {
      get { return historyResult_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_SceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_SceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurState != other.CurState) return false;
      if (RemainTime != other.RemainTime) return false;
      if(!playerBet_.Equals(other.playerBet_)) return false;
      if(!playerWinGold_.Equals(other.playerWinGold_)) return false;
      if(!playerWinDotOdd_.Equals(other.playerWinDotOdd_)) return false;
      if(!playerTotalWinSocre_.Equals(other.playerTotalWinSocre_)) return false;
      if(!playerMaxScore_.Equals(other.playerMaxScore_)) return false;
      if (HistoryNum != other.HistoryNum) return false;
      if(!historyResult_.Equals(other.historyResult_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurState != 0) hash ^= CurState.GetHashCode();
      if (RemainTime != 0) hash ^= RemainTime.GetHashCode();
      hash ^= playerBet_.GetHashCode();
      hash ^= playerWinGold_.GetHashCode();
      hash ^= playerWinDotOdd_.GetHashCode();
      hash ^= playerTotalWinSocre_.GetHashCode();
      hash ^= playerMaxScore_.GetHashCode();
      if (HistoryNum != 0) hash ^= HistoryNum.GetHashCode();
      hash ^= historyResult_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurState);
      }
      if (RemainTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RemainTime);
      }
      playerBet_.WriteTo(output, _repeated_playerBet_codec);
      playerWinGold_.WriteTo(output, _repeated_playerWinGold_codec);
      playerWinDotOdd_.WriteTo(output, _repeated_playerWinDotOdd_codec);
      playerTotalWinSocre_.WriteTo(output, _repeated_playerTotalWinSocre_codec);
      playerMaxScore_.WriteTo(output, _repeated_playerMaxScore_codec);
      if (HistoryNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HistoryNum);
      }
      historyResult_.WriteTo(output, _repeated_historyResult_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurState);
      }
      if (RemainTime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RemainTime);
      }
      playerBet_.WriteTo(ref output, _repeated_playerBet_codec);
      playerWinGold_.WriteTo(ref output, _repeated_playerWinGold_codec);
      playerWinDotOdd_.WriteTo(ref output, _repeated_playerWinDotOdd_codec);
      playerTotalWinSocre_.WriteTo(ref output, _repeated_playerTotalWinSocre_codec);
      playerMaxScore_.WriteTo(ref output, _repeated_playerMaxScore_codec);
      if (HistoryNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HistoryNum);
      }
      historyResult_.WriteTo(ref output, _repeated_historyResult_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurState);
      }
      if (RemainTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainTime);
      }
      size += playerBet_.CalculateSize(_repeated_playerBet_codec);
      size += playerWinGold_.CalculateSize(_repeated_playerWinGold_codec);
      size += playerWinDotOdd_.CalculateSize(_repeated_playerWinDotOdd_codec);
      size += playerTotalWinSocre_.CalculateSize(_repeated_playerTotalWinSocre_codec);
      size += playerMaxScore_.CalculateSize(_repeated_playerMaxScore_codec);
      if (HistoryNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HistoryNum);
      }
      size += historyResult_.CalculateSize(_repeated_historyResult_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_SceneInfo other) {
      if (other == null) {
        return;
      }
      if (other.CurState != 0) {
        CurState = other.CurState;
      }
      if (other.RemainTime != 0) {
        RemainTime = other.RemainTime;
      }
      playerBet_.Add(other.playerBet_);
      playerWinGold_.Add(other.playerWinGold_);
      playerWinDotOdd_.Add(other.playerWinDotOdd_);
      playerTotalWinSocre_.Add(other.playerTotalWinSocre_);
      playerMaxScore_.Add(other.playerMaxScore_);
      if (other.HistoryNum != 0) {
        HistoryNum = other.HistoryNum;
      }
      historyResult_.Add(other.historyResult_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurState = input.ReadInt32();
            break;
          }
          case 16: {
            RemainTime = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            playerBet_.AddEntriesFrom(input, _repeated_playerBet_codec);
            break;
          }
          case 34:
          case 32: {
            playerWinGold_.AddEntriesFrom(input, _repeated_playerWinGold_codec);
            break;
          }
          case 42:
          case 40: {
            playerWinDotOdd_.AddEntriesFrom(input, _repeated_playerWinDotOdd_codec);
            break;
          }
          case 50:
          case 48: {
            playerTotalWinSocre_.AddEntriesFrom(input, _repeated_playerTotalWinSocre_codec);
            break;
          }
          case 58:
          case 56: {
            playerMaxScore_.AddEntriesFrom(input, _repeated_playerMaxScore_codec);
            break;
          }
          case 64: {
            HistoryNum = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            historyResult_.AddEntriesFrom(input, _repeated_historyResult_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurState = input.ReadInt32();
            break;
          }
          case 16: {
            RemainTime = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            playerBet_.AddEntriesFrom(ref input, _repeated_playerBet_codec);
            break;
          }
          case 34:
          case 32: {
            playerWinGold_.AddEntriesFrom(ref input, _repeated_playerWinGold_codec);
            break;
          }
          case 42:
          case 40: {
            playerWinDotOdd_.AddEntriesFrom(ref input, _repeated_playerWinDotOdd_codec);
            break;
          }
          case 50:
          case 48: {
            playerTotalWinSocre_.AddEntriesFrom(ref input, _repeated_playerTotalWinSocre_codec);
            break;
          }
          case 58:
          case 56: {
            playerMaxScore_.AddEntriesFrom(ref input, _repeated_playerMaxScore_codec);
            break;
          }
          case 64: {
            HistoryNum = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            historyResult_.AddEntriesFrom(ref input, _repeated_historyResult_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注
  /// </summary>
  public sealed partial class sS2CPlayerBet : pb::IMessage<sS2CPlayerBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<sS2CPlayerBet> _parser = new pb::MessageParser<sS2CPlayerBet>(() => new sS2CPlayerBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<sS2CPlayerBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CRASH.CrashReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CPlayerBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CPlayerBet(sS2CPlayerBet other) : this() {
      chairid_ = other.chairid_;
      areaIndex_ = other.areaIndex_;
      bet_ = other.bet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CPlayerBet Clone() {
      return new sS2CPlayerBet(this);
    }

    /// <summary>Field number for the "chairid" field.</summary>
    public const int ChairidFieldNumber = 1;
    private int chairid_;
    /// <summary>
    ///椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Chairid {
      get { return chairid_; }
      set {
        chairid_ = value;
      }
    }

    /// <summary>Field number for the "area_index" field.</summary>
    public const int AreaIndexFieldNumber = 2;
    private int areaIndex_;
    /// <summary>
    ///下注区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaIndex {
      get { return areaIndex_; }
      set {
        areaIndex_ = value;
      }
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 3;
    private int bet_;
    /// <summary>
    ///下注值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as sS2CPlayerBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(sS2CPlayerBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chairid != other.Chairid) return false;
      if (AreaIndex != other.AreaIndex) return false;
      if (Bet != other.Bet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Chairid != 0) hash ^= Chairid.GetHashCode();
      if (AreaIndex != 0) hash ^= AreaIndex.GetHashCode();
      if (Bet != 0) hash ^= Bet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Chairid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Chairid);
      }
      if (AreaIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AreaIndex);
      }
      if (Bet != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Chairid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Chairid);
      }
      if (AreaIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AreaIndex);
      }
      if (Bet != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Chairid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chairid);
      }
      if (AreaIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaIndex);
      }
      if (Bet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(sS2CPlayerBet other) {
      if (other == null) {
        return;
      }
      if (other.Chairid != 0) {
        Chairid = other.Chairid;
      }
      if (other.AreaIndex != 0) {
        AreaIndex = other.AreaIndex;
      }
      if (other.Bet != 0) {
        Bet = other.Bet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Chairid = input.ReadInt32();
            break;
          }
          case 16: {
            AreaIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Bet = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Chairid = input.ReadInt32();
            break;
          }
          case 16: {
            AreaIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Bet = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///取消下注			
  /// </summary>
  public sealed partial class sS2CCancelBet : pb::IMessage<sS2CCancelBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<sS2CCancelBet> _parser = new pb::MessageParser<sS2CCancelBet>(() => new sS2CCancelBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<sS2CCancelBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CRASH.CrashReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CCancelBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CCancelBet(sS2CCancelBet other) : this() {
      chairid_ = other.chairid_;
      bet_ = other.bet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CCancelBet Clone() {
      return new sS2CCancelBet(this);
    }

    /// <summary>Field number for the "chairid" field.</summary>
    public const int ChairidFieldNumber = 1;
    private int chairid_;
    /// <summary>
    ///椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Chairid {
      get { return chairid_; }
      set {
        chairid_ = value;
      }
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 2;
    private int bet_;
    /// <summary>
    ///下注值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as sS2CCancelBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(sS2CCancelBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chairid != other.Chairid) return false;
      if (Bet != other.Bet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Chairid != 0) hash ^= Chairid.GetHashCode();
      if (Bet != 0) hash ^= Bet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Chairid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Chairid);
      }
      if (Bet != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Chairid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Chairid);
      }
      if (Bet != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Chairid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chairid);
      }
      if (Bet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(sS2CCancelBet other) {
      if (other == null) {
        return;
      }
      if (other.Chairid != 0) {
        Chairid = other.Chairid;
      }
      if (other.Bet != 0) {
        Bet = other.Bet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Chairid = input.ReadInt32();
            break;
          }
          case 16: {
            Bet = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Chairid = input.ReadInt32();
            break;
          }
          case 16: {
            Bet = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///结果			
  /// </summary>
  public sealed partial class sS2CPlayerDot : pb::IMessage<sS2CPlayerDot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<sS2CPlayerDot> _parser = new pb::MessageParser<sS2CPlayerDot>(() => new sS2CPlayerDot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<sS2CPlayerDot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CRASH.CrashReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CPlayerDot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CPlayerDot(sS2CPlayerDot other) : this() {
      chairid_ = other.chairid_;
      areaIndex_ = other.areaIndex_;
      odd_ = other.odd_;
      winGold_ = other.winGold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CPlayerDot Clone() {
      return new sS2CPlayerDot(this);
    }

    /// <summary>Field number for the "chairid" field.</summary>
    public const int ChairidFieldNumber = 1;
    private int chairid_;
    /// <summary>
    ///椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Chairid {
      get { return chairid_; }
      set {
        chairid_ = value;
      }
    }

    /// <summary>Field number for the "area_index" field.</summary>
    public const int AreaIndexFieldNumber = 2;
    private int areaIndex_;
    /// <summary>
    ///区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AreaIndex {
      get { return areaIndex_; }
      set {
        areaIndex_ = value;
      }
    }

    /// <summary>Field number for the "odd" field.</summary>
    public const int OddFieldNumber = 3;
    private int odd_;
    /// <summary>
    ///倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Odd {
      get { return odd_; }
      set {
        odd_ = value;
      }
    }

    /// <summary>Field number for the "win_gold" field.</summary>
    public const int WinGoldFieldNumber = 4;
    private long winGold_;
    /// <summary>
    ///赢得金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WinGold {
      get { return winGold_; }
      set {
        winGold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as sS2CPlayerDot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(sS2CPlayerDot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Chairid != other.Chairid) return false;
      if (AreaIndex != other.AreaIndex) return false;
      if (Odd != other.Odd) return false;
      if (WinGold != other.WinGold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Chairid != 0) hash ^= Chairid.GetHashCode();
      if (AreaIndex != 0) hash ^= AreaIndex.GetHashCode();
      if (Odd != 0) hash ^= Odd.GetHashCode();
      if (WinGold != 0L) hash ^= WinGold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Chairid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Chairid);
      }
      if (AreaIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AreaIndex);
      }
      if (Odd != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Odd);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(WinGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Chairid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Chairid);
      }
      if (AreaIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AreaIndex);
      }
      if (Odd != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Odd);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(WinGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Chairid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chairid);
      }
      if (AreaIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaIndex);
      }
      if (Odd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Odd);
      }
      if (WinGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinGold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(sS2CPlayerDot other) {
      if (other == null) {
        return;
      }
      if (other.Chairid != 0) {
        Chairid = other.Chairid;
      }
      if (other.AreaIndex != 0) {
        AreaIndex = other.AreaIndex;
      }
      if (other.Odd != 0) {
        Odd = other.Odd;
      }
      if (other.WinGold != 0L) {
        WinGold = other.WinGold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Chairid = input.ReadInt32();
            break;
          }
          case 16: {
            AreaIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Odd = input.ReadInt32();
            break;
          }
          case 32: {
            WinGold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Chairid = input.ReadInt32();
            break;
          }
          case 16: {
            AreaIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Odd = input.ReadInt32();
            break;
          }
          case 32: {
            WinGold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///跑马灯
  /// </summary>
  public sealed partial class sS2CNotifyProgress : pb::IMessage<sS2CNotifyProgress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<sS2CNotifyProgress> _parser = new pb::MessageParser<sS2CNotifyProgress>(() => new sS2CNotifyProgress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<sS2CNotifyProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CRASH.CrashReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CNotifyProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CNotifyProgress(sS2CNotifyProgress other) : this() {
      isBoom_ = other.isBoom_;
      curOdd_ = other.curOdd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public sS2CNotifyProgress Clone() {
      return new sS2CNotifyProgress(this);
    }

    /// <summary>Field number for the "is_boom" field.</summary>
    public const int IsBoomFieldNumber = 1;
    private bool isBoom_;
    /// <summary>
    ///是否爆炸
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBoom {
      get { return isBoom_; }
      set {
        isBoom_ = value;
      }
    }

    /// <summary>Field number for the "cur_odd" field.</summary>
    public const int CurOddFieldNumber = 2;
    private int curOdd_;
    /// <summary>
    ///当前倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurOdd {
      get { return curOdd_; }
      set {
        curOdd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as sS2CNotifyProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(sS2CNotifyProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBoom != other.IsBoom) return false;
      if (CurOdd != other.CurOdd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBoom != false) hash ^= IsBoom.GetHashCode();
      if (CurOdd != 0) hash ^= CurOdd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsBoom != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBoom);
      }
      if (CurOdd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurOdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsBoom != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBoom);
      }
      if (CurOdd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurOdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBoom != false) {
        size += 1 + 1;
      }
      if (CurOdd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurOdd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(sS2CNotifyProgress other) {
      if (other == null) {
        return;
      }
      if (other.IsBoom != false) {
        IsBoom = other.IsBoom;
      }
      if (other.CurOdd != 0) {
        CurOdd = other.CurOdd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBoom = input.ReadBool();
            break;
          }
          case 16: {
            CurOdd = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsBoom = input.ReadBool();
            break;
          }
          case 16: {
            CurOdd = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
