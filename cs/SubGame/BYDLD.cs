// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/BYDLD.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BYDLD {

  /// <summary>Holder for reflection information generated from Proto/SubGame/BYDLD.proto</summary>
  public static partial class BYDLDReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/BYDLD.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BYDLDReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90by9TdWJHYW1lL0JZRExELnByb3RvEgVCWURMRCK2AQoMU0NfU2Nl",
            "bmVJbmZvEi0KEXN0YXRpb25fYmFzZV9saXN0GAEgAygLMhIuQllETEQuU3Rh",
            "dGlvbkJhc2USEQoJdGltZXN0YW1wGAIgASgFEhUKDWd1bl9yYXRpb19udW0Y",
            "AyABKAUSFQoNZ3VuX2xldmVsX251bRgEIAEoBRISCgpyYXRpb19saXN0GAUg",
            "AygFEiIKCGd1bl9saXN0GAYgAygLMhAuQllETEQuR3VuRGV0YWlsIo0BCg1H",
            "dW5TcGVjRWZmZWN0EhIKCnJhdGlvTGltaXQYASABKAUSFQoNaGl0Q2hhbmdl",
            "UmF0ZRgCIAEoAhIXCg9tb25leUNoYW5nZVJhdGUYAyABKAISEQoJc3BlZWRS",
            "YXRlGAQgASgCEhEKCWlzX3NlbmlvchgFIAEoCBISCgpkb3VibGVfdGFnGAYg",
            "ASgIIo8BCg9XaW5nc1NwZWNFZmZlY3QSEgoKcmF0aW9MaW1pdBgBIAEoBRIV",
            "Cg1oaXRDaGFuZ2VSYXRlGAIgASgCEhcKD21vbmV5Q2hhbmdlUmF0ZRgDIAEo",
            "AhIRCglzcGVlZFJhdGUYBCABKAISEQoJaXNfc2VuaW9yGAUgASgIEhIKCmRv",
            "dWJsZV90YWcYBiABKAgi7AEKCVdpbmdzSW5mbxIQCgh3aW5nc19pZBgBIAEo",
            "BRIOCgZlbmFibGUYAiABKAgSMQoRd2luZ3Nfc3BlY19lZmZlY3QYAyABKAsy",
            "Fi5CWURMRC5XaW5nc1NwZWNFZmZlY3QSFAoMcmVjZWl2ZV90eXBlGAQgASgF",
            "EhMKC2FjdGl2aXR5X2lkGAUgASgFEg0KBXByaWNlGAYgASgFEhIKCnRpbWVf",
            "c3RhbXAYByABKAUSFgoOZGlzY291bnRfcHJpY2UYCCABKAUSEgoKc3RhcnRf",
            "dGltZRgJIAEoBRIQCghlbmRfdGltZRgKIAEoBSIrCgtQdXJjaGFzZUd1bhIN",
            "CgVtb25leRgBIAEoBRINCgVsZXZlbBgCIAEoBSKXAgoJU0NWaXBJbmZvEhEK",
            "CWNoYWlyX2lkeBgBIAEoBRIPCgdjdXJfdmlwGAIgASgFEhQKDHRyaWRlbnQx",
            "X3ZpcBgDIAEoBRIUCgx0cmlkZW50Ml92aXAYBCABKAUSFAoMdHJpZGVudDNf",
            "dmlwGAUgASgFEhQKDHRyaWRlbnQ0X3ZpcBgGIAEoBRIUCgx0cmlkZW50NV92",
            "aXAYByABKAUSGAoQZG91YmxlX3Nob290X3ZpcBgIIAEoBRIWCg5sb2NrX3No",
            "b290X3ZpcBgJIAEoBRIWCg5nb2xkZW5fZ3VuX3ZpcBgKIAEoBRIXCg9wYWxh",
            "ZGluX2d1bl92aXAYCyABKAUSFQoNcGFuZGFfZ3VuX3ZpcBgMIAEoBSKcAgoJ",
            "R3VuRGV0YWlsEhEKCWd1bl9sZXZlbBgBIAEoBRIOCgZlbmFibGUYAiABKAgS",
            "EQoJcmF0aW9fbWluGAMgASgFEhEKCXJhdGlvX21heBgEIAEoBRIRCgl2aXBf",
            "bGltaXQYBSABKAUSDQoFcHJpY2UYBiABKAUSFAoMYXR0YWNrX3NwZWVkGAcg",
            "ASgCEg8KB3Byb3BfaWQYCCABKAUSKwoNZ3VuU3BlY0VmZmVjdBgJIAEoCzIU",
            "LkJZRExELkd1blNwZWNFZmZlY3QSFgoOZGlzY291bnRfcHJpY2UYCiABKAUS",
            "EgoKc3RhcnRfdGltZRgLIAEoBRIQCghlbmRfdGltZRgMIAEoBRISCgpyYXRp",
            "b19saXN0GA0gAygFIjMKC1NDV2luZ3NJbmZvEiQKCndpbmdzX2xpc3QYASAD",
            "KAsyEC5CWURMRC5XaW5nc0luZm8iLwoJU0NHdW5JbmZvEiIKCGd1bl9saXN0",
            "GAEgAygLMhAuQllETEQuR3VuRGV0YWlsIiYKD1NDUHVyY2hhc2VDaGVjaxIT",
            "Cgtpc19wdXJjaGFzZRgBIAEoBSIoCgpPYmplY3REYXRhEgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoBSIlCgdPYmplY3QyEgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCSIlCgdPYmplY3QzEgsKA2tleRgBIAEoBRINCgV2YWx1ZRgC",
            "IAEoBSIlCgdPYmplY3Q0EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAMoBSIl",
            "CgdEZWNpbWFsEgsKA251bRgBIAEoBRINCgVkZW5vbRgCIAEoBSIiCg1DU1Ry",
            "aWRlbnRJbmZvEhEKCWNoYWlyX2lkeBgBIAEoBSJBCg1TQ1RyaWRlbnRJbmZv",
            "EgwKBGJldHMYASADKAUSDwoHaXNfZnVsbBgCIAEoCBIRCgljdXJfcG9pbnQY",
            "AyABKAUiGwoMQ1NUcmlkZW50QmV0EgsKA2JldBgBIAEoBSJiCgxTQ1RyaWRl",
            "bnRCZXQSEQoJY2hhaXJfaWR4GAEgASgFEg0KBWF3YXJkGAIgASgFEg0KBXNj",
            "b3JlGAMgASgFEgsKA2JldBgEIAEoBRIUCgxpc19iaWdfc21hbGwYBSABKAgi",
            "XgoOU0NQcm9wc1RyaWRlbnQSDgoGZW5hYmxlGAEgASgIEhQKDHNpbmdsZV9z",
            "Y29yZRgCIAEoBRIRCgljdXJfc2NvcmUYAyABKAUSEwoLcmFua19lbmFibGUY",
            "BCABKAgiPAoQQ1NCaWdTbWFsbENob29zZRIRCgljaGFpcl9pZHgYASABKAUS",
            "FQoNZW50ZXJfb3JfZXhpdBgCIAEoBSJXChBTQ0JpZ1NtYWxsQ2hvb3NlEhEK",
            "CWNoYWlyX2lkeBgBIAEoBRISCgplbnRlcl9leGl0GAIgASgFEg0KBWF3YXJk",
            "GAMgASgFEg0KBXNjb3JlGAQgASgFIjIKDUNTQmlnU21hbGxCZXQSEgoKaXNf",
            "YmV0X2JpZxgBIAEoCBINCgV0aW1lcxgCIAEoBSJzCg1TQ0JpZ1NtYWxsQmV0",
            "EhEKCWNoYWlyX2lkeBgBIAEoBRINCgVkaWNlcxgCIAMoBRISCgppc19iZXRf",
            "YmlnGAMgASgIEg0KBWF3YXJkGAQgASgFEg0KBXNjb3JlGAUgASgFEg4KBmlz",
            "X2VuZBgGIAEoCCJKCg5DU1Nob290VG9ycGVkbxIRCgljaGFpcl9pZHgYASAB",
            "KAUSEgoKdG9ycGVkb19pZBgCIAEoBRIRCglzaG9vdF9hbGwYAyABKAgidgoO",
            "U0NTaG9vdFRvcnBlZG8SEQoJY2hhaXJfaWR4GAEgASgFEhIKCnRvcnBlZG9f",
            "aWQYAiABKAUSDQoFYXdhcmQYAyABKAUSDQoFc2NvcmUYBCABKAMSHwoHb2Jq",
            "ZWN0cxgFIAMoCzIOLkJZRExELk9iamVjdDMiQQoOU0NQcm9wc1RvcnBlZG8S",
            "DgoGZW5hYmxlGAEgASgIEh8KB29iamVjdHMYAiADKAsyDi5CWURMRC5PYmpl",
            "Y3QzIisKDUF3YXJkUG9vbERhdGESCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgFIkkKEFNDUHJvcHNBd2FyZFBvb2wSDgoGZW5hYmxlGAEgASgIEiUKB29i",
            "amVjdHMYAiADKAsyFC5CWURMRC5Bd2FyZFBvb2xEYXRhInAKFENTTG9naW5H",
            "YW1lV2l0aFRva2VuEhAKCHBsYXllcklkGAEgASgFEg0KBVRva2VuGAIgASgJ",
            "Eg4KBk9TVHlwZRgDIAEoBRIQCgh0YWJsZV9pZBgEIAEoBRIVCg1sYXN0X3Rh",
            "YmxlX2lkGAUgASgFIj0KFFNDTG9naW5HYW1lV2l0aFRva2VuEhMKC3NjZW5l",
            "X2luZGV4GAEgASgFEhAKCHRhYmxlX2lkGAIgASgFIh8KC0NTVXNlclJlYWR5",
            "EhAKCHBsYXllcklkGAEgASgFIjIKCkVmZmVjdEluZm8SEQoJZWZmZWN0X2lk",
            "GAEgASgFEhEKCWlzX2dsb2JhbBgCIAEoCCIyCgpTcGVjRWZmZWN0EhEKCWNv",
            "c3RNb25leRgBIAEoBRIRCgllYXJuTW9uZXkYAiABKAUi7QIKC1N0YXRpb25C",
            "YXNlEhEKCWd1bl9yYXRpbxgBIAEoBRIRCglndW5fbGV2ZWwYAiABKAUSEQoJ",
            "aXNfb25saW5lGAMgASgIEhIKCnVzZXJfc2NvcmUYBCABKAMSEQoJY2hhaXJf",
            "aWR4GAUgASgFEhMKC3BsYXllcl9uYW1lGAYgASgJEhQKDHRocm91Z2hfZmxh",
            "ZxgHIAEoCBITCgtkb3VibGVfZmxhZxgIIAEoCBIRCglwbGF5ZXJfaWQYCSAB",
            "KAUSCwoDdmlwGAogASgFEg4KBnRpY2tldBgLIAEoBRIRCgllZmZlY3RfaWQY",
            "DCABKAUSEAoIdGl0bGVfaWQYDSABKAUSKQoRcmVkX3BhY2tldF90aWNrZXQY",
            "DiABKAsyDi5CWURMRC5EZWNpbWFsEiYKC2VmZmVjdF9pbmZvGA8gASgLMhEu",
            "QllETEQuRWZmZWN0SW5mbxIWCg53aW5nc19wcm9wc19pZBgQIAEoBSJPCgtT",
            "Q1VzZXJSZWFkeRItChFzdGF0aW9uX2Jhc2VfbGlzdBgBIAMoCzISLkJZRExE",
            "LlN0YXRpb25CYXNlEhEKCXRpbWVzdGFtcBgCIAEoBSJgCg1KYWRlQXdhcmRJ",
            "bmZvEhEKCWF3YXJkX251bRgBIAEoBRITCgthd2FyZF9yYXRpbxgCIAEoBRIT",
            "Cgthd2FyZF9sZXZlbBgDIAEoBRISCgphd2FyZF90eXBlGAQgASgFIhEKD0NT",
            "SmFkZUF3YXJkSW5mbyJTCg9TQ0phZGVBd2FyZEluZm8SLQoPamFkZV9hd2Fy",
            "ZF9pbmZvGAEgAygLMhQuQllETEQuSmFkZUF3YXJkSW5mbxIRCgljcml0X2xp",
            "c3QYAiADKAUiIwoOQ1NOb3RpZnlMb2dvdXQSEQoJY2hhaXJfaWR4GAEgASgF",
            "IiMKDlNDTm90aWZ5TG9nb3V0EhEKCWNoYWlyX2lkeBgBIAEoBSJNChBDU1Nl",
            "dFByb2JhYmlsaXR5EhEKCWd1bl9yYXRpbxgBIAEoBRIRCglndW5fbGV2ZWwY",
            "AiABKAUSEwoLaXNfdXNlX2F1dG8YAyABKAgiXgoQU0NTZXRQcm9iYWJpbGl0",
            "eRIRCgljaGFpcl9pZHgYASABKAUSEQoJZ3VuX3JhdGlvGAIgASgFEhEKCWd1",
            "bl9sZXZlbBgDIAEoBRIRCglpc191bmxvY2sYBCABKAgipAEKCVVzZXJTaG9v",
            "dBINCgVhbmdsZRgBIAEoBRIRCglidWxsZXRfaWQYAiABKAUSDQoFcmF0aW8Y",
            "AyABKAUSEQoJaXNfZG91YmxlGAQgASgIEhIKCmlzX3Rocm91Z2gYBSABKAgS",
            "FAoMaXNfZnJlZV90aW1lGAYgASgIEhMKC2J1bGxldF90eXBlGAcgASgFEgkK",
            "AXgYCCABKAISCQoBeRgJIAEoAiI6ChBDU1VzZXJTaG9vdE11bHRpEiYKDHNo",
            "b290X2J1bGxldBgBIAMoCzIQLkJZRExELlVzZXJTaG9vdCJICgxVc2VyU2hv",
            "b3RSc3ASDQoFYW5nbGUYASABKAUSEwoLYnVsbGV0X3R5cGUYAiABKAUSCQoB",
            "eBgDIAEoAhIJCgF5GAQgASgCIl4KEFNDVXNlclNob290TXVsdGkSEQoJY2hh",
            "aXJfaWR4GAEgASgFEigKC2J1bGxldF9pbmZvGAIgAygLMhMuQllETEQuVXNl",
            "clNob290UnNwEg0KBXNjb3JlGAMgASgDIqABCgdIaXRGaXNoEhAKCGZpc2hf",
            "dWlkGAEgASgFEhEKCWJ1bGxldF9pZBgCIAEoBRITCgt0aHJvdWdoX2lkeBgD",
            "IAEoBRIPCgdmaXNoX2lkGAQgASgFEhcKD2VmZmVjdF9maXNoX3VpZBgFIAMo",
            "BRINCgVyb3VuZBgGIAEoBRINCgVyYXRpbxgHIAEoBRITCgtidWxsZXRfdHlw",
            "ZRgIIAEoBSIyCg5DU0hpdE11bHRpRmlzaBIgCghoaXRfaW5mbxgBIAMoCzIO",
            "LkJZRExELkhpdEZpc2giLQoKRWZmZWN0RmlzaBIQCghmaXNoX3VpZBgBIAEo",
            "BRINCgVzY29yZRgCIAEoBSIyChNEcmFnb25CYWxsV2hlZWxJbmZvEg0KBXJh",
            "dGlvGAEgAygFEgwKBG5leHQYAiADKAUidgoORHJhZ29uQmFsbEluZm8SEgoK",
            "YmFzZV9yYXRpbxgBIAEoBRINCgV3aGVlbBgCIAEoBRISCgphd2FyZFJhdGlv",
            "GAMgAygFEi0KCXdoZWVsSW5mbxgEIAMoCzIaLkJZRExELkRyYWdvbkJhbGxX",
            "aGVlbEluZm8iPwoPT2N0b3B1c0tpbmdJdGVtEhgKEHNlbGVjdGVkTXVsdGlw",
            "bGUYASABKAUSEgoKc2VsZWN0TGlzdBgCIAMoBSI8Cg9PY3RvcHVzS2luZ0lu",
            "Zm8SKQoJbXVsdGlwbGVzGAEgAygLMhYuQllETEQuT2N0b3B1c0tpbmdJdGVt",
            "Ij0KDU1hZ2ljQ2FyZEluZm8SDgoGY2FyZElkGAEgASgFEg0KBXZhbHVlGAIg",
            "ASgFEg0KBWxhYmVsGAMgASgFIksKCU1hZ2ljSW5mbxIRCglyYXRpb0NhcmQY",
            "ASABKAUSKwoNbWFnaWNDYXJkTGlzdBgCIAMoCzIULkJZRExELk1hZ2ljQ2Fy",
            "ZEluZm8iUQoPcm91bGV0dGVfcmVzdWx0EgwKBHR5cGUYASABKAUSEAoIbG9j",
            "YXRpb24YAiABKAUSEAoIbXVsdGlwbGUYAyABKAUSDAoEY3JpdBgEIAEoBSJk",
            "Cgt6ZXVzX3Jlc3VsdBIMCgR0eXBlGAEgASgFEg4KBmxheW91dBgCIAMoBRIm",
            "CgZyZXN1bHQYAyADKAsyFi5CWURMRC5yb3VsZXR0ZV9yZXN1bHQSDwoHcG9v",
            "bF9pZBgEIAEoBSJCCgRaZXVzEiIKBnJlc3VsdBgBIAMoCzISLkJZRExELnpl",
            "dXNfcmVzdWx0EhYKDnRvdGFsX211bHRpcGxlGAIgASgFIikKCUdlbUNvbmZp",
            "ZxIKCgJpZBgBIAEoBRIQCghtdWx0aXBsZRgCIAEoBSJaCg9TQ0dlbUNvbmZp",
            "Z0xpc3QSKQoPZ2VtX2NvbmZpZ19saXN0GAEgAygLMhAuQllETEQuR2VtQ29u",
            "ZmlnEhwKFGNyaXRpY2FsX2NvbmZpZ19saXN0GAIgAygFIpYBCglJdGVtV2hl",
            "ZWwSEAoId2hlZWxfaWQYASABKAUSEwoLd2hlZWxfbGV2ZWwYAiABKAUSEQoJ",
            "aXRlbV9saXN0GAMgAygFEhMKC3Jlc3VsdF9saXN0GAQgAygFEhMKC3doZWVs",
            "X211bHRpGAUgASgFEhEKCWF3YXJkX251bRgGIAEoBRISCgphd2FyZF90eXBl",
            "GAcgASgFIjMKCUNyaXRXaGVlbBIRCgljcml0X2xpc3QYASADKAUSEwoLY3Jp",
            "dF9yZXN1bHQYAiABKAUicgoOR29sZGVuSmFkZUluZm8SJQoLaXRlbV93aGVl",
            "bHMYASADKAsyEC5CWURMRC5JdGVtV2hlZWwSJAoKY3JpdF93aGVlbBgCIAEo",
            "CzIQLkJZRExELkNyaXRXaGVlbBITCgt0b3RhbF9tdWx0aRgDIAEoBSIwChJB",
            "enRlY0dlbUNvbmZpZ0l0ZW0SCwoDbnVtGAEgASgFEg0KBXJhdGlvGAIgASgF",
            "Il0KDkF6dGVjR2VtQ29uZmlnEigKBWl0ZW1zGAEgAygLMhkuQllETEQuQXp0",
            "ZWNHZW1Db25maWdJdGVtEiEKBHR5cGUYAiABKA4yEy5CWURMRC5BenRlY0dl",
            "bVR5cGUiEgoQQ1NBenRlY0dlbUNvbmZpZyI6ChBTQ0F6dGVjR2VtQ29uZmln",
            "EiYKB2NvbmZpZ3MYASADKAsyFS5CWURMRC5BenRlY0dlbUNvbmZpZyJEChBB",
            "enRlY0NsZWFyUmV3YXJkEiEKBHR5cGUYASABKA4yEy5CWURMRC5BenRlY0dl",
            "bVR5cGUSDQoFdmFsdWUYAiABKAUiWQoKQXp0ZWNUYWJsZRIhCgRnZW1zGAEg",
            "AygOMhMuQllETEQuQXp0ZWNHZW1UeXBlEigKB3Jld2FyZHMYAiADKAsyFy5C",
            "WURMRC5BenRlY0NsZWFyUmV3YXJkIi4KCUF6dGVjU3RlcBIhCgZ0YWJsZXMY",
            "ASADKAsyES5CWURMRC5BenRlY1RhYmxlIkMKDUF6dGVjRGF0YUluZm8SHwoF",
            "c3RlcHMYASADKAsyEC5CWURMRC5BenRlY1N0ZXASEQoJdG90YWxfd2luGAIg",
            "ASgFItsFCgtDYXB0dXJlZmlzaBIQCghmaXNoX3VpZBgBIAEoBRIRCglnZXRf",
            "c2NvcmUYAiABKAUSDwoHZmlzaF9pZBgDIAEoBRIhCgl0b3JwZWRvZXMYBCAD",
            "KAsyDi5CWURMRC5PYmplY3QzEhMKC2x1Y2t5X3JhdGlvGAUgASgFEhUKDXRy",
            "aWRlbnRfc2NvcmUYBiABKAUSJgoLZWZmZWN0X2Zpc2gYByADKAsyES5CWURM",
            "RC5FZmZlY3RGaXNoEhIKCmF3YXJkX3RpbWUYCCABKAUSEgoKYnVsbGV0VHlw",
            "ZRgJIAEoBRIQCghtdWx0aXBsZRgKIAEoBRIRCglnZXRfcGVpbHYYCyABKAUS",
            "DQoFZGVhdGgYDCABKAUSDQoFc3RhZ2UYDSABKAUSEQoJc3ViX3N0YWdlGA4g",
            "ASgFEhMKC2F3YXJkX2luZGV4GA8gASgFEhUKDWNyaXRfbXVsdGlwbGUYECAB",
            "KAUSEwoLaW5nb3RfbXVsdGkYESABKAUSDQoFcmF0aW8YEiABKAUSEwoLZnJv",
            "emVuX3RpbWUYEyABKAUSFQoNdHJpZGVudF9tdWx0aRgUIAEoBRIUCgxzY3Jh",
            "dGNoX2NhcmQYFSABKAUSKAoJYmFsbF9pbmZvGBYgASgLMhUuQllETEQuRHJh",
            "Z29uQmFsbEluZm8SLAoMb2N0b3B1c19raW5nGBcgASgLMhYuQllETEQuT2N0",
            "b3B1c0tpbmdJbmZvEhEKCWlzX3Jld2FyZBgYIAEoCBIkCgptYWdpY19pbmZv",
            "GBkgASgLMhAuQllETEQuTWFnaWNJbmZvEh4KCXpldXNfaW5mbxgaIAEoCzIL",
            "LkJZRExELlpldXMSLwoQZ29sZGVuX2phZGVfaW5mbxgbIAEoCzIVLkJZRExE",
            "LkdvbGRlbkphZGVJbmZvEi0KD2F6dGVjX2RhdGFfaW5mbxgcIAEoCzIULkJZ",
            "RExELkF6dGVjRGF0YUluZm8iogEKDlNDSGl0TXVsdGlGaXNoEhEKCWNoYWly",
            "X2lkeBgBIAEoBRIPCgdpbnZhbGlkGAIgASgFEigKDGNhcHR1cmVfaW5mbxgD",
            "IAMoCzISLkJZRExELkNhcHR1cmVmaXNoEg0KBXNjb3JlGAQgASgDEgwKBGVh",
            "cm4YBSABKAUSJQoKc3BlY0VmZmVjdBgGIAEoCzIRLkJZRExELlNwZWNFZmZl",
            "Y3QiLgoLQ1NTeW5jTW9uZXkSEQoJY2hhaXJfaWR4GAEgASgFEgwKBHR5cGUY",
            "AiABKAUioAEKC1NDU3luY01vbmV5EhEKCWNoYWlyX2lkeBgBIAEoBRINCgVz",
            "Y29yZRgCIAEoAxIMCgR0eXBlGAMgASgFEg0KBWRlbHRhGAQgASgFEhUKDWlu",
            "dmFsaWRfc2NvcmUYBSABKAUSFgoOZnJlZXRpbWVfc2NvcmUYBiABKAUSDgoG",
            "dGlja2V0GAcgASgFEhMKC2luZ290X3Njb3JlGAggASgFIj8KCUZpc2hUcmFj",
            "ZRIJCgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgDIAEoAhIRCgl3YWl0X3Rp",
            "bWUYBCABKAIiUwoQU0NGaXNoVHJhY2VzTGlzdBImCgtmaXNoX3RyYWNlcxgB",
            "IAMoCzIRLkJZRExELkZpc2hUcmFjZXMSFwoPYWNjZWxlcmF0ZV9mbGFnGAIg",
            "ASgIIucCCgpGaXNoVHJhY2VzEhAKCGZpc2hfdWlkGAEgASgFEg8KB2Zpc2hf",
            "aWQYAiABKAUSEQoJbGl2ZV90aW1lGAMgASgFEg0KBXNwZWVkGAQgASgCEhIK",
            "CnJvdXRlX3R5cGUYBSABKAUSJAoKZmlzaF90cmFjZRgGIAMoCzIQLkJZRExE",
            "LkZpc2hUcmFjZRIWCg5maXNoX2N1cl9wb2ludBgHIAEoBRIUCgxhbHJlYWR5",
            "X21vdmUYCCABKAgSCQoBeBgJIAEoAhIJCgF5GAogASgCEgwKBHRpbWUYCyAB",
            "KAISDQoFc3RhZ2UYDCABKAUSEQoJc3ViX3N0YWdlGA0gASgFEhAKCGxpZmVz",
            "cGFuGA4gASgFEhMKC2Zyb3plbl90aW1lGA8gASgFEhMKC2Zpc2hfZ2VuZGVy",
            "GBAgASgFEioKD3NtYWxsX2Zpc2hfbGlzdBgRIAMoCzIRLkJZRExELkZpc2hU",
            "cmFjZXMiIgoNQ1NTeW5jRmlzaFJlcRIRCgljaGFpcl9pZHgYASABKAUiIgoN",
            "U0NTeW5jRmlzaFJlcRIRCgljaGFpcl9pZHgYASABKAUiUAoNQ1NTeW5jRmlz",
            "aFJzcBImCgtmaXNoX3RyYWNlcxgBIAMoCzIRLkJZRExELkZpc2hUcmFjZXMS",
            "FwoPYWNjZWxlcmF0ZV9mbGFnGAIgASgIIlAKDVNDU3luY0Zpc2hSc3ASJgoL",
            "ZmlzaF90cmFjZXMYASADKAsyES5CWURMRC5GaXNoVHJhY2VzEhcKD2FjY2Vs",
            "ZXJhdGVfZmxhZxgCIAEoCCIkCg1TQ0NoYW5nZVNjZW5lEhMKC3NjZW5lX2lu",
            "ZGV4GAEgASgFIicKE0NTRmlzaE91dHNpZGVTY3JlZW4SEAoIZmlzaF91aWQY",
            "ASABKAUiQgoKQ1NMb2NrRmlzaBIRCgljaGFpcl9pZHgYASABKAUSEAoIZmlz",
            "aF91aWQYAiABKAUSDwoHaXNfb3BlbhgDIAEoCCJCCgpTQ0xvY2tGaXNoEhEK",
            "CWNoYWlyX2lkeBgBIAEoBRIQCghmaXNoX3VpZBgCIAEoBRIPCgdpc19vcGVu",
            "GAMgASgIIl0KCkNTU2V0U2tpbGwSEQoJY2hhaXJfaWR4GAEgASgFEhMKC2Rv",
            "dWJsZV9mbGFnGAIgASgFEhQKDHRocm91Z2hfZmxhZxgDIAEoBRIRCglhdXRv",
            "X2ZsYWcYBCABKAgiSgoKU0NTZXRTa2lsbBIRCgljaGFpcl9pZHgYASABKAUS",
            "EwoLZG91YmxlX2ZsYWcYAiABKAUSFAoMdGhyb3VnaF9mbGFnGAMgASgFIiYK",
            "EVNDVXNlclRpbWVvdXRLaWNrEhEKCWNvdW50X3NlYxgBIAEoBSI8ChNDU1Vz",
            "ZXJSdW5CYWNrZ3JvdW5kEhEKCWNoYWlyX2lkeBgBIAEoBRISCgpiYWNrZ3Jv",
            "dW5kGAIgASgIIkQKE1NDVXNlclJ1bkJhY2tncm91bmQSLQoRc3RhdGlvbl9i",
            "YXNlX2xpc3QYASADKAsyEi5CWURMRC5TdGF0aW9uQmFzZSI3ChBDU1VwZGF0",
            "ZUhhbGxQcm9wEhEKCWNoYWlyX2lkeBgBIAEoBRIQCghjb25maWdJZBgCIAEo",
            "BSIgCgtDU0hlYXJ0QmVhdBIRCgljaGFpcl9pZHgYASABKAUiIAoLU0NIZWFy",
            "dEJlYXQSEQoJY2hhaXJfaWR4GAEgASgFIlAKCVNDQ29tVGFzaxIRCglndW5f",
            "cmF0aW8YASABKAUSEQoJZ3VuX2xldmVsGAIgASgFEg0KBWF3YXJkGAMgASgF",
            "Eg4KBnRpY2tldBgEIAEoBSIMCgpDU1Rhc2tJbmZvIrIBCgpTQ1Rhc2tJbmZv",
            "EhEKCWd1bl9yYXRpbxgBIAEoBRIRCglndW5fbGV2ZWwYAiABKAUSDwoHY3Vy",
            "X251bRgDIAEoBRIRCgl0b3RhbF9udW0YBCABKAUSEQoJdmlwX2xldmVsGAUg",
            "ASgFEhEKCWlzX3VubG9jaxgGIAEoBRINCgVhd2FyZBgHIAEoBRIVCg1pc192",
            "aXBfdW5sb2NrGAggASgIEg4KBnRpY2tldBgJIAEoBSI/Cg9Vc2VyU2NvcmVS",
            "ZWNvcmQSDAoEdHlwZRgBIAEoBRIPCgdjb250ZW50GAIgASgJEg0KBXNjb3Jl",
            "GAMgASgJIg8KDUNTRnJlZVRpbWVFbmQiYgoPU0NTeW5jRnJlZVRpbWVzEg0K",
            "BXRpbWVzGAEgASgFEg0KBWxldmVsGAIgASgFEhEKCWNoYWlyX2lkeBgDIAEo",
            "BRIMCgR0eXBlGAQgASgFEhAKCGV4Y2hhbmdlGAUgASgFIh8KEENTQ2xpY2tT",
            "dGF0aXN0aWMSCwoDbnVtGAEgASgJIl8KDUp1bXBIaWdoQXJlbmESDwoHaXNf",
            "b3BlbhgBIAEoCBILCgN2aXAYAiABKAUSDAoEY29pbhgDIAEoBRIRCglnYW1l",
            "X3RpbWUYBCABKAUSDwoHZmlzaF9pZBgFIAMoBSIrCgdHaWZ0QmFnEg8KB2lz",
            "X29wZW4YASABKAgSDwoHZmlzaF9pZBgCIAMoBSJUChdOZXdZZWFyQ2FyZEFj",
            "dGl2aXR5SW5mbxITCgtjYXJkX2VuYWJsZRgBIAEoCBISCgpjYXJkX2NvdW50",
            "GAIgASgFEhAKCGNhcmRfdmlwGAMgASgFImsKFFVzZXJQb29sQWN0aXZpdHlJ",
            "bmZvEhYKDnVzZXJfcG9vbF9zaG93GAEgASgIEhIKCmF3YXJkX2Zpc2gYAiAD",
            "KAUSJwoPdXNlcl9wb29sX2xpbWl0GAMgAygLMg4uQllETEQuT2JqZWN0MyIv",
            "ChBEcmFnb25CYWxsQ29uZmlnEg0KBXJhdGlvGAEgASgFEgwKBG5leHQYAiAB",
            "KAgi7gIKDlNDQWN0aXZpdHlJbmZvEiIKBGp1bXAYASABKAsyFC5CWURMRC5K",
            "dW1wSGlnaEFyZW5hEh4KBmNvbmZpZxgCIAEoCzIOLkJZRExELkdpZnRCYWcS",
            "LAoEY2FyZBgDIAEoCzIeLkJZRExELk5ld1llYXJDYXJkQWN0aXZpdHlJbmZv",
            "EhcKD2F3YXJkX3Bvb2xfcmFuaxgEIAEoCBIuCgl1c2VyX3Bvb2wYBSABKAsy",
            "Gy5CWURMRC5Vc2VyUG9vbEFjdGl2aXR5SW5mbxISCgpsdWNreV9kcmF3GAYg",
            "ASgIEiQKDGRyYWdvbl93aGVlbBgHIAMoCzIOLkJZRExELk9iamVjdDQSJQoN",
            "dHJpZGVudF93aGVlbBgIIAMoCzIOLkJZRExELk9iamVjdDMSLAoLZHJhZ29u",
            "X2JhbGwYCSADKAsyFy5CWURMRC5EcmFnb25CYWxsQ29uZmlnEhIKCnRvYWRf",
            "bXVsdGkYCiADKAUibQoPU0NQcm9wRW5kTm90aWZ5EhEKCWNoYWlyX2lkeBgB",
            "IAEoBRIPCgdwcm9wX2lkGAIgASgFEg4KBnN0YXR1cxgDIAEoBRISCgpmcmVl",
            "X2xldmVsGAQgASgFEhIKCmZyZWVfdGltZXMYBSABKAUiawoQU0NQcm9wRHJv",
            "cE5vdGlmeRIRCgljaGFpcl9pZHgYASABKAUSEAoIZmlzaF91aWQYAiABKAUS",
            "DwoHcHJvcF9pZBgDIAEoBRINCgVjb3VudBgEIAEoBRISCgpsb2NrX3JhdGlv",
            "GAUgASgFIocCCgRQcm9wEgoKAmlkGAEgASgFEg0KBWNvdW50GAIgASgFEg0K",
            "BXJhdGlvGAMgASgFEgkKAXgYBCABKAISCQoBeRgFIAEoAhINCgVhbmdsZRgG",
            "IAEoAhIOCgZzdGF0dXMYByABKAUSEAoIbXVsdGlwbGUYCCABKAUSEgoKY3Jp",
            "dF9tdWx0aRgJIAEoBRIQCghpbmdvdF9pZBgKIAEoBRIUCgxyZW1haW5fdGlt",
            "ZXMYCyABKAUSEwoLdG90YWxfdGltZXMYDCABKAUSEQoJYnVsbGV0X2lkGA0g",
            "ASgFEhMKC2luZ290X211bHRpGA4gASgFEhUKDXRyaWRlbnRfbXVsdGkYDyAB",
            "KAUiOQoIVXNlclByb3ASEQoJY2hhaXJfaWR4GAEgASgFEhoKBXByb3BzGAIg",
            "AygLMgsuQllETEQuUHJvcCIvCglVc2Vyc1Byb3ASIgoJdXNlcl9wcm9wGAEg",
            "AygLMg8uQllETEQuVXNlclByb3AiUgoOU1NBd2FyZFBvb2xNc2cSEAoIdW5p",
            "cXVlSUQYASABKAUSDwoHYXJlbmFJRBgCIAEoBRIOCgZwb29sSUQYAyABKAUS",
            "DQoFZGVsdGEYBCABKAUiKQoUQ1NTY3JhdGNoTmV3WWVhckNhcmQSEQoJY2hh",
            "aXJfaWR4GAEgASgFIiUKEENTQnV5TmV3WWVhckNhcmQSEQoJYnV5X2NvdW50",
            "GAEgASgFIjkKE05ld1llYXJDYXJkTXVsdGlwbGUSEAoIYXdhcmRfbm8YASAB",
            "KAkSEAoIbXVsdGlwbGUYAiABKAUimAEKFFNDU2NyYXRjaE5ld1llYXJDYXJk",
            "Eg4KBnJlc3VsdBgBIAEoBRIRCgljaGFpcl9pZHgYAiABKAUSEQoJY3VyX3Nj",
            "b3JlGAMgASgDEgwKBGJhc2UYBCABKAUSDQoFY291bnQYBSABKAUSLQoJbXVs",
            "dGlwbGVzGAYgAygLMhouQllETEQuTmV3WWVhckNhcmRNdWx0aXBsZSI8ChVD",
            "U05ld1llYXJDYXJkRXhjaGFuZ2USDQoFdGltZXMYASABKAUSFAoMZXhjaGFu",
            "Z2VfYWxsGAIgASgIIoUBChBOZXdZZWFyQ2FyZEF3YXJkEhAKCGNhcmRfaWR4",
            "GAEgASgFEg0KBWF3YXJkGAIgASgFEhMKC2JsZXNzX2F3YXJkGAMgASgFEgwK",
            "BGJhc2UYBCABKAUSLQoJbXVsdGlwbGVzGAUgAygLMhouQllETEQuTmV3WWVh",
            "ckNhcmRNdWx0aXBsZSKnAQoVU0NOZXdZZWFyQ2FyZEV4Y2hhbmdlEhEKCWNo",
            "YWlyX2lkeBgBIAEoBRIOCgZyZXN1bHQYAiABKAUSJwoGYXdhcmRzGAMgAygL",
            "MhcuQllETEQuTmV3WWVhckNhcmRBd2FyZBINCgVzY29yZRgEIAEoAxINCgVj",
            "b3VudBgFIAEoBRIUCgxleGNoYW5nZV9hbGwYBiABKAgSDgoGcmVxX2lkGAcg",
            "ASgFIhoKGENTTmV3WWVhckNhcmRBd2FyZFJlY29yZCJRChZOZXdZZWFyQ2Fy",
            "ZEF3YXJkUmVjb3JkEgwKBHRpbWUYASABKAUSFAoMbm9ybWFsX2F3YXJkGAIg",
            "ASgFEhMKC2JsZXNzX2F3YXJkGAMgASgFIloKGFNDTmV3WWVhckNhcmRBd2Fy",
            "ZFJlY29yZBIOCgZyZXN1bHQYASABKAUSLgoHcmVjb3JkcxgCIAMoCzIdLkJZ",
            "RExELk5ld1llYXJDYXJkQXdhcmRSZWNvcmQiJwoJU2tpbGxUaW1lEgwKBHR5",
            "cGUYASABKAUSDAoEdGltZRgCIAEoBSI2Cg9DU1NhdmVTa2lsbFRpbWUSIwoJ",
            "c2tpbF90aW1lGAEgAygLMhAuQllETEQuU2tpbGxUaW1lIhUKE0NTU3VwZXJU",
            "cmlkZW50U2hvb3QiKAoTU0NTdXBlclRyaWRlbnRTaG9vdBIRCgljaGFpcl9p",
            "ZHgYASABKAUiLQoUQ1NTdXBlclRyaWRlbnRBdHRhY2sSFQoNc2NyZWVuX2Zp",
            "c2hlcxgBIAMoBSIrCgpDb21tb25SZXNwEgwKBGNvZGUYASABKAUSDwoHbWVz",
            "c2FnZRgCIAEoCSITChFDU0F3YXJkUG9vbFJlY29yZCJeCg9Bd2FyZFBvb2xS",
            "ZWNvcmQSDAoEdGltZRgBIAEoCRIMCgRuYW1lGAIgASgJEg4KBnBvb2xJZBgD",
            "IAEoBRINCgVhd2FyZBgEIAEoBRIQCghwbGF5ZXJJZBgFIAEoBSI8ChFTQ0F3",
            "YXJkUG9vbFJlY29yZBInCgdyZWNvcmRzGAEgAygLMhYuQllETEQuQXdhcmRQ",
            "b29sUmVjb3JkIhAKDkNTRm9ydHVuZVNob290IjYKDlNDRm9ydHVuZVNob290",
            "EhEKCWNoYWlyX2lkeBgBIAEoBRIRCgljYW5fc2hvb3QYAiABKAgiPAoJSW5n",
            "b3RJbmZvEhAKCGluZ290X2lkGAEgASgFEg4KBnJlbWFpbhgCIAEoBRINCgV0",
            "b3RhbBgDIAEoBSI1Cg1TQ1N5bmNGb3J0dW5lEiQKCmluZ290X2luZm8YASAB",
            "KAsyEC5CWURMRC5JbmdvdEluZm8iIwoOQ1NVc2VyUG9vbEluZm8SEQoJb3Bl",
            "bl9wYWdlGAEgASgIIkEKCUdvb2RzSW5mbxIPCgdwcm9wX2lkGAEgASgFEhAK",
            "CHByb3BfbnVtGAIgASgFEhEKCWNsaWVudF9pZBgDIAEoBSJfCg1Vc2VyQXdh",
            "cmRJdGVtEg0KBWluZGV4GAEgASgFEhAKCGl0ZW1fbWF4GAIgASgFEgwKBG5h",
            "bWUYAyABKAkSHwoFZ29vZHMYBCADKAsyEC5CWURMRC5Hb29kc0luZm8ijAEK",
            "DlNDVXNlclBvb2xJbmZvEhEKCWNoYWlyX2lkeBgBIAEoBRIRCglvcGVuX3Bh",
            "Z2UYAiABKAgSDgoGc3RhdHVzGAMgASgIEg0KBWNvdW50GAQgASgFEhAKCHBv",
            "b2xfbWF4GAUgASgFEiMKBWl0ZW1zGAYgAygLMhQuQllETEQuVXNlckF3YXJk",
            "SXRlbSIgChBDU1VzZXJQb29sU3RhdHVzEgwKBG9wZW4YASABKAgiIAoQU0NV",
            "c2VyUG9vbFN0YXR1cxIMCgRvcGVuGAEgASgIIiIKEUNTVXNlclBvb2xQcmVE",
            "cmF3Eg0KBWxldmVsGAEgASgFIj0KEVNDVXNlclBvb2xQcmVEcmF3EgwKBGNv",
            "ZGUYASABKAUSDQoFbGV2ZWwYAiABKAUSCwoDbXNnGAMgASgJIhAKDkNTVXNl",
            "clBvb2xEcmF3IqwBCg5TQ1VzZXJQb29sRHJhdxIRCgljaGFpcl9pZHgYASAB",
            "KAUSHwoFZ29vZHMYAiADKAsyEC5CWURMRC5Hb29kc0luZm8SHwoFYXdhcmQY",
            "AyABKAsyEC5CWURMRC5Hb29kc0luZm8SIQoJYXdhcmRfY250GAQgASgLMg4u",
            "QllETEQuT2JqZWN0MxITCgt1cGdyYWRlY29zdBgFIAEoBRINCgVpbmRleBgG",
            "IAEoBSJ0Cg1TQ1VzZXJQb29sQWRkEgsKA2FkZBgBIAEoBRINCgVjb3VudBgC",
            "IAEoBRIRCglmaXJzdF9tYXgYAyABKAUSEAoIcG9vbF9tYXgYBCABKAUSDgoG",
            "c3RhdHVzGAUgASgIEhIKCmxldmVsX25hbWUYBiABKAkiNQoKUmVzdWx0UmFu",
            "axILCgNpZHgYASABKAUSDAoEaWNvbhgCIAEoCRIMCgRuYW1lGAMgASgJIo0C",
            "Cg1TQ01hdGNoUmVzdWx0Eg8KB21hdGNoSWQYASABKAUSJAoJcmFua19saXN0",
            "GAIgAygLMhEuQllETEQuUmVzdWx0UmFuaxIOCgZpc1BhY2sYAyABKAgSFAoM",
            "b25lc2VsZl9yYW5rGAQgASgFEhcKD2FkZGl0aW9uX3NvdXJjZRgFIAEoBRIY",
            "ChByZWF3YXJkX2FkZGl0aW9uGAYgASgFEiMKC21hdGNoX2dvb2RzGAcgAygL",
            "Mg4uQllETEQuT2JqZWN0MxIiCgpwYWNrX2dvb2RzGAggAygLMg4uQllETEQu",
            "T2JqZWN0MxIjCgtsdWNreV9nb29kcxgJIAMoCzIOLkJZRExELk9iamVjdDMi",
            "fAoRTWF0Y2hQYWNrQWRkaXRpb24SCgoCaWQYASABKAkSDgoGaXNfYnV5GAIg",
            "ASgIEhYKDnNjb3JlX2FkZGl0aW9uGAMgASgCEhgKEHJlYXdhcmRfYWRkaXRp",
            "b24YBCABKAISDAoEY2FyZBgFIAEoBRILCgNzZWMYBiABKAUiFQoTQ1NNYXRj",
            "aFBhY2tBZGRpdGlvbiJBChNTQ01hdGNoUGFja0FkZGl0aW9uEioKCGFkZGl0",
            "aW9uGAEgAygLMhguQllETEQuTWF0Y2hQYWNrQWRkaXRpb24iIwoRU0NNYXRj",
            "aFBhY2tJbnZhaWwSDgoGcGFja0lkGAEgASgJIiYKCkh0dHBSZXN1bHQSCgoC",
            "RW4YASABKAUSDAoERGF0YRgCIAEoCSJBCgxDU0hCb251c1Bvb2wSDwoHbWF0",
            "aGNJZBgBIAEoBRIOCgZ0aW1lSWQYAiABKAUSEAoIcGxheWVySWQYAyABKAUi",
            "OAoKSEJvbnVzUG9vbBIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgFEg0K",
            "BWNvdW50GAMgASgFIi8KDFNDSEJvbnVzUG9vbBIfCgRwb29sGAEgAygLMhEu",
            "QllETEQuSEJvbnVzUG9vbCI/CgpDU0hSYW5rQmFyEg8KB21hdGhjSWQYASAB",
            "KAUSDgoGdGltZUlkGAIgASgFEhAKCHBsYXllcklkGAMgASgFIjkKClNDSFJh",
            "bmtCYXISCwoDaWR4GAEgASgFEg0KBXRvdGFsGAIgASgFEg8KB3JlYXdhcmQY",
            "AyABKAUiYQoIUmVhbFJhbmsSCwoDaWR4GAEgASgFEgwKBGljb24YAiABKAkS",
            "DAoEbmFtZRgDIAEoCRINCgVzY29yZRgEIAEoBRIdCgVnb29kcxgFIAMoCzIO",
            "LkJZRExELk9iamVjdDMiQAoLQ1NIUmVhbFJhbmsSEAoIcGxheWVySWQYASAB",
            "KAUSDwoHbWF0aGNJZBgCIAEoBRIOCgZ0aW1lSWQYAyABKAUiyAEKC1NDSFJl",
            "YWxSYW5rEiIKCXJlYWxfcmFuaxgBIAMoCzIPLkJZRExELlJlYWxSYW5rEiQK",
            "C29uc2VsZl9yYW5rGAIgASgLMg8uQllETEQuUmVhbFJhbmsSEQoJdG90YWxf",
            "bnVtGAMgASgFEhYKDnNjb3JlX2FkZGl0aW9uGAQgASgFEhcKD3Jld2FyZF9h",
            "ZGRpdGlvbhgFIAEoBRIVCg1jYXJkX2FkZGl0aW9uGAYgASgFEhQKDHZpcF9h",
            "ZGRpdGlvbhgHIAEoBSJSCgZSZXdhcmQSDAoEaWR4bBgBIAEoBRIMCgRpZHhy",
            "GAIgASgFEh0KBWdvb2RzGAMgAygLMg4uQllETEQuT2JqZWN0MxINCgVsdWNr",
            "eRgEIAEoCSIsCglDU0hSZXdhcmQSDwoHbWF0aGNJZBgBIAEoBRIOCgZ0aW1l",
            "SWQYAiABKAUiHAoJU0NIUmV3YXJkEg8KB3Jld2FyZHMYASABKAUiEQoPQ1NI",
            "TWF0Y2hJbmZvVGlwIloKDE1hdGNoSW5mb1RpcBIMCgRuYW1lGAEgASgJEg8K",
            "B21hdGhjSWQYAiABKAUSDAoEdGltZRgDIAEoCRIdCgVnb29kcxgEIAMoCzIO",
            "LkJZRExELk9iamVjdDMiOQoPU0NITWF0Y2hJbmZvVGlwEiYKCW1hdGNoVGlw",
            "cxgBIAMoCzITLkJZRExELk1hdGNoSW5mb1RpcCIgCgxDU0hNYXRjaEluZm8S",
            "EAoIcGxheWVySWQYASABKAUiaQoMU0NITWF0Y2hJbmZvEgwKBG5hbWUYASAB",
            "KAkSDwoHbWF0aGNJZBgCIAEoBRIOCgZ0aW1lSWQYAyABKAUSDgoGc3RhdHVz",
            "GAQgASgFEgwKBGRvd24YBSABKAUSDAoEdGltZRgGIAEoCSLPAQoLSGlzdG9y",
            "eVJhbmsSCwoDaWR4GAEgASgFEgwKBGljb24YAiABKAkSDAoEbmFtZRgDIAEo",
            "CRIXCg9hZGRpdGlvbl9zb3VyY2UYBCABKAUSEAoIYWRkaXRpb24YBSABKAUS",
            "IwoLbWF0Y2hfZ29vZHMYBiADKAsyDi5CWURMRC5PYmplY3QzEiIKCnBhY2tf",
            "Z29vZHMYByADKAsyDi5CWURMRC5PYmplY3QzEiMKC2x1Y2t5X2dvb2RzGAgg",
            "AygLMg4uQllETEQuT2JqZWN0MyIzCg5DU0hIaXN0b3J5UmFuaxIQCghwbGF5",
            "ZXJJZBgBIAEoBRIPCgdtYXRjaElkGAIgASgFInIKDlNDSEhpc3RvcnlSYW5r",
            "Eg8KB21hdGNoSWQYASABKAUSJQoJcmFua19saXN0GAIgAygLMhIuQllETEQu",
            "SGlzdG9yeVJhbmsSKAoMb25lc2VsZl9yYW5rGAMgASgLMhIuQllETEQuSGlz",
            "dG9yeVJhbmsiHwoMQ1NITHVja3lJbmZvEg8KB21hdGNoSWQYASABKAUiKwoJ",
            "THVja3lJbmZvEg4KBmxSYW5nZRgBIAEoBRIOCgZyUmFuZ2UYAiABKAUiPwoM",
            "U0NITHVja3lJbmZvEg8KB21hdGNoSWQYASABKAUSHgoEZGF0YRgCIAMoCzIQ",
            "LkJZRExELkx1Y2t5SW5mbyJtCgtBd2FyZERldGFpbBIRCglwbGF5ZXJfaWQY",
            "ASABKAUSDAoEbnVtcxgCIAEoBRIOCgZwZXJpb2QYAyABKAUSCwoDdmlwGAQg",
            "ASgFEhEKCW5pY2tfbmFtZRgFIAEoCRINCgVwaG90bxgGIAEoCSJMChJTQ0x1",
            "Y2t5QXdhcmROb3RpZnkSEgoKYXdhcmRfdHlwZRgBIAEoBRIiCgZkZXRhaWwY",
            "AiADKAsyEi5CWURMRC5Bd2FyZERldGFpbCIpCglBd2FyZFByb3ASDwoHcHJv",
            "cF9pZBgBIAEoBRILCgNudW0YAiABKAUicgoNTHVja3lUYXNrSW5mbxIKCgJp",
            "ZBgBIAEoBRIOCgZzdGF0dXMYAiABKAUSDQoFc2NvcmUYAyABKAUSDAoEdGV4",
            "dBgEIAEoCRILCgNjdXIYBSABKAUSDQoFdG90YWwYBiABKAUSDAoEc2hvdxgH",
            "IAEoCCIRCg9DU0x1Y2t5RHJhd0luZm8imAMKD1NDTHVja3lEcmF3SW5mbxIX",
            "Cg9ob3VyX3JlbWFpbl9zZWMYASABKAUSFgoOZGF5X3JlbWFpbl9zZWMYAiAB",
            "KAUSJQoLaG91cl9yZXdhcmQYAyADKAsyEC5CWURMRC5Bd2FyZFByb3ASJAoK",
            "ZGF5X3Jld2FyZBgEIAMoCzIQLkJZRExELkF3YXJkUHJvcBIWCg5kYXlfbHVj",
            "a3lfbnVtcxgFIAMoBRINCgVzY29yZRgGIAEoBRISCgpob3VyX3RvdGFsGAcg",
            "ASgFEhEKCWRheV90b3RhbBgIIAEoBRIWCg5ob3VyX2F3YXJkX251bRgJIAEo",
            "BRIVCg1kYXlfYXdhcmRfbnVtGAogASgFEhcKD25leHRfc3RhcnRfdGljaxgL",
            "IAEoBRInCgl0YXNrX2luZm8YDCADKAsyFC5CWURMRC5MdWNreVRhc2tJbmZv",
            "EhYKDmV4Y2hhbmdlX3Njb3JlGA0gASgFEhcKD25leHRfcmVtYWluX3NlYxgO",
            "IAEoBRIXCg9ob3VyX2x1Y2t5X251bXMYDyADKAUiJgoTQ1NHZXRMdWNreVRh",
            "c2tBd2FyZBIPCgd0YXNrX2lkGAEgASgFIlIKD1NDTHVja3lUYXNrSW5mbxIi",
            "CgR0YXNrGAEgASgLMhQuQllETEQuTHVja3lUYXNrSW5mbxINCgVzY29yZRgC",
            "IAEoBRIMCgRjb2RlGAMgASgFIh4KDUNTR2V0THVja3lOdW0SDQoFdGltZXMY",
            "ASABKAUiRgoNU0NHZXRMdWNreU51bRINCgVzY29yZRgBIAEoBRISCgplcnJv",
            "cl9jb2RlGAIgASgFEhIKCmx1Y2t5X251bXMYAyADKAUiDwoNQ1NMdWNreVJl",
            "ZERvdCIdCg1TQ0x1Y2t5UmVkRG90EgwKBHNob3cYASABKAgiXQoLTHVja3lS",
            "ZWNvcmQSCwoDdmlwGAEgASgFEg0KBXRpbWVzGAIgASgFEhEKCWx1Y2t5X251",
            "bRgDIAEoBRIMCgR0aWNrGAQgASgFEhEKCW5pY2tfbmFtZRgFIAEoCSJeCglP",
            "d25SZWNvcmQSIAoGcmV3YXJkGAEgAygLMhAuQllETEQuQXdhcmRQcm9wEg4K",
            "BnN0YXR1cxgCIAEoBRIMCgR0aWNrGAMgASgFEhEKCWx1Y2t5X251bRgEIAEo",
            "BSIdCg1DU0x1Y2t5UmVjb3JkEgwKBHR5cGUYASABKAUiQQoNU0NMdWNreVJl",
            "Y29yZBIMCgR0eXBlGAEgASgFEiIKBnJlY29yZBgCIAMoCzISLkJZRExELkx1",
            "Y2t5UmVjb3JkIi8KC1NDT3duUmVjb3JkEiAKBnJlY29yZBgBIAMoCzIQLkJZ",
            "RExELk93blJlY29yZCIjChJDU0RyYWdvbldoZWVsU3RhcnQSDQoFc3RhZ2UY",
            "ASABKAUi4QEKEVNDRHJhZ29uV2hlZWxTdG9wEg0KBXN0YWdlGAEgASgFEg0K",
            "BXJhdGlvGAIgASgFEg0KBXNjb3JlGAMgASgFEhQKDGF0b21pY19yYXRpbxgE",
            "IAEoBRIVCg1mb3J0dW5lX3JhdGlvGAUgASgFEhYKDnBvc2VpZG9uX3JhdGlv",
            "GAYgASgFEg0KBWVycm9yGAcgASgFEhAKCGNoYWlyX2lkGAggASgFEhIKCmZp",
            "c2hfdmFsdWUYCSABKAUSDwoHaXNfcHJvcBgKIAEoCBIUCgxidWxsZXRfcmF0",
            "aW8YCyABKAUiMwoOU0NTeW5jSGFsbFByb3ASIQoJaGFsbF9wcm9wGAEgAygL",
            "Mg4uQllETEQuT2JqZWN0MyIpChZDU0NoZWNrRHJhZ29uV2hlZWxQcm9wEg8K",
            "B3Byb3BfaWQYASABKAUiWwoWU0NDaGVja0RyYWdvbldoZWVsUHJvcBIPCgdj",
            "YW5fdXNlGAEgASgIEg8KB3Byb3BfaWQYAiABKAUSEAoIY2hhaXJfaWQYAyAB",
            "KAUSDQoFcmF0aW8YBCABKAUiFgoUQ1NVc2VyUG9vbERvdWJsZUluZm8icgoU",
            "U0NVc2VyUG9vbERvdWJsZUluZm8SDAoEY29zdBgBIAEoBRIlCgtpdGVtX2Jl",
            "Zm9yZRgCIAEoCzIQLkJZRExELkdvb2RzSW5mbxIlCgtpdGVtX2RvdWJsZRgD",
            "IAEoCzIQLkJZRExELkdvb2RzSW5mbyIlChBDU1VzZXJQb29sRG91YmxlEhEK",
            "CWlzX2RvdWJsZRgBIAEoCCKFAQoQU0NVc2VyUG9vbERvdWJsZRIMCgRjb2Rl",
            "GAEgASgFEg4KBnJlc3VsdBgCIAEoBRIRCgljaGFpcl9pZHgYAyABKAUSHAoE",
            "aXRlbRgEIAEoCzIOLkJZRExELk9iamVjdDMSIgoKZXh0cmFfaXRlbRgFIAEo",
            "CzIOLkJZRExELk9iamVjdDMiEQoPQ1NMdWNreVBvb2xJbmZvIi0KD1NDTHVj",
            "a3lQb29sSW5mbxINCgVjb3VudBgBIAEoBRILCgNtYXgYAiABKAUiEQoPQ1NM",
            "dWNreVBvb2xEcmF3Ii8KD1NDTHVja3lQb29sRHJhdxIcCgRpdGVtGAEgASgL",
            "Mg4uQllETEQuT2JqZWN0MyJwCg9UcmlkZW50UmFua0xpc3QSEQoJdXNlcl9k",
            "YmlkGAEgASgFEhEKCW5pY2tfbmFtZRgCIAEoCRIWCg5jb250aW51ZV90aW1l",
            "cxgDIAEoBRIRCglkYXRlX3RpbWUYBCABKAkSDAoEcmFuaxgFIAEoBSJrChNT",
            "Q1RyaWRlbnRSYW5rUmVzdWx0EikKCWN1cl9yYW5rcxgBIAMoCzIWLkJZRExE",
            "LlRyaWRlbnRSYW5rTGlzdBIpCgloaXNfcmFua3MYAiADKAsyFi5CWURMRC5U",
            "cmlkZW50UmFua0xpc3QiJgoRQ1NCaWdTbWFsbFdpbkluZm8SEQoJY2hhaXJf",
            "aWR4GAEgASgFIlYKEVNDQmlnU21hbGxXaW5JbmZvEhUKDWN1cl93aW5fdGlt",
            "ZXMYASABKAUSFwoPdG9kYXlfd2luX3RpbWVzGAIgASgFEhEKCWRhdGVfdGlt",
            "ZRgDIAEoCSIjChBDU0JpZ1NtYWxsUmVjb3JkEg8KB21heF9nZXQYASABKAUi",
            "HwoOQmlnU21hbGxSZWNvcmQSDQoFZGljZXMYASADKAUiOgoQU0NCaWdTbWFs",
            "bFJlY29yZBImCgdyZWNvcmRzGAEgAygLMhUuQllETEQuQmlnU21hbGxSZWNv",
            "cmQiLgoOSXRlbUVuYWJsZUluZm8SDAoEbmFtZRgBIAEoBRIOCgZlbmFibGUY",
            "AiABKAgiOAoQSXRlbUVuYWJsZU5vdGljZRIkCgVpdGVtcxgBIAMoCzIVLkJZ",
            "RExELkl0ZW1FbmFibGVJbmZvIiwKClJld2FyZFRhc2sSDgoGdGFza0lkGAEg",
            "ASgFEg4KBnN0YXR1cxgCIAEoBSIsCgpSZXdhcmRDb25mEg4KBnRhc2tJRBgB",
            "IAEoBRIOCgZuQXdhcmQYAiABKAUiMAoSQ1NSZXFSZXdhcmRBZGRUYXNrEgoK",
            "AklEGAEgASgFEg4KBnRhc2tJRBgCIAEoBSJDChNTQ1JlcFJld2FyZFRhc2tM",
            "aXN0EgoKAklEGAEgASgFEiAKBXRMaXN0GAIgAygLMhEuQllETEQuUmV3YXJk",
            "VGFzayJVChJTQ1Jld2FyZFRhc2tGaW5pc2gSDgoGcmVzdWx0GAEgASgFEg0K",
            "BW1vbmV5GAIgASgFEiAKBXRMaXN0GAMgAygLMhEuQllETEQuUmV3YXJkVGFz",
            "ayLcAQoWU0NTeW5jUmV3YXJkVGFza1Jlc3VsdBIQCghjaGFpcl9pZBgBIAEo",
            "BRIpCgZyZXN1bHQYAiABKAsyGS5CWURMRC5TQ1Jld2FyZFRhc2tGaW5pc2gS",
            "DAoEZWFybhgDIAEoBRIPCgdmaXNoX2lkGAQgASgFEhEKCWdldF9wZWlsdhgF",
            "IAEoBRIQCghtdWx0aXBsZRgGIAEoBRIVCg1jcml0X211bHRpcGxlGAcgASgF",
            "EhMKC2luZ290X211bHRpGAggASgFEhUKDXRyaWRlbnRfbXVsdGkYCSABKAUi",
            "HwoRQ1NSZXFSZXdhcmRSZWNvcmQSCgoCSUQYASABKAUikgEKFVNDUmVwUmV3",
            "YXJkVGFza1JlY29yZBIKCgJJRBgBIAEoBRIPCgduUmVjb3JkGAIgASgFEgwK",
            "BGNvc3QYAyABKAUSKQoGcmVjb3JkGAQgAygLMhkuQllETEQuU0NSZXdhcmRU",
            "YXNrRmluaXNoEiMKCGNvbmZMaXN0GAUgAygLMhEuQllETEQuUmV3YXJkQ29u",
            "ZiInChJDU1Jld2FyZENoYW5nZUF1dG8SEQoJYXV0b1RpbWVzGAEgASgFIjEK",
            "D1NDUmV3YXJkQXV0b1JlcBIOCgZzdGF0dXMYASABKAUSDgoGYWNjZXB0GAIg",
            "ASgIIjMKD1NDU2VhQ3JhYkNyZWF0ZRIQCghjaGFpcl9pZBgBIAEoBRIOCgZz",
            "dGF0dXMYAiABKAUiEgoQQ1NTeW5jQ3JhYlN0YXR1cyJcChBTQ1N5bmNDcmFi",
            "U3RhdHVzEg4KBnN0YXR1cxgBIAEoBRIQCghjaGFpcl9pZBgCIAEoBRISCgpt",
            "dWx0aXBsZV8xGAMgASgFEhIKCm11bHRpcGxlXzIYBCABKAUiEQoPQ1NEcmFn",
            "b25CYWxsRW5kImAKD1NDRHJhZ29uQmFsbFJlcxIQCghjaGFpcl9pZBgBIAEo",
            "BRISCgpsb2NrX3JhdGlvGAIgASgFEhIKCmJhc2VfcmF0aW8YAyABKAUSEwoL",
            "dG90YWxfYXdhcmQYBCABKAUiLgoMRGV2b3VyZWRGaXNoEhAKCGZpc2hfdWlk",
            "GAEgASgFEgwKBGVhcm4YAiABKAUiJAoLQ1NEZXZvdXJIaXQSFQoNc2NyZWVu",
            "X2Zpc2hlcxgBIAMoBSJuCgtTQ0Rldm91ckhpdBIqCg1kZXZvdXJfZmlzaGVz",
            "GAEgAygLMhMuQllETEQuRGV2b3VyZWRGaXNoEgwKBGNyaXQYAiABKAUSEAoI",
            "bXVsdGlwbGUYAyABKAUSEwoLaW5nb3RfbXVsdGkYBCABKAUiOgoPT3BlbkNo",
            "ZXN0UmV3YXJkEgoKAmlkGAEgASgFEhsKA251bRgCIAEoCzIOLkJZRExELkRl",
            "Y2ltYWwiqAEKE1NDVXBkYXRlQ2hlc3RTdGF0dXMSEQoJaXNfYWN0aXZlGAEg",
            "ASgIEiQKCmNoZXN0X3R5cGUYAiABKA4yEC5CWURMRC5DaGVzdFR5cGUSFgoO",
            "dG90YWxfcHJvZ3Jlc3MYAyABKAUSFwoPcmVtYWluX3Byb2dyZXNzGAQgASgF",
            "Eg0KBWd1aWRlGAUgASgIEhgKEGF2YWlsYWJsZV9yZXdhcmQYBiABKAUiDwoN",
            "Q1NDaGVzdENvbmZpZyJaCgpDaGVzdEJyaWVmEiQKCmNoZXN0X3R5cGUYASAB",
            "KA4yEC5CWURMRC5DaGVzdFR5cGUSJgoGcmV3YXJkGAIgAygLMhYuQllETEQu",
            "T3BlbkNoZXN0UmV3YXJkIroBCg1TQ0NoZXN0Q29uZmlnEhAKCGVuZF90aW1l",
            "GAEgASgFEisKEGNoZXN0X2JyaWVmX2xpc3QYAiADKAsyES5CWURMRC5DaGVz",
            "dEJyaWVmEhEKCW1pbl9yYXRpbxgDIAEoBRIRCglhdXRvX29wZW4YBCABKAgS",
            "MQoLYXV0b19vcHRpb24YBSABKA4yHC5CWURMRC5DaGVzdEF1dG9TZWxlY3RP",
            "cHRpb24SEQoJaXNfZW5hYmxlGAYgASgIIg0KC0NTT3BlbkNoZXN0Im0KC1ND",
            "T3BlbkNoZXN0EisKC3Jld2FyZF9saXN0GAEgAygLMhYuQllETEQuT3BlbkNo",
            "ZXN0UmV3YXJkEjEKC2F1dG9fb3B0aW9uGAIgASgOMhwuQllETEQuQ2hlc3RB",
            "dXRvU2VsZWN0T3B0aW9uIisKE0NTU2VsZWN0Q2hlc3RSZXdhcmQSFAoMc2Vs",
            "ZWN0X2luZGV4GAEgASgFIj0KE1NDU2VsZWN0Q2hlc3RSZXdhcmQSJgoGcmV3",
            "YXJkGAEgASgLMhYuQllETEQuT3BlbkNoZXN0UmV3YXJkIlwKFENTQ2hlc3RT",
            "ZXRBdXRvU2VsZWN0EjEKC2F1dG9fb3B0aW9uGAEgASgOMhwuQllETEQuQ2hl",
            "c3RBdXRvU2VsZWN0T3B0aW9uEhEKCWF1dG9fb3BlbhgCIAEoCCJcChRTQ0No",
            "ZXN0U2V0QXV0b1NlbGVjdBIxCgthdXRvX29wdGlvbhgBIAEoDjIcLkJZRExE",
            "LkNoZXN0QXV0b1NlbGVjdE9wdGlvbhIRCglhdXRvX29wZW4YAiABKAgiJQoQ",
            "Q1NDaGVzdFNldEVuYWJsZRIRCglpc19lbmFibGUYASABKAgiJQoQU0NDaGVz",
            "dFNldEVuYWJsZRIRCglpc19lbmFibGUYASABKAgiVwoPQ1NTeW5jQW5pbWF0",
            "aW9uEhMKC2FuaW1hdGlvbklkGAEgASgFEgwKBHN0ZXAYAiABKAUSEAoIY29t",
            "cGxldGUYAyABKAgSDwoHY29udGVudBgEIAEoCSJXCg9TQ1N5bmNBbmltYXRp",
            "b24SEwoLYW5pbWF0aW9uSWQYASABKAUSDAoEc3RlcBgCIAEoBRIQCghjb21w",
            "bGV0ZRgDIAEoCBIPCgdjb250ZW50GAQgASgJIhEKD0NTTWFnaWNDYXJkTGlz",
            "dCI+Cg9TQ01hZ2ljQ2FyZExpc3QSKwoNbWFnaWNDYXJkTGlzdBgBIAMoCzIU",
            "LkJZRExELk1hZ2ljQ2FyZEluZm8igQEKEVNDVG9ydG9pc2VFeHBsb2RlEhEK",
            "CWNoYWlyX2lkeBgBIAEoBRIQCghmaXNoX3VpZBgCIAEoBRIRCglidWxsZXRf",
            "aWQYAyABKAUSDQoFcmF0aW8YBCABKAUSEgoKbWF4X2VmZmVjdBgFIAEoBRIR",
            "Cglpc19kb3VibGUYBiABKAgiHQoIQ1NCdXlHdW4SEQoJZ3VuX2xldmVsGAEg",
            "ASgFIi0KCFNDQnV5R3VuEg4KBmlzX2J1eRgBIAEoCBIRCglndW5fbGV2ZWwY",
            "AiABKAUiTQoPU0NXYXRlckRyb3BJbmZvEg4KBmVuYWJsZRgBIAEoCBISCgpk",
            "cm9wX2NvdW50GAIgASgFEhYKDmZyYWdtZW50X2NvdW50GAMgASgFIh4KCkNT",
            "QnV5V2luZ3MSEAoId2luZ3NfaWQYASABKAUiLgoKU0NCdXlXaW5ncxIQCgh3",
            "aW5nc19pZBgBIAEoBRIOCgZpc19idXkYAiABKAgiIwoKQ1NTZXRXaW5ncxIV",
            "Cg13aW5nc19wcm9wX2lkGAEgASgFIkQKClNDU2V0V2luZ3MSEQoJY2hhaXJf",
            "aWR4GAEgASgFEhUKDXdpbmdzX3Byb3BfaWQYAiABKAUSDAoEY29kZRgDIAEo",
            "BSIzCgpTQ0JlS2lja2VkEiUKBnJlYXNvbhgBIAEoDjIVLkJZRExELkJlS2lj",
            "a2VkUmVhc29uIikKFENTQ2xpZW50VGltZVZhbGlkYXRlEhEKCXRpbWVzdGFt",
            "cBgBIAEoBSIWChRTQ0NsaWVudFRpbWVWYWxpZGF0ZSIPCg1DU0NoYW5nZVRh",
            "YmxlIg8KDVNDQ2hhbmdlVGFibGUqmBQKC0dhbWVDb21tYW5kEg8KC1JlcV9J",
            "bnZhbGlkEAASEgoNUmVxX0hlYXJ0QmVhdBDoBxIbChZSZXFfTG9naW5HYW1l",
            "V2l0aFRva2VuEOkHEhIKDVJlcV9Vc2VyUmVhZHkQ6gcSFwoSUmVxX1NldFBy",
            "b2JhYmlsaXR5EOsHEhcKElJlcV9GaXNoVHJhY2VzTGlzdBDsBxITCg5SZXFf",
            "Q2hhbmdlU2NlbhDtBxIaChVSZXFfRmlzaE91dHNpZGVTY3JlZW4Q7gcSEQoM",
            "UmVxX0xvY2tGaXNoEO8HEhcKElJlcV9Vc2VyU2hvb3RNdWx0aRDwBxIVChBS",
            "ZXFfSGl0TXVsdGlGaXNoEPEHEhEKDFJlcV9TZXRTa2lsbBDyBxISCg1SZXFf",
            "U3luY01vbmV5EPMHEhUKEFJlcV9Ob3RpZnlMb2dvdXQQ9AcSFAoPUmVxX1N5",
            "bmNGaXNoUmVxEPUHEhQKD1JlcV9TeW5jRmlzaFJzcBD2BxIYChNSZXFfVXNl",
            "clRpbWVvdXRLaWNrEPcHEhoKFVJlcV9Vc2VyUnVuQmFja2dyb3VuZBD4BxIX",
            "ChJSZXFfVXBkYXRlSGFsbFByb3AQ+QcSFQoQUmVxX1Byb3BzVHJpZGVudBD6",
            "BxIVChBSZXFfUHJvcHNUb3JwZWRvEPsHEhcKElJlcV9Qcm9wc0F3YXJkUG9v",
            "bBD8BxIUCg9SZXFfVHJpZGVudEluZm8Q/QcSEwoOUmVxX1RyaWRlbnRCZXQQ",
            "/gcSFwoSUmVxX0JpZ1NtYWxsQ2hvb3NlEP8HEhQKD1JlcV9CaWdTbWFsbEJl",
            "dBCACBIVChBSZXFfU2hvb3RUb3JwZWRvEIEIEhAKC1JlcV9WaXBJbmZvEIII",
            "EhYKEVJlcV9QdXJjaGFzZUNoZWNrEIMIEhAKC1JlcV9Db21UYXNrEIQIEhEK",
            "DFJlcV9UYXNrSW5mbxCFCBIYChNSZXFfVXNlclNjb3JlUmVjb3JkEIYIEhQK",
            "D1JlcV9GcmVlVGltZUVuZBCHCBIWChFSZXFfU3luY0ZyZWVUaW1lcxCICBIX",
            "ChJSZXFfQ2xpY2tTdGF0aXN0aWMQiQgSFQoQUmVxX0FjdGl2aXR5SW5mbxCK",
            "CBIXChJSZXFfUHJvcERyb3BOb3RpZnkQiwgSFgoRUmVxX1Byb3BFbmROb3Rp",
            "ZnkQjAgSEgoNUmVxX1VzZXJzUHJvcBCNCBIbChZSZXFfU2NyYXRjaE5ld1ll",
            "YXJDYXJkEI4IEhcKElJlcV9CdXlOZXdZZWFyQ2FyZBCPCBIcChdSZXFfTmV3",
            "WWVhckNhcmRFeGNoYW5nZRCQCBIfChpSZXFfTmV3WWVhckNhcmRBd2FyZFJl",
            "Y29yZBCRCBIWChFSZXFfU2F2ZVNraWxsVGltZRCSCBIaChVSZXFfU3VwZXJU",
            "cmlkZW50U2hvb3QQkwgSGwoWUmVxX1N1cGVyVHJpZGVudEF0dGFjaxCUCBIU",
            "Cg9SZXFfTWF0Y2hSZXN1bHQQlQgSGgoVUmVxX01hdGNoUGFja0FkZGl0aW9u",
            "EJYIEhkKFFJlcV9NYXRjaFBhY2tJbnZhbGlkEJcIEhgKE1JlcV9Bd2FyZFBv",
            "b2xSZWNvcmQQmAgSFQoQUmVxX0ZvcnR1bmVTaG9vdBCZCBIUCg9SZXFfU3lu",
            "Y0ZvcnR1bmUQmggSFQoQUmVxX1VzZXJQb29sSW5mbxCbCBIXChJSZXFfVXNl",
            "clBvb2xTdGF0dXMQnAgSGAoTUmVxX1VzZXJQb29sUHJlRHJhdxCdCBIVChBS",
            "ZXFfVXNlclBvb2xEcmF3EJ4IEhQKD1JlcV9Vc2VyUG9vbEFkZBCfCBIWChFS",
            "ZXFfTHVja3lEcmF3SW5mbxCgCBIaChVSZXFfR2V0THVja3lUYXNrQXdhcmQQ",
            "oQgSFAoPUmVxX0x1Y2t5UmVkRG90EKIIEhQKD1JlcV9HZXRMdWNreU51bRCj",
            "CBIUCg9SZXFfTHVja3lSZWNvcmQQpAgSEgoNUmVxX093blJlY29yZBClCBIU",
            "Cg9SZXFfRHJhZ29uV2hlZWwQpggSFQoQUmVxX1N5bmNIYWxsUHJvcBCnCBId",
            "ChhSZXFfQ2hlY2tEcmFnb25XaGVlbFByb3AQqAgSGwoWUmVxX1VzZXJQb29s",
            "RG91YmxlSW5mbxDMCBIXChJSZXFfVXNlclBvb2xEb3VibGUQzQgSFgoRUmVx",
            "X0x1Y2t5UG9vbEluZm8QzggSFgoRUmVxX0x1Y2t5UG9vbERyYXcQzwgSGAoT",
            "UmVxX0JpZ1NtYWxsV2luSW5mbxDgCBIaChVSZXFfVHJpZGVudFJhbmtSZXN1",
            "bHQQ4QgSFwoSUmVxX0JpZ1NtYWxsUmVjb3JkEOIIEhkKFFJlcV9SZXdhcmRU",
            "YXNrUmVjb3JkEOoIEhYKEVJlcV9SZXdhcmRBZGRUYXNrEOsIEhkKFFJlcV9S",
            "ZXdhcmRDaGFuZ2VBdXRvEOwIEhkKFFJlcV9SZXdhcmRBZGRUYXNrUmVwEO0I",
            "EhgKE1JlcV9SZXdhcmRSZWNvcmRSZXAQ7ggSFgoRUmVxX1Jld2FyZEF1dG9S",
            "ZXAQ7wgSFgoRUmVxX1Jld2FyZEZpc2hHZXQQ8AgSGAoTUmVxX1NlbmRJdGVt",
            "c1N3aXRjaBDxCBIeChlSZXFfRGVhbFN5bmNTZWFDcmFiQ3JlYXRlEPIIEh4K",
            "GVJlcV9EZWFsU3luY0NyYWJIaXRTdGF0dXMQ8wgSFgoRRGVhbERyYWdvbkJh",
            "bGxFbmQQ9AgSEgoNUmVxX0Rldm91ckhpdBD1CBIaChVSZXFfVXBkYXRlQ2hl",
            "c3RTdGF0dXMQ+QgSFAoPUmVxX0NoZXN0Q29uZmlnEPoIEhIKDVJlcV9PcGVu",
            "Q2hlc3QQ+wgSGgoVUmVxX1NlbGVjdENoZXN0UmV3YXJkEPwIEhsKFlJlcV9D",
            "aGVzdFNldEF1dG9TZWxlY3QQ/QgSFwoSUmVxX0NoZXN0U2V0RW5hYmxlEP4I",
            "EhYKEVJlcV9TeW5jQW5pbWF0aW9uEP8IEhYKEVJlcV9NYWdpY0NhcmRMaXN0",
            "EIAJEg8KClJlcV9CdXlHdW4QgQkSEAoLUmVxX0d1bkluZm8QggkSEQoMUmVx",
            "X0J1eVdpbmdzEIMJEhIKDVJlcV9XaW5nc0luZm8QhAkSFgoRUmVxX0dlbUNv",
            "bmZpZ0xpc3QQhQkSFgoRUmVxX0phZGVBd2FyZEluZm8QhgkSFwoSUmVxX0F6",
            "dGVjR2VtQ29uZmlnEIcJEhEKDFJlcV9TZXRXaW5ncxC7CRIYChNSZXFfVG9y",
            "dG9pc2VFeHBsb2RlELAJEhYKEVJlcV9XYXRlckRyb3BJbmZvELoJEhEKDFJl",
            "cV9CZUtpY2tlZBDECRIbChZSZXFfQ2xpZW50VGltZVZhbGlkYXRlEMUJEhQK",
            "D1JlcV9DaGFuZ2VUYWJsZRDGCRIVCg9SZXFfQXdhcmROb3RpZnkQoZwBKqAG",
            "CgdFcnJDb2RlEgsKB1N1Y2Nlc3MQABIYChNMb2FkUHJvcHNEYXRhRmFpbGVk",
            "EJFOEhoKFUNhbk5vdEZpbmRQbGF5ZXJQb2ludBCSThIVChBQYXJhbWV0ZXJJ",
            "c1dyb25nEJNOEhAKC0xhY2tPZk1vbmV5EJROEhkKFEZyZWVUaW1lc0NoYW5n",
            "ZVJhdGlvEJVOEg0KCElzTm90U3VwEJZOEhYKEURlc2VyaWFsaXplRmFpbGVk",
            "EJdOEhMKDlBsYXllck5vdEV4aXN0EJhOEhcKElBsYXllckFscmVhZHlMb2dp",
            "bhCZThIZChRMb2FkUGxheWVyRGF0YUZhaWxlZBCaThIVChBBbGxvY1RhYmxl",
            "RmFpbGVkEJtOEhEKDERlZmVuZFBsdWdJbhCcThIWChFRUEVudGVyUm9vbUZh",
            "aWxlZBCdThIcChdRUEJhc2VVc2VySW5mb0dldEZhaWxlZBCeThIVChBRUFJl",
            "YWRHb2xkRmFpbGVkEJ9OEhYKEUxhY2tNb25leUluU2VydmVyEKBOEhcKEkFs",
            "cmVhZHlJbk90aGVyR2FtZRChThITCg5UaGlzUm9vbUlzRnVsbBCiThITCg5V",
            "c2VyUG9vbE5vTWVldBCjThIVChBVc2VyUG9vbFRvSGlnaGVyEKROEhQKD1Ro",
            "aXNUYWJsZUlzRnVsbBClThIRCgxTZXJ2ZXJDbG9zZWQQpk4SFQoQUGxheWVy",
            "Tm90SW5UYWJsZRCnThIRCgxQcm9wTm9Fbm91Z2gQrk4SEgoNUHJvcFJvb21M",
            "aW1pdBCvThIOCglQcm9wVXNpbmcQsE4SEQoMUHJvcE5vdEV4aXN0ELFOEhQK",
            "D1Byb3BVc2luZ1NldEd1bhCyThIZChRSZXFBZGRUYXNrU2V0dGxlbWVudBC4",
            "ThIYChNSZXFBZGRUYXNrTW9uZXlMZXNzELlOEhYKEVJlcUFkZFRhc2tBbHJl",
            "YWR5ELpOEhgKE1JlcUFkZFRhc2tJREludmFsaWQQu04SEgoNT3BlbkNoZXN0",
            "RmFpbBDCThIaChVTZWxlY3RDaGVzdFJld2FyZEZhaWwQw04qIAoISXRlbU5h",
            "bWUSFAoQUmV3YXJkVGFza0VuYWJsZRAAKrMCCgxBenRlY0dlbVR5cGUSFQoR",
            "QXp0ZWNHZW1UeXBlX051bGwQABIXChNBenRlY0dlbVR5cGVfT3JhbmdlEAES",
            "FAoQQXp0ZWNHZW1UeXBlX1JlZBACEhUKEUF6dGVjR2VtVHlwZV9QaW5rEAMS",
            "FwoTQXp0ZWNHZW1UeXBlX1B1cnBsZRAEEhUKEUF6dGVjR2VtVHlwZV9CbHVl",
            "EAUSFgoSQXp0ZWNHZW1UeXBlX0dyZWVuEAYSEgoOQXp0ZWNHZW1UeXBlX0EQ",
            "BxISCg5BenRlY0dlbVR5cGVfSxAIEhIKDkF6dGVjR2VtVHlwZV9REAkSEgoO",
            "QXp0ZWNHZW1UeXBlX0oQChITCg9BenRlY0dlbVR5cGVfMTAQCxIZChVBenRl",
            "Y0dlbVR5cGVfQ3JpdGljYWwQDCpgCglDaGVzdFR5cGUSFgoSQ2hlc3RUeXBl",
            "UG9yY2VsYWluEAASEwoPQ2hlc3RUeXBlQnJvbnplEAESEwoPQ2hlc3RUeXBl",
            "U2lsdmVyEAISEQoNQ2hlc3RUeXBlR29sZBADKkEKFUNoZXN0QXV0b1NlbGVj",
            "dE9wdGlvbhIICgROb25lEAASEwoPUmVkUGFja2V0VGlja2V0EAESCQoFTW9u",
            "ZXkQAipmCg5CZUtpY2tlZFJlYXNvbhIMCghOb1JlYXNvbhAAEhIKDlNlcnZl",
            "cklzQ2xvc2VkEAESDwoLSGFsbENvbW1hbmQQAhIWChJOb09wZXJhdGlvblRp",
            "bWVvdXQQAxIJCgVDaGVhdBAEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BYDLD.GameCommand), typeof(global::BYDLD.ErrCode), typeof(global::BYDLD.ItemName), typeof(global::BYDLD.AztecGemType), typeof(global::BYDLD.ChestType), typeof(global::BYDLD.ChestAutoSelectOption), typeof(global::BYDLD.BeKickedReason), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SC_SceneInfo), global::BYDLD.SC_SceneInfo.Parser, new[]{ "StationBaseList", "Timestamp", "GunRatioNum", "GunLevelNum", "RatioList", "GunList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.GunSpecEffect), global::BYDLD.GunSpecEffect.Parser, new[]{ "RatioLimit", "HitChangeRate", "MoneyChangeRate", "SpeedRate", "IsSenior", "DoubleTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.WingsSpecEffect), global::BYDLD.WingsSpecEffect.Parser, new[]{ "RatioLimit", "HitChangeRate", "MoneyChangeRate", "SpeedRate", "IsSenior", "DoubleTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.WingsInfo), global::BYDLD.WingsInfo.Parser, new[]{ "WingsId", "Enable", "WingsSpecEffect", "ReceiveType", "ActivityId", "Price", "TimeStamp", "DiscountPrice", "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.PurchaseGun), global::BYDLD.PurchaseGun.Parser, new[]{ "Money", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCVipInfo), global::BYDLD.SCVipInfo.Parser, new[]{ "ChairIdx", "CurVip", "Trident1Vip", "Trident2Vip", "Trident3Vip", "Trident4Vip", "Trident5Vip", "DoubleShootVip", "LockShootVip", "GoldenGunVip", "PaladinGunVip", "PandaGunVip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.GunDetail), global::BYDLD.GunDetail.Parser, new[]{ "GunLevel", "Enable", "RatioMin", "RatioMax", "VipLimit", "Price", "AttackSpeed", "PropId", "GunSpecEffect", "DiscountPrice", "StartTime", "EndTime", "RatioList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCWingsInfo), global::BYDLD.SCWingsInfo.Parser, new[]{ "WingsList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCGunInfo), global::BYDLD.SCGunInfo.Parser, new[]{ "GunList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCPurchaseCheck), global::BYDLD.SCPurchaseCheck.Parser, new[]{ "IsPurchase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.ObjectData), global::BYDLD.ObjectData.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Object2), global::BYDLD.Object2.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Object3), global::BYDLD.Object3.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Object4), global::BYDLD.Object4.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Decimal), global::BYDLD.Decimal.Parser, new[]{ "Num", "Denom" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSTridentInfo), global::BYDLD.CSTridentInfo.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCTridentInfo), global::BYDLD.SCTridentInfo.Parser, new[]{ "Bets", "IsFull", "CurPoint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSTridentBet), global::BYDLD.CSTridentBet.Parser, new[]{ "Bet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCTridentBet), global::BYDLD.SCTridentBet.Parser, new[]{ "ChairIdx", "Award", "Score", "Bet", "IsBigSmall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCPropsTrident), global::BYDLD.SCPropsTrident.Parser, new[]{ "Enable", "SingleScore", "CurScore", "RankEnable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSBigSmallChoose), global::BYDLD.CSBigSmallChoose.Parser, new[]{ "ChairIdx", "EnterOrExit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCBigSmallChoose), global::BYDLD.SCBigSmallChoose.Parser, new[]{ "ChairIdx", "EnterExit", "Award", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSBigSmallBet), global::BYDLD.CSBigSmallBet.Parser, new[]{ "IsBetBig", "Times" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCBigSmallBet), global::BYDLD.SCBigSmallBet.Parser, new[]{ "ChairIdx", "Dices", "IsBetBig", "Award", "Score", "IsEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSShootTorpedo), global::BYDLD.CSShootTorpedo.Parser, new[]{ "ChairIdx", "TorpedoId", "ShootAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCShootTorpedo), global::BYDLD.SCShootTorpedo.Parser, new[]{ "ChairIdx", "TorpedoId", "Award", "Score", "Objects" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCPropsTorpedo), global::BYDLD.SCPropsTorpedo.Parser, new[]{ "Enable", "Objects" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AwardPoolData), global::BYDLD.AwardPoolData.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCPropsAwardPool), global::BYDLD.SCPropsAwardPool.Parser, new[]{ "Enable", "Objects" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSLoginGameWithToken), global::BYDLD.CSLoginGameWithToken.Parser, new[]{ "PlayerId", "Token", "OSType", "TableId", "LastTableId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLoginGameWithToken), global::BYDLD.SCLoginGameWithToken.Parser, new[]{ "SceneIndex", "TableId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserReady), global::BYDLD.CSUserReady.Parser, new[]{ "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.EffectInfo), global::BYDLD.EffectInfo.Parser, new[]{ "EffectId", "IsGlobal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SpecEffect), global::BYDLD.SpecEffect.Parser, new[]{ "CostMoney", "EarnMoney" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.StationBase), global::BYDLD.StationBase.Parser, new[]{ "GunRatio", "GunLevel", "IsOnline", "UserScore", "ChairIdx", "PlayerName", "ThroughFlag", "DoubleFlag", "PlayerId", "Vip", "Ticket", "EffectId", "TitleId", "RedPacketTicket", "EffectInfo", "WingsPropsId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserReady), global::BYDLD.SCUserReady.Parser, new[]{ "StationBaseList", "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.JadeAwardInfo), global::BYDLD.JadeAwardInfo.Parser, new[]{ "AwardNum", "AwardRatio", "AwardLevel", "AwardType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSJadeAwardInfo), global::BYDLD.CSJadeAwardInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCJadeAwardInfo), global::BYDLD.SCJadeAwardInfo.Parser, new[]{ "JadeAwardInfo", "CritList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSNotifyLogout), global::BYDLD.CSNotifyLogout.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCNotifyLogout), global::BYDLD.SCNotifyLogout.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSetProbability), global::BYDLD.CSSetProbability.Parser, new[]{ "GunRatio", "GunLevel", "IsUseAuto" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSetProbability), global::BYDLD.SCSetProbability.Parser, new[]{ "ChairIdx", "GunRatio", "GunLevel", "IsUnlock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.UserShoot), global::BYDLD.UserShoot.Parser, new[]{ "Angle", "BulletId", "Ratio", "IsDouble", "IsThrough", "IsFreeTime", "BulletType", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserShootMulti), global::BYDLD.CSUserShootMulti.Parser, new[]{ "ShootBullet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.UserShootRsp), global::BYDLD.UserShootRsp.Parser, new[]{ "Angle", "BulletType", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserShootMulti), global::BYDLD.SCUserShootMulti.Parser, new[]{ "ChairIdx", "BulletInfo", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.HitFish), global::BYDLD.HitFish.Parser, new[]{ "FishUid", "BulletId", "ThroughIdx", "FishId", "EffectFishUid", "Round", "Ratio", "BulletType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHitMultiFish), global::BYDLD.CSHitMultiFish.Parser, new[]{ "HitInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.EffectFish), global::BYDLD.EffectFish.Parser, new[]{ "FishUid", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.DragonBallWheelInfo), global::BYDLD.DragonBallWheelInfo.Parser, new[]{ "Ratio", "Next" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.DragonBallInfo), global::BYDLD.DragonBallInfo.Parser, new[]{ "BaseRatio", "Wheel", "AwardRatio", "WheelInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.OctopusKingItem), global::BYDLD.OctopusKingItem.Parser, new[]{ "SelectedMultiple", "SelectList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.OctopusKingInfo), global::BYDLD.OctopusKingInfo.Parser, new[]{ "Multiples" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.MagicCardInfo), global::BYDLD.MagicCardInfo.Parser, new[]{ "CardId", "Value", "Label" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.MagicInfo), global::BYDLD.MagicInfo.Parser, new[]{ "RatioCard", "MagicCardList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.roulette_result), global::BYDLD.roulette_result.Parser, new[]{ "Type", "Location", "Multiple", "Crit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.zeus_result), global::BYDLD.zeus_result.Parser, new[]{ "Type", "Layout", "Result", "PoolId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Zeus), global::BYDLD.Zeus.Parser, new[]{ "Result", "TotalMultiple" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.GemConfig), global::BYDLD.GemConfig.Parser, new[]{ "Id", "Multiple" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCGemConfigList), global::BYDLD.SCGemConfigList.Parser, new[]{ "GemConfigList", "CriticalConfigList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.ItemWheel), global::BYDLD.ItemWheel.Parser, new[]{ "WheelId", "WheelLevel", "ItemList", "ResultList", "WheelMulti", "AwardNum", "AwardType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CritWheel), global::BYDLD.CritWheel.Parser, new[]{ "CritList", "CritResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.GoldenJadeInfo), global::BYDLD.GoldenJadeInfo.Parser, new[]{ "ItemWheels", "CritWheel", "TotalMulti" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AztecGemConfigItem), global::BYDLD.AztecGemConfigItem.Parser, new[]{ "Num", "Ratio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AztecGemConfig), global::BYDLD.AztecGemConfig.Parser, new[]{ "Items", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSAztecGemConfig), global::BYDLD.CSAztecGemConfig.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCAztecGemConfig), global::BYDLD.SCAztecGemConfig.Parser, new[]{ "Configs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AztecClearReward), global::BYDLD.AztecClearReward.Parser, new[]{ "Type", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AztecTable), global::BYDLD.AztecTable.Parser, new[]{ "Gems", "Rewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AztecStep), global::BYDLD.AztecStep.Parser, new[]{ "Tables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AztecDataInfo), global::BYDLD.AztecDataInfo.Parser, new[]{ "Steps", "TotalWin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Capturefish), global::BYDLD.Capturefish.Parser, new[]{ "FishUid", "GetScore", "FishId", "Torpedoes", "LuckyRatio", "TridentScore", "EffectFish", "AwardTime", "BulletType", "Multiple", "GetPeilv", "Death", "Stage", "SubStage", "AwardIndex", "CritMultiple", "IngotMulti", "Ratio", "FrozenTime", "TridentMulti", "ScratchCard", "BallInfo", "OctopusKing", "IsReward", "MagicInfo", "ZeusInfo", "GoldenJadeInfo", "AztecDataInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHitMultiFish), global::BYDLD.SCHitMultiFish.Parser, new[]{ "ChairIdx", "Invalid", "CaptureInfo", "Score", "Earn", "SpecEffect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSyncMoney), global::BYDLD.CSSyncMoney.Parser, new[]{ "ChairIdx", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncMoney), global::BYDLD.SCSyncMoney.Parser, new[]{ "ChairIdx", "Score", "Type", "Delta", "InvalidScore", "FreetimeScore", "Ticket", "IngotScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.FishTrace), global::BYDLD.FishTrace.Parser, new[]{ "X", "Y", "Z", "WaitTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCFishTracesList), global::BYDLD.SCFishTracesList.Parser, new[]{ "FishTraces", "AccelerateFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.FishTraces), global::BYDLD.FishTraces.Parser, new[]{ "FishUid", "FishId", "LiveTime", "Speed", "RouteType", "FishTrace", "FishCurPoint", "AlreadyMove", "X", "Y", "Time", "Stage", "SubStage", "Lifespan", "FrozenTime", "FishGender", "SmallFishList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSyncFishReq), global::BYDLD.CSSyncFishReq.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncFishReq), global::BYDLD.SCSyncFishReq.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSyncFishRsp), global::BYDLD.CSSyncFishRsp.Parser, new[]{ "FishTraces", "AccelerateFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncFishRsp), global::BYDLD.SCSyncFishRsp.Parser, new[]{ "FishTraces", "AccelerateFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCChangeScene), global::BYDLD.SCChangeScene.Parser, new[]{ "SceneIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSFishOutsideScreen), global::BYDLD.CSFishOutsideScreen.Parser, new[]{ "FishUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSLockFish), global::BYDLD.CSLockFish.Parser, new[]{ "ChairIdx", "FishUid", "IsOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLockFish), global::BYDLD.SCLockFish.Parser, new[]{ "ChairIdx", "FishUid", "IsOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSetSkill), global::BYDLD.CSSetSkill.Parser, new[]{ "ChairIdx", "DoubleFlag", "ThroughFlag", "AutoFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSetSkill), global::BYDLD.SCSetSkill.Parser, new[]{ "ChairIdx", "DoubleFlag", "ThroughFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserTimeoutKick), global::BYDLD.SCUserTimeoutKick.Parser, new[]{ "CountSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserRunBackground), global::BYDLD.CSUserRunBackground.Parser, new[]{ "ChairIdx", "Background" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserRunBackground), global::BYDLD.SCUserRunBackground.Parser, new[]{ "StationBaseList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUpdateHallProp), global::BYDLD.CSUpdateHallProp.Parser, new[]{ "ChairIdx", "ConfigId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHeartBeat), global::BYDLD.CSHeartBeat.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHeartBeat), global::BYDLD.SCHeartBeat.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCComTask), global::BYDLD.SCComTask.Parser, new[]{ "GunRatio", "GunLevel", "Award", "Ticket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSTaskInfo), global::BYDLD.CSTaskInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCTaskInfo), global::BYDLD.SCTaskInfo.Parser, new[]{ "GunRatio", "GunLevel", "CurNum", "TotalNum", "VipLevel", "IsUnlock", "Award", "IsVipUnlock", "Ticket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.UserScoreRecord), global::BYDLD.UserScoreRecord.Parser, new[]{ "Type", "Content", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSFreeTimeEnd), global::BYDLD.CSFreeTimeEnd.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncFreeTimes), global::BYDLD.SCSyncFreeTimes.Parser, new[]{ "Times", "Level", "ChairIdx", "Type", "Exchange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSClickStatistic), global::BYDLD.CSClickStatistic.Parser, new[]{ "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.JumpHighArena), global::BYDLD.JumpHighArena.Parser, new[]{ "IsOpen", "Vip", "Coin", "GameTime", "FishId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.GiftBag), global::BYDLD.GiftBag.Parser, new[]{ "IsOpen", "FishId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.NewYearCardActivityInfo), global::BYDLD.NewYearCardActivityInfo.Parser, new[]{ "CardEnable", "CardCount", "CardVip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.UserPoolActivityInfo), global::BYDLD.UserPoolActivityInfo.Parser, new[]{ "UserPoolShow", "AwardFish", "UserPoolLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.DragonBallConfig), global::BYDLD.DragonBallConfig.Parser, new[]{ "Ratio", "Next" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCActivityInfo), global::BYDLD.SCActivityInfo.Parser, new[]{ "Jump", "Config", "Card", "AwardPoolRank", "UserPool", "LuckyDraw", "DragonWheel", "TridentWheel", "DragonBall", "ToadMulti" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCPropEndNotify), global::BYDLD.SCPropEndNotify.Parser, new[]{ "ChairIdx", "PropId", "Status", "FreeLevel", "FreeTimes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCPropDropNotify), global::BYDLD.SCPropDropNotify.Parser, new[]{ "ChairIdx", "FishUid", "PropId", "Count", "LockRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Prop), global::BYDLD.Prop.Parser, new[]{ "Id", "Count", "Ratio", "X", "Y", "Angle", "Status", "Multiple", "CritMulti", "IngotId", "RemainTimes", "TotalTimes", "BulletId", "IngotMulti", "TridentMulti" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.UserProp), global::BYDLD.UserProp.Parser, new[]{ "ChairIdx", "Props" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.UsersProp), global::BYDLD.UsersProp.Parser, new[]{ "UserProp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SSAwardPoolMsg), global::BYDLD.SSAwardPoolMsg.Parser, new[]{ "UniqueID", "ArenaID", "PoolID", "Delta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSScratchNewYearCard), global::BYDLD.CSScratchNewYearCard.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSBuyNewYearCard), global::BYDLD.CSBuyNewYearCard.Parser, new[]{ "BuyCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.NewYearCardMultiple), global::BYDLD.NewYearCardMultiple.Parser, new[]{ "AwardNo", "Multiple" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCScratchNewYearCard), global::BYDLD.SCScratchNewYearCard.Parser, new[]{ "Result", "ChairIdx", "CurScore", "Base", "Count", "Multiples" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSNewYearCardExchange), global::BYDLD.CSNewYearCardExchange.Parser, new[]{ "Times", "ExchangeAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.NewYearCardAward), global::BYDLD.NewYearCardAward.Parser, new[]{ "CardIdx", "Award", "BlessAward", "Base", "Multiples" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCNewYearCardExchange), global::BYDLD.SCNewYearCardExchange.Parser, new[]{ "ChairIdx", "Result", "Awards", "Score", "Count", "ExchangeAll", "ReqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSNewYearCardAwardRecord), global::BYDLD.CSNewYearCardAwardRecord.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.NewYearCardAwardRecord), global::BYDLD.NewYearCardAwardRecord.Parser, new[]{ "Time", "NormalAward", "BlessAward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCNewYearCardAwardRecord), global::BYDLD.SCNewYearCardAwardRecord.Parser, new[]{ "Result", "Records" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SkillTime), global::BYDLD.SkillTime.Parser, new[]{ "Type", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSaveSkillTime), global::BYDLD.CSSaveSkillTime.Parser, new[]{ "SkilTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSuperTridentShoot), global::BYDLD.CSSuperTridentShoot.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSuperTridentShoot), global::BYDLD.SCSuperTridentShoot.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSuperTridentAttack), global::BYDLD.CSSuperTridentAttack.Parser, new[]{ "ScreenFishes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CommonResp), global::BYDLD.CommonResp.Parser, new[]{ "Code", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSAwardPoolRecord), global::BYDLD.CSAwardPoolRecord.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AwardPoolRecord), global::BYDLD.AwardPoolRecord.Parser, new[]{ "Time", "Name", "PoolId", "Award", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCAwardPoolRecord), global::BYDLD.SCAwardPoolRecord.Parser, new[]{ "Records" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSFortuneShoot), global::BYDLD.CSFortuneShoot.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCFortuneShoot), global::BYDLD.SCFortuneShoot.Parser, new[]{ "ChairIdx", "CanShoot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.IngotInfo), global::BYDLD.IngotInfo.Parser, new[]{ "IngotId", "Remain", "Total" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncFortune), global::BYDLD.SCSyncFortune.Parser, new[]{ "IngotInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserPoolInfo), global::BYDLD.CSUserPoolInfo.Parser, new[]{ "OpenPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.GoodsInfo), global::BYDLD.GoodsInfo.Parser, new[]{ "PropId", "PropNum", "ClientId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.UserAwardItem), global::BYDLD.UserAwardItem.Parser, new[]{ "Index", "ItemMax", "Name", "Goods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserPoolInfo), global::BYDLD.SCUserPoolInfo.Parser, new[]{ "ChairIdx", "OpenPage", "Status", "Count", "PoolMax", "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserPoolStatus), global::BYDLD.CSUserPoolStatus.Parser, new[]{ "Open" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserPoolStatus), global::BYDLD.SCUserPoolStatus.Parser, new[]{ "Open" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserPoolPreDraw), global::BYDLD.CSUserPoolPreDraw.Parser, new[]{ "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserPoolPreDraw), global::BYDLD.SCUserPoolPreDraw.Parser, new[]{ "Code", "Level", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserPoolDraw), global::BYDLD.CSUserPoolDraw.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserPoolDraw), global::BYDLD.SCUserPoolDraw.Parser, new[]{ "ChairIdx", "Goods", "Award", "AwardCnt", "Upgradecost", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserPoolAdd), global::BYDLD.SCUserPoolAdd.Parser, new[]{ "Add", "Count", "FirstMax", "PoolMax", "Status", "LevelName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.ResultRank), global::BYDLD.ResultRank.Parser, new[]{ "Idx", "Icon", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCMatchResult), global::BYDLD.SCMatchResult.Parser, new[]{ "MatchId", "RankList", "IsPack", "OneselfRank", "AdditionSource", "ReawardAddition", "MatchGoods", "PackGoods", "LuckyGoods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.MatchPackAddition), global::BYDLD.MatchPackAddition.Parser, new[]{ "Id", "IsBuy", "ScoreAddition", "ReawardAddition", "Card", "Sec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSMatchPackAddition), global::BYDLD.CSMatchPackAddition.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCMatchPackAddition), global::BYDLD.SCMatchPackAddition.Parser, new[]{ "Addition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCMatchPackInvail), global::BYDLD.SCMatchPackInvail.Parser, new[]{ "PackId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.HttpResult), global::BYDLD.HttpResult.Parser, new[]{ "En", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHBonusPool), global::BYDLD.CSHBonusPool.Parser, new[]{ "MathcId", "TimeId", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.HBonusPool), global::BYDLD.HBonusPool.Parser, new[]{ "Name", "Value", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHBonusPool), global::BYDLD.SCHBonusPool.Parser, new[]{ "Pool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHRankBar), global::BYDLD.CSHRankBar.Parser, new[]{ "MathcId", "TimeId", "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHRankBar), global::BYDLD.SCHRankBar.Parser, new[]{ "Idx", "Total", "Reaward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.RealRank), global::BYDLD.RealRank.Parser, new[]{ "Idx", "Icon", "Name", "Score", "Goods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHRealRank), global::BYDLD.CSHRealRank.Parser, new[]{ "PlayerId", "MathcId", "TimeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHRealRank), global::BYDLD.SCHRealRank.Parser, new[]{ "RealRank", "OnselfRank", "TotalNum", "ScoreAddition", "RewardAddition", "CardAddition", "VipAddition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.Reward), global::BYDLD.Reward.Parser, new[]{ "Idxl", "Idxr", "Goods", "Lucky" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHReward), global::BYDLD.CSHReward.Parser, new[]{ "MathcId", "TimeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHReward), global::BYDLD.SCHReward.Parser, new[]{ "Rewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHMatchInfoTip), global::BYDLD.CSHMatchInfoTip.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.MatchInfoTip), global::BYDLD.MatchInfoTip.Parser, new[]{ "Name", "MathcId", "Time", "Goods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHMatchInfoTip), global::BYDLD.SCHMatchInfoTip.Parser, new[]{ "MatchTips" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHMatchInfo), global::BYDLD.CSHMatchInfo.Parser, new[]{ "PlayerId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHMatchInfo), global::BYDLD.SCHMatchInfo.Parser, new[]{ "Name", "MathcId", "TimeId", "Status", "Down", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.HistoryRank), global::BYDLD.HistoryRank.Parser, new[]{ "Idx", "Icon", "Name", "AdditionSource", "Addition", "MatchGoods", "PackGoods", "LuckyGoods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHHistoryRank), global::BYDLD.CSHHistoryRank.Parser, new[]{ "PlayerId", "MatchId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHHistoryRank), global::BYDLD.SCHHistoryRank.Parser, new[]{ "MatchId", "RankList", "OneselfRank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSHLuckyInfo), global::BYDLD.CSHLuckyInfo.Parser, new[]{ "MatchId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.LuckyInfo), global::BYDLD.LuckyInfo.Parser, new[]{ "LRange", "RRange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCHLuckyInfo), global::BYDLD.SCHLuckyInfo.Parser, new[]{ "MatchId", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AwardDetail), global::BYDLD.AwardDetail.Parser, new[]{ "PlayerId", "Nums", "Period", "Vip", "NickName", "Photo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLuckyAwardNotify), global::BYDLD.SCLuckyAwardNotify.Parser, new[]{ "AwardType", "Detail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.AwardProp), global::BYDLD.AwardProp.Parser, new[]{ "PropId", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.LuckyTaskInfo), global::BYDLD.LuckyTaskInfo.Parser, new[]{ "Id", "Status", "Score", "Text", "Cur", "Total", "Show" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSLuckyDrawInfo), global::BYDLD.CSLuckyDrawInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLuckyDrawInfo), global::BYDLD.SCLuckyDrawInfo.Parser, new[]{ "HourRemainSec", "DayRemainSec", "HourReward", "DayReward", "DayLuckyNums", "Score", "HourTotal", "DayTotal", "HourAwardNum", "DayAwardNum", "NextStartTick", "TaskInfo", "ExchangeScore", "NextRemainSec", "HourLuckyNums" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSGetLuckyTaskAward), global::BYDLD.CSGetLuckyTaskAward.Parser, new[]{ "TaskId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLuckyTaskInfo), global::BYDLD.SCLuckyTaskInfo.Parser, new[]{ "Task", "Score", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSGetLuckyNum), global::BYDLD.CSGetLuckyNum.Parser, new[]{ "Times" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCGetLuckyNum), global::BYDLD.SCGetLuckyNum.Parser, new[]{ "Score", "ErrorCode", "LuckyNums" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSLuckyRedDot), global::BYDLD.CSLuckyRedDot.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLuckyRedDot), global::BYDLD.SCLuckyRedDot.Parser, new[]{ "Show" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.LuckyRecord), global::BYDLD.LuckyRecord.Parser, new[]{ "Vip", "Times", "LuckyNum", "Tick", "NickName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.OwnRecord), global::BYDLD.OwnRecord.Parser, new[]{ "Reward", "Status", "Tick", "LuckyNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSLuckyRecord), global::BYDLD.CSLuckyRecord.Parser, new[]{ "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLuckyRecord), global::BYDLD.SCLuckyRecord.Parser, new[]{ "Type", "Record" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCOwnRecord), global::BYDLD.SCOwnRecord.Parser, new[]{ "Record" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSDragonWheelStart), global::BYDLD.CSDragonWheelStart.Parser, new[]{ "Stage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCDragonWheelStop), global::BYDLD.SCDragonWheelStop.Parser, new[]{ "Stage", "Ratio", "Score", "AtomicRatio", "FortuneRatio", "PoseidonRatio", "Error", "ChairId", "FishValue", "IsProp", "BulletRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncHallProp), global::BYDLD.SCSyncHallProp.Parser, new[]{ "HallProp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSCheckDragonWheelProp), global::BYDLD.CSCheckDragonWheelProp.Parser, new[]{ "PropId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCCheckDragonWheelProp), global::BYDLD.SCCheckDragonWheelProp.Parser, new[]{ "CanUse", "PropId", "ChairId", "Ratio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserPoolDoubleInfo), global::BYDLD.CSUserPoolDoubleInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserPoolDoubleInfo), global::BYDLD.SCUserPoolDoubleInfo.Parser, new[]{ "Cost", "ItemBefore", "ItemDouble" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSUserPoolDouble), global::BYDLD.CSUserPoolDouble.Parser, new[]{ "IsDouble" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUserPoolDouble), global::BYDLD.SCUserPoolDouble.Parser, new[]{ "Code", "Result", "ChairIdx", "Item", "ExtraItem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSLuckyPoolInfo), global::BYDLD.CSLuckyPoolInfo.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLuckyPoolInfo), global::BYDLD.SCLuckyPoolInfo.Parser, new[]{ "Count", "Max" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSLuckyPoolDraw), global::BYDLD.CSLuckyPoolDraw.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCLuckyPoolDraw), global::BYDLD.SCLuckyPoolDraw.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.TridentRankList), global::BYDLD.TridentRankList.Parser, new[]{ "UserDbid", "NickName", "ContinueTimes", "DateTime", "Rank" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCTridentRankResult), global::BYDLD.SCTridentRankResult.Parser, new[]{ "CurRanks", "HisRanks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSBigSmallWinInfo), global::BYDLD.CSBigSmallWinInfo.Parser, new[]{ "ChairIdx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCBigSmallWinInfo), global::BYDLD.SCBigSmallWinInfo.Parser, new[]{ "CurWinTimes", "TodayWinTimes", "DateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSBigSmallRecord), global::BYDLD.CSBigSmallRecord.Parser, new[]{ "MaxGet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.BigSmallRecord), global::BYDLD.BigSmallRecord.Parser, new[]{ "Dices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCBigSmallRecord), global::BYDLD.SCBigSmallRecord.Parser, new[]{ "Records" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.ItemEnableInfo), global::BYDLD.ItemEnableInfo.Parser, new[]{ "Name", "Enable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.ItemEnableNotice), global::BYDLD.ItemEnableNotice.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.RewardTask), global::BYDLD.RewardTask.Parser, new[]{ "TaskId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.RewardConf), global::BYDLD.RewardConf.Parser, new[]{ "TaskID", "NAward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSReqRewardAddTask), global::BYDLD.CSReqRewardAddTask.Parser, new[]{ "ID", "TaskID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCRepRewardTaskList), global::BYDLD.SCRepRewardTaskList.Parser, new[]{ "ID", "TList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCRewardTaskFinish), global::BYDLD.SCRewardTaskFinish.Parser, new[]{ "Result", "Money", "TList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncRewardTaskResult), global::BYDLD.SCSyncRewardTaskResult.Parser, new[]{ "ChairId", "Result", "Earn", "FishId", "GetPeilv", "Multiple", "CritMultiple", "IngotMulti", "TridentMulti" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSReqRewardRecord), global::BYDLD.CSReqRewardRecord.Parser, new[]{ "ID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCRepRewardTaskRecord), global::BYDLD.SCRepRewardTaskRecord.Parser, new[]{ "ID", "NRecord", "Cost", "Record", "ConfList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSRewardChangeAuto), global::BYDLD.CSRewardChangeAuto.Parser, new[]{ "AutoTimes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCRewardAutoRep), global::BYDLD.SCRewardAutoRep.Parser, new[]{ "Status", "Accept" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSeaCrabCreate), global::BYDLD.SCSeaCrabCreate.Parser, new[]{ "ChairId", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSyncCrabStatus), global::BYDLD.CSSyncCrabStatus.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncCrabStatus), global::BYDLD.SCSyncCrabStatus.Parser, new[]{ "Status", "ChairId", "Multiple1", "Multiple2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSDragonBallEnd), global::BYDLD.CSDragonBallEnd.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCDragonBallRes), global::BYDLD.SCDragonBallRes.Parser, new[]{ "ChairId", "LockRatio", "BaseRatio", "TotalAward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.DevouredFish), global::BYDLD.DevouredFish.Parser, new[]{ "FishUid", "Earn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSDevourHit), global::BYDLD.CSDevourHit.Parser, new[]{ "ScreenFishes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCDevourHit), global::BYDLD.SCDevourHit.Parser, new[]{ "DevourFishes", "Crit", "Multiple", "IngotMulti" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.OpenChestReward), global::BYDLD.OpenChestReward.Parser, new[]{ "Id", "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCUpdateChestStatus), global::BYDLD.SCUpdateChestStatus.Parser, new[]{ "IsActive", "ChestType", "TotalProgress", "RemainProgress", "Guide", "AvailableReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSChestConfig), global::BYDLD.CSChestConfig.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.ChestBrief), global::BYDLD.ChestBrief.Parser, new[]{ "ChestType", "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCChestConfig), global::BYDLD.SCChestConfig.Parser, new[]{ "EndTime", "ChestBriefList", "MinRatio", "AutoOpen", "AutoOption", "IsEnable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSOpenChest), global::BYDLD.CSOpenChest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCOpenChest), global::BYDLD.SCOpenChest.Parser, new[]{ "RewardList", "AutoOption" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSelectChestReward), global::BYDLD.CSSelectChestReward.Parser, new[]{ "SelectIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSelectChestReward), global::BYDLD.SCSelectChestReward.Parser, new[]{ "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSChestSetAutoSelect), global::BYDLD.CSChestSetAutoSelect.Parser, new[]{ "AutoOption", "AutoOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCChestSetAutoSelect), global::BYDLD.SCChestSetAutoSelect.Parser, new[]{ "AutoOption", "AutoOpen" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSChestSetEnable), global::BYDLD.CSChestSetEnable.Parser, new[]{ "IsEnable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCChestSetEnable), global::BYDLD.SCChestSetEnable.Parser, new[]{ "IsEnable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSyncAnimation), global::BYDLD.CSSyncAnimation.Parser, new[]{ "AnimationId", "Step", "Complete", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSyncAnimation), global::BYDLD.SCSyncAnimation.Parser, new[]{ "AnimationId", "Step", "Complete", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSMagicCardList), global::BYDLD.CSMagicCardList.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCMagicCardList), global::BYDLD.SCMagicCardList.Parser, new[]{ "MagicCardList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCTortoiseExplode), global::BYDLD.SCTortoiseExplode.Parser, new[]{ "ChairIdx", "FishUid", "BulletId", "Ratio", "MaxEffect", "IsDouble" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSBuyGun), global::BYDLD.CSBuyGun.Parser, new[]{ "GunLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCBuyGun), global::BYDLD.SCBuyGun.Parser, new[]{ "IsBuy", "GunLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCWaterDropInfo), global::BYDLD.SCWaterDropInfo.Parser, new[]{ "Enable", "DropCount", "FragmentCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSBuyWings), global::BYDLD.CSBuyWings.Parser, new[]{ "WingsId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCBuyWings), global::BYDLD.SCBuyWings.Parser, new[]{ "WingsId", "IsBuy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSSetWings), global::BYDLD.CSSetWings.Parser, new[]{ "WingsPropId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCSetWings), global::BYDLD.SCSetWings.Parser, new[]{ "ChairIdx", "WingsPropId", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCBeKicked), global::BYDLD.SCBeKicked.Parser, new[]{ "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSClientTimeValidate), global::BYDLD.CSClientTimeValidate.Parser, new[]{ "Timestamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCClientTimeValidate), global::BYDLD.SCClientTimeValidate.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.CSChangeTable), global::BYDLD.CSChangeTable.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BYDLD.SCChangeTable), global::BYDLD.SCChangeTable.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GameCommand {
    [pbr::OriginalName("Req_Invalid")] ReqInvalid = 0,
    [pbr::OriginalName("Req_HeartBeat")] ReqHeartBeat = 1000,
    [pbr::OriginalName("Req_LoginGameWithToken")] ReqLoginGameWithToken = 1001,
    [pbr::OriginalName("Req_UserReady")] ReqUserReady = 1002,
    [pbr::OriginalName("Req_SetProbability")] ReqSetProbability = 1003,
    [pbr::OriginalName("Req_FishTracesList")] ReqFishTracesList = 1004,
    [pbr::OriginalName("Req_ChangeScen")] ReqChangeScen = 1005,
    [pbr::OriginalName("Req_FishOutsideScreen")] ReqFishOutsideScreen = 1006,
    [pbr::OriginalName("Req_LockFish")] ReqLockFish = 1007,
    [pbr::OriginalName("Req_UserShootMulti")] ReqUserShootMulti = 1008,
    [pbr::OriginalName("Req_HitMultiFish")] ReqHitMultiFish = 1009,
    [pbr::OriginalName("Req_SetSkill")] ReqSetSkill = 1010,
    [pbr::OriginalName("Req_SyncMoney")] ReqSyncMoney = 1011,
    [pbr::OriginalName("Req_NotifyLogout")] ReqNotifyLogout = 1012,
    [pbr::OriginalName("Req_SyncFishReq")] ReqSyncFishReq = 1013,
    [pbr::OriginalName("Req_SyncFishRsp")] ReqSyncFishRsp = 1014,
    [pbr::OriginalName("Req_UserTimeoutKick")] ReqUserTimeoutKick = 1015,
    [pbr::OriginalName("Req_UserRunBackground")] ReqUserRunBackground = 1016,
    [pbr::OriginalName("Req_UpdateHallProp")] ReqUpdateHallProp = 1017,
    [pbr::OriginalName("Req_PropsTrident")] ReqPropsTrident = 1018,
    [pbr::OriginalName("Req_PropsTorpedo")] ReqPropsTorpedo = 1019,
    [pbr::OriginalName("Req_PropsAwardPool")] ReqPropsAwardPool = 1020,
    [pbr::OriginalName("Req_TridentInfo")] ReqTridentInfo = 1021,
    [pbr::OriginalName("Req_TridentBet")] ReqTridentBet = 1022,
    [pbr::OriginalName("Req_BigSmallChoose")] ReqBigSmallChoose = 1023,
    [pbr::OriginalName("Req_BigSmallBet")] ReqBigSmallBet = 1024,
    [pbr::OriginalName("Req_ShootTorpedo")] ReqShootTorpedo = 1025,
    [pbr::OriginalName("Req_VipInfo")] ReqVipInfo = 1026,
    [pbr::OriginalName("Req_PurchaseCheck")] ReqPurchaseCheck = 1027,
    [pbr::OriginalName("Req_ComTask")] ReqComTask = 1028,
    [pbr::OriginalName("Req_TaskInfo")] ReqTaskInfo = 1029,
    [pbr::OriginalName("Req_UserScoreRecord")] ReqUserScoreRecord = 1030,
    [pbr::OriginalName("Req_FreeTimeEnd")] ReqFreeTimeEnd = 1031,
    [pbr::OriginalName("Req_SyncFreeTimes")] ReqSyncFreeTimes = 1032,
    [pbr::OriginalName("Req_ClickStatistic")] ReqClickStatistic = 1033,
    [pbr::OriginalName("Req_ActivityInfo")] ReqActivityInfo = 1034,
    [pbr::OriginalName("Req_PropDropNotify")] ReqPropDropNotify = 1035,
    [pbr::OriginalName("Req_PropEndNotify")] ReqPropEndNotify = 1036,
    [pbr::OriginalName("Req_UsersProp")] ReqUsersProp = 1037,
    [pbr::OriginalName("Req_ScratchNewYearCard")] ReqScratchNewYearCard = 1038,
    [pbr::OriginalName("Req_BuyNewYearCard")] ReqBuyNewYearCard = 1039,
    [pbr::OriginalName("Req_NewYearCardExchange")] ReqNewYearCardExchange = 1040,
    [pbr::OriginalName("Req_NewYearCardAwardRecord")] ReqNewYearCardAwardRecord = 1041,
    [pbr::OriginalName("Req_SaveSkillTime")] ReqSaveSkillTime = 1042,
    [pbr::OriginalName("Req_SuperTridentShoot")] ReqSuperTridentShoot = 1043,
    [pbr::OriginalName("Req_SuperTridentAttack")] ReqSuperTridentAttack = 1044,
    [pbr::OriginalName("Req_MatchResult")] ReqMatchResult = 1045,
    [pbr::OriginalName("Req_MatchPackAddition")] ReqMatchPackAddition = 1046,
    [pbr::OriginalName("Req_MatchPackInvalid")] ReqMatchPackInvalid = 1047,
    [pbr::OriginalName("Req_AwardPoolRecord")] ReqAwardPoolRecord = 1048,
    [pbr::OriginalName("Req_FortuneShoot")] ReqFortuneShoot = 1049,
    [pbr::OriginalName("Req_SyncFortune")] ReqSyncFortune = 1050,
    [pbr::OriginalName("Req_UserPoolInfo")] ReqUserPoolInfo = 1051,
    [pbr::OriginalName("Req_UserPoolStatus")] ReqUserPoolStatus = 1052,
    [pbr::OriginalName("Req_UserPoolPreDraw")] ReqUserPoolPreDraw = 1053,
    [pbr::OriginalName("Req_UserPoolDraw")] ReqUserPoolDraw = 1054,
    [pbr::OriginalName("Req_UserPoolAdd")] ReqUserPoolAdd = 1055,
    [pbr::OriginalName("Req_LuckyDrawInfo")] ReqLuckyDrawInfo = 1056,
    [pbr::OriginalName("Req_GetLuckyTaskAward")] ReqGetLuckyTaskAward = 1057,
    [pbr::OriginalName("Req_LuckyRedDot")] ReqLuckyRedDot = 1058,
    [pbr::OriginalName("Req_GetLuckyNum")] ReqGetLuckyNum = 1059,
    [pbr::OriginalName("Req_LuckyRecord")] ReqLuckyRecord = 1060,
    [pbr::OriginalName("Req_OwnRecord")] ReqOwnRecord = 1061,
    [pbr::OriginalName("Req_DragonWheel")] ReqDragonWheel = 1062,
    [pbr::OriginalName("Req_SyncHallProp")] ReqSyncHallProp = 1063,
    [pbr::OriginalName("Req_CheckDragonWheelProp")] ReqCheckDragonWheelProp = 1064,
    [pbr::OriginalName("Req_UserPoolDoubleInfo")] ReqUserPoolDoubleInfo = 1100,
    [pbr::OriginalName("Req_UserPoolDouble")] ReqUserPoolDouble = 1101,
    [pbr::OriginalName("Req_LuckyPoolInfo")] ReqLuckyPoolInfo = 1102,
    [pbr::OriginalName("Req_LuckyPoolDraw")] ReqLuckyPoolDraw = 1103,
    [pbr::OriginalName("Req_BigSmallWinInfo")] ReqBigSmallWinInfo = 1120,
    [pbr::OriginalName("Req_TridentRankResult")] ReqTridentRankResult = 1121,
    [pbr::OriginalName("Req_BigSmallRecord")] ReqBigSmallRecord = 1122,
    [pbr::OriginalName("Req_RewardTaskRecord")] ReqRewardTaskRecord = 1130,
    [pbr::OriginalName("Req_RewardAddTask")] ReqRewardAddTask = 1131,
    [pbr::OriginalName("Req_RewardChangeAuto")] ReqRewardChangeAuto = 1132,
    [pbr::OriginalName("Req_RewardAddTaskRep")] ReqRewardAddTaskRep = 1133,
    [pbr::OriginalName("Req_RewardRecordRep")] ReqRewardRecordRep = 1134,
    [pbr::OriginalName("Req_RewardAutoRep")] ReqRewardAutoRep = 1135,
    [pbr::OriginalName("Req_RewardFishGet")] ReqRewardFishGet = 1136,
    [pbr::OriginalName("Req_SendItemsSwitch")] ReqSendItemsSwitch = 1137,
    [pbr::OriginalName("Req_DealSyncSeaCrabCreate")] ReqDealSyncSeaCrabCreate = 1138,
    [pbr::OriginalName("Req_DealSyncCrabHitStatus")] ReqDealSyncCrabHitStatus = 1139,
    [pbr::OriginalName("DealDragonBallEnd")] DealDragonBallEnd = 1140,
    [pbr::OriginalName("Req_DevourHit")] ReqDevourHit = 1141,
    [pbr::OriginalName("Req_UpdateChestStatus")] ReqUpdateChestStatus = 1145,
    [pbr::OriginalName("Req_ChestConfig")] ReqChestConfig = 1146,
    [pbr::OriginalName("Req_OpenChest")] ReqOpenChest = 1147,
    [pbr::OriginalName("Req_SelectChestReward")] ReqSelectChestReward = 1148,
    [pbr::OriginalName("Req_ChestSetAutoSelect")] ReqChestSetAutoSelect = 1149,
    [pbr::OriginalName("Req_ChestSetEnable")] ReqChestSetEnable = 1150,
    [pbr::OriginalName("Req_SyncAnimation")] ReqSyncAnimation = 1151,
    [pbr::OriginalName("Req_MagicCardList")] ReqMagicCardList = 1152,
    [pbr::OriginalName("Req_BuyGun")] ReqBuyGun = 1153,
    [pbr::OriginalName("Req_GunInfo")] ReqGunInfo = 1154,
    [pbr::OriginalName("Req_BuyWings")] ReqBuyWings = 1155,
    [pbr::OriginalName("Req_WingsInfo")] ReqWingsInfo = 1156,
    [pbr::OriginalName("Req_GemConfigList")] ReqGemConfigList = 1157,
    [pbr::OriginalName("Req_JadeAwardInfo")] ReqJadeAwardInfo = 1158,
    [pbr::OriginalName("Req_AztecGemConfig")] ReqAztecGemConfig = 1159,
    [pbr::OriginalName("Req_SetWings")] ReqSetWings = 1211,
    [pbr::OriginalName("Req_TortoiseExplode")] ReqTortoiseExplode = 1200,
    [pbr::OriginalName("Req_WaterDropInfo")] ReqWaterDropInfo = 1210,
    [pbr::OriginalName("Req_BeKicked")] ReqBeKicked = 1220,
    [pbr::OriginalName("Req_ClientTimeValidate")] ReqClientTimeValidate = 1221,
    [pbr::OriginalName("Req_ChangeTable")] ReqChangeTable = 1222,
    [pbr::OriginalName("Req_AwardNotify")] ReqAwardNotify = 20001,
  }

  public enum ErrCode {
    [pbr::OriginalName("Success")] Success = 0,
    [pbr::OriginalName("LoadPropsDataFailed")] LoadPropsDataFailed = 10001,
    [pbr::OriginalName("CanNotFindPlayerPoint")] CanNotFindPlayerPoint = 10002,
    [pbr::OriginalName("ParameterIsWrong")] ParameterIsWrong = 10003,
    [pbr::OriginalName("LackOfMoney")] LackOfMoney = 10004,
    [pbr::OriginalName("FreeTimesChangeRatio")] FreeTimesChangeRatio = 10005,
    [pbr::OriginalName("IsNotSup")] IsNotSup = 10006,
    [pbr::OriginalName("DeserializeFailed")] DeserializeFailed = 10007,
    [pbr::OriginalName("PlayerNotExist")] PlayerNotExist = 10008,
    [pbr::OriginalName("PlayerAlreadyLogin")] PlayerAlreadyLogin = 10009,
    [pbr::OriginalName("LoadPlayerDataFailed")] LoadPlayerDataFailed = 10010,
    [pbr::OriginalName("AllocTableFailed")] AllocTableFailed = 10011,
    [pbr::OriginalName("DefendPlugIn")] DefendPlugIn = 10012,
    [pbr::OriginalName("QPEnterRoomFailed")] QpenterRoomFailed = 10013,
    [pbr::OriginalName("QPBaseUserInfoGetFailed")] QpbaseUserInfoGetFailed = 10014,
    [pbr::OriginalName("QPReadGoldFailed")] QpreadGoldFailed = 10015,
    [pbr::OriginalName("LackMoneyInServer")] LackMoneyInServer = 10016,
    [pbr::OriginalName("AlreadyInOtherGame")] AlreadyInOtherGame = 10017,
    [pbr::OriginalName("ThisRoomIsFull")] ThisRoomIsFull = 10018,
    [pbr::OriginalName("UserPoolNoMeet")] UserPoolNoMeet = 10019,
    [pbr::OriginalName("UserPoolToHigher")] UserPoolToHigher = 10020,
    [pbr::OriginalName("ThisTableIsFull")] ThisTableIsFull = 10021,
    [pbr::OriginalName("ServerClosed")] ServerClosed = 10022,
    [pbr::OriginalName("PlayerNotInTable")] PlayerNotInTable = 10023,
    [pbr::OriginalName("PropNoEnough")] PropNoEnough = 10030,
    [pbr::OriginalName("PropRoomLimit")] PropRoomLimit = 10031,
    [pbr::OriginalName("PropUsing")] PropUsing = 10032,
    [pbr::OriginalName("PropNotExist")] PropNotExist = 10033,
    [pbr::OriginalName("PropUsingSetGun")] PropUsingSetGun = 10034,
    [pbr::OriginalName("ReqAddTaskSettlement")] ReqAddTaskSettlement = 10040,
    [pbr::OriginalName("ReqAddTaskMoneyLess")] ReqAddTaskMoneyLess = 10041,
    [pbr::OriginalName("ReqAddTaskAlready")] ReqAddTaskAlready = 10042,
    [pbr::OriginalName("ReqAddTaskIDInvalid")] ReqAddTaskIdinvalid = 10043,
    [pbr::OriginalName("OpenChestFail")] OpenChestFail = 10050,
    [pbr::OriginalName("SelectChestRewardFail")] SelectChestRewardFail = 10051,
  }

  public enum ItemName {
    [pbr::OriginalName("RewardTaskEnable")] RewardTaskEnable = 0,
  }

  public enum AztecGemType {
    [pbr::OriginalName("AztecGemType_Null")] Null = 0,
    [pbr::OriginalName("AztecGemType_Orange")] Orange = 1,
    [pbr::OriginalName("AztecGemType_Red")] Red = 2,
    [pbr::OriginalName("AztecGemType_Pink")] Pink = 3,
    [pbr::OriginalName("AztecGemType_Purple")] Purple = 4,
    [pbr::OriginalName("AztecGemType_Blue")] Blue = 5,
    [pbr::OriginalName("AztecGemType_Green")] Green = 6,
    [pbr::OriginalName("AztecGemType_A")] A = 7,
    [pbr::OriginalName("AztecGemType_K")] K = 8,
    [pbr::OriginalName("AztecGemType_Q")] Q = 9,
    [pbr::OriginalName("AztecGemType_J")] J = 10,
    [pbr::OriginalName("AztecGemType_10")] _10 = 11,
    [pbr::OriginalName("AztecGemType_Critical")] Critical = 12,
  }

  public enum ChestType {
    [pbr::OriginalName("ChestTypePorcelain")] Porcelain = 0,
    [pbr::OriginalName("ChestTypeBronze")] Bronze = 1,
    [pbr::OriginalName("ChestTypeSilver")] Silver = 2,
    [pbr::OriginalName("ChestTypeGold")] Gold = 3,
  }

  public enum ChestAutoSelectOption {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("RedPacketTicket")] RedPacketTicket = 1,
    [pbr::OriginalName("Money")] Money = 2,
  }

  public enum BeKickedReason {
    [pbr::OriginalName("NoReason")] NoReason = 0,
    [pbr::OriginalName("ServerIsClosed")] ServerIsClosed = 1,
    [pbr::OriginalName("HallCommand")] HallCommand = 2,
    [pbr::OriginalName("NoOperationTimeout")] NoOperationTimeout = 3,
    [pbr::OriginalName("Cheat")] Cheat = 4,
  }

  #endregion

  #region Messages
  public sealed partial class SC_SceneInfo : pb::IMessage<SC_SceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SC_SceneInfo> _parser = new pb::MessageParser<SC_SceneInfo>(() => new SC_SceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SC_SceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_SceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_SceneInfo(SC_SceneInfo other) : this() {
      stationBaseList_ = other.stationBaseList_.Clone();
      timestamp_ = other.timestamp_;
      gunRatioNum_ = other.gunRatioNum_;
      gunLevelNum_ = other.gunLevelNum_;
      ratioList_ = other.ratioList_.Clone();
      gunList_ = other.gunList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SC_SceneInfo Clone() {
      return new SC_SceneInfo(this);
    }

    /// <summary>Field number for the "station_base_list" field.</summary>
    public const int StationBaseListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.StationBase> _repeated_stationBaseList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.StationBase.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.StationBase> stationBaseList_ = new pbc::RepeatedField<global::BYDLD.StationBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.StationBase> StationBaseList {
      get { return stationBaseList_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private int timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "gun_ratio_num" field.</summary>
    public const int GunRatioNumFieldNumber = 3;
    private int gunRatioNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunRatioNum {
      get { return gunRatioNum_; }
      set {
        gunRatioNum_ = value;
      }
    }

    /// <summary>Field number for the "gun_level_num" field.</summary>
    public const int GunLevelNumFieldNumber = 4;
    private int gunLevelNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevelNum {
      get { return gunLevelNum_; }
      set {
        gunLevelNum_ = value;
      }
    }

    /// <summary>Field number for the "ratio_list" field.</summary>
    public const int RatioListFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_ratioList_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> ratioList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RatioList {
      get { return ratioList_; }
    }

    /// <summary>Field number for the "gun_list" field.</summary>
    public const int GunListFieldNumber = 6;
    private static readonly pb::FieldCodec<global::BYDLD.GunDetail> _repeated_gunList_codec
        = pb::FieldCodec.ForMessage(50, global::BYDLD.GunDetail.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.GunDetail> gunList_ = new pbc::RepeatedField<global::BYDLD.GunDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.GunDetail> GunList {
      get { return gunList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SC_SceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SC_SceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stationBaseList_.Equals(other.stationBaseList_)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (GunRatioNum != other.GunRatioNum) return false;
      if (GunLevelNum != other.GunLevelNum) return false;
      if(!ratioList_.Equals(other.ratioList_)) return false;
      if(!gunList_.Equals(other.gunList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stationBaseList_.GetHashCode();
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      if (GunRatioNum != 0) hash ^= GunRatioNum.GetHashCode();
      if (GunLevelNum != 0) hash ^= GunLevelNum.GetHashCode();
      hash ^= ratioList_.GetHashCode();
      hash ^= gunList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stationBaseList_.WriteTo(output, _repeated_stationBaseList_codec);
      if (Timestamp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Timestamp);
      }
      if (GunRatioNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GunRatioNum);
      }
      if (GunLevelNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GunLevelNum);
      }
      ratioList_.WriteTo(output, _repeated_ratioList_codec);
      gunList_.WriteTo(output, _repeated_gunList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stationBaseList_.WriteTo(ref output, _repeated_stationBaseList_codec);
      if (Timestamp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Timestamp);
      }
      if (GunRatioNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GunRatioNum);
      }
      if (GunLevelNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GunLevelNum);
      }
      ratioList_.WriteTo(ref output, _repeated_ratioList_codec);
      gunList_.WriteTo(ref output, _repeated_gunList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stationBaseList_.CalculateSize(_repeated_stationBaseList_codec);
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
      }
      if (GunRatioNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunRatioNum);
      }
      if (GunLevelNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevelNum);
      }
      size += ratioList_.CalculateSize(_repeated_ratioList_codec);
      size += gunList_.CalculateSize(_repeated_gunList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SC_SceneInfo other) {
      if (other == null) {
        return;
      }
      stationBaseList_.Add(other.stationBaseList_);
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      if (other.GunRatioNum != 0) {
        GunRatioNum = other.GunRatioNum;
      }
      if (other.GunLevelNum != 0) {
        GunLevelNum = other.GunLevelNum;
      }
      ratioList_.Add(other.ratioList_);
      gunList_.Add(other.gunList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stationBaseList_.AddEntriesFrom(input, _repeated_stationBaseList_codec);
            break;
          }
          case 16: {
            Timestamp = input.ReadInt32();
            break;
          }
          case 24: {
            GunRatioNum = input.ReadInt32();
            break;
          }
          case 32: {
            GunLevelNum = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            ratioList_.AddEntriesFrom(input, _repeated_ratioList_codec);
            break;
          }
          case 50: {
            gunList_.AddEntriesFrom(input, _repeated_gunList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stationBaseList_.AddEntriesFrom(ref input, _repeated_stationBaseList_codec);
            break;
          }
          case 16: {
            Timestamp = input.ReadInt32();
            break;
          }
          case 24: {
            GunRatioNum = input.ReadInt32();
            break;
          }
          case 32: {
            GunLevelNum = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            ratioList_.AddEntriesFrom(ref input, _repeated_ratioList_codec);
            break;
          }
          case 50: {
            gunList_.AddEntriesFrom(ref input, _repeated_gunList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GunSpecEffect : pb::IMessage<GunSpecEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunSpecEffect> _parser = new pb::MessageParser<GunSpecEffect>(() => new GunSpecEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunSpecEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunSpecEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunSpecEffect(GunSpecEffect other) : this() {
      ratioLimit_ = other.ratioLimit_;
      hitChangeRate_ = other.hitChangeRate_;
      moneyChangeRate_ = other.moneyChangeRate_;
      speedRate_ = other.speedRate_;
      isSenior_ = other.isSenior_;
      doubleTag_ = other.doubleTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunSpecEffect Clone() {
      return new GunSpecEffect(this);
    }

    /// <summary>Field number for the "ratioLimit" field.</summary>
    public const int RatioLimitFieldNumber = 1;
    private int ratioLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatioLimit {
      get { return ratioLimit_; }
      set {
        ratioLimit_ = value;
      }
    }

    /// <summary>Field number for the "hitChangeRate" field.</summary>
    public const int HitChangeRateFieldNumber = 2;
    private float hitChangeRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HitChangeRate {
      get { return hitChangeRate_; }
      set {
        hitChangeRate_ = value;
      }
    }

    /// <summary>Field number for the "moneyChangeRate" field.</summary>
    public const int MoneyChangeRateFieldNumber = 3;
    private float moneyChangeRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MoneyChangeRate {
      get { return moneyChangeRate_; }
      set {
        moneyChangeRate_ = value;
      }
    }

    /// <summary>Field number for the "speedRate" field.</summary>
    public const int SpeedRateFieldNumber = 4;
    private float speedRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SpeedRate {
      get { return speedRate_; }
      set {
        speedRate_ = value;
      }
    }

    /// <summary>Field number for the "is_senior" field.</summary>
    public const int IsSeniorFieldNumber = 5;
    private bool isSenior_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSenior {
      get { return isSenior_; }
      set {
        isSenior_ = value;
      }
    }

    /// <summary>Field number for the "double_tag" field.</summary>
    public const int DoubleTagFieldNumber = 6;
    private bool doubleTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DoubleTag {
      get { return doubleTag_; }
      set {
        doubleTag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunSpecEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunSpecEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatioLimit != other.RatioLimit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HitChangeRate, other.HitChangeRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoneyChangeRate, other.MoneyChangeRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedRate, other.SpeedRate)) return false;
      if (IsSenior != other.IsSenior) return false;
      if (DoubleTag != other.DoubleTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatioLimit != 0) hash ^= RatioLimit.GetHashCode();
      if (HitChangeRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HitChangeRate);
      if (MoneyChangeRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoneyChangeRate);
      if (SpeedRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedRate);
      if (IsSenior != false) hash ^= IsSenior.GetHashCode();
      if (DoubleTag != false) hash ^= DoubleTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RatioLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatioLimit);
      }
      if (HitChangeRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HitChangeRate);
      }
      if (MoneyChangeRate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MoneyChangeRate);
      }
      if (SpeedRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SpeedRate);
      }
      if (IsSenior != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSenior);
      }
      if (DoubleTag != false) {
        output.WriteRawTag(48);
        output.WriteBool(DoubleTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RatioLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatioLimit);
      }
      if (HitChangeRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HitChangeRate);
      }
      if (MoneyChangeRate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MoneyChangeRate);
      }
      if (SpeedRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SpeedRate);
      }
      if (IsSenior != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSenior);
      }
      if (DoubleTag != false) {
        output.WriteRawTag(48);
        output.WriteBool(DoubleTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatioLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatioLimit);
      }
      if (HitChangeRate != 0F) {
        size += 1 + 4;
      }
      if (MoneyChangeRate != 0F) {
        size += 1 + 4;
      }
      if (SpeedRate != 0F) {
        size += 1 + 4;
      }
      if (IsSenior != false) {
        size += 1 + 1;
      }
      if (DoubleTag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunSpecEffect other) {
      if (other == null) {
        return;
      }
      if (other.RatioLimit != 0) {
        RatioLimit = other.RatioLimit;
      }
      if (other.HitChangeRate != 0F) {
        HitChangeRate = other.HitChangeRate;
      }
      if (other.MoneyChangeRate != 0F) {
        MoneyChangeRate = other.MoneyChangeRate;
      }
      if (other.SpeedRate != 0F) {
        SpeedRate = other.SpeedRate;
      }
      if (other.IsSenior != false) {
        IsSenior = other.IsSenior;
      }
      if (other.DoubleTag != false) {
        DoubleTag = other.DoubleTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RatioLimit = input.ReadInt32();
            break;
          }
          case 21: {
            HitChangeRate = input.ReadFloat();
            break;
          }
          case 29: {
            MoneyChangeRate = input.ReadFloat();
            break;
          }
          case 37: {
            SpeedRate = input.ReadFloat();
            break;
          }
          case 40: {
            IsSenior = input.ReadBool();
            break;
          }
          case 48: {
            DoubleTag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RatioLimit = input.ReadInt32();
            break;
          }
          case 21: {
            HitChangeRate = input.ReadFloat();
            break;
          }
          case 29: {
            MoneyChangeRate = input.ReadFloat();
            break;
          }
          case 37: {
            SpeedRate = input.ReadFloat();
            break;
          }
          case 40: {
            IsSenior = input.ReadBool();
            break;
          }
          case 48: {
            DoubleTag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WingsSpecEffect : pb::IMessage<WingsSpecEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WingsSpecEffect> _parser = new pb::MessageParser<WingsSpecEffect>(() => new WingsSpecEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WingsSpecEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WingsSpecEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WingsSpecEffect(WingsSpecEffect other) : this() {
      ratioLimit_ = other.ratioLimit_;
      hitChangeRate_ = other.hitChangeRate_;
      moneyChangeRate_ = other.moneyChangeRate_;
      speedRate_ = other.speedRate_;
      isSenior_ = other.isSenior_;
      doubleTag_ = other.doubleTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WingsSpecEffect Clone() {
      return new WingsSpecEffect(this);
    }

    /// <summary>Field number for the "ratioLimit" field.</summary>
    public const int RatioLimitFieldNumber = 1;
    private int ratioLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatioLimit {
      get { return ratioLimit_; }
      set {
        ratioLimit_ = value;
      }
    }

    /// <summary>Field number for the "hitChangeRate" field.</summary>
    public const int HitChangeRateFieldNumber = 2;
    private float hitChangeRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float HitChangeRate {
      get { return hitChangeRate_; }
      set {
        hitChangeRate_ = value;
      }
    }

    /// <summary>Field number for the "moneyChangeRate" field.</summary>
    public const int MoneyChangeRateFieldNumber = 3;
    private float moneyChangeRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MoneyChangeRate {
      get { return moneyChangeRate_; }
      set {
        moneyChangeRate_ = value;
      }
    }

    /// <summary>Field number for the "speedRate" field.</summary>
    public const int SpeedRateFieldNumber = 4;
    private float speedRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SpeedRate {
      get { return speedRate_; }
      set {
        speedRate_ = value;
      }
    }

    /// <summary>Field number for the "is_senior" field.</summary>
    public const int IsSeniorFieldNumber = 5;
    private bool isSenior_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSenior {
      get { return isSenior_; }
      set {
        isSenior_ = value;
      }
    }

    /// <summary>Field number for the "double_tag" field.</summary>
    public const int DoubleTagFieldNumber = 6;
    private bool doubleTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DoubleTag {
      get { return doubleTag_; }
      set {
        doubleTag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WingsSpecEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WingsSpecEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatioLimit != other.RatioLimit) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HitChangeRate, other.HitChangeRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MoneyChangeRate, other.MoneyChangeRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpeedRate, other.SpeedRate)) return false;
      if (IsSenior != other.IsSenior) return false;
      if (DoubleTag != other.DoubleTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatioLimit != 0) hash ^= RatioLimit.GetHashCode();
      if (HitChangeRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HitChangeRate);
      if (MoneyChangeRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MoneyChangeRate);
      if (SpeedRate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpeedRate);
      if (IsSenior != false) hash ^= IsSenior.GetHashCode();
      if (DoubleTag != false) hash ^= DoubleTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RatioLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatioLimit);
      }
      if (HitChangeRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HitChangeRate);
      }
      if (MoneyChangeRate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MoneyChangeRate);
      }
      if (SpeedRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SpeedRate);
      }
      if (IsSenior != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSenior);
      }
      if (DoubleTag != false) {
        output.WriteRawTag(48);
        output.WriteBool(DoubleTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RatioLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatioLimit);
      }
      if (HitChangeRate != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(HitChangeRate);
      }
      if (MoneyChangeRate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MoneyChangeRate);
      }
      if (SpeedRate != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SpeedRate);
      }
      if (IsSenior != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSenior);
      }
      if (DoubleTag != false) {
        output.WriteRawTag(48);
        output.WriteBool(DoubleTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatioLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatioLimit);
      }
      if (HitChangeRate != 0F) {
        size += 1 + 4;
      }
      if (MoneyChangeRate != 0F) {
        size += 1 + 4;
      }
      if (SpeedRate != 0F) {
        size += 1 + 4;
      }
      if (IsSenior != false) {
        size += 1 + 1;
      }
      if (DoubleTag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WingsSpecEffect other) {
      if (other == null) {
        return;
      }
      if (other.RatioLimit != 0) {
        RatioLimit = other.RatioLimit;
      }
      if (other.HitChangeRate != 0F) {
        HitChangeRate = other.HitChangeRate;
      }
      if (other.MoneyChangeRate != 0F) {
        MoneyChangeRate = other.MoneyChangeRate;
      }
      if (other.SpeedRate != 0F) {
        SpeedRate = other.SpeedRate;
      }
      if (other.IsSenior != false) {
        IsSenior = other.IsSenior;
      }
      if (other.DoubleTag != false) {
        DoubleTag = other.DoubleTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RatioLimit = input.ReadInt32();
            break;
          }
          case 21: {
            HitChangeRate = input.ReadFloat();
            break;
          }
          case 29: {
            MoneyChangeRate = input.ReadFloat();
            break;
          }
          case 37: {
            SpeedRate = input.ReadFloat();
            break;
          }
          case 40: {
            IsSenior = input.ReadBool();
            break;
          }
          case 48: {
            DoubleTag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RatioLimit = input.ReadInt32();
            break;
          }
          case 21: {
            HitChangeRate = input.ReadFloat();
            break;
          }
          case 29: {
            MoneyChangeRate = input.ReadFloat();
            break;
          }
          case 37: {
            SpeedRate = input.ReadFloat();
            break;
          }
          case 40: {
            IsSenior = input.ReadBool();
            break;
          }
          case 48: {
            DoubleTag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WingsInfo : pb::IMessage<WingsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WingsInfo> _parser = new pb::MessageParser<WingsInfo>(() => new WingsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WingsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WingsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WingsInfo(WingsInfo other) : this() {
      wingsId_ = other.wingsId_;
      enable_ = other.enable_;
      wingsSpecEffect_ = other.wingsSpecEffect_ != null ? other.wingsSpecEffect_.Clone() : null;
      receiveType_ = other.receiveType_;
      activityId_ = other.activityId_;
      price_ = other.price_;
      timeStamp_ = other.timeStamp_;
      discountPrice_ = other.discountPrice_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WingsInfo Clone() {
      return new WingsInfo(this);
    }

    /// <summary>Field number for the "wings_id" field.</summary>
    public const int WingsIdFieldNumber = 1;
    private int wingsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WingsId {
      get { return wingsId_; }
      set {
        wingsId_ = value;
      }
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 2;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    /// <summary>Field number for the "wings_spec_effect" field.</summary>
    public const int WingsSpecEffectFieldNumber = 3;
    private global::BYDLD.WingsSpecEffect wingsSpecEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.WingsSpecEffect WingsSpecEffect {
      get { return wingsSpecEffect_; }
      set {
        wingsSpecEffect_ = value;
      }
    }

    /// <summary>Field number for the "receive_type" field.</summary>
    public const int ReceiveTypeFieldNumber = 4;
    private int receiveType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReceiveType {
      get { return receiveType_; }
      set {
        receiveType_ = value;
      }
    }

    /// <summary>Field number for the "activity_id" field.</summary>
    public const int ActivityIdFieldNumber = 5;
    private int activityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActivityId {
      get { return activityId_; }
      set {
        activityId_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 6;
    private int price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "time_stamp" field.</summary>
    public const int TimeStampFieldNumber = 7;
    private int timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    /// <summary>Field number for the "discount_price" field.</summary>
    public const int DiscountPriceFieldNumber = 8;
    private int discountPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DiscountPrice {
      get { return discountPrice_; }
      set {
        discountPrice_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 9;
    private int startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 10;
    private int endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WingsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WingsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WingsId != other.WingsId) return false;
      if (Enable != other.Enable) return false;
      if (!object.Equals(WingsSpecEffect, other.WingsSpecEffect)) return false;
      if (ReceiveType != other.ReceiveType) return false;
      if (ActivityId != other.ActivityId) return false;
      if (Price != other.Price) return false;
      if (TimeStamp != other.TimeStamp) return false;
      if (DiscountPrice != other.DiscountPrice) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WingsId != 0) hash ^= WingsId.GetHashCode();
      if (Enable != false) hash ^= Enable.GetHashCode();
      if (wingsSpecEffect_ != null) hash ^= WingsSpecEffect.GetHashCode();
      if (ReceiveType != 0) hash ^= ReceiveType.GetHashCode();
      if (ActivityId != 0) hash ^= ActivityId.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (TimeStamp != 0) hash ^= TimeStamp.GetHashCode();
      if (DiscountPrice != 0) hash ^= DiscountPrice.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WingsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsId);
      }
      if (Enable != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enable);
      }
      if (wingsSpecEffect_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WingsSpecEffect);
      }
      if (ReceiveType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ReceiveType);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ActivityId);
      }
      if (Price != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Price);
      }
      if (TimeStamp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TimeStamp);
      }
      if (DiscountPrice != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DiscountPrice);
      }
      if (StartTime != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartTime);
      }
      if (EndTime != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WingsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsId);
      }
      if (Enable != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enable);
      }
      if (wingsSpecEffect_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WingsSpecEffect);
      }
      if (ReceiveType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ReceiveType);
      }
      if (ActivityId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ActivityId);
      }
      if (Price != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Price);
      }
      if (TimeStamp != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TimeStamp);
      }
      if (DiscountPrice != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DiscountPrice);
      }
      if (StartTime != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartTime);
      }
      if (EndTime != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WingsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WingsId);
      }
      if (Enable != false) {
        size += 1 + 1;
      }
      if (wingsSpecEffect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WingsSpecEffect);
      }
      if (ReceiveType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiveType);
      }
      if (ActivityId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActivityId);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (TimeStamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeStamp);
      }
      if (DiscountPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DiscountPrice);
      }
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WingsInfo other) {
      if (other == null) {
        return;
      }
      if (other.WingsId != 0) {
        WingsId = other.WingsId;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      if (other.wingsSpecEffect_ != null) {
        if (wingsSpecEffect_ == null) {
          WingsSpecEffect = new global::BYDLD.WingsSpecEffect();
        }
        WingsSpecEffect.MergeFrom(other.WingsSpecEffect);
      }
      if (other.ReceiveType != 0) {
        ReceiveType = other.ReceiveType;
      }
      if (other.ActivityId != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.TimeStamp != 0) {
        TimeStamp = other.TimeStamp;
      }
      if (other.DiscountPrice != 0) {
        DiscountPrice = other.DiscountPrice;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WingsId = input.ReadInt32();
            break;
          }
          case 16: {
            Enable = input.ReadBool();
            break;
          }
          case 26: {
            if (wingsSpecEffect_ == null) {
              WingsSpecEffect = new global::BYDLD.WingsSpecEffect();
            }
            input.ReadMessage(WingsSpecEffect);
            break;
          }
          case 32: {
            ReceiveType = input.ReadInt32();
            break;
          }
          case 40: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 48: {
            Price = input.ReadInt32();
            break;
          }
          case 56: {
            TimeStamp = input.ReadInt32();
            break;
          }
          case 64: {
            DiscountPrice = input.ReadInt32();
            break;
          }
          case 72: {
            StartTime = input.ReadInt32();
            break;
          }
          case 80: {
            EndTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WingsId = input.ReadInt32();
            break;
          }
          case 16: {
            Enable = input.ReadBool();
            break;
          }
          case 26: {
            if (wingsSpecEffect_ == null) {
              WingsSpecEffect = new global::BYDLD.WingsSpecEffect();
            }
            input.ReadMessage(WingsSpecEffect);
            break;
          }
          case 32: {
            ReceiveType = input.ReadInt32();
            break;
          }
          case 40: {
            ActivityId = input.ReadInt32();
            break;
          }
          case 48: {
            Price = input.ReadInt32();
            break;
          }
          case 56: {
            TimeStamp = input.ReadInt32();
            break;
          }
          case 64: {
            DiscountPrice = input.ReadInt32();
            break;
          }
          case 72: {
            StartTime = input.ReadInt32();
            break;
          }
          case 80: {
            EndTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PurchaseGun : pb::IMessage<PurchaseGun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PurchaseGun> _parser = new pb::MessageParser<PurchaseGun>(() => new PurchaseGun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PurchaseGun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseGun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseGun(PurchaseGun other) : this() {
      money_ = other.money_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PurchaseGun Clone() {
      return new PurchaseGun(this);
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 1;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PurchaseGun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PurchaseGun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Money != other.Money) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Money != 0) hash ^= Money.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Money != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Money);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Money != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Money);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PurchaseGun other) {
      if (other == null) {
        return;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Money = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Money = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCVipInfo : pb::IMessage<SCVipInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCVipInfo> _parser = new pb::MessageParser<SCVipInfo>(() => new SCVipInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCVipInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCVipInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCVipInfo(SCVipInfo other) : this() {
      chairIdx_ = other.chairIdx_;
      curVip_ = other.curVip_;
      trident1Vip_ = other.trident1Vip_;
      trident2Vip_ = other.trident2Vip_;
      trident3Vip_ = other.trident3Vip_;
      trident4Vip_ = other.trident4Vip_;
      trident5Vip_ = other.trident5Vip_;
      doubleShootVip_ = other.doubleShootVip_;
      lockShootVip_ = other.lockShootVip_;
      goldenGunVip_ = other.goldenGunVip_;
      paladinGunVip_ = other.paladinGunVip_;
      pandaGunVip_ = other.pandaGunVip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCVipInfo Clone() {
      return new SCVipInfo(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "cur_vip" field.</summary>
    public const int CurVipFieldNumber = 2;
    private int curVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurVip {
      get { return curVip_; }
      set {
        curVip_ = value;
      }
    }

    /// <summary>Field number for the "trident1_vip" field.</summary>
    public const int Trident1VipFieldNumber = 3;
    private int trident1Vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Trident1Vip {
      get { return trident1Vip_; }
      set {
        trident1Vip_ = value;
      }
    }

    /// <summary>Field number for the "trident2_vip" field.</summary>
    public const int Trident2VipFieldNumber = 4;
    private int trident2Vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Trident2Vip {
      get { return trident2Vip_; }
      set {
        trident2Vip_ = value;
      }
    }

    /// <summary>Field number for the "trident3_vip" field.</summary>
    public const int Trident3VipFieldNumber = 5;
    private int trident3Vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Trident3Vip {
      get { return trident3Vip_; }
      set {
        trident3Vip_ = value;
      }
    }

    /// <summary>Field number for the "trident4_vip" field.</summary>
    public const int Trident4VipFieldNumber = 6;
    private int trident4Vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Trident4Vip {
      get { return trident4Vip_; }
      set {
        trident4Vip_ = value;
      }
    }

    /// <summary>Field number for the "trident5_vip" field.</summary>
    public const int Trident5VipFieldNumber = 7;
    private int trident5Vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Trident5Vip {
      get { return trident5Vip_; }
      set {
        trident5Vip_ = value;
      }
    }

    /// <summary>Field number for the "double_shoot_vip" field.</summary>
    public const int DoubleShootVipFieldNumber = 8;
    private int doubleShootVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DoubleShootVip {
      get { return doubleShootVip_; }
      set {
        doubleShootVip_ = value;
      }
    }

    /// <summary>Field number for the "lock_shoot_vip" field.</summary>
    public const int LockShootVipFieldNumber = 9;
    private int lockShootVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LockShootVip {
      get { return lockShootVip_; }
      set {
        lockShootVip_ = value;
      }
    }

    /// <summary>Field number for the "golden_gun_vip" field.</summary>
    public const int GoldenGunVipFieldNumber = 10;
    private int goldenGunVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoldenGunVip {
      get { return goldenGunVip_; }
      set {
        goldenGunVip_ = value;
      }
    }

    /// <summary>Field number for the "paladin_gun_vip" field.</summary>
    public const int PaladinGunVipFieldNumber = 11;
    private int paladinGunVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PaladinGunVip {
      get { return paladinGunVip_; }
      set {
        paladinGunVip_ = value;
      }
    }

    /// <summary>Field number for the "panda_gun_vip" field.</summary>
    public const int PandaGunVipFieldNumber = 12;
    private int pandaGunVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PandaGunVip {
      get { return pandaGunVip_; }
      set {
        pandaGunVip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCVipInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCVipInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (CurVip != other.CurVip) return false;
      if (Trident1Vip != other.Trident1Vip) return false;
      if (Trident2Vip != other.Trident2Vip) return false;
      if (Trident3Vip != other.Trident3Vip) return false;
      if (Trident4Vip != other.Trident4Vip) return false;
      if (Trident5Vip != other.Trident5Vip) return false;
      if (DoubleShootVip != other.DoubleShootVip) return false;
      if (LockShootVip != other.LockShootVip) return false;
      if (GoldenGunVip != other.GoldenGunVip) return false;
      if (PaladinGunVip != other.PaladinGunVip) return false;
      if (PandaGunVip != other.PandaGunVip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (CurVip != 0) hash ^= CurVip.GetHashCode();
      if (Trident1Vip != 0) hash ^= Trident1Vip.GetHashCode();
      if (Trident2Vip != 0) hash ^= Trident2Vip.GetHashCode();
      if (Trident3Vip != 0) hash ^= Trident3Vip.GetHashCode();
      if (Trident4Vip != 0) hash ^= Trident4Vip.GetHashCode();
      if (Trident5Vip != 0) hash ^= Trident5Vip.GetHashCode();
      if (DoubleShootVip != 0) hash ^= DoubleShootVip.GetHashCode();
      if (LockShootVip != 0) hash ^= LockShootVip.GetHashCode();
      if (GoldenGunVip != 0) hash ^= GoldenGunVip.GetHashCode();
      if (PaladinGunVip != 0) hash ^= PaladinGunVip.GetHashCode();
      if (PandaGunVip != 0) hash ^= PandaGunVip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (CurVip != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurVip);
      }
      if (Trident1Vip != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trident1Vip);
      }
      if (Trident2Vip != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Trident2Vip);
      }
      if (Trident3Vip != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Trident3Vip);
      }
      if (Trident4Vip != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Trident4Vip);
      }
      if (Trident5Vip != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Trident5Vip);
      }
      if (DoubleShootVip != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DoubleShootVip);
      }
      if (LockShootVip != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LockShootVip);
      }
      if (GoldenGunVip != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GoldenGunVip);
      }
      if (PaladinGunVip != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PaladinGunVip);
      }
      if (PandaGunVip != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PandaGunVip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (CurVip != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurVip);
      }
      if (Trident1Vip != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Trident1Vip);
      }
      if (Trident2Vip != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Trident2Vip);
      }
      if (Trident3Vip != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Trident3Vip);
      }
      if (Trident4Vip != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Trident4Vip);
      }
      if (Trident5Vip != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Trident5Vip);
      }
      if (DoubleShootVip != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DoubleShootVip);
      }
      if (LockShootVip != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(LockShootVip);
      }
      if (GoldenGunVip != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(GoldenGunVip);
      }
      if (PaladinGunVip != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PaladinGunVip);
      }
      if (PandaGunVip != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PandaGunVip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (CurVip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurVip);
      }
      if (Trident1Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trident1Vip);
      }
      if (Trident2Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trident2Vip);
      }
      if (Trident3Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trident3Vip);
      }
      if (Trident4Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trident4Vip);
      }
      if (Trident5Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Trident5Vip);
      }
      if (DoubleShootVip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DoubleShootVip);
      }
      if (LockShootVip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LockShootVip);
      }
      if (GoldenGunVip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldenGunVip);
      }
      if (PaladinGunVip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PaladinGunVip);
      }
      if (PandaGunVip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PandaGunVip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCVipInfo other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.CurVip != 0) {
        CurVip = other.CurVip;
      }
      if (other.Trident1Vip != 0) {
        Trident1Vip = other.Trident1Vip;
      }
      if (other.Trident2Vip != 0) {
        Trident2Vip = other.Trident2Vip;
      }
      if (other.Trident3Vip != 0) {
        Trident3Vip = other.Trident3Vip;
      }
      if (other.Trident4Vip != 0) {
        Trident4Vip = other.Trident4Vip;
      }
      if (other.Trident5Vip != 0) {
        Trident5Vip = other.Trident5Vip;
      }
      if (other.DoubleShootVip != 0) {
        DoubleShootVip = other.DoubleShootVip;
      }
      if (other.LockShootVip != 0) {
        LockShootVip = other.LockShootVip;
      }
      if (other.GoldenGunVip != 0) {
        GoldenGunVip = other.GoldenGunVip;
      }
      if (other.PaladinGunVip != 0) {
        PaladinGunVip = other.PaladinGunVip;
      }
      if (other.PandaGunVip != 0) {
        PandaGunVip = other.PandaGunVip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            CurVip = input.ReadInt32();
            break;
          }
          case 24: {
            Trident1Vip = input.ReadInt32();
            break;
          }
          case 32: {
            Trident2Vip = input.ReadInt32();
            break;
          }
          case 40: {
            Trident3Vip = input.ReadInt32();
            break;
          }
          case 48: {
            Trident4Vip = input.ReadInt32();
            break;
          }
          case 56: {
            Trident5Vip = input.ReadInt32();
            break;
          }
          case 64: {
            DoubleShootVip = input.ReadInt32();
            break;
          }
          case 72: {
            LockShootVip = input.ReadInt32();
            break;
          }
          case 80: {
            GoldenGunVip = input.ReadInt32();
            break;
          }
          case 88: {
            PaladinGunVip = input.ReadInt32();
            break;
          }
          case 96: {
            PandaGunVip = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            CurVip = input.ReadInt32();
            break;
          }
          case 24: {
            Trident1Vip = input.ReadInt32();
            break;
          }
          case 32: {
            Trident2Vip = input.ReadInt32();
            break;
          }
          case 40: {
            Trident3Vip = input.ReadInt32();
            break;
          }
          case 48: {
            Trident4Vip = input.ReadInt32();
            break;
          }
          case 56: {
            Trident5Vip = input.ReadInt32();
            break;
          }
          case 64: {
            DoubleShootVip = input.ReadInt32();
            break;
          }
          case 72: {
            LockShootVip = input.ReadInt32();
            break;
          }
          case 80: {
            GoldenGunVip = input.ReadInt32();
            break;
          }
          case 88: {
            PaladinGunVip = input.ReadInt32();
            break;
          }
          case 96: {
            PandaGunVip = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GunDetail : pb::IMessage<GunDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GunDetail> _parser = new pb::MessageParser<GunDetail>(() => new GunDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GunDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunDetail(GunDetail other) : this() {
      gunLevel_ = other.gunLevel_;
      enable_ = other.enable_;
      ratioMin_ = other.ratioMin_;
      ratioMax_ = other.ratioMax_;
      vipLimit_ = other.vipLimit_;
      price_ = other.price_;
      attackSpeed_ = other.attackSpeed_;
      propId_ = other.propId_;
      gunSpecEffect_ = other.gunSpecEffect_ != null ? other.gunSpecEffect_.Clone() : null;
      discountPrice_ = other.discountPrice_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      ratioList_ = other.ratioList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GunDetail Clone() {
      return new GunDetail(this);
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 1;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 2;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    /// <summary>Field number for the "ratio_min" field.</summary>
    public const int RatioMinFieldNumber = 3;
    private int ratioMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatioMin {
      get { return ratioMin_; }
      set {
        ratioMin_ = value;
      }
    }

    /// <summary>Field number for the "ratio_max" field.</summary>
    public const int RatioMaxFieldNumber = 4;
    private int ratioMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatioMax {
      get { return ratioMax_; }
      set {
        ratioMax_ = value;
      }
    }

    /// <summary>Field number for the "vip_limit" field.</summary>
    public const int VipLimitFieldNumber = 5;
    private int vipLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLimit {
      get { return vipLimit_; }
      set {
        vipLimit_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 6;
    private int price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "attack_speed" field.</summary>
    public const int AttackSpeedFieldNumber = 7;
    private float attackSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AttackSpeed {
      get { return attackSpeed_; }
      set {
        attackSpeed_ = value;
      }
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 8;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "gunSpecEffect" field.</summary>
    public const int GunSpecEffectFieldNumber = 9;
    private global::BYDLD.GunSpecEffect gunSpecEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.GunSpecEffect GunSpecEffect {
      get { return gunSpecEffect_; }
      set {
        gunSpecEffect_ = value;
      }
    }

    /// <summary>Field number for the "discount_price" field.</summary>
    public const int DiscountPriceFieldNumber = 10;
    private int discountPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DiscountPrice {
      get { return discountPrice_; }
      set {
        discountPrice_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 11;
    private int startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 12;
    private int endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "ratio_list" field.</summary>
    public const int RatioListFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_ratioList_codec
        = pb::FieldCodec.ForInt32(106);
    private readonly pbc::RepeatedField<int> ratioList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RatioList {
      get { return ratioList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GunDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GunDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunLevel != other.GunLevel) return false;
      if (Enable != other.Enable) return false;
      if (RatioMin != other.RatioMin) return false;
      if (RatioMax != other.RatioMax) return false;
      if (VipLimit != other.VipLimit) return false;
      if (Price != other.Price) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AttackSpeed, other.AttackSpeed)) return false;
      if (PropId != other.PropId) return false;
      if (!object.Equals(GunSpecEffect, other.GunSpecEffect)) return false;
      if (DiscountPrice != other.DiscountPrice) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if(!ratioList_.Equals(other.ratioList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (Enable != false) hash ^= Enable.GetHashCode();
      if (RatioMin != 0) hash ^= RatioMin.GetHashCode();
      if (RatioMax != 0) hash ^= RatioMax.GetHashCode();
      if (VipLimit != 0) hash ^= VipLimit.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (AttackSpeed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AttackSpeed);
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (gunSpecEffect_ != null) hash ^= GunSpecEffect.GetHashCode();
      if (DiscountPrice != 0) hash ^= DiscountPrice.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      hash ^= ratioList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GunLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunLevel);
      }
      if (Enable != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enable);
      }
      if (RatioMin != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RatioMin);
      }
      if (RatioMax != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RatioMax);
      }
      if (VipLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(VipLimit);
      }
      if (Price != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Price);
      }
      if (AttackSpeed != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(AttackSpeed);
      }
      if (PropId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PropId);
      }
      if (gunSpecEffect_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GunSpecEffect);
      }
      if (DiscountPrice != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DiscountPrice);
      }
      if (StartTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(StartTime);
      }
      if (EndTime != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EndTime);
      }
      ratioList_.WriteTo(output, _repeated_ratioList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GunLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunLevel);
      }
      if (Enable != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enable);
      }
      if (RatioMin != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RatioMin);
      }
      if (RatioMax != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RatioMax);
      }
      if (VipLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(VipLimit);
      }
      if (Price != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Price);
      }
      if (AttackSpeed != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(AttackSpeed);
      }
      if (PropId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PropId);
      }
      if (gunSpecEffect_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GunSpecEffect);
      }
      if (DiscountPrice != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DiscountPrice);
      }
      if (StartTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(StartTime);
      }
      if (EndTime != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EndTime);
      }
      ratioList_.WriteTo(ref output, _repeated_ratioList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (Enable != false) {
        size += 1 + 1;
      }
      if (RatioMin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatioMin);
      }
      if (RatioMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatioMax);
      }
      if (VipLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLimit);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (AttackSpeed != 0F) {
        size += 1 + 4;
      }
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (gunSpecEffect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GunSpecEffect);
      }
      if (DiscountPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DiscountPrice);
      }
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      size += ratioList_.CalculateSize(_repeated_ratioList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GunDetail other) {
      if (other == null) {
        return;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      if (other.RatioMin != 0) {
        RatioMin = other.RatioMin;
      }
      if (other.RatioMax != 0) {
        RatioMax = other.RatioMax;
      }
      if (other.VipLimit != 0) {
        VipLimit = other.VipLimit;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.AttackSpeed != 0F) {
        AttackSpeed = other.AttackSpeed;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.gunSpecEffect_ != null) {
        if (gunSpecEffect_ == null) {
          GunSpecEffect = new global::BYDLD.GunSpecEffect();
        }
        GunSpecEffect.MergeFrom(other.GunSpecEffect);
      }
      if (other.DiscountPrice != 0) {
        DiscountPrice = other.DiscountPrice;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      ratioList_.Add(other.ratioList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 16: {
            Enable = input.ReadBool();
            break;
          }
          case 24: {
            RatioMin = input.ReadInt32();
            break;
          }
          case 32: {
            RatioMax = input.ReadInt32();
            break;
          }
          case 40: {
            VipLimit = input.ReadInt32();
            break;
          }
          case 48: {
            Price = input.ReadInt32();
            break;
          }
          case 61: {
            AttackSpeed = input.ReadFloat();
            break;
          }
          case 64: {
            PropId = input.ReadInt32();
            break;
          }
          case 74: {
            if (gunSpecEffect_ == null) {
              GunSpecEffect = new global::BYDLD.GunSpecEffect();
            }
            input.ReadMessage(GunSpecEffect);
            break;
          }
          case 80: {
            DiscountPrice = input.ReadInt32();
            break;
          }
          case 88: {
            StartTime = input.ReadInt32();
            break;
          }
          case 96: {
            EndTime = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            ratioList_.AddEntriesFrom(input, _repeated_ratioList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 16: {
            Enable = input.ReadBool();
            break;
          }
          case 24: {
            RatioMin = input.ReadInt32();
            break;
          }
          case 32: {
            RatioMax = input.ReadInt32();
            break;
          }
          case 40: {
            VipLimit = input.ReadInt32();
            break;
          }
          case 48: {
            Price = input.ReadInt32();
            break;
          }
          case 61: {
            AttackSpeed = input.ReadFloat();
            break;
          }
          case 64: {
            PropId = input.ReadInt32();
            break;
          }
          case 74: {
            if (gunSpecEffect_ == null) {
              GunSpecEffect = new global::BYDLD.GunSpecEffect();
            }
            input.ReadMessage(GunSpecEffect);
            break;
          }
          case 80: {
            DiscountPrice = input.ReadInt32();
            break;
          }
          case 88: {
            StartTime = input.ReadInt32();
            break;
          }
          case 96: {
            EndTime = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            ratioList_.AddEntriesFrom(ref input, _repeated_ratioList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCWingsInfo : pb::IMessage<SCWingsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCWingsInfo> _parser = new pb::MessageParser<SCWingsInfo>(() => new SCWingsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCWingsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCWingsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCWingsInfo(SCWingsInfo other) : this() {
      wingsList_ = other.wingsList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCWingsInfo Clone() {
      return new SCWingsInfo(this);
    }

    /// <summary>Field number for the "wings_list" field.</summary>
    public const int WingsListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.WingsInfo> _repeated_wingsList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.WingsInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.WingsInfo> wingsList_ = new pbc::RepeatedField<global::BYDLD.WingsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.WingsInfo> WingsList {
      get { return wingsList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCWingsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCWingsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!wingsList_.Equals(other.wingsList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= wingsList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      wingsList_.WriteTo(output, _repeated_wingsList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      wingsList_.WriteTo(ref output, _repeated_wingsList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += wingsList_.CalculateSize(_repeated_wingsList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCWingsInfo other) {
      if (other == null) {
        return;
      }
      wingsList_.Add(other.wingsList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            wingsList_.AddEntriesFrom(input, _repeated_wingsList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            wingsList_.AddEntriesFrom(ref input, _repeated_wingsList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCGunInfo : pb::IMessage<SCGunInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGunInfo> _parser = new pb::MessageParser<SCGunInfo>(() => new SCGunInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGunInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGunInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGunInfo(SCGunInfo other) : this() {
      gunList_ = other.gunList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGunInfo Clone() {
      return new SCGunInfo(this);
    }

    /// <summary>Field number for the "gun_list" field.</summary>
    public const int GunListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.GunDetail> _repeated_gunList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.GunDetail.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.GunDetail> gunList_ = new pbc::RepeatedField<global::BYDLD.GunDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.GunDetail> GunList {
      get { return gunList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGunInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGunInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gunList_.Equals(other.gunList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gunList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gunList_.WriteTo(output, _repeated_gunList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gunList_.WriteTo(ref output, _repeated_gunList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gunList_.CalculateSize(_repeated_gunList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGunInfo other) {
      if (other == null) {
        return;
      }
      gunList_.Add(other.gunList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gunList_.AddEntriesFrom(input, _repeated_gunList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gunList_.AddEntriesFrom(ref input, _repeated_gunList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPurchaseCheck : pb::IMessage<SCPurchaseCheck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPurchaseCheck> _parser = new pb::MessageParser<SCPurchaseCheck>(() => new SCPurchaseCheck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPurchaseCheck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPurchaseCheck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPurchaseCheck(SCPurchaseCheck other) : this() {
      isPurchase_ = other.isPurchase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPurchaseCheck Clone() {
      return new SCPurchaseCheck(this);
    }

    /// <summary>Field number for the "is_purchase" field.</summary>
    public const int IsPurchaseFieldNumber = 1;
    private int isPurchase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsPurchase {
      get { return isPurchase_; }
      set {
        isPurchase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPurchaseCheck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPurchaseCheck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsPurchase != other.IsPurchase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsPurchase != 0) hash ^= IsPurchase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsPurchase != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IsPurchase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsPurchase != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IsPurchase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsPurchase != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsPurchase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPurchaseCheck other) {
      if (other == null) {
        return;
      }
      if (other.IsPurchase != 0) {
        IsPurchase = other.IsPurchase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsPurchase = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsPurchase = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectData : pb::IMessage<ObjectData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectData> _parser = new pb::MessageParser<ObjectData>(() => new ObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectData(ObjectData other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjectData Clone() {
      return new ObjectData(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjectData other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Object2 : pb::IMessage<Object2>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Object2> _parser = new pb::MessageParser<Object2>(() => new Object2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Object2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object2(Object2 other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object2 Clone() {
      return new Object2(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Object2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Object2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Object2 other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Object3 : pb::IMessage<Object3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Object3> _parser = new pb::MessageParser<Object3>(() => new Object3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Object3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object3(Object3 other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object3 Clone() {
      return new Object3(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Object3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Object3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0) hash ^= Key.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Object3 other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Object4 : pb::IMessage<Object4>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Object4> _parser = new pb::MessageParser<Object4>(() => new Object4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Object4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object4(Object4 other) : this() {
      key_ = other.key_;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object4 Clone() {
      return new Object4(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_value_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> value_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Object4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Object4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0) hash ^= Key.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Object4 other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Decimal : pb::IMessage<Decimal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Decimal> _parser = new pb::MessageParser<Decimal>(() => new Decimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Decimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Decimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Decimal(Decimal other) : this() {
      num_ = other.num_;
      denom_ = other.denom_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Decimal Clone() {
      return new Decimal(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "denom" field.</summary>
    public const int DenomFieldNumber = 2;
    private int denom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Denom {
      get { return denom_; }
      set {
        denom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Decimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Decimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      if (Denom != other.Denom) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0) hash ^= Num.GetHashCode();
      if (Denom != 0) hash ^= Denom.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Num != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Num);
      }
      if (Denom != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Denom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Num != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Num);
      }
      if (Denom != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Denom);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (Denom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Denom);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Decimal other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.Denom != 0) {
        Denom = other.Denom;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt32();
            break;
          }
          case 16: {
            Denom = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Num = input.ReadInt32();
            break;
          }
          case 16: {
            Denom = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSTridentInfo : pb::IMessage<CSTridentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTridentInfo> _parser = new pb::MessageParser<CSTridentInfo>(() => new CSTridentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTridentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTridentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTridentInfo(CSTridentInfo other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTridentInfo Clone() {
      return new CSTridentInfo(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTridentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTridentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTridentInfo other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTridentInfo : pb::IMessage<SCTridentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTridentInfo> _parser = new pb::MessageParser<SCTridentInfo>(() => new SCTridentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTridentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentInfo(SCTridentInfo other) : this() {
      bets_ = other.bets_.Clone();
      isFull_ = other.isFull_;
      curPoint_ = other.curPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentInfo Clone() {
      return new SCTridentInfo(this);
    }

    /// <summary>Field number for the "bets" field.</summary>
    public const int BetsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_bets_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> bets_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Bets {
      get { return bets_; }
    }

    /// <summary>Field number for the "is_full" field.</summary>
    public const int IsFullFieldNumber = 2;
    private bool isFull_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFull {
      get { return isFull_; }
      set {
        isFull_ = value;
      }
    }

    /// <summary>Field number for the "cur_point" field.</summary>
    public const int CurPointFieldNumber = 3;
    private int curPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurPoint {
      get { return curPoint_; }
      set {
        curPoint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTridentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTridentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bets_.Equals(other.bets_)) return false;
      if (IsFull != other.IsFull) return false;
      if (CurPoint != other.CurPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bets_.GetHashCode();
      if (IsFull != false) hash ^= IsFull.GetHashCode();
      if (CurPoint != 0) hash ^= CurPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bets_.WriteTo(output, _repeated_bets_codec);
      if (IsFull != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFull);
      }
      if (CurPoint != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bets_.WriteTo(ref output, _repeated_bets_codec);
      if (IsFull != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsFull);
      }
      if (CurPoint != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bets_.CalculateSize(_repeated_bets_codec);
      if (IsFull != false) {
        size += 1 + 1;
      }
      if (CurPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTridentInfo other) {
      if (other == null) {
        return;
      }
      bets_.Add(other.bets_);
      if (other.IsFull != false) {
        IsFull = other.IsFull;
      }
      if (other.CurPoint != 0) {
        CurPoint = other.CurPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            bets_.AddEntriesFrom(input, _repeated_bets_codec);
            break;
          }
          case 16: {
            IsFull = input.ReadBool();
            break;
          }
          case 24: {
            CurPoint = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            bets_.AddEntriesFrom(ref input, _repeated_bets_codec);
            break;
          }
          case 16: {
            IsFull = input.ReadBool();
            break;
          }
          case 24: {
            CurPoint = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSTridentBet : pb::IMessage<CSTridentBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTridentBet> _parser = new pb::MessageParser<CSTridentBet>(() => new CSTridentBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTridentBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTridentBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTridentBet(CSTridentBet other) : this() {
      bet_ = other.bet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTridentBet Clone() {
      return new CSTridentBet(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private int bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTridentBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTridentBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bet != other.Bet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bet != 0) hash ^= Bet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bet != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bet != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Bet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTridentBet other) {
      if (other == null) {
        return;
      }
      if (other.Bet != 0) {
        Bet = other.Bet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bet = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bet = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTridentBet : pb::IMessage<SCTridentBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTridentBet> _parser = new pb::MessageParser<SCTridentBet>(() => new SCTridentBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTridentBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentBet(SCTridentBet other) : this() {
      chairIdx_ = other.chairIdx_;
      award_ = other.award_;
      score_ = other.score_;
      bet_ = other.bet_;
      isBigSmall_ = other.isBigSmall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentBet Clone() {
      return new SCTridentBet(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 2;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 4;
    private int bet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "is_big_small" field.</summary>
    public const int IsBigSmallFieldNumber = 5;
    private bool isBigSmall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBigSmall {
      get { return isBigSmall_; }
      set {
        isBigSmall_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTridentBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTridentBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (Award != other.Award) return false;
      if (Score != other.Score) return false;
      if (Bet != other.Bet) return false;
      if (IsBigSmall != other.IsBigSmall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Bet != 0) hash ^= Bet.GetHashCode();
      if (IsBigSmall != false) hash ^= IsBigSmall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Award != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Award);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Bet != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Bet);
      }
      if (IsBigSmall != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsBigSmall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Award != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Award);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Bet != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Bet);
      }
      if (IsBigSmall != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsBigSmall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Bet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bet);
      }
      if (IsBigSmall != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTridentBet other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Bet != 0) {
        Bet = other.Bet;
      }
      if (other.IsBigSmall != false) {
        IsBigSmall = other.IsBigSmall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Award = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Bet = input.ReadInt32();
            break;
          }
          case 40: {
            IsBigSmall = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Award = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            Bet = input.ReadInt32();
            break;
          }
          case 40: {
            IsBigSmall = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPropsTrident : pb::IMessage<SCPropsTrident>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPropsTrident> _parser = new pb::MessageParser<SCPropsTrident>(() => new SCPropsTrident());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPropsTrident> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsTrident() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsTrident(SCPropsTrident other) : this() {
      enable_ = other.enable_;
      singleScore_ = other.singleScore_;
      curScore_ = other.curScore_;
      rankEnable_ = other.rankEnable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsTrident Clone() {
      return new SCPropsTrident(this);
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 1;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    /// <summary>Field number for the "single_score" field.</summary>
    public const int SingleScoreFieldNumber = 2;
    private int singleScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SingleScore {
      get { return singleScore_; }
      set {
        singleScore_ = value;
      }
    }

    /// <summary>Field number for the "cur_score" field.</summary>
    public const int CurScoreFieldNumber = 3;
    private int curScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurScore {
      get { return curScore_; }
      set {
        curScore_ = value;
      }
    }

    /// <summary>Field number for the "rank_enable" field.</summary>
    public const int RankEnableFieldNumber = 4;
    private bool rankEnable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RankEnable {
      get { return rankEnable_; }
      set {
        rankEnable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPropsTrident);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPropsTrident other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enable != other.Enable) return false;
      if (SingleScore != other.SingleScore) return false;
      if (CurScore != other.CurScore) return false;
      if (RankEnable != other.RankEnable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enable != false) hash ^= Enable.GetHashCode();
      if (SingleScore != 0) hash ^= SingleScore.GetHashCode();
      if (CurScore != 0) hash ^= CurScore.GetHashCode();
      if (RankEnable != false) hash ^= RankEnable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      if (SingleScore != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SingleScore);
      }
      if (CurScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurScore);
      }
      if (RankEnable != false) {
        output.WriteRawTag(32);
        output.WriteBool(RankEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      if (SingleScore != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SingleScore);
      }
      if (CurScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurScore);
      }
      if (RankEnable != false) {
        output.WriteRawTag(32);
        output.WriteBool(RankEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enable != false) {
        size += 1 + 1;
      }
      if (SingleScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SingleScore);
      }
      if (CurScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurScore);
      }
      if (RankEnable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPropsTrident other) {
      if (other == null) {
        return;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      if (other.SingleScore != 0) {
        SingleScore = other.SingleScore;
      }
      if (other.CurScore != 0) {
        CurScore = other.CurScore;
      }
      if (other.RankEnable != false) {
        RankEnable = other.RankEnable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 16: {
            SingleScore = input.ReadInt32();
            break;
          }
          case 24: {
            CurScore = input.ReadInt32();
            break;
          }
          case 32: {
            RankEnable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 16: {
            SingleScore = input.ReadInt32();
            break;
          }
          case 24: {
            CurScore = input.ReadInt32();
            break;
          }
          case 32: {
            RankEnable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSBigSmallChoose : pb::IMessage<CSBigSmallChoose>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSBigSmallChoose> _parser = new pb::MessageParser<CSBigSmallChoose>(() => new CSBigSmallChoose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBigSmallChoose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallChoose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallChoose(CSBigSmallChoose other) : this() {
      chairIdx_ = other.chairIdx_;
      enterOrExit_ = other.enterOrExit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallChoose Clone() {
      return new CSBigSmallChoose(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "enter_or_exit" field.</summary>
    public const int EnterOrExitFieldNumber = 2;
    private int enterOrExit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterOrExit {
      get { return enterOrExit_; }
      set {
        enterOrExit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBigSmallChoose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBigSmallChoose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (EnterOrExit != other.EnterOrExit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (EnterOrExit != 0) hash ^= EnterOrExit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (EnterOrExit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnterOrExit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (EnterOrExit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnterOrExit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (EnterOrExit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnterOrExit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBigSmallChoose other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.EnterOrExit != 0) {
        EnterOrExit = other.EnterOrExit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            EnterOrExit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            EnterOrExit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCBigSmallChoose : pb::IMessage<SCBigSmallChoose>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCBigSmallChoose> _parser = new pb::MessageParser<SCBigSmallChoose>(() => new SCBigSmallChoose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBigSmallChoose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallChoose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallChoose(SCBigSmallChoose other) : this() {
      chairIdx_ = other.chairIdx_;
      enterExit_ = other.enterExit_;
      award_ = other.award_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallChoose Clone() {
      return new SCBigSmallChoose(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "enter_exit" field.</summary>
    public const int EnterExitFieldNumber = 2;
    private int enterExit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterExit {
      get { return enterExit_; }
      set {
        enterExit_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 3;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBigSmallChoose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBigSmallChoose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (EnterExit != other.EnterExit) return false;
      if (Award != other.Award) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (EnterExit != 0) hash ^= EnterExit.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (EnterExit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnterExit);
      }
      if (Award != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Award);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (EnterExit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnterExit);
      }
      if (Award != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Award);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (EnterExit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnterExit);
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBigSmallChoose other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.EnterExit != 0) {
        EnterExit = other.EnterExit;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            EnterExit = input.ReadInt32();
            break;
          }
          case 24: {
            Award = input.ReadInt32();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            EnterExit = input.ReadInt32();
            break;
          }
          case 24: {
            Award = input.ReadInt32();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSBigSmallBet : pb::IMessage<CSBigSmallBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSBigSmallBet> _parser = new pb::MessageParser<CSBigSmallBet>(() => new CSBigSmallBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBigSmallBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallBet(CSBigSmallBet other) : this() {
      isBetBig_ = other.isBetBig_;
      times_ = other.times_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallBet Clone() {
      return new CSBigSmallBet(this);
    }

    /// <summary>Field number for the "is_bet_big" field.</summary>
    public const int IsBetBigFieldNumber = 1;
    private bool isBetBig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBetBig {
      get { return isBetBig_; }
      set {
        isBetBig_ = value;
      }
    }

    /// <summary>Field number for the "times" field.</summary>
    public const int TimesFieldNumber = 2;
    private int times_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBigSmallBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBigSmallBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBetBig != other.IsBetBig) return false;
      if (Times != other.Times) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBetBig != false) hash ^= IsBetBig.GetHashCode();
      if (Times != 0) hash ^= Times.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsBetBig != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBetBig);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsBetBig != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBetBig);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBetBig != false) {
        size += 1 + 1;
      }
      if (Times != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBigSmallBet other) {
      if (other == null) {
        return;
      }
      if (other.IsBetBig != false) {
        IsBetBig = other.IsBetBig;
      }
      if (other.Times != 0) {
        Times = other.Times;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBetBig = input.ReadBool();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsBetBig = input.ReadBool();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCBigSmallBet : pb::IMessage<SCBigSmallBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCBigSmallBet> _parser = new pb::MessageParser<SCBigSmallBet>(() => new SCBigSmallBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBigSmallBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallBet(SCBigSmallBet other) : this() {
      chairIdx_ = other.chairIdx_;
      dices_ = other.dices_.Clone();
      isBetBig_ = other.isBetBig_;
      award_ = other.award_;
      score_ = other.score_;
      isEnd_ = other.isEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallBet Clone() {
      return new SCBigSmallBet(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "dices" field.</summary>
    public const int DicesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_dices_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> dices_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Dices {
      get { return dices_; }
    }

    /// <summary>Field number for the "is_bet_big" field.</summary>
    public const int IsBetBigFieldNumber = 3;
    private bool isBetBig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBetBig {
      get { return isBetBig_; }
      set {
        isBetBig_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 4;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "is_end" field.</summary>
    public const int IsEndFieldNumber = 6;
    private bool isEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnd {
      get { return isEnd_; }
      set {
        isEnd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBigSmallBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBigSmallBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if(!dices_.Equals(other.dices_)) return false;
      if (IsBetBig != other.IsBetBig) return false;
      if (Award != other.Award) return false;
      if (Score != other.Score) return false;
      if (IsEnd != other.IsEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      hash ^= dices_.GetHashCode();
      if (IsBetBig != false) hash ^= IsBetBig.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (IsEnd != false) hash ^= IsEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      dices_.WriteTo(output, _repeated_dices_codec);
      if (IsBetBig != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBetBig);
      }
      if (Award != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Award);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (IsEnd != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      dices_.WriteTo(ref output, _repeated_dices_codec);
      if (IsBetBig != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBetBig);
      }
      if (Award != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Award);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (IsEnd != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      size += dices_.CalculateSize(_repeated_dices_codec);
      if (IsBetBig != false) {
        size += 1 + 1;
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (IsEnd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBigSmallBet other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      dices_.Add(other.dices_);
      if (other.IsBetBig != false) {
        IsBetBig = other.IsBetBig;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.IsEnd != false) {
        IsEnd = other.IsEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            dices_.AddEntriesFrom(input, _repeated_dices_codec);
            break;
          }
          case 24: {
            IsBetBig = input.ReadBool();
            break;
          }
          case 32: {
            Award = input.ReadInt32();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            IsEnd = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            dices_.AddEntriesFrom(ref input, _repeated_dices_codec);
            break;
          }
          case 24: {
            IsBetBig = input.ReadBool();
            break;
          }
          case 32: {
            Award = input.ReadInt32();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
          case 48: {
            IsEnd = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSShootTorpedo : pb::IMessage<CSShootTorpedo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSShootTorpedo> _parser = new pb::MessageParser<CSShootTorpedo>(() => new CSShootTorpedo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSShootTorpedo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSShootTorpedo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSShootTorpedo(CSShootTorpedo other) : this() {
      chairIdx_ = other.chairIdx_;
      torpedoId_ = other.torpedoId_;
      shootAll_ = other.shootAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSShootTorpedo Clone() {
      return new CSShootTorpedo(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "torpedo_id" field.</summary>
    public const int TorpedoIdFieldNumber = 2;
    private int torpedoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TorpedoId {
      get { return torpedoId_; }
      set {
        torpedoId_ = value;
      }
    }

    /// <summary>Field number for the "shoot_all" field.</summary>
    public const int ShootAllFieldNumber = 3;
    private bool shootAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShootAll {
      get { return shootAll_; }
      set {
        shootAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSShootTorpedo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSShootTorpedo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (TorpedoId != other.TorpedoId) return false;
      if (ShootAll != other.ShootAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (TorpedoId != 0) hash ^= TorpedoId.GetHashCode();
      if (ShootAll != false) hash ^= ShootAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (TorpedoId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TorpedoId);
      }
      if (ShootAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(ShootAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (TorpedoId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TorpedoId);
      }
      if (ShootAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(ShootAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (TorpedoId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TorpedoId);
      }
      if (ShootAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSShootTorpedo other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.TorpedoId != 0) {
        TorpedoId = other.TorpedoId;
      }
      if (other.ShootAll != false) {
        ShootAll = other.ShootAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            TorpedoId = input.ReadInt32();
            break;
          }
          case 24: {
            ShootAll = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            TorpedoId = input.ReadInt32();
            break;
          }
          case 24: {
            ShootAll = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCShootTorpedo : pb::IMessage<SCShootTorpedo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCShootTorpedo> _parser = new pb::MessageParser<SCShootTorpedo>(() => new SCShootTorpedo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCShootTorpedo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCShootTorpedo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCShootTorpedo(SCShootTorpedo other) : this() {
      chairIdx_ = other.chairIdx_;
      torpedoId_ = other.torpedoId_;
      award_ = other.award_;
      score_ = other.score_;
      objects_ = other.objects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCShootTorpedo Clone() {
      return new SCShootTorpedo(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "torpedo_id" field.</summary>
    public const int TorpedoIdFieldNumber = 2;
    private int torpedoId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TorpedoId {
      get { return torpedoId_; }
      set {
        torpedoId_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 3;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(42, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> objects_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> Objects {
      get { return objects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCShootTorpedo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCShootTorpedo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (TorpedoId != other.TorpedoId) return false;
      if (Award != other.Award) return false;
      if (Score != other.Score) return false;
      if(!objects_.Equals(other.objects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (TorpedoId != 0) hash ^= TorpedoId.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      hash ^= objects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (TorpedoId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TorpedoId);
      }
      if (Award != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Award);
      }
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      objects_.WriteTo(output, _repeated_objects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (TorpedoId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TorpedoId);
      }
      if (Award != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Award);
      }
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      objects_.WriteTo(ref output, _repeated_objects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (TorpedoId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TorpedoId);
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      size += objects_.CalculateSize(_repeated_objects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCShootTorpedo other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.TorpedoId != 0) {
        TorpedoId = other.TorpedoId;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      objects_.Add(other.objects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            TorpedoId = input.ReadInt32();
            break;
          }
          case 24: {
            Award = input.ReadInt32();
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 42: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            TorpedoId = input.ReadInt32();
            break;
          }
          case 24: {
            Award = input.ReadInt32();
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 42: {
            objects_.AddEntriesFrom(ref input, _repeated_objects_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPropsTorpedo : pb::IMessage<SCPropsTorpedo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPropsTorpedo> _parser = new pb::MessageParser<SCPropsTorpedo>(() => new SCPropsTorpedo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPropsTorpedo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsTorpedo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsTorpedo(SCPropsTorpedo other) : this() {
      enable_ = other.enable_;
      objects_ = other.objects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsTorpedo Clone() {
      return new SCPropsTorpedo(this);
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 1;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> objects_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> Objects {
      get { return objects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPropsTorpedo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPropsTorpedo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enable != other.Enable) return false;
      if(!objects_.Equals(other.objects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enable != false) hash ^= Enable.GetHashCode();
      hash ^= objects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      objects_.WriteTo(output, _repeated_objects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      objects_.WriteTo(ref output, _repeated_objects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enable != false) {
        size += 1 + 1;
      }
      size += objects_.CalculateSize(_repeated_objects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPropsTorpedo other) {
      if (other == null) {
        return;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      objects_.Add(other.objects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 18: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 18: {
            objects_.AddEntriesFrom(ref input, _repeated_objects_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AwardPoolData : pb::IMessage<AwardPoolData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardPoolData> _parser = new pb::MessageParser<AwardPoolData>(() => new AwardPoolData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwardPoolData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPoolData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPoolData(AwardPoolData other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPoolData Clone() {
      return new AwardPoolData(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwardPoolData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwardPoolData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwardPoolData other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPropsAwardPool : pb::IMessage<SCPropsAwardPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPropsAwardPool> _parser = new pb::MessageParser<SCPropsAwardPool>(() => new SCPropsAwardPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPropsAwardPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsAwardPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsAwardPool(SCPropsAwardPool other) : this() {
      enable_ = other.enable_;
      objects_ = other.objects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropsAwardPool Clone() {
      return new SCPropsAwardPool(this);
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 1;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.AwardPoolData> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.AwardPoolData.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AwardPoolData> objects_ = new pbc::RepeatedField<global::BYDLD.AwardPoolData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AwardPoolData> Objects {
      get { return objects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPropsAwardPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPropsAwardPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enable != other.Enable) return false;
      if(!objects_.Equals(other.objects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enable != false) hash ^= Enable.GetHashCode();
      hash ^= objects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      objects_.WriteTo(output, _repeated_objects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      objects_.WriteTo(ref output, _repeated_objects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enable != false) {
        size += 1 + 1;
      }
      size += objects_.CalculateSize(_repeated_objects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPropsAwardPool other) {
      if (other == null) {
        return;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      objects_.Add(other.objects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 18: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 18: {
            objects_.AddEntriesFrom(ref input, _repeated_objects_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLoginGameWithToken : pb::IMessage<CSLoginGameWithToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLoginGameWithToken> _parser = new pb::MessageParser<CSLoginGameWithToken>(() => new CSLoginGameWithToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLoginGameWithToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLoginGameWithToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLoginGameWithToken(CSLoginGameWithToken other) : this() {
      playerId_ = other.playerId_;
      token_ = other.token_;
      oSType_ = other.oSType_;
      tableId_ = other.tableId_;
      lastTableId_ = other.lastTableId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLoginGameWithToken Clone() {
      return new CSLoginGameWithToken(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OSType" field.</summary>
    public const int OSTypeFieldNumber = 3;
    private int oSType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OSType {
      get { return oSType_; }
      set {
        oSType_ = value;
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 4;
    private int tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    /// <summary>Field number for the "last_table_id" field.</summary>
    public const int LastTableIdFieldNumber = 5;
    private int lastTableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastTableId {
      get { return lastTableId_; }
      set {
        lastTableId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLoginGameWithToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLoginGameWithToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Token != other.Token) return false;
      if (OSType != other.OSType) return false;
      if (TableId != other.TableId) return false;
      if (LastTableId != other.LastTableId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (OSType != 0) hash ^= OSType.GetHashCode();
      if (TableId != 0) hash ^= TableId.GetHashCode();
      if (LastTableId != 0) hash ^= LastTableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (OSType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OSType);
      }
      if (TableId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TableId);
      }
      if (LastTableId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LastTableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (OSType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OSType);
      }
      if (TableId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TableId);
      }
      if (LastTableId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LastTableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (OSType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OSType);
      }
      if (TableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableId);
      }
      if (LastTableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastTableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLoginGameWithToken other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.OSType != 0) {
        OSType = other.OSType;
      }
      if (other.TableId != 0) {
        TableId = other.TableId;
      }
      if (other.LastTableId != 0) {
        LastTableId = other.LastTableId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            OSType = input.ReadInt32();
            break;
          }
          case 32: {
            TableId = input.ReadInt32();
            break;
          }
          case 40: {
            LastTableId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            OSType = input.ReadInt32();
            break;
          }
          case 32: {
            TableId = input.ReadInt32();
            break;
          }
          case 40: {
            LastTableId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLoginGameWithToken : pb::IMessage<SCLoginGameWithToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLoginGameWithToken> _parser = new pb::MessageParser<SCLoginGameWithToken>(() => new SCLoginGameWithToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLoginGameWithToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLoginGameWithToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLoginGameWithToken(SCLoginGameWithToken other) : this() {
      sceneIndex_ = other.sceneIndex_;
      tableId_ = other.tableId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLoginGameWithToken Clone() {
      return new SCLoginGameWithToken(this);
    }

    /// <summary>Field number for the "scene_index" field.</summary>
    public const int SceneIndexFieldNumber = 1;
    private int sceneIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneIndex {
      get { return sceneIndex_; }
      set {
        sceneIndex_ = value;
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 2;
    private int tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLoginGameWithToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLoginGameWithToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneIndex != other.SceneIndex) return false;
      if (TableId != other.TableId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneIndex != 0) hash ^= SceneIndex.GetHashCode();
      if (TableId != 0) hash ^= TableId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SceneIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneIndex);
      }
      if (TableId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SceneIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneIndex);
      }
      if (TableId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TableId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneIndex);
      }
      if (TableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLoginGameWithToken other) {
      if (other == null) {
        return;
      }
      if (other.SceneIndex != 0) {
        SceneIndex = other.SceneIndex;
      }
      if (other.TableId != 0) {
        TableId = other.TableId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneIndex = input.ReadInt32();
            break;
          }
          case 16: {
            TableId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SceneIndex = input.ReadInt32();
            break;
          }
          case 16: {
            TableId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserReady : pb::IMessage<CSUserReady>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserReady> _parser = new pb::MessageParser<CSUserReady>(() => new CSUserReady());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserReady> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserReady() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserReady(CSUserReady other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserReady Clone() {
      return new CSUserReady(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserReady);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserReady other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserReady other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EffectInfo : pb::IMessage<EffectInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EffectInfo> _parser = new pb::MessageParser<EffectInfo>(() => new EffectInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EffectInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectInfo(EffectInfo other) : this() {
      effectId_ = other.effectId_;
      isGlobal_ = other.isGlobal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectInfo Clone() {
      return new EffectInfo(this);
    }

    /// <summary>Field number for the "effect_id" field.</summary>
    public const int EffectIdFieldNumber = 1;
    private int effectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "is_global" field.</summary>
    public const int IsGlobalFieldNumber = 2;
    private bool isGlobal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGlobal {
      get { return isGlobal_; }
      set {
        isGlobal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EffectInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EffectInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectId != other.EffectId) return false;
      if (IsGlobal != other.IsGlobal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EffectId != 0) hash ^= EffectId.GetHashCode();
      if (IsGlobal != false) hash ^= IsGlobal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      if (IsGlobal != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsGlobal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EffectId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EffectId);
      }
      if (IsGlobal != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsGlobal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EffectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
      }
      if (IsGlobal != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EffectInfo other) {
      if (other == null) {
        return;
      }
      if (other.EffectId != 0) {
        EffectId = other.EffectId;
      }
      if (other.IsGlobal != false) {
        IsGlobal = other.IsGlobal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 16: {
            IsGlobal = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectId = input.ReadInt32();
            break;
          }
          case 16: {
            IsGlobal = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpecEffect : pb::IMessage<SpecEffect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpecEffect> _parser = new pb::MessageParser<SpecEffect>(() => new SpecEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpecEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecEffect(SpecEffect other) : this() {
      costMoney_ = other.costMoney_;
      earnMoney_ = other.earnMoney_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpecEffect Clone() {
      return new SpecEffect(this);
    }

    /// <summary>Field number for the "costMoney" field.</summary>
    public const int CostMoneyFieldNumber = 1;
    private int costMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostMoney {
      get { return costMoney_; }
      set {
        costMoney_ = value;
      }
    }

    /// <summary>Field number for the "earnMoney" field.</summary>
    public const int EarnMoneyFieldNumber = 2;
    private int earnMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EarnMoney {
      get { return earnMoney_; }
      set {
        earnMoney_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpecEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpecEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostMoney != other.CostMoney) return false;
      if (EarnMoney != other.EarnMoney) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostMoney != 0) hash ^= CostMoney.GetHashCode();
      if (EarnMoney != 0) hash ^= EarnMoney.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CostMoney != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CostMoney);
      }
      if (EarnMoney != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EarnMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CostMoney != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CostMoney);
      }
      if (EarnMoney != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EarnMoney);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostMoney);
      }
      if (EarnMoney != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EarnMoney);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpecEffect other) {
      if (other == null) {
        return;
      }
      if (other.CostMoney != 0) {
        CostMoney = other.CostMoney;
      }
      if (other.EarnMoney != 0) {
        EarnMoney = other.EarnMoney;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CostMoney = input.ReadInt32();
            break;
          }
          case 16: {
            EarnMoney = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CostMoney = input.ReadInt32();
            break;
          }
          case 16: {
            EarnMoney = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StationBase : pb::IMessage<StationBase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StationBase> _parser = new pb::MessageParser<StationBase>(() => new StationBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StationBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StationBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StationBase(StationBase other) : this() {
      gunRatio_ = other.gunRatio_;
      gunLevel_ = other.gunLevel_;
      isOnline_ = other.isOnline_;
      userScore_ = other.userScore_;
      chairIdx_ = other.chairIdx_;
      playerName_ = other.playerName_;
      throughFlag_ = other.throughFlag_;
      doubleFlag_ = other.doubleFlag_;
      playerId_ = other.playerId_;
      vip_ = other.vip_;
      ticket_ = other.ticket_;
      effectId_ = other.effectId_;
      titleId_ = other.titleId_;
      redPacketTicket_ = other.redPacketTicket_ != null ? other.redPacketTicket_.Clone() : null;
      effectInfo_ = other.effectInfo_ != null ? other.effectInfo_.Clone() : null;
      wingsPropsId_ = other.wingsPropsId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StationBase Clone() {
      return new StationBase(this);
    }

    /// <summary>Field number for the "gun_ratio" field.</summary>
    public const int GunRatioFieldNumber = 1;
    private int gunRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunRatio {
      get { return gunRatio_; }
      set {
        gunRatio_ = value;
      }
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 2;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    /// <summary>Field number for the "is_online" field.</summary>
    public const int IsOnlineFieldNumber = 3;
    private bool isOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOnline {
      get { return isOnline_; }
      set {
        isOnline_ = value;
      }
    }

    /// <summary>Field number for the "user_score" field.</summary>
    public const int UserScoreFieldNumber = 4;
    private long userScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserScore {
      get { return userScore_; }
      set {
        userScore_ = value;
      }
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 5;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 6;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "through_flag" field.</summary>
    public const int ThroughFlagFieldNumber = 7;
    private bool throughFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ThroughFlag {
      get { return throughFlag_; }
      set {
        throughFlag_ = value;
      }
    }

    /// <summary>Field number for the "double_flag" field.</summary>
    public const int DoubleFlagFieldNumber = 8;
    private bool doubleFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DoubleFlag {
      get { return doubleFlag_; }
      set {
        doubleFlag_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 9;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 10;
    private int vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vip {
      get { return vip_; }
      set {
        vip_ = value;
      }
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 11;
    private int ticket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }

    /// <summary>Field number for the "effect_id" field.</summary>
    public const int EffectIdFieldNumber = 12;
    private int effectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EffectId {
      get { return effectId_; }
      set {
        effectId_ = value;
      }
    }

    /// <summary>Field number for the "title_id" field.</summary>
    public const int TitleIdFieldNumber = 13;
    private int titleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TitleId {
      get { return titleId_; }
      set {
        titleId_ = value;
      }
    }

    /// <summary>Field number for the "red_packet_ticket" field.</summary>
    public const int RedPacketTicketFieldNumber = 14;
    private global::BYDLD.Decimal redPacketTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.Decimal RedPacketTicket {
      get { return redPacketTicket_; }
      set {
        redPacketTicket_ = value;
      }
    }

    /// <summary>Field number for the "effect_info" field.</summary>
    public const int EffectInfoFieldNumber = 15;
    private global::BYDLD.EffectInfo effectInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.EffectInfo EffectInfo {
      get { return effectInfo_; }
      set {
        effectInfo_ = value;
      }
    }

    /// <summary>Field number for the "wings_props_id" field.</summary>
    public const int WingsPropsIdFieldNumber = 16;
    private int wingsPropsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WingsPropsId {
      get { return wingsPropsId_; }
      set {
        wingsPropsId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StationBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StationBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunRatio != other.GunRatio) return false;
      if (GunLevel != other.GunLevel) return false;
      if (IsOnline != other.IsOnline) return false;
      if (UserScore != other.UserScore) return false;
      if (ChairIdx != other.ChairIdx) return false;
      if (PlayerName != other.PlayerName) return false;
      if (ThroughFlag != other.ThroughFlag) return false;
      if (DoubleFlag != other.DoubleFlag) return false;
      if (PlayerId != other.PlayerId) return false;
      if (Vip != other.Vip) return false;
      if (Ticket != other.Ticket) return false;
      if (EffectId != other.EffectId) return false;
      if (TitleId != other.TitleId) return false;
      if (!object.Equals(RedPacketTicket, other.RedPacketTicket)) return false;
      if (!object.Equals(EffectInfo, other.EffectInfo)) return false;
      if (WingsPropsId != other.WingsPropsId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GunRatio != 0) hash ^= GunRatio.GetHashCode();
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (IsOnline != false) hash ^= IsOnline.GetHashCode();
      if (UserScore != 0L) hash ^= UserScore.GetHashCode();
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (ThroughFlag != false) hash ^= ThroughFlag.GetHashCode();
      if (DoubleFlag != false) hash ^= DoubleFlag.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Vip != 0) hash ^= Vip.GetHashCode();
      if (Ticket != 0) hash ^= Ticket.GetHashCode();
      if (EffectId != 0) hash ^= EffectId.GetHashCode();
      if (TitleId != 0) hash ^= TitleId.GetHashCode();
      if (redPacketTicket_ != null) hash ^= RedPacketTicket.GetHashCode();
      if (effectInfo_ != null) hash ^= EffectInfo.GetHashCode();
      if (WingsPropsId != 0) hash ^= WingsPropsId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (IsOnline != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOnline);
      }
      if (UserScore != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(UserScore);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ChairIdx);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlayerName);
      }
      if (ThroughFlag != false) {
        output.WriteRawTag(56);
        output.WriteBool(ThroughFlag);
      }
      if (DoubleFlag != false) {
        output.WriteRawTag(64);
        output.WriteBool(DoubleFlag);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PlayerId);
      }
      if (Vip != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Vip);
      }
      if (Ticket != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Ticket);
      }
      if (EffectId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EffectId);
      }
      if (TitleId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TitleId);
      }
      if (redPacketTicket_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(RedPacketTicket);
      }
      if (effectInfo_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(EffectInfo);
      }
      if (WingsPropsId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(WingsPropsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (IsOnline != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOnline);
      }
      if (UserScore != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(UserScore);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ChairIdx);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlayerName);
      }
      if (ThroughFlag != false) {
        output.WriteRawTag(56);
        output.WriteBool(ThroughFlag);
      }
      if (DoubleFlag != false) {
        output.WriteRawTag(64);
        output.WriteBool(DoubleFlag);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PlayerId);
      }
      if (Vip != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Vip);
      }
      if (Ticket != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Ticket);
      }
      if (EffectId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EffectId);
      }
      if (TitleId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(TitleId);
      }
      if (redPacketTicket_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(RedPacketTicket);
      }
      if (effectInfo_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(EffectInfo);
      }
      if (WingsPropsId != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(WingsPropsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GunRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunRatio);
      }
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (IsOnline != false) {
        size += 1 + 1;
      }
      if (UserScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserScore);
      }
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (ThroughFlag != false) {
        size += 1 + 1;
      }
      if (DoubleFlag != false) {
        size += 1 + 1;
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vip);
      }
      if (Ticket != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ticket);
      }
      if (EffectId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectId);
      }
      if (TitleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TitleId);
      }
      if (redPacketTicket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RedPacketTicket);
      }
      if (effectInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectInfo);
      }
      if (WingsPropsId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(WingsPropsId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StationBase other) {
      if (other == null) {
        return;
      }
      if (other.GunRatio != 0) {
        GunRatio = other.GunRatio;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      if (other.IsOnline != false) {
        IsOnline = other.IsOnline;
      }
      if (other.UserScore != 0L) {
        UserScore = other.UserScore;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.ThroughFlag != false) {
        ThroughFlag = other.ThroughFlag;
      }
      if (other.DoubleFlag != false) {
        DoubleFlag = other.DoubleFlag;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Vip != 0) {
        Vip = other.Vip;
      }
      if (other.Ticket != 0) {
        Ticket = other.Ticket;
      }
      if (other.EffectId != 0) {
        EffectId = other.EffectId;
      }
      if (other.TitleId != 0) {
        TitleId = other.TitleId;
      }
      if (other.redPacketTicket_ != null) {
        if (redPacketTicket_ == null) {
          RedPacketTicket = new global::BYDLD.Decimal();
        }
        RedPacketTicket.MergeFrom(other.RedPacketTicket);
      }
      if (other.effectInfo_ != null) {
        if (effectInfo_ == null) {
          EffectInfo = new global::BYDLD.EffectInfo();
        }
        EffectInfo.MergeFrom(other.EffectInfo);
      }
      if (other.WingsPropsId != 0) {
        WingsPropsId = other.WingsPropsId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            IsOnline = input.ReadBool();
            break;
          }
          case 32: {
            UserScore = input.ReadInt64();
            break;
          }
          case 40: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 50: {
            PlayerName = input.ReadString();
            break;
          }
          case 56: {
            ThroughFlag = input.ReadBool();
            break;
          }
          case 64: {
            DoubleFlag = input.ReadBool();
            break;
          }
          case 72: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 80: {
            Vip = input.ReadInt32();
            break;
          }
          case 88: {
            Ticket = input.ReadInt32();
            break;
          }
          case 96: {
            EffectId = input.ReadInt32();
            break;
          }
          case 104: {
            TitleId = input.ReadInt32();
            break;
          }
          case 114: {
            if (redPacketTicket_ == null) {
              RedPacketTicket = new global::BYDLD.Decimal();
            }
            input.ReadMessage(RedPacketTicket);
            break;
          }
          case 122: {
            if (effectInfo_ == null) {
              EffectInfo = new global::BYDLD.EffectInfo();
            }
            input.ReadMessage(EffectInfo);
            break;
          }
          case 128: {
            WingsPropsId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            IsOnline = input.ReadBool();
            break;
          }
          case 32: {
            UserScore = input.ReadInt64();
            break;
          }
          case 40: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 50: {
            PlayerName = input.ReadString();
            break;
          }
          case 56: {
            ThroughFlag = input.ReadBool();
            break;
          }
          case 64: {
            DoubleFlag = input.ReadBool();
            break;
          }
          case 72: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 80: {
            Vip = input.ReadInt32();
            break;
          }
          case 88: {
            Ticket = input.ReadInt32();
            break;
          }
          case 96: {
            EffectId = input.ReadInt32();
            break;
          }
          case 104: {
            TitleId = input.ReadInt32();
            break;
          }
          case 114: {
            if (redPacketTicket_ == null) {
              RedPacketTicket = new global::BYDLD.Decimal();
            }
            input.ReadMessage(RedPacketTicket);
            break;
          }
          case 122: {
            if (effectInfo_ == null) {
              EffectInfo = new global::BYDLD.EffectInfo();
            }
            input.ReadMessage(EffectInfo);
            break;
          }
          case 128: {
            WingsPropsId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserReady : pb::IMessage<SCUserReady>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserReady> _parser = new pb::MessageParser<SCUserReady>(() => new SCUserReady());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserReady> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserReady() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserReady(SCUserReady other) : this() {
      stationBaseList_ = other.stationBaseList_.Clone();
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserReady Clone() {
      return new SCUserReady(this);
    }

    /// <summary>Field number for the "station_base_list" field.</summary>
    public const int StationBaseListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.StationBase> _repeated_stationBaseList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.StationBase.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.StationBase> stationBaseList_ = new pbc::RepeatedField<global::BYDLD.StationBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.StationBase> StationBaseList {
      get { return stationBaseList_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private int timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserReady);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserReady other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stationBaseList_.Equals(other.stationBaseList_)) return false;
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stationBaseList_.GetHashCode();
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stationBaseList_.WriteTo(output, _repeated_stationBaseList_codec);
      if (Timestamp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stationBaseList_.WriteTo(ref output, _repeated_stationBaseList_codec);
      if (Timestamp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stationBaseList_.CalculateSize(_repeated_stationBaseList_codec);
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserReady other) {
      if (other == null) {
        return;
      }
      stationBaseList_.Add(other.stationBaseList_);
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stationBaseList_.AddEntriesFrom(input, _repeated_stationBaseList_codec);
            break;
          }
          case 16: {
            Timestamp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stationBaseList_.AddEntriesFrom(ref input, _repeated_stationBaseList_codec);
            break;
          }
          case 16: {
            Timestamp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JadeAwardInfo : pb::IMessage<JadeAwardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JadeAwardInfo> _parser = new pb::MessageParser<JadeAwardInfo>(() => new JadeAwardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JadeAwardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JadeAwardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JadeAwardInfo(JadeAwardInfo other) : this() {
      awardNum_ = other.awardNum_;
      awardRatio_ = other.awardRatio_;
      awardLevel_ = other.awardLevel_;
      awardType_ = other.awardType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JadeAwardInfo Clone() {
      return new JadeAwardInfo(this);
    }

    /// <summary>Field number for the "award_num" field.</summary>
    public const int AwardNumFieldNumber = 1;
    private int awardNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardNum {
      get { return awardNum_; }
      set {
        awardNum_ = value;
      }
    }

    /// <summary>Field number for the "award_ratio" field.</summary>
    public const int AwardRatioFieldNumber = 2;
    private int awardRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardRatio {
      get { return awardRatio_; }
      set {
        awardRatio_ = value;
      }
    }

    /// <summary>Field number for the "award_level" field.</summary>
    public const int AwardLevelFieldNumber = 3;
    private int awardLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardLevel {
      get { return awardLevel_; }
      set {
        awardLevel_ = value;
      }
    }

    /// <summary>Field number for the "award_type" field.</summary>
    public const int AwardTypeFieldNumber = 4;
    private int awardType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardType {
      get { return awardType_; }
      set {
        awardType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JadeAwardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JadeAwardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AwardNum != other.AwardNum) return false;
      if (AwardRatio != other.AwardRatio) return false;
      if (AwardLevel != other.AwardLevel) return false;
      if (AwardType != other.AwardType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AwardNum != 0) hash ^= AwardNum.GetHashCode();
      if (AwardRatio != 0) hash ^= AwardRatio.GetHashCode();
      if (AwardLevel != 0) hash ^= AwardLevel.GetHashCode();
      if (AwardType != 0) hash ^= AwardType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AwardNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardNum);
      }
      if (AwardRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AwardRatio);
      }
      if (AwardLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardLevel);
      }
      if (AwardType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AwardType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AwardNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardNum);
      }
      if (AwardRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AwardRatio);
      }
      if (AwardLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AwardLevel);
      }
      if (AwardType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AwardType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AwardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardNum);
      }
      if (AwardRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardRatio);
      }
      if (AwardLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardLevel);
      }
      if (AwardType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JadeAwardInfo other) {
      if (other == null) {
        return;
      }
      if (other.AwardNum != 0) {
        AwardNum = other.AwardNum;
      }
      if (other.AwardRatio != 0) {
        AwardRatio = other.AwardRatio;
      }
      if (other.AwardLevel != 0) {
        AwardLevel = other.AwardLevel;
      }
      if (other.AwardType != 0) {
        AwardType = other.AwardType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AwardNum = input.ReadInt32();
            break;
          }
          case 16: {
            AwardRatio = input.ReadInt32();
            break;
          }
          case 24: {
            AwardLevel = input.ReadInt32();
            break;
          }
          case 32: {
            AwardType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AwardNum = input.ReadInt32();
            break;
          }
          case 16: {
            AwardRatio = input.ReadInt32();
            break;
          }
          case 24: {
            AwardLevel = input.ReadInt32();
            break;
          }
          case 32: {
            AwardType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSJadeAwardInfo : pb::IMessage<CSJadeAwardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSJadeAwardInfo> _parser = new pb::MessageParser<CSJadeAwardInfo>(() => new CSJadeAwardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSJadeAwardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSJadeAwardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSJadeAwardInfo(CSJadeAwardInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSJadeAwardInfo Clone() {
      return new CSJadeAwardInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSJadeAwardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSJadeAwardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSJadeAwardInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCJadeAwardInfo : pb::IMessage<SCJadeAwardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCJadeAwardInfo> _parser = new pb::MessageParser<SCJadeAwardInfo>(() => new SCJadeAwardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCJadeAwardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCJadeAwardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCJadeAwardInfo(SCJadeAwardInfo other) : this() {
      jadeAwardInfo_ = other.jadeAwardInfo_.Clone();
      critList_ = other.critList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCJadeAwardInfo Clone() {
      return new SCJadeAwardInfo(this);
    }

    /// <summary>Field number for the "jade_award_info" field.</summary>
    public const int JadeAwardInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.JadeAwardInfo> _repeated_jadeAwardInfo_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.JadeAwardInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.JadeAwardInfo> jadeAwardInfo_ = new pbc::RepeatedField<global::BYDLD.JadeAwardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.JadeAwardInfo> JadeAwardInfo {
      get { return jadeAwardInfo_; }
    }

    /// <summary>Field number for the "crit_list" field.</summary>
    public const int CritListFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_critList_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> critList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CritList {
      get { return critList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCJadeAwardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCJadeAwardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jadeAwardInfo_.Equals(other.jadeAwardInfo_)) return false;
      if(!critList_.Equals(other.critList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jadeAwardInfo_.GetHashCode();
      hash ^= critList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      jadeAwardInfo_.WriteTo(output, _repeated_jadeAwardInfo_codec);
      critList_.WriteTo(output, _repeated_critList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      jadeAwardInfo_.WriteTo(ref output, _repeated_jadeAwardInfo_codec);
      critList_.WriteTo(ref output, _repeated_critList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jadeAwardInfo_.CalculateSize(_repeated_jadeAwardInfo_codec);
      size += critList_.CalculateSize(_repeated_critList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCJadeAwardInfo other) {
      if (other == null) {
        return;
      }
      jadeAwardInfo_.Add(other.jadeAwardInfo_);
      critList_.Add(other.critList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jadeAwardInfo_.AddEntriesFrom(input, _repeated_jadeAwardInfo_codec);
            break;
          }
          case 18:
          case 16: {
            critList_.AddEntriesFrom(input, _repeated_critList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            jadeAwardInfo_.AddEntriesFrom(ref input, _repeated_jadeAwardInfo_codec);
            break;
          }
          case 18:
          case 16: {
            critList_.AddEntriesFrom(ref input, _repeated_critList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSNotifyLogout : pb::IMessage<CSNotifyLogout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSNotifyLogout> _parser = new pb::MessageParser<CSNotifyLogout>(() => new CSNotifyLogout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSNotifyLogout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNotifyLogout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNotifyLogout(CSNotifyLogout other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNotifyLogout Clone() {
      return new CSNotifyLogout(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSNotifyLogout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSNotifyLogout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSNotifyLogout other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCNotifyLogout : pb::IMessage<SCNotifyLogout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCNotifyLogout> _parser = new pb::MessageParser<SCNotifyLogout>(() => new SCNotifyLogout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCNotifyLogout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyLogout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyLogout(SCNotifyLogout other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNotifyLogout Clone() {
      return new SCNotifyLogout(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCNotifyLogout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCNotifyLogout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCNotifyLogout other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSetProbability : pb::IMessage<CSSetProbability>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSetProbability> _parser = new pb::MessageParser<CSSetProbability>(() => new CSSetProbability());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSetProbability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetProbability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetProbability(CSSetProbability other) : this() {
      gunRatio_ = other.gunRatio_;
      gunLevel_ = other.gunLevel_;
      isUseAuto_ = other.isUseAuto_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetProbability Clone() {
      return new CSSetProbability(this);
    }

    /// <summary>Field number for the "gun_ratio" field.</summary>
    public const int GunRatioFieldNumber = 1;
    private int gunRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunRatio {
      get { return gunRatio_; }
      set {
        gunRatio_ = value;
      }
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 2;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    /// <summary>Field number for the "is_use_auto" field.</summary>
    public const int IsUseAutoFieldNumber = 3;
    private bool isUseAuto_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUseAuto {
      get { return isUseAuto_; }
      set {
        isUseAuto_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSetProbability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSetProbability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunRatio != other.GunRatio) return false;
      if (GunLevel != other.GunLevel) return false;
      if (IsUseAuto != other.IsUseAuto) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GunRatio != 0) hash ^= GunRatio.GetHashCode();
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (IsUseAuto != false) hash ^= IsUseAuto.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (IsUseAuto != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsUseAuto);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (IsUseAuto != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsUseAuto);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GunRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunRatio);
      }
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (IsUseAuto != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSetProbability other) {
      if (other == null) {
        return;
      }
      if (other.GunRatio != 0) {
        GunRatio = other.GunRatio;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      if (other.IsUseAuto != false) {
        IsUseAuto = other.IsUseAuto;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            IsUseAuto = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            IsUseAuto = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSetProbability : pb::IMessage<SCSetProbability>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSetProbability> _parser = new pb::MessageParser<SCSetProbability>(() => new SCSetProbability());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSetProbability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetProbability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetProbability(SCSetProbability other) : this() {
      chairIdx_ = other.chairIdx_;
      gunRatio_ = other.gunRatio_;
      gunLevel_ = other.gunLevel_;
      isUnlock_ = other.isUnlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetProbability Clone() {
      return new SCSetProbability(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "gun_ratio" field.</summary>
    public const int GunRatioFieldNumber = 2;
    private int gunRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunRatio {
      get { return gunRatio_; }
      set {
        gunRatio_ = value;
      }
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 3;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    /// <summary>Field number for the "is_unlock" field.</summary>
    public const int IsUnlockFieldNumber = 4;
    private bool isUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUnlock {
      get { return isUnlock_; }
      set {
        isUnlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSetProbability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSetProbability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (GunRatio != other.GunRatio) return false;
      if (GunLevel != other.GunLevel) return false;
      if (IsUnlock != other.IsUnlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (GunRatio != 0) hash ^= GunRatio.GetHashCode();
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (IsUnlock != false) hash ^= IsUnlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (GunRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GunLevel);
      }
      if (IsUnlock != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsUnlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (GunRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GunLevel);
      }
      if (IsUnlock != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsUnlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (GunRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunRatio);
      }
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (IsUnlock != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSetProbability other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.GunRatio != 0) {
        GunRatio = other.GunRatio;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      if (other.IsUnlock != false) {
        IsUnlock = other.IsUnlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 24: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 32: {
            IsUnlock = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 24: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 32: {
            IsUnlock = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserShoot : pb::IMessage<UserShoot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserShoot> _parser = new pb::MessageParser<UserShoot>(() => new UserShoot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserShoot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserShoot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserShoot(UserShoot other) : this() {
      angle_ = other.angle_;
      bulletId_ = other.bulletId_;
      ratio_ = other.ratio_;
      isDouble_ = other.isDouble_;
      isThrough_ = other.isThrough_;
      isFreeTime_ = other.isFreeTime_;
      bulletType_ = other.bulletType_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserShoot Clone() {
      return new UserShoot(this);
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 1;
    private int angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "bullet_id" field.</summary>
    public const int BulletIdFieldNumber = 2;
    private int bulletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletId {
      get { return bulletId_; }
      set {
        bulletId_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 3;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "is_double" field.</summary>
    public const int IsDoubleFieldNumber = 4;
    private bool isDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDouble {
      get { return isDouble_; }
      set {
        isDouble_ = value;
      }
    }

    /// <summary>Field number for the "is_through" field.</summary>
    public const int IsThroughFieldNumber = 5;
    private bool isThrough_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsThrough {
      get { return isThrough_; }
      set {
        isThrough_ = value;
      }
    }

    /// <summary>Field number for the "is_free_time" field.</summary>
    public const int IsFreeTimeFieldNumber = 6;
    private bool isFreeTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFreeTime {
      get { return isFreeTime_; }
      set {
        isFreeTime_ = value;
      }
    }

    /// <summary>Field number for the "bullet_type" field.</summary>
    public const int BulletTypeFieldNumber = 7;
    private int bulletType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletType {
      get { return bulletType_; }
      set {
        bulletType_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 8;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 9;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserShoot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserShoot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Angle != other.Angle) return false;
      if (BulletId != other.BulletId) return false;
      if (Ratio != other.Ratio) return false;
      if (IsDouble != other.IsDouble) return false;
      if (IsThrough != other.IsThrough) return false;
      if (IsFreeTime != other.IsFreeTime) return false;
      if (BulletType != other.BulletType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Angle != 0) hash ^= Angle.GetHashCode();
      if (BulletId != 0) hash ^= BulletId.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (IsDouble != false) hash ^= IsDouble.GetHashCode();
      if (IsThrough != false) hash ^= IsThrough.GetHashCode();
      if (IsFreeTime != false) hash ^= IsFreeTime.GetHashCode();
      if (BulletType != 0) hash ^= BulletType.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Angle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Angle);
      }
      if (BulletId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BulletId);
      }
      if (Ratio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Ratio);
      }
      if (IsDouble != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsDouble);
      }
      if (IsThrough != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsThrough);
      }
      if (IsFreeTime != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsFreeTime);
      }
      if (BulletType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BulletType);
      }
      if (X != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Angle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Angle);
      }
      if (BulletId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BulletId);
      }
      if (Ratio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Ratio);
      }
      if (IsDouble != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsDouble);
      }
      if (IsThrough != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsThrough);
      }
      if (IsFreeTime != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsFreeTime);
      }
      if (BulletType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BulletType);
      }
      if (X != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Angle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Angle);
      }
      if (BulletId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletId);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (IsDouble != false) {
        size += 1 + 1;
      }
      if (IsThrough != false) {
        size += 1 + 1;
      }
      if (IsFreeTime != false) {
        size += 1 + 1;
      }
      if (BulletType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletType);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserShoot other) {
      if (other == null) {
        return;
      }
      if (other.Angle != 0) {
        Angle = other.Angle;
      }
      if (other.BulletId != 0) {
        BulletId = other.BulletId;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.IsDouble != false) {
        IsDouble = other.IsDouble;
      }
      if (other.IsThrough != false) {
        IsThrough = other.IsThrough;
      }
      if (other.IsFreeTime != false) {
        IsFreeTime = other.IsFreeTime;
      }
      if (other.BulletType != 0) {
        BulletType = other.BulletType;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Angle = input.ReadInt32();
            break;
          }
          case 16: {
            BulletId = input.ReadInt32();
            break;
          }
          case 24: {
            Ratio = input.ReadInt32();
            break;
          }
          case 32: {
            IsDouble = input.ReadBool();
            break;
          }
          case 40: {
            IsThrough = input.ReadBool();
            break;
          }
          case 48: {
            IsFreeTime = input.ReadBool();
            break;
          }
          case 56: {
            BulletType = input.ReadInt32();
            break;
          }
          case 69: {
            X = input.ReadFloat();
            break;
          }
          case 77: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Angle = input.ReadInt32();
            break;
          }
          case 16: {
            BulletId = input.ReadInt32();
            break;
          }
          case 24: {
            Ratio = input.ReadInt32();
            break;
          }
          case 32: {
            IsDouble = input.ReadBool();
            break;
          }
          case 40: {
            IsThrough = input.ReadBool();
            break;
          }
          case 48: {
            IsFreeTime = input.ReadBool();
            break;
          }
          case 56: {
            BulletType = input.ReadInt32();
            break;
          }
          case 69: {
            X = input.ReadFloat();
            break;
          }
          case 77: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserShootMulti : pb::IMessage<CSUserShootMulti>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserShootMulti> _parser = new pb::MessageParser<CSUserShootMulti>(() => new CSUserShootMulti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserShootMulti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserShootMulti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserShootMulti(CSUserShootMulti other) : this() {
      shootBullet_ = other.shootBullet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserShootMulti Clone() {
      return new CSUserShootMulti(this);
    }

    /// <summary>Field number for the "shoot_bullet" field.</summary>
    public const int ShootBulletFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.UserShoot> _repeated_shootBullet_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.UserShoot.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.UserShoot> shootBullet_ = new pbc::RepeatedField<global::BYDLD.UserShoot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.UserShoot> ShootBullet {
      get { return shootBullet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserShootMulti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserShootMulti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shootBullet_.Equals(other.shootBullet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shootBullet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shootBullet_.WriteTo(output, _repeated_shootBullet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shootBullet_.WriteTo(ref output, _repeated_shootBullet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shootBullet_.CalculateSize(_repeated_shootBullet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserShootMulti other) {
      if (other == null) {
        return;
      }
      shootBullet_.Add(other.shootBullet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shootBullet_.AddEntriesFrom(input, _repeated_shootBullet_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            shootBullet_.AddEntriesFrom(ref input, _repeated_shootBullet_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserShootRsp : pb::IMessage<UserShootRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserShootRsp> _parser = new pb::MessageParser<UserShootRsp>(() => new UserShootRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserShootRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserShootRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserShootRsp(UserShootRsp other) : this() {
      angle_ = other.angle_;
      bulletType_ = other.bulletType_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserShootRsp Clone() {
      return new UserShootRsp(this);
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 1;
    private int angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "bullet_type" field.</summary>
    public const int BulletTypeFieldNumber = 2;
    private int bulletType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletType {
      get { return bulletType_; }
      set {
        bulletType_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 3;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 4;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserShootRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserShootRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Angle != other.Angle) return false;
      if (BulletType != other.BulletType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Angle != 0) hash ^= Angle.GetHashCode();
      if (BulletType != 0) hash ^= BulletType.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Angle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Angle);
      }
      if (BulletType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BulletType);
      }
      if (X != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Angle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Angle);
      }
      if (BulletType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BulletType);
      }
      if (X != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Angle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Angle);
      }
      if (BulletType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletType);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserShootRsp other) {
      if (other == null) {
        return;
      }
      if (other.Angle != 0) {
        Angle = other.Angle;
      }
      if (other.BulletType != 0) {
        BulletType = other.BulletType;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Angle = input.ReadInt32();
            break;
          }
          case 16: {
            BulletType = input.ReadInt32();
            break;
          }
          case 29: {
            X = input.ReadFloat();
            break;
          }
          case 37: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Angle = input.ReadInt32();
            break;
          }
          case 16: {
            BulletType = input.ReadInt32();
            break;
          }
          case 29: {
            X = input.ReadFloat();
            break;
          }
          case 37: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserShootMulti : pb::IMessage<SCUserShootMulti>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserShootMulti> _parser = new pb::MessageParser<SCUserShootMulti>(() => new SCUserShootMulti());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserShootMulti> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserShootMulti() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserShootMulti(SCUserShootMulti other) : this() {
      chairIdx_ = other.chairIdx_;
      bulletInfo_ = other.bulletInfo_.Clone();
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserShootMulti Clone() {
      return new SCUserShootMulti(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "bullet_info" field.</summary>
    public const int BulletInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.UserShootRsp> _repeated_bulletInfo_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.UserShootRsp.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.UserShootRsp> bulletInfo_ = new pbc::RepeatedField<global::BYDLD.UserShootRsp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.UserShootRsp> BulletInfo {
      get { return bulletInfo_; }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserShootMulti);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserShootMulti other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if(!bulletInfo_.Equals(other.bulletInfo_)) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      hash ^= bulletInfo_.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      bulletInfo_.WriteTo(output, _repeated_bulletInfo_codec);
      if (Score != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      bulletInfo_.WriteTo(ref output, _repeated_bulletInfo_codec);
      if (Score != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      size += bulletInfo_.CalculateSize(_repeated_bulletInfo_codec);
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserShootMulti other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      bulletInfo_.Add(other.bulletInfo_);
      if (other.Score != 0L) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18: {
            bulletInfo_.AddEntriesFrom(input, _repeated_bulletInfo_codec);
            break;
          }
          case 24: {
            Score = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18: {
            bulletInfo_.AddEntriesFrom(ref input, _repeated_bulletInfo_codec);
            break;
          }
          case 24: {
            Score = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HitFish : pb::IMessage<HitFish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HitFish> _parser = new pb::MessageParser<HitFish>(() => new HitFish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HitFish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HitFish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HitFish(HitFish other) : this() {
      fishUid_ = other.fishUid_;
      bulletId_ = other.bulletId_;
      throughIdx_ = other.throughIdx_;
      fishId_ = other.fishId_;
      effectFishUid_ = other.effectFishUid_.Clone();
      round_ = other.round_;
      ratio_ = other.ratio_;
      bulletType_ = other.bulletType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HitFish Clone() {
      return new HitFish(this);
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 1;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "bullet_id" field.</summary>
    public const int BulletIdFieldNumber = 2;
    private int bulletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletId {
      get { return bulletId_; }
      set {
        bulletId_ = value;
      }
    }

    /// <summary>Field number for the "through_idx" field.</summary>
    public const int ThroughIdxFieldNumber = 3;
    private int throughIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThroughIdx {
      get { return throughIdx_; }
      set {
        throughIdx_ = value;
      }
    }

    /// <summary>Field number for the "fish_id" field.</summary>
    public const int FishIdFieldNumber = 4;
    private int fishId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishId {
      get { return fishId_; }
      set {
        fishId_ = value;
      }
    }

    /// <summary>Field number for the "effect_fish_uid" field.</summary>
    public const int EffectFishUidFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_effectFishUid_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> effectFishUid_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> EffectFishUid {
      get { return effectFishUid_; }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 6;
    private int round_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Round {
      get { return round_; }
      set {
        round_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 7;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "bullet_type" field.</summary>
    public const int BulletTypeFieldNumber = 8;
    private int bulletType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletType {
      get { return bulletType_; }
      set {
        bulletType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HitFish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HitFish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishUid != other.FishUid) return false;
      if (BulletId != other.BulletId) return false;
      if (ThroughIdx != other.ThroughIdx) return false;
      if (FishId != other.FishId) return false;
      if(!effectFishUid_.Equals(other.effectFishUid_)) return false;
      if (Round != other.Round) return false;
      if (Ratio != other.Ratio) return false;
      if (BulletType != other.BulletType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (BulletId != 0) hash ^= BulletId.GetHashCode();
      if (ThroughIdx != 0) hash ^= ThroughIdx.GetHashCode();
      if (FishId != 0) hash ^= FishId.GetHashCode();
      hash ^= effectFishUid_.GetHashCode();
      if (Round != 0) hash ^= Round.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (BulletType != 0) hash ^= BulletType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (BulletId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BulletId);
      }
      if (ThroughIdx != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ThroughIdx);
      }
      if (FishId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FishId);
      }
      effectFishUid_.WriteTo(output, _repeated_effectFishUid_codec);
      if (Round != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Round);
      }
      if (Ratio != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ratio);
      }
      if (BulletType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BulletType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (BulletId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BulletId);
      }
      if (ThroughIdx != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ThroughIdx);
      }
      if (FishId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FishId);
      }
      effectFishUid_.WriteTo(ref output, _repeated_effectFishUid_codec);
      if (Round != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Round);
      }
      if (Ratio != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ratio);
      }
      if (BulletType != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BulletType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (BulletId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletId);
      }
      if (ThroughIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThroughIdx);
      }
      if (FishId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
      }
      size += effectFishUid_.CalculateSize(_repeated_effectFishUid_codec);
      if (Round != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (BulletType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HitFish other) {
      if (other == null) {
        return;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.BulletId != 0) {
        BulletId = other.BulletId;
      }
      if (other.ThroughIdx != 0) {
        ThroughIdx = other.ThroughIdx;
      }
      if (other.FishId != 0) {
        FishId = other.FishId;
      }
      effectFishUid_.Add(other.effectFishUid_);
      if (other.Round != 0) {
        Round = other.Round;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.BulletType != 0) {
        BulletType = other.BulletType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            BulletId = input.ReadInt32();
            break;
          }
          case 24: {
            ThroughIdx = input.ReadInt32();
            break;
          }
          case 32: {
            FishId = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            effectFishUid_.AddEntriesFrom(input, _repeated_effectFishUid_codec);
            break;
          }
          case 48: {
            Round = input.ReadInt32();
            break;
          }
          case 56: {
            Ratio = input.ReadInt32();
            break;
          }
          case 64: {
            BulletType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            BulletId = input.ReadInt32();
            break;
          }
          case 24: {
            ThroughIdx = input.ReadInt32();
            break;
          }
          case 32: {
            FishId = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            effectFishUid_.AddEntriesFrom(ref input, _repeated_effectFishUid_codec);
            break;
          }
          case 48: {
            Round = input.ReadInt32();
            break;
          }
          case 56: {
            Ratio = input.ReadInt32();
            break;
          }
          case 64: {
            BulletType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHitMultiFish : pb::IMessage<CSHitMultiFish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHitMultiFish> _parser = new pb::MessageParser<CSHitMultiFish>(() => new CSHitMultiFish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHitMultiFish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHitMultiFish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHitMultiFish(CSHitMultiFish other) : this() {
      hitInfo_ = other.hitInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHitMultiFish Clone() {
      return new CSHitMultiFish(this);
    }

    /// <summary>Field number for the "hit_info" field.</summary>
    public const int HitInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.HitFish> _repeated_hitInfo_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.HitFish.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.HitFish> hitInfo_ = new pbc::RepeatedField<global::BYDLD.HitFish>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.HitFish> HitInfo {
      get { return hitInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHitMultiFish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHitMultiFish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hitInfo_.Equals(other.hitInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hitInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      hitInfo_.WriteTo(output, _repeated_hitInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      hitInfo_.WriteTo(ref output, _repeated_hitInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hitInfo_.CalculateSize(_repeated_hitInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHitMultiFish other) {
      if (other == null) {
        return;
      }
      hitInfo_.Add(other.hitInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hitInfo_.AddEntriesFrom(input, _repeated_hitInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            hitInfo_.AddEntriesFrom(ref input, _repeated_hitInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EffectFish : pb::IMessage<EffectFish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EffectFish> _parser = new pb::MessageParser<EffectFish>(() => new EffectFish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EffectFish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectFish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectFish(EffectFish other) : this() {
      fishUid_ = other.fishUid_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EffectFish Clone() {
      return new EffectFish(this);
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 1;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EffectFish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EffectFish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishUid != other.FishUid) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EffectFish other) {
      if (other == null) {
        return;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DragonBallWheelInfo : pb::IMessage<DragonBallWheelInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DragonBallWheelInfo> _parser = new pb::MessageParser<DragonBallWheelInfo>(() => new DragonBallWheelInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DragonBallWheelInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallWheelInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallWheelInfo(DragonBallWheelInfo other) : this() {
      ratio_ = other.ratio_.Clone();
      next_ = other.next_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallWheelInfo Clone() {
      return new DragonBallWheelInfo(this);
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_ratio_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> ratio_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ratio {
      get { return ratio_; }
    }

    /// <summary>Field number for the "next" field.</summary>
    public const int NextFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_next_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> next_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Next {
      get { return next_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DragonBallWheelInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DragonBallWheelInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ratio_.Equals(other.ratio_)) return false;
      if(!next_.Equals(other.next_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ratio_.GetHashCode();
      hash ^= next_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ratio_.WriteTo(output, _repeated_ratio_codec);
      next_.WriteTo(output, _repeated_next_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ratio_.WriteTo(ref output, _repeated_ratio_codec);
      next_.WriteTo(ref output, _repeated_next_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ratio_.CalculateSize(_repeated_ratio_codec);
      size += next_.CalculateSize(_repeated_next_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DragonBallWheelInfo other) {
      if (other == null) {
        return;
      }
      ratio_.Add(other.ratio_);
      next_.Add(other.next_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ratio_.AddEntriesFrom(input, _repeated_ratio_codec);
            break;
          }
          case 18:
          case 16: {
            next_.AddEntriesFrom(input, _repeated_next_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            ratio_.AddEntriesFrom(ref input, _repeated_ratio_codec);
            break;
          }
          case 18:
          case 16: {
            next_.AddEntriesFrom(ref input, _repeated_next_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DragonBallInfo : pb::IMessage<DragonBallInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DragonBallInfo> _parser = new pb::MessageParser<DragonBallInfo>(() => new DragonBallInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DragonBallInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallInfo(DragonBallInfo other) : this() {
      baseRatio_ = other.baseRatio_;
      wheel_ = other.wheel_;
      awardRatio_ = other.awardRatio_.Clone();
      wheelInfo_ = other.wheelInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallInfo Clone() {
      return new DragonBallInfo(this);
    }

    /// <summary>Field number for the "base_ratio" field.</summary>
    public const int BaseRatioFieldNumber = 1;
    private int baseRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseRatio {
      get { return baseRatio_; }
      set {
        baseRatio_ = value;
      }
    }

    /// <summary>Field number for the "wheel" field.</summary>
    public const int WheelFieldNumber = 2;
    private int wheel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Wheel {
      get { return wheel_; }
      set {
        wheel_ = value;
      }
    }

    /// <summary>Field number for the "awardRatio" field.</summary>
    public const int AwardRatioFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_awardRatio_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> awardRatio_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AwardRatio {
      get { return awardRatio_; }
    }

    /// <summary>Field number for the "wheelInfo" field.</summary>
    public const int WheelInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BYDLD.DragonBallWheelInfo> _repeated_wheelInfo_codec
        = pb::FieldCodec.ForMessage(34, global::BYDLD.DragonBallWheelInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.DragonBallWheelInfo> wheelInfo_ = new pbc::RepeatedField<global::BYDLD.DragonBallWheelInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.DragonBallWheelInfo> WheelInfo {
      get { return wheelInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DragonBallInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DragonBallInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseRatio != other.BaseRatio) return false;
      if (Wheel != other.Wheel) return false;
      if(!awardRatio_.Equals(other.awardRatio_)) return false;
      if(!wheelInfo_.Equals(other.wheelInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseRatio != 0) hash ^= BaseRatio.GetHashCode();
      if (Wheel != 0) hash ^= Wheel.GetHashCode();
      hash ^= awardRatio_.GetHashCode();
      hash ^= wheelInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BaseRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BaseRatio);
      }
      if (Wheel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Wheel);
      }
      awardRatio_.WriteTo(output, _repeated_awardRatio_codec);
      wheelInfo_.WriteTo(output, _repeated_wheelInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BaseRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BaseRatio);
      }
      if (Wheel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Wheel);
      }
      awardRatio_.WriteTo(ref output, _repeated_awardRatio_codec);
      wheelInfo_.WriteTo(ref output, _repeated_wheelInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BaseRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseRatio);
      }
      if (Wheel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Wheel);
      }
      size += awardRatio_.CalculateSize(_repeated_awardRatio_codec);
      size += wheelInfo_.CalculateSize(_repeated_wheelInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DragonBallInfo other) {
      if (other == null) {
        return;
      }
      if (other.BaseRatio != 0) {
        BaseRatio = other.BaseRatio;
      }
      if (other.Wheel != 0) {
        Wheel = other.Wheel;
      }
      awardRatio_.Add(other.awardRatio_);
      wheelInfo_.Add(other.wheelInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BaseRatio = input.ReadInt32();
            break;
          }
          case 16: {
            Wheel = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            awardRatio_.AddEntriesFrom(input, _repeated_awardRatio_codec);
            break;
          }
          case 34: {
            wheelInfo_.AddEntriesFrom(input, _repeated_wheelInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BaseRatio = input.ReadInt32();
            break;
          }
          case 16: {
            Wheel = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            awardRatio_.AddEntriesFrom(ref input, _repeated_awardRatio_codec);
            break;
          }
          case 34: {
            wheelInfo_.AddEntriesFrom(ref input, _repeated_wheelInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OctopusKingItem : pb::IMessage<OctopusKingItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OctopusKingItem> _parser = new pb::MessageParser<OctopusKingItem>(() => new OctopusKingItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OctopusKingItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OctopusKingItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OctopusKingItem(OctopusKingItem other) : this() {
      selectedMultiple_ = other.selectedMultiple_;
      selectList_ = other.selectList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OctopusKingItem Clone() {
      return new OctopusKingItem(this);
    }

    /// <summary>Field number for the "selectedMultiple" field.</summary>
    public const int SelectedMultipleFieldNumber = 1;
    private int selectedMultiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelectedMultiple {
      get { return selectedMultiple_; }
      set {
        selectedMultiple_ = value;
      }
    }

    /// <summary>Field number for the "selectList" field.</summary>
    public const int SelectListFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_selectList_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> selectList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SelectList {
      get { return selectList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OctopusKingItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OctopusKingItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelectedMultiple != other.SelectedMultiple) return false;
      if(!selectList_.Equals(other.selectList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelectedMultiple != 0) hash ^= SelectedMultiple.GetHashCode();
      hash ^= selectList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SelectedMultiple != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SelectedMultiple);
      }
      selectList_.WriteTo(output, _repeated_selectList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SelectedMultiple != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SelectedMultiple);
      }
      selectList_.WriteTo(ref output, _repeated_selectList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelectedMultiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelectedMultiple);
      }
      size += selectList_.CalculateSize(_repeated_selectList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OctopusKingItem other) {
      if (other == null) {
        return;
      }
      if (other.SelectedMultiple != 0) {
        SelectedMultiple = other.SelectedMultiple;
      }
      selectList_.Add(other.selectList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SelectedMultiple = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            selectList_.AddEntriesFrom(input, _repeated_selectList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SelectedMultiple = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            selectList_.AddEntriesFrom(ref input, _repeated_selectList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OctopusKingInfo : pb::IMessage<OctopusKingInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OctopusKingInfo> _parser = new pb::MessageParser<OctopusKingInfo>(() => new OctopusKingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OctopusKingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OctopusKingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OctopusKingInfo(OctopusKingInfo other) : this() {
      multiples_ = other.multiples_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OctopusKingInfo Clone() {
      return new OctopusKingInfo(this);
    }

    /// <summary>Field number for the "multiples" field.</summary>
    public const int MultiplesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.OctopusKingItem> _repeated_multiples_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.OctopusKingItem.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.OctopusKingItem> multiples_ = new pbc::RepeatedField<global::BYDLD.OctopusKingItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.OctopusKingItem> Multiples {
      get { return multiples_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OctopusKingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OctopusKingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!multiples_.Equals(other.multiples_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= multiples_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      multiples_.WriteTo(output, _repeated_multiples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      multiples_.WriteTo(ref output, _repeated_multiples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += multiples_.CalculateSize(_repeated_multiples_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OctopusKingInfo other) {
      if (other == null) {
        return;
      }
      multiples_.Add(other.multiples_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            multiples_.AddEntriesFrom(input, _repeated_multiples_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            multiples_.AddEntriesFrom(ref input, _repeated_multiples_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MagicCardInfo : pb::IMessage<MagicCardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MagicCardInfo> _parser = new pb::MessageParser<MagicCardInfo>(() => new MagicCardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MagicCardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagicCardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagicCardInfo(MagicCardInfo other) : this() {
      cardId_ = other.cardId_;
      value_ = other.value_;
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagicCardInfo Clone() {
      return new MagicCardInfo(this);
    }

    /// <summary>Field number for the "cardId" field.</summary>
    public const int CardIdFieldNumber = 1;
    private int cardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 3;
    private int label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MagicCardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MagicCardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (Value != other.Value) return false;
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CardId);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (Label != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CardId);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (Label != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MagicCardInfo other) {
      if (other == null) {
        return;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CardId = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
          case 24: {
            Label = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CardId = input.ReadInt32();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
          case 24: {
            Label = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MagicInfo : pb::IMessage<MagicInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MagicInfo> _parser = new pb::MessageParser<MagicInfo>(() => new MagicInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MagicInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagicInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagicInfo(MagicInfo other) : this() {
      ratioCard_ = other.ratioCard_;
      magicCardList_ = other.magicCardList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MagicInfo Clone() {
      return new MagicInfo(this);
    }

    /// <summary>Field number for the "ratioCard" field.</summary>
    public const int RatioCardFieldNumber = 1;
    private int ratioCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RatioCard {
      get { return ratioCard_; }
      set {
        ratioCard_ = value;
      }
    }

    /// <summary>Field number for the "magicCardList" field.</summary>
    public const int MagicCardListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.MagicCardInfo> _repeated_magicCardList_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.MagicCardInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.MagicCardInfo> magicCardList_ = new pbc::RepeatedField<global::BYDLD.MagicCardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.MagicCardInfo> MagicCardList {
      get { return magicCardList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MagicInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MagicInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RatioCard != other.RatioCard) return false;
      if(!magicCardList_.Equals(other.magicCardList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RatioCard != 0) hash ^= RatioCard.GetHashCode();
      hash ^= magicCardList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RatioCard != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatioCard);
      }
      magicCardList_.WriteTo(output, _repeated_magicCardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RatioCard != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RatioCard);
      }
      magicCardList_.WriteTo(ref output, _repeated_magicCardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RatioCard != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RatioCard);
      }
      size += magicCardList_.CalculateSize(_repeated_magicCardList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MagicInfo other) {
      if (other == null) {
        return;
      }
      if (other.RatioCard != 0) {
        RatioCard = other.RatioCard;
      }
      magicCardList_.Add(other.magicCardList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RatioCard = input.ReadInt32();
            break;
          }
          case 18: {
            magicCardList_.AddEntriesFrom(input, _repeated_magicCardList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RatioCard = input.ReadInt32();
            break;
          }
          case 18: {
            magicCardList_.AddEntriesFrom(ref input, _repeated_magicCardList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class roulette_result : pb::IMessage<roulette_result>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<roulette_result> _parser = new pb::MessageParser<roulette_result>(() => new roulette_result());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<roulette_result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public roulette_result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public roulette_result(roulette_result other) : this() {
      type_ = other.type_;
      location_ = other.location_;
      multiple_ = other.multiple_;
      crit_ = other.crit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public roulette_result Clone() {
      return new roulette_result(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private int location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "multiple" field.</summary>
    public const int MultipleFieldNumber = 3;
    private int multiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple {
      get { return multiple_; }
      set {
        multiple_ = value;
      }
    }

    /// <summary>Field number for the "crit" field.</summary>
    public const int CritFieldNumber = 4;
    private int crit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Crit {
      get { return crit_; }
      set {
        crit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as roulette_result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(roulette_result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Location != other.Location) return false;
      if (Multiple != other.Multiple) return false;
      if (Crit != other.Crit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Location != 0) hash ^= Location.GetHashCode();
      if (Multiple != 0) hash ^= Multiple.GetHashCode();
      if (Crit != 0) hash ^= Crit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Location != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Location);
      }
      if (Multiple != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Multiple);
      }
      if (Crit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Crit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Location != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Location);
      }
      if (Multiple != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Multiple);
      }
      if (Crit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Crit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Location != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Location);
      }
      if (Multiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
      }
      if (Crit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Crit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(roulette_result other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Location != 0) {
        Location = other.Location;
      }
      if (other.Multiple != 0) {
        Multiple = other.Multiple;
      }
      if (other.Crit != 0) {
        Crit = other.Crit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Location = input.ReadInt32();
            break;
          }
          case 24: {
            Multiple = input.ReadInt32();
            break;
          }
          case 32: {
            Crit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Location = input.ReadInt32();
            break;
          }
          case 24: {
            Multiple = input.ReadInt32();
            break;
          }
          case 32: {
            Crit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class zeus_result : pb::IMessage<zeus_result>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<zeus_result> _parser = new pb::MessageParser<zeus_result>(() => new zeus_result());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<zeus_result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public zeus_result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public zeus_result(zeus_result other) : this() {
      type_ = other.type_;
      layout_ = other.layout_.Clone();
      result_ = other.result_.Clone();
      poolId_ = other.poolId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public zeus_result Clone() {
      return new zeus_result(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_layout_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> layout_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Layout {
      get { return layout_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BYDLD.roulette_result> _repeated_result_codec
        = pb::FieldCodec.ForMessage(26, global::BYDLD.roulette_result.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.roulette_result> result_ = new pbc::RepeatedField<global::BYDLD.roulette_result>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.roulette_result> Result {
      get { return result_; }
    }

    /// <summary>Field number for the "pool_id" field.</summary>
    public const int PoolIdFieldNumber = 4;
    private int poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as zeus_result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(zeus_result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!layout_.Equals(other.layout_)) return false;
      if(!result_.Equals(other.result_)) return false;
      if (PoolId != other.PoolId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= layout_.GetHashCode();
      hash ^= result_.GetHashCode();
      if (PoolId != 0) hash ^= PoolId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      layout_.WriteTo(output, _repeated_layout_codec);
      result_.WriteTo(output, _repeated_result_codec);
      if (PoolId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PoolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      layout_.WriteTo(ref output, _repeated_layout_codec);
      result_.WriteTo(ref output, _repeated_result_codec);
      if (PoolId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PoolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += layout_.CalculateSize(_repeated_layout_codec);
      size += result_.CalculateSize(_repeated_result_codec);
      if (PoolId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(zeus_result other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      layout_.Add(other.layout_);
      result_.Add(other.result_);
      if (other.PoolId != 0) {
        PoolId = other.PoolId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            layout_.AddEntriesFrom(input, _repeated_layout_codec);
            break;
          }
          case 26: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
          case 32: {
            PoolId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            layout_.AddEntriesFrom(ref input, _repeated_layout_codec);
            break;
          }
          case 26: {
            result_.AddEntriesFrom(ref input, _repeated_result_codec);
            break;
          }
          case 32: {
            PoolId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Zeus : pb::IMessage<Zeus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Zeus> _parser = new pb::MessageParser<Zeus>(() => new Zeus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Zeus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zeus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zeus(Zeus other) : this() {
      result_ = other.result_.Clone();
      totalMultiple_ = other.totalMultiple_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Zeus Clone() {
      return new Zeus(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.zeus_result> _repeated_result_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.zeus_result.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.zeus_result> result_ = new pbc::RepeatedField<global::BYDLD.zeus_result>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.zeus_result> Result {
      get { return result_; }
    }

    /// <summary>Field number for the "total_multiple" field.</summary>
    public const int TotalMultipleFieldNumber = 2;
    private int totalMultiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalMultiple {
      get { return totalMultiple_; }
      set {
        totalMultiple_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Zeus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Zeus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!result_.Equals(other.result_)) return false;
      if (TotalMultiple != other.TotalMultiple) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= result_.GetHashCode();
      if (TotalMultiple != 0) hash ^= TotalMultiple.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      result_.WriteTo(output, _repeated_result_codec);
      if (TotalMultiple != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalMultiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      result_.WriteTo(ref output, _repeated_result_codec);
      if (TotalMultiple != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalMultiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += result_.CalculateSize(_repeated_result_codec);
      if (TotalMultiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalMultiple);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Zeus other) {
      if (other == null) {
        return;
      }
      result_.Add(other.result_);
      if (other.TotalMultiple != 0) {
        TotalMultiple = other.TotalMultiple;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
          case 16: {
            TotalMultiple = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            result_.AddEntriesFrom(ref input, _repeated_result_codec);
            break;
          }
          case 16: {
            TotalMultiple = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GemConfig : pb::IMessage<GemConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GemConfig> _parser = new pb::MessageParser<GemConfig>(() => new GemConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GemConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemConfig(GemConfig other) : this() {
      id_ = other.id_;
      multiple_ = other.multiple_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemConfig Clone() {
      return new GemConfig(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "multiple" field.</summary>
    public const int MultipleFieldNumber = 2;
    private int multiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple {
      get { return multiple_; }
      set {
        multiple_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GemConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GemConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Multiple != other.Multiple) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Multiple != 0) hash ^= Multiple.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Multiple != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Multiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Multiple != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Multiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Multiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GemConfig other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Multiple != 0) {
        Multiple = other.Multiple;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Multiple = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Multiple = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCGemConfigList : pb::IMessage<SCGemConfigList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGemConfigList> _parser = new pb::MessageParser<SCGemConfigList>(() => new SCGemConfigList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGemConfigList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGemConfigList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGemConfigList(SCGemConfigList other) : this() {
      gemConfigList_ = other.gemConfigList_.Clone();
      criticalConfigList_ = other.criticalConfigList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGemConfigList Clone() {
      return new SCGemConfigList(this);
    }

    /// <summary>Field number for the "gem_config_list" field.</summary>
    public const int GemConfigListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.GemConfig> _repeated_gemConfigList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.GemConfig.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.GemConfig> gemConfigList_ = new pbc::RepeatedField<global::BYDLD.GemConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.GemConfig> GemConfigList {
      get { return gemConfigList_; }
    }

    /// <summary>Field number for the "critical_config_list" field.</summary>
    public const int CriticalConfigListFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_criticalConfigList_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> criticalConfigList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CriticalConfigList {
      get { return criticalConfigList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGemConfigList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGemConfigList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gemConfigList_.Equals(other.gemConfigList_)) return false;
      if(!criticalConfigList_.Equals(other.criticalConfigList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gemConfigList_.GetHashCode();
      hash ^= criticalConfigList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gemConfigList_.WriteTo(output, _repeated_gemConfigList_codec);
      criticalConfigList_.WriteTo(output, _repeated_criticalConfigList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gemConfigList_.WriteTo(ref output, _repeated_gemConfigList_codec);
      criticalConfigList_.WriteTo(ref output, _repeated_criticalConfigList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gemConfigList_.CalculateSize(_repeated_gemConfigList_codec);
      size += criticalConfigList_.CalculateSize(_repeated_criticalConfigList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGemConfigList other) {
      if (other == null) {
        return;
      }
      gemConfigList_.Add(other.gemConfigList_);
      criticalConfigList_.Add(other.criticalConfigList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gemConfigList_.AddEntriesFrom(input, _repeated_gemConfigList_codec);
            break;
          }
          case 18:
          case 16: {
            criticalConfigList_.AddEntriesFrom(input, _repeated_criticalConfigList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gemConfigList_.AddEntriesFrom(ref input, _repeated_gemConfigList_codec);
            break;
          }
          case 18:
          case 16: {
            criticalConfigList_.AddEntriesFrom(ref input, _repeated_criticalConfigList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemWheel : pb::IMessage<ItemWheel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemWheel> _parser = new pb::MessageParser<ItemWheel>(() => new ItemWheel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemWheel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWheel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWheel(ItemWheel other) : this() {
      wheelId_ = other.wheelId_;
      wheelLevel_ = other.wheelLevel_;
      itemList_ = other.itemList_.Clone();
      resultList_ = other.resultList_.Clone();
      wheelMulti_ = other.wheelMulti_;
      awardNum_ = other.awardNum_;
      awardType_ = other.awardType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemWheel Clone() {
      return new ItemWheel(this);
    }

    /// <summary>Field number for the "wheel_id" field.</summary>
    public const int WheelIdFieldNumber = 1;
    private int wheelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WheelId {
      get { return wheelId_; }
      set {
        wheelId_ = value;
      }
    }

    /// <summary>Field number for the "wheel_level" field.</summary>
    public const int WheelLevelFieldNumber = 2;
    private int wheelLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WheelLevel {
      get { return wheelLevel_; }
      set {
        wheelLevel_ = value;
      }
    }

    /// <summary>Field number for the "item_list" field.</summary>
    public const int ItemListFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_itemList_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> itemList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemList {
      get { return itemList_; }
    }

    /// <summary>Field number for the "result_list" field.</summary>
    public const int ResultListFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_resultList_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> resultList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ResultList {
      get { return resultList_; }
    }

    /// <summary>Field number for the "wheel_multi" field.</summary>
    public const int WheelMultiFieldNumber = 5;
    private int wheelMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WheelMulti {
      get { return wheelMulti_; }
      set {
        wheelMulti_ = value;
      }
    }

    /// <summary>Field number for the "award_num" field.</summary>
    public const int AwardNumFieldNumber = 6;
    private int awardNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardNum {
      get { return awardNum_; }
      set {
        awardNum_ = value;
      }
    }

    /// <summary>Field number for the "award_type" field.</summary>
    public const int AwardTypeFieldNumber = 7;
    private int awardType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardType {
      get { return awardType_; }
      set {
        awardType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemWheel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemWheel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WheelId != other.WheelId) return false;
      if (WheelLevel != other.WheelLevel) return false;
      if(!itemList_.Equals(other.itemList_)) return false;
      if(!resultList_.Equals(other.resultList_)) return false;
      if (WheelMulti != other.WheelMulti) return false;
      if (AwardNum != other.AwardNum) return false;
      if (AwardType != other.AwardType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WheelId != 0) hash ^= WheelId.GetHashCode();
      if (WheelLevel != 0) hash ^= WheelLevel.GetHashCode();
      hash ^= itemList_.GetHashCode();
      hash ^= resultList_.GetHashCode();
      if (WheelMulti != 0) hash ^= WheelMulti.GetHashCode();
      if (AwardNum != 0) hash ^= AwardNum.GetHashCode();
      if (AwardType != 0) hash ^= AwardType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WheelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WheelId);
      }
      if (WheelLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WheelLevel);
      }
      itemList_.WriteTo(output, _repeated_itemList_codec);
      resultList_.WriteTo(output, _repeated_resultList_codec);
      if (WheelMulti != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WheelMulti);
      }
      if (AwardNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AwardNum);
      }
      if (AwardType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AwardType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WheelId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WheelId);
      }
      if (WheelLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WheelLevel);
      }
      itemList_.WriteTo(ref output, _repeated_itemList_codec);
      resultList_.WriteTo(ref output, _repeated_resultList_codec);
      if (WheelMulti != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WheelMulti);
      }
      if (AwardNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AwardNum);
      }
      if (AwardType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AwardType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WheelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WheelId);
      }
      if (WheelLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WheelLevel);
      }
      size += itemList_.CalculateSize(_repeated_itemList_codec);
      size += resultList_.CalculateSize(_repeated_resultList_codec);
      if (WheelMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WheelMulti);
      }
      if (AwardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardNum);
      }
      if (AwardType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemWheel other) {
      if (other == null) {
        return;
      }
      if (other.WheelId != 0) {
        WheelId = other.WheelId;
      }
      if (other.WheelLevel != 0) {
        WheelLevel = other.WheelLevel;
      }
      itemList_.Add(other.itemList_);
      resultList_.Add(other.resultList_);
      if (other.WheelMulti != 0) {
        WheelMulti = other.WheelMulti;
      }
      if (other.AwardNum != 0) {
        AwardNum = other.AwardNum;
      }
      if (other.AwardType != 0) {
        AwardType = other.AwardType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WheelId = input.ReadInt32();
            break;
          }
          case 16: {
            WheelLevel = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            itemList_.AddEntriesFrom(input, _repeated_itemList_codec);
            break;
          }
          case 34:
          case 32: {
            resultList_.AddEntriesFrom(input, _repeated_resultList_codec);
            break;
          }
          case 40: {
            WheelMulti = input.ReadInt32();
            break;
          }
          case 48: {
            AwardNum = input.ReadInt32();
            break;
          }
          case 56: {
            AwardType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WheelId = input.ReadInt32();
            break;
          }
          case 16: {
            WheelLevel = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            itemList_.AddEntriesFrom(ref input, _repeated_itemList_codec);
            break;
          }
          case 34:
          case 32: {
            resultList_.AddEntriesFrom(ref input, _repeated_resultList_codec);
            break;
          }
          case 40: {
            WheelMulti = input.ReadInt32();
            break;
          }
          case 48: {
            AwardNum = input.ReadInt32();
            break;
          }
          case 56: {
            AwardType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CritWheel : pb::IMessage<CritWheel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CritWheel> _parser = new pb::MessageParser<CritWheel>(() => new CritWheel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CritWheel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CritWheel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CritWheel(CritWheel other) : this() {
      critList_ = other.critList_.Clone();
      critResult_ = other.critResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CritWheel Clone() {
      return new CritWheel(this);
    }

    /// <summary>Field number for the "crit_list" field.</summary>
    public const int CritListFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_critList_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> critList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CritList {
      get { return critList_; }
    }

    /// <summary>Field number for the "crit_result" field.</summary>
    public const int CritResultFieldNumber = 2;
    private int critResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritResult {
      get { return critResult_; }
      set {
        critResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CritWheel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CritWheel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!critList_.Equals(other.critList_)) return false;
      if (CritResult != other.CritResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= critList_.GetHashCode();
      if (CritResult != 0) hash ^= CritResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      critList_.WriteTo(output, _repeated_critList_codec);
      if (CritResult != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CritResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      critList_.WriteTo(ref output, _repeated_critList_codec);
      if (CritResult != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CritResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += critList_.CalculateSize(_repeated_critList_codec);
      if (CritResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CritWheel other) {
      if (other == null) {
        return;
      }
      critList_.Add(other.critList_);
      if (other.CritResult != 0) {
        CritResult = other.CritResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            critList_.AddEntriesFrom(input, _repeated_critList_codec);
            break;
          }
          case 16: {
            CritResult = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            critList_.AddEntriesFrom(ref input, _repeated_critList_codec);
            break;
          }
          case 16: {
            CritResult = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GoldenJadeInfo : pb::IMessage<GoldenJadeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GoldenJadeInfo> _parser = new pb::MessageParser<GoldenJadeInfo>(() => new GoldenJadeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoldenJadeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoldenJadeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoldenJadeInfo(GoldenJadeInfo other) : this() {
      itemWheels_ = other.itemWheels_.Clone();
      critWheel_ = other.critWheel_ != null ? other.critWheel_.Clone() : null;
      totalMulti_ = other.totalMulti_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoldenJadeInfo Clone() {
      return new GoldenJadeInfo(this);
    }

    /// <summary>Field number for the "item_wheels" field.</summary>
    public const int ItemWheelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.ItemWheel> _repeated_itemWheels_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.ItemWheel.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.ItemWheel> itemWheels_ = new pbc::RepeatedField<global::BYDLD.ItemWheel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.ItemWheel> ItemWheels {
      get { return itemWheels_; }
    }

    /// <summary>Field number for the "crit_wheel" field.</summary>
    public const int CritWheelFieldNumber = 2;
    private global::BYDLD.CritWheel critWheel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.CritWheel CritWheel {
      get { return critWheel_; }
      set {
        critWheel_ = value;
      }
    }

    /// <summary>Field number for the "total_multi" field.</summary>
    public const int TotalMultiFieldNumber = 3;
    private int totalMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalMulti {
      get { return totalMulti_; }
      set {
        totalMulti_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoldenJadeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoldenJadeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemWheels_.Equals(other.itemWheels_)) return false;
      if (!object.Equals(CritWheel, other.CritWheel)) return false;
      if (TotalMulti != other.TotalMulti) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemWheels_.GetHashCode();
      if (critWheel_ != null) hash ^= CritWheel.GetHashCode();
      if (TotalMulti != 0) hash ^= TotalMulti.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemWheels_.WriteTo(output, _repeated_itemWheels_codec);
      if (critWheel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CritWheel);
      }
      if (TotalMulti != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemWheels_.WriteTo(ref output, _repeated_itemWheels_codec);
      if (critWheel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CritWheel);
      }
      if (TotalMulti != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemWheels_.CalculateSize(_repeated_itemWheels_codec);
      if (critWheel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CritWheel);
      }
      if (TotalMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalMulti);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoldenJadeInfo other) {
      if (other == null) {
        return;
      }
      itemWheels_.Add(other.itemWheels_);
      if (other.critWheel_ != null) {
        if (critWheel_ == null) {
          CritWheel = new global::BYDLD.CritWheel();
        }
        CritWheel.MergeFrom(other.CritWheel);
      }
      if (other.TotalMulti != 0) {
        TotalMulti = other.TotalMulti;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemWheels_.AddEntriesFrom(input, _repeated_itemWheels_codec);
            break;
          }
          case 18: {
            if (critWheel_ == null) {
              CritWheel = new global::BYDLD.CritWheel();
            }
            input.ReadMessage(CritWheel);
            break;
          }
          case 24: {
            TotalMulti = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            itemWheels_.AddEntriesFrom(ref input, _repeated_itemWheels_codec);
            break;
          }
          case 18: {
            if (critWheel_ == null) {
              CritWheel = new global::BYDLD.CritWheel();
            }
            input.ReadMessage(CritWheel);
            break;
          }
          case 24: {
            TotalMulti = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AztecGemConfigItem : pb::IMessage<AztecGemConfigItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AztecGemConfigItem> _parser = new pb::MessageParser<AztecGemConfigItem>(() => new AztecGemConfigItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AztecGemConfigItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecGemConfigItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecGemConfigItem(AztecGemConfigItem other) : this() {
      num_ = other.num_;
      ratio_ = other.ratio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecGemConfigItem Clone() {
      return new AztecGemConfigItem(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 2;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AztecGemConfigItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AztecGemConfigItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      if (Ratio != other.Ratio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0) hash ^= Num.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Num != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Num);
      }
      if (Ratio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Num != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Num);
      }
      if (Ratio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AztecGemConfigItem other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt32();
            break;
          }
          case 16: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Num = input.ReadInt32();
            break;
          }
          case 16: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AztecGemConfig : pb::IMessage<AztecGemConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AztecGemConfig> _parser = new pb::MessageParser<AztecGemConfig>(() => new AztecGemConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AztecGemConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecGemConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecGemConfig(AztecGemConfig other) : this() {
      items_ = other.items_.Clone();
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecGemConfig Clone() {
      return new AztecGemConfig(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.AztecGemConfigItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.AztecGemConfigItem.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AztecGemConfigItem> items_ = new pbc::RepeatedField<global::BYDLD.AztecGemConfigItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AztecGemConfigItem> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::BYDLD.AztecGemType type_ = global::BYDLD.AztecGemType.Null;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.AztecGemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AztecGemConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AztecGemConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (Type != global::BYDLD.AztecGemType.Null) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (Type != global::BYDLD.AztecGemType.Null) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (Type != global::BYDLD.AztecGemType.Null) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (Type != global::BYDLD.AztecGemType.Null) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AztecGemConfig other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.Type != global::BYDLD.AztecGemType.Null) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            Type = (global::BYDLD.AztecGemType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 16: {
            Type = (global::BYDLD.AztecGemType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSAztecGemConfig : pb::IMessage<CSAztecGemConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSAztecGemConfig> _parser = new pb::MessageParser<CSAztecGemConfig>(() => new CSAztecGemConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSAztecGemConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAztecGemConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAztecGemConfig(CSAztecGemConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAztecGemConfig Clone() {
      return new CSAztecGemConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSAztecGemConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSAztecGemConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSAztecGemConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCAztecGemConfig : pb::IMessage<SCAztecGemConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCAztecGemConfig> _parser = new pb::MessageParser<SCAztecGemConfig>(() => new SCAztecGemConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCAztecGemConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAztecGemConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAztecGemConfig(SCAztecGemConfig other) : this() {
      configs_ = other.configs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAztecGemConfig Clone() {
      return new SCAztecGemConfig(this);
    }

    /// <summary>Field number for the "configs" field.</summary>
    public const int ConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.AztecGemConfig> _repeated_configs_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.AztecGemConfig.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AztecGemConfig> configs_ = new pbc::RepeatedField<global::BYDLD.AztecGemConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AztecGemConfig> Configs {
      get { return configs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCAztecGemConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCAztecGemConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!configs_.Equals(other.configs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= configs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      configs_.WriteTo(output, _repeated_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      configs_.WriteTo(ref output, _repeated_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += configs_.CalculateSize(_repeated_configs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCAztecGemConfig other) {
      if (other == null) {
        return;
      }
      configs_.Add(other.configs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            configs_.AddEntriesFrom(input, _repeated_configs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            configs_.AddEntriesFrom(ref input, _repeated_configs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AztecClearReward : pb::IMessage<AztecClearReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AztecClearReward> _parser = new pb::MessageParser<AztecClearReward>(() => new AztecClearReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AztecClearReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecClearReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecClearReward(AztecClearReward other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecClearReward Clone() {
      return new AztecClearReward(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::BYDLD.AztecGemType type_ = global::BYDLD.AztecGemType.Null;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.AztecGemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AztecClearReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AztecClearReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::BYDLD.AztecGemType.Null) hash ^= Type.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::BYDLD.AztecGemType.Null) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::BYDLD.AztecGemType.Null) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::BYDLD.AztecGemType.Null) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AztecClearReward other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::BYDLD.AztecGemType.Null) {
        Type = other.Type;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::BYDLD.AztecGemType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::BYDLD.AztecGemType) input.ReadEnum();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AztecTable : pb::IMessage<AztecTable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AztecTable> _parser = new pb::MessageParser<AztecTable>(() => new AztecTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AztecTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecTable(AztecTable other) : this() {
      gems_ = other.gems_.Clone();
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecTable Clone() {
      return new AztecTable(this);
    }

    /// <summary>Field number for the "gems" field.</summary>
    public const int GemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.AztecGemType> _repeated_gems_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::BYDLD.AztecGemType) x);
    private readonly pbc::RepeatedField<global::BYDLD.AztecGemType> gems_ = new pbc::RepeatedField<global::BYDLD.AztecGemType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AztecGemType> Gems {
      get { return gems_; }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.AztecClearReward> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.AztecClearReward.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AztecClearReward> rewards_ = new pbc::RepeatedField<global::BYDLD.AztecClearReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AztecClearReward> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AztecTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AztecTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gems_.Equals(other.gems_)) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gems_.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gems_.WriteTo(output, _repeated_gems_codec);
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gems_.WriteTo(ref output, _repeated_gems_codec);
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gems_.CalculateSize(_repeated_gems_codec);
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AztecTable other) {
      if (other == null) {
        return;
      }
      gems_.Add(other.gems_);
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            gems_.AddEntriesFrom(input, _repeated_gems_codec);
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            gems_.AddEntriesFrom(ref input, _repeated_gems_codec);
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AztecStep : pb::IMessage<AztecStep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AztecStep> _parser = new pb::MessageParser<AztecStep>(() => new AztecStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AztecStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecStep(AztecStep other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecStep Clone() {
      return new AztecStep(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.AztecTable> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.AztecTable.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AztecTable> tables_ = new pbc::RepeatedField<global::BYDLD.AztecTable>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AztecTable> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AztecStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AztecStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tables_.WriteTo(ref output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AztecStep other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tables_.AddEntriesFrom(ref input, _repeated_tables_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AztecDataInfo : pb::IMessage<AztecDataInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AztecDataInfo> _parser = new pb::MessageParser<AztecDataInfo>(() => new AztecDataInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AztecDataInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecDataInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecDataInfo(AztecDataInfo other) : this() {
      steps_ = other.steps_.Clone();
      totalWin_ = other.totalWin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AztecDataInfo Clone() {
      return new AztecDataInfo(this);
    }

    /// <summary>Field number for the "steps" field.</summary>
    public const int StepsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.AztecStep> _repeated_steps_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.AztecStep.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AztecStep> steps_ = new pbc::RepeatedField<global::BYDLD.AztecStep>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AztecStep> Steps {
      get { return steps_; }
    }

    /// <summary>Field number for the "total_win" field.</summary>
    public const int TotalWinFieldNumber = 2;
    private int totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AztecDataInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AztecDataInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!steps_.Equals(other.steps_)) return false;
      if (TotalWin != other.TotalWin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= steps_.GetHashCode();
      if (TotalWin != 0) hash ^= TotalWin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      steps_.WriteTo(output, _repeated_steps_codec);
      if (TotalWin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      steps_.WriteTo(ref output, _repeated_steps_codec);
      if (TotalWin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += steps_.CalculateSize(_repeated_steps_codec);
      if (TotalWin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalWin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AztecDataInfo other) {
      if (other == null) {
        return;
      }
      steps_.Add(other.steps_);
      if (other.TotalWin != 0) {
        TotalWin = other.TotalWin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            steps_.AddEntriesFrom(input, _repeated_steps_codec);
            break;
          }
          case 16: {
            TotalWin = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            steps_.AddEntriesFrom(ref input, _repeated_steps_codec);
            break;
          }
          case 16: {
            TotalWin = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Capturefish : pb::IMessage<Capturefish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Capturefish> _parser = new pb::MessageParser<Capturefish>(() => new Capturefish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Capturefish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Capturefish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Capturefish(Capturefish other) : this() {
      fishUid_ = other.fishUid_;
      getScore_ = other.getScore_;
      fishId_ = other.fishId_;
      torpedoes_ = other.torpedoes_.Clone();
      luckyRatio_ = other.luckyRatio_;
      tridentScore_ = other.tridentScore_;
      effectFish_ = other.effectFish_.Clone();
      awardTime_ = other.awardTime_;
      bulletType_ = other.bulletType_;
      multiple_ = other.multiple_;
      getPeilv_ = other.getPeilv_;
      death_ = other.death_;
      stage_ = other.stage_;
      subStage_ = other.subStage_;
      awardIndex_ = other.awardIndex_;
      critMultiple_ = other.critMultiple_;
      ingotMulti_ = other.ingotMulti_;
      ratio_ = other.ratio_;
      frozenTime_ = other.frozenTime_;
      tridentMulti_ = other.tridentMulti_;
      scratchCard_ = other.scratchCard_;
      ballInfo_ = other.ballInfo_ != null ? other.ballInfo_.Clone() : null;
      octopusKing_ = other.octopusKing_ != null ? other.octopusKing_.Clone() : null;
      isReward_ = other.isReward_;
      magicInfo_ = other.magicInfo_ != null ? other.magicInfo_.Clone() : null;
      zeusInfo_ = other.zeusInfo_ != null ? other.zeusInfo_.Clone() : null;
      goldenJadeInfo_ = other.goldenJadeInfo_ != null ? other.goldenJadeInfo_.Clone() : null;
      aztecDataInfo_ = other.aztecDataInfo_ != null ? other.aztecDataInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Capturefish Clone() {
      return new Capturefish(this);
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 1;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "get_score" field.</summary>
    public const int GetScoreFieldNumber = 2;
    private int getScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GetScore {
      get { return getScore_; }
      set {
        getScore_ = value;
      }
    }

    /// <summary>Field number for the "fish_id" field.</summary>
    public const int FishIdFieldNumber = 3;
    private int fishId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishId {
      get { return fishId_; }
      set {
        fishId_ = value;
      }
    }

    /// <summary>Field number for the "torpedoes" field.</summary>
    public const int TorpedoesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_torpedoes_codec
        = pb::FieldCodec.ForMessage(34, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> torpedoes_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> Torpedoes {
      get { return torpedoes_; }
    }

    /// <summary>Field number for the "lucky_ratio" field.</summary>
    public const int LuckyRatioFieldNumber = 5;
    private int luckyRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LuckyRatio {
      get { return luckyRatio_; }
      set {
        luckyRatio_ = value;
      }
    }

    /// <summary>Field number for the "trident_score" field.</summary>
    public const int TridentScoreFieldNumber = 6;
    private int tridentScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TridentScore {
      get { return tridentScore_; }
      set {
        tridentScore_ = value;
      }
    }

    /// <summary>Field number for the "effect_fish" field.</summary>
    public const int EffectFishFieldNumber = 7;
    private static readonly pb::FieldCodec<global::BYDLD.EffectFish> _repeated_effectFish_codec
        = pb::FieldCodec.ForMessage(58, global::BYDLD.EffectFish.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.EffectFish> effectFish_ = new pbc::RepeatedField<global::BYDLD.EffectFish>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.EffectFish> EffectFish {
      get { return effectFish_; }
    }

    /// <summary>Field number for the "award_time" field.</summary>
    public const int AwardTimeFieldNumber = 8;
    private int awardTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardTime {
      get { return awardTime_; }
      set {
        awardTime_ = value;
      }
    }

    /// <summary>Field number for the "bulletType" field.</summary>
    public const int BulletTypeFieldNumber = 9;
    private int bulletType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletType {
      get { return bulletType_; }
      set {
        bulletType_ = value;
      }
    }

    /// <summary>Field number for the "multiple" field.</summary>
    public const int MultipleFieldNumber = 10;
    private int multiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple {
      get { return multiple_; }
      set {
        multiple_ = value;
      }
    }

    /// <summary>Field number for the "get_peilv" field.</summary>
    public const int GetPeilvFieldNumber = 11;
    private int getPeilv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GetPeilv {
      get { return getPeilv_; }
      set {
        getPeilv_ = value;
      }
    }

    /// <summary>Field number for the "death" field.</summary>
    public const int DeathFieldNumber = 12;
    private int death_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Death {
      get { return death_; }
      set {
        death_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 13;
    private int stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "sub_stage" field.</summary>
    public const int SubStageFieldNumber = 14;
    private int subStage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubStage {
      get { return subStage_; }
      set {
        subStage_ = value;
      }
    }

    /// <summary>Field number for the "award_index" field.</summary>
    public const int AwardIndexFieldNumber = 15;
    private int awardIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardIndex {
      get { return awardIndex_; }
      set {
        awardIndex_ = value;
      }
    }

    /// <summary>Field number for the "crit_multiple" field.</summary>
    public const int CritMultipleFieldNumber = 16;
    private int critMultiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritMultiple {
      get { return critMultiple_; }
      set {
        critMultiple_ = value;
      }
    }

    /// <summary>Field number for the "ingot_multi" field.</summary>
    public const int IngotMultiFieldNumber = 17;
    private int ingotMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IngotMulti {
      get { return ingotMulti_; }
      set {
        ingotMulti_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 18;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "frozen_time" field.</summary>
    public const int FrozenTimeFieldNumber = 19;
    private int frozenTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrozenTime {
      get { return frozenTime_; }
      set {
        frozenTime_ = value;
      }
    }

    /// <summary>Field number for the "trident_multi" field.</summary>
    public const int TridentMultiFieldNumber = 20;
    private int tridentMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TridentMulti {
      get { return tridentMulti_; }
      set {
        tridentMulti_ = value;
      }
    }

    /// <summary>Field number for the "scratch_card" field.</summary>
    public const int ScratchCardFieldNumber = 21;
    private int scratchCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScratchCard {
      get { return scratchCard_; }
      set {
        scratchCard_ = value;
      }
    }

    /// <summary>Field number for the "ball_info" field.</summary>
    public const int BallInfoFieldNumber = 22;
    private global::BYDLD.DragonBallInfo ballInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.DragonBallInfo BallInfo {
      get { return ballInfo_; }
      set {
        ballInfo_ = value;
      }
    }

    /// <summary>Field number for the "octopus_king" field.</summary>
    public const int OctopusKingFieldNumber = 23;
    private global::BYDLD.OctopusKingInfo octopusKing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.OctopusKingInfo OctopusKing {
      get { return octopusKing_; }
      set {
        octopusKing_ = value;
      }
    }

    /// <summary>Field number for the "is_reward" field.</summary>
    public const int IsRewardFieldNumber = 24;
    private bool isReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReward {
      get { return isReward_; }
      set {
        isReward_ = value;
      }
    }

    /// <summary>Field number for the "magic_info" field.</summary>
    public const int MagicInfoFieldNumber = 25;
    private global::BYDLD.MagicInfo magicInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.MagicInfo MagicInfo {
      get { return magicInfo_; }
      set {
        magicInfo_ = value;
      }
    }

    /// <summary>Field number for the "zeus_info" field.</summary>
    public const int ZeusInfoFieldNumber = 26;
    private global::BYDLD.Zeus zeusInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.Zeus ZeusInfo {
      get { return zeusInfo_; }
      set {
        zeusInfo_ = value;
      }
    }

    /// <summary>Field number for the "golden_jade_info" field.</summary>
    public const int GoldenJadeInfoFieldNumber = 27;
    private global::BYDLD.GoldenJadeInfo goldenJadeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.GoldenJadeInfo GoldenJadeInfo {
      get { return goldenJadeInfo_; }
      set {
        goldenJadeInfo_ = value;
      }
    }

    /// <summary>Field number for the "aztec_data_info" field.</summary>
    public const int AztecDataInfoFieldNumber = 28;
    private global::BYDLD.AztecDataInfo aztecDataInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.AztecDataInfo AztecDataInfo {
      get { return aztecDataInfo_; }
      set {
        aztecDataInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Capturefish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Capturefish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishUid != other.FishUid) return false;
      if (GetScore != other.GetScore) return false;
      if (FishId != other.FishId) return false;
      if(!torpedoes_.Equals(other.torpedoes_)) return false;
      if (LuckyRatio != other.LuckyRatio) return false;
      if (TridentScore != other.TridentScore) return false;
      if(!effectFish_.Equals(other.effectFish_)) return false;
      if (AwardTime != other.AwardTime) return false;
      if (BulletType != other.BulletType) return false;
      if (Multiple != other.Multiple) return false;
      if (GetPeilv != other.GetPeilv) return false;
      if (Death != other.Death) return false;
      if (Stage != other.Stage) return false;
      if (SubStage != other.SubStage) return false;
      if (AwardIndex != other.AwardIndex) return false;
      if (CritMultiple != other.CritMultiple) return false;
      if (IngotMulti != other.IngotMulti) return false;
      if (Ratio != other.Ratio) return false;
      if (FrozenTime != other.FrozenTime) return false;
      if (TridentMulti != other.TridentMulti) return false;
      if (ScratchCard != other.ScratchCard) return false;
      if (!object.Equals(BallInfo, other.BallInfo)) return false;
      if (!object.Equals(OctopusKing, other.OctopusKing)) return false;
      if (IsReward != other.IsReward) return false;
      if (!object.Equals(MagicInfo, other.MagicInfo)) return false;
      if (!object.Equals(ZeusInfo, other.ZeusInfo)) return false;
      if (!object.Equals(GoldenJadeInfo, other.GoldenJadeInfo)) return false;
      if (!object.Equals(AztecDataInfo, other.AztecDataInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (GetScore != 0) hash ^= GetScore.GetHashCode();
      if (FishId != 0) hash ^= FishId.GetHashCode();
      hash ^= torpedoes_.GetHashCode();
      if (LuckyRatio != 0) hash ^= LuckyRatio.GetHashCode();
      if (TridentScore != 0) hash ^= TridentScore.GetHashCode();
      hash ^= effectFish_.GetHashCode();
      if (AwardTime != 0) hash ^= AwardTime.GetHashCode();
      if (BulletType != 0) hash ^= BulletType.GetHashCode();
      if (Multiple != 0) hash ^= Multiple.GetHashCode();
      if (GetPeilv != 0) hash ^= GetPeilv.GetHashCode();
      if (Death != 0) hash ^= Death.GetHashCode();
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (SubStage != 0) hash ^= SubStage.GetHashCode();
      if (AwardIndex != 0) hash ^= AwardIndex.GetHashCode();
      if (CritMultiple != 0) hash ^= CritMultiple.GetHashCode();
      if (IngotMulti != 0) hash ^= IngotMulti.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (FrozenTime != 0) hash ^= FrozenTime.GetHashCode();
      if (TridentMulti != 0) hash ^= TridentMulti.GetHashCode();
      if (ScratchCard != 0) hash ^= ScratchCard.GetHashCode();
      if (ballInfo_ != null) hash ^= BallInfo.GetHashCode();
      if (octopusKing_ != null) hash ^= OctopusKing.GetHashCode();
      if (IsReward != false) hash ^= IsReward.GetHashCode();
      if (magicInfo_ != null) hash ^= MagicInfo.GetHashCode();
      if (zeusInfo_ != null) hash ^= ZeusInfo.GetHashCode();
      if (goldenJadeInfo_ != null) hash ^= GoldenJadeInfo.GetHashCode();
      if (aztecDataInfo_ != null) hash ^= AztecDataInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (GetScore != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GetScore);
      }
      if (FishId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FishId);
      }
      torpedoes_.WriteTo(output, _repeated_torpedoes_codec);
      if (LuckyRatio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LuckyRatio);
      }
      if (TridentScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TridentScore);
      }
      effectFish_.WriteTo(output, _repeated_effectFish_codec);
      if (AwardTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AwardTime);
      }
      if (BulletType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(BulletType);
      }
      if (Multiple != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Multiple);
      }
      if (GetPeilv != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(GetPeilv);
      }
      if (Death != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Death);
      }
      if (Stage != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Stage);
      }
      if (SubStage != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SubStage);
      }
      if (AwardIndex != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AwardIndex);
      }
      if (CritMultiple != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(CritMultiple);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(IngotMulti);
      }
      if (Ratio != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Ratio);
      }
      if (FrozenTime != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(FrozenTime);
      }
      if (TridentMulti != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(TridentMulti);
      }
      if (ScratchCard != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ScratchCard);
      }
      if (ballInfo_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(BallInfo);
      }
      if (octopusKing_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(OctopusKing);
      }
      if (IsReward != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsReward);
      }
      if (magicInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(MagicInfo);
      }
      if (zeusInfo_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ZeusInfo);
      }
      if (goldenJadeInfo_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(GoldenJadeInfo);
      }
      if (aztecDataInfo_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(AztecDataInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (GetScore != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GetScore);
      }
      if (FishId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FishId);
      }
      torpedoes_.WriteTo(ref output, _repeated_torpedoes_codec);
      if (LuckyRatio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LuckyRatio);
      }
      if (TridentScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TridentScore);
      }
      effectFish_.WriteTo(ref output, _repeated_effectFish_codec);
      if (AwardTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(AwardTime);
      }
      if (BulletType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(BulletType);
      }
      if (Multiple != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Multiple);
      }
      if (GetPeilv != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(GetPeilv);
      }
      if (Death != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Death);
      }
      if (Stage != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Stage);
      }
      if (SubStage != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SubStage);
      }
      if (AwardIndex != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(AwardIndex);
      }
      if (CritMultiple != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(CritMultiple);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(IngotMulti);
      }
      if (Ratio != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(Ratio);
      }
      if (FrozenTime != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(FrozenTime);
      }
      if (TridentMulti != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(TridentMulti);
      }
      if (ScratchCard != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(ScratchCard);
      }
      if (ballInfo_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(BallInfo);
      }
      if (octopusKing_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(OctopusKing);
      }
      if (IsReward != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsReward);
      }
      if (magicInfo_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(MagicInfo);
      }
      if (zeusInfo_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ZeusInfo);
      }
      if (goldenJadeInfo_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(GoldenJadeInfo);
      }
      if (aztecDataInfo_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(AztecDataInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (GetScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetScore);
      }
      if (FishId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
      }
      size += torpedoes_.CalculateSize(_repeated_torpedoes_codec);
      if (LuckyRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LuckyRatio);
      }
      if (TridentScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TridentScore);
      }
      size += effectFish_.CalculateSize(_repeated_effectFish_codec);
      if (AwardTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardTime);
      }
      if (BulletType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletType);
      }
      if (Multiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
      }
      if (GetPeilv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetPeilv);
      }
      if (Death != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Death);
      }
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (SubStage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubStage);
      }
      if (AwardIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardIndex);
      }
      if (CritMultiple != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CritMultiple);
      }
      if (IngotMulti != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IngotMulti);
      }
      if (Ratio != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (FrozenTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FrozenTime);
      }
      if (TridentMulti != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TridentMulti);
      }
      if (ScratchCard != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ScratchCard);
      }
      if (ballInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BallInfo);
      }
      if (octopusKing_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OctopusKing);
      }
      if (IsReward != false) {
        size += 2 + 1;
      }
      if (magicInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MagicInfo);
      }
      if (zeusInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ZeusInfo);
      }
      if (goldenJadeInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GoldenJadeInfo);
      }
      if (aztecDataInfo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AztecDataInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Capturefish other) {
      if (other == null) {
        return;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.GetScore != 0) {
        GetScore = other.GetScore;
      }
      if (other.FishId != 0) {
        FishId = other.FishId;
      }
      torpedoes_.Add(other.torpedoes_);
      if (other.LuckyRatio != 0) {
        LuckyRatio = other.LuckyRatio;
      }
      if (other.TridentScore != 0) {
        TridentScore = other.TridentScore;
      }
      effectFish_.Add(other.effectFish_);
      if (other.AwardTime != 0) {
        AwardTime = other.AwardTime;
      }
      if (other.BulletType != 0) {
        BulletType = other.BulletType;
      }
      if (other.Multiple != 0) {
        Multiple = other.Multiple;
      }
      if (other.GetPeilv != 0) {
        GetPeilv = other.GetPeilv;
      }
      if (other.Death != 0) {
        Death = other.Death;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      if (other.SubStage != 0) {
        SubStage = other.SubStage;
      }
      if (other.AwardIndex != 0) {
        AwardIndex = other.AwardIndex;
      }
      if (other.CritMultiple != 0) {
        CritMultiple = other.CritMultiple;
      }
      if (other.IngotMulti != 0) {
        IngotMulti = other.IngotMulti;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.FrozenTime != 0) {
        FrozenTime = other.FrozenTime;
      }
      if (other.TridentMulti != 0) {
        TridentMulti = other.TridentMulti;
      }
      if (other.ScratchCard != 0) {
        ScratchCard = other.ScratchCard;
      }
      if (other.ballInfo_ != null) {
        if (ballInfo_ == null) {
          BallInfo = new global::BYDLD.DragonBallInfo();
        }
        BallInfo.MergeFrom(other.BallInfo);
      }
      if (other.octopusKing_ != null) {
        if (octopusKing_ == null) {
          OctopusKing = new global::BYDLD.OctopusKingInfo();
        }
        OctopusKing.MergeFrom(other.OctopusKing);
      }
      if (other.IsReward != false) {
        IsReward = other.IsReward;
      }
      if (other.magicInfo_ != null) {
        if (magicInfo_ == null) {
          MagicInfo = new global::BYDLD.MagicInfo();
        }
        MagicInfo.MergeFrom(other.MagicInfo);
      }
      if (other.zeusInfo_ != null) {
        if (zeusInfo_ == null) {
          ZeusInfo = new global::BYDLD.Zeus();
        }
        ZeusInfo.MergeFrom(other.ZeusInfo);
      }
      if (other.goldenJadeInfo_ != null) {
        if (goldenJadeInfo_ == null) {
          GoldenJadeInfo = new global::BYDLD.GoldenJadeInfo();
        }
        GoldenJadeInfo.MergeFrom(other.GoldenJadeInfo);
      }
      if (other.aztecDataInfo_ != null) {
        if (aztecDataInfo_ == null) {
          AztecDataInfo = new global::BYDLD.AztecDataInfo();
        }
        AztecDataInfo.MergeFrom(other.AztecDataInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            GetScore = input.ReadInt32();
            break;
          }
          case 24: {
            FishId = input.ReadInt32();
            break;
          }
          case 34: {
            torpedoes_.AddEntriesFrom(input, _repeated_torpedoes_codec);
            break;
          }
          case 40: {
            LuckyRatio = input.ReadInt32();
            break;
          }
          case 48: {
            TridentScore = input.ReadInt32();
            break;
          }
          case 58: {
            effectFish_.AddEntriesFrom(input, _repeated_effectFish_codec);
            break;
          }
          case 64: {
            AwardTime = input.ReadInt32();
            break;
          }
          case 72: {
            BulletType = input.ReadInt32();
            break;
          }
          case 80: {
            Multiple = input.ReadInt32();
            break;
          }
          case 88: {
            GetPeilv = input.ReadInt32();
            break;
          }
          case 96: {
            Death = input.ReadInt32();
            break;
          }
          case 104: {
            Stage = input.ReadInt32();
            break;
          }
          case 112: {
            SubStage = input.ReadInt32();
            break;
          }
          case 120: {
            AwardIndex = input.ReadInt32();
            break;
          }
          case 128: {
            CritMultiple = input.ReadInt32();
            break;
          }
          case 136: {
            IngotMulti = input.ReadInt32();
            break;
          }
          case 144: {
            Ratio = input.ReadInt32();
            break;
          }
          case 152: {
            FrozenTime = input.ReadInt32();
            break;
          }
          case 160: {
            TridentMulti = input.ReadInt32();
            break;
          }
          case 168: {
            ScratchCard = input.ReadInt32();
            break;
          }
          case 178: {
            if (ballInfo_ == null) {
              BallInfo = new global::BYDLD.DragonBallInfo();
            }
            input.ReadMessage(BallInfo);
            break;
          }
          case 186: {
            if (octopusKing_ == null) {
              OctopusKing = new global::BYDLD.OctopusKingInfo();
            }
            input.ReadMessage(OctopusKing);
            break;
          }
          case 192: {
            IsReward = input.ReadBool();
            break;
          }
          case 202: {
            if (magicInfo_ == null) {
              MagicInfo = new global::BYDLD.MagicInfo();
            }
            input.ReadMessage(MagicInfo);
            break;
          }
          case 210: {
            if (zeusInfo_ == null) {
              ZeusInfo = new global::BYDLD.Zeus();
            }
            input.ReadMessage(ZeusInfo);
            break;
          }
          case 218: {
            if (goldenJadeInfo_ == null) {
              GoldenJadeInfo = new global::BYDLD.GoldenJadeInfo();
            }
            input.ReadMessage(GoldenJadeInfo);
            break;
          }
          case 226: {
            if (aztecDataInfo_ == null) {
              AztecDataInfo = new global::BYDLD.AztecDataInfo();
            }
            input.ReadMessage(AztecDataInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            GetScore = input.ReadInt32();
            break;
          }
          case 24: {
            FishId = input.ReadInt32();
            break;
          }
          case 34: {
            torpedoes_.AddEntriesFrom(ref input, _repeated_torpedoes_codec);
            break;
          }
          case 40: {
            LuckyRatio = input.ReadInt32();
            break;
          }
          case 48: {
            TridentScore = input.ReadInt32();
            break;
          }
          case 58: {
            effectFish_.AddEntriesFrom(ref input, _repeated_effectFish_codec);
            break;
          }
          case 64: {
            AwardTime = input.ReadInt32();
            break;
          }
          case 72: {
            BulletType = input.ReadInt32();
            break;
          }
          case 80: {
            Multiple = input.ReadInt32();
            break;
          }
          case 88: {
            GetPeilv = input.ReadInt32();
            break;
          }
          case 96: {
            Death = input.ReadInt32();
            break;
          }
          case 104: {
            Stage = input.ReadInt32();
            break;
          }
          case 112: {
            SubStage = input.ReadInt32();
            break;
          }
          case 120: {
            AwardIndex = input.ReadInt32();
            break;
          }
          case 128: {
            CritMultiple = input.ReadInt32();
            break;
          }
          case 136: {
            IngotMulti = input.ReadInt32();
            break;
          }
          case 144: {
            Ratio = input.ReadInt32();
            break;
          }
          case 152: {
            FrozenTime = input.ReadInt32();
            break;
          }
          case 160: {
            TridentMulti = input.ReadInt32();
            break;
          }
          case 168: {
            ScratchCard = input.ReadInt32();
            break;
          }
          case 178: {
            if (ballInfo_ == null) {
              BallInfo = new global::BYDLD.DragonBallInfo();
            }
            input.ReadMessage(BallInfo);
            break;
          }
          case 186: {
            if (octopusKing_ == null) {
              OctopusKing = new global::BYDLD.OctopusKingInfo();
            }
            input.ReadMessage(OctopusKing);
            break;
          }
          case 192: {
            IsReward = input.ReadBool();
            break;
          }
          case 202: {
            if (magicInfo_ == null) {
              MagicInfo = new global::BYDLD.MagicInfo();
            }
            input.ReadMessage(MagicInfo);
            break;
          }
          case 210: {
            if (zeusInfo_ == null) {
              ZeusInfo = new global::BYDLD.Zeus();
            }
            input.ReadMessage(ZeusInfo);
            break;
          }
          case 218: {
            if (goldenJadeInfo_ == null) {
              GoldenJadeInfo = new global::BYDLD.GoldenJadeInfo();
            }
            input.ReadMessage(GoldenJadeInfo);
            break;
          }
          case 226: {
            if (aztecDataInfo_ == null) {
              AztecDataInfo = new global::BYDLD.AztecDataInfo();
            }
            input.ReadMessage(AztecDataInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHitMultiFish : pb::IMessage<SCHitMultiFish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHitMultiFish> _parser = new pb::MessageParser<SCHitMultiFish>(() => new SCHitMultiFish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHitMultiFish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHitMultiFish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHitMultiFish(SCHitMultiFish other) : this() {
      chairIdx_ = other.chairIdx_;
      invalid_ = other.invalid_;
      captureInfo_ = other.captureInfo_.Clone();
      score_ = other.score_;
      earn_ = other.earn_;
      specEffect_ = other.specEffect_ != null ? other.specEffect_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHitMultiFish Clone() {
      return new SCHitMultiFish(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "invalid" field.</summary>
    public const int InvalidFieldNumber = 2;
    private int invalid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Invalid {
      get { return invalid_; }
      set {
        invalid_ = value;
      }
    }

    /// <summary>Field number for the "capture_info" field.</summary>
    public const int CaptureInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BYDLD.Capturefish> _repeated_captureInfo_codec
        = pb::FieldCodec.ForMessage(26, global::BYDLD.Capturefish.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Capturefish> captureInfo_ = new pbc::RepeatedField<global::BYDLD.Capturefish>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Capturefish> CaptureInfo {
      get { return captureInfo_; }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "earn" field.</summary>
    public const int EarnFieldNumber = 5;
    private int earn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Earn {
      get { return earn_; }
      set {
        earn_ = value;
      }
    }

    /// <summary>Field number for the "specEffect" field.</summary>
    public const int SpecEffectFieldNumber = 6;
    private global::BYDLD.SpecEffect specEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.SpecEffect SpecEffect {
      get { return specEffect_; }
      set {
        specEffect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHitMultiFish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHitMultiFish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (Invalid != other.Invalid) return false;
      if(!captureInfo_.Equals(other.captureInfo_)) return false;
      if (Score != other.Score) return false;
      if (Earn != other.Earn) return false;
      if (!object.Equals(SpecEffect, other.SpecEffect)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (Invalid != 0) hash ^= Invalid.GetHashCode();
      hash ^= captureInfo_.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (Earn != 0) hash ^= Earn.GetHashCode();
      if (specEffect_ != null) hash ^= SpecEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Invalid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Invalid);
      }
      captureInfo_.WriteTo(output, _repeated_captureInfo_codec);
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      if (Earn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Earn);
      }
      if (specEffect_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SpecEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Invalid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Invalid);
      }
      captureInfo_.WriteTo(ref output, _repeated_captureInfo_codec);
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      if (Earn != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Earn);
      }
      if (specEffect_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SpecEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (Invalid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Invalid);
      }
      size += captureInfo_.CalculateSize(_repeated_captureInfo_codec);
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (Earn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Earn);
      }
      if (specEffect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpecEffect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHitMultiFish other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.Invalid != 0) {
        Invalid = other.Invalid;
      }
      captureInfo_.Add(other.captureInfo_);
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.Earn != 0) {
        Earn = other.Earn;
      }
      if (other.specEffect_ != null) {
        if (specEffect_ == null) {
          SpecEffect = new global::BYDLD.SpecEffect();
        }
        SpecEffect.MergeFrom(other.SpecEffect);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Invalid = input.ReadInt32();
            break;
          }
          case 26: {
            captureInfo_.AddEntriesFrom(input, _repeated_captureInfo_codec);
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 40: {
            Earn = input.ReadInt32();
            break;
          }
          case 50: {
            if (specEffect_ == null) {
              SpecEffect = new global::BYDLD.SpecEffect();
            }
            input.ReadMessage(SpecEffect);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Invalid = input.ReadInt32();
            break;
          }
          case 26: {
            captureInfo_.AddEntriesFrom(ref input, _repeated_captureInfo_codec);
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 40: {
            Earn = input.ReadInt32();
            break;
          }
          case 50: {
            if (specEffect_ == null) {
              SpecEffect = new global::BYDLD.SpecEffect();
            }
            input.ReadMessage(SpecEffect);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSyncMoney : pb::IMessage<CSSyncMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSyncMoney> _parser = new pb::MessageParser<CSSyncMoney>(() => new CSSyncMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSyncMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncMoney(CSSyncMoney other) : this() {
      chairIdx_ = other.chairIdx_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncMoney Clone() {
      return new CSSyncMoney(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSyncMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSyncMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSyncMoney other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncMoney : pb::IMessage<SCSyncMoney>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncMoney> _parser = new pb::MessageParser<SCSyncMoney>(() => new SCSyncMoney());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncMoney> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncMoney() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncMoney(SCSyncMoney other) : this() {
      chairIdx_ = other.chairIdx_;
      score_ = other.score_;
      type_ = other.type_;
      delta_ = other.delta_;
      invalidScore_ = other.invalidScore_;
      freetimeScore_ = other.freetimeScore_;
      ticket_ = other.ticket_;
      ingotScore_ = other.ingotScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncMoney Clone() {
      return new SCSyncMoney(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "delta" field.</summary>
    public const int DeltaFieldNumber = 4;
    private int delta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Delta {
      get { return delta_; }
      set {
        delta_ = value;
      }
    }

    /// <summary>Field number for the "invalid_score" field.</summary>
    public const int InvalidScoreFieldNumber = 5;
    private int invalidScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InvalidScore {
      get { return invalidScore_; }
      set {
        invalidScore_ = value;
      }
    }

    /// <summary>Field number for the "freetime_score" field.</summary>
    public const int FreetimeScoreFieldNumber = 6;
    private int freetimeScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreetimeScore {
      get { return freetimeScore_; }
      set {
        freetimeScore_ = value;
      }
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 7;
    private int ticket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }

    /// <summary>Field number for the "ingot_score" field.</summary>
    public const int IngotScoreFieldNumber = 8;
    private int ingotScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IngotScore {
      get { return ingotScore_; }
      set {
        ingotScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncMoney);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncMoney other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (Score != other.Score) return false;
      if (Type != other.Type) return false;
      if (Delta != other.Delta) return false;
      if (InvalidScore != other.InvalidScore) return false;
      if (FreetimeScore != other.FreetimeScore) return false;
      if (Ticket != other.Ticket) return false;
      if (IngotScore != other.IngotScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Delta != 0) hash ^= Delta.GetHashCode();
      if (InvalidScore != 0) hash ^= InvalidScore.GetHashCode();
      if (FreetimeScore != 0) hash ^= FreetimeScore.GetHashCode();
      if (Ticket != 0) hash ^= Ticket.GetHashCode();
      if (IngotScore != 0) hash ^= IngotScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Score != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Score);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (Delta != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Delta);
      }
      if (InvalidScore != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(InvalidScore);
      }
      if (FreetimeScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FreetimeScore);
      }
      if (Ticket != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ticket);
      }
      if (IngotScore != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(IngotScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Score != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Score);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (Delta != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Delta);
      }
      if (InvalidScore != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(InvalidScore);
      }
      if (FreetimeScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(FreetimeScore);
      }
      if (Ticket != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Ticket);
      }
      if (IngotScore != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(IngotScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Delta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delta);
      }
      if (InvalidScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InvalidScore);
      }
      if (FreetimeScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreetimeScore);
      }
      if (Ticket != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ticket);
      }
      if (IngotScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IngotScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncMoney other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Delta != 0) {
        Delta = other.Delta;
      }
      if (other.InvalidScore != 0) {
        InvalidScore = other.InvalidScore;
      }
      if (other.FreetimeScore != 0) {
        FreetimeScore = other.FreetimeScore;
      }
      if (other.Ticket != 0) {
        Ticket = other.Ticket;
      }
      if (other.IngotScore != 0) {
        IngotScore = other.IngotScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 32: {
            Delta = input.ReadInt32();
            break;
          }
          case 40: {
            InvalidScore = input.ReadInt32();
            break;
          }
          case 48: {
            FreetimeScore = input.ReadInt32();
            break;
          }
          case 56: {
            Ticket = input.ReadInt32();
            break;
          }
          case 64: {
            IngotScore = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Score = input.ReadInt64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
          case 32: {
            Delta = input.ReadInt32();
            break;
          }
          case 40: {
            InvalidScore = input.ReadInt32();
            break;
          }
          case 48: {
            FreetimeScore = input.ReadInt32();
            break;
          }
          case 56: {
            Ticket = input.ReadInt32();
            break;
          }
          case 64: {
            IngotScore = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FishTrace : pb::IMessage<FishTrace>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishTrace> _parser = new pb::MessageParser<FishTrace>(() => new FishTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishTrace(FishTrace other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      waitTime_ = other.waitTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishTrace Clone() {
      return new FishTrace(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "wait_time" field.</summary>
    public const int WaitTimeFieldNumber = 4;
    private float waitTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WaitTime, other.WaitTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (WaitTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WaitTime);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (WaitTime != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(WaitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (WaitTime != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(WaitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (WaitTime != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishTrace other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.WaitTime != 0F) {
        WaitTime = other.WaitTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            WaitTime = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            WaitTime = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCFishTracesList : pb::IMessage<SCFishTracesList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCFishTracesList> _parser = new pb::MessageParser<SCFishTracesList>(() => new SCFishTracesList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFishTracesList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFishTracesList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFishTracesList(SCFishTracesList other) : this() {
      fishTraces_ = other.fishTraces_.Clone();
      accelerateFlag_ = other.accelerateFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFishTracesList Clone() {
      return new SCFishTracesList(this);
    }

    /// <summary>Field number for the "fish_traces" field.</summary>
    public const int FishTracesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.FishTraces> _repeated_fishTraces_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.FishTraces.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.FishTraces> fishTraces_ = new pbc::RepeatedField<global::BYDLD.FishTraces>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.FishTraces> FishTraces {
      get { return fishTraces_; }
    }

    /// <summary>Field number for the "accelerate_flag" field.</summary>
    public const int AccelerateFlagFieldNumber = 2;
    private bool accelerateFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AccelerateFlag {
      get { return accelerateFlag_; }
      set {
        accelerateFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFishTracesList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFishTracesList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fishTraces_.Equals(other.fishTraces_)) return false;
      if (AccelerateFlag != other.AccelerateFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fishTraces_.GetHashCode();
      if (AccelerateFlag != false) hash ^= AccelerateFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fishTraces_.WriteTo(output, _repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        output.WriteRawTag(16);
        output.WriteBool(AccelerateFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fishTraces_.WriteTo(ref output, _repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        output.WriteRawTag(16);
        output.WriteBool(AccelerateFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fishTraces_.CalculateSize(_repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFishTracesList other) {
      if (other == null) {
        return;
      }
      fishTraces_.Add(other.fishTraces_);
      if (other.AccelerateFlag != false) {
        AccelerateFlag = other.AccelerateFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fishTraces_.AddEntriesFrom(input, _repeated_fishTraces_codec);
            break;
          }
          case 16: {
            AccelerateFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fishTraces_.AddEntriesFrom(ref input, _repeated_fishTraces_codec);
            break;
          }
          case 16: {
            AccelerateFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FishTraces : pb::IMessage<FishTraces>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishTraces> _parser = new pb::MessageParser<FishTraces>(() => new FishTraces());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishTraces> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishTraces() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishTraces(FishTraces other) : this() {
      fishUid_ = other.fishUid_;
      fishId_ = other.fishId_;
      liveTime_ = other.liveTime_;
      speed_ = other.speed_;
      routeType_ = other.routeType_;
      fishTrace_ = other.fishTrace_.Clone();
      fishCurPoint_ = other.fishCurPoint_;
      alreadyMove_ = other.alreadyMove_;
      x_ = other.x_;
      y_ = other.y_;
      time_ = other.time_;
      stage_ = other.stage_;
      subStage_ = other.subStage_;
      lifespan_ = other.lifespan_;
      frozenTime_ = other.frozenTime_;
      fishGender_ = other.fishGender_;
      smallFishList_ = other.smallFishList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishTraces Clone() {
      return new FishTraces(this);
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 1;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "fish_id" field.</summary>
    public const int FishIdFieldNumber = 2;
    private int fishId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishId {
      get { return fishId_; }
      set {
        fishId_ = value;
      }
    }

    /// <summary>Field number for the "live_time" field.</summary>
    public const int LiveTimeFieldNumber = 3;
    private int liveTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LiveTime {
      get { return liveTime_; }
      set {
        liveTime_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 4;
    private float speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "route_type" field.</summary>
    public const int RouteTypeFieldNumber = 5;
    private int routeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RouteType {
      get { return routeType_; }
      set {
        routeType_ = value;
      }
    }

    /// <summary>Field number for the "fish_trace" field.</summary>
    public const int FishTraceFieldNumber = 6;
    private static readonly pb::FieldCodec<global::BYDLD.FishTrace> _repeated_fishTrace_codec
        = pb::FieldCodec.ForMessage(50, global::BYDLD.FishTrace.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.FishTrace> fishTrace_ = new pbc::RepeatedField<global::BYDLD.FishTrace>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.FishTrace> FishTrace {
      get { return fishTrace_; }
    }

    /// <summary>Field number for the "fish_cur_point" field.</summary>
    public const int FishCurPointFieldNumber = 7;
    private int fishCurPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishCurPoint {
      get { return fishCurPoint_; }
      set {
        fishCurPoint_ = value;
      }
    }

    /// <summary>Field number for the "already_move" field.</summary>
    public const int AlreadyMoveFieldNumber = 8;
    private bool alreadyMove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AlreadyMove {
      get { return alreadyMove_; }
      set {
        alreadyMove_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 9;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 10;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 11;
    private float time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 12;
    private int stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "sub_stage" field.</summary>
    public const int SubStageFieldNumber = 13;
    private int subStage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubStage {
      get { return subStage_; }
      set {
        subStage_ = value;
      }
    }

    /// <summary>Field number for the "lifespan" field.</summary>
    public const int LifespanFieldNumber = 14;
    private int lifespan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lifespan {
      get { return lifespan_; }
      set {
        lifespan_ = value;
      }
    }

    /// <summary>Field number for the "frozen_time" field.</summary>
    public const int FrozenTimeFieldNumber = 15;
    private int frozenTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrozenTime {
      get { return frozenTime_; }
      set {
        frozenTime_ = value;
      }
    }

    /// <summary>Field number for the "fish_gender" field.</summary>
    public const int FishGenderFieldNumber = 16;
    private int fishGender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishGender {
      get { return fishGender_; }
      set {
        fishGender_ = value;
      }
    }

    /// <summary>Field number for the "small_fish_list" field.</summary>
    public const int SmallFishListFieldNumber = 17;
    private static readonly pb::FieldCodec<global::BYDLD.FishTraces> _repeated_smallFishList_codec
        = pb::FieldCodec.ForMessage(138, global::BYDLD.FishTraces.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.FishTraces> smallFishList_ = new pbc::RepeatedField<global::BYDLD.FishTraces>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.FishTraces> SmallFishList {
      get { return smallFishList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishTraces);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishTraces other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishUid != other.FishUid) return false;
      if (FishId != other.FishId) return false;
      if (LiveTime != other.LiveTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
      if (RouteType != other.RouteType) return false;
      if(!fishTrace_.Equals(other.fishTrace_)) return false;
      if (FishCurPoint != other.FishCurPoint) return false;
      if (AlreadyMove != other.AlreadyMove) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Time, other.Time)) return false;
      if (Stage != other.Stage) return false;
      if (SubStage != other.SubStage) return false;
      if (Lifespan != other.Lifespan) return false;
      if (FrozenTime != other.FrozenTime) return false;
      if (FishGender != other.FishGender) return false;
      if(!smallFishList_.Equals(other.smallFishList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (FishId != 0) hash ^= FishId.GetHashCode();
      if (LiveTime != 0) hash ^= LiveTime.GetHashCode();
      if (Speed != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
      if (RouteType != 0) hash ^= RouteType.GetHashCode();
      hash ^= fishTrace_.GetHashCode();
      if (FishCurPoint != 0) hash ^= FishCurPoint.GetHashCode();
      if (AlreadyMove != false) hash ^= AlreadyMove.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Time != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Time);
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (SubStage != 0) hash ^= SubStage.GetHashCode();
      if (Lifespan != 0) hash ^= Lifespan.GetHashCode();
      if (FrozenTime != 0) hash ^= FrozenTime.GetHashCode();
      if (FishGender != 0) hash ^= FishGender.GetHashCode();
      hash ^= smallFishList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (FishId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishId);
      }
      if (LiveTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LiveTime);
      }
      if (Speed != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Speed);
      }
      if (RouteType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RouteType);
      }
      fishTrace_.WriteTo(output, _repeated_fishTrace_codec);
      if (FishCurPoint != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FishCurPoint);
      }
      if (AlreadyMove != false) {
        output.WriteRawTag(64);
        output.WriteBool(AlreadyMove);
      }
      if (X != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(Y);
      }
      if (Time != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Time);
      }
      if (Stage != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Stage);
      }
      if (SubStage != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SubStage);
      }
      if (Lifespan != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Lifespan);
      }
      if (FrozenTime != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(FrozenTime);
      }
      if (FishGender != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(FishGender);
      }
      smallFishList_.WriteTo(output, _repeated_smallFishList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (FishId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishId);
      }
      if (LiveTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LiveTime);
      }
      if (Speed != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Speed);
      }
      if (RouteType != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RouteType);
      }
      fishTrace_.WriteTo(ref output, _repeated_fishTrace_codec);
      if (FishCurPoint != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FishCurPoint);
      }
      if (AlreadyMove != false) {
        output.WriteRawTag(64);
        output.WriteBool(AlreadyMove);
      }
      if (X != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(Y);
      }
      if (Time != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Time);
      }
      if (Stage != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Stage);
      }
      if (SubStage != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(SubStage);
      }
      if (Lifespan != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Lifespan);
      }
      if (FrozenTime != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(FrozenTime);
      }
      if (FishGender != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(FishGender);
      }
      smallFishList_.WriteTo(ref output, _repeated_smallFishList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (FishId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
      }
      if (LiveTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LiveTime);
      }
      if (Speed != 0F) {
        size += 1 + 4;
      }
      if (RouteType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RouteType);
      }
      size += fishTrace_.CalculateSize(_repeated_fishTrace_codec);
      if (FishCurPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishCurPoint);
      }
      if (AlreadyMove != false) {
        size += 1 + 1;
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Time != 0F) {
        size += 1 + 4;
      }
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (SubStage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubStage);
      }
      if (Lifespan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lifespan);
      }
      if (FrozenTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrozenTime);
      }
      if (FishGender != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FishGender);
      }
      size += smallFishList_.CalculateSize(_repeated_smallFishList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishTraces other) {
      if (other == null) {
        return;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.FishId != 0) {
        FishId = other.FishId;
      }
      if (other.LiveTime != 0) {
        LiveTime = other.LiveTime;
      }
      if (other.Speed != 0F) {
        Speed = other.Speed;
      }
      if (other.RouteType != 0) {
        RouteType = other.RouteType;
      }
      fishTrace_.Add(other.fishTrace_);
      if (other.FishCurPoint != 0) {
        FishCurPoint = other.FishCurPoint;
      }
      if (other.AlreadyMove != false) {
        AlreadyMove = other.AlreadyMove;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Time != 0F) {
        Time = other.Time;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      if (other.SubStage != 0) {
        SubStage = other.SubStage;
      }
      if (other.Lifespan != 0) {
        Lifespan = other.Lifespan;
      }
      if (other.FrozenTime != 0) {
        FrozenTime = other.FrozenTime;
      }
      if (other.FishGender != 0) {
        FishGender = other.FishGender;
      }
      smallFishList_.Add(other.smallFishList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            FishId = input.ReadInt32();
            break;
          }
          case 24: {
            LiveTime = input.ReadInt32();
            break;
          }
          case 37: {
            Speed = input.ReadFloat();
            break;
          }
          case 40: {
            RouteType = input.ReadInt32();
            break;
          }
          case 50: {
            fishTrace_.AddEntriesFrom(input, _repeated_fishTrace_codec);
            break;
          }
          case 56: {
            FishCurPoint = input.ReadInt32();
            break;
          }
          case 64: {
            AlreadyMove = input.ReadBool();
            break;
          }
          case 77: {
            X = input.ReadFloat();
            break;
          }
          case 85: {
            Y = input.ReadFloat();
            break;
          }
          case 93: {
            Time = input.ReadFloat();
            break;
          }
          case 96: {
            Stage = input.ReadInt32();
            break;
          }
          case 104: {
            SubStage = input.ReadInt32();
            break;
          }
          case 112: {
            Lifespan = input.ReadInt32();
            break;
          }
          case 120: {
            FrozenTime = input.ReadInt32();
            break;
          }
          case 128: {
            FishGender = input.ReadInt32();
            break;
          }
          case 138: {
            smallFishList_.AddEntriesFrom(input, _repeated_smallFishList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            FishId = input.ReadInt32();
            break;
          }
          case 24: {
            LiveTime = input.ReadInt32();
            break;
          }
          case 37: {
            Speed = input.ReadFloat();
            break;
          }
          case 40: {
            RouteType = input.ReadInt32();
            break;
          }
          case 50: {
            fishTrace_.AddEntriesFrom(ref input, _repeated_fishTrace_codec);
            break;
          }
          case 56: {
            FishCurPoint = input.ReadInt32();
            break;
          }
          case 64: {
            AlreadyMove = input.ReadBool();
            break;
          }
          case 77: {
            X = input.ReadFloat();
            break;
          }
          case 85: {
            Y = input.ReadFloat();
            break;
          }
          case 93: {
            Time = input.ReadFloat();
            break;
          }
          case 96: {
            Stage = input.ReadInt32();
            break;
          }
          case 104: {
            SubStage = input.ReadInt32();
            break;
          }
          case 112: {
            Lifespan = input.ReadInt32();
            break;
          }
          case 120: {
            FrozenTime = input.ReadInt32();
            break;
          }
          case 128: {
            FishGender = input.ReadInt32();
            break;
          }
          case 138: {
            smallFishList_.AddEntriesFrom(ref input, _repeated_smallFishList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSyncFishReq : pb::IMessage<CSSyncFishReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSyncFishReq> _parser = new pb::MessageParser<CSSyncFishReq>(() => new CSSyncFishReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSyncFishReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncFishReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncFishReq(CSSyncFishReq other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncFishReq Clone() {
      return new CSSyncFishReq(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSyncFishReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSyncFishReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSyncFishReq other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncFishReq : pb::IMessage<SCSyncFishReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncFishReq> _parser = new pb::MessageParser<SCSyncFishReq>(() => new SCSyncFishReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncFishReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFishReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFishReq(SCSyncFishReq other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFishReq Clone() {
      return new SCSyncFishReq(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncFishReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncFishReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncFishReq other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSyncFishRsp : pb::IMessage<CSSyncFishRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSyncFishRsp> _parser = new pb::MessageParser<CSSyncFishRsp>(() => new CSSyncFishRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSyncFishRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncFishRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncFishRsp(CSSyncFishRsp other) : this() {
      fishTraces_ = other.fishTraces_.Clone();
      accelerateFlag_ = other.accelerateFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncFishRsp Clone() {
      return new CSSyncFishRsp(this);
    }

    /// <summary>Field number for the "fish_traces" field.</summary>
    public const int FishTracesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.FishTraces> _repeated_fishTraces_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.FishTraces.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.FishTraces> fishTraces_ = new pbc::RepeatedField<global::BYDLD.FishTraces>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.FishTraces> FishTraces {
      get { return fishTraces_; }
    }

    /// <summary>Field number for the "accelerate_flag" field.</summary>
    public const int AccelerateFlagFieldNumber = 2;
    private bool accelerateFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AccelerateFlag {
      get { return accelerateFlag_; }
      set {
        accelerateFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSyncFishRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSyncFishRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fishTraces_.Equals(other.fishTraces_)) return false;
      if (AccelerateFlag != other.AccelerateFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fishTraces_.GetHashCode();
      if (AccelerateFlag != false) hash ^= AccelerateFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fishTraces_.WriteTo(output, _repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        output.WriteRawTag(16);
        output.WriteBool(AccelerateFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fishTraces_.WriteTo(ref output, _repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        output.WriteRawTag(16);
        output.WriteBool(AccelerateFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fishTraces_.CalculateSize(_repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSyncFishRsp other) {
      if (other == null) {
        return;
      }
      fishTraces_.Add(other.fishTraces_);
      if (other.AccelerateFlag != false) {
        AccelerateFlag = other.AccelerateFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fishTraces_.AddEntriesFrom(input, _repeated_fishTraces_codec);
            break;
          }
          case 16: {
            AccelerateFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fishTraces_.AddEntriesFrom(ref input, _repeated_fishTraces_codec);
            break;
          }
          case 16: {
            AccelerateFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncFishRsp : pb::IMessage<SCSyncFishRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncFishRsp> _parser = new pb::MessageParser<SCSyncFishRsp>(() => new SCSyncFishRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncFishRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFishRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFishRsp(SCSyncFishRsp other) : this() {
      fishTraces_ = other.fishTraces_.Clone();
      accelerateFlag_ = other.accelerateFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFishRsp Clone() {
      return new SCSyncFishRsp(this);
    }

    /// <summary>Field number for the "fish_traces" field.</summary>
    public const int FishTracesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.FishTraces> _repeated_fishTraces_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.FishTraces.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.FishTraces> fishTraces_ = new pbc::RepeatedField<global::BYDLD.FishTraces>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.FishTraces> FishTraces {
      get { return fishTraces_; }
    }

    /// <summary>Field number for the "accelerate_flag" field.</summary>
    public const int AccelerateFlagFieldNumber = 2;
    private bool accelerateFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AccelerateFlag {
      get { return accelerateFlag_; }
      set {
        accelerateFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncFishRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncFishRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fishTraces_.Equals(other.fishTraces_)) return false;
      if (AccelerateFlag != other.AccelerateFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fishTraces_.GetHashCode();
      if (AccelerateFlag != false) hash ^= AccelerateFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fishTraces_.WriteTo(output, _repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        output.WriteRawTag(16);
        output.WriteBool(AccelerateFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fishTraces_.WriteTo(ref output, _repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        output.WriteRawTag(16);
        output.WriteBool(AccelerateFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fishTraces_.CalculateSize(_repeated_fishTraces_codec);
      if (AccelerateFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncFishRsp other) {
      if (other == null) {
        return;
      }
      fishTraces_.Add(other.fishTraces_);
      if (other.AccelerateFlag != false) {
        AccelerateFlag = other.AccelerateFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fishTraces_.AddEntriesFrom(input, _repeated_fishTraces_codec);
            break;
          }
          case 16: {
            AccelerateFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fishTraces_.AddEntriesFrom(ref input, _repeated_fishTraces_codec);
            break;
          }
          case 16: {
            AccelerateFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCChangeScene : pb::IMessage<SCChangeScene>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCChangeScene> _parser = new pb::MessageParser<SCChangeScene>(() => new SCChangeScene());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChangeScene> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeScene() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeScene(SCChangeScene other) : this() {
      sceneIndex_ = other.sceneIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeScene Clone() {
      return new SCChangeScene(this);
    }

    /// <summary>Field number for the "scene_index" field.</summary>
    public const int SceneIndexFieldNumber = 1;
    private int sceneIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SceneIndex {
      get { return sceneIndex_; }
      set {
        sceneIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChangeScene);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChangeScene other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneIndex != other.SceneIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneIndex != 0) hash ^= SceneIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SceneIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SceneIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SceneIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SceneIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChangeScene other) {
      if (other == null) {
        return;
      }
      if (other.SceneIndex != 0) {
        SceneIndex = other.SceneIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SceneIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSFishOutsideScreen : pb::IMessage<CSFishOutsideScreen>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSFishOutsideScreen> _parser = new pb::MessageParser<CSFishOutsideScreen>(() => new CSFishOutsideScreen());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSFishOutsideScreen> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFishOutsideScreen() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFishOutsideScreen(CSFishOutsideScreen other) : this() {
      fishUid_ = other.fishUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFishOutsideScreen Clone() {
      return new CSFishOutsideScreen(this);
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 1;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSFishOutsideScreen);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSFishOutsideScreen other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishUid != other.FishUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSFishOutsideScreen other) {
      if (other == null) {
        return;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLockFish : pb::IMessage<CSLockFish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLockFish> _parser = new pb::MessageParser<CSLockFish>(() => new CSLockFish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLockFish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLockFish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLockFish(CSLockFish other) : this() {
      chairIdx_ = other.chairIdx_;
      fishUid_ = other.fishUid_;
      isOpen_ = other.isOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLockFish Clone() {
      return new CSLockFish(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 2;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "is_open" field.</summary>
    public const int IsOpenFieldNumber = 3;
    private bool isOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLockFish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLockFish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (FishUid != other.FishUid) return false;
      if (IsOpen != other.IsOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (IsOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (IsOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLockFish other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLockFish : pb::IMessage<SCLockFish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLockFish> _parser = new pb::MessageParser<SCLockFish>(() => new SCLockFish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLockFish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLockFish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLockFish(SCLockFish other) : this() {
      chairIdx_ = other.chairIdx_;
      fishUid_ = other.fishUid_;
      isOpen_ = other.isOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLockFish Clone() {
      return new SCLockFish(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 2;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "is_open" field.</summary>
    public const int IsOpenFieldNumber = 3;
    private bool isOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLockFish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLockFish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (FishUid != other.FishUid) return false;
      if (IsOpen != other.IsOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (IsOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (IsOpen != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLockFish other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            IsOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSetSkill : pb::IMessage<CSSetSkill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSetSkill> _parser = new pb::MessageParser<CSSetSkill>(() => new CSSetSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSetSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetSkill(CSSetSkill other) : this() {
      chairIdx_ = other.chairIdx_;
      doubleFlag_ = other.doubleFlag_;
      throughFlag_ = other.throughFlag_;
      autoFlag_ = other.autoFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetSkill Clone() {
      return new CSSetSkill(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "double_flag" field.</summary>
    public const int DoubleFlagFieldNumber = 2;
    private int doubleFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DoubleFlag {
      get { return doubleFlag_; }
      set {
        doubleFlag_ = value;
      }
    }

    /// <summary>Field number for the "through_flag" field.</summary>
    public const int ThroughFlagFieldNumber = 3;
    private int throughFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThroughFlag {
      get { return throughFlag_; }
      set {
        throughFlag_ = value;
      }
    }

    /// <summary>Field number for the "auto_flag" field.</summary>
    public const int AutoFlagFieldNumber = 4;
    private bool autoFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoFlag {
      get { return autoFlag_; }
      set {
        autoFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSetSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSetSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (DoubleFlag != other.DoubleFlag) return false;
      if (ThroughFlag != other.ThroughFlag) return false;
      if (AutoFlag != other.AutoFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (DoubleFlag != 0) hash ^= DoubleFlag.GetHashCode();
      if (ThroughFlag != 0) hash ^= ThroughFlag.GetHashCode();
      if (AutoFlag != false) hash ^= AutoFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (DoubleFlag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DoubleFlag);
      }
      if (ThroughFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ThroughFlag);
      }
      if (AutoFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(AutoFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (DoubleFlag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DoubleFlag);
      }
      if (ThroughFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ThroughFlag);
      }
      if (AutoFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(AutoFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (DoubleFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DoubleFlag);
      }
      if (ThroughFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThroughFlag);
      }
      if (AutoFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSetSkill other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.DoubleFlag != 0) {
        DoubleFlag = other.DoubleFlag;
      }
      if (other.ThroughFlag != 0) {
        ThroughFlag = other.ThroughFlag;
      }
      if (other.AutoFlag != false) {
        AutoFlag = other.AutoFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            DoubleFlag = input.ReadInt32();
            break;
          }
          case 24: {
            ThroughFlag = input.ReadInt32();
            break;
          }
          case 32: {
            AutoFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            DoubleFlag = input.ReadInt32();
            break;
          }
          case 24: {
            ThroughFlag = input.ReadInt32();
            break;
          }
          case 32: {
            AutoFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSetSkill : pb::IMessage<SCSetSkill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSetSkill> _parser = new pb::MessageParser<SCSetSkill>(() => new SCSetSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSetSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetSkill(SCSetSkill other) : this() {
      chairIdx_ = other.chairIdx_;
      doubleFlag_ = other.doubleFlag_;
      throughFlag_ = other.throughFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetSkill Clone() {
      return new SCSetSkill(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "double_flag" field.</summary>
    public const int DoubleFlagFieldNumber = 2;
    private int doubleFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DoubleFlag {
      get { return doubleFlag_; }
      set {
        doubleFlag_ = value;
      }
    }

    /// <summary>Field number for the "through_flag" field.</summary>
    public const int ThroughFlagFieldNumber = 3;
    private int throughFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThroughFlag {
      get { return throughFlag_; }
      set {
        throughFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSetSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSetSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (DoubleFlag != other.DoubleFlag) return false;
      if (ThroughFlag != other.ThroughFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (DoubleFlag != 0) hash ^= DoubleFlag.GetHashCode();
      if (ThroughFlag != 0) hash ^= ThroughFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (DoubleFlag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DoubleFlag);
      }
      if (ThroughFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ThroughFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (DoubleFlag != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DoubleFlag);
      }
      if (ThroughFlag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ThroughFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (DoubleFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DoubleFlag);
      }
      if (ThroughFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThroughFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSetSkill other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.DoubleFlag != 0) {
        DoubleFlag = other.DoubleFlag;
      }
      if (other.ThroughFlag != 0) {
        ThroughFlag = other.ThroughFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            DoubleFlag = input.ReadInt32();
            break;
          }
          case 24: {
            ThroughFlag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            DoubleFlag = input.ReadInt32();
            break;
          }
          case 24: {
            ThroughFlag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserTimeoutKick : pb::IMessage<SCUserTimeoutKick>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserTimeoutKick> _parser = new pb::MessageParser<SCUserTimeoutKick>(() => new SCUserTimeoutKick());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserTimeoutKick> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserTimeoutKick() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserTimeoutKick(SCUserTimeoutKick other) : this() {
      countSec_ = other.countSec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserTimeoutKick Clone() {
      return new SCUserTimeoutKick(this);
    }

    /// <summary>Field number for the "count_sec" field.</summary>
    public const int CountSecFieldNumber = 1;
    private int countSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CountSec {
      get { return countSec_; }
      set {
        countSec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserTimeoutKick);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserTimeoutKick other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CountSec != other.CountSec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CountSec != 0) hash ^= CountSec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CountSec != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CountSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CountSec != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CountSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CountSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountSec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserTimeoutKick other) {
      if (other == null) {
        return;
      }
      if (other.CountSec != 0) {
        CountSec = other.CountSec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CountSec = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CountSec = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserRunBackground : pb::IMessage<CSUserRunBackground>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserRunBackground> _parser = new pb::MessageParser<CSUserRunBackground>(() => new CSUserRunBackground());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserRunBackground> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserRunBackground() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserRunBackground(CSUserRunBackground other) : this() {
      chairIdx_ = other.chairIdx_;
      background_ = other.background_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserRunBackground Clone() {
      return new CSUserRunBackground(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "background" field.</summary>
    public const int BackgroundFieldNumber = 2;
    private bool background_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Background {
      get { return background_; }
      set {
        background_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserRunBackground);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserRunBackground other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (Background != other.Background) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (Background != false) hash ^= Background.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Background != false) {
        output.WriteRawTag(16);
        output.WriteBool(Background);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Background != false) {
        output.WriteRawTag(16);
        output.WriteBool(Background);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (Background != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserRunBackground other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.Background != false) {
        Background = other.Background;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Background = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Background = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserRunBackground : pb::IMessage<SCUserRunBackground>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserRunBackground> _parser = new pb::MessageParser<SCUserRunBackground>(() => new SCUserRunBackground());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserRunBackground> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserRunBackground() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserRunBackground(SCUserRunBackground other) : this() {
      stationBaseList_ = other.stationBaseList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserRunBackground Clone() {
      return new SCUserRunBackground(this);
    }

    /// <summary>Field number for the "station_base_list" field.</summary>
    public const int StationBaseListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.StationBase> _repeated_stationBaseList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.StationBase.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.StationBase> stationBaseList_ = new pbc::RepeatedField<global::BYDLD.StationBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.StationBase> StationBaseList {
      get { return stationBaseList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserRunBackground);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserRunBackground other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stationBaseList_.Equals(other.stationBaseList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stationBaseList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      stationBaseList_.WriteTo(output, _repeated_stationBaseList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      stationBaseList_.WriteTo(ref output, _repeated_stationBaseList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stationBaseList_.CalculateSize(_repeated_stationBaseList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserRunBackground other) {
      if (other == null) {
        return;
      }
      stationBaseList_.Add(other.stationBaseList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stationBaseList_.AddEntriesFrom(input, _repeated_stationBaseList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            stationBaseList_.AddEntriesFrom(ref input, _repeated_stationBaseList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUpdateHallProp : pb::IMessage<CSUpdateHallProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUpdateHallProp> _parser = new pb::MessageParser<CSUpdateHallProp>(() => new CSUpdateHallProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUpdateHallProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUpdateHallProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUpdateHallProp(CSUpdateHallProp other) : this() {
      chairIdx_ = other.chairIdx_;
      configId_ = other.configId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUpdateHallProp Clone() {
      return new CSUpdateHallProp(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "configId" field.</summary>
    public const int ConfigIdFieldNumber = 2;
    private int configId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigId {
      get { return configId_; }
      set {
        configId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUpdateHallProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUpdateHallProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (ConfigId != other.ConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (ConfigId != 0) hash ^= ConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (ConfigId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (ConfigId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (ConfigId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUpdateHallProp other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.ConfigId != 0) {
        ConfigId = other.ConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            ConfigId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            ConfigId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHeartBeat : pb::IMessage<CSHeartBeat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHeartBeat> _parser = new pb::MessageParser<CSHeartBeat>(() => new CSHeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHeartBeat(CSHeartBeat other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHeartBeat Clone() {
      return new CSHeartBeat(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHeartBeat : pb::IMessage<SCHeartBeat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHeartBeat> _parser = new pb::MessageParser<SCHeartBeat>(() => new SCHeartBeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHeartBeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHeartBeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHeartBeat(SCHeartBeat other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHeartBeat Clone() {
      return new SCHeartBeat(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHeartBeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHeartBeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHeartBeat other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCComTask : pb::IMessage<SCComTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCComTask> _parser = new pb::MessageParser<SCComTask>(() => new SCComTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCComTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCComTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCComTask(SCComTask other) : this() {
      gunRatio_ = other.gunRatio_;
      gunLevel_ = other.gunLevel_;
      award_ = other.award_;
      ticket_ = other.ticket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCComTask Clone() {
      return new SCComTask(this);
    }

    /// <summary>Field number for the "gun_ratio" field.</summary>
    public const int GunRatioFieldNumber = 1;
    private int gunRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunRatio {
      get { return gunRatio_; }
      set {
        gunRatio_ = value;
      }
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 2;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 3;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 4;
    private int ticket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCComTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCComTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunRatio != other.GunRatio) return false;
      if (GunLevel != other.GunLevel) return false;
      if (Award != other.Award) return false;
      if (Ticket != other.Ticket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GunRatio != 0) hash ^= GunRatio.GetHashCode();
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (Ticket != 0) hash ^= Ticket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (Award != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Award);
      }
      if (Ticket != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (Award != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Award);
      }
      if (Ticket != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GunRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunRatio);
      }
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (Ticket != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ticket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCComTask other) {
      if (other == null) {
        return;
      }
      if (other.GunRatio != 0) {
        GunRatio = other.GunRatio;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.Ticket != 0) {
        Ticket = other.Ticket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            Award = input.ReadInt32();
            break;
          }
          case 32: {
            Ticket = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            Award = input.ReadInt32();
            break;
          }
          case 32: {
            Ticket = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSTaskInfo : pb::IMessage<CSTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSTaskInfo> _parser = new pb::MessageParser<CSTaskInfo>(() => new CSTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTaskInfo(CSTaskInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSTaskInfo Clone() {
      return new CSTaskInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSTaskInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCTaskInfo : pb::IMessage<SCTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTaskInfo> _parser = new pb::MessageParser<SCTaskInfo>(() => new SCTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTaskInfo(SCTaskInfo other) : this() {
      gunRatio_ = other.gunRatio_;
      gunLevel_ = other.gunLevel_;
      curNum_ = other.curNum_;
      totalNum_ = other.totalNum_;
      vipLevel_ = other.vipLevel_;
      isUnlock_ = other.isUnlock_;
      award_ = other.award_;
      isVipUnlock_ = other.isVipUnlock_;
      ticket_ = other.ticket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTaskInfo Clone() {
      return new SCTaskInfo(this);
    }

    /// <summary>Field number for the "gun_ratio" field.</summary>
    public const int GunRatioFieldNumber = 1;
    private int gunRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunRatio {
      get { return gunRatio_; }
      set {
        gunRatio_ = value;
      }
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 2;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    /// <summary>Field number for the "cur_num" field.</summary>
    public const int CurNumFieldNumber = 3;
    private int curNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurNum {
      get { return curNum_; }
      set {
        curNum_ = value;
      }
    }

    /// <summary>Field number for the "total_num" field.</summary>
    public const int TotalNumFieldNumber = 4;
    private int totalNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalNum {
      get { return totalNum_; }
      set {
        totalNum_ = value;
      }
    }

    /// <summary>Field number for the "vip_level" field.</summary>
    public const int VipLevelFieldNumber = 5;
    private int vipLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "is_unlock" field.</summary>
    public const int IsUnlockFieldNumber = 6;
    private int isUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsUnlock {
      get { return isUnlock_; }
      set {
        isUnlock_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 7;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "is_vip_unlock" field.</summary>
    public const int IsVipUnlockFieldNumber = 8;
    private bool isVipUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVipUnlock {
      get { return isVipUnlock_; }
      set {
        isVipUnlock_ = value;
      }
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 9;
    private int ticket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunRatio != other.GunRatio) return false;
      if (GunLevel != other.GunLevel) return false;
      if (CurNum != other.CurNum) return false;
      if (TotalNum != other.TotalNum) return false;
      if (VipLevel != other.VipLevel) return false;
      if (IsUnlock != other.IsUnlock) return false;
      if (Award != other.Award) return false;
      if (IsVipUnlock != other.IsVipUnlock) return false;
      if (Ticket != other.Ticket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GunRatio != 0) hash ^= GunRatio.GetHashCode();
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (CurNum != 0) hash ^= CurNum.GetHashCode();
      if (TotalNum != 0) hash ^= TotalNum.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (IsUnlock != 0) hash ^= IsUnlock.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (IsVipUnlock != false) hash ^= IsVipUnlock.GetHashCode();
      if (Ticket != 0) hash ^= Ticket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (CurNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurNum);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalNum);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(VipLevel);
      }
      if (IsUnlock != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(IsUnlock);
      }
      if (Award != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Award);
      }
      if (IsVipUnlock != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsVipUnlock);
      }
      if (Ticket != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GunRatio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunRatio);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (CurNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurNum);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalNum);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(VipLevel);
      }
      if (IsUnlock != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(IsUnlock);
      }
      if (Award != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Award);
      }
      if (IsVipUnlock != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsVipUnlock);
      }
      if (Ticket != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GunRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunRatio);
      }
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (CurNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurNum);
      }
      if (TotalNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (IsUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsUnlock);
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (IsVipUnlock != false) {
        size += 1 + 1;
      }
      if (Ticket != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ticket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.GunRatio != 0) {
        GunRatio = other.GunRatio;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      if (other.CurNum != 0) {
        CurNum = other.CurNum;
      }
      if (other.TotalNum != 0) {
        TotalNum = other.TotalNum;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.IsUnlock != 0) {
        IsUnlock = other.IsUnlock;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.IsVipUnlock != false) {
        IsVipUnlock = other.IsVipUnlock;
      }
      if (other.Ticket != 0) {
        Ticket = other.Ticket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            CurNum = input.ReadInt32();
            break;
          }
          case 32: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 40: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 48: {
            IsUnlock = input.ReadInt32();
            break;
          }
          case 56: {
            Award = input.ReadInt32();
            break;
          }
          case 64: {
            IsVipUnlock = input.ReadBool();
            break;
          }
          case 72: {
            Ticket = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunRatio = input.ReadInt32();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
          case 24: {
            CurNum = input.ReadInt32();
            break;
          }
          case 32: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 40: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 48: {
            IsUnlock = input.ReadInt32();
            break;
          }
          case 56: {
            Award = input.ReadInt32();
            break;
          }
          case 64: {
            IsVipUnlock = input.ReadBool();
            break;
          }
          case 72: {
            Ticket = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserScoreRecord : pb::IMessage<UserScoreRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserScoreRecord> _parser = new pb::MessageParser<UserScoreRecord>(() => new UserScoreRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserScoreRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserScoreRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserScoreRecord(UserScoreRecord other) : this() {
      type_ = other.type_;
      content_ = other.content_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserScoreRecord Clone() {
      return new UserScoreRecord(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private string score_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Score {
      get { return score_; }
      set {
        score_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserScoreRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserScoreRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Content != other.Content) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Score.Length != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (Score.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (Score.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Score.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserScoreRecord other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Score.Length != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 26: {
            Score = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 26: {
            Score = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSFreeTimeEnd : pb::IMessage<CSFreeTimeEnd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSFreeTimeEnd> _parser = new pb::MessageParser<CSFreeTimeEnd>(() => new CSFreeTimeEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSFreeTimeEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFreeTimeEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFreeTimeEnd(CSFreeTimeEnd other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFreeTimeEnd Clone() {
      return new CSFreeTimeEnd(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSFreeTimeEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSFreeTimeEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSFreeTimeEnd other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncFreeTimes : pb::IMessage<SCSyncFreeTimes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncFreeTimes> _parser = new pb::MessageParser<SCSyncFreeTimes>(() => new SCSyncFreeTimes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncFreeTimes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFreeTimes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFreeTimes(SCSyncFreeTimes other) : this() {
      times_ = other.times_;
      level_ = other.level_;
      chairIdx_ = other.chairIdx_;
      type_ = other.type_;
      exchange_ = other.exchange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFreeTimes Clone() {
      return new SCSyncFreeTimes(this);
    }

    /// <summary>Field number for the "times" field.</summary>
    public const int TimesFieldNumber = 1;
    private int times_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 3;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "exchange" field.</summary>
    public const int ExchangeFieldNumber = 5;
    private int exchange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exchange {
      get { return exchange_; }
      set {
        exchange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncFreeTimes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncFreeTimes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Times != other.Times) return false;
      if (Level != other.Level) return false;
      if (ChairIdx != other.ChairIdx) return false;
      if (Type != other.Type) return false;
      if (Exchange != other.Exchange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Times != 0) hash ^= Times.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Exchange != 0) hash ^= Exchange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Times != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Times);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairIdx);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (Exchange != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Exchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Times != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Times);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairIdx);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (Exchange != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Exchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Times != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Exchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exchange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncFreeTimes other) {
      if (other == null) {
        return;
      }
      if (other.Times != 0) {
        Times = other.Times;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Exchange != 0) {
        Exchange = other.Exchange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Times = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            Exchange = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Times = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
          case 40: {
            Exchange = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSClickStatistic : pb::IMessage<CSClickStatistic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSClickStatistic> _parser = new pb::MessageParser<CSClickStatistic>(() => new CSClickStatistic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSClickStatistic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSClickStatistic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSClickStatistic(CSClickStatistic other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSClickStatistic Clone() {
      return new CSClickStatistic(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private string num_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Num {
      get { return num_; }
      set {
        num_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSClickStatistic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSClickStatistic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num.Length != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Num.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Num.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSClickStatistic other) {
      if (other == null) {
        return;
      }
      if (other.Num.Length != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Num = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Num = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JumpHighArena : pb::IMessage<JumpHighArena>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JumpHighArena> _parser = new pb::MessageParser<JumpHighArena>(() => new JumpHighArena());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JumpHighArena> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JumpHighArena() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JumpHighArena(JumpHighArena other) : this() {
      isOpen_ = other.isOpen_;
      vip_ = other.vip_;
      coin_ = other.coin_;
      gameTime_ = other.gameTime_;
      fishId_ = other.fishId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JumpHighArena Clone() {
      return new JumpHighArena(this);
    }

    /// <summary>Field number for the "is_open" field.</summary>
    public const int IsOpenFieldNumber = 1;
    private bool isOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 2;
    private int vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vip {
      get { return vip_; }
      set {
        vip_ = value;
      }
    }

    /// <summary>Field number for the "coin" field.</summary>
    public const int CoinFieldNumber = 3;
    private int coin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    /// <summary>Field number for the "game_time" field.</summary>
    public const int GameTimeFieldNumber = 4;
    private int gameTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameTime {
      get { return gameTime_; }
      set {
        gameTime_ = value;
      }
    }

    /// <summary>Field number for the "fish_id" field.</summary>
    public const int FishIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_fishId_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> fishId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FishId {
      get { return fishId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JumpHighArena);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JumpHighArena other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOpen != other.IsOpen) return false;
      if (Vip != other.Vip) return false;
      if (Coin != other.Coin) return false;
      if (GameTime != other.GameTime) return false;
      if(!fishId_.Equals(other.fishId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (Vip != 0) hash ^= Vip.GetHashCode();
      if (Coin != 0) hash ^= Coin.GetHashCode();
      if (GameTime != 0) hash ^= GameTime.GetHashCode();
      hash ^= fishId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsOpen != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsOpen);
      }
      if (Vip != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vip);
      }
      if (Coin != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Coin);
      }
      if (GameTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameTime);
      }
      fishId_.WriteTo(output, _repeated_fishId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsOpen != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsOpen);
      }
      if (Vip != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vip);
      }
      if (Coin != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Coin);
      }
      if (GameTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GameTime);
      }
      fishId_.WriteTo(ref output, _repeated_fishId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vip);
      }
      if (Coin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Coin);
      }
      if (GameTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTime);
      }
      size += fishId_.CalculateSize(_repeated_fishId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JumpHighArena other) {
      if (other == null) {
        return;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      if (other.Vip != 0) {
        Vip = other.Vip;
      }
      if (other.Coin != 0) {
        Coin = other.Coin;
      }
      if (other.GameTime != 0) {
        GameTime = other.GameTime;
      }
      fishId_.Add(other.fishId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOpen = input.ReadBool();
            break;
          }
          case 16: {
            Vip = input.ReadInt32();
            break;
          }
          case 24: {
            Coin = input.ReadInt32();
            break;
          }
          case 32: {
            GameTime = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            fishId_.AddEntriesFrom(input, _repeated_fishId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsOpen = input.ReadBool();
            break;
          }
          case 16: {
            Vip = input.ReadInt32();
            break;
          }
          case 24: {
            Coin = input.ReadInt32();
            break;
          }
          case 32: {
            GameTime = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            fishId_.AddEntriesFrom(ref input, _repeated_fishId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GiftBag : pb::IMessage<GiftBag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GiftBag> _parser = new pb::MessageParser<GiftBag>(() => new GiftBag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GiftBag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftBag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftBag(GiftBag other) : this() {
      isOpen_ = other.isOpen_;
      fishId_ = other.fishId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftBag Clone() {
      return new GiftBag(this);
    }

    /// <summary>Field number for the "is_open" field.</summary>
    public const int IsOpenFieldNumber = 1;
    private bool isOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    /// <summary>Field number for the "fish_id" field.</summary>
    public const int FishIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_fishId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> fishId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FishId {
      get { return fishId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GiftBag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GiftBag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOpen != other.IsOpen) return false;
      if(!fishId_.Equals(other.fishId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      hash ^= fishId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsOpen != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsOpen);
      }
      fishId_.WriteTo(output, _repeated_fishId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsOpen != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsOpen);
      }
      fishId_.WriteTo(ref output, _repeated_fishId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsOpen != false) {
        size += 1 + 1;
      }
      size += fishId_.CalculateSize(_repeated_fishId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GiftBag other) {
      if (other == null) {
        return;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      fishId_.Add(other.fishId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOpen = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            fishId_.AddEntriesFrom(input, _repeated_fishId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsOpen = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            fishId_.AddEntriesFrom(ref input, _repeated_fishId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewYearCardActivityInfo : pb::IMessage<NewYearCardActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewYearCardActivityInfo> _parser = new pb::MessageParser<NewYearCardActivityInfo>(() => new NewYearCardActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewYearCardActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardActivityInfo(NewYearCardActivityInfo other) : this() {
      cardEnable_ = other.cardEnable_;
      cardCount_ = other.cardCount_;
      cardVip_ = other.cardVip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardActivityInfo Clone() {
      return new NewYearCardActivityInfo(this);
    }

    /// <summary>Field number for the "card_enable" field.</summary>
    public const int CardEnableFieldNumber = 1;
    private bool cardEnable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CardEnable {
      get { return cardEnable_; }
      set {
        cardEnable_ = value;
      }
    }

    /// <summary>Field number for the "card_count" field.</summary>
    public const int CardCountFieldNumber = 2;
    private int cardCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardCount {
      get { return cardCount_; }
      set {
        cardCount_ = value;
      }
    }

    /// <summary>Field number for the "card_vip" field.</summary>
    public const int CardVipFieldNumber = 3;
    private int cardVip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardVip {
      get { return cardVip_; }
      set {
        cardVip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewYearCardActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewYearCardActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardEnable != other.CardEnable) return false;
      if (CardCount != other.CardCount) return false;
      if (CardVip != other.CardVip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardEnable != false) hash ^= CardEnable.GetHashCode();
      if (CardCount != 0) hash ^= CardCount.GetHashCode();
      if (CardVip != 0) hash ^= CardVip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CardEnable != false) {
        output.WriteRawTag(8);
        output.WriteBool(CardEnable);
      }
      if (CardCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardCount);
      }
      if (CardVip != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CardVip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CardEnable != false) {
        output.WriteRawTag(8);
        output.WriteBool(CardEnable);
      }
      if (CardCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardCount);
      }
      if (CardVip != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CardVip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardEnable != false) {
        size += 1 + 1;
      }
      if (CardCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardCount);
      }
      if (CardVip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardVip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewYearCardActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.CardEnable != false) {
        CardEnable = other.CardEnable;
      }
      if (other.CardCount != 0) {
        CardCount = other.CardCount;
      }
      if (other.CardVip != 0) {
        CardVip = other.CardVip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CardEnable = input.ReadBool();
            break;
          }
          case 16: {
            CardCount = input.ReadInt32();
            break;
          }
          case 24: {
            CardVip = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CardEnable = input.ReadBool();
            break;
          }
          case 16: {
            CardCount = input.ReadInt32();
            break;
          }
          case 24: {
            CardVip = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserPoolActivityInfo : pb::IMessage<UserPoolActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserPoolActivityInfo> _parser = new pb::MessageParser<UserPoolActivityInfo>(() => new UserPoolActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserPoolActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPoolActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPoolActivityInfo(UserPoolActivityInfo other) : this() {
      userPoolShow_ = other.userPoolShow_;
      awardFish_ = other.awardFish_.Clone();
      userPoolLimit_ = other.userPoolLimit_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserPoolActivityInfo Clone() {
      return new UserPoolActivityInfo(this);
    }

    /// <summary>Field number for the "user_pool_show" field.</summary>
    public const int UserPoolShowFieldNumber = 1;
    private bool userPoolShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UserPoolShow {
      get { return userPoolShow_; }
      set {
        userPoolShow_ = value;
      }
    }

    /// <summary>Field number for the "award_fish" field.</summary>
    public const int AwardFishFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_awardFish_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> awardFish_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AwardFish {
      get { return awardFish_; }
    }

    /// <summary>Field number for the "user_pool_limit" field.</summary>
    public const int UserPoolLimitFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_userPoolLimit_codec
        = pb::FieldCodec.ForMessage(26, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> userPoolLimit_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> UserPoolLimit {
      get { return userPoolLimit_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserPoolActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserPoolActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserPoolShow != other.UserPoolShow) return false;
      if(!awardFish_.Equals(other.awardFish_)) return false;
      if(!userPoolLimit_.Equals(other.userPoolLimit_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserPoolShow != false) hash ^= UserPoolShow.GetHashCode();
      hash ^= awardFish_.GetHashCode();
      hash ^= userPoolLimit_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserPoolShow != false) {
        output.WriteRawTag(8);
        output.WriteBool(UserPoolShow);
      }
      awardFish_.WriteTo(output, _repeated_awardFish_codec);
      userPoolLimit_.WriteTo(output, _repeated_userPoolLimit_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserPoolShow != false) {
        output.WriteRawTag(8);
        output.WriteBool(UserPoolShow);
      }
      awardFish_.WriteTo(ref output, _repeated_awardFish_codec);
      userPoolLimit_.WriteTo(ref output, _repeated_userPoolLimit_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserPoolShow != false) {
        size += 1 + 1;
      }
      size += awardFish_.CalculateSize(_repeated_awardFish_codec);
      size += userPoolLimit_.CalculateSize(_repeated_userPoolLimit_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserPoolActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserPoolShow != false) {
        UserPoolShow = other.UserPoolShow;
      }
      awardFish_.Add(other.awardFish_);
      userPoolLimit_.Add(other.userPoolLimit_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserPoolShow = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            awardFish_.AddEntriesFrom(input, _repeated_awardFish_codec);
            break;
          }
          case 26: {
            userPoolLimit_.AddEntriesFrom(input, _repeated_userPoolLimit_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserPoolShow = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            awardFish_.AddEntriesFrom(ref input, _repeated_awardFish_codec);
            break;
          }
          case 26: {
            userPoolLimit_.AddEntriesFrom(ref input, _repeated_userPoolLimit_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DragonBallConfig : pb::IMessage<DragonBallConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DragonBallConfig> _parser = new pb::MessageParser<DragonBallConfig>(() => new DragonBallConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DragonBallConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallConfig(DragonBallConfig other) : this() {
      ratio_ = other.ratio_;
      next_ = other.next_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DragonBallConfig Clone() {
      return new DragonBallConfig(this);
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 1;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "next" field.</summary>
    public const int NextFieldNumber = 2;
    private bool next_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Next {
      get { return next_; }
      set {
        next_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DragonBallConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DragonBallConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ratio != other.Ratio) return false;
      if (Next != other.Next) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (Next != false) hash ^= Next.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ratio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ratio);
      }
      if (Next != false) {
        output.WriteRawTag(16);
        output.WriteBool(Next);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ratio != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ratio);
      }
      if (Next != false) {
        output.WriteRawTag(16);
        output.WriteBool(Next);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (Next != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DragonBallConfig other) {
      if (other == null) {
        return;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.Next != false) {
        Next = other.Next;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ratio = input.ReadInt32();
            break;
          }
          case 16: {
            Next = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ratio = input.ReadInt32();
            break;
          }
          case 16: {
            Next = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCActivityInfo : pb::IMessage<SCActivityInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCActivityInfo> _parser = new pb::MessageParser<SCActivityInfo>(() => new SCActivityInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCActivityInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityInfo(SCActivityInfo other) : this() {
      jump_ = other.jump_ != null ? other.jump_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      card_ = other.card_ != null ? other.card_.Clone() : null;
      awardPoolRank_ = other.awardPoolRank_;
      userPool_ = other.userPool_ != null ? other.userPool_.Clone() : null;
      luckyDraw_ = other.luckyDraw_;
      dragonWheel_ = other.dragonWheel_.Clone();
      tridentWheel_ = other.tridentWheel_.Clone();
      dragonBall_ = other.dragonBall_.Clone();
      toadMulti_ = other.toadMulti_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCActivityInfo Clone() {
      return new SCActivityInfo(this);
    }

    /// <summary>Field number for the "jump" field.</summary>
    public const int JumpFieldNumber = 1;
    private global::BYDLD.JumpHighArena jump_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.JumpHighArena Jump {
      get { return jump_; }
      set {
        jump_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::BYDLD.GiftBag config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.GiftBag Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::BYDLD.NewYearCardActivityInfo card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.NewYearCardActivityInfo Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "award_pool_rank" field.</summary>
    public const int AwardPoolRankFieldNumber = 4;
    private bool awardPoolRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AwardPoolRank {
      get { return awardPoolRank_; }
      set {
        awardPoolRank_ = value;
      }
    }

    /// <summary>Field number for the "user_pool" field.</summary>
    public const int UserPoolFieldNumber = 5;
    private global::BYDLD.UserPoolActivityInfo userPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.UserPoolActivityInfo UserPool {
      get { return userPool_; }
      set {
        userPool_ = value;
      }
    }

    /// <summary>Field number for the "lucky_draw" field.</summary>
    public const int LuckyDrawFieldNumber = 6;
    private bool luckyDraw_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LuckyDraw {
      get { return luckyDraw_; }
      set {
        luckyDraw_ = value;
      }
    }

    /// <summary>Field number for the "dragon_wheel" field.</summary>
    public const int DragonWheelFieldNumber = 7;
    private static readonly pb::FieldCodec<global::BYDLD.Object4> _repeated_dragonWheel_codec
        = pb::FieldCodec.ForMessage(58, global::BYDLD.Object4.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object4> dragonWheel_ = new pbc::RepeatedField<global::BYDLD.Object4>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object4> DragonWheel {
      get { return dragonWheel_; }
    }

    /// <summary>Field number for the "trident_wheel" field.</summary>
    public const int TridentWheelFieldNumber = 8;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_tridentWheel_codec
        = pb::FieldCodec.ForMessage(66, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> tridentWheel_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> TridentWheel {
      get { return tridentWheel_; }
    }

    /// <summary>Field number for the "dragon_ball" field.</summary>
    public const int DragonBallFieldNumber = 9;
    private static readonly pb::FieldCodec<global::BYDLD.DragonBallConfig> _repeated_dragonBall_codec
        = pb::FieldCodec.ForMessage(74, global::BYDLD.DragonBallConfig.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.DragonBallConfig> dragonBall_ = new pbc::RepeatedField<global::BYDLD.DragonBallConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.DragonBallConfig> DragonBall {
      get { return dragonBall_; }
    }

    /// <summary>Field number for the "toad_multi" field.</summary>
    public const int ToadMultiFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_toadMulti_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> toadMulti_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ToadMulti {
      get { return toadMulti_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCActivityInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCActivityInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jump, other.Jump)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (AwardPoolRank != other.AwardPoolRank) return false;
      if (!object.Equals(UserPool, other.UserPool)) return false;
      if (LuckyDraw != other.LuckyDraw) return false;
      if(!dragonWheel_.Equals(other.dragonWheel_)) return false;
      if(!tridentWheel_.Equals(other.tridentWheel_)) return false;
      if(!dragonBall_.Equals(other.dragonBall_)) return false;
      if(!toadMulti_.Equals(other.toadMulti_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jump_ != null) hash ^= Jump.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (AwardPoolRank != false) hash ^= AwardPoolRank.GetHashCode();
      if (userPool_ != null) hash ^= UserPool.GetHashCode();
      if (LuckyDraw != false) hash ^= LuckyDraw.GetHashCode();
      hash ^= dragonWheel_.GetHashCode();
      hash ^= tridentWheel_.GetHashCode();
      hash ^= dragonBall_.GetHashCode();
      hash ^= toadMulti_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (jump_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jump);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (AwardPoolRank != false) {
        output.WriteRawTag(32);
        output.WriteBool(AwardPoolRank);
      }
      if (userPool_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserPool);
      }
      if (LuckyDraw != false) {
        output.WriteRawTag(48);
        output.WriteBool(LuckyDraw);
      }
      dragonWheel_.WriteTo(output, _repeated_dragonWheel_codec);
      tridentWheel_.WriteTo(output, _repeated_tridentWheel_codec);
      dragonBall_.WriteTo(output, _repeated_dragonBall_codec);
      toadMulti_.WriteTo(output, _repeated_toadMulti_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (jump_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jump);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (AwardPoolRank != false) {
        output.WriteRawTag(32);
        output.WriteBool(AwardPoolRank);
      }
      if (userPool_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserPool);
      }
      if (LuckyDraw != false) {
        output.WriteRawTag(48);
        output.WriteBool(LuckyDraw);
      }
      dragonWheel_.WriteTo(ref output, _repeated_dragonWheel_codec);
      tridentWheel_.WriteTo(ref output, _repeated_tridentWheel_codec);
      dragonBall_.WriteTo(ref output, _repeated_dragonBall_codec);
      toadMulti_.WriteTo(ref output, _repeated_toadMulti_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jump_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jump);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (AwardPoolRank != false) {
        size += 1 + 1;
      }
      if (userPool_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserPool);
      }
      if (LuckyDraw != false) {
        size += 1 + 1;
      }
      size += dragonWheel_.CalculateSize(_repeated_dragonWheel_codec);
      size += tridentWheel_.CalculateSize(_repeated_tridentWheel_codec);
      size += dragonBall_.CalculateSize(_repeated_dragonBall_codec);
      size += toadMulti_.CalculateSize(_repeated_toadMulti_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCActivityInfo other) {
      if (other == null) {
        return;
      }
      if (other.jump_ != null) {
        if (jump_ == null) {
          Jump = new global::BYDLD.JumpHighArena();
        }
        Jump.MergeFrom(other.Jump);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::BYDLD.GiftBag();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          Card = new global::BYDLD.NewYearCardActivityInfo();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.AwardPoolRank != false) {
        AwardPoolRank = other.AwardPoolRank;
      }
      if (other.userPool_ != null) {
        if (userPool_ == null) {
          UserPool = new global::BYDLD.UserPoolActivityInfo();
        }
        UserPool.MergeFrom(other.UserPool);
      }
      if (other.LuckyDraw != false) {
        LuckyDraw = other.LuckyDraw;
      }
      dragonWheel_.Add(other.dragonWheel_);
      tridentWheel_.Add(other.tridentWheel_);
      dragonBall_.Add(other.dragonBall_);
      toadMulti_.Add(other.toadMulti_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jump_ == null) {
              Jump = new global::BYDLD.JumpHighArena();
            }
            input.ReadMessage(Jump);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::BYDLD.GiftBag();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::BYDLD.NewYearCardActivityInfo();
            }
            input.ReadMessage(Card);
            break;
          }
          case 32: {
            AwardPoolRank = input.ReadBool();
            break;
          }
          case 42: {
            if (userPool_ == null) {
              UserPool = new global::BYDLD.UserPoolActivityInfo();
            }
            input.ReadMessage(UserPool);
            break;
          }
          case 48: {
            LuckyDraw = input.ReadBool();
            break;
          }
          case 58: {
            dragonWheel_.AddEntriesFrom(input, _repeated_dragonWheel_codec);
            break;
          }
          case 66: {
            tridentWheel_.AddEntriesFrom(input, _repeated_tridentWheel_codec);
            break;
          }
          case 74: {
            dragonBall_.AddEntriesFrom(input, _repeated_dragonBall_codec);
            break;
          }
          case 82:
          case 80: {
            toadMulti_.AddEntriesFrom(input, _repeated_toadMulti_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (jump_ == null) {
              Jump = new global::BYDLD.JumpHighArena();
            }
            input.ReadMessage(Jump);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::BYDLD.GiftBag();
            }
            input.ReadMessage(Config);
            break;
          }
          case 26: {
            if (card_ == null) {
              Card = new global::BYDLD.NewYearCardActivityInfo();
            }
            input.ReadMessage(Card);
            break;
          }
          case 32: {
            AwardPoolRank = input.ReadBool();
            break;
          }
          case 42: {
            if (userPool_ == null) {
              UserPool = new global::BYDLD.UserPoolActivityInfo();
            }
            input.ReadMessage(UserPool);
            break;
          }
          case 48: {
            LuckyDraw = input.ReadBool();
            break;
          }
          case 58: {
            dragonWheel_.AddEntriesFrom(ref input, _repeated_dragonWheel_codec);
            break;
          }
          case 66: {
            tridentWheel_.AddEntriesFrom(ref input, _repeated_tridentWheel_codec);
            break;
          }
          case 74: {
            dragonBall_.AddEntriesFrom(ref input, _repeated_dragonBall_codec);
            break;
          }
          case 82:
          case 80: {
            toadMulti_.AddEntriesFrom(ref input, _repeated_toadMulti_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPropEndNotify : pb::IMessage<SCPropEndNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPropEndNotify> _parser = new pb::MessageParser<SCPropEndNotify>(() => new SCPropEndNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPropEndNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropEndNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropEndNotify(SCPropEndNotify other) : this() {
      chairIdx_ = other.chairIdx_;
      propId_ = other.propId_;
      status_ = other.status_;
      freeLevel_ = other.freeLevel_;
      freeTimes_ = other.freeTimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropEndNotify Clone() {
      return new SCPropEndNotify(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 2;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "free_level" field.</summary>
    public const int FreeLevelFieldNumber = 4;
    private int freeLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeLevel {
      get { return freeLevel_; }
      set {
        freeLevel_ = value;
      }
    }

    /// <summary>Field number for the "free_times" field.</summary>
    public const int FreeTimesFieldNumber = 5;
    private int freeTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeTimes {
      get { return freeTimes_; }
      set {
        freeTimes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPropEndNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPropEndNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (PropId != other.PropId) return false;
      if (Status != other.Status) return false;
      if (FreeLevel != other.FreeLevel) return false;
      if (FreeTimes != other.FreeTimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (FreeLevel != 0) hash ^= FreeLevel.GetHashCode();
      if (FreeTimes != 0) hash ^= FreeTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (PropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropId);
      }
      if (Status != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Status);
      }
      if (FreeLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeLevel);
      }
      if (FreeTimes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (PropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropId);
      }
      if (Status != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Status);
      }
      if (FreeLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeLevel);
      }
      if (FreeTimes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (FreeLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeLevel);
      }
      if (FreeTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPropEndNotify other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.FreeLevel != 0) {
        FreeLevel = other.FreeLevel;
      }
      if (other.FreeTimes != 0) {
        FreeTimes = other.FreeTimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            PropId = input.ReadInt32();
            break;
          }
          case 24: {
            Status = input.ReadInt32();
            break;
          }
          case 32: {
            FreeLevel = input.ReadInt32();
            break;
          }
          case 40: {
            FreeTimes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            PropId = input.ReadInt32();
            break;
          }
          case 24: {
            Status = input.ReadInt32();
            break;
          }
          case 32: {
            FreeLevel = input.ReadInt32();
            break;
          }
          case 40: {
            FreeTimes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCPropDropNotify : pb::IMessage<SCPropDropNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCPropDropNotify> _parser = new pb::MessageParser<SCPropDropNotify>(() => new SCPropDropNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCPropDropNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropDropNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropDropNotify(SCPropDropNotify other) : this() {
      chairIdx_ = other.chairIdx_;
      fishUid_ = other.fishUid_;
      propId_ = other.propId_;
      count_ = other.count_;
      lockRatio_ = other.lockRatio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCPropDropNotify Clone() {
      return new SCPropDropNotify(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 2;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 3;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "lock_ratio" field.</summary>
    public const int LockRatioFieldNumber = 5;
    private int lockRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LockRatio {
      get { return lockRatio_; }
      set {
        lockRatio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCPropDropNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCPropDropNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (FishUid != other.FishUid) return false;
      if (PropId != other.PropId) return false;
      if (Count != other.Count) return false;
      if (LockRatio != other.LockRatio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (LockRatio != 0) hash ^= LockRatio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (PropId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropId);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (LockRatio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LockRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (PropId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropId);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (LockRatio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LockRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (LockRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LockRatio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCPropDropNotify other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.LockRatio != 0) {
        LockRatio = other.LockRatio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            PropId = input.ReadInt32();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 40: {
            LockRatio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            PropId = input.ReadInt32();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 40: {
            LockRatio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Prop : pb::IMessage<Prop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Prop> _parser = new pb::MessageParser<Prop>(() => new Prop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Prop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Prop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Prop(Prop other) : this() {
      id_ = other.id_;
      count_ = other.count_;
      ratio_ = other.ratio_;
      x_ = other.x_;
      y_ = other.y_;
      angle_ = other.angle_;
      status_ = other.status_;
      multiple_ = other.multiple_;
      critMulti_ = other.critMulti_;
      ingotId_ = other.ingotId_;
      remainTimes_ = other.remainTimes_;
      totalTimes_ = other.totalTimes_;
      bulletId_ = other.bulletId_;
      ingotMulti_ = other.ingotMulti_;
      tridentMulti_ = other.tridentMulti_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Prop Clone() {
      return new Prop(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 3;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 4;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 5;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 6;
    private float angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "multiple" field.</summary>
    public const int MultipleFieldNumber = 8;
    private int multiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple {
      get { return multiple_; }
      set {
        multiple_ = value;
      }
    }

    /// <summary>Field number for the "crit_multi" field.</summary>
    public const int CritMultiFieldNumber = 9;
    private int critMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritMulti {
      get { return critMulti_; }
      set {
        critMulti_ = value;
      }
    }

    /// <summary>Field number for the "ingot_id" field.</summary>
    public const int IngotIdFieldNumber = 10;
    private int ingotId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IngotId {
      get { return ingotId_; }
      set {
        ingotId_ = value;
      }
    }

    /// <summary>Field number for the "remain_times" field.</summary>
    public const int RemainTimesFieldNumber = 11;
    private int remainTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainTimes {
      get { return remainTimes_; }
      set {
        remainTimes_ = value;
      }
    }

    /// <summary>Field number for the "total_times" field.</summary>
    public const int TotalTimesFieldNumber = 12;
    private int totalTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalTimes {
      get { return totalTimes_; }
      set {
        totalTimes_ = value;
      }
    }

    /// <summary>Field number for the "bullet_id" field.</summary>
    public const int BulletIdFieldNumber = 13;
    private int bulletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletId {
      get { return bulletId_; }
      set {
        bulletId_ = value;
      }
    }

    /// <summary>Field number for the "ingot_multi" field.</summary>
    public const int IngotMultiFieldNumber = 14;
    private int ingotMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IngotMulti {
      get { return ingotMulti_; }
      set {
        ingotMulti_ = value;
      }
    }

    /// <summary>Field number for the "trident_multi" field.</summary>
    public const int TridentMultiFieldNumber = 15;
    private int tridentMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TridentMulti {
      get { return tridentMulti_; }
      set {
        tridentMulti_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Prop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Prop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Count != other.Count) return false;
      if (Ratio != other.Ratio) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
      if (Status != other.Status) return false;
      if (Multiple != other.Multiple) return false;
      if (CritMulti != other.CritMulti) return false;
      if (IngotId != other.IngotId) return false;
      if (RemainTimes != other.RemainTimes) return false;
      if (TotalTimes != other.TotalTimes) return false;
      if (BulletId != other.BulletId) return false;
      if (IngotMulti != other.IngotMulti) return false;
      if (TridentMulti != other.TridentMulti) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Multiple != 0) hash ^= Multiple.GetHashCode();
      if (CritMulti != 0) hash ^= CritMulti.GetHashCode();
      if (IngotId != 0) hash ^= IngotId.GetHashCode();
      if (RemainTimes != 0) hash ^= RemainTimes.GetHashCode();
      if (TotalTimes != 0) hash ^= TotalTimes.GetHashCode();
      if (BulletId != 0) hash ^= BulletId.GetHashCode();
      if (IngotMulti != 0) hash ^= IngotMulti.GetHashCode();
      if (TridentMulti != 0) hash ^= TridentMulti.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Ratio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Ratio);
      }
      if (X != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Y);
      }
      if (Angle != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Angle);
      }
      if (Status != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Status);
      }
      if (Multiple != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Multiple);
      }
      if (CritMulti != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritMulti);
      }
      if (IngotId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(IngotId);
      }
      if (RemainTimes != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RemainTimes);
      }
      if (TotalTimes != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalTimes);
      }
      if (BulletId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BulletId);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(IngotMulti);
      }
      if (TridentMulti != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(TridentMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Ratio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Ratio);
      }
      if (X != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Y);
      }
      if (Angle != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Angle);
      }
      if (Status != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Status);
      }
      if (Multiple != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Multiple);
      }
      if (CritMulti != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritMulti);
      }
      if (IngotId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(IngotId);
      }
      if (RemainTimes != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RemainTimes);
      }
      if (TotalTimes != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalTimes);
      }
      if (BulletId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(BulletId);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(IngotMulti);
      }
      if (TridentMulti != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(TridentMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Angle != 0F) {
        size += 1 + 4;
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Multiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
      }
      if (CritMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritMulti);
      }
      if (IngotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IngotId);
      }
      if (RemainTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainTimes);
      }
      if (TotalTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalTimes);
      }
      if (BulletId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletId);
      }
      if (IngotMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IngotMulti);
      }
      if (TridentMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TridentMulti);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Prop other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Angle != 0F) {
        Angle = other.Angle;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Multiple != 0) {
        Multiple = other.Multiple;
      }
      if (other.CritMulti != 0) {
        CritMulti = other.CritMulti;
      }
      if (other.IngotId != 0) {
        IngotId = other.IngotId;
      }
      if (other.RemainTimes != 0) {
        RemainTimes = other.RemainTimes;
      }
      if (other.TotalTimes != 0) {
        TotalTimes = other.TotalTimes;
      }
      if (other.BulletId != 0) {
        BulletId = other.BulletId;
      }
      if (other.IngotMulti != 0) {
        IngotMulti = other.IngotMulti;
      }
      if (other.TridentMulti != 0) {
        TridentMulti = other.TridentMulti;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Ratio = input.ReadInt32();
            break;
          }
          case 37: {
            X = input.ReadFloat();
            break;
          }
          case 45: {
            Y = input.ReadFloat();
            break;
          }
          case 53: {
            Angle = input.ReadFloat();
            break;
          }
          case 56: {
            Status = input.ReadInt32();
            break;
          }
          case 64: {
            Multiple = input.ReadInt32();
            break;
          }
          case 72: {
            CritMulti = input.ReadInt32();
            break;
          }
          case 80: {
            IngotId = input.ReadInt32();
            break;
          }
          case 88: {
            RemainTimes = input.ReadInt32();
            break;
          }
          case 96: {
            TotalTimes = input.ReadInt32();
            break;
          }
          case 104: {
            BulletId = input.ReadInt32();
            break;
          }
          case 112: {
            IngotMulti = input.ReadInt32();
            break;
          }
          case 120: {
            TridentMulti = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Ratio = input.ReadInt32();
            break;
          }
          case 37: {
            X = input.ReadFloat();
            break;
          }
          case 45: {
            Y = input.ReadFloat();
            break;
          }
          case 53: {
            Angle = input.ReadFloat();
            break;
          }
          case 56: {
            Status = input.ReadInt32();
            break;
          }
          case 64: {
            Multiple = input.ReadInt32();
            break;
          }
          case 72: {
            CritMulti = input.ReadInt32();
            break;
          }
          case 80: {
            IngotId = input.ReadInt32();
            break;
          }
          case 88: {
            RemainTimes = input.ReadInt32();
            break;
          }
          case 96: {
            TotalTimes = input.ReadInt32();
            break;
          }
          case 104: {
            BulletId = input.ReadInt32();
            break;
          }
          case 112: {
            IngotMulti = input.ReadInt32();
            break;
          }
          case 120: {
            TridentMulti = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserProp : pb::IMessage<UserProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserProp> _parser = new pb::MessageParser<UserProp>(() => new UserProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProp(UserProp other) : this() {
      chairIdx_ = other.chairIdx_;
      props_ = other.props_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserProp Clone() {
      return new UserProp(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "props" field.</summary>
    public const int PropsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.Prop> _repeated_props_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.Prop.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Prop> props_ = new pbc::RepeatedField<global::BYDLD.Prop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Prop> Props {
      get { return props_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if(!props_.Equals(other.props_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      hash ^= props_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      props_.WriteTo(output, _repeated_props_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      props_.WriteTo(ref output, _repeated_props_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      size += props_.CalculateSize(_repeated_props_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserProp other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      props_.Add(other.props_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18: {
            props_.AddEntriesFrom(input, _repeated_props_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18: {
            props_.AddEntriesFrom(ref input, _repeated_props_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UsersProp : pb::IMessage<UsersProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UsersProp> _parser = new pb::MessageParser<UsersProp>(() => new UsersProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsersProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersProp(UsersProp other) : this() {
      userProp_ = other.userProp_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersProp Clone() {
      return new UsersProp(this);
    }

    /// <summary>Field number for the "user_prop" field.</summary>
    public const int UserPropFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.UserProp> _repeated_userProp_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.UserProp.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.UserProp> userProp_ = new pbc::RepeatedField<global::BYDLD.UserProp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.UserProp> UserProp {
      get { return userProp_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsersProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsersProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userProp_.Equals(other.userProp_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userProp_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userProp_.WriteTo(output, _repeated_userProp_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userProp_.WriteTo(ref output, _repeated_userProp_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userProp_.CalculateSize(_repeated_userProp_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsersProp other) {
      if (other == null) {
        return;
      }
      userProp_.Add(other.userProp_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userProp_.AddEntriesFrom(input, _repeated_userProp_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userProp_.AddEntriesFrom(ref input, _repeated_userProp_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SSAwardPoolMsg : pb::IMessage<SSAwardPoolMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SSAwardPoolMsg> _parser = new pb::MessageParser<SSAwardPoolMsg>(() => new SSAwardPoolMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SSAwardPoolMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SSAwardPoolMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SSAwardPoolMsg(SSAwardPoolMsg other) : this() {
      uniqueID_ = other.uniqueID_;
      arenaID_ = other.arenaID_;
      poolID_ = other.poolID_;
      delta_ = other.delta_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SSAwardPoolMsg Clone() {
      return new SSAwardPoolMsg(this);
    }

    /// <summary>Field number for the "uniqueID" field.</summary>
    public const int UniqueIDFieldNumber = 1;
    private int uniqueID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UniqueID {
      get { return uniqueID_; }
      set {
        uniqueID_ = value;
      }
    }

    /// <summary>Field number for the "arenaID" field.</summary>
    public const int ArenaIDFieldNumber = 2;
    private int arenaID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArenaID {
      get { return arenaID_; }
      set {
        arenaID_ = value;
      }
    }

    /// <summary>Field number for the "poolID" field.</summary>
    public const int PoolIDFieldNumber = 3;
    private int poolID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoolID {
      get { return poolID_; }
      set {
        poolID_ = value;
      }
    }

    /// <summary>Field number for the "delta" field.</summary>
    public const int DeltaFieldNumber = 4;
    private int delta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Delta {
      get { return delta_; }
      set {
        delta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SSAwardPoolMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SSAwardPoolMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueID != other.UniqueID) return false;
      if (ArenaID != other.ArenaID) return false;
      if (PoolID != other.PoolID) return false;
      if (Delta != other.Delta) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueID != 0) hash ^= UniqueID.GetHashCode();
      if (ArenaID != 0) hash ^= ArenaID.GetHashCode();
      if (PoolID != 0) hash ^= PoolID.GetHashCode();
      if (Delta != 0) hash ^= Delta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueID);
      }
      if (ArenaID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaID);
      }
      if (PoolID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoolID);
      }
      if (Delta != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Delta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UniqueID);
      }
      if (ArenaID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ArenaID);
      }
      if (PoolID != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoolID);
      }
      if (Delta != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Delta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UniqueID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UniqueID);
      }
      if (ArenaID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArenaID);
      }
      if (PoolID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolID);
      }
      if (Delta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SSAwardPoolMsg other) {
      if (other == null) {
        return;
      }
      if (other.UniqueID != 0) {
        UniqueID = other.UniqueID;
      }
      if (other.ArenaID != 0) {
        ArenaID = other.ArenaID;
      }
      if (other.PoolID != 0) {
        PoolID = other.PoolID;
      }
      if (other.Delta != 0) {
        Delta = other.Delta;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueID = input.ReadInt32();
            break;
          }
          case 16: {
            ArenaID = input.ReadInt32();
            break;
          }
          case 24: {
            PoolID = input.ReadInt32();
            break;
          }
          case 32: {
            Delta = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UniqueID = input.ReadInt32();
            break;
          }
          case 16: {
            ArenaID = input.ReadInt32();
            break;
          }
          case 24: {
            PoolID = input.ReadInt32();
            break;
          }
          case 32: {
            Delta = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSScratchNewYearCard : pb::IMessage<CSScratchNewYearCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSScratchNewYearCard> _parser = new pb::MessageParser<CSScratchNewYearCard>(() => new CSScratchNewYearCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSScratchNewYearCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSScratchNewYearCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSScratchNewYearCard(CSScratchNewYearCard other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSScratchNewYearCard Clone() {
      return new CSScratchNewYearCard(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSScratchNewYearCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSScratchNewYearCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSScratchNewYearCard other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSBuyNewYearCard : pb::IMessage<CSBuyNewYearCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSBuyNewYearCard> _parser = new pb::MessageParser<CSBuyNewYearCard>(() => new CSBuyNewYearCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBuyNewYearCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyNewYearCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyNewYearCard(CSBuyNewYearCard other) : this() {
      buyCount_ = other.buyCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyNewYearCard Clone() {
      return new CSBuyNewYearCard(this);
    }

    /// <summary>Field number for the "buy_count" field.</summary>
    public const int BuyCountFieldNumber = 1;
    private int buyCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyCount {
      get { return buyCount_; }
      set {
        buyCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBuyNewYearCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBuyNewYearCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuyCount != other.BuyCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuyCount != 0) hash ^= BuyCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BuyCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuyCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BuyCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuyCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBuyNewYearCard other) {
      if (other == null) {
        return;
      }
      if (other.BuyCount != 0) {
        BuyCount = other.BuyCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuyCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BuyCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewYearCardMultiple : pb::IMessage<NewYearCardMultiple>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewYearCardMultiple> _parser = new pb::MessageParser<NewYearCardMultiple>(() => new NewYearCardMultiple());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewYearCardMultiple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardMultiple() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardMultiple(NewYearCardMultiple other) : this() {
      awardNo_ = other.awardNo_;
      multiple_ = other.multiple_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardMultiple Clone() {
      return new NewYearCardMultiple(this);
    }

    /// <summary>Field number for the "award_no" field.</summary>
    public const int AwardNoFieldNumber = 1;
    private string awardNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AwardNo {
      get { return awardNo_; }
      set {
        awardNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "multiple" field.</summary>
    public const int MultipleFieldNumber = 2;
    private int multiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple {
      get { return multiple_; }
      set {
        multiple_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewYearCardMultiple);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewYearCardMultiple other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AwardNo != other.AwardNo) return false;
      if (Multiple != other.Multiple) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AwardNo.Length != 0) hash ^= AwardNo.GetHashCode();
      if (Multiple != 0) hash ^= Multiple.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AwardNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AwardNo);
      }
      if (Multiple != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Multiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AwardNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AwardNo);
      }
      if (Multiple != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Multiple);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AwardNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AwardNo);
      }
      if (Multiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewYearCardMultiple other) {
      if (other == null) {
        return;
      }
      if (other.AwardNo.Length != 0) {
        AwardNo = other.AwardNo;
      }
      if (other.Multiple != 0) {
        Multiple = other.Multiple;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AwardNo = input.ReadString();
            break;
          }
          case 16: {
            Multiple = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AwardNo = input.ReadString();
            break;
          }
          case 16: {
            Multiple = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCScratchNewYearCard : pb::IMessage<SCScratchNewYearCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCScratchNewYearCard> _parser = new pb::MessageParser<SCScratchNewYearCard>(() => new SCScratchNewYearCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCScratchNewYearCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCScratchNewYearCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCScratchNewYearCard(SCScratchNewYearCard other) : this() {
      result_ = other.result_;
      chairIdx_ = other.chairIdx_;
      curScore_ = other.curScore_;
      base_ = other.base_;
      count_ = other.count_;
      multiples_ = other.multiples_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCScratchNewYearCard Clone() {
      return new SCScratchNewYearCard(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 2;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "cur_score" field.</summary>
    public const int CurScoreFieldNumber = 3;
    private long curScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurScore {
      get { return curScore_; }
      set {
        curScore_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 4;
    private int base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "multiples" field.</summary>
    public const int MultiplesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::BYDLD.NewYearCardMultiple> _repeated_multiples_codec
        = pb::FieldCodec.ForMessage(50, global::BYDLD.NewYearCardMultiple.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.NewYearCardMultiple> multiples_ = new pbc::RepeatedField<global::BYDLD.NewYearCardMultiple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.NewYearCardMultiple> Multiples {
      get { return multiples_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCScratchNewYearCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCScratchNewYearCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (ChairIdx != other.ChairIdx) return false;
      if (CurScore != other.CurScore) return false;
      if (Base != other.Base) return false;
      if (Count != other.Count) return false;
      if(!multiples_.Equals(other.multiples_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (CurScore != 0L) hash ^= CurScore.GetHashCode();
      if (Base != 0) hash ^= Base.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      hash ^= multiples_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairIdx);
      }
      if (CurScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurScore);
      }
      if (Base != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Base);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      multiples_.WriteTo(output, _repeated_multiples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairIdx);
      }
      if (CurScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurScore);
      }
      if (Base != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Base);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      multiples_.WriteTo(ref output, _repeated_multiples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (CurScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurScore);
      }
      if (Base != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Base);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      size += multiples_.CalculateSize(_repeated_multiples_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCScratchNewYearCard other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.CurScore != 0L) {
        CurScore = other.CurScore;
      }
      if (other.Base != 0) {
        Base = other.Base;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      multiples_.Add(other.multiples_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 24: {
            CurScore = input.ReadInt64();
            break;
          }
          case 32: {
            Base = input.ReadInt32();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 50: {
            multiples_.AddEntriesFrom(input, _repeated_multiples_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 24: {
            CurScore = input.ReadInt64();
            break;
          }
          case 32: {
            Base = input.ReadInt32();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 50: {
            multiples_.AddEntriesFrom(ref input, _repeated_multiples_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSNewYearCardExchange : pb::IMessage<CSNewYearCardExchange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSNewYearCardExchange> _parser = new pb::MessageParser<CSNewYearCardExchange>(() => new CSNewYearCardExchange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSNewYearCardExchange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNewYearCardExchange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNewYearCardExchange(CSNewYearCardExchange other) : this() {
      times_ = other.times_;
      exchangeAll_ = other.exchangeAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNewYearCardExchange Clone() {
      return new CSNewYearCardExchange(this);
    }

    /// <summary>Field number for the "times" field.</summary>
    public const int TimesFieldNumber = 1;
    private int times_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    /// <summary>Field number for the "exchange_all" field.</summary>
    public const int ExchangeAllFieldNumber = 2;
    private bool exchangeAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExchangeAll {
      get { return exchangeAll_; }
      set {
        exchangeAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSNewYearCardExchange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSNewYearCardExchange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Times != other.Times) return false;
      if (ExchangeAll != other.ExchangeAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Times != 0) hash ^= Times.GetHashCode();
      if (ExchangeAll != false) hash ^= ExchangeAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Times != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Times);
      }
      if (ExchangeAll != false) {
        output.WriteRawTag(16);
        output.WriteBool(ExchangeAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Times != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Times);
      }
      if (ExchangeAll != false) {
        output.WriteRawTag(16);
        output.WriteBool(ExchangeAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Times != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
      }
      if (ExchangeAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSNewYearCardExchange other) {
      if (other == null) {
        return;
      }
      if (other.Times != 0) {
        Times = other.Times;
      }
      if (other.ExchangeAll != false) {
        ExchangeAll = other.ExchangeAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Times = input.ReadInt32();
            break;
          }
          case 16: {
            ExchangeAll = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Times = input.ReadInt32();
            break;
          }
          case 16: {
            ExchangeAll = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewYearCardAward : pb::IMessage<NewYearCardAward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewYearCardAward> _parser = new pb::MessageParser<NewYearCardAward>(() => new NewYearCardAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewYearCardAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardAward(NewYearCardAward other) : this() {
      cardIdx_ = other.cardIdx_;
      award_ = other.award_;
      blessAward_ = other.blessAward_;
      base_ = other.base_;
      multiples_ = other.multiples_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardAward Clone() {
      return new NewYearCardAward(this);
    }

    /// <summary>Field number for the "card_idx" field.</summary>
    public const int CardIdxFieldNumber = 1;
    private int cardIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardIdx {
      get { return cardIdx_; }
      set {
        cardIdx_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 2;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "bless_award" field.</summary>
    public const int BlessAwardFieldNumber = 3;
    private int blessAward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlessAward {
      get { return blessAward_; }
      set {
        blessAward_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 4;
    private int base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "multiples" field.</summary>
    public const int MultiplesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::BYDLD.NewYearCardMultiple> _repeated_multiples_codec
        = pb::FieldCodec.ForMessage(42, global::BYDLD.NewYearCardMultiple.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.NewYearCardMultiple> multiples_ = new pbc::RepeatedField<global::BYDLD.NewYearCardMultiple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.NewYearCardMultiple> Multiples {
      get { return multiples_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewYearCardAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewYearCardAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardIdx != other.CardIdx) return false;
      if (Award != other.Award) return false;
      if (BlessAward != other.BlessAward) return false;
      if (Base != other.Base) return false;
      if(!multiples_.Equals(other.multiples_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardIdx != 0) hash ^= CardIdx.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (BlessAward != 0) hash ^= BlessAward.GetHashCode();
      if (Base != 0) hash ^= Base.GetHashCode();
      hash ^= multiples_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CardIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CardIdx);
      }
      if (Award != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Award);
      }
      if (BlessAward != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlessAward);
      }
      if (Base != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Base);
      }
      multiples_.WriteTo(output, _repeated_multiples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CardIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CardIdx);
      }
      if (Award != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Award);
      }
      if (BlessAward != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlessAward);
      }
      if (Base != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Base);
      }
      multiples_.WriteTo(ref output, _repeated_multiples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardIdx);
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (BlessAward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlessAward);
      }
      if (Base != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Base);
      }
      size += multiples_.CalculateSize(_repeated_multiples_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewYearCardAward other) {
      if (other == null) {
        return;
      }
      if (other.CardIdx != 0) {
        CardIdx = other.CardIdx;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.BlessAward != 0) {
        BlessAward = other.BlessAward;
      }
      if (other.Base != 0) {
        Base = other.Base;
      }
      multiples_.Add(other.multiples_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CardIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Award = input.ReadInt32();
            break;
          }
          case 24: {
            BlessAward = input.ReadInt32();
            break;
          }
          case 32: {
            Base = input.ReadInt32();
            break;
          }
          case 42: {
            multiples_.AddEntriesFrom(input, _repeated_multiples_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CardIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Award = input.ReadInt32();
            break;
          }
          case 24: {
            BlessAward = input.ReadInt32();
            break;
          }
          case 32: {
            Base = input.ReadInt32();
            break;
          }
          case 42: {
            multiples_.AddEntriesFrom(ref input, _repeated_multiples_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCNewYearCardExchange : pb::IMessage<SCNewYearCardExchange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCNewYearCardExchange> _parser = new pb::MessageParser<SCNewYearCardExchange>(() => new SCNewYearCardExchange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCNewYearCardExchange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNewYearCardExchange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNewYearCardExchange(SCNewYearCardExchange other) : this() {
      chairIdx_ = other.chairIdx_;
      result_ = other.result_;
      awards_ = other.awards_.Clone();
      score_ = other.score_;
      count_ = other.count_;
      exchangeAll_ = other.exchangeAll_;
      reqId_ = other.reqId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNewYearCardExchange Clone() {
      return new SCNewYearCardExchange(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "awards" field.</summary>
    public const int AwardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BYDLD.NewYearCardAward> _repeated_awards_codec
        = pb::FieldCodec.ForMessage(26, global::BYDLD.NewYearCardAward.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.NewYearCardAward> awards_ = new pbc::RepeatedField<global::BYDLD.NewYearCardAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.NewYearCardAward> Awards {
      get { return awards_; }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "exchange_all" field.</summary>
    public const int ExchangeAllFieldNumber = 6;
    private bool exchangeAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExchangeAll {
      get { return exchangeAll_; }
      set {
        exchangeAll_ = value;
      }
    }

    /// <summary>Field number for the "req_id" field.</summary>
    public const int ReqIdFieldNumber = 7;
    private int reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqId {
      get { return reqId_; }
      set {
        reqId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCNewYearCardExchange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCNewYearCardExchange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (Result != other.Result) return false;
      if(!awards_.Equals(other.awards_)) return false;
      if (Score != other.Score) return false;
      if (Count != other.Count) return false;
      if (ExchangeAll != other.ExchangeAll) return false;
      if (ReqId != other.ReqId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= awards_.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (ExchangeAll != false) hash ^= ExchangeAll.GetHashCode();
      if (ReqId != 0) hash ^= ReqId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Result);
      }
      awards_.WriteTo(output, _repeated_awards_codec);
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (ExchangeAll != false) {
        output.WriteRawTag(48);
        output.WriteBool(ExchangeAll);
      }
      if (ReqId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ReqId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Result);
      }
      awards_.WriteTo(ref output, _repeated_awards_codec);
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (ExchangeAll != false) {
        output.WriteRawTag(48);
        output.WriteBool(ExchangeAll);
      }
      if (ReqId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ReqId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += awards_.CalculateSize(_repeated_awards_codec);
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (ExchangeAll != false) {
        size += 1 + 1;
      }
      if (ReqId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCNewYearCardExchange other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      awards_.Add(other.awards_);
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.ExchangeAll != false) {
        ExchangeAll = other.ExchangeAll;
      }
      if (other.ReqId != 0) {
        ReqId = other.ReqId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Result = input.ReadInt32();
            break;
          }
          case 26: {
            awards_.AddEntriesFrom(input, _repeated_awards_codec);
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 48: {
            ExchangeAll = input.ReadBool();
            break;
          }
          case 56: {
            ReqId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            Result = input.ReadInt32();
            break;
          }
          case 26: {
            awards_.AddEntriesFrom(ref input, _repeated_awards_codec);
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 48: {
            ExchangeAll = input.ReadBool();
            break;
          }
          case 56: {
            ReqId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSNewYearCardAwardRecord : pb::IMessage<CSNewYearCardAwardRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSNewYearCardAwardRecord> _parser = new pb::MessageParser<CSNewYearCardAwardRecord>(() => new CSNewYearCardAwardRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSNewYearCardAwardRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNewYearCardAwardRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNewYearCardAwardRecord(CSNewYearCardAwardRecord other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSNewYearCardAwardRecord Clone() {
      return new CSNewYearCardAwardRecord(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSNewYearCardAwardRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSNewYearCardAwardRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSNewYearCardAwardRecord other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class NewYearCardAwardRecord : pb::IMessage<NewYearCardAwardRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewYearCardAwardRecord> _parser = new pb::MessageParser<NewYearCardAwardRecord>(() => new NewYearCardAwardRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewYearCardAwardRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardAwardRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardAwardRecord(NewYearCardAwardRecord other) : this() {
      time_ = other.time_;
      normalAward_ = other.normalAward_;
      blessAward_ = other.blessAward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewYearCardAwardRecord Clone() {
      return new NewYearCardAwardRecord(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "normal_award" field.</summary>
    public const int NormalAwardFieldNumber = 2;
    private int normalAward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NormalAward {
      get { return normalAward_; }
      set {
        normalAward_ = value;
      }
    }

    /// <summary>Field number for the "bless_award" field.</summary>
    public const int BlessAwardFieldNumber = 3;
    private int blessAward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlessAward {
      get { return blessAward_; }
      set {
        blessAward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewYearCardAwardRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewYearCardAwardRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      if (NormalAward != other.NormalAward) return false;
      if (BlessAward != other.BlessAward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0) hash ^= Time.GetHashCode();
      if (NormalAward != 0) hash ^= NormalAward.GetHashCode();
      if (BlessAward != 0) hash ^= BlessAward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Time != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Time);
      }
      if (NormalAward != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NormalAward);
      }
      if (BlessAward != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlessAward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Time != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Time);
      }
      if (NormalAward != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NormalAward);
      }
      if (BlessAward != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BlessAward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (NormalAward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NormalAward);
      }
      if (BlessAward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlessAward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewYearCardAwardRecord other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.NormalAward != 0) {
        NormalAward = other.NormalAward;
      }
      if (other.BlessAward != 0) {
        BlessAward = other.BlessAward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadInt32();
            break;
          }
          case 16: {
            NormalAward = input.ReadInt32();
            break;
          }
          case 24: {
            BlessAward = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Time = input.ReadInt32();
            break;
          }
          case 16: {
            NormalAward = input.ReadInt32();
            break;
          }
          case 24: {
            BlessAward = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCNewYearCardAwardRecord : pb::IMessage<SCNewYearCardAwardRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCNewYearCardAwardRecord> _parser = new pb::MessageParser<SCNewYearCardAwardRecord>(() => new SCNewYearCardAwardRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCNewYearCardAwardRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNewYearCardAwardRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNewYearCardAwardRecord(SCNewYearCardAwardRecord other) : this() {
      result_ = other.result_;
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCNewYearCardAwardRecord Clone() {
      return new SCNewYearCardAwardRecord(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.NewYearCardAwardRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.NewYearCardAwardRecord.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.NewYearCardAwardRecord> records_ = new pbc::RepeatedField<global::BYDLD.NewYearCardAwardRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.NewYearCardAwardRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCNewYearCardAwardRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCNewYearCardAwardRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      records_.WriteTo(ref output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCNewYearCardAwardRecord other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 18: {
            records_.AddEntriesFrom(ref input, _repeated_records_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SkillTime : pb::IMessage<SkillTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SkillTime> _parser = new pb::MessageParser<SkillTime>(() => new SkillTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkillTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillTime(SkillTime other) : this() {
      type_ = other.type_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkillTime Clone() {
      return new SkillTime(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private int time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkillTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkillTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkillTime other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSaveSkillTime : pb::IMessage<CSSaveSkillTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSaveSkillTime> _parser = new pb::MessageParser<CSSaveSkillTime>(() => new CSSaveSkillTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSaveSkillTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSaveSkillTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSaveSkillTime(CSSaveSkillTime other) : this() {
      skilTime_ = other.skilTime_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSaveSkillTime Clone() {
      return new CSSaveSkillTime(this);
    }

    /// <summary>Field number for the "skil_time" field.</summary>
    public const int SkilTimeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.SkillTime> _repeated_skilTime_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.SkillTime.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.SkillTime> skilTime_ = new pbc::RepeatedField<global::BYDLD.SkillTime>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.SkillTime> SkilTime {
      get { return skilTime_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSaveSkillTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSaveSkillTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!skilTime_.Equals(other.skilTime_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= skilTime_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      skilTime_.WriteTo(output, _repeated_skilTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      skilTime_.WriteTo(ref output, _repeated_skilTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += skilTime_.CalculateSize(_repeated_skilTime_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSaveSkillTime other) {
      if (other == null) {
        return;
      }
      skilTime_.Add(other.skilTime_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            skilTime_.AddEntriesFrom(input, _repeated_skilTime_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            skilTime_.AddEntriesFrom(ref input, _repeated_skilTime_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSuperTridentShoot : pb::IMessage<CSSuperTridentShoot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSuperTridentShoot> _parser = new pb::MessageParser<CSSuperTridentShoot>(() => new CSSuperTridentShoot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSuperTridentShoot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSuperTridentShoot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSuperTridentShoot(CSSuperTridentShoot other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSuperTridentShoot Clone() {
      return new CSSuperTridentShoot(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSuperTridentShoot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSuperTridentShoot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSuperTridentShoot other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCSuperTridentShoot : pb::IMessage<SCSuperTridentShoot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSuperTridentShoot> _parser = new pb::MessageParser<SCSuperTridentShoot>(() => new SCSuperTridentShoot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSuperTridentShoot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSuperTridentShoot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSuperTridentShoot(SCSuperTridentShoot other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSuperTridentShoot Clone() {
      return new SCSuperTridentShoot(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSuperTridentShoot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSuperTridentShoot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSuperTridentShoot other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSuperTridentAttack : pb::IMessage<CSSuperTridentAttack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSuperTridentAttack> _parser = new pb::MessageParser<CSSuperTridentAttack>(() => new CSSuperTridentAttack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSuperTridentAttack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSuperTridentAttack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSuperTridentAttack(CSSuperTridentAttack other) : this() {
      screenFishes_ = other.screenFishes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSuperTridentAttack Clone() {
      return new CSSuperTridentAttack(this);
    }

    /// <summary>Field number for the "screen_fishes" field.</summary>
    public const int ScreenFishesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_screenFishes_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> screenFishes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ScreenFishes {
      get { return screenFishes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSuperTridentAttack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSuperTridentAttack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!screenFishes_.Equals(other.screenFishes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= screenFishes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      screenFishes_.WriteTo(output, _repeated_screenFishes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      screenFishes_.WriteTo(ref output, _repeated_screenFishes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += screenFishes_.CalculateSize(_repeated_screenFishes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSuperTridentAttack other) {
      if (other == null) {
        return;
      }
      screenFishes_.Add(other.screenFishes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            screenFishes_.AddEntriesFrom(input, _repeated_screenFishes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            screenFishes_.AddEntriesFrom(ref input, _repeated_screenFishes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CommonResp : pb::IMessage<CommonResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommonResp> _parser = new pb::MessageParser<CommonResp>(() => new CommonResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonResp(CommonResp other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonResp Clone() {
      return new CommonResp(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonResp other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSAwardPoolRecord : pb::IMessage<CSAwardPoolRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSAwardPoolRecord> _parser = new pb::MessageParser<CSAwardPoolRecord>(() => new CSAwardPoolRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSAwardPoolRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAwardPoolRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAwardPoolRecord(CSAwardPoolRecord other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAwardPoolRecord Clone() {
      return new CSAwardPoolRecord(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSAwardPoolRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSAwardPoolRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSAwardPoolRecord other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class AwardPoolRecord : pb::IMessage<AwardPoolRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardPoolRecord> _parser = new pb::MessageParser<AwardPoolRecord>(() => new AwardPoolRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwardPoolRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPoolRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPoolRecord(AwardPoolRecord other) : this() {
      time_ = other.time_;
      name_ = other.name_;
      poolId_ = other.poolId_;
      award_ = other.award_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardPoolRecord Clone() {
      return new AwardPoolRecord(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "poolId" field.</summary>
    public const int PoolIdFieldNumber = 3;
    private int poolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoolId {
      get { return poolId_; }
      set {
        poolId_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 4;
    private int award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 5;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwardPoolRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwardPoolRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      if (Name != other.Name) return false;
      if (PoolId != other.PoolId) return false;
      if (Award != other.Award) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PoolId != 0) hash ^= PoolId.GetHashCode();
      if (Award != 0) hash ^= Award.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Time.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Time);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (PoolId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoolId);
      }
      if (Award != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Award);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Time.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Time);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (PoolId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PoolId);
      }
      if (Award != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Award);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PoolId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolId);
      }
      if (Award != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwardPoolRecord other) {
      if (other == null) {
        return;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PoolId != 0) {
        PoolId = other.PoolId;
      }
      if (other.Award != 0) {
        Award = other.Award;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Time = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            PoolId = input.ReadInt32();
            break;
          }
          case 32: {
            Award = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Time = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            PoolId = input.ReadInt32();
            break;
          }
          case 32: {
            Award = input.ReadInt32();
            break;
          }
          case 40: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCAwardPoolRecord : pb::IMessage<SCAwardPoolRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCAwardPoolRecord> _parser = new pb::MessageParser<SCAwardPoolRecord>(() => new SCAwardPoolRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCAwardPoolRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAwardPoolRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAwardPoolRecord(SCAwardPoolRecord other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAwardPoolRecord Clone() {
      return new SCAwardPoolRecord(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.AwardPoolRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.AwardPoolRecord.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AwardPoolRecord> records_ = new pbc::RepeatedField<global::BYDLD.AwardPoolRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AwardPoolRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCAwardPoolRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCAwardPoolRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      records_.WriteTo(ref output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCAwardPoolRecord other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            records_.AddEntriesFrom(ref input, _repeated_records_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSFortuneShoot : pb::IMessage<CSFortuneShoot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSFortuneShoot> _parser = new pb::MessageParser<CSFortuneShoot>(() => new CSFortuneShoot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSFortuneShoot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFortuneShoot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFortuneShoot(CSFortuneShoot other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSFortuneShoot Clone() {
      return new CSFortuneShoot(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSFortuneShoot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSFortuneShoot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSFortuneShoot other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCFortuneShoot : pb::IMessage<SCFortuneShoot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCFortuneShoot> _parser = new pb::MessageParser<SCFortuneShoot>(() => new SCFortuneShoot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCFortuneShoot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFortuneShoot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFortuneShoot(SCFortuneShoot other) : this() {
      chairIdx_ = other.chairIdx_;
      canShoot_ = other.canShoot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCFortuneShoot Clone() {
      return new SCFortuneShoot(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "can_shoot" field.</summary>
    public const int CanShootFieldNumber = 2;
    private bool canShoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanShoot {
      get { return canShoot_; }
      set {
        canShoot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCFortuneShoot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCFortuneShoot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (CanShoot != other.CanShoot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (CanShoot != false) hash ^= CanShoot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (CanShoot != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanShoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (CanShoot != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanShoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (CanShoot != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCFortuneShoot other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.CanShoot != false) {
        CanShoot = other.CanShoot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            CanShoot = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            CanShoot = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IngotInfo : pb::IMessage<IngotInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IngotInfo> _parser = new pb::MessageParser<IngotInfo>(() => new IngotInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IngotInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngotInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngotInfo(IngotInfo other) : this() {
      ingotId_ = other.ingotId_;
      remain_ = other.remain_;
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IngotInfo Clone() {
      return new IngotInfo(this);
    }

    /// <summary>Field number for the "ingot_id" field.</summary>
    public const int IngotIdFieldNumber = 1;
    private int ingotId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IngotId {
      get { return ingotId_; }
      set {
        ingotId_ = value;
      }
    }

    /// <summary>Field number for the "remain" field.</summary>
    public const int RemainFieldNumber = 2;
    private int remain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Remain {
      get { return remain_; }
      set {
        remain_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 3;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IngotInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IngotInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IngotId != other.IngotId) return false;
      if (Remain != other.Remain) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IngotId != 0) hash ^= IngotId.GetHashCode();
      if (Remain != 0) hash ^= Remain.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IngotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IngotId);
      }
      if (Remain != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Remain);
      }
      if (Total != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IngotId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IngotId);
      }
      if (Remain != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Remain);
      }
      if (Total != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IngotId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IngotId);
      }
      if (Remain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Remain);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IngotInfo other) {
      if (other == null) {
        return;
      }
      if (other.IngotId != 0) {
        IngotId = other.IngotId;
      }
      if (other.Remain != 0) {
        Remain = other.Remain;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IngotId = input.ReadInt32();
            break;
          }
          case 16: {
            Remain = input.ReadInt32();
            break;
          }
          case 24: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IngotId = input.ReadInt32();
            break;
          }
          case 16: {
            Remain = input.ReadInt32();
            break;
          }
          case 24: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncFortune : pb::IMessage<SCSyncFortune>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncFortune> _parser = new pb::MessageParser<SCSyncFortune>(() => new SCSyncFortune());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncFortune> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFortune() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFortune(SCSyncFortune other) : this() {
      ingotInfo_ = other.ingotInfo_ != null ? other.ingotInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncFortune Clone() {
      return new SCSyncFortune(this);
    }

    /// <summary>Field number for the "ingot_info" field.</summary>
    public const int IngotInfoFieldNumber = 1;
    private global::BYDLD.IngotInfo ingotInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.IngotInfo IngotInfo {
      get { return ingotInfo_; }
      set {
        ingotInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncFortune);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncFortune other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(IngotInfo, other.IngotInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ingotInfo_ != null) hash ^= IngotInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ingotInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IngotInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ingotInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IngotInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ingotInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IngotInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncFortune other) {
      if (other == null) {
        return;
      }
      if (other.ingotInfo_ != null) {
        if (ingotInfo_ == null) {
          IngotInfo = new global::BYDLD.IngotInfo();
        }
        IngotInfo.MergeFrom(other.IngotInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ingotInfo_ == null) {
              IngotInfo = new global::BYDLD.IngotInfo();
            }
            input.ReadMessage(IngotInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (ingotInfo_ == null) {
              IngotInfo = new global::BYDLD.IngotInfo();
            }
            input.ReadMessage(IngotInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserPoolInfo : pb::IMessage<CSUserPoolInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserPoolInfo> _parser = new pb::MessageParser<CSUserPoolInfo>(() => new CSUserPoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserPoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolInfo(CSUserPoolInfo other) : this() {
      openPage_ = other.openPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolInfo Clone() {
      return new CSUserPoolInfo(this);
    }

    /// <summary>Field number for the "open_page" field.</summary>
    public const int OpenPageFieldNumber = 1;
    private bool openPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OpenPage {
      get { return openPage_; }
      set {
        openPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserPoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserPoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenPage != other.OpenPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenPage != false) hash ^= OpenPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OpenPage != false) {
        output.WriteRawTag(8);
        output.WriteBool(OpenPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OpenPage != false) {
        output.WriteRawTag(8);
        output.WriteBool(OpenPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpenPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserPoolInfo other) {
      if (other == null) {
        return;
      }
      if (other.OpenPage != false) {
        OpenPage = other.OpenPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OpenPage = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OpenPage = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GoodsInfo : pb::IMessage<GoodsInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GoodsInfo> _parser = new pb::MessageParser<GoodsInfo>(() => new GoodsInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoodsInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsInfo(GoodsInfo other) : this() {
      propId_ = other.propId_;
      propNum_ = other.propNum_;
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsInfo Clone() {
      return new GoodsInfo(this);
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 1;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "prop_num" field.</summary>
    public const int PropNumFieldNumber = 2;
    private int propNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropNum {
      get { return propNum_; }
      set {
        propNum_ = value;
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 3;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoodsInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoodsInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropId != other.PropId) return false;
      if (PropNum != other.PropNum) return false;
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (PropNum != 0) hash ^= PropNum.GetHashCode();
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (PropNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropNum);
      }
      if (ClientId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (PropNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropNum);
      }
      if (ClientId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (PropNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropNum);
      }
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoodsInfo other) {
      if (other == null) {
        return;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.PropNum != 0) {
        PropNum = other.PropNum;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            PropNum = input.ReadInt32();
            break;
          }
          case 24: {
            ClientId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            PropNum = input.ReadInt32();
            break;
          }
          case 24: {
            ClientId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserAwardItem : pb::IMessage<UserAwardItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserAwardItem> _parser = new pb::MessageParser<UserAwardItem>(() => new UserAwardItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserAwardItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAwardItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAwardItem(UserAwardItem other) : this() {
      index_ = other.index_;
      itemMax_ = other.itemMax_;
      name_ = other.name_;
      goods_ = other.goods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAwardItem Clone() {
      return new UserAwardItem(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "item_max" field.</summary>
    public const int ItemMaxFieldNumber = 2;
    private int itemMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemMax {
      get { return itemMax_; }
      set {
        itemMax_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "goods" field.</summary>
    public const int GoodsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BYDLD.GoodsInfo> _repeated_goods_codec
        = pb::FieldCodec.ForMessage(34, global::BYDLD.GoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.GoodsInfo> goods_ = new pbc::RepeatedField<global::BYDLD.GoodsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.GoodsInfo> Goods {
      get { return goods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserAwardItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserAwardItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (ItemMax != other.ItemMax) return false;
      if (Name != other.Name) return false;
      if(!goods_.Equals(other.goods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (ItemMax != 0) hash ^= ItemMax.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= goods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (ItemMax != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemMax);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      goods_.WriteTo(output, _repeated_goods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (ItemMax != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemMax);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      goods_.WriteTo(ref output, _repeated_goods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (ItemMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemMax);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += goods_.CalculateSize(_repeated_goods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserAwardItem other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.ItemMax != 0) {
        ItemMax = other.ItemMax;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      goods_.Add(other.goods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            ItemMax = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            goods_.AddEntriesFrom(input, _repeated_goods_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            ItemMax = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserPoolInfo : pb::IMessage<SCUserPoolInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserPoolInfo> _parser = new pb::MessageParser<SCUserPoolInfo>(() => new SCUserPoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserPoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolInfo(SCUserPoolInfo other) : this() {
      chairIdx_ = other.chairIdx_;
      openPage_ = other.openPage_;
      status_ = other.status_;
      count_ = other.count_;
      poolMax_ = other.poolMax_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolInfo Clone() {
      return new SCUserPoolInfo(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "open_page" field.</summary>
    public const int OpenPageFieldNumber = 2;
    private bool openPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OpenPage {
      get { return openPage_; }
      set {
        openPage_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private bool status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "pool_max" field.</summary>
    public const int PoolMaxFieldNumber = 5;
    private int poolMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoolMax {
      get { return poolMax_; }
      set {
        poolMax_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::BYDLD.UserAwardItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(50, global::BYDLD.UserAwardItem.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.UserAwardItem> items_ = new pbc::RepeatedField<global::BYDLD.UserAwardItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.UserAwardItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserPoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserPoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (OpenPage != other.OpenPage) return false;
      if (Status != other.Status) return false;
      if (Count != other.Count) return false;
      if (PoolMax != other.PoolMax) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (OpenPage != false) hash ^= OpenPage.GetHashCode();
      if (Status != false) hash ^= Status.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (PoolMax != 0) hash ^= PoolMax.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (OpenPage != false) {
        output.WriteRawTag(16);
        output.WriteBool(OpenPage);
      }
      if (Status != false) {
        output.WriteRawTag(24);
        output.WriteBool(Status);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (PoolMax != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PoolMax);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (OpenPage != false) {
        output.WriteRawTag(16);
        output.WriteBool(OpenPage);
      }
      if (Status != false) {
        output.WriteRawTag(24);
        output.WriteBool(Status);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (PoolMax != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PoolMax);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (OpenPage != false) {
        size += 1 + 1;
      }
      if (Status != false) {
        size += 1 + 1;
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (PoolMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolMax);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserPoolInfo other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.OpenPage != false) {
        OpenPage = other.OpenPage;
      }
      if (other.Status != false) {
        Status = other.Status;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.PoolMax != 0) {
        PoolMax = other.PoolMax;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            OpenPage = input.ReadBool();
            break;
          }
          case 24: {
            Status = input.ReadBool();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 40: {
            PoolMax = input.ReadInt32();
            break;
          }
          case 50: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            OpenPage = input.ReadBool();
            break;
          }
          case 24: {
            Status = input.ReadBool();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 40: {
            PoolMax = input.ReadInt32();
            break;
          }
          case 50: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserPoolStatus : pb::IMessage<CSUserPoolStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserPoolStatus> _parser = new pb::MessageParser<CSUserPoolStatus>(() => new CSUserPoolStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserPoolStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolStatus(CSUserPoolStatus other) : this() {
      open_ = other.open_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolStatus Clone() {
      return new CSUserPoolStatus(this);
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 1;
    private bool open_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserPoolStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserPoolStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Open != other.Open) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Open != false) hash ^= Open.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Open != false) {
        output.WriteRawTag(8);
        output.WriteBool(Open);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Open != false) {
        output.WriteRawTag(8);
        output.WriteBool(Open);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Open != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserPoolStatus other) {
      if (other == null) {
        return;
      }
      if (other.Open != false) {
        Open = other.Open;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Open = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Open = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserPoolStatus : pb::IMessage<SCUserPoolStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserPoolStatus> _parser = new pb::MessageParser<SCUserPoolStatus>(() => new SCUserPoolStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserPoolStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolStatus(SCUserPoolStatus other) : this() {
      open_ = other.open_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolStatus Clone() {
      return new SCUserPoolStatus(this);
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 1;
    private bool open_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserPoolStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserPoolStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Open != other.Open) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Open != false) hash ^= Open.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Open != false) {
        output.WriteRawTag(8);
        output.WriteBool(Open);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Open != false) {
        output.WriteRawTag(8);
        output.WriteBool(Open);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Open != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserPoolStatus other) {
      if (other == null) {
        return;
      }
      if (other.Open != false) {
        Open = other.Open;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Open = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Open = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserPoolPreDraw : pb::IMessage<CSUserPoolPreDraw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserPoolPreDraw> _parser = new pb::MessageParser<CSUserPoolPreDraw>(() => new CSUserPoolPreDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserPoolPreDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolPreDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolPreDraw(CSUserPoolPreDraw other) : this() {
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolPreDraw Clone() {
      return new CSUserPoolPreDraw(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserPoolPreDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserPoolPreDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserPoolPreDraw other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserPoolPreDraw : pb::IMessage<SCUserPoolPreDraw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserPoolPreDraw> _parser = new pb::MessageParser<SCUserPoolPreDraw>(() => new SCUserPoolPreDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserPoolPreDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolPreDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolPreDraw(SCUserPoolPreDraw other) : this() {
      code_ = other.code_;
      level_ = other.level_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolPreDraw Clone() {
      return new SCUserPoolPreDraw(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserPoolPreDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserPoolPreDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Level != other.Level) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserPoolPreDraw other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserPoolDraw : pb::IMessage<CSUserPoolDraw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserPoolDraw> _parser = new pb::MessageParser<CSUserPoolDraw>(() => new CSUserPoolDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserPoolDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDraw(CSUserPoolDraw other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDraw Clone() {
      return new CSUserPoolDraw(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserPoolDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserPoolDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserPoolDraw other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserPoolDraw : pb::IMessage<SCUserPoolDraw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserPoolDraw> _parser = new pb::MessageParser<SCUserPoolDraw>(() => new SCUserPoolDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserPoolDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDraw(SCUserPoolDraw other) : this() {
      chairIdx_ = other.chairIdx_;
      goods_ = other.goods_.Clone();
      award_ = other.award_ != null ? other.award_.Clone() : null;
      awardCnt_ = other.awardCnt_ != null ? other.awardCnt_.Clone() : null;
      upgradecost_ = other.upgradecost_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDraw Clone() {
      return new SCUserPoolDraw(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "goods" field.</summary>
    public const int GoodsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.GoodsInfo> _repeated_goods_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.GoodsInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.GoodsInfo> goods_ = new pbc::RepeatedField<global::BYDLD.GoodsInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.GoodsInfo> Goods {
      get { return goods_; }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 3;
    private global::BYDLD.GoodsInfo award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.GoodsInfo Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "award_cnt" field.</summary>
    public const int AwardCntFieldNumber = 4;
    private global::BYDLD.Object3 awardCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.Object3 AwardCnt {
      get { return awardCnt_; }
      set {
        awardCnt_ = value;
      }
    }

    /// <summary>Field number for the "upgradecost" field.</summary>
    public const int UpgradecostFieldNumber = 5;
    private int upgradecost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Upgradecost {
      get { return upgradecost_; }
      set {
        upgradecost_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 6;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserPoolDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserPoolDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if(!goods_.Equals(other.goods_)) return false;
      if (!object.Equals(Award, other.Award)) return false;
      if (!object.Equals(AwardCnt, other.AwardCnt)) return false;
      if (Upgradecost != other.Upgradecost) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      hash ^= goods_.GetHashCode();
      if (award_ != null) hash ^= Award.GetHashCode();
      if (awardCnt_ != null) hash ^= AwardCnt.GetHashCode();
      if (Upgradecost != 0) hash ^= Upgradecost.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      goods_.WriteTo(output, _repeated_goods_codec);
      if (award_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Award);
      }
      if (awardCnt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AwardCnt);
      }
      if (Upgradecost != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Upgradecost);
      }
      if (Index != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      goods_.WriteTo(ref output, _repeated_goods_codec);
      if (award_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Award);
      }
      if (awardCnt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AwardCnt);
      }
      if (Upgradecost != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Upgradecost);
      }
      if (Index != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      size += goods_.CalculateSize(_repeated_goods_codec);
      if (award_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Award);
      }
      if (awardCnt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AwardCnt);
      }
      if (Upgradecost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Upgradecost);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserPoolDraw other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      goods_.Add(other.goods_);
      if (other.award_ != null) {
        if (award_ == null) {
          Award = new global::BYDLD.GoodsInfo();
        }
        Award.MergeFrom(other.Award);
      }
      if (other.awardCnt_ != null) {
        if (awardCnt_ == null) {
          AwardCnt = new global::BYDLD.Object3();
        }
        AwardCnt.MergeFrom(other.AwardCnt);
      }
      if (other.Upgradecost != 0) {
        Upgradecost = other.Upgradecost;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18: {
            goods_.AddEntriesFrom(input, _repeated_goods_codec);
            break;
          }
          case 26: {
            if (award_ == null) {
              Award = new global::BYDLD.GoodsInfo();
            }
            input.ReadMessage(Award);
            break;
          }
          case 34: {
            if (awardCnt_ == null) {
              AwardCnt = new global::BYDLD.Object3();
            }
            input.ReadMessage(AwardCnt);
            break;
          }
          case 40: {
            Upgradecost = input.ReadInt32();
            break;
          }
          case 48: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 18: {
            goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
            break;
          }
          case 26: {
            if (award_ == null) {
              Award = new global::BYDLD.GoodsInfo();
            }
            input.ReadMessage(Award);
            break;
          }
          case 34: {
            if (awardCnt_ == null) {
              AwardCnt = new global::BYDLD.Object3();
            }
            input.ReadMessage(AwardCnt);
            break;
          }
          case 40: {
            Upgradecost = input.ReadInt32();
            break;
          }
          case 48: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserPoolAdd : pb::IMessage<SCUserPoolAdd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserPoolAdd> _parser = new pb::MessageParser<SCUserPoolAdd>(() => new SCUserPoolAdd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserPoolAdd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolAdd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolAdd(SCUserPoolAdd other) : this() {
      add_ = other.add_;
      count_ = other.count_;
      firstMax_ = other.firstMax_;
      poolMax_ = other.poolMax_;
      status_ = other.status_;
      levelName_ = other.levelName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolAdd Clone() {
      return new SCUserPoolAdd(this);
    }

    /// <summary>Field number for the "add" field.</summary>
    public const int AddFieldNumber = 1;
    private int add_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Add {
      get { return add_; }
      set {
        add_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "first_max" field.</summary>
    public const int FirstMaxFieldNumber = 3;
    private int firstMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FirstMax {
      get { return firstMax_; }
      set {
        firstMax_ = value;
      }
    }

    /// <summary>Field number for the "pool_max" field.</summary>
    public const int PoolMaxFieldNumber = 4;
    private int poolMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoolMax {
      get { return poolMax_; }
      set {
        poolMax_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private bool status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "level_name" field.</summary>
    public const int LevelNameFieldNumber = 6;
    private string levelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LevelName {
      get { return levelName_; }
      set {
        levelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserPoolAdd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserPoolAdd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Add != other.Add) return false;
      if (Count != other.Count) return false;
      if (FirstMax != other.FirstMax) return false;
      if (PoolMax != other.PoolMax) return false;
      if (Status != other.Status) return false;
      if (LevelName != other.LevelName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Add != 0) hash ^= Add.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (FirstMax != 0) hash ^= FirstMax.GetHashCode();
      if (PoolMax != 0) hash ^= PoolMax.GetHashCode();
      if (Status != false) hash ^= Status.GetHashCode();
      if (LevelName.Length != 0) hash ^= LevelName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Add != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Add);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (FirstMax != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FirstMax);
      }
      if (PoolMax != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PoolMax);
      }
      if (Status != false) {
        output.WriteRawTag(40);
        output.WriteBool(Status);
      }
      if (LevelName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LevelName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Add != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Add);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (FirstMax != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FirstMax);
      }
      if (PoolMax != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PoolMax);
      }
      if (Status != false) {
        output.WriteRawTag(40);
        output.WriteBool(Status);
      }
      if (LevelName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LevelName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Add != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Add);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (FirstMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstMax);
      }
      if (PoolMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoolMax);
      }
      if (Status != false) {
        size += 1 + 1;
      }
      if (LevelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LevelName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserPoolAdd other) {
      if (other == null) {
        return;
      }
      if (other.Add != 0) {
        Add = other.Add;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.FirstMax != 0) {
        FirstMax = other.FirstMax;
      }
      if (other.PoolMax != 0) {
        PoolMax = other.PoolMax;
      }
      if (other.Status != false) {
        Status = other.Status;
      }
      if (other.LevelName.Length != 0) {
        LevelName = other.LevelName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Add = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            FirstMax = input.ReadInt32();
            break;
          }
          case 32: {
            PoolMax = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadBool();
            break;
          }
          case 50: {
            LevelName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Add = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            FirstMax = input.ReadInt32();
            break;
          }
          case 32: {
            PoolMax = input.ReadInt32();
            break;
          }
          case 40: {
            Status = input.ReadBool();
            break;
          }
          case 50: {
            LevelName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResultRank : pb::IMessage<ResultRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResultRank> _parser = new pb::MessageParser<ResultRank>(() => new ResultRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultRank(ResultRank other) : this() {
      idx_ = other.idx_;
      icon_ = other.icon_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultRank Clone() {
      return new ResultRank(this);
    }

    /// <summary>Field number for the "idx" field.</summary>
    public const int IdxFieldNumber = 1;
    private int idx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idx {
      get { return idx_; }
      set {
        idx_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Idx != other.Idx) return false;
      if (Icon != other.Icon) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Idx != 0) hash ^= Idx.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Idx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultRank other) {
      if (other == null) {
        return;
      }
      if (other.Idx != 0) {
        Idx = other.Idx;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCMatchResult : pb::IMessage<SCMatchResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCMatchResult> _parser = new pb::MessageParser<SCMatchResult>(() => new SCMatchResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCMatchResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchResult(SCMatchResult other) : this() {
      matchId_ = other.matchId_;
      rankList_ = other.rankList_.Clone();
      isPack_ = other.isPack_;
      oneselfRank_ = other.oneselfRank_;
      additionSource_ = other.additionSource_;
      reawardAddition_ = other.reawardAddition_;
      matchGoods_ = other.matchGoods_.Clone();
      packGoods_ = other.packGoods_.Clone();
      luckyGoods_ = other.luckyGoods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchResult Clone() {
      return new SCMatchResult(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private int matchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchId {
      get { return matchId_; }
      set {
        matchId_ = value;
      }
    }

    /// <summary>Field number for the "rank_list" field.</summary>
    public const int RankListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.ResultRank> _repeated_rankList_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.ResultRank.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.ResultRank> rankList_ = new pbc::RepeatedField<global::BYDLD.ResultRank>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.ResultRank> RankList {
      get { return rankList_; }
    }

    /// <summary>Field number for the "isPack" field.</summary>
    public const int IsPackFieldNumber = 3;
    private bool isPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPack {
      get { return isPack_; }
      set {
        isPack_ = value;
      }
    }

    /// <summary>Field number for the "oneself_rank" field.</summary>
    public const int OneselfRankFieldNumber = 4;
    private int oneselfRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OneselfRank {
      get { return oneselfRank_; }
      set {
        oneselfRank_ = value;
      }
    }

    /// <summary>Field number for the "addition_source" field.</summary>
    public const int AdditionSourceFieldNumber = 5;
    private int additionSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdditionSource {
      get { return additionSource_; }
      set {
        additionSource_ = value;
      }
    }

    /// <summary>Field number for the "reaward_addition" field.</summary>
    public const int ReawardAdditionFieldNumber = 6;
    private int reawardAddition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReawardAddition {
      get { return reawardAddition_; }
      set {
        reawardAddition_ = value;
      }
    }

    /// <summary>Field number for the "match_goods" field.</summary>
    public const int MatchGoodsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_matchGoods_codec
        = pb::FieldCodec.ForMessage(58, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> matchGoods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> MatchGoods {
      get { return matchGoods_; }
    }

    /// <summary>Field number for the "pack_goods" field.</summary>
    public const int PackGoodsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_packGoods_codec
        = pb::FieldCodec.ForMessage(66, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> packGoods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> PackGoods {
      get { return packGoods_; }
    }

    /// <summary>Field number for the "lucky_goods" field.</summary>
    public const int LuckyGoodsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_luckyGoods_codec
        = pb::FieldCodec.ForMessage(74, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> luckyGoods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> LuckyGoods {
      get { return luckyGoods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCMatchResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCMatchResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if(!rankList_.Equals(other.rankList_)) return false;
      if (IsPack != other.IsPack) return false;
      if (OneselfRank != other.OneselfRank) return false;
      if (AdditionSource != other.AdditionSource) return false;
      if (ReawardAddition != other.ReawardAddition) return false;
      if(!matchGoods_.Equals(other.matchGoods_)) return false;
      if(!packGoods_.Equals(other.packGoods_)) return false;
      if(!luckyGoods_.Equals(other.luckyGoods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId != 0) hash ^= MatchId.GetHashCode();
      hash ^= rankList_.GetHashCode();
      if (IsPack != false) hash ^= IsPack.GetHashCode();
      if (OneselfRank != 0) hash ^= OneselfRank.GetHashCode();
      if (AdditionSource != 0) hash ^= AdditionSource.GetHashCode();
      if (ReawardAddition != 0) hash ^= ReawardAddition.GetHashCode();
      hash ^= matchGoods_.GetHashCode();
      hash ^= packGoods_.GetHashCode();
      hash ^= luckyGoods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      rankList_.WriteTo(output, _repeated_rankList_codec);
      if (IsPack != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsPack);
      }
      if (OneselfRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OneselfRank);
      }
      if (AdditionSource != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AdditionSource);
      }
      if (ReawardAddition != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReawardAddition);
      }
      matchGoods_.WriteTo(output, _repeated_matchGoods_codec);
      packGoods_.WriteTo(output, _repeated_packGoods_codec);
      luckyGoods_.WriteTo(output, _repeated_luckyGoods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      rankList_.WriteTo(ref output, _repeated_rankList_codec);
      if (IsPack != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsPack);
      }
      if (OneselfRank != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OneselfRank);
      }
      if (AdditionSource != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AdditionSource);
      }
      if (ReawardAddition != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ReawardAddition);
      }
      matchGoods_.WriteTo(ref output, _repeated_matchGoods_codec);
      packGoods_.WriteTo(ref output, _repeated_packGoods_codec);
      luckyGoods_.WriteTo(ref output, _repeated_luckyGoods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchId);
      }
      size += rankList_.CalculateSize(_repeated_rankList_codec);
      if (IsPack != false) {
        size += 1 + 1;
      }
      if (OneselfRank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OneselfRank);
      }
      if (AdditionSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdditionSource);
      }
      if (ReawardAddition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReawardAddition);
      }
      size += matchGoods_.CalculateSize(_repeated_matchGoods_codec);
      size += packGoods_.CalculateSize(_repeated_packGoods_codec);
      size += luckyGoods_.CalculateSize(_repeated_luckyGoods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCMatchResult other) {
      if (other == null) {
        return;
      }
      if (other.MatchId != 0) {
        MatchId = other.MatchId;
      }
      rankList_.Add(other.rankList_);
      if (other.IsPack != false) {
        IsPack = other.IsPack;
      }
      if (other.OneselfRank != 0) {
        OneselfRank = other.OneselfRank;
      }
      if (other.AdditionSource != 0) {
        AdditionSource = other.AdditionSource;
      }
      if (other.ReawardAddition != 0) {
        ReawardAddition = other.ReawardAddition;
      }
      matchGoods_.Add(other.matchGoods_);
      packGoods_.Add(other.packGoods_);
      luckyGoods_.Add(other.luckyGoods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
          case 18: {
            rankList_.AddEntriesFrom(input, _repeated_rankList_codec);
            break;
          }
          case 24: {
            IsPack = input.ReadBool();
            break;
          }
          case 32: {
            OneselfRank = input.ReadInt32();
            break;
          }
          case 40: {
            AdditionSource = input.ReadInt32();
            break;
          }
          case 48: {
            ReawardAddition = input.ReadInt32();
            break;
          }
          case 58: {
            matchGoods_.AddEntriesFrom(input, _repeated_matchGoods_codec);
            break;
          }
          case 66: {
            packGoods_.AddEntriesFrom(input, _repeated_packGoods_codec);
            break;
          }
          case 74: {
            luckyGoods_.AddEntriesFrom(input, _repeated_luckyGoods_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
          case 18: {
            rankList_.AddEntriesFrom(ref input, _repeated_rankList_codec);
            break;
          }
          case 24: {
            IsPack = input.ReadBool();
            break;
          }
          case 32: {
            OneselfRank = input.ReadInt32();
            break;
          }
          case 40: {
            AdditionSource = input.ReadInt32();
            break;
          }
          case 48: {
            ReawardAddition = input.ReadInt32();
            break;
          }
          case 58: {
            matchGoods_.AddEntriesFrom(ref input, _repeated_matchGoods_codec);
            break;
          }
          case 66: {
            packGoods_.AddEntriesFrom(ref input, _repeated_packGoods_codec);
            break;
          }
          case 74: {
            luckyGoods_.AddEntriesFrom(ref input, _repeated_luckyGoods_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatchPackAddition : pb::IMessage<MatchPackAddition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchPackAddition> _parser = new pb::MessageParser<MatchPackAddition>(() => new MatchPackAddition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchPackAddition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchPackAddition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchPackAddition(MatchPackAddition other) : this() {
      id_ = other.id_;
      isBuy_ = other.isBuy_;
      scoreAddition_ = other.scoreAddition_;
      reawardAddition_ = other.reawardAddition_;
      card_ = other.card_;
      sec_ = other.sec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchPackAddition Clone() {
      return new MatchPackAddition(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_buy" field.</summary>
    public const int IsBuyFieldNumber = 2;
    private bool isBuy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuy {
      get { return isBuy_; }
      set {
        isBuy_ = value;
      }
    }

    /// <summary>Field number for the "score_addition" field.</summary>
    public const int ScoreAdditionFieldNumber = 3;
    private float scoreAddition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ScoreAddition {
      get { return scoreAddition_; }
      set {
        scoreAddition_ = value;
      }
    }

    /// <summary>Field number for the "reaward_addition" field.</summary>
    public const int ReawardAdditionFieldNumber = 4;
    private float reawardAddition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ReawardAddition {
      get { return reawardAddition_; }
      set {
        reawardAddition_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 5;
    private int card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "sec" field.</summary>
    public const int SecFieldNumber = 6;
    private int sec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sec {
      get { return sec_; }
      set {
        sec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchPackAddition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchPackAddition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsBuy != other.IsBuy) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScoreAddition, other.ScoreAddition)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ReawardAddition, other.ReawardAddition)) return false;
      if (Card != other.Card) return false;
      if (Sec != other.Sec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (IsBuy != false) hash ^= IsBuy.GetHashCode();
      if (ScoreAddition != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScoreAddition);
      if (ReawardAddition != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ReawardAddition);
      if (Card != 0) hash ^= Card.GetHashCode();
      if (Sec != 0) hash ^= Sec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (IsBuy != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuy);
      }
      if (ScoreAddition != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ScoreAddition);
      }
      if (ReawardAddition != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ReawardAddition);
      }
      if (Card != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Card);
      }
      if (Sec != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Sec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (IsBuy != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuy);
      }
      if (ScoreAddition != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ScoreAddition);
      }
      if (ReawardAddition != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ReawardAddition);
      }
      if (Card != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Card);
      }
      if (Sec != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Sec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (IsBuy != false) {
        size += 1 + 1;
      }
      if (ScoreAddition != 0F) {
        size += 1 + 4;
      }
      if (ReawardAddition != 0F) {
        size += 1 + 4;
      }
      if (Card != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Card);
      }
      if (Sec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchPackAddition other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.IsBuy != false) {
        IsBuy = other.IsBuy;
      }
      if (other.ScoreAddition != 0F) {
        ScoreAddition = other.ScoreAddition;
      }
      if (other.ReawardAddition != 0F) {
        ReawardAddition = other.ReawardAddition;
      }
      if (other.Card != 0) {
        Card = other.Card;
      }
      if (other.Sec != 0) {
        Sec = other.Sec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            IsBuy = input.ReadBool();
            break;
          }
          case 29: {
            ScoreAddition = input.ReadFloat();
            break;
          }
          case 37: {
            ReawardAddition = input.ReadFloat();
            break;
          }
          case 40: {
            Card = input.ReadInt32();
            break;
          }
          case 48: {
            Sec = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            IsBuy = input.ReadBool();
            break;
          }
          case 29: {
            ScoreAddition = input.ReadFloat();
            break;
          }
          case 37: {
            ReawardAddition = input.ReadFloat();
            break;
          }
          case 40: {
            Card = input.ReadInt32();
            break;
          }
          case 48: {
            Sec = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSMatchPackAddition : pb::IMessage<CSMatchPackAddition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSMatchPackAddition> _parser = new pb::MessageParser<CSMatchPackAddition>(() => new CSMatchPackAddition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSMatchPackAddition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMatchPackAddition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMatchPackAddition(CSMatchPackAddition other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMatchPackAddition Clone() {
      return new CSMatchPackAddition(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSMatchPackAddition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSMatchPackAddition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSMatchPackAddition other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCMatchPackAddition : pb::IMessage<SCMatchPackAddition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCMatchPackAddition> _parser = new pb::MessageParser<SCMatchPackAddition>(() => new SCMatchPackAddition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCMatchPackAddition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchPackAddition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchPackAddition(SCMatchPackAddition other) : this() {
      addition_ = other.addition_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchPackAddition Clone() {
      return new SCMatchPackAddition(this);
    }

    /// <summary>Field number for the "addition" field.</summary>
    public const int AdditionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.MatchPackAddition> _repeated_addition_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.MatchPackAddition.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.MatchPackAddition> addition_ = new pbc::RepeatedField<global::BYDLD.MatchPackAddition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.MatchPackAddition> Addition {
      get { return addition_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCMatchPackAddition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCMatchPackAddition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addition_.Equals(other.addition_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addition_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      addition_.WriteTo(output, _repeated_addition_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      addition_.WriteTo(ref output, _repeated_addition_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addition_.CalculateSize(_repeated_addition_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCMatchPackAddition other) {
      if (other == null) {
        return;
      }
      addition_.Add(other.addition_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addition_.AddEntriesFrom(input, _repeated_addition_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            addition_.AddEntriesFrom(ref input, _repeated_addition_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCMatchPackInvail : pb::IMessage<SCMatchPackInvail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCMatchPackInvail> _parser = new pb::MessageParser<SCMatchPackInvail>(() => new SCMatchPackInvail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCMatchPackInvail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchPackInvail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchPackInvail(SCMatchPackInvail other) : this() {
      packId_ = other.packId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMatchPackInvail Clone() {
      return new SCMatchPackInvail(this);
    }

    /// <summary>Field number for the "packId" field.</summary>
    public const int PackIdFieldNumber = 1;
    private string packId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackId {
      get { return packId_; }
      set {
        packId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCMatchPackInvail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCMatchPackInvail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackId != other.PackId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PackId.Length != 0) hash ^= PackId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCMatchPackInvail other) {
      if (other == null) {
        return;
      }
      if (other.PackId.Length != 0) {
        PackId = other.PackId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PackId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PackId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HttpResult : pb::IMessage<HttpResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HttpResult> _parser = new pb::MessageParser<HttpResult>(() => new HttpResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpResult(HttpResult other) : this() {
      en_ = other.en_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpResult Clone() {
      return new HttpResult(this);
    }

    /// <summary>Field number for the "En" field.</summary>
    public const int EnFieldNumber = 1;
    private int en_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int En {
      get { return en_; }
      set {
        en_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 2;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (En != other.En) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (En != 0) hash ^= En.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (En != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(En);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (En != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(En);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (En != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(En);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpResult other) {
      if (other == null) {
        return;
      }
      if (other.En != 0) {
        En = other.En;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            En = input.ReadInt32();
            break;
          }
          case 18: {
            Data = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            En = input.ReadInt32();
            break;
          }
          case 18: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHBonusPool : pb::IMessage<CSHBonusPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHBonusPool> _parser = new pb::MessageParser<CSHBonusPool>(() => new CSHBonusPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHBonusPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHBonusPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHBonusPool(CSHBonusPool other) : this() {
      mathcId_ = other.mathcId_;
      timeId_ = other.timeId_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHBonusPool Clone() {
      return new CSHBonusPool(this);
    }

    /// <summary>Field number for the "mathcId" field.</summary>
    public const int MathcIdFieldNumber = 1;
    private int mathcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MathcId {
      get { return mathcId_; }
      set {
        mathcId_ = value;
      }
    }

    /// <summary>Field number for the "timeId" field.</summary>
    public const int TimeIdFieldNumber = 2;
    private int timeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeId {
      get { return timeId_; }
      set {
        timeId_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 3;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHBonusPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHBonusPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MathcId != other.MathcId) return false;
      if (TimeId != other.TimeId) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MathcId != 0) hash ^= MathcId.GetHashCode();
      if (TimeId != 0) hash ^= TimeId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MathcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TimeId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MathcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TimeId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MathcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MathcId);
      }
      if (TimeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHBonusPool other) {
      if (other == null) {
        return;
      }
      if (other.MathcId != 0) {
        MathcId = other.MathcId;
      }
      if (other.TimeId != 0) {
        TimeId = other.TimeId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MathcId = input.ReadInt32();
            break;
          }
          case 16: {
            TimeId = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MathcId = input.ReadInt32();
            break;
          }
          case 16: {
            TimeId = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HBonusPool : pb::IMessage<HBonusPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HBonusPool> _parser = new pb::MessageParser<HBonusPool>(() => new HBonusPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HBonusPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HBonusPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HBonusPool(HBonusPool other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HBonusPool Clone() {
      return new HBonusPool(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HBonusPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HBonusPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HBonusPool other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHBonusPool : pb::IMessage<SCHBonusPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHBonusPool> _parser = new pb::MessageParser<SCHBonusPool>(() => new SCHBonusPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHBonusPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHBonusPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHBonusPool(SCHBonusPool other) : this() {
      pool_ = other.pool_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHBonusPool Clone() {
      return new SCHBonusPool(this);
    }

    /// <summary>Field number for the "pool" field.</summary>
    public const int PoolFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.HBonusPool> _repeated_pool_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.HBonusPool.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.HBonusPool> pool_ = new pbc::RepeatedField<global::BYDLD.HBonusPool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.HBonusPool> Pool {
      get { return pool_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHBonusPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHBonusPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pool_.Equals(other.pool_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pool_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pool_.WriteTo(output, _repeated_pool_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pool_.WriteTo(ref output, _repeated_pool_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pool_.CalculateSize(_repeated_pool_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHBonusPool other) {
      if (other == null) {
        return;
      }
      pool_.Add(other.pool_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pool_.AddEntriesFrom(input, _repeated_pool_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pool_.AddEntriesFrom(ref input, _repeated_pool_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHRankBar : pb::IMessage<CSHRankBar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHRankBar> _parser = new pb::MessageParser<CSHRankBar>(() => new CSHRankBar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHRankBar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHRankBar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHRankBar(CSHRankBar other) : this() {
      mathcId_ = other.mathcId_;
      timeId_ = other.timeId_;
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHRankBar Clone() {
      return new CSHRankBar(this);
    }

    /// <summary>Field number for the "mathcId" field.</summary>
    public const int MathcIdFieldNumber = 1;
    private int mathcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MathcId {
      get { return mathcId_; }
      set {
        mathcId_ = value;
      }
    }

    /// <summary>Field number for the "timeId" field.</summary>
    public const int TimeIdFieldNumber = 2;
    private int timeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeId {
      get { return timeId_; }
      set {
        timeId_ = value;
      }
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 3;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHRankBar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHRankBar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MathcId != other.MathcId) return false;
      if (TimeId != other.TimeId) return false;
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MathcId != 0) hash ^= MathcId.GetHashCode();
      if (TimeId != 0) hash ^= TimeId.GetHashCode();
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MathcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TimeId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MathcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TimeId);
      }
      if (PlayerId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MathcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MathcId);
      }
      if (TimeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeId);
      }
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHRankBar other) {
      if (other == null) {
        return;
      }
      if (other.MathcId != 0) {
        MathcId = other.MathcId;
      }
      if (other.TimeId != 0) {
        TimeId = other.TimeId;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MathcId = input.ReadInt32();
            break;
          }
          case 16: {
            TimeId = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MathcId = input.ReadInt32();
            break;
          }
          case 16: {
            TimeId = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHRankBar : pb::IMessage<SCHRankBar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHRankBar> _parser = new pb::MessageParser<SCHRankBar>(() => new SCHRankBar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHRankBar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHRankBar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHRankBar(SCHRankBar other) : this() {
      idx_ = other.idx_;
      total_ = other.total_;
      reaward_ = other.reaward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHRankBar Clone() {
      return new SCHRankBar(this);
    }

    /// <summary>Field number for the "idx" field.</summary>
    public const int IdxFieldNumber = 1;
    private int idx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idx {
      get { return idx_; }
      set {
        idx_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "reaward" field.</summary>
    public const int ReawardFieldNumber = 3;
    private int reaward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Reaward {
      get { return reaward_; }
      set {
        reaward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHRankBar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHRankBar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Idx != other.Idx) return false;
      if (Total != other.Total) return false;
      if (Reaward != other.Reaward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Idx != 0) hash ^= Idx.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (Reaward != 0) hash ^= Reaward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (Reaward != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Reaward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (Reaward != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Reaward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Idx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (Reaward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reaward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHRankBar other) {
      if (other == null) {
        return;
      }
      if (other.Idx != 0) {
        Idx = other.Idx;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      if (other.Reaward != 0) {
        Reaward = other.Reaward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 24: {
            Reaward = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 24: {
            Reaward = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RealRank : pb::IMessage<RealRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RealRank> _parser = new pb::MessageParser<RealRank>(() => new RealRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RealRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RealRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RealRank(RealRank other) : this() {
      idx_ = other.idx_;
      icon_ = other.icon_;
      name_ = other.name_;
      score_ = other.score_;
      goods_ = other.goods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RealRank Clone() {
      return new RealRank(this);
    }

    /// <summary>Field number for the "idx" field.</summary>
    public const int IdxFieldNumber = 1;
    private int idx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idx {
      get { return idx_; }
      set {
        idx_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "goods" field.</summary>
    public const int GoodsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_goods_codec
        = pb::FieldCodec.ForMessage(42, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> goods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> Goods {
      get { return goods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RealRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RealRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Idx != other.Idx) return false;
      if (Icon != other.Icon) return false;
      if (Name != other.Name) return false;
      if (Score != other.Score) return false;
      if(!goods_.Equals(other.goods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Idx != 0) hash ^= Idx.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      hash ^= goods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      goods_.WriteTo(output, _repeated_goods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Score != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Score);
      }
      goods_.WriteTo(ref output, _repeated_goods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Idx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      size += goods_.CalculateSize(_repeated_goods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RealRank other) {
      if (other == null) {
        return;
      }
      if (other.Idx != 0) {
        Idx = other.Idx;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      goods_.Add(other.goods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
          case 42: {
            goods_.AddEntriesFrom(input, _repeated_goods_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Score = input.ReadInt32();
            break;
          }
          case 42: {
            goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHRealRank : pb::IMessage<CSHRealRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHRealRank> _parser = new pb::MessageParser<CSHRealRank>(() => new CSHRealRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHRealRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHRealRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHRealRank(CSHRealRank other) : this() {
      playerId_ = other.playerId_;
      mathcId_ = other.mathcId_;
      timeId_ = other.timeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHRealRank Clone() {
      return new CSHRealRank(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "mathcId" field.</summary>
    public const int MathcIdFieldNumber = 2;
    private int mathcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MathcId {
      get { return mathcId_; }
      set {
        mathcId_ = value;
      }
    }

    /// <summary>Field number for the "timeId" field.</summary>
    public const int TimeIdFieldNumber = 3;
    private int timeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeId {
      get { return timeId_; }
      set {
        timeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHRealRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHRealRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (MathcId != other.MathcId) return false;
      if (TimeId != other.TimeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (MathcId != 0) hash ^= MathcId.GetHashCode();
      if (TimeId != 0) hash ^= TimeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (MathcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TimeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (MathcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TimeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (MathcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MathcId);
      }
      if (TimeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHRealRank other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.MathcId != 0) {
        MathcId = other.MathcId;
      }
      if (other.TimeId != 0) {
        TimeId = other.TimeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            MathcId = input.ReadInt32();
            break;
          }
          case 24: {
            TimeId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            MathcId = input.ReadInt32();
            break;
          }
          case 24: {
            TimeId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHRealRank : pb::IMessage<SCHRealRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHRealRank> _parser = new pb::MessageParser<SCHRealRank>(() => new SCHRealRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHRealRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[162]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHRealRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHRealRank(SCHRealRank other) : this() {
      realRank_ = other.realRank_.Clone();
      onselfRank_ = other.onselfRank_ != null ? other.onselfRank_.Clone() : null;
      totalNum_ = other.totalNum_;
      scoreAddition_ = other.scoreAddition_;
      rewardAddition_ = other.rewardAddition_;
      cardAddition_ = other.cardAddition_;
      vipAddition_ = other.vipAddition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHRealRank Clone() {
      return new SCHRealRank(this);
    }

    /// <summary>Field number for the "real_rank" field.</summary>
    public const int RealRankFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.RealRank> _repeated_realRank_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.RealRank.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.RealRank> realRank_ = new pbc::RepeatedField<global::BYDLD.RealRank>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.RealRank> RealRank {
      get { return realRank_; }
    }

    /// <summary>Field number for the "onself_rank" field.</summary>
    public const int OnselfRankFieldNumber = 2;
    private global::BYDLD.RealRank onselfRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.RealRank OnselfRank {
      get { return onselfRank_; }
      set {
        onselfRank_ = value;
      }
    }

    /// <summary>Field number for the "total_num" field.</summary>
    public const int TotalNumFieldNumber = 3;
    private int totalNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalNum {
      get { return totalNum_; }
      set {
        totalNum_ = value;
      }
    }

    /// <summary>Field number for the "score_addition" field.</summary>
    public const int ScoreAdditionFieldNumber = 4;
    private int scoreAddition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScoreAddition {
      get { return scoreAddition_; }
      set {
        scoreAddition_ = value;
      }
    }

    /// <summary>Field number for the "reward_addition" field.</summary>
    public const int RewardAdditionFieldNumber = 5;
    private int rewardAddition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardAddition {
      get { return rewardAddition_; }
      set {
        rewardAddition_ = value;
      }
    }

    /// <summary>Field number for the "card_addition" field.</summary>
    public const int CardAdditionFieldNumber = 6;
    private int cardAddition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardAddition {
      get { return cardAddition_; }
      set {
        cardAddition_ = value;
      }
    }

    /// <summary>Field number for the "vip_addition" field.</summary>
    public const int VipAdditionFieldNumber = 7;
    private int vipAddition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipAddition {
      get { return vipAddition_; }
      set {
        vipAddition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHRealRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHRealRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!realRank_.Equals(other.realRank_)) return false;
      if (!object.Equals(OnselfRank, other.OnselfRank)) return false;
      if (TotalNum != other.TotalNum) return false;
      if (ScoreAddition != other.ScoreAddition) return false;
      if (RewardAddition != other.RewardAddition) return false;
      if (CardAddition != other.CardAddition) return false;
      if (VipAddition != other.VipAddition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= realRank_.GetHashCode();
      if (onselfRank_ != null) hash ^= OnselfRank.GetHashCode();
      if (TotalNum != 0) hash ^= TotalNum.GetHashCode();
      if (ScoreAddition != 0) hash ^= ScoreAddition.GetHashCode();
      if (RewardAddition != 0) hash ^= RewardAddition.GetHashCode();
      if (CardAddition != 0) hash ^= CardAddition.GetHashCode();
      if (VipAddition != 0) hash ^= VipAddition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      realRank_.WriteTo(output, _repeated_realRank_codec);
      if (onselfRank_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OnselfRank);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalNum);
      }
      if (ScoreAddition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ScoreAddition);
      }
      if (RewardAddition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardAddition);
      }
      if (CardAddition != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CardAddition);
      }
      if (VipAddition != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(VipAddition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      realRank_.WriteTo(ref output, _repeated_realRank_codec);
      if (onselfRank_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OnselfRank);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalNum);
      }
      if (ScoreAddition != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ScoreAddition);
      }
      if (RewardAddition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardAddition);
      }
      if (CardAddition != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CardAddition);
      }
      if (VipAddition != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(VipAddition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += realRank_.CalculateSize(_repeated_realRank_codec);
      if (onselfRank_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnselfRank);
      }
      if (TotalNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (ScoreAddition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScoreAddition);
      }
      if (RewardAddition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardAddition);
      }
      if (CardAddition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardAddition);
      }
      if (VipAddition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipAddition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHRealRank other) {
      if (other == null) {
        return;
      }
      realRank_.Add(other.realRank_);
      if (other.onselfRank_ != null) {
        if (onselfRank_ == null) {
          OnselfRank = new global::BYDLD.RealRank();
        }
        OnselfRank.MergeFrom(other.OnselfRank);
      }
      if (other.TotalNum != 0) {
        TotalNum = other.TotalNum;
      }
      if (other.ScoreAddition != 0) {
        ScoreAddition = other.ScoreAddition;
      }
      if (other.RewardAddition != 0) {
        RewardAddition = other.RewardAddition;
      }
      if (other.CardAddition != 0) {
        CardAddition = other.CardAddition;
      }
      if (other.VipAddition != 0) {
        VipAddition = other.VipAddition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            realRank_.AddEntriesFrom(input, _repeated_realRank_codec);
            break;
          }
          case 18: {
            if (onselfRank_ == null) {
              OnselfRank = new global::BYDLD.RealRank();
            }
            input.ReadMessage(OnselfRank);
            break;
          }
          case 24: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 32: {
            ScoreAddition = input.ReadInt32();
            break;
          }
          case 40: {
            RewardAddition = input.ReadInt32();
            break;
          }
          case 48: {
            CardAddition = input.ReadInt32();
            break;
          }
          case 56: {
            VipAddition = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            realRank_.AddEntriesFrom(ref input, _repeated_realRank_codec);
            break;
          }
          case 18: {
            if (onselfRank_ == null) {
              OnselfRank = new global::BYDLD.RealRank();
            }
            input.ReadMessage(OnselfRank);
            break;
          }
          case 24: {
            TotalNum = input.ReadInt32();
            break;
          }
          case 32: {
            ScoreAddition = input.ReadInt32();
            break;
          }
          case 40: {
            RewardAddition = input.ReadInt32();
            break;
          }
          case 48: {
            CardAddition = input.ReadInt32();
            break;
          }
          case 56: {
            VipAddition = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Reward : pb::IMessage<Reward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Reward> _parser = new pb::MessageParser<Reward>(() => new Reward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[163]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward(Reward other) : this() {
      idxl_ = other.idxl_;
      idxr_ = other.idxr_;
      goods_ = other.goods_.Clone();
      lucky_ = other.lucky_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward Clone() {
      return new Reward(this);
    }

    /// <summary>Field number for the "idxl" field.</summary>
    public const int IdxlFieldNumber = 1;
    private int idxl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idxl {
      get { return idxl_; }
      set {
        idxl_ = value;
      }
    }

    /// <summary>Field number for the "idxr" field.</summary>
    public const int IdxrFieldNumber = 2;
    private int idxr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idxr {
      get { return idxr_; }
      set {
        idxr_ = value;
      }
    }

    /// <summary>Field number for the "goods" field.</summary>
    public const int GoodsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_goods_codec
        = pb::FieldCodec.ForMessage(26, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> goods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> Goods {
      get { return goods_; }
    }

    /// <summary>Field number for the "lucky" field.</summary>
    public const int LuckyFieldNumber = 4;
    private string lucky_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lucky {
      get { return lucky_; }
      set {
        lucky_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Idxl != other.Idxl) return false;
      if (Idxr != other.Idxr) return false;
      if(!goods_.Equals(other.goods_)) return false;
      if (Lucky != other.Lucky) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Idxl != 0) hash ^= Idxl.GetHashCode();
      if (Idxr != 0) hash ^= Idxr.GetHashCode();
      hash ^= goods_.GetHashCode();
      if (Lucky.Length != 0) hash ^= Lucky.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Idxl != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idxl);
      }
      if (Idxr != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Idxr);
      }
      goods_.WriteTo(output, _repeated_goods_codec);
      if (Lucky.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Lucky);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Idxl != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idxl);
      }
      if (Idxr != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Idxr);
      }
      goods_.WriteTo(ref output, _repeated_goods_codec);
      if (Lucky.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Lucky);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Idxl != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idxl);
      }
      if (Idxr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idxr);
      }
      size += goods_.CalculateSize(_repeated_goods_codec);
      if (Lucky.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lucky);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reward other) {
      if (other == null) {
        return;
      }
      if (other.Idxl != 0) {
        Idxl = other.Idxl;
      }
      if (other.Idxr != 0) {
        Idxr = other.Idxr;
      }
      goods_.Add(other.goods_);
      if (other.Lucky.Length != 0) {
        Lucky = other.Lucky;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Idxl = input.ReadInt32();
            break;
          }
          case 16: {
            Idxr = input.ReadInt32();
            break;
          }
          case 26: {
            goods_.AddEntriesFrom(input, _repeated_goods_codec);
            break;
          }
          case 34: {
            Lucky = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Idxl = input.ReadInt32();
            break;
          }
          case 16: {
            Idxr = input.ReadInt32();
            break;
          }
          case 26: {
            goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
            break;
          }
          case 34: {
            Lucky = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHReward : pb::IMessage<CSHReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHReward> _parser = new pb::MessageParser<CSHReward>(() => new CSHReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[164]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHReward(CSHReward other) : this() {
      mathcId_ = other.mathcId_;
      timeId_ = other.timeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHReward Clone() {
      return new CSHReward(this);
    }

    /// <summary>Field number for the "mathcId" field.</summary>
    public const int MathcIdFieldNumber = 1;
    private int mathcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MathcId {
      get { return mathcId_; }
      set {
        mathcId_ = value;
      }
    }

    /// <summary>Field number for the "timeId" field.</summary>
    public const int TimeIdFieldNumber = 2;
    private int timeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeId {
      get { return timeId_; }
      set {
        timeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MathcId != other.MathcId) return false;
      if (TimeId != other.TimeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MathcId != 0) hash ^= MathcId.GetHashCode();
      if (TimeId != 0) hash ^= TimeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MathcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TimeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MathcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TimeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MathcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MathcId);
      }
      if (TimeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHReward other) {
      if (other == null) {
        return;
      }
      if (other.MathcId != 0) {
        MathcId = other.MathcId;
      }
      if (other.TimeId != 0) {
        TimeId = other.TimeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MathcId = input.ReadInt32();
            break;
          }
          case 16: {
            TimeId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MathcId = input.ReadInt32();
            break;
          }
          case 16: {
            TimeId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHReward : pb::IMessage<SCHReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHReward> _parser = new pb::MessageParser<SCHReward>(() => new SCHReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[165]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHReward(SCHReward other) : this() {
      rewards_ = other.rewards_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHReward Clone() {
      return new SCHReward(this);
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 1;
    private int rewards_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rewards {
      get { return rewards_; }
      set {
        rewards_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rewards != other.Rewards) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Rewards != 0) hash ^= Rewards.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Rewards != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rewards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Rewards != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Rewards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Rewards != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rewards);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHReward other) {
      if (other == null) {
        return;
      }
      if (other.Rewards != 0) {
        Rewards = other.Rewards;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Rewards = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Rewards = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHMatchInfoTip : pb::IMessage<CSHMatchInfoTip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHMatchInfoTip> _parser = new pb::MessageParser<CSHMatchInfoTip>(() => new CSHMatchInfoTip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHMatchInfoTip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[166]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHMatchInfoTip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHMatchInfoTip(CSHMatchInfoTip other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHMatchInfoTip Clone() {
      return new CSHMatchInfoTip(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHMatchInfoTip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHMatchInfoTip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHMatchInfoTip other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class MatchInfoTip : pb::IMessage<MatchInfoTip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatchInfoTip> _parser = new pb::MessageParser<MatchInfoTip>(() => new MatchInfoTip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchInfoTip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[167]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchInfoTip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchInfoTip(MatchInfoTip other) : this() {
      name_ = other.name_;
      mathcId_ = other.mathcId_;
      time_ = other.time_;
      goods_ = other.goods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchInfoTip Clone() {
      return new MatchInfoTip(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mathcId" field.</summary>
    public const int MathcIdFieldNumber = 2;
    private int mathcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MathcId {
      get { return mathcId_; }
      set {
        mathcId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "goods" field.</summary>
    public const int GoodsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_goods_codec
        = pb::FieldCodec.ForMessage(34, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> goods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> Goods {
      get { return goods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchInfoTip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchInfoTip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (MathcId != other.MathcId) return false;
      if (Time != other.Time) return false;
      if(!goods_.Equals(other.goods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MathcId != 0) hash ^= MathcId.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      hash ^= goods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (MathcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MathcId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      goods_.WriteTo(output, _repeated_goods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (MathcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MathcId);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      goods_.WriteTo(ref output, _repeated_goods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MathcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MathcId);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      size += goods_.CalculateSize(_repeated_goods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchInfoTip other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MathcId != 0) {
        MathcId = other.MathcId;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      goods_.Add(other.goods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MathcId = input.ReadInt32();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            goods_.AddEntriesFrom(input, _repeated_goods_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MathcId = input.ReadInt32();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHMatchInfoTip : pb::IMessage<SCHMatchInfoTip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHMatchInfoTip> _parser = new pb::MessageParser<SCHMatchInfoTip>(() => new SCHMatchInfoTip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHMatchInfoTip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[168]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHMatchInfoTip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHMatchInfoTip(SCHMatchInfoTip other) : this() {
      matchTips_ = other.matchTips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHMatchInfoTip Clone() {
      return new SCHMatchInfoTip(this);
    }

    /// <summary>Field number for the "matchTips" field.</summary>
    public const int MatchTipsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.MatchInfoTip> _repeated_matchTips_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.MatchInfoTip.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.MatchInfoTip> matchTips_ = new pbc::RepeatedField<global::BYDLD.MatchInfoTip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.MatchInfoTip> MatchTips {
      get { return matchTips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHMatchInfoTip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHMatchInfoTip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!matchTips_.Equals(other.matchTips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= matchTips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      matchTips_.WriteTo(output, _repeated_matchTips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      matchTips_.WriteTo(ref output, _repeated_matchTips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += matchTips_.CalculateSize(_repeated_matchTips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHMatchInfoTip other) {
      if (other == null) {
        return;
      }
      matchTips_.Add(other.matchTips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            matchTips_.AddEntriesFrom(input, _repeated_matchTips_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            matchTips_.AddEntriesFrom(ref input, _repeated_matchTips_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHMatchInfo : pb::IMessage<CSHMatchInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHMatchInfo> _parser = new pb::MessageParser<CSHMatchInfo>(() => new CSHMatchInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHMatchInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[169]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHMatchInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHMatchInfo(CSHMatchInfo other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHMatchInfo Clone() {
      return new CSHMatchInfo(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHMatchInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHMatchInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHMatchInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHMatchInfo : pb::IMessage<SCHMatchInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHMatchInfo> _parser = new pb::MessageParser<SCHMatchInfo>(() => new SCHMatchInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHMatchInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[170]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHMatchInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHMatchInfo(SCHMatchInfo other) : this() {
      name_ = other.name_;
      mathcId_ = other.mathcId_;
      timeId_ = other.timeId_;
      status_ = other.status_;
      down_ = other.down_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHMatchInfo Clone() {
      return new SCHMatchInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mathcId" field.</summary>
    public const int MathcIdFieldNumber = 2;
    private int mathcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MathcId {
      get { return mathcId_; }
      set {
        mathcId_ = value;
      }
    }

    /// <summary>Field number for the "timeId" field.</summary>
    public const int TimeIdFieldNumber = 3;
    private int timeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeId {
      get { return timeId_; }
      set {
        timeId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "down" field.</summary>
    public const int DownFieldNumber = 5;
    private int down_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Down {
      get { return down_; }
      set {
        down_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 6;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHMatchInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHMatchInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (MathcId != other.MathcId) return false;
      if (TimeId != other.TimeId) return false;
      if (Status != other.Status) return false;
      if (Down != other.Down) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MathcId != 0) hash ^= MathcId.GetHashCode();
      if (TimeId != 0) hash ^= TimeId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Down != 0) hash ^= Down.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (MathcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TimeId);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (Down != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Down);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (MathcId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MathcId);
      }
      if (TimeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TimeId);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Status);
      }
      if (Down != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Down);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MathcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MathcId);
      }
      if (TimeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Down != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Down);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHMatchInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MathcId != 0) {
        MathcId = other.MathcId;
      }
      if (other.TimeId != 0) {
        TimeId = other.TimeId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Down != 0) {
        Down = other.Down;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MathcId = input.ReadInt32();
            break;
          }
          case 24: {
            TimeId = input.ReadInt32();
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
          case 40: {
            Down = input.ReadInt32();
            break;
          }
          case 50: {
            Time = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MathcId = input.ReadInt32();
            break;
          }
          case 24: {
            TimeId = input.ReadInt32();
            break;
          }
          case 32: {
            Status = input.ReadInt32();
            break;
          }
          case 40: {
            Down = input.ReadInt32();
            break;
          }
          case 50: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HistoryRank : pb::IMessage<HistoryRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistoryRank> _parser = new pb::MessageParser<HistoryRank>(() => new HistoryRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[171]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRank(HistoryRank other) : this() {
      idx_ = other.idx_;
      icon_ = other.icon_;
      name_ = other.name_;
      additionSource_ = other.additionSource_;
      addition_ = other.addition_;
      matchGoods_ = other.matchGoods_.Clone();
      packGoods_ = other.packGoods_.Clone();
      luckyGoods_ = other.luckyGoods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRank Clone() {
      return new HistoryRank(this);
    }

    /// <summary>Field number for the "idx" field.</summary>
    public const int IdxFieldNumber = 1;
    private int idx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Idx {
      get { return idx_; }
      set {
        idx_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addition_source" field.</summary>
    public const int AdditionSourceFieldNumber = 4;
    private int additionSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdditionSource {
      get { return additionSource_; }
      set {
        additionSource_ = value;
      }
    }

    /// <summary>Field number for the "addition" field.</summary>
    public const int AdditionFieldNumber = 5;
    private int addition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Addition {
      get { return addition_; }
      set {
        addition_ = value;
      }
    }

    /// <summary>Field number for the "match_goods" field.</summary>
    public const int MatchGoodsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_matchGoods_codec
        = pb::FieldCodec.ForMessage(50, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> matchGoods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> MatchGoods {
      get { return matchGoods_; }
    }

    /// <summary>Field number for the "pack_goods" field.</summary>
    public const int PackGoodsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_packGoods_codec
        = pb::FieldCodec.ForMessage(58, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> packGoods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> PackGoods {
      get { return packGoods_; }
    }

    /// <summary>Field number for the "lucky_goods" field.</summary>
    public const int LuckyGoodsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_luckyGoods_codec
        = pb::FieldCodec.ForMessage(66, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> luckyGoods_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> LuckyGoods {
      get { return luckyGoods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Idx != other.Idx) return false;
      if (Icon != other.Icon) return false;
      if (Name != other.Name) return false;
      if (AdditionSource != other.AdditionSource) return false;
      if (Addition != other.Addition) return false;
      if(!matchGoods_.Equals(other.matchGoods_)) return false;
      if(!packGoods_.Equals(other.packGoods_)) return false;
      if(!luckyGoods_.Equals(other.luckyGoods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Idx != 0) hash ^= Idx.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (AdditionSource != 0) hash ^= AdditionSource.GetHashCode();
      if (Addition != 0) hash ^= Addition.GetHashCode();
      hash ^= matchGoods_.GetHashCode();
      hash ^= packGoods_.GetHashCode();
      hash ^= luckyGoods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (AdditionSource != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AdditionSource);
      }
      if (Addition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Addition);
      }
      matchGoods_.WriteTo(output, _repeated_matchGoods_codec);
      packGoods_.WriteTo(output, _repeated_packGoods_codec);
      luckyGoods_.WriteTo(output, _repeated_luckyGoods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Idx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Idx);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (AdditionSource != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AdditionSource);
      }
      if (Addition != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Addition);
      }
      matchGoods_.WriteTo(ref output, _repeated_matchGoods_codec);
      packGoods_.WriteTo(ref output, _repeated_packGoods_codec);
      luckyGoods_.WriteTo(ref output, _repeated_luckyGoods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Idx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Idx);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (AdditionSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdditionSource);
      }
      if (Addition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Addition);
      }
      size += matchGoods_.CalculateSize(_repeated_matchGoods_codec);
      size += packGoods_.CalculateSize(_repeated_packGoods_codec);
      size += luckyGoods_.CalculateSize(_repeated_luckyGoods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryRank other) {
      if (other == null) {
        return;
      }
      if (other.Idx != 0) {
        Idx = other.Idx;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.AdditionSource != 0) {
        AdditionSource = other.AdditionSource;
      }
      if (other.Addition != 0) {
        Addition = other.Addition;
      }
      matchGoods_.Add(other.matchGoods_);
      packGoods_.Add(other.packGoods_);
      luckyGoods_.Add(other.luckyGoods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            AdditionSource = input.ReadInt32();
            break;
          }
          case 40: {
            Addition = input.ReadInt32();
            break;
          }
          case 50: {
            matchGoods_.AddEntriesFrom(input, _repeated_matchGoods_codec);
            break;
          }
          case 58: {
            packGoods_.AddEntriesFrom(input, _repeated_packGoods_codec);
            break;
          }
          case 66: {
            luckyGoods_.AddEntriesFrom(input, _repeated_luckyGoods_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Idx = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            AdditionSource = input.ReadInt32();
            break;
          }
          case 40: {
            Addition = input.ReadInt32();
            break;
          }
          case 50: {
            matchGoods_.AddEntriesFrom(ref input, _repeated_matchGoods_codec);
            break;
          }
          case 58: {
            packGoods_.AddEntriesFrom(ref input, _repeated_packGoods_codec);
            break;
          }
          case 66: {
            luckyGoods_.AddEntriesFrom(ref input, _repeated_luckyGoods_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHHistoryRank : pb::IMessage<CSHHistoryRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHHistoryRank> _parser = new pb::MessageParser<CSHHistoryRank>(() => new CSHHistoryRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHHistoryRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[172]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHHistoryRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHHistoryRank(CSHHistoryRank other) : this() {
      playerId_ = other.playerId_;
      matchId_ = other.matchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHHistoryRank Clone() {
      return new CSHHistoryRank(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 2;
    private int matchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchId {
      get { return matchId_; }
      set {
        matchId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHHistoryRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHHistoryRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (MatchId != other.MatchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (MatchId != 0) hash ^= MatchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (MatchId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (MatchId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (MatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHHistoryRank other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.MatchId != 0) {
        MatchId = other.MatchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            MatchId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            MatchId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHHistoryRank : pb::IMessage<SCHHistoryRank>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHHistoryRank> _parser = new pb::MessageParser<SCHHistoryRank>(() => new SCHHistoryRank());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHHistoryRank> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[173]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHHistoryRank() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHHistoryRank(SCHHistoryRank other) : this() {
      matchId_ = other.matchId_;
      rankList_ = other.rankList_.Clone();
      oneselfRank_ = other.oneselfRank_ != null ? other.oneselfRank_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHHistoryRank Clone() {
      return new SCHHistoryRank(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private int matchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchId {
      get { return matchId_; }
      set {
        matchId_ = value;
      }
    }

    /// <summary>Field number for the "rank_list" field.</summary>
    public const int RankListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.HistoryRank> _repeated_rankList_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.HistoryRank.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.HistoryRank> rankList_ = new pbc::RepeatedField<global::BYDLD.HistoryRank>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.HistoryRank> RankList {
      get { return rankList_; }
    }

    /// <summary>Field number for the "oneself_rank" field.</summary>
    public const int OneselfRankFieldNumber = 3;
    private global::BYDLD.HistoryRank oneselfRank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.HistoryRank OneselfRank {
      get { return oneselfRank_; }
      set {
        oneselfRank_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHHistoryRank);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHHistoryRank other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if(!rankList_.Equals(other.rankList_)) return false;
      if (!object.Equals(OneselfRank, other.OneselfRank)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId != 0) hash ^= MatchId.GetHashCode();
      hash ^= rankList_.GetHashCode();
      if (oneselfRank_ != null) hash ^= OneselfRank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      rankList_.WriteTo(output, _repeated_rankList_codec);
      if (oneselfRank_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OneselfRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      rankList_.WriteTo(ref output, _repeated_rankList_codec);
      if (oneselfRank_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OneselfRank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchId);
      }
      size += rankList_.CalculateSize(_repeated_rankList_codec);
      if (oneselfRank_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OneselfRank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHHistoryRank other) {
      if (other == null) {
        return;
      }
      if (other.MatchId != 0) {
        MatchId = other.MatchId;
      }
      rankList_.Add(other.rankList_);
      if (other.oneselfRank_ != null) {
        if (oneselfRank_ == null) {
          OneselfRank = new global::BYDLD.HistoryRank();
        }
        OneselfRank.MergeFrom(other.OneselfRank);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
          case 18: {
            rankList_.AddEntriesFrom(input, _repeated_rankList_codec);
            break;
          }
          case 26: {
            if (oneselfRank_ == null) {
              OneselfRank = new global::BYDLD.HistoryRank();
            }
            input.ReadMessage(OneselfRank);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
          case 18: {
            rankList_.AddEntriesFrom(ref input, _repeated_rankList_codec);
            break;
          }
          case 26: {
            if (oneselfRank_ == null) {
              OneselfRank = new global::BYDLD.HistoryRank();
            }
            input.ReadMessage(OneselfRank);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSHLuckyInfo : pb::IMessage<CSHLuckyInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSHLuckyInfo> _parser = new pb::MessageParser<CSHLuckyInfo>(() => new CSHLuckyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSHLuckyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[174]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHLuckyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHLuckyInfo(CSHLuckyInfo other) : this() {
      matchId_ = other.matchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSHLuckyInfo Clone() {
      return new CSHLuckyInfo(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private int matchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchId {
      get { return matchId_; }
      set {
        matchId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSHLuckyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSHLuckyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId != 0) hash ^= MatchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSHLuckyInfo other) {
      if (other == null) {
        return;
      }
      if (other.MatchId != 0) {
        MatchId = other.MatchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LuckyInfo : pb::IMessage<LuckyInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LuckyInfo> _parser = new pb::MessageParser<LuckyInfo>(() => new LuckyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LuckyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[175]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyInfo(LuckyInfo other) : this() {
      lRange_ = other.lRange_;
      rRange_ = other.rRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyInfo Clone() {
      return new LuckyInfo(this);
    }

    /// <summary>Field number for the "lRange" field.</summary>
    public const int LRangeFieldNumber = 1;
    private int lRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LRange {
      get { return lRange_; }
      set {
        lRange_ = value;
      }
    }

    /// <summary>Field number for the "rRange" field.</summary>
    public const int RRangeFieldNumber = 2;
    private int rRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RRange {
      get { return rRange_; }
      set {
        rRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LuckyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LuckyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LRange != other.LRange) return false;
      if (RRange != other.RRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LRange != 0) hash ^= LRange.GetHashCode();
      if (RRange != 0) hash ^= RRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LRange != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LRange);
      }
      if (RRange != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LRange != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LRange);
      }
      if (RRange != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LRange);
      }
      if (RRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LuckyInfo other) {
      if (other == null) {
        return;
      }
      if (other.LRange != 0) {
        LRange = other.LRange;
      }
      if (other.RRange != 0) {
        RRange = other.RRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LRange = input.ReadInt32();
            break;
          }
          case 16: {
            RRange = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LRange = input.ReadInt32();
            break;
          }
          case 16: {
            RRange = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCHLuckyInfo : pb::IMessage<SCHLuckyInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCHLuckyInfo> _parser = new pb::MessageParser<SCHLuckyInfo>(() => new SCHLuckyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCHLuckyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[176]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHLuckyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHLuckyInfo(SCHLuckyInfo other) : this() {
      matchId_ = other.matchId_;
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCHLuckyInfo Clone() {
      return new SCHLuckyInfo(this);
    }

    /// <summary>Field number for the "matchId" field.</summary>
    public const int MatchIdFieldNumber = 1;
    private int matchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchId {
      get { return matchId_; }
      set {
        matchId_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.LuckyInfo> _repeated_data_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.LuckyInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.LuckyInfo> data_ = new pbc::RepeatedField<global::BYDLD.LuckyInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.LuckyInfo> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCHLuckyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCHLuckyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchId != other.MatchId) return false;
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchId != 0) hash ^= MatchId.GetHashCode();
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MatchId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MatchId);
      }
      data_.WriteTo(ref output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchId);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCHLuckyInfo other) {
      if (other == null) {
        return;
      }
      if (other.MatchId != 0) {
        MatchId = other.MatchId;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MatchId = input.ReadInt32();
            break;
          }
          case 18: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AwardDetail : pb::IMessage<AwardDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardDetail> _parser = new pb::MessageParser<AwardDetail>(() => new AwardDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwardDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[177]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardDetail(AwardDetail other) : this() {
      playerId_ = other.playerId_;
      nums_ = other.nums_;
      period_ = other.period_;
      vip_ = other.vip_;
      nickName_ = other.nickName_;
      photo_ = other.photo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardDetail Clone() {
      return new AwardDetail(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "nums" field.</summary>
    public const int NumsFieldNumber = 2;
    private int nums_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nums {
      get { return nums_; }
      set {
        nums_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private int period_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 4;
    private int vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vip {
      get { return vip_; }
      set {
        vip_ = value;
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 5;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "photo" field.</summary>
    public const int PhotoFieldNumber = 6;
    private string photo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Photo {
      get { return photo_; }
      set {
        photo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwardDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwardDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Nums != other.Nums) return false;
      if (Period != other.Period) return false;
      if (Vip != other.Vip) return false;
      if (NickName != other.NickName) return false;
      if (Photo != other.Photo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Nums != 0) hash ^= Nums.GetHashCode();
      if (Period != 0) hash ^= Period.GetHashCode();
      if (Vip != 0) hash ^= Vip.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Photo.Length != 0) hash ^= Photo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Nums != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nums);
      }
      if (Period != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Period);
      }
      if (Vip != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Vip);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NickName);
      }
      if (Photo.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Photo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Nums != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nums);
      }
      if (Period != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Period);
      }
      if (Vip != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Vip);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NickName);
      }
      if (Photo.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Photo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Nums != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nums);
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Period);
      }
      if (Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vip);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Photo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Photo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwardDetail other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Nums != 0) {
        Nums = other.Nums;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
      if (other.Vip != 0) {
        Vip = other.Vip;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Photo.Length != 0) {
        Photo = other.Photo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Nums = input.ReadInt32();
            break;
          }
          case 24: {
            Period = input.ReadInt32();
            break;
          }
          case 32: {
            Vip = input.ReadInt32();
            break;
          }
          case 42: {
            NickName = input.ReadString();
            break;
          }
          case 50: {
            Photo = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Nums = input.ReadInt32();
            break;
          }
          case 24: {
            Period = input.ReadInt32();
            break;
          }
          case 32: {
            Vip = input.ReadInt32();
            break;
          }
          case 42: {
            NickName = input.ReadString();
            break;
          }
          case 50: {
            Photo = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLuckyAwardNotify : pb::IMessage<SCLuckyAwardNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLuckyAwardNotify> _parser = new pb::MessageParser<SCLuckyAwardNotify>(() => new SCLuckyAwardNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLuckyAwardNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[178]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyAwardNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyAwardNotify(SCLuckyAwardNotify other) : this() {
      awardType_ = other.awardType_;
      detail_ = other.detail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyAwardNotify Clone() {
      return new SCLuckyAwardNotify(this);
    }

    /// <summary>Field number for the "award_type" field.</summary>
    public const int AwardTypeFieldNumber = 1;
    private int awardType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AwardType {
      get { return awardType_; }
      set {
        awardType_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.AwardDetail> _repeated_detail_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.AwardDetail.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AwardDetail> detail_ = new pbc::RepeatedField<global::BYDLD.AwardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AwardDetail> Detail {
      get { return detail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLuckyAwardNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLuckyAwardNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AwardType != other.AwardType) return false;
      if(!detail_.Equals(other.detail_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AwardType != 0) hash ^= AwardType.GetHashCode();
      hash ^= detail_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AwardType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardType);
      }
      detail_.WriteTo(output, _repeated_detail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AwardType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AwardType);
      }
      detail_.WriteTo(ref output, _repeated_detail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AwardType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardType);
      }
      size += detail_.CalculateSize(_repeated_detail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLuckyAwardNotify other) {
      if (other == null) {
        return;
      }
      if (other.AwardType != 0) {
        AwardType = other.AwardType;
      }
      detail_.Add(other.detail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AwardType = input.ReadInt32();
            break;
          }
          case 18: {
            detail_.AddEntriesFrom(input, _repeated_detail_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AwardType = input.ReadInt32();
            break;
          }
          case 18: {
            detail_.AddEntriesFrom(ref input, _repeated_detail_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AwardProp : pb::IMessage<AwardProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwardProp> _parser = new pb::MessageParser<AwardProp>(() => new AwardProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AwardProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[179]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardProp(AwardProp other) : this() {
      propId_ = other.propId_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AwardProp Clone() {
      return new AwardProp(this);
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 1;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private int num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AwardProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AwardProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropId != other.PropId) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (Num != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AwardProp other) {
      if (other == null) {
        return;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
          case 16: {
            Num = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LuckyTaskInfo : pb::IMessage<LuckyTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LuckyTaskInfo> _parser = new pb::MessageParser<LuckyTaskInfo>(() => new LuckyTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LuckyTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[180]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyTaskInfo(LuckyTaskInfo other) : this() {
      id_ = other.id_;
      status_ = other.status_;
      score_ = other.score_;
      text_ = other.text_;
      cur_ = other.cur_;
      total_ = other.total_;
      show_ = other.show_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyTaskInfo Clone() {
      return new LuckyTaskInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 4;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cur" field.</summary>
    public const int CurFieldNumber = 5;
    private int cur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cur {
      get { return cur_; }
      set {
        cur_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 6;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "show" field.</summary>
    public const int ShowFieldNumber = 7;
    private bool show_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Show {
      get { return show_; }
      set {
        show_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LuckyTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LuckyTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (Score != other.Score) return false;
      if (Text != other.Text) return false;
      if (Cur != other.Cur) return false;
      if (Total != other.Total) return false;
      if (Show != other.Show) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Cur != 0) hash ^= Cur.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (Show != false) hash ^= Show.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      if (Cur != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Cur);
      }
      if (Total != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Total);
      }
      if (Show != false) {
        output.WriteRawTag(56);
        output.WriteBool(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      if (Cur != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Cur);
      }
      if (Total != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Total);
      }
      if (Show != false) {
        output.WriteRawTag(56);
        output.WriteBool(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Cur != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cur);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (Show != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LuckyTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Cur != 0) {
        Cur = other.Cur;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      if (other.Show != false) {
        Show = other.Show;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 40: {
            Cur = input.ReadInt32();
            break;
          }
          case 48: {
            Total = input.ReadInt32();
            break;
          }
          case 56: {
            Show = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 40: {
            Cur = input.ReadInt32();
            break;
          }
          case 48: {
            Total = input.ReadInt32();
            break;
          }
          case 56: {
            Show = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLuckyDrawInfo : pb::IMessage<CSLuckyDrawInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLuckyDrawInfo> _parser = new pb::MessageParser<CSLuckyDrawInfo>(() => new CSLuckyDrawInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLuckyDrawInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[181]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyDrawInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyDrawInfo(CSLuckyDrawInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyDrawInfo Clone() {
      return new CSLuckyDrawInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLuckyDrawInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLuckyDrawInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLuckyDrawInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCLuckyDrawInfo : pb::IMessage<SCLuckyDrawInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLuckyDrawInfo> _parser = new pb::MessageParser<SCLuckyDrawInfo>(() => new SCLuckyDrawInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLuckyDrawInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[182]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyDrawInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyDrawInfo(SCLuckyDrawInfo other) : this() {
      hourRemainSec_ = other.hourRemainSec_;
      dayRemainSec_ = other.dayRemainSec_;
      hourReward_ = other.hourReward_.Clone();
      dayReward_ = other.dayReward_.Clone();
      dayLuckyNums_ = other.dayLuckyNums_.Clone();
      score_ = other.score_;
      hourTotal_ = other.hourTotal_;
      dayTotal_ = other.dayTotal_;
      hourAwardNum_ = other.hourAwardNum_;
      dayAwardNum_ = other.dayAwardNum_;
      nextStartTick_ = other.nextStartTick_;
      taskInfo_ = other.taskInfo_.Clone();
      exchangeScore_ = other.exchangeScore_;
      nextRemainSec_ = other.nextRemainSec_;
      hourLuckyNums_ = other.hourLuckyNums_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyDrawInfo Clone() {
      return new SCLuckyDrawInfo(this);
    }

    /// <summary>Field number for the "hour_remain_sec" field.</summary>
    public const int HourRemainSecFieldNumber = 1;
    private int hourRemainSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HourRemainSec {
      get { return hourRemainSec_; }
      set {
        hourRemainSec_ = value;
      }
    }

    /// <summary>Field number for the "day_remain_sec" field.</summary>
    public const int DayRemainSecFieldNumber = 2;
    private int dayRemainSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DayRemainSec {
      get { return dayRemainSec_; }
      set {
        dayRemainSec_ = value;
      }
    }

    /// <summary>Field number for the "hour_reward" field.</summary>
    public const int HourRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BYDLD.AwardProp> _repeated_hourReward_codec
        = pb::FieldCodec.ForMessage(26, global::BYDLD.AwardProp.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AwardProp> hourReward_ = new pbc::RepeatedField<global::BYDLD.AwardProp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AwardProp> HourReward {
      get { return hourReward_; }
    }

    /// <summary>Field number for the "day_reward" field.</summary>
    public const int DayRewardFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BYDLD.AwardProp> _repeated_dayReward_codec
        = pb::FieldCodec.ForMessage(34, global::BYDLD.AwardProp.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AwardProp> dayReward_ = new pbc::RepeatedField<global::BYDLD.AwardProp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AwardProp> DayReward {
      get { return dayReward_; }
    }

    /// <summary>Field number for the "day_lucky_nums" field.</summary>
    public const int DayLuckyNumsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_dayLuckyNums_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> dayLuckyNums_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DayLuckyNums {
      get { return dayLuckyNums_; }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 6;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "hour_total" field.</summary>
    public const int HourTotalFieldNumber = 7;
    private int hourTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HourTotal {
      get { return hourTotal_; }
      set {
        hourTotal_ = value;
      }
    }

    /// <summary>Field number for the "day_total" field.</summary>
    public const int DayTotalFieldNumber = 8;
    private int dayTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DayTotal {
      get { return dayTotal_; }
      set {
        dayTotal_ = value;
      }
    }

    /// <summary>Field number for the "hour_award_num" field.</summary>
    public const int HourAwardNumFieldNumber = 9;
    private int hourAwardNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HourAwardNum {
      get { return hourAwardNum_; }
      set {
        hourAwardNum_ = value;
      }
    }

    /// <summary>Field number for the "day_award_num" field.</summary>
    public const int DayAwardNumFieldNumber = 10;
    private int dayAwardNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DayAwardNum {
      get { return dayAwardNum_; }
      set {
        dayAwardNum_ = value;
      }
    }

    /// <summary>Field number for the "next_start_tick" field.</summary>
    public const int NextStartTickFieldNumber = 11;
    private int nextStartTick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextStartTick {
      get { return nextStartTick_; }
      set {
        nextStartTick_ = value;
      }
    }

    /// <summary>Field number for the "task_info" field.</summary>
    public const int TaskInfoFieldNumber = 12;
    private static readonly pb::FieldCodec<global::BYDLD.LuckyTaskInfo> _repeated_taskInfo_codec
        = pb::FieldCodec.ForMessage(98, global::BYDLD.LuckyTaskInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.LuckyTaskInfo> taskInfo_ = new pbc::RepeatedField<global::BYDLD.LuckyTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.LuckyTaskInfo> TaskInfo {
      get { return taskInfo_; }
    }

    /// <summary>Field number for the "exchange_score" field.</summary>
    public const int ExchangeScoreFieldNumber = 13;
    private int exchangeScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExchangeScore {
      get { return exchangeScore_; }
      set {
        exchangeScore_ = value;
      }
    }

    /// <summary>Field number for the "next_remain_sec" field.</summary>
    public const int NextRemainSecFieldNumber = 14;
    private int nextRemainSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextRemainSec {
      get { return nextRemainSec_; }
      set {
        nextRemainSec_ = value;
      }
    }

    /// <summary>Field number for the "hour_lucky_nums" field.</summary>
    public const int HourLuckyNumsFieldNumber = 15;
    private static readonly pb::FieldCodec<int> _repeated_hourLuckyNums_codec
        = pb::FieldCodec.ForInt32(122);
    private readonly pbc::RepeatedField<int> hourLuckyNums_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> HourLuckyNums {
      get { return hourLuckyNums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLuckyDrawInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLuckyDrawInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HourRemainSec != other.HourRemainSec) return false;
      if (DayRemainSec != other.DayRemainSec) return false;
      if(!hourReward_.Equals(other.hourReward_)) return false;
      if(!dayReward_.Equals(other.dayReward_)) return false;
      if(!dayLuckyNums_.Equals(other.dayLuckyNums_)) return false;
      if (Score != other.Score) return false;
      if (HourTotal != other.HourTotal) return false;
      if (DayTotal != other.DayTotal) return false;
      if (HourAwardNum != other.HourAwardNum) return false;
      if (DayAwardNum != other.DayAwardNum) return false;
      if (NextStartTick != other.NextStartTick) return false;
      if(!taskInfo_.Equals(other.taskInfo_)) return false;
      if (ExchangeScore != other.ExchangeScore) return false;
      if (NextRemainSec != other.NextRemainSec) return false;
      if(!hourLuckyNums_.Equals(other.hourLuckyNums_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HourRemainSec != 0) hash ^= HourRemainSec.GetHashCode();
      if (DayRemainSec != 0) hash ^= DayRemainSec.GetHashCode();
      hash ^= hourReward_.GetHashCode();
      hash ^= dayReward_.GetHashCode();
      hash ^= dayLuckyNums_.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (HourTotal != 0) hash ^= HourTotal.GetHashCode();
      if (DayTotal != 0) hash ^= DayTotal.GetHashCode();
      if (HourAwardNum != 0) hash ^= HourAwardNum.GetHashCode();
      if (DayAwardNum != 0) hash ^= DayAwardNum.GetHashCode();
      if (NextStartTick != 0) hash ^= NextStartTick.GetHashCode();
      hash ^= taskInfo_.GetHashCode();
      if (ExchangeScore != 0) hash ^= ExchangeScore.GetHashCode();
      if (NextRemainSec != 0) hash ^= NextRemainSec.GetHashCode();
      hash ^= hourLuckyNums_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HourRemainSec != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HourRemainSec);
      }
      if (DayRemainSec != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DayRemainSec);
      }
      hourReward_.WriteTo(output, _repeated_hourReward_codec);
      dayReward_.WriteTo(output, _repeated_dayReward_codec);
      dayLuckyNums_.WriteTo(output, _repeated_dayLuckyNums_codec);
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (HourTotal != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HourTotal);
      }
      if (DayTotal != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DayTotal);
      }
      if (HourAwardNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HourAwardNum);
      }
      if (DayAwardNum != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DayAwardNum);
      }
      if (NextStartTick != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(NextStartTick);
      }
      taskInfo_.WriteTo(output, _repeated_taskInfo_codec);
      if (ExchangeScore != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(ExchangeScore);
      }
      if (NextRemainSec != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(NextRemainSec);
      }
      hourLuckyNums_.WriteTo(output, _repeated_hourLuckyNums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HourRemainSec != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(HourRemainSec);
      }
      if (DayRemainSec != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DayRemainSec);
      }
      hourReward_.WriteTo(ref output, _repeated_hourReward_codec);
      dayReward_.WriteTo(ref output, _repeated_dayReward_codec);
      dayLuckyNums_.WriteTo(ref output, _repeated_dayLuckyNums_codec);
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (HourTotal != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HourTotal);
      }
      if (DayTotal != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DayTotal);
      }
      if (HourAwardNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(HourAwardNum);
      }
      if (DayAwardNum != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DayAwardNum);
      }
      if (NextStartTick != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(NextStartTick);
      }
      taskInfo_.WriteTo(ref output, _repeated_taskInfo_codec);
      if (ExchangeScore != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(ExchangeScore);
      }
      if (NextRemainSec != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(NextRemainSec);
      }
      hourLuckyNums_.WriteTo(ref output, _repeated_hourLuckyNums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HourRemainSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HourRemainSec);
      }
      if (DayRemainSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DayRemainSec);
      }
      size += hourReward_.CalculateSize(_repeated_hourReward_codec);
      size += dayReward_.CalculateSize(_repeated_dayReward_codec);
      size += dayLuckyNums_.CalculateSize(_repeated_dayLuckyNums_codec);
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (HourTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HourTotal);
      }
      if (DayTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DayTotal);
      }
      if (HourAwardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HourAwardNum);
      }
      if (DayAwardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DayAwardNum);
      }
      if (NextStartTick != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextStartTick);
      }
      size += taskInfo_.CalculateSize(_repeated_taskInfo_codec);
      if (ExchangeScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExchangeScore);
      }
      if (NextRemainSec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextRemainSec);
      }
      size += hourLuckyNums_.CalculateSize(_repeated_hourLuckyNums_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLuckyDrawInfo other) {
      if (other == null) {
        return;
      }
      if (other.HourRemainSec != 0) {
        HourRemainSec = other.HourRemainSec;
      }
      if (other.DayRemainSec != 0) {
        DayRemainSec = other.DayRemainSec;
      }
      hourReward_.Add(other.hourReward_);
      dayReward_.Add(other.dayReward_);
      dayLuckyNums_.Add(other.dayLuckyNums_);
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.HourTotal != 0) {
        HourTotal = other.HourTotal;
      }
      if (other.DayTotal != 0) {
        DayTotal = other.DayTotal;
      }
      if (other.HourAwardNum != 0) {
        HourAwardNum = other.HourAwardNum;
      }
      if (other.DayAwardNum != 0) {
        DayAwardNum = other.DayAwardNum;
      }
      if (other.NextStartTick != 0) {
        NextStartTick = other.NextStartTick;
      }
      taskInfo_.Add(other.taskInfo_);
      if (other.ExchangeScore != 0) {
        ExchangeScore = other.ExchangeScore;
      }
      if (other.NextRemainSec != 0) {
        NextRemainSec = other.NextRemainSec;
      }
      hourLuckyNums_.Add(other.hourLuckyNums_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HourRemainSec = input.ReadInt32();
            break;
          }
          case 16: {
            DayRemainSec = input.ReadInt32();
            break;
          }
          case 26: {
            hourReward_.AddEntriesFrom(input, _repeated_hourReward_codec);
            break;
          }
          case 34: {
            dayReward_.AddEntriesFrom(input, _repeated_dayReward_codec);
            break;
          }
          case 42:
          case 40: {
            dayLuckyNums_.AddEntriesFrom(input, _repeated_dayLuckyNums_codec);
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 56: {
            HourTotal = input.ReadInt32();
            break;
          }
          case 64: {
            DayTotal = input.ReadInt32();
            break;
          }
          case 72: {
            HourAwardNum = input.ReadInt32();
            break;
          }
          case 80: {
            DayAwardNum = input.ReadInt32();
            break;
          }
          case 88: {
            NextStartTick = input.ReadInt32();
            break;
          }
          case 98: {
            taskInfo_.AddEntriesFrom(input, _repeated_taskInfo_codec);
            break;
          }
          case 104: {
            ExchangeScore = input.ReadInt32();
            break;
          }
          case 112: {
            NextRemainSec = input.ReadInt32();
            break;
          }
          case 122:
          case 120: {
            hourLuckyNums_.AddEntriesFrom(input, _repeated_hourLuckyNums_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HourRemainSec = input.ReadInt32();
            break;
          }
          case 16: {
            DayRemainSec = input.ReadInt32();
            break;
          }
          case 26: {
            hourReward_.AddEntriesFrom(ref input, _repeated_hourReward_codec);
            break;
          }
          case 34: {
            dayReward_.AddEntriesFrom(ref input, _repeated_dayReward_codec);
            break;
          }
          case 42:
          case 40: {
            dayLuckyNums_.AddEntriesFrom(ref input, _repeated_dayLuckyNums_codec);
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 56: {
            HourTotal = input.ReadInt32();
            break;
          }
          case 64: {
            DayTotal = input.ReadInt32();
            break;
          }
          case 72: {
            HourAwardNum = input.ReadInt32();
            break;
          }
          case 80: {
            DayAwardNum = input.ReadInt32();
            break;
          }
          case 88: {
            NextStartTick = input.ReadInt32();
            break;
          }
          case 98: {
            taskInfo_.AddEntriesFrom(ref input, _repeated_taskInfo_codec);
            break;
          }
          case 104: {
            ExchangeScore = input.ReadInt32();
            break;
          }
          case 112: {
            NextRemainSec = input.ReadInt32();
            break;
          }
          case 122:
          case 120: {
            hourLuckyNums_.AddEntriesFrom(ref input, _repeated_hourLuckyNums_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetLuckyTaskAward : pb::IMessage<CSGetLuckyTaskAward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetLuckyTaskAward> _parser = new pb::MessageParser<CSGetLuckyTaskAward>(() => new CSGetLuckyTaskAward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetLuckyTaskAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[183]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetLuckyTaskAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetLuckyTaskAward(CSGetLuckyTaskAward other) : this() {
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetLuckyTaskAward Clone() {
      return new CSGetLuckyTaskAward(this);
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetLuckyTaskAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetLuckyTaskAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetLuckyTaskAward other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLuckyTaskInfo : pb::IMessage<SCLuckyTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLuckyTaskInfo> _parser = new pb::MessageParser<SCLuckyTaskInfo>(() => new SCLuckyTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLuckyTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[184]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyTaskInfo(SCLuckyTaskInfo other) : this() {
      task_ = other.task_ != null ? other.task_.Clone() : null;
      score_ = other.score_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyTaskInfo Clone() {
      return new SCLuckyTaskInfo(this);
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 1;
    private global::BYDLD.LuckyTaskInfo task_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.LuckyTaskInfo Task {
      get { return task_; }
      set {
        task_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLuckyTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLuckyTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Task, other.Task)) return false;
      if (Score != other.Score) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (task_ != null) hash ^= Task.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (task_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Task);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (task_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Task);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (task_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLuckyTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.task_ != null) {
        if (task_ == null) {
          Task = new global::BYDLD.LuckyTaskInfo();
        }
        Task.MergeFrom(other.Task);
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (task_ == null) {
              Task = new global::BYDLD.LuckyTaskInfo();
            }
            input.ReadMessage(Task);
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (task_ == null) {
              Task = new global::BYDLD.LuckyTaskInfo();
            }
            input.ReadMessage(Task);
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSGetLuckyNum : pb::IMessage<CSGetLuckyNum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSGetLuckyNum> _parser = new pb::MessageParser<CSGetLuckyNum>(() => new CSGetLuckyNum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSGetLuckyNum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[185]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetLuckyNum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetLuckyNum(CSGetLuckyNum other) : this() {
      times_ = other.times_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSGetLuckyNum Clone() {
      return new CSGetLuckyNum(this);
    }

    /// <summary>Field number for the "times" field.</summary>
    public const int TimesFieldNumber = 1;
    private int times_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSGetLuckyNum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSGetLuckyNum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Times != other.Times) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Times != 0) hash ^= Times.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Times != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Times != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Times != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSGetLuckyNum other) {
      if (other == null) {
        return;
      }
      if (other.Times != 0) {
        Times = other.Times;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Times = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Times = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCGetLuckyNum : pb::IMessage<SCGetLuckyNum>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCGetLuckyNum> _parser = new pb::MessageParser<SCGetLuckyNum>(() => new SCGetLuckyNum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCGetLuckyNum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[186]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetLuckyNum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetLuckyNum(SCGetLuckyNum other) : this() {
      score_ = other.score_;
      errorCode_ = other.errorCode_;
      luckyNums_ = other.luckyNums_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCGetLuckyNum Clone() {
      return new SCGetLuckyNum(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "lucky_nums" field.</summary>
    public const int LuckyNumsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_luckyNums_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> luckyNums_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LuckyNums {
      get { return luckyNums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCGetLuckyNum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCGetLuckyNum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Score != other.Score) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if(!luckyNums_.Equals(other.luckyNums_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0) hash ^= Score.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      hash ^= luckyNums_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Score != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Score);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorCode);
      }
      luckyNums_.WriteTo(output, _repeated_luckyNums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Score != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Score);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ErrorCode);
      }
      luckyNums_.WriteTo(ref output, _repeated_luckyNums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      size += luckyNums_.CalculateSize(_repeated_luckyNums_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCGetLuckyNum other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      luckyNums_.Add(other.luckyNums_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Score = input.ReadInt32();
            break;
          }
          case 16: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            luckyNums_.AddEntriesFrom(input, _repeated_luckyNums_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Score = input.ReadInt32();
            break;
          }
          case 16: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            luckyNums_.AddEntriesFrom(ref input, _repeated_luckyNums_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLuckyRedDot : pb::IMessage<CSLuckyRedDot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLuckyRedDot> _parser = new pb::MessageParser<CSLuckyRedDot>(() => new CSLuckyRedDot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLuckyRedDot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[187]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyRedDot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyRedDot(CSLuckyRedDot other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyRedDot Clone() {
      return new CSLuckyRedDot(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLuckyRedDot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLuckyRedDot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLuckyRedDot other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCLuckyRedDot : pb::IMessage<SCLuckyRedDot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLuckyRedDot> _parser = new pb::MessageParser<SCLuckyRedDot>(() => new SCLuckyRedDot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLuckyRedDot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[188]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyRedDot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyRedDot(SCLuckyRedDot other) : this() {
      show_ = other.show_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyRedDot Clone() {
      return new SCLuckyRedDot(this);
    }

    /// <summary>Field number for the "show" field.</summary>
    public const int ShowFieldNumber = 1;
    private bool show_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Show {
      get { return show_; }
      set {
        show_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLuckyRedDot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLuckyRedDot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Show != other.Show) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Show != false) hash ^= Show.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Show != false) {
        output.WriteRawTag(8);
        output.WriteBool(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Show != false) {
        output.WriteRawTag(8);
        output.WriteBool(Show);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Show != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLuckyRedDot other) {
      if (other == null) {
        return;
      }
      if (other.Show != false) {
        Show = other.Show;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Show = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Show = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LuckyRecord : pb::IMessage<LuckyRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LuckyRecord> _parser = new pb::MessageParser<LuckyRecord>(() => new LuckyRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LuckyRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[189]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyRecord(LuckyRecord other) : this() {
      vip_ = other.vip_;
      times_ = other.times_;
      luckyNum_ = other.luckyNum_;
      tick_ = other.tick_;
      nickName_ = other.nickName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LuckyRecord Clone() {
      return new LuckyRecord(this);
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 1;
    private int vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vip {
      get { return vip_; }
      set {
        vip_ = value;
      }
    }

    /// <summary>Field number for the "times" field.</summary>
    public const int TimesFieldNumber = 2;
    private int times_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    /// <summary>Field number for the "lucky_num" field.</summary>
    public const int LuckyNumFieldNumber = 3;
    private int luckyNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LuckyNum {
      get { return luckyNum_; }
      set {
        luckyNum_ = value;
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 4;
    private int tick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Tick {
      get { return tick_; }
      set {
        tick_ = value;
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 5;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LuckyRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LuckyRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vip != other.Vip) return false;
      if (Times != other.Times) return false;
      if (LuckyNum != other.LuckyNum) return false;
      if (Tick != other.Tick) return false;
      if (NickName != other.NickName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Vip != 0) hash ^= Vip.GetHashCode();
      if (Times != 0) hash ^= Times.GetHashCode();
      if (LuckyNum != 0) hash ^= LuckyNum.GetHashCode();
      if (Tick != 0) hash ^= Tick.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Vip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vip);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (LuckyNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LuckyNum);
      }
      if (Tick != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tick);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NickName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Vip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Vip);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (LuckyNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LuckyNum);
      }
      if (Tick != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tick);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NickName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vip);
      }
      if (Times != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
      }
      if (LuckyNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LuckyNum);
      }
      if (Tick != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tick);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LuckyRecord other) {
      if (other == null) {
        return;
      }
      if (other.Vip != 0) {
        Vip = other.Vip;
      }
      if (other.Times != 0) {
        Times = other.Times;
      }
      if (other.LuckyNum != 0) {
        LuckyNum = other.LuckyNum;
      }
      if (other.Tick != 0) {
        Tick = other.Tick;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Vip = input.ReadInt32();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
          case 24: {
            LuckyNum = input.ReadInt32();
            break;
          }
          case 32: {
            Tick = input.ReadInt32();
            break;
          }
          case 42: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Vip = input.ReadInt32();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
          case 24: {
            LuckyNum = input.ReadInt32();
            break;
          }
          case 32: {
            Tick = input.ReadInt32();
            break;
          }
          case 42: {
            NickName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OwnRecord : pb::IMessage<OwnRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnRecord> _parser = new pb::MessageParser<OwnRecord>(() => new OwnRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OwnRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[190]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnRecord(OwnRecord other) : this() {
      reward_ = other.reward_.Clone();
      status_ = other.status_;
      tick_ = other.tick_;
      luckyNum_ = other.luckyNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnRecord Clone() {
      return new OwnRecord(this);
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.AwardProp> _repeated_reward_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.AwardProp.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.AwardProp> reward_ = new pbc::RepeatedField<global::BYDLD.AwardProp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.AwardProp> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "tick" field.</summary>
    public const int TickFieldNumber = 3;
    private int tick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Tick {
      get { return tick_; }
      set {
        tick_ = value;
      }
    }

    /// <summary>Field number for the "lucky_num" field.</summary>
    public const int LuckyNumFieldNumber = 4;
    private int luckyNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LuckyNum {
      get { return luckyNum_; }
      set {
        luckyNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OwnRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OwnRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reward_.Equals(other.reward_)) return false;
      if (Status != other.Status) return false;
      if (Tick != other.Tick) return false;
      if (LuckyNum != other.LuckyNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reward_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Tick != 0) hash ^= Tick.GetHashCode();
      if (LuckyNum != 0) hash ^= LuckyNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reward_.WriteTo(output, _repeated_reward_codec);
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Tick != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Tick);
      }
      if (LuckyNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LuckyNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (Tick != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Tick);
      }
      if (LuckyNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LuckyNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Tick != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tick);
      }
      if (LuckyNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LuckyNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OwnRecord other) {
      if (other == null) {
        return;
      }
      reward_.Add(other.reward_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Tick != 0) {
        Tick = other.Tick;
      }
      if (other.LuckyNum != 0) {
        LuckyNum = other.LuckyNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 24: {
            Tick = input.ReadInt32();
            break;
          }
          case 32: {
            LuckyNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
          case 24: {
            Tick = input.ReadInt32();
            break;
          }
          case 32: {
            LuckyNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLuckyRecord : pb::IMessage<CSLuckyRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLuckyRecord> _parser = new pb::MessageParser<CSLuckyRecord>(() => new CSLuckyRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLuckyRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[191]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyRecord(CSLuckyRecord other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyRecord Clone() {
      return new CSLuckyRecord(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLuckyRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLuckyRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLuckyRecord other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCLuckyRecord : pb::IMessage<SCLuckyRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLuckyRecord> _parser = new pb::MessageParser<SCLuckyRecord>(() => new SCLuckyRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLuckyRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[192]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyRecord(SCLuckyRecord other) : this() {
      type_ = other.type_;
      record_ = other.record_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyRecord Clone() {
      return new SCLuckyRecord(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.LuckyRecord> _repeated_record_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.LuckyRecord.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.LuckyRecord> record_ = new pbc::RepeatedField<global::BYDLD.LuckyRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.LuckyRecord> Record {
      get { return record_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLuckyRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLuckyRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!record_.Equals(other.record_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= record_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      record_.WriteTo(output, _repeated_record_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      record_.WriteTo(ref output, _repeated_record_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      size += record_.CalculateSize(_repeated_record_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLuckyRecord other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      record_.Add(other.record_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            record_.AddEntriesFrom(input, _repeated_record_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            record_.AddEntriesFrom(ref input, _repeated_record_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCOwnRecord : pb::IMessage<SCOwnRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCOwnRecord> _parser = new pb::MessageParser<SCOwnRecord>(() => new SCOwnRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCOwnRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[193]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOwnRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOwnRecord(SCOwnRecord other) : this() {
      record_ = other.record_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOwnRecord Clone() {
      return new SCOwnRecord(this);
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.OwnRecord> _repeated_record_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.OwnRecord.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.OwnRecord> record_ = new pbc::RepeatedField<global::BYDLD.OwnRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.OwnRecord> Record {
      get { return record_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCOwnRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCOwnRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!record_.Equals(other.record_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= record_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      record_.WriteTo(output, _repeated_record_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      record_.WriteTo(ref output, _repeated_record_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += record_.CalculateSize(_repeated_record_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCOwnRecord other) {
      if (other == null) {
        return;
      }
      record_.Add(other.record_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            record_.AddEntriesFrom(input, _repeated_record_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            record_.AddEntriesFrom(ref input, _repeated_record_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSDragonWheelStart : pb::IMessage<CSDragonWheelStart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSDragonWheelStart> _parser = new pb::MessageParser<CSDragonWheelStart>(() => new CSDragonWheelStart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSDragonWheelStart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[194]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonWheelStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonWheelStart(CSDragonWheelStart other) : this() {
      stage_ = other.stage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonWheelStart Clone() {
      return new CSDragonWheelStart(this);
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 1;
    private int stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSDragonWheelStart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSDragonWheelStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Stage != other.Stage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Stage != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Stage != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSDragonWheelStart other) {
      if (other == null) {
        return;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCDragonWheelStop : pb::IMessage<SCDragonWheelStop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCDragonWheelStop> _parser = new pb::MessageParser<SCDragonWheelStop>(() => new SCDragonWheelStop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDragonWheelStop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[195]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonWheelStop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonWheelStop(SCDragonWheelStop other) : this() {
      stage_ = other.stage_;
      ratio_ = other.ratio_;
      score_ = other.score_;
      atomicRatio_ = other.atomicRatio_;
      fortuneRatio_ = other.fortuneRatio_;
      poseidonRatio_ = other.poseidonRatio_;
      error_ = other.error_;
      chairId_ = other.chairId_;
      fishValue_ = other.fishValue_;
      isProp_ = other.isProp_;
      bulletRatio_ = other.bulletRatio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonWheelStop Clone() {
      return new SCDragonWheelStop(this);
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 1;
    private int stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 2;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "atomic_ratio" field.</summary>
    public const int AtomicRatioFieldNumber = 4;
    private int atomicRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AtomicRatio {
      get { return atomicRatio_; }
      set {
        atomicRatio_ = value;
      }
    }

    /// <summary>Field number for the "fortune_ratio" field.</summary>
    public const int FortuneRatioFieldNumber = 5;
    private int fortuneRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FortuneRatio {
      get { return fortuneRatio_; }
      set {
        fortuneRatio_ = value;
      }
    }

    /// <summary>Field number for the "poseidon_ratio" field.</summary>
    public const int PoseidonRatioFieldNumber = 6;
    private int poseidonRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PoseidonRatio {
      get { return poseidonRatio_; }
      set {
        poseidonRatio_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 7;
    private int error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 8;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "fish_value" field.</summary>
    public const int FishValueFieldNumber = 9;
    private int fishValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishValue {
      get { return fishValue_; }
      set {
        fishValue_ = value;
      }
    }

    /// <summary>Field number for the "is_prop" field.</summary>
    public const int IsPropFieldNumber = 10;
    private bool isProp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsProp {
      get { return isProp_; }
      set {
        isProp_ = value;
      }
    }

    /// <summary>Field number for the "bullet_ratio" field.</summary>
    public const int BulletRatioFieldNumber = 11;
    private int bulletRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletRatio {
      get { return bulletRatio_; }
      set {
        bulletRatio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDragonWheelStop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDragonWheelStop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Stage != other.Stage) return false;
      if (Ratio != other.Ratio) return false;
      if (Score != other.Score) return false;
      if (AtomicRatio != other.AtomicRatio) return false;
      if (FortuneRatio != other.FortuneRatio) return false;
      if (PoseidonRatio != other.PoseidonRatio) return false;
      if (Error != other.Error) return false;
      if (ChairId != other.ChairId) return false;
      if (FishValue != other.FishValue) return false;
      if (IsProp != other.IsProp) return false;
      if (BulletRatio != other.BulletRatio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Stage != 0) hash ^= Stage.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (AtomicRatio != 0) hash ^= AtomicRatio.GetHashCode();
      if (FortuneRatio != 0) hash ^= FortuneRatio.GetHashCode();
      if (PoseidonRatio != 0) hash ^= PoseidonRatio.GetHashCode();
      if (Error != 0) hash ^= Error.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (FishValue != 0) hash ^= FishValue.GetHashCode();
      if (IsProp != false) hash ^= IsProp.GetHashCode();
      if (BulletRatio != 0) hash ^= BulletRatio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Stage != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (Ratio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ratio);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (AtomicRatio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AtomicRatio);
      }
      if (FortuneRatio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FortuneRatio);
      }
      if (PoseidonRatio != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PoseidonRatio);
      }
      if (Error != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Error);
      }
      if (ChairId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ChairId);
      }
      if (FishValue != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FishValue);
      }
      if (IsProp != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsProp);
      }
      if (BulletRatio != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BulletRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Stage != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Stage);
      }
      if (Ratio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Ratio);
      }
      if (Score != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Score);
      }
      if (AtomicRatio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AtomicRatio);
      }
      if (FortuneRatio != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FortuneRatio);
      }
      if (PoseidonRatio != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PoseidonRatio);
      }
      if (Error != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Error);
      }
      if (ChairId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ChairId);
      }
      if (FishValue != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FishValue);
      }
      if (IsProp != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsProp);
      }
      if (BulletRatio != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BulletRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Stage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stage);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (AtomicRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AtomicRatio);
      }
      if (FortuneRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FortuneRatio);
      }
      if (PoseidonRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoseidonRatio);
      }
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Error);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (FishValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishValue);
      }
      if (IsProp != false) {
        size += 1 + 1;
      }
      if (BulletRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletRatio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDragonWheelStop other) {
      if (other == null) {
        return;
      }
      if (other.Stage != 0) {
        Stage = other.Stage;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.AtomicRatio != 0) {
        AtomicRatio = other.AtomicRatio;
      }
      if (other.FortuneRatio != 0) {
        FortuneRatio = other.FortuneRatio;
      }
      if (other.PoseidonRatio != 0) {
        PoseidonRatio = other.PoseidonRatio;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.FishValue != 0) {
        FishValue = other.FishValue;
      }
      if (other.IsProp != false) {
        IsProp = other.IsProp;
      }
      if (other.BulletRatio != 0) {
        BulletRatio = other.BulletRatio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
          case 16: {
            Ratio = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            AtomicRatio = input.ReadInt32();
            break;
          }
          case 40: {
            FortuneRatio = input.ReadInt32();
            break;
          }
          case 48: {
            PoseidonRatio = input.ReadInt32();
            break;
          }
          case 56: {
            Error = input.ReadInt32();
            break;
          }
          case 64: {
            ChairId = input.ReadInt32();
            break;
          }
          case 72: {
            FishValue = input.ReadInt32();
            break;
          }
          case 80: {
            IsProp = input.ReadBool();
            break;
          }
          case 88: {
            BulletRatio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Stage = input.ReadInt32();
            break;
          }
          case 16: {
            Ratio = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadInt32();
            break;
          }
          case 32: {
            AtomicRatio = input.ReadInt32();
            break;
          }
          case 40: {
            FortuneRatio = input.ReadInt32();
            break;
          }
          case 48: {
            PoseidonRatio = input.ReadInt32();
            break;
          }
          case 56: {
            Error = input.ReadInt32();
            break;
          }
          case 64: {
            ChairId = input.ReadInt32();
            break;
          }
          case 72: {
            FishValue = input.ReadInt32();
            break;
          }
          case 80: {
            IsProp = input.ReadBool();
            break;
          }
          case 88: {
            BulletRatio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncHallProp : pb::IMessage<SCSyncHallProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncHallProp> _parser = new pb::MessageParser<SCSyncHallProp>(() => new SCSyncHallProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncHallProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[196]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncHallProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncHallProp(SCSyncHallProp other) : this() {
      hallProp_ = other.hallProp_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncHallProp Clone() {
      return new SCSyncHallProp(this);
    }

    /// <summary>Field number for the "hall_prop" field.</summary>
    public const int HallPropFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.Object3> _repeated_hallProp_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.Object3.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.Object3> hallProp_ = new pbc::RepeatedField<global::BYDLD.Object3>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.Object3> HallProp {
      get { return hallProp_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncHallProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncHallProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hallProp_.Equals(other.hallProp_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hallProp_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      hallProp_.WriteTo(output, _repeated_hallProp_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      hallProp_.WriteTo(ref output, _repeated_hallProp_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hallProp_.CalculateSize(_repeated_hallProp_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncHallProp other) {
      if (other == null) {
        return;
      }
      hallProp_.Add(other.hallProp_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hallProp_.AddEntriesFrom(input, _repeated_hallProp_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            hallProp_.AddEntriesFrom(ref input, _repeated_hallProp_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSCheckDragonWheelProp : pb::IMessage<CSCheckDragonWheelProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSCheckDragonWheelProp> _parser = new pb::MessageParser<CSCheckDragonWheelProp>(() => new CSCheckDragonWheelProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSCheckDragonWheelProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[197]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCheckDragonWheelProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCheckDragonWheelProp(CSCheckDragonWheelProp other) : this() {
      propId_ = other.propId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSCheckDragonWheelProp Clone() {
      return new CSCheckDragonWheelProp(this);
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 1;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSCheckDragonWheelProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSCheckDragonWheelProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropId != other.PropId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PropId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSCheckDragonWheelProp other) {
      if (other == null) {
        return;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PropId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCCheckDragonWheelProp : pb::IMessage<SCCheckDragonWheelProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCCheckDragonWheelProp> _parser = new pb::MessageParser<SCCheckDragonWheelProp>(() => new SCCheckDragonWheelProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCCheckDragonWheelProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[198]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCheckDragonWheelProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCheckDragonWheelProp(SCCheckDragonWheelProp other) : this() {
      canUse_ = other.canUse_;
      propId_ = other.propId_;
      chairId_ = other.chairId_;
      ratio_ = other.ratio_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCCheckDragonWheelProp Clone() {
      return new SCCheckDragonWheelProp(this);
    }

    /// <summary>Field number for the "can_use" field.</summary>
    public const int CanUseFieldNumber = 1;
    private bool canUse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanUse {
      get { return canUse_; }
      set {
        canUse_ = value;
      }
    }

    /// <summary>Field number for the "prop_id" field.</summary>
    public const int PropIdFieldNumber = 2;
    private int propId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PropId {
      get { return propId_; }
      set {
        propId_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 3;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 4;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCCheckDragonWheelProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCCheckDragonWheelProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanUse != other.CanUse) return false;
      if (PropId != other.PropId) return false;
      if (ChairId != other.ChairId) return false;
      if (Ratio != other.Ratio) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CanUse != false) hash ^= CanUse.GetHashCode();
      if (PropId != 0) hash ^= PropId.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CanUse != false) {
        output.WriteRawTag(8);
        output.WriteBool(CanUse);
      }
      if (PropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairId);
      }
      if (Ratio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CanUse != false) {
        output.WriteRawTag(8);
        output.WriteBool(CanUse);
      }
      if (PropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairId);
      }
      if (Ratio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ratio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CanUse != false) {
        size += 1 + 1;
      }
      if (PropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropId);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCCheckDragonWheelProp other) {
      if (other == null) {
        return;
      }
      if (other.CanUse != false) {
        CanUse = other.CanUse;
      }
      if (other.PropId != 0) {
        PropId = other.PropId;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanUse = input.ReadBool();
            break;
          }
          case 16: {
            PropId = input.ReadInt32();
            break;
          }
          case 24: {
            ChairId = input.ReadInt32();
            break;
          }
          case 32: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CanUse = input.ReadBool();
            break;
          }
          case 16: {
            PropId = input.ReadInt32();
            break;
          }
          case 24: {
            ChairId = input.ReadInt32();
            break;
          }
          case 32: {
            Ratio = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserPoolDoubleInfo : pb::IMessage<CSUserPoolDoubleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserPoolDoubleInfo> _parser = new pb::MessageParser<CSUserPoolDoubleInfo>(() => new CSUserPoolDoubleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserPoolDoubleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[199]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDoubleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDoubleInfo(CSUserPoolDoubleInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDoubleInfo Clone() {
      return new CSUserPoolDoubleInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserPoolDoubleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserPoolDoubleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserPoolDoubleInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserPoolDoubleInfo : pb::IMessage<SCUserPoolDoubleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserPoolDoubleInfo> _parser = new pb::MessageParser<SCUserPoolDoubleInfo>(() => new SCUserPoolDoubleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserPoolDoubleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[200]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDoubleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDoubleInfo(SCUserPoolDoubleInfo other) : this() {
      cost_ = other.cost_;
      itemBefore_ = other.itemBefore_ != null ? other.itemBefore_.Clone() : null;
      itemDouble_ = other.itemDouble_ != null ? other.itemDouble_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDoubleInfo Clone() {
      return new SCUserPoolDoubleInfo(this);
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 1;
    private int cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "item_before" field.</summary>
    public const int ItemBeforeFieldNumber = 2;
    private global::BYDLD.GoodsInfo itemBefore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.GoodsInfo ItemBefore {
      get { return itemBefore_; }
      set {
        itemBefore_ = value;
      }
    }

    /// <summary>Field number for the "item_double" field.</summary>
    public const int ItemDoubleFieldNumber = 3;
    private global::BYDLD.GoodsInfo itemDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.GoodsInfo ItemDouble {
      get { return itemDouble_; }
      set {
        itemDouble_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserPoolDoubleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserPoolDoubleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cost != other.Cost) return false;
      if (!object.Equals(ItemBefore, other.ItemBefore)) return false;
      if (!object.Equals(ItemDouble, other.ItemDouble)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (itemBefore_ != null) hash ^= ItemBefore.GetHashCode();
      if (itemDouble_ != null) hash ^= ItemDouble.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Cost != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cost);
      }
      if (itemBefore_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ItemBefore);
      }
      if (itemDouble_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ItemDouble);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Cost != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Cost);
      }
      if (itemBefore_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ItemBefore);
      }
      if (itemDouble_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ItemDouble);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (itemBefore_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemBefore);
      }
      if (itemDouble_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemDouble);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserPoolDoubleInfo other) {
      if (other == null) {
        return;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.itemBefore_ != null) {
        if (itemBefore_ == null) {
          ItemBefore = new global::BYDLD.GoodsInfo();
        }
        ItemBefore.MergeFrom(other.ItemBefore);
      }
      if (other.itemDouble_ != null) {
        if (itemDouble_ == null) {
          ItemDouble = new global::BYDLD.GoodsInfo();
        }
        ItemDouble.MergeFrom(other.ItemDouble);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cost = input.ReadInt32();
            break;
          }
          case 18: {
            if (itemBefore_ == null) {
              ItemBefore = new global::BYDLD.GoodsInfo();
            }
            input.ReadMessage(ItemBefore);
            break;
          }
          case 26: {
            if (itemDouble_ == null) {
              ItemDouble = new global::BYDLD.GoodsInfo();
            }
            input.ReadMessage(ItemDouble);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Cost = input.ReadInt32();
            break;
          }
          case 18: {
            if (itemBefore_ == null) {
              ItemBefore = new global::BYDLD.GoodsInfo();
            }
            input.ReadMessage(ItemBefore);
            break;
          }
          case 26: {
            if (itemDouble_ == null) {
              ItemDouble = new global::BYDLD.GoodsInfo();
            }
            input.ReadMessage(ItemDouble);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSUserPoolDouble : pb::IMessage<CSUserPoolDouble>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSUserPoolDouble> _parser = new pb::MessageParser<CSUserPoolDouble>(() => new CSUserPoolDouble());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUserPoolDouble> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[201]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDouble() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDouble(CSUserPoolDouble other) : this() {
      isDouble_ = other.isDouble_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUserPoolDouble Clone() {
      return new CSUserPoolDouble(this);
    }

    /// <summary>Field number for the "is_double" field.</summary>
    public const int IsDoubleFieldNumber = 1;
    private bool isDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDouble {
      get { return isDouble_; }
      set {
        isDouble_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUserPoolDouble);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUserPoolDouble other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsDouble != other.IsDouble) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsDouble != false) hash ^= IsDouble.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsDouble != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsDouble);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsDouble != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsDouble);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsDouble != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUserPoolDouble other) {
      if (other == null) {
        return;
      }
      if (other.IsDouble != false) {
        IsDouble = other.IsDouble;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsDouble = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsDouble = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUserPoolDouble : pb::IMessage<SCUserPoolDouble>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUserPoolDouble> _parser = new pb::MessageParser<SCUserPoolDouble>(() => new SCUserPoolDouble());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUserPoolDouble> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[202]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDouble() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDouble(SCUserPoolDouble other) : this() {
      code_ = other.code_;
      result_ = other.result_;
      chairIdx_ = other.chairIdx_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      extraItem_ = other.extraItem_ != null ? other.extraItem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUserPoolDouble Clone() {
      return new SCUserPoolDouble(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 3;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::BYDLD.Object3 item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.Object3 Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "extra_item" field.</summary>
    public const int ExtraItemFieldNumber = 5;
    private global::BYDLD.Object3 extraItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.Object3 ExtraItem {
      get { return extraItem_; }
      set {
        extraItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUserPoolDouble);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUserPoolDouble other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Result != other.Result) return false;
      if (ChairIdx != other.ChairIdx) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(ExtraItem, other.ExtraItem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (extraItem_ != null) hash ^= ExtraItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Result);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairIdx);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (extraItem_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtraItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Result != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Result);
      }
      if (ChairIdx != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairIdx);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (extraItem_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExtraItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (extraItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtraItem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUserPoolDouble other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::BYDLD.Object3();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.extraItem_ != null) {
        if (extraItem_ == null) {
          ExtraItem = new global::BYDLD.Object3();
        }
        ExtraItem.MergeFrom(other.ExtraItem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Result = input.ReadInt32();
            break;
          }
          case 24: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::BYDLD.Object3();
            }
            input.ReadMessage(Item);
            break;
          }
          case 42: {
            if (extraItem_ == null) {
              ExtraItem = new global::BYDLD.Object3();
            }
            input.ReadMessage(ExtraItem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 16: {
            Result = input.ReadInt32();
            break;
          }
          case 24: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 34: {
            if (item_ == null) {
              Item = new global::BYDLD.Object3();
            }
            input.ReadMessage(Item);
            break;
          }
          case 42: {
            if (extraItem_ == null) {
              ExtraItem = new global::BYDLD.Object3();
            }
            input.ReadMessage(ExtraItem);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLuckyPoolInfo : pb::IMessage<CSLuckyPoolInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLuckyPoolInfo> _parser = new pb::MessageParser<CSLuckyPoolInfo>(() => new CSLuckyPoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLuckyPoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[203]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyPoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyPoolInfo(CSLuckyPoolInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyPoolInfo Clone() {
      return new CSLuckyPoolInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLuckyPoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLuckyPoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLuckyPoolInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCLuckyPoolInfo : pb::IMessage<SCLuckyPoolInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLuckyPoolInfo> _parser = new pb::MessageParser<SCLuckyPoolInfo>(() => new SCLuckyPoolInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLuckyPoolInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[204]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyPoolInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyPoolInfo(SCLuckyPoolInfo other) : this() {
      count_ = other.count_;
      max_ = other.max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyPoolInfo Clone() {
      return new SCLuckyPoolInfo(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private int max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLuckyPoolInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLuckyPoolInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (Max != other.Max) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Max != 0) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (Max != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (Max != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Max != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Max);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLuckyPoolInfo other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Max != 0) {
        Max = other.Max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
          case 16: {
            Max = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
          case 16: {
            Max = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSLuckyPoolDraw : pb::IMessage<CSLuckyPoolDraw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSLuckyPoolDraw> _parser = new pb::MessageParser<CSLuckyPoolDraw>(() => new CSLuckyPoolDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSLuckyPoolDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[205]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyPoolDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyPoolDraw(CSLuckyPoolDraw other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSLuckyPoolDraw Clone() {
      return new CSLuckyPoolDraw(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSLuckyPoolDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSLuckyPoolDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSLuckyPoolDraw other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCLuckyPoolDraw : pb::IMessage<SCLuckyPoolDraw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCLuckyPoolDraw> _parser = new pb::MessageParser<SCLuckyPoolDraw>(() => new SCLuckyPoolDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCLuckyPoolDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[206]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyPoolDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyPoolDraw(SCLuckyPoolDraw other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCLuckyPoolDraw Clone() {
      return new SCLuckyPoolDraw(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::BYDLD.Object3 item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.Object3 Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCLuckyPoolDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCLuckyPoolDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCLuckyPoolDraw other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::BYDLD.Object3();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::BYDLD.Object3();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::BYDLD.Object3();
            }
            input.ReadMessage(Item);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TridentRankList : pb::IMessage<TridentRankList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TridentRankList> _parser = new pb::MessageParser<TridentRankList>(() => new TridentRankList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TridentRankList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[207]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TridentRankList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TridentRankList(TridentRankList other) : this() {
      userDbid_ = other.userDbid_;
      nickName_ = other.nickName_;
      continueTimes_ = other.continueTimes_;
      dateTime_ = other.dateTime_;
      rank_ = other.rank_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TridentRankList Clone() {
      return new TridentRankList(this);
    }

    /// <summary>Field number for the "user_dbid" field.</summary>
    public const int UserDbidFieldNumber = 1;
    private int userDbid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserDbid {
      get { return userDbid_; }
      set {
        userDbid_ = value;
      }
    }

    /// <summary>Field number for the "nick_name" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "continue_times" field.</summary>
    public const int ContinueTimesFieldNumber = 3;
    private int continueTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContinueTimes {
      get { return continueTimes_; }
      set {
        continueTimes_ = value;
      }
    }

    /// <summary>Field number for the "date_time" field.</summary>
    public const int DateTimeFieldNumber = 4;
    private string dateTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DateTime {
      get { return dateTime_; }
      set {
        dateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 5;
    private int rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TridentRankList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TridentRankList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserDbid != other.UserDbid) return false;
      if (NickName != other.NickName) return false;
      if (ContinueTimes != other.ContinueTimes) return false;
      if (DateTime != other.DateTime) return false;
      if (Rank != other.Rank) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserDbid != 0) hash ^= UserDbid.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (ContinueTimes != 0) hash ^= ContinueTimes.GetHashCode();
      if (DateTime.Length != 0) hash ^= DateTime.GetHashCode();
      if (Rank != 0) hash ^= Rank.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserDbid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserDbid);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (ContinueTimes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ContinueTimes);
      }
      if (DateTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DateTime);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserDbid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserDbid);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (ContinueTimes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ContinueTimes);
      }
      if (DateTime.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DateTime);
      }
      if (Rank != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Rank);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserDbid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserDbid);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (ContinueTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContinueTimes);
      }
      if (DateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DateTime);
      }
      if (Rank != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TridentRankList other) {
      if (other == null) {
        return;
      }
      if (other.UserDbid != 0) {
        UserDbid = other.UserDbid;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.ContinueTimes != 0) {
        ContinueTimes = other.ContinueTimes;
      }
      if (other.DateTime.Length != 0) {
        DateTime = other.DateTime;
      }
      if (other.Rank != 0) {
        Rank = other.Rank;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserDbid = input.ReadInt32();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 24: {
            ContinueTimes = input.ReadInt32();
            break;
          }
          case 34: {
            DateTime = input.ReadString();
            break;
          }
          case 40: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserDbid = input.ReadInt32();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 24: {
            ContinueTimes = input.ReadInt32();
            break;
          }
          case 34: {
            DateTime = input.ReadString();
            break;
          }
          case 40: {
            Rank = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTridentRankResult : pb::IMessage<SCTridentRankResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTridentRankResult> _parser = new pb::MessageParser<SCTridentRankResult>(() => new SCTridentRankResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTridentRankResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[208]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentRankResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentRankResult(SCTridentRankResult other) : this() {
      curRanks_ = other.curRanks_.Clone();
      hisRanks_ = other.hisRanks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTridentRankResult Clone() {
      return new SCTridentRankResult(this);
    }

    /// <summary>Field number for the "cur_ranks" field.</summary>
    public const int CurRanksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.TridentRankList> _repeated_curRanks_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.TridentRankList.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.TridentRankList> curRanks_ = new pbc::RepeatedField<global::BYDLD.TridentRankList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.TridentRankList> CurRanks {
      get { return curRanks_; }
    }

    /// <summary>Field number for the "his_ranks" field.</summary>
    public const int HisRanksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.TridentRankList> _repeated_hisRanks_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.TridentRankList.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.TridentRankList> hisRanks_ = new pbc::RepeatedField<global::BYDLD.TridentRankList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.TridentRankList> HisRanks {
      get { return hisRanks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTridentRankResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTridentRankResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!curRanks_.Equals(other.curRanks_)) return false;
      if(!hisRanks_.Equals(other.hisRanks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= curRanks_.GetHashCode();
      hash ^= hisRanks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      curRanks_.WriteTo(output, _repeated_curRanks_codec);
      hisRanks_.WriteTo(output, _repeated_hisRanks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      curRanks_.WriteTo(ref output, _repeated_curRanks_codec);
      hisRanks_.WriteTo(ref output, _repeated_hisRanks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += curRanks_.CalculateSize(_repeated_curRanks_codec);
      size += hisRanks_.CalculateSize(_repeated_hisRanks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTridentRankResult other) {
      if (other == null) {
        return;
      }
      curRanks_.Add(other.curRanks_);
      hisRanks_.Add(other.hisRanks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            curRanks_.AddEntriesFrom(input, _repeated_curRanks_codec);
            break;
          }
          case 18: {
            hisRanks_.AddEntriesFrom(input, _repeated_hisRanks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            curRanks_.AddEntriesFrom(ref input, _repeated_curRanks_codec);
            break;
          }
          case 18: {
            hisRanks_.AddEntriesFrom(ref input, _repeated_hisRanks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSBigSmallWinInfo : pb::IMessage<CSBigSmallWinInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSBigSmallWinInfo> _parser = new pb::MessageParser<CSBigSmallWinInfo>(() => new CSBigSmallWinInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBigSmallWinInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[209]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallWinInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallWinInfo(CSBigSmallWinInfo other) : this() {
      chairIdx_ = other.chairIdx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallWinInfo Clone() {
      return new CSBigSmallWinInfo(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBigSmallWinInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBigSmallWinInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBigSmallWinInfo other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCBigSmallWinInfo : pb::IMessage<SCBigSmallWinInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCBigSmallWinInfo> _parser = new pb::MessageParser<SCBigSmallWinInfo>(() => new SCBigSmallWinInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBigSmallWinInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[210]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallWinInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallWinInfo(SCBigSmallWinInfo other) : this() {
      curWinTimes_ = other.curWinTimes_;
      todayWinTimes_ = other.todayWinTimes_;
      dateTime_ = other.dateTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallWinInfo Clone() {
      return new SCBigSmallWinInfo(this);
    }

    /// <summary>Field number for the "cur_win_times" field.</summary>
    public const int CurWinTimesFieldNumber = 1;
    private int curWinTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurWinTimes {
      get { return curWinTimes_; }
      set {
        curWinTimes_ = value;
      }
    }

    /// <summary>Field number for the "today_win_times" field.</summary>
    public const int TodayWinTimesFieldNumber = 2;
    private int todayWinTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TodayWinTimes {
      get { return todayWinTimes_; }
      set {
        todayWinTimes_ = value;
      }
    }

    /// <summary>Field number for the "date_time" field.</summary>
    public const int DateTimeFieldNumber = 3;
    private string dateTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DateTime {
      get { return dateTime_; }
      set {
        dateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBigSmallWinInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBigSmallWinInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurWinTimes != other.CurWinTimes) return false;
      if (TodayWinTimes != other.TodayWinTimes) return false;
      if (DateTime != other.DateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurWinTimes != 0) hash ^= CurWinTimes.GetHashCode();
      if (TodayWinTimes != 0) hash ^= TodayWinTimes.GetHashCode();
      if (DateTime.Length != 0) hash ^= DateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurWinTimes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurWinTimes);
      }
      if (TodayWinTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TodayWinTimes);
      }
      if (DateTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurWinTimes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurWinTimes);
      }
      if (TodayWinTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TodayWinTimes);
      }
      if (DateTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurWinTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurWinTimes);
      }
      if (TodayWinTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TodayWinTimes);
      }
      if (DateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBigSmallWinInfo other) {
      if (other == null) {
        return;
      }
      if (other.CurWinTimes != 0) {
        CurWinTimes = other.CurWinTimes;
      }
      if (other.TodayWinTimes != 0) {
        TodayWinTimes = other.TodayWinTimes;
      }
      if (other.DateTime.Length != 0) {
        DateTime = other.DateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurWinTimes = input.ReadInt32();
            break;
          }
          case 16: {
            TodayWinTimes = input.ReadInt32();
            break;
          }
          case 26: {
            DateTime = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurWinTimes = input.ReadInt32();
            break;
          }
          case 16: {
            TodayWinTimes = input.ReadInt32();
            break;
          }
          case 26: {
            DateTime = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSBigSmallRecord : pb::IMessage<CSBigSmallRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSBigSmallRecord> _parser = new pb::MessageParser<CSBigSmallRecord>(() => new CSBigSmallRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBigSmallRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[211]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallRecord(CSBigSmallRecord other) : this() {
      maxGet_ = other.maxGet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBigSmallRecord Clone() {
      return new CSBigSmallRecord(this);
    }

    /// <summary>Field number for the "max_get" field.</summary>
    public const int MaxGetFieldNumber = 1;
    private int maxGet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxGet {
      get { return maxGet_; }
      set {
        maxGet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBigSmallRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBigSmallRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxGet != other.MaxGet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxGet != 0) hash ^= MaxGet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxGet != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxGet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxGet != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxGet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxGet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxGet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBigSmallRecord other) {
      if (other == null) {
        return;
      }
      if (other.MaxGet != 0) {
        MaxGet = other.MaxGet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxGet = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxGet = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BigSmallRecord : pb::IMessage<BigSmallRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BigSmallRecord> _parser = new pb::MessageParser<BigSmallRecord>(() => new BigSmallRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigSmallRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[212]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigSmallRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigSmallRecord(BigSmallRecord other) : this() {
      dices_ = other.dices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigSmallRecord Clone() {
      return new BigSmallRecord(this);
    }

    /// <summary>Field number for the "dices" field.</summary>
    public const int DicesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_dices_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> dices_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Dices {
      get { return dices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigSmallRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigSmallRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dices_.Equals(other.dices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dices_.WriteTo(output, _repeated_dices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dices_.WriteTo(ref output, _repeated_dices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dices_.CalculateSize(_repeated_dices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigSmallRecord other) {
      if (other == null) {
        return;
      }
      dices_.Add(other.dices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            dices_.AddEntriesFrom(input, _repeated_dices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            dices_.AddEntriesFrom(ref input, _repeated_dices_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCBigSmallRecord : pb::IMessage<SCBigSmallRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCBigSmallRecord> _parser = new pb::MessageParser<SCBigSmallRecord>(() => new SCBigSmallRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBigSmallRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[213]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallRecord(SCBigSmallRecord other) : this() {
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBigSmallRecord Clone() {
      return new SCBigSmallRecord(this);
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.BigSmallRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.BigSmallRecord.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.BigSmallRecord> records_ = new pbc::RepeatedField<global::BYDLD.BigSmallRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.BigSmallRecord> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBigSmallRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBigSmallRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      records_.WriteTo(output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      records_.WriteTo(ref output, _repeated_records_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBigSmallRecord other) {
      if (other == null) {
        return;
      }
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            records_.AddEntriesFrom(ref input, _repeated_records_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemEnableInfo : pb::IMessage<ItemEnableInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemEnableInfo> _parser = new pb::MessageParser<ItemEnableInfo>(() => new ItemEnableInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemEnableInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[214]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemEnableInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemEnableInfo(ItemEnableInfo other) : this() {
      name_ = other.name_;
      enable_ = other.enable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemEnableInfo Clone() {
      return new ItemEnableInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private int name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 2;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemEnableInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemEnableInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Enable != other.Enable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name != 0) hash ^= Name.GetHashCode();
      if (Enable != false) hash ^= Enable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Name);
      }
      if (Enable != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Name);
      }
      if (Enable != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Name);
      }
      if (Enable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemEnableInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name != 0) {
        Name = other.Name;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Name = input.ReadInt32();
            break;
          }
          case 16: {
            Enable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Name = input.ReadInt32();
            break;
          }
          case 16: {
            Enable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemEnableNotice : pb::IMessage<ItemEnableNotice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemEnableNotice> _parser = new pb::MessageParser<ItemEnableNotice>(() => new ItemEnableNotice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemEnableNotice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[215]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemEnableNotice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemEnableNotice(ItemEnableNotice other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemEnableNotice Clone() {
      return new ItemEnableNotice(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.ItemEnableInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.ItemEnableInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.ItemEnableInfo> items_ = new pbc::RepeatedField<global::BYDLD.ItemEnableInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.ItemEnableInfo> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemEnableNotice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemEnableNotice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemEnableNotice other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardTask : pb::IMessage<RewardTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardTask> _parser = new pb::MessageParser<RewardTask>(() => new RewardTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[216]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardTask(RewardTask other) : this() {
      taskId_ = other.taskId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardTask Clone() {
      return new RewardTask(this);
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardTask other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardConf : pb::IMessage<RewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardConf> _parser = new pb::MessageParser<RewardConf>(() => new RewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[217]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardConf(RewardConf other) : this() {
      taskID_ = other.taskID_;
      nAward_ = other.nAward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardConf Clone() {
      return new RewardConf(this);
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 1;
    private int taskID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskID {
      get { return taskID_; }
      set {
        taskID_ = value;
      }
    }

    /// <summary>Field number for the "nAward" field.</summary>
    public const int NAwardFieldNumber = 2;
    private int nAward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NAward {
      get { return nAward_; }
      set {
        nAward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskID != other.TaskID) return false;
      if (NAward != other.NAward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskID != 0) hash ^= TaskID.GetHashCode();
      if (NAward != 0) hash ^= NAward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskID);
      }
      if (NAward != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NAward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskID);
      }
      if (NAward != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NAward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskID);
      }
      if (NAward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NAward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardConf other) {
      if (other == null) {
        return;
      }
      if (other.TaskID != 0) {
        TaskID = other.TaskID;
      }
      if (other.NAward != 0) {
        NAward = other.NAward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskID = input.ReadInt32();
            break;
          }
          case 16: {
            NAward = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskID = input.ReadInt32();
            break;
          }
          case 16: {
            NAward = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSReqRewardAddTask : pb::IMessage<CSReqRewardAddTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSReqRewardAddTask> _parser = new pb::MessageParser<CSReqRewardAddTask>(() => new CSReqRewardAddTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSReqRewardAddTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[218]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReqRewardAddTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReqRewardAddTask(CSReqRewardAddTask other) : this() {
      iD_ = other.iD_;
      taskID_ = other.taskID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReqRewardAddTask Clone() {
      return new CSReqRewardAddTask(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private int taskID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskID {
      get { return taskID_; }
      set {
        taskID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSReqRewardAddTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSReqRewardAddTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (TaskID != other.TaskID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (TaskID != 0) hash ^= TaskID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (TaskID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (TaskID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (TaskID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSReqRewardAddTask other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.TaskID != 0) {
        TaskID = other.TaskID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            TaskID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            TaskID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCRepRewardTaskList : pb::IMessage<SCRepRewardTaskList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCRepRewardTaskList> _parser = new pb::MessageParser<SCRepRewardTaskList>(() => new SCRepRewardTaskList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRepRewardTaskList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[219]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepRewardTaskList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepRewardTaskList(SCRepRewardTaskList other) : this() {
      iD_ = other.iD_;
      tList_ = other.tList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepRewardTaskList Clone() {
      return new SCRepRewardTaskList(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "tList" field.</summary>
    public const int TListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.RewardTask> _repeated_tList_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.RewardTask.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.RewardTask> tList_ = new pbc::RepeatedField<global::BYDLD.RewardTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.RewardTask> TList {
      get { return tList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRepRewardTaskList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRepRewardTaskList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if(!tList_.Equals(other.tList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      hash ^= tList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      tList_.WriteTo(output, _repeated_tList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      tList_.WriteTo(ref output, _repeated_tList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      size += tList_.CalculateSize(_repeated_tList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRepRewardTaskList other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      tList_.Add(other.tList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 18: {
            tList_.AddEntriesFrom(input, _repeated_tList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 18: {
            tList_.AddEntriesFrom(ref input, _repeated_tList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCRewardTaskFinish : pb::IMessage<SCRewardTaskFinish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCRewardTaskFinish> _parser = new pb::MessageParser<SCRewardTaskFinish>(() => new SCRewardTaskFinish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRewardTaskFinish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[220]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRewardTaskFinish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRewardTaskFinish(SCRewardTaskFinish other) : this() {
      result_ = other.result_;
      money_ = other.money_;
      tList_ = other.tList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRewardTaskFinish Clone() {
      return new SCRewardTaskFinish(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 2;
    private int money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "tList" field.</summary>
    public const int TListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::BYDLD.RewardTask> _repeated_tList_codec
        = pb::FieldCodec.ForMessage(26, global::BYDLD.RewardTask.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.RewardTask> tList_ = new pbc::RepeatedField<global::BYDLD.RewardTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.RewardTask> TList {
      get { return tList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRewardTaskFinish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRewardTaskFinish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Money != other.Money) return false;
      if(!tList_.Equals(other.tList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Money != 0) hash ^= Money.GetHashCode();
      hash ^= tList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      tList_.WriteTo(output, _repeated_tList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (Money != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Money);
      }
      tList_.WriteTo(ref output, _repeated_tList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (Money != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
      }
      size += tList_.CalculateSize(_repeated_tList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRewardTaskFinish other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Money != 0) {
        Money = other.Money;
      }
      tList_.Add(other.tList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
          case 26: {
            tList_.AddEntriesFrom(input, _repeated_tList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
          case 16: {
            Money = input.ReadInt32();
            break;
          }
          case 26: {
            tList_.AddEntriesFrom(ref input, _repeated_tList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncRewardTaskResult : pb::IMessage<SCSyncRewardTaskResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncRewardTaskResult> _parser = new pb::MessageParser<SCSyncRewardTaskResult>(() => new SCSyncRewardTaskResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncRewardTaskResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[221]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncRewardTaskResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncRewardTaskResult(SCSyncRewardTaskResult other) : this() {
      chairId_ = other.chairId_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      earn_ = other.earn_;
      fishId_ = other.fishId_;
      getPeilv_ = other.getPeilv_;
      multiple_ = other.multiple_;
      critMultiple_ = other.critMultiple_;
      ingotMulti_ = other.ingotMulti_;
      tridentMulti_ = other.tridentMulti_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncRewardTaskResult Clone() {
      return new SCSyncRewardTaskResult(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::BYDLD.SCRewardTaskFinish result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.SCRewardTaskFinish Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "earn" field.</summary>
    public const int EarnFieldNumber = 3;
    private int earn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Earn {
      get { return earn_; }
      set {
        earn_ = value;
      }
    }

    /// <summary>Field number for the "fish_id" field.</summary>
    public const int FishIdFieldNumber = 4;
    private int fishId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishId {
      get { return fishId_; }
      set {
        fishId_ = value;
      }
    }

    /// <summary>Field number for the "get_peilv" field.</summary>
    public const int GetPeilvFieldNumber = 5;
    private int getPeilv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GetPeilv {
      get { return getPeilv_; }
      set {
        getPeilv_ = value;
      }
    }

    /// <summary>Field number for the "multiple" field.</summary>
    public const int MultipleFieldNumber = 6;
    private int multiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple {
      get { return multiple_; }
      set {
        multiple_ = value;
      }
    }

    /// <summary>Field number for the "crit_multiple" field.</summary>
    public const int CritMultipleFieldNumber = 7;
    private int critMultiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritMultiple {
      get { return critMultiple_; }
      set {
        critMultiple_ = value;
      }
    }

    /// <summary>Field number for the "ingot_multi" field.</summary>
    public const int IngotMultiFieldNumber = 8;
    private int ingotMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IngotMulti {
      get { return ingotMulti_; }
      set {
        ingotMulti_ = value;
      }
    }

    /// <summary>Field number for the "trident_multi" field.</summary>
    public const int TridentMultiFieldNumber = 9;
    private int tridentMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TridentMulti {
      get { return tridentMulti_; }
      set {
        tridentMulti_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncRewardTaskResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncRewardTaskResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (Earn != other.Earn) return false;
      if (FishId != other.FishId) return false;
      if (GetPeilv != other.GetPeilv) return false;
      if (Multiple != other.Multiple) return false;
      if (CritMultiple != other.CritMultiple) return false;
      if (IngotMulti != other.IngotMulti) return false;
      if (TridentMulti != other.TridentMulti) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (Earn != 0) hash ^= Earn.GetHashCode();
      if (FishId != 0) hash ^= FishId.GetHashCode();
      if (GetPeilv != 0) hash ^= GetPeilv.GetHashCode();
      if (Multiple != 0) hash ^= Multiple.GetHashCode();
      if (CritMultiple != 0) hash ^= CritMultiple.GetHashCode();
      if (IngotMulti != 0) hash ^= IngotMulti.GetHashCode();
      if (TridentMulti != 0) hash ^= TridentMulti.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (Earn != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Earn);
      }
      if (FishId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FishId);
      }
      if (GetPeilv != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GetPeilv);
      }
      if (Multiple != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Multiple);
      }
      if (CritMultiple != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CritMultiple);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(IngotMulti);
      }
      if (TridentMulti != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TridentMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (Earn != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Earn);
      }
      if (FishId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FishId);
      }
      if (GetPeilv != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GetPeilv);
      }
      if (Multiple != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Multiple);
      }
      if (CritMultiple != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CritMultiple);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(IngotMulti);
      }
      if (TridentMulti != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TridentMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (Earn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Earn);
      }
      if (FishId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishId);
      }
      if (GetPeilv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GetPeilv);
      }
      if (Multiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
      }
      if (CritMultiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritMultiple);
      }
      if (IngotMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IngotMulti);
      }
      if (TridentMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TridentMulti);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncRewardTaskResult other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::BYDLD.SCRewardTaskFinish();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.Earn != 0) {
        Earn = other.Earn;
      }
      if (other.FishId != 0) {
        FishId = other.FishId;
      }
      if (other.GetPeilv != 0) {
        GetPeilv = other.GetPeilv;
      }
      if (other.Multiple != 0) {
        Multiple = other.Multiple;
      }
      if (other.CritMultiple != 0) {
        CritMultiple = other.CritMultiple;
      }
      if (other.IngotMulti != 0) {
        IngotMulti = other.IngotMulti;
      }
      if (other.TridentMulti != 0) {
        TridentMulti = other.TridentMulti;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::BYDLD.SCRewardTaskFinish();
            }
            input.ReadMessage(Result);
            break;
          }
          case 24: {
            Earn = input.ReadInt32();
            break;
          }
          case 32: {
            FishId = input.ReadInt32();
            break;
          }
          case 40: {
            GetPeilv = input.ReadInt32();
            break;
          }
          case 48: {
            Multiple = input.ReadInt32();
            break;
          }
          case 56: {
            CritMultiple = input.ReadInt32();
            break;
          }
          case 64: {
            IngotMulti = input.ReadInt32();
            break;
          }
          case 72: {
            TridentMulti = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::BYDLD.SCRewardTaskFinish();
            }
            input.ReadMessage(Result);
            break;
          }
          case 24: {
            Earn = input.ReadInt32();
            break;
          }
          case 32: {
            FishId = input.ReadInt32();
            break;
          }
          case 40: {
            GetPeilv = input.ReadInt32();
            break;
          }
          case 48: {
            Multiple = input.ReadInt32();
            break;
          }
          case 56: {
            CritMultiple = input.ReadInt32();
            break;
          }
          case 64: {
            IngotMulti = input.ReadInt32();
            break;
          }
          case 72: {
            TridentMulti = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSReqRewardRecord : pb::IMessage<CSReqRewardRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSReqRewardRecord> _parser = new pb::MessageParser<CSReqRewardRecord>(() => new CSReqRewardRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSReqRewardRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[222]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReqRewardRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReqRewardRecord(CSReqRewardRecord other) : this() {
      iD_ = other.iD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSReqRewardRecord Clone() {
      return new CSReqRewardRecord(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSReqRewardRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSReqRewardRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSReqRewardRecord other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCRepRewardTaskRecord : pb::IMessage<SCRepRewardTaskRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCRepRewardTaskRecord> _parser = new pb::MessageParser<SCRepRewardTaskRecord>(() => new SCRepRewardTaskRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRepRewardTaskRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[223]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepRewardTaskRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepRewardTaskRecord(SCRepRewardTaskRecord other) : this() {
      iD_ = other.iD_;
      nRecord_ = other.nRecord_;
      cost_ = other.cost_;
      record_ = other.record_.Clone();
      confList_ = other.confList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRepRewardTaskRecord Clone() {
      return new SCRepRewardTaskRecord(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "nRecord" field.</summary>
    public const int NRecordFieldNumber = 2;
    private int nRecord_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NRecord {
      get { return nRecord_; }
      set {
        nRecord_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 3;
    private int cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "record" field.</summary>
    public const int RecordFieldNumber = 4;
    private static readonly pb::FieldCodec<global::BYDLD.SCRewardTaskFinish> _repeated_record_codec
        = pb::FieldCodec.ForMessage(34, global::BYDLD.SCRewardTaskFinish.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.SCRewardTaskFinish> record_ = new pbc::RepeatedField<global::BYDLD.SCRewardTaskFinish>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.SCRewardTaskFinish> Record {
      get { return record_; }
    }

    /// <summary>Field number for the "confList" field.</summary>
    public const int ConfListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::BYDLD.RewardConf> _repeated_confList_codec
        = pb::FieldCodec.ForMessage(42, global::BYDLD.RewardConf.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.RewardConf> confList_ = new pbc::RepeatedField<global::BYDLD.RewardConf>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.RewardConf> ConfList {
      get { return confList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRepRewardTaskRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRepRewardTaskRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (NRecord != other.NRecord) return false;
      if (Cost != other.Cost) return false;
      if(!record_.Equals(other.record_)) return false;
      if(!confList_.Equals(other.confList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (NRecord != 0) hash ^= NRecord.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      hash ^= record_.GetHashCode();
      hash ^= confList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (NRecord != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NRecord);
      }
      if (Cost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cost);
      }
      record_.WriteTo(output, _repeated_record_codec);
      confList_.WriteTo(output, _repeated_confList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (NRecord != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NRecord);
      }
      if (Cost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cost);
      }
      record_.WriteTo(ref output, _repeated_record_codec);
      confList_.WriteTo(ref output, _repeated_confList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (NRecord != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NRecord);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      size += record_.CalculateSize(_repeated_record_codec);
      size += confList_.CalculateSize(_repeated_confList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRepRewardTaskRecord other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.NRecord != 0) {
        NRecord = other.NRecord;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      record_.Add(other.record_);
      confList_.Add(other.confList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            NRecord = input.ReadInt32();
            break;
          }
          case 24: {
            Cost = input.ReadInt32();
            break;
          }
          case 34: {
            record_.AddEntriesFrom(input, _repeated_record_codec);
            break;
          }
          case 42: {
            confList_.AddEntriesFrom(input, _repeated_confList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            NRecord = input.ReadInt32();
            break;
          }
          case 24: {
            Cost = input.ReadInt32();
            break;
          }
          case 34: {
            record_.AddEntriesFrom(ref input, _repeated_record_codec);
            break;
          }
          case 42: {
            confList_.AddEntriesFrom(ref input, _repeated_confList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSRewardChangeAuto : pb::IMessage<CSRewardChangeAuto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSRewardChangeAuto> _parser = new pb::MessageParser<CSRewardChangeAuto>(() => new CSRewardChangeAuto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSRewardChangeAuto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[224]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRewardChangeAuto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRewardChangeAuto(CSRewardChangeAuto other) : this() {
      autoTimes_ = other.autoTimes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRewardChangeAuto Clone() {
      return new CSRewardChangeAuto(this);
    }

    /// <summary>Field number for the "autoTimes" field.</summary>
    public const int AutoTimesFieldNumber = 1;
    private int autoTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AutoTimes {
      get { return autoTimes_; }
      set {
        autoTimes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSRewardChangeAuto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSRewardChangeAuto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoTimes != other.AutoTimes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoTimes != 0) hash ^= AutoTimes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AutoTimes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AutoTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AutoTimes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AutoTimes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AutoTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AutoTimes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSRewardChangeAuto other) {
      if (other == null) {
        return;
      }
      if (other.AutoTimes != 0) {
        AutoTimes = other.AutoTimes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AutoTimes = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AutoTimes = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCRewardAutoRep : pb::IMessage<SCRewardAutoRep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCRewardAutoRep> _parser = new pb::MessageParser<SCRewardAutoRep>(() => new SCRewardAutoRep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRewardAutoRep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[225]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRewardAutoRep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRewardAutoRep(SCRewardAutoRep other) : this() {
      status_ = other.status_;
      accept_ = other.accept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRewardAutoRep Clone() {
      return new SCRewardAutoRep(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 2;
    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRewardAutoRep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRewardAutoRep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Accept != other.Accept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Accept != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Accept != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRewardAutoRep other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 16: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 16: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSeaCrabCreate : pb::IMessage<SCSeaCrabCreate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSeaCrabCreate> _parser = new pb::MessageParser<SCSeaCrabCreate>(() => new SCSeaCrabCreate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSeaCrabCreate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[226]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSeaCrabCreate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSeaCrabCreate(SCSeaCrabCreate other) : this() {
      chairId_ = other.chairId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSeaCrabCreate Clone() {
      return new SCSeaCrabCreate(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSeaCrabCreate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSeaCrabCreate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSeaCrabCreate other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSyncCrabStatus : pb::IMessage<CSSyncCrabStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSyncCrabStatus> _parser = new pb::MessageParser<CSSyncCrabStatus>(() => new CSSyncCrabStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSyncCrabStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[227]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncCrabStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncCrabStatus(CSSyncCrabStatus other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncCrabStatus Clone() {
      return new CSSyncCrabStatus(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSyncCrabStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSyncCrabStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSyncCrabStatus other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncCrabStatus : pb::IMessage<SCSyncCrabStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncCrabStatus> _parser = new pb::MessageParser<SCSyncCrabStatus>(() => new SCSyncCrabStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncCrabStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[228]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncCrabStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncCrabStatus(SCSyncCrabStatus other) : this() {
      status_ = other.status_;
      chairId_ = other.chairId_;
      multiple1_ = other.multiple1_;
      multiple2_ = other.multiple2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncCrabStatus Clone() {
      return new SCSyncCrabStatus(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 2;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "multiple_1" field.</summary>
    public const int Multiple1FieldNumber = 3;
    private int multiple1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple1 {
      get { return multiple1_; }
      set {
        multiple1_ = value;
      }
    }

    /// <summary>Field number for the "multiple_2" field.</summary>
    public const int Multiple2FieldNumber = 4;
    private int multiple2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple2 {
      get { return multiple2_; }
      set {
        multiple2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncCrabStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncCrabStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (ChairId != other.ChairId) return false;
      if (Multiple1 != other.Multiple1) return false;
      if (Multiple2 != other.Multiple2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (Multiple1 != 0) hash ^= Multiple1.GetHashCode();
      if (Multiple2 != 0) hash ^= Multiple2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (Multiple1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Multiple1);
      }
      if (Multiple2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Multiple2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (Multiple1 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Multiple1);
      }
      if (Multiple2 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Multiple2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (Multiple1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple1);
      }
      if (Multiple2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncCrabStatus other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.Multiple1 != 0) {
        Multiple1 = other.Multiple1;
      }
      if (other.Multiple2 != 0) {
        Multiple2 = other.Multiple2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            Multiple1 = input.ReadInt32();
            break;
          }
          case 32: {
            Multiple2 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            Multiple1 = input.ReadInt32();
            break;
          }
          case 32: {
            Multiple2 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSDragonBallEnd : pb::IMessage<CSDragonBallEnd>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSDragonBallEnd> _parser = new pb::MessageParser<CSDragonBallEnd>(() => new CSDragonBallEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSDragonBallEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[229]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonBallEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonBallEnd(CSDragonBallEnd other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDragonBallEnd Clone() {
      return new CSDragonBallEnd(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSDragonBallEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSDragonBallEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSDragonBallEnd other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCDragonBallRes : pb::IMessage<SCDragonBallRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCDragonBallRes> _parser = new pb::MessageParser<SCDragonBallRes>(() => new SCDragonBallRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDragonBallRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[230]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonBallRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonBallRes(SCDragonBallRes other) : this() {
      chairId_ = other.chairId_;
      lockRatio_ = other.lockRatio_;
      baseRatio_ = other.baseRatio_;
      totalAward_ = other.totalAward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDragonBallRes Clone() {
      return new SCDragonBallRes(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "lock_ratio" field.</summary>
    public const int LockRatioFieldNumber = 2;
    private int lockRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LockRatio {
      get { return lockRatio_; }
      set {
        lockRatio_ = value;
      }
    }

    /// <summary>Field number for the "base_ratio" field.</summary>
    public const int BaseRatioFieldNumber = 3;
    private int baseRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseRatio {
      get { return baseRatio_; }
      set {
        baseRatio_ = value;
      }
    }

    /// <summary>Field number for the "total_award" field.</summary>
    public const int TotalAwardFieldNumber = 4;
    private int totalAward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalAward {
      get { return totalAward_; }
      set {
        totalAward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDragonBallRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDragonBallRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (LockRatio != other.LockRatio) return false;
      if (BaseRatio != other.BaseRatio) return false;
      if (TotalAward != other.TotalAward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (LockRatio != 0) hash ^= LockRatio.GetHashCode();
      if (BaseRatio != 0) hash ^= BaseRatio.GetHashCode();
      if (TotalAward != 0) hash ^= TotalAward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (LockRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LockRatio);
      }
      if (BaseRatio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BaseRatio);
      }
      if (TotalAward != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalAward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (LockRatio != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LockRatio);
      }
      if (BaseRatio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BaseRatio);
      }
      if (TotalAward != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalAward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (LockRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LockRatio);
      }
      if (BaseRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseRatio);
      }
      if (TotalAward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalAward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDragonBallRes other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.LockRatio != 0) {
        LockRatio = other.LockRatio;
      }
      if (other.BaseRatio != 0) {
        BaseRatio = other.BaseRatio;
      }
      if (other.TotalAward != 0) {
        TotalAward = other.TotalAward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            LockRatio = input.ReadInt32();
            break;
          }
          case 24: {
            BaseRatio = input.ReadInt32();
            break;
          }
          case 32: {
            TotalAward = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            LockRatio = input.ReadInt32();
            break;
          }
          case 24: {
            BaseRatio = input.ReadInt32();
            break;
          }
          case 32: {
            TotalAward = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DevouredFish : pb::IMessage<DevouredFish>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DevouredFish> _parser = new pb::MessageParser<DevouredFish>(() => new DevouredFish());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DevouredFish> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[231]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DevouredFish() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DevouredFish(DevouredFish other) : this() {
      fishUid_ = other.fishUid_;
      earn_ = other.earn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DevouredFish Clone() {
      return new DevouredFish(this);
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 1;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "earn" field.</summary>
    public const int EarnFieldNumber = 2;
    private int earn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Earn {
      get { return earn_; }
      set {
        earn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DevouredFish);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DevouredFish other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FishUid != other.FishUid) return false;
      if (Earn != other.Earn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (Earn != 0) hash ^= Earn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (Earn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Earn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FishUid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FishUid);
      }
      if (Earn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Earn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (Earn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Earn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DevouredFish other) {
      if (other == null) {
        return;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.Earn != 0) {
        Earn = other.Earn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            Earn = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FishUid = input.ReadInt32();
            break;
          }
          case 16: {
            Earn = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSDevourHit : pb::IMessage<CSDevourHit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSDevourHit> _parser = new pb::MessageParser<CSDevourHit>(() => new CSDevourHit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSDevourHit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[232]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDevourHit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDevourHit(CSDevourHit other) : this() {
      screenFishes_ = other.screenFishes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSDevourHit Clone() {
      return new CSDevourHit(this);
    }

    /// <summary>Field number for the "screen_fishes" field.</summary>
    public const int ScreenFishesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_screenFishes_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> screenFishes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ScreenFishes {
      get { return screenFishes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSDevourHit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSDevourHit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!screenFishes_.Equals(other.screenFishes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= screenFishes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      screenFishes_.WriteTo(output, _repeated_screenFishes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      screenFishes_.WriteTo(ref output, _repeated_screenFishes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += screenFishes_.CalculateSize(_repeated_screenFishes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSDevourHit other) {
      if (other == null) {
        return;
      }
      screenFishes_.Add(other.screenFishes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            screenFishes_.AddEntriesFrom(input, _repeated_screenFishes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            screenFishes_.AddEntriesFrom(ref input, _repeated_screenFishes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCDevourHit : pb::IMessage<SCDevourHit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCDevourHit> _parser = new pb::MessageParser<SCDevourHit>(() => new SCDevourHit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCDevourHit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[233]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDevourHit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDevourHit(SCDevourHit other) : this() {
      devourFishes_ = other.devourFishes_.Clone();
      crit_ = other.crit_;
      multiple_ = other.multiple_;
      ingotMulti_ = other.ingotMulti_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCDevourHit Clone() {
      return new SCDevourHit(this);
    }

    /// <summary>Field number for the "devour_fishes" field.</summary>
    public const int DevourFishesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.DevouredFish> _repeated_devourFishes_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.DevouredFish.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.DevouredFish> devourFishes_ = new pbc::RepeatedField<global::BYDLD.DevouredFish>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.DevouredFish> DevourFishes {
      get { return devourFishes_; }
    }

    /// <summary>Field number for the "crit" field.</summary>
    public const int CritFieldNumber = 2;
    private int crit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Crit {
      get { return crit_; }
      set {
        crit_ = value;
      }
    }

    /// <summary>Field number for the "multiple" field.</summary>
    public const int MultipleFieldNumber = 3;
    private int multiple_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Multiple {
      get { return multiple_; }
      set {
        multiple_ = value;
      }
    }

    /// <summary>Field number for the "ingot_multi" field.</summary>
    public const int IngotMultiFieldNumber = 4;
    private int ingotMulti_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IngotMulti {
      get { return ingotMulti_; }
      set {
        ingotMulti_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCDevourHit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCDevourHit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!devourFishes_.Equals(other.devourFishes_)) return false;
      if (Crit != other.Crit) return false;
      if (Multiple != other.Multiple) return false;
      if (IngotMulti != other.IngotMulti) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= devourFishes_.GetHashCode();
      if (Crit != 0) hash ^= Crit.GetHashCode();
      if (Multiple != 0) hash ^= Multiple.GetHashCode();
      if (IngotMulti != 0) hash ^= IngotMulti.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      devourFishes_.WriteTo(output, _repeated_devourFishes_codec);
      if (Crit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Crit);
      }
      if (Multiple != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Multiple);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IngotMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      devourFishes_.WriteTo(ref output, _repeated_devourFishes_codec);
      if (Crit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Crit);
      }
      if (Multiple != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Multiple);
      }
      if (IngotMulti != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IngotMulti);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += devourFishes_.CalculateSize(_repeated_devourFishes_codec);
      if (Crit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Crit);
      }
      if (Multiple != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
      }
      if (IngotMulti != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IngotMulti);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCDevourHit other) {
      if (other == null) {
        return;
      }
      devourFishes_.Add(other.devourFishes_);
      if (other.Crit != 0) {
        Crit = other.Crit;
      }
      if (other.Multiple != 0) {
        Multiple = other.Multiple;
      }
      if (other.IngotMulti != 0) {
        IngotMulti = other.IngotMulti;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            devourFishes_.AddEntriesFrom(input, _repeated_devourFishes_codec);
            break;
          }
          case 16: {
            Crit = input.ReadInt32();
            break;
          }
          case 24: {
            Multiple = input.ReadInt32();
            break;
          }
          case 32: {
            IngotMulti = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            devourFishes_.AddEntriesFrom(ref input, _repeated_devourFishes_codec);
            break;
          }
          case 16: {
            Crit = input.ReadInt32();
            break;
          }
          case 24: {
            Multiple = input.ReadInt32();
            break;
          }
          case 32: {
            IngotMulti = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OpenChestReward : pb::IMessage<OpenChestReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenChestReward> _parser = new pb::MessageParser<OpenChestReward>(() => new OpenChestReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenChestReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[234]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestReward(OpenChestReward other) : this() {
      id_ = other.id_;
      num_ = other.num_ != null ? other.num_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenChestReward Clone() {
      return new OpenChestReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 2;
    private global::BYDLD.Decimal num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.Decimal Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenChestReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenChestReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Num, other.Num)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (num_ != null) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (num_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (num_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (num_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenChestReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.num_ != null) {
        if (num_ == null) {
          Num = new global::BYDLD.Decimal();
        }
        Num.MergeFrom(other.Num);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (num_ == null) {
              Num = new global::BYDLD.Decimal();
            }
            input.ReadMessage(Num);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (num_ == null) {
              Num = new global::BYDLD.Decimal();
            }
            input.ReadMessage(Num);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCUpdateChestStatus : pb::IMessage<SCUpdateChestStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCUpdateChestStatus> _parser = new pb::MessageParser<SCUpdateChestStatus>(() => new SCUpdateChestStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUpdateChestStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[235]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUpdateChestStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUpdateChestStatus(SCUpdateChestStatus other) : this() {
      isActive_ = other.isActive_;
      chestType_ = other.chestType_;
      totalProgress_ = other.totalProgress_;
      remainProgress_ = other.remainProgress_;
      guide_ = other.guide_;
      availableReward_ = other.availableReward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUpdateChestStatus Clone() {
      return new SCUpdateChestStatus(this);
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 1;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "chest_type" field.</summary>
    public const int ChestTypeFieldNumber = 2;
    private global::BYDLD.ChestType chestType_ = global::BYDLD.ChestType.Porcelain;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.ChestType ChestType {
      get { return chestType_; }
      set {
        chestType_ = value;
      }
    }

    /// <summary>Field number for the "total_progress" field.</summary>
    public const int TotalProgressFieldNumber = 3;
    private int totalProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalProgress {
      get { return totalProgress_; }
      set {
        totalProgress_ = value;
      }
    }

    /// <summary>Field number for the "remain_progress" field.</summary>
    public const int RemainProgressFieldNumber = 4;
    private int remainProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RemainProgress {
      get { return remainProgress_; }
      set {
        remainProgress_ = value;
      }
    }

    /// <summary>Field number for the "guide" field.</summary>
    public const int GuideFieldNumber = 5;
    private bool guide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Guide {
      get { return guide_; }
      set {
        guide_ = value;
      }
    }

    /// <summary>Field number for the "available_reward" field.</summary>
    public const int AvailableRewardFieldNumber = 6;
    private int availableReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailableReward {
      get { return availableReward_; }
      set {
        availableReward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUpdateChestStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUpdateChestStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsActive != other.IsActive) return false;
      if (ChestType != other.ChestType) return false;
      if (TotalProgress != other.TotalProgress) return false;
      if (RemainProgress != other.RemainProgress) return false;
      if (Guide != other.Guide) return false;
      if (AvailableReward != other.AvailableReward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (ChestType != global::BYDLD.ChestType.Porcelain) hash ^= ChestType.GetHashCode();
      if (TotalProgress != 0) hash ^= TotalProgress.GetHashCode();
      if (RemainProgress != 0) hash ^= RemainProgress.GetHashCode();
      if (Guide != false) hash ^= Guide.GetHashCode();
      if (AvailableReward != 0) hash ^= AvailableReward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsActive != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsActive);
      }
      if (ChestType != global::BYDLD.ChestType.Porcelain) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChestType);
      }
      if (TotalProgress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalProgress);
      }
      if (RemainProgress != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RemainProgress);
      }
      if (Guide != false) {
        output.WriteRawTag(40);
        output.WriteBool(Guide);
      }
      if (AvailableReward != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AvailableReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsActive != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsActive);
      }
      if (ChestType != global::BYDLD.ChestType.Porcelain) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ChestType);
      }
      if (TotalProgress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalProgress);
      }
      if (RemainProgress != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RemainProgress);
      }
      if (Guide != false) {
        output.WriteRawTag(40);
        output.WriteBool(Guide);
      }
      if (AvailableReward != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AvailableReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (ChestType != global::BYDLD.ChestType.Porcelain) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChestType);
      }
      if (TotalProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalProgress);
      }
      if (RemainProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainProgress);
      }
      if (Guide != false) {
        size += 1 + 1;
      }
      if (AvailableReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableReward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUpdateChestStatus other) {
      if (other == null) {
        return;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.ChestType != global::BYDLD.ChestType.Porcelain) {
        ChestType = other.ChestType;
      }
      if (other.TotalProgress != 0) {
        TotalProgress = other.TotalProgress;
      }
      if (other.RemainProgress != 0) {
        RemainProgress = other.RemainProgress;
      }
      if (other.Guide != false) {
        Guide = other.Guide;
      }
      if (other.AvailableReward != 0) {
        AvailableReward = other.AvailableReward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsActive = input.ReadBool();
            break;
          }
          case 16: {
            ChestType = (global::BYDLD.ChestType) input.ReadEnum();
            break;
          }
          case 24: {
            TotalProgress = input.ReadInt32();
            break;
          }
          case 32: {
            RemainProgress = input.ReadInt32();
            break;
          }
          case 40: {
            Guide = input.ReadBool();
            break;
          }
          case 48: {
            AvailableReward = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsActive = input.ReadBool();
            break;
          }
          case 16: {
            ChestType = (global::BYDLD.ChestType) input.ReadEnum();
            break;
          }
          case 24: {
            TotalProgress = input.ReadInt32();
            break;
          }
          case 32: {
            RemainProgress = input.ReadInt32();
            break;
          }
          case 40: {
            Guide = input.ReadBool();
            break;
          }
          case 48: {
            AvailableReward = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSChestConfig : pb::IMessage<CSChestConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSChestConfig> _parser = new pb::MessageParser<CSChestConfig>(() => new CSChestConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSChestConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[236]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestConfig(CSChestConfig other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestConfig Clone() {
      return new CSChestConfig(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSChestConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSChestConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSChestConfig other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class ChestBrief : pb::IMessage<ChestBrief>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChestBrief> _parser = new pb::MessageParser<ChestBrief>(() => new ChestBrief());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChestBrief> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[237]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChestBrief() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChestBrief(ChestBrief other) : this() {
      chestType_ = other.chestType_;
      reward_ = other.reward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChestBrief Clone() {
      return new ChestBrief(this);
    }

    /// <summary>Field number for the "chest_type" field.</summary>
    public const int ChestTypeFieldNumber = 1;
    private global::BYDLD.ChestType chestType_ = global::BYDLD.ChestType.Porcelain;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.ChestType ChestType {
      get { return chestType_; }
      set {
        chestType_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.OpenChestReward> _repeated_reward_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.OpenChestReward.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.OpenChestReward> reward_ = new pbc::RepeatedField<global::BYDLD.OpenChestReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.OpenChestReward> Reward {
      get { return reward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChestBrief);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChestBrief other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChestType != other.ChestType) return false;
      if(!reward_.Equals(other.reward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChestType != global::BYDLD.ChestType.Porcelain) hash ^= ChestType.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChestType != global::BYDLD.ChestType.Porcelain) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ChestType);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChestType != global::BYDLD.ChestType.Porcelain) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ChestType);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChestType != global::BYDLD.ChestType.Porcelain) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChestType);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChestBrief other) {
      if (other == null) {
        return;
      }
      if (other.ChestType != global::BYDLD.ChestType.Porcelain) {
        ChestType = other.ChestType;
      }
      reward_.Add(other.reward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChestType = (global::BYDLD.ChestType) input.ReadEnum();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChestType = (global::BYDLD.ChestType) input.ReadEnum();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCChestConfig : pb::IMessage<SCChestConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCChestConfig> _parser = new pb::MessageParser<SCChestConfig>(() => new SCChestConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChestConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[238]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestConfig(SCChestConfig other) : this() {
      endTime_ = other.endTime_;
      chestBriefList_ = other.chestBriefList_.Clone();
      minRatio_ = other.minRatio_;
      autoOpen_ = other.autoOpen_;
      autoOption_ = other.autoOption_;
      isEnable_ = other.isEnable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestConfig Clone() {
      return new SCChestConfig(this);
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 1;
    private int endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "chest_brief_list" field.</summary>
    public const int ChestBriefListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::BYDLD.ChestBrief> _repeated_chestBriefList_codec
        = pb::FieldCodec.ForMessage(18, global::BYDLD.ChestBrief.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.ChestBrief> chestBriefList_ = new pbc::RepeatedField<global::BYDLD.ChestBrief>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.ChestBrief> ChestBriefList {
      get { return chestBriefList_; }
    }

    /// <summary>Field number for the "min_ratio" field.</summary>
    public const int MinRatioFieldNumber = 3;
    private int minRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinRatio {
      get { return minRatio_; }
      set {
        minRatio_ = value;
      }
    }

    /// <summary>Field number for the "auto_open" field.</summary>
    public const int AutoOpenFieldNumber = 4;
    private bool autoOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoOpen {
      get { return autoOpen_; }
      set {
        autoOpen_ = value;
      }
    }

    /// <summary>Field number for the "auto_option" field.</summary>
    public const int AutoOptionFieldNumber = 5;
    private global::BYDLD.ChestAutoSelectOption autoOption_ = global::BYDLD.ChestAutoSelectOption.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.ChestAutoSelectOption AutoOption {
      get { return autoOption_; }
      set {
        autoOption_ = value;
      }
    }

    /// <summary>Field number for the "is_enable" field.</summary>
    public const int IsEnableFieldNumber = 6;
    private bool isEnable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnable {
      get { return isEnable_; }
      set {
        isEnable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChestConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChestConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EndTime != other.EndTime) return false;
      if(!chestBriefList_.Equals(other.chestBriefList_)) return false;
      if (MinRatio != other.MinRatio) return false;
      if (AutoOpen != other.AutoOpen) return false;
      if (AutoOption != other.AutoOption) return false;
      if (IsEnable != other.IsEnable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      hash ^= chestBriefList_.GetHashCode();
      if (MinRatio != 0) hash ^= MinRatio.GetHashCode();
      if (AutoOpen != false) hash ^= AutoOpen.GetHashCode();
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) hash ^= AutoOption.GetHashCode();
      if (IsEnable != false) hash ^= IsEnable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EndTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EndTime);
      }
      chestBriefList_.WriteTo(output, _repeated_chestBriefList_codec);
      if (MinRatio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinRatio);
      }
      if (AutoOpen != false) {
        output.WriteRawTag(32);
        output.WriteBool(AutoOpen);
      }
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AutoOption);
      }
      if (IsEnable != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EndTime != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EndTime);
      }
      chestBriefList_.WriteTo(ref output, _repeated_chestBriefList_codec);
      if (MinRatio != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinRatio);
      }
      if (AutoOpen != false) {
        output.WriteRawTag(32);
        output.WriteBool(AutoOpen);
      }
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AutoOption);
      }
      if (IsEnable != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTime);
      }
      size += chestBriefList_.CalculateSize(_repeated_chestBriefList_codec);
      if (MinRatio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinRatio);
      }
      if (AutoOpen != false) {
        size += 1 + 1;
      }
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AutoOption);
      }
      if (IsEnable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChestConfig other) {
      if (other == null) {
        return;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      chestBriefList_.Add(other.chestBriefList_);
      if (other.MinRatio != 0) {
        MinRatio = other.MinRatio;
      }
      if (other.AutoOpen != false) {
        AutoOpen = other.AutoOpen;
      }
      if (other.AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        AutoOption = other.AutoOption;
      }
      if (other.IsEnable != false) {
        IsEnable = other.IsEnable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EndTime = input.ReadInt32();
            break;
          }
          case 18: {
            chestBriefList_.AddEntriesFrom(input, _repeated_chestBriefList_codec);
            break;
          }
          case 24: {
            MinRatio = input.ReadInt32();
            break;
          }
          case 32: {
            AutoOpen = input.ReadBool();
            break;
          }
          case 40: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
          case 48: {
            IsEnable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EndTime = input.ReadInt32();
            break;
          }
          case 18: {
            chestBriefList_.AddEntriesFrom(ref input, _repeated_chestBriefList_codec);
            break;
          }
          case 24: {
            MinRatio = input.ReadInt32();
            break;
          }
          case 32: {
            AutoOpen = input.ReadBool();
            break;
          }
          case 40: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
          case 48: {
            IsEnable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSOpenChest : pb::IMessage<CSOpenChest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSOpenChest> _parser = new pb::MessageParser<CSOpenChest>(() => new CSOpenChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSOpenChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[239]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOpenChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOpenChest(CSOpenChest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOpenChest Clone() {
      return new CSOpenChest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSOpenChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSOpenChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSOpenChest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCOpenChest : pb::IMessage<SCOpenChest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCOpenChest> _parser = new pb::MessageParser<SCOpenChest>(() => new SCOpenChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCOpenChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[240]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOpenChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOpenChest(SCOpenChest other) : this() {
      rewardList_ = other.rewardList_.Clone();
      autoOption_ = other.autoOption_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOpenChest Clone() {
      return new SCOpenChest(this);
    }

    /// <summary>Field number for the "reward_list" field.</summary>
    public const int RewardListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.OpenChestReward> _repeated_rewardList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.OpenChestReward.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.OpenChestReward> rewardList_ = new pbc::RepeatedField<global::BYDLD.OpenChestReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.OpenChestReward> RewardList {
      get { return rewardList_; }
    }

    /// <summary>Field number for the "auto_option" field.</summary>
    public const int AutoOptionFieldNumber = 2;
    private global::BYDLD.ChestAutoSelectOption autoOption_ = global::BYDLD.ChestAutoSelectOption.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.ChestAutoSelectOption AutoOption {
      get { return autoOption_; }
      set {
        autoOption_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCOpenChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCOpenChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rewardList_.Equals(other.rewardList_)) return false;
      if (AutoOption != other.AutoOption) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rewardList_.GetHashCode();
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) hash ^= AutoOption.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rewardList_.WriteTo(output, _repeated_rewardList_codec);
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AutoOption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rewardList_.WriteTo(ref output, _repeated_rewardList_codec);
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AutoOption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rewardList_.CalculateSize(_repeated_rewardList_codec);
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AutoOption);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCOpenChest other) {
      if (other == null) {
        return;
      }
      rewardList_.Add(other.rewardList_);
      if (other.AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        AutoOption = other.AutoOption;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rewardList_.AddEntriesFrom(input, _repeated_rewardList_codec);
            break;
          }
          case 16: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rewardList_.AddEntriesFrom(ref input, _repeated_rewardList_codec);
            break;
          }
          case 16: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSelectChestReward : pb::IMessage<CSSelectChestReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSelectChestReward> _parser = new pb::MessageParser<CSSelectChestReward>(() => new CSSelectChestReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSelectChestReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[241]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSelectChestReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSelectChestReward(CSSelectChestReward other) : this() {
      selectIndex_ = other.selectIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSelectChestReward Clone() {
      return new CSSelectChestReward(this);
    }

    /// <summary>Field number for the "select_index" field.</summary>
    public const int SelectIndexFieldNumber = 1;
    private int selectIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SelectIndex {
      get { return selectIndex_; }
      set {
        selectIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSelectChestReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSelectChestReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelectIndex != other.SelectIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelectIndex != 0) hash ^= SelectIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SelectIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SelectIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SelectIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SelectIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelectIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelectIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSelectChestReward other) {
      if (other == null) {
        return;
      }
      if (other.SelectIndex != 0) {
        SelectIndex = other.SelectIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SelectIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SelectIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSelectChestReward : pb::IMessage<SCSelectChestReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSelectChestReward> _parser = new pb::MessageParser<SCSelectChestReward>(() => new SCSelectChestReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSelectChestReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[242]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSelectChestReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSelectChestReward(SCSelectChestReward other) : this() {
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSelectChestReward Clone() {
      return new SCSelectChestReward(this);
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 1;
    private global::BYDLD.OpenChestReward reward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.OpenChestReward Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSelectChestReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSelectChestReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reward, other.Reward)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (reward_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (reward_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSelectChestReward other) {
      if (other == null) {
        return;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::BYDLD.OpenChestReward();
        }
        Reward.MergeFrom(other.Reward);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reward_ == null) {
              Reward = new global::BYDLD.OpenChestReward();
            }
            input.ReadMessage(Reward);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (reward_ == null) {
              Reward = new global::BYDLD.OpenChestReward();
            }
            input.ReadMessage(Reward);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSChestSetAutoSelect : pb::IMessage<CSChestSetAutoSelect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSChestSetAutoSelect> _parser = new pb::MessageParser<CSChestSetAutoSelect>(() => new CSChestSetAutoSelect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSChestSetAutoSelect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[243]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestSetAutoSelect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestSetAutoSelect(CSChestSetAutoSelect other) : this() {
      autoOption_ = other.autoOption_;
      autoOpen_ = other.autoOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestSetAutoSelect Clone() {
      return new CSChestSetAutoSelect(this);
    }

    /// <summary>Field number for the "auto_option" field.</summary>
    public const int AutoOptionFieldNumber = 1;
    private global::BYDLD.ChestAutoSelectOption autoOption_ = global::BYDLD.ChestAutoSelectOption.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.ChestAutoSelectOption AutoOption {
      get { return autoOption_; }
      set {
        autoOption_ = value;
      }
    }

    /// <summary>Field number for the "auto_open" field.</summary>
    public const int AutoOpenFieldNumber = 2;
    private bool autoOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoOpen {
      get { return autoOpen_; }
      set {
        autoOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSChestSetAutoSelect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSChestSetAutoSelect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoOption != other.AutoOption) return false;
      if (AutoOpen != other.AutoOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) hash ^= AutoOption.GetHashCode();
      if (AutoOpen != false) hash ^= AutoOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AutoOption);
      }
      if (AutoOpen != false) {
        output.WriteRawTag(16);
        output.WriteBool(AutoOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AutoOption);
      }
      if (AutoOpen != false) {
        output.WriteRawTag(16);
        output.WriteBool(AutoOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AutoOption);
      }
      if (AutoOpen != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSChestSetAutoSelect other) {
      if (other == null) {
        return;
      }
      if (other.AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        AutoOption = other.AutoOption;
      }
      if (other.AutoOpen != false) {
        AutoOpen = other.AutoOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
          case 16: {
            AutoOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
          case 16: {
            AutoOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCChestSetAutoSelect : pb::IMessage<SCChestSetAutoSelect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCChestSetAutoSelect> _parser = new pb::MessageParser<SCChestSetAutoSelect>(() => new SCChestSetAutoSelect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChestSetAutoSelect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[244]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestSetAutoSelect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestSetAutoSelect(SCChestSetAutoSelect other) : this() {
      autoOption_ = other.autoOption_;
      autoOpen_ = other.autoOpen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestSetAutoSelect Clone() {
      return new SCChestSetAutoSelect(this);
    }

    /// <summary>Field number for the "auto_option" field.</summary>
    public const int AutoOptionFieldNumber = 1;
    private global::BYDLD.ChestAutoSelectOption autoOption_ = global::BYDLD.ChestAutoSelectOption.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.ChestAutoSelectOption AutoOption {
      get { return autoOption_; }
      set {
        autoOption_ = value;
      }
    }

    /// <summary>Field number for the "auto_open" field.</summary>
    public const int AutoOpenFieldNumber = 2;
    private bool autoOpen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoOpen {
      get { return autoOpen_; }
      set {
        autoOpen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChestSetAutoSelect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChestSetAutoSelect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoOption != other.AutoOption) return false;
      if (AutoOpen != other.AutoOpen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) hash ^= AutoOption.GetHashCode();
      if (AutoOpen != false) hash ^= AutoOpen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AutoOption);
      }
      if (AutoOpen != false) {
        output.WriteRawTag(16);
        output.WriteBool(AutoOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AutoOption);
      }
      if (AutoOpen != false) {
        output.WriteRawTag(16);
        output.WriteBool(AutoOpen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AutoOption);
      }
      if (AutoOpen != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChestSetAutoSelect other) {
      if (other == null) {
        return;
      }
      if (other.AutoOption != global::BYDLD.ChestAutoSelectOption.None) {
        AutoOption = other.AutoOption;
      }
      if (other.AutoOpen != false) {
        AutoOpen = other.AutoOpen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
          case 16: {
            AutoOpen = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AutoOption = (global::BYDLD.ChestAutoSelectOption) input.ReadEnum();
            break;
          }
          case 16: {
            AutoOpen = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSChestSetEnable : pb::IMessage<CSChestSetEnable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSChestSetEnable> _parser = new pb::MessageParser<CSChestSetEnable>(() => new CSChestSetEnable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSChestSetEnable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[245]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestSetEnable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestSetEnable(CSChestSetEnable other) : this() {
      isEnable_ = other.isEnable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChestSetEnable Clone() {
      return new CSChestSetEnable(this);
    }

    /// <summary>Field number for the "is_enable" field.</summary>
    public const int IsEnableFieldNumber = 1;
    private bool isEnable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnable {
      get { return isEnable_; }
      set {
        isEnable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSChestSetEnable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSChestSetEnable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsEnable != other.IsEnable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsEnable != false) hash ^= IsEnable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsEnable != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsEnable != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsEnable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSChestSetEnable other) {
      if (other == null) {
        return;
      }
      if (other.IsEnable != false) {
        IsEnable = other.IsEnable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsEnable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsEnable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCChestSetEnable : pb::IMessage<SCChestSetEnable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCChestSetEnable> _parser = new pb::MessageParser<SCChestSetEnable>(() => new SCChestSetEnable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChestSetEnable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[246]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestSetEnable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestSetEnable(SCChestSetEnable other) : this() {
      isEnable_ = other.isEnable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChestSetEnable Clone() {
      return new SCChestSetEnable(this);
    }

    /// <summary>Field number for the "is_enable" field.</summary>
    public const int IsEnableFieldNumber = 1;
    private bool isEnable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnable {
      get { return isEnable_; }
      set {
        isEnable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChestSetEnable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChestSetEnable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsEnable != other.IsEnable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsEnable != false) hash ^= IsEnable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsEnable != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsEnable != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsEnable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsEnable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChestSetEnable other) {
      if (other == null) {
        return;
      }
      if (other.IsEnable != false) {
        IsEnable = other.IsEnable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsEnable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsEnable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSyncAnimation : pb::IMessage<CSSyncAnimation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSyncAnimation> _parser = new pb::MessageParser<CSSyncAnimation>(() => new CSSyncAnimation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSyncAnimation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[247]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncAnimation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncAnimation(CSSyncAnimation other) : this() {
      animationId_ = other.animationId_;
      step_ = other.step_;
      complete_ = other.complete_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSyncAnimation Clone() {
      return new CSSyncAnimation(this);
    }

    /// <summary>Field number for the "animationId" field.</summary>
    public const int AnimationIdFieldNumber = 1;
    private int animationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AnimationId {
      get { return animationId_; }
      set {
        animationId_ = value;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 2;
    private int step_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    /// <summary>Field number for the "complete" field.</summary>
    public const int CompleteFieldNumber = 3;
    private bool complete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Complete {
      get { return complete_; }
      set {
        complete_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 4;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSyncAnimation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSyncAnimation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnimationId != other.AnimationId) return false;
      if (Step != other.Step) return false;
      if (Complete != other.Complete) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnimationId != 0) hash ^= AnimationId.GetHashCode();
      if (Step != 0) hash ^= Step.GetHashCode();
      if (Complete != false) hash ^= Complete.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AnimationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AnimationId);
      }
      if (Step != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Step);
      }
      if (Complete != false) {
        output.WriteRawTag(24);
        output.WriteBool(Complete);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AnimationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AnimationId);
      }
      if (Step != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Step);
      }
      if (Complete != false) {
        output.WriteRawTag(24);
        output.WriteBool(Complete);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnimationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AnimationId);
      }
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Step);
      }
      if (Complete != false) {
        size += 1 + 1;
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSyncAnimation other) {
      if (other == null) {
        return;
      }
      if (other.AnimationId != 0) {
        AnimationId = other.AnimationId;
      }
      if (other.Step != 0) {
        Step = other.Step;
      }
      if (other.Complete != false) {
        Complete = other.Complete;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AnimationId = input.ReadInt32();
            break;
          }
          case 16: {
            Step = input.ReadInt32();
            break;
          }
          case 24: {
            Complete = input.ReadBool();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AnimationId = input.ReadInt32();
            break;
          }
          case 16: {
            Step = input.ReadInt32();
            break;
          }
          case 24: {
            Complete = input.ReadBool();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSyncAnimation : pb::IMessage<SCSyncAnimation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSyncAnimation> _parser = new pb::MessageParser<SCSyncAnimation>(() => new SCSyncAnimation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSyncAnimation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[248]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncAnimation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncAnimation(SCSyncAnimation other) : this() {
      animationId_ = other.animationId_;
      step_ = other.step_;
      complete_ = other.complete_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSyncAnimation Clone() {
      return new SCSyncAnimation(this);
    }

    /// <summary>Field number for the "animationId" field.</summary>
    public const int AnimationIdFieldNumber = 1;
    private int animationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AnimationId {
      get { return animationId_; }
      set {
        animationId_ = value;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 2;
    private int step_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    /// <summary>Field number for the "complete" field.</summary>
    public const int CompleteFieldNumber = 3;
    private bool complete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Complete {
      get { return complete_; }
      set {
        complete_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 4;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSyncAnimation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSyncAnimation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnimationId != other.AnimationId) return false;
      if (Step != other.Step) return false;
      if (Complete != other.Complete) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnimationId != 0) hash ^= AnimationId.GetHashCode();
      if (Step != 0) hash ^= Step.GetHashCode();
      if (Complete != false) hash ^= Complete.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AnimationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AnimationId);
      }
      if (Step != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Step);
      }
      if (Complete != false) {
        output.WriteRawTag(24);
        output.WriteBool(Complete);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AnimationId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AnimationId);
      }
      if (Step != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Step);
      }
      if (Complete != false) {
        output.WriteRawTag(24);
        output.WriteBool(Complete);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnimationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AnimationId);
      }
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Step);
      }
      if (Complete != false) {
        size += 1 + 1;
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSyncAnimation other) {
      if (other == null) {
        return;
      }
      if (other.AnimationId != 0) {
        AnimationId = other.AnimationId;
      }
      if (other.Step != 0) {
        Step = other.Step;
      }
      if (other.Complete != false) {
        Complete = other.Complete;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AnimationId = input.ReadInt32();
            break;
          }
          case 16: {
            Step = input.ReadInt32();
            break;
          }
          case 24: {
            Complete = input.ReadBool();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AnimationId = input.ReadInt32();
            break;
          }
          case 16: {
            Step = input.ReadInt32();
            break;
          }
          case 24: {
            Complete = input.ReadBool();
            break;
          }
          case 34: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSMagicCardList : pb::IMessage<CSMagicCardList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSMagicCardList> _parser = new pb::MessageParser<CSMagicCardList>(() => new CSMagicCardList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSMagicCardList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[249]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMagicCardList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMagicCardList(CSMagicCardList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSMagicCardList Clone() {
      return new CSMagicCardList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSMagicCardList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSMagicCardList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSMagicCardList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCMagicCardList : pb::IMessage<SCMagicCardList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCMagicCardList> _parser = new pb::MessageParser<SCMagicCardList>(() => new SCMagicCardList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCMagicCardList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[250]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMagicCardList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMagicCardList(SCMagicCardList other) : this() {
      magicCardList_ = other.magicCardList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCMagicCardList Clone() {
      return new SCMagicCardList(this);
    }

    /// <summary>Field number for the "magicCardList" field.</summary>
    public const int MagicCardListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BYDLD.MagicCardInfo> _repeated_magicCardList_codec
        = pb::FieldCodec.ForMessage(10, global::BYDLD.MagicCardInfo.Parser);
    private readonly pbc::RepeatedField<global::BYDLD.MagicCardInfo> magicCardList_ = new pbc::RepeatedField<global::BYDLD.MagicCardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BYDLD.MagicCardInfo> MagicCardList {
      get { return magicCardList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCMagicCardList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCMagicCardList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!magicCardList_.Equals(other.magicCardList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= magicCardList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      magicCardList_.WriteTo(output, _repeated_magicCardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      magicCardList_.WriteTo(ref output, _repeated_magicCardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += magicCardList_.CalculateSize(_repeated_magicCardList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCMagicCardList other) {
      if (other == null) {
        return;
      }
      magicCardList_.Add(other.magicCardList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            magicCardList_.AddEntriesFrom(input, _repeated_magicCardList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            magicCardList_.AddEntriesFrom(ref input, _repeated_magicCardList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCTortoiseExplode : pb::IMessage<SCTortoiseExplode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCTortoiseExplode> _parser = new pb::MessageParser<SCTortoiseExplode>(() => new SCTortoiseExplode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTortoiseExplode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[251]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTortoiseExplode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTortoiseExplode(SCTortoiseExplode other) : this() {
      chairIdx_ = other.chairIdx_;
      fishUid_ = other.fishUid_;
      bulletId_ = other.bulletId_;
      ratio_ = other.ratio_;
      maxEffect_ = other.maxEffect_;
      isDouble_ = other.isDouble_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTortoiseExplode Clone() {
      return new SCTortoiseExplode(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "fish_uid" field.</summary>
    public const int FishUidFieldNumber = 2;
    private int fishUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FishUid {
      get { return fishUid_; }
      set {
        fishUid_ = value;
      }
    }

    /// <summary>Field number for the "bullet_id" field.</summary>
    public const int BulletIdFieldNumber = 3;
    private int bulletId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BulletId {
      get { return bulletId_; }
      set {
        bulletId_ = value;
      }
    }

    /// <summary>Field number for the "ratio" field.</summary>
    public const int RatioFieldNumber = 4;
    private int ratio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ratio {
      get { return ratio_; }
      set {
        ratio_ = value;
      }
    }

    /// <summary>Field number for the "max_effect" field.</summary>
    public const int MaxEffectFieldNumber = 5;
    private int maxEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxEffect {
      get { return maxEffect_; }
      set {
        maxEffect_ = value;
      }
    }

    /// <summary>Field number for the "is_double" field.</summary>
    public const int IsDoubleFieldNumber = 6;
    private bool isDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDouble {
      get { return isDouble_; }
      set {
        isDouble_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTortoiseExplode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTortoiseExplode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (FishUid != other.FishUid) return false;
      if (BulletId != other.BulletId) return false;
      if (Ratio != other.Ratio) return false;
      if (MaxEffect != other.MaxEffect) return false;
      if (IsDouble != other.IsDouble) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (FishUid != 0) hash ^= FishUid.GetHashCode();
      if (BulletId != 0) hash ^= BulletId.GetHashCode();
      if (Ratio != 0) hash ^= Ratio.GetHashCode();
      if (MaxEffect != 0) hash ^= MaxEffect.GetHashCode();
      if (IsDouble != false) hash ^= IsDouble.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (BulletId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BulletId);
      }
      if (Ratio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ratio);
      }
      if (MaxEffect != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxEffect);
      }
      if (IsDouble != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsDouble);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (FishUid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FishUid);
      }
      if (BulletId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BulletId);
      }
      if (Ratio != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Ratio);
      }
      if (MaxEffect != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxEffect);
      }
      if (IsDouble != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsDouble);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (FishUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FishUid);
      }
      if (BulletId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletId);
      }
      if (Ratio != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ratio);
      }
      if (MaxEffect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxEffect);
      }
      if (IsDouble != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTortoiseExplode other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.FishUid != 0) {
        FishUid = other.FishUid;
      }
      if (other.BulletId != 0) {
        BulletId = other.BulletId;
      }
      if (other.Ratio != 0) {
        Ratio = other.Ratio;
      }
      if (other.MaxEffect != 0) {
        MaxEffect = other.MaxEffect;
      }
      if (other.IsDouble != false) {
        IsDouble = other.IsDouble;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            BulletId = input.ReadInt32();
            break;
          }
          case 32: {
            Ratio = input.ReadInt32();
            break;
          }
          case 40: {
            MaxEffect = input.ReadInt32();
            break;
          }
          case 48: {
            IsDouble = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            FishUid = input.ReadInt32();
            break;
          }
          case 24: {
            BulletId = input.ReadInt32();
            break;
          }
          case 32: {
            Ratio = input.ReadInt32();
            break;
          }
          case 40: {
            MaxEffect = input.ReadInt32();
            break;
          }
          case 48: {
            IsDouble = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSBuyGun : pb::IMessage<CSBuyGun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSBuyGun> _parser = new pb::MessageParser<CSBuyGun>(() => new CSBuyGun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBuyGun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[252]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyGun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyGun(CSBuyGun other) : this() {
      gunLevel_ = other.gunLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyGun Clone() {
      return new CSBuyGun(this);
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 1;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBuyGun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBuyGun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GunLevel != other.GunLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GunLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GunLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GunLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBuyGun other) {
      if (other == null) {
        return;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GunLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GunLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCBuyGun : pb::IMessage<SCBuyGun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCBuyGun> _parser = new pb::MessageParser<SCBuyGun>(() => new SCBuyGun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBuyGun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[253]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyGun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyGun(SCBuyGun other) : this() {
      isBuy_ = other.isBuy_;
      gunLevel_ = other.gunLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyGun Clone() {
      return new SCBuyGun(this);
    }

    /// <summary>Field number for the "is_buy" field.</summary>
    public const int IsBuyFieldNumber = 1;
    private bool isBuy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuy {
      get { return isBuy_; }
      set {
        isBuy_ = value;
      }
    }

    /// <summary>Field number for the "gun_level" field.</summary>
    public const int GunLevelFieldNumber = 2;
    private int gunLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GunLevel {
      get { return gunLevel_; }
      set {
        gunLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBuyGun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBuyGun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsBuy != other.IsBuy) return false;
      if (GunLevel != other.GunLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsBuy != false) hash ^= IsBuy.GetHashCode();
      if (GunLevel != 0) hash ^= GunLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsBuy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBuy);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsBuy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsBuy);
      }
      if (GunLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GunLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsBuy != false) {
        size += 1 + 1;
      }
      if (GunLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GunLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBuyGun other) {
      if (other == null) {
        return;
      }
      if (other.IsBuy != false) {
        IsBuy = other.IsBuy;
      }
      if (other.GunLevel != 0) {
        GunLevel = other.GunLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsBuy = input.ReadBool();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsBuy = input.ReadBool();
            break;
          }
          case 16: {
            GunLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCWaterDropInfo : pb::IMessage<SCWaterDropInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCWaterDropInfo> _parser = new pb::MessageParser<SCWaterDropInfo>(() => new SCWaterDropInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCWaterDropInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[254]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCWaterDropInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCWaterDropInfo(SCWaterDropInfo other) : this() {
      enable_ = other.enable_;
      dropCount_ = other.dropCount_;
      fragmentCount_ = other.fragmentCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCWaterDropInfo Clone() {
      return new SCWaterDropInfo(this);
    }

    /// <summary>Field number for the "enable" field.</summary>
    public const int EnableFieldNumber = 1;
    private bool enable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enable {
      get { return enable_; }
      set {
        enable_ = value;
      }
    }

    /// <summary>Field number for the "drop_count" field.</summary>
    public const int DropCountFieldNumber = 2;
    private int dropCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DropCount {
      get { return dropCount_; }
      set {
        dropCount_ = value;
      }
    }

    /// <summary>Field number for the "fragment_count" field.</summary>
    public const int FragmentCountFieldNumber = 3;
    private int fragmentCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FragmentCount {
      get { return fragmentCount_; }
      set {
        fragmentCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCWaterDropInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCWaterDropInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enable != other.Enable) return false;
      if (DropCount != other.DropCount) return false;
      if (FragmentCount != other.FragmentCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enable != false) hash ^= Enable.GetHashCode();
      if (DropCount != 0) hash ^= DropCount.GetHashCode();
      if (FragmentCount != 0) hash ^= FragmentCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      if (DropCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DropCount);
      }
      if (FragmentCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FragmentCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Enable != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enable);
      }
      if (DropCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DropCount);
      }
      if (FragmentCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FragmentCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enable != false) {
        size += 1 + 1;
      }
      if (DropCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DropCount);
      }
      if (FragmentCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FragmentCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCWaterDropInfo other) {
      if (other == null) {
        return;
      }
      if (other.Enable != false) {
        Enable = other.Enable;
      }
      if (other.DropCount != 0) {
        DropCount = other.DropCount;
      }
      if (other.FragmentCount != 0) {
        FragmentCount = other.FragmentCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 16: {
            DropCount = input.ReadInt32();
            break;
          }
          case 24: {
            FragmentCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enable = input.ReadBool();
            break;
          }
          case 16: {
            DropCount = input.ReadInt32();
            break;
          }
          case 24: {
            FragmentCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSBuyWings : pb::IMessage<CSBuyWings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSBuyWings> _parser = new pb::MessageParser<CSBuyWings>(() => new CSBuyWings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSBuyWings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[255]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyWings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyWings(CSBuyWings other) : this() {
      wingsId_ = other.wingsId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSBuyWings Clone() {
      return new CSBuyWings(this);
    }

    /// <summary>Field number for the "wings_id" field.</summary>
    public const int WingsIdFieldNumber = 1;
    private int wingsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WingsId {
      get { return wingsId_; }
      set {
        wingsId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSBuyWings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSBuyWings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WingsId != other.WingsId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WingsId != 0) hash ^= WingsId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WingsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WingsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WingsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WingsId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSBuyWings other) {
      if (other == null) {
        return;
      }
      if (other.WingsId != 0) {
        WingsId = other.WingsId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WingsId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WingsId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCBuyWings : pb::IMessage<SCBuyWings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCBuyWings> _parser = new pb::MessageParser<SCBuyWings>(() => new SCBuyWings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBuyWings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[256]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyWings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyWings(SCBuyWings other) : this() {
      wingsId_ = other.wingsId_;
      isBuy_ = other.isBuy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBuyWings Clone() {
      return new SCBuyWings(this);
    }

    /// <summary>Field number for the "wings_id" field.</summary>
    public const int WingsIdFieldNumber = 1;
    private int wingsId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WingsId {
      get { return wingsId_; }
      set {
        wingsId_ = value;
      }
    }

    /// <summary>Field number for the "is_buy" field.</summary>
    public const int IsBuyFieldNumber = 2;
    private bool isBuy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuy {
      get { return isBuy_; }
      set {
        isBuy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBuyWings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBuyWings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WingsId != other.WingsId) return false;
      if (IsBuy != other.IsBuy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WingsId != 0) hash ^= WingsId.GetHashCode();
      if (IsBuy != false) hash ^= IsBuy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WingsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsId);
      }
      if (IsBuy != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WingsId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsId);
      }
      if (IsBuy != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsBuy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WingsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WingsId);
      }
      if (IsBuy != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBuyWings other) {
      if (other == null) {
        return;
      }
      if (other.WingsId != 0) {
        WingsId = other.WingsId;
      }
      if (other.IsBuy != false) {
        IsBuy = other.IsBuy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WingsId = input.ReadInt32();
            break;
          }
          case 16: {
            IsBuy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WingsId = input.ReadInt32();
            break;
          }
          case 16: {
            IsBuy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSSetWings : pb::IMessage<CSSetWings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSSetWings> _parser = new pb::MessageParser<CSSetWings>(() => new CSSetWings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSSetWings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[257]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetWings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetWings(CSSetWings other) : this() {
      wingsPropId_ = other.wingsPropId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSSetWings Clone() {
      return new CSSetWings(this);
    }

    /// <summary>Field number for the "wings_prop_id" field.</summary>
    public const int WingsPropIdFieldNumber = 1;
    private int wingsPropId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WingsPropId {
      get { return wingsPropId_; }
      set {
        wingsPropId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSSetWings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSSetWings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WingsPropId != other.WingsPropId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WingsPropId != 0) hash ^= WingsPropId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WingsPropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsPropId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WingsPropId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WingsPropId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WingsPropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WingsPropId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSSetWings other) {
      if (other == null) {
        return;
      }
      if (other.WingsPropId != 0) {
        WingsPropId = other.WingsPropId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WingsPropId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WingsPropId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCSetWings : pb::IMessage<SCSetWings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCSetWings> _parser = new pb::MessageParser<SCSetWings>(() => new SCSetWings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCSetWings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[258]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetWings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetWings(SCSetWings other) : this() {
      chairIdx_ = other.chairIdx_;
      wingsPropId_ = other.wingsPropId_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCSetWings Clone() {
      return new SCSetWings(this);
    }

    /// <summary>Field number for the "chair_idx" field.</summary>
    public const int ChairIdxFieldNumber = 1;
    private int chairIdx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairIdx {
      get { return chairIdx_; }
      set {
        chairIdx_ = value;
      }
    }

    /// <summary>Field number for the "wings_prop_id" field.</summary>
    public const int WingsPropIdFieldNumber = 2;
    private int wingsPropId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WingsPropId {
      get { return wingsPropId_; }
      set {
        wingsPropId_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 3;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCSetWings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCSetWings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairIdx != other.ChairIdx) return false;
      if (WingsPropId != other.WingsPropId) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairIdx != 0) hash ^= ChairIdx.GetHashCode();
      if (WingsPropId != 0) hash ^= WingsPropId.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (WingsPropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WingsPropId);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairIdx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairIdx);
      }
      if (WingsPropId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WingsPropId);
      }
      if (Code != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairIdx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairIdx);
      }
      if (WingsPropId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WingsPropId);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCSetWings other) {
      if (other == null) {
        return;
      }
      if (other.ChairIdx != 0) {
        ChairIdx = other.ChairIdx;
      }
      if (other.WingsPropId != 0) {
        WingsPropId = other.WingsPropId;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            WingsPropId = input.ReadInt32();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairIdx = input.ReadInt32();
            break;
          }
          case 16: {
            WingsPropId = input.ReadInt32();
            break;
          }
          case 24: {
            Code = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCBeKicked : pb::IMessage<SCBeKicked>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCBeKicked> _parser = new pb::MessageParser<SCBeKicked>(() => new SCBeKicked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCBeKicked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[259]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBeKicked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBeKicked(SCBeKicked other) : this() {
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCBeKicked Clone() {
      return new SCBeKicked(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private global::BYDLD.BeKickedReason reason_ = global::BYDLD.BeKickedReason.NoReason;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BYDLD.BeKickedReason Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCBeKicked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCBeKicked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason != global::BYDLD.BeKickedReason.NoReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Reason != global::BYDLD.BeKickedReason.NoReason) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Reason != global::BYDLD.BeKickedReason.NoReason) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason != global::BYDLD.BeKickedReason.NoReason) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCBeKicked other) {
      if (other == null) {
        return;
      }
      if (other.Reason != global::BYDLD.BeKickedReason.NoReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reason = (global::BYDLD.BeKickedReason) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Reason = (global::BYDLD.BeKickedReason) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CSClientTimeValidate : pb::IMessage<CSClientTimeValidate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSClientTimeValidate> _parser = new pb::MessageParser<CSClientTimeValidate>(() => new CSClientTimeValidate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSClientTimeValidate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[260]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSClientTimeValidate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSClientTimeValidate(CSClientTimeValidate other) : this() {
      timestamp_ = other.timestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSClientTimeValidate Clone() {
      return new CSClientTimeValidate(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private int timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSClientTimeValidate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSClientTimeValidate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Timestamp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Timestamp != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Timestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSClientTimeValidate other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SCClientTimeValidate : pb::IMessage<SCClientTimeValidate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCClientTimeValidate> _parser = new pb::MessageParser<SCClientTimeValidate>(() => new SCClientTimeValidate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCClientTimeValidate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[261]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCClientTimeValidate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCClientTimeValidate(SCClientTimeValidate other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCClientTimeValidate Clone() {
      return new SCClientTimeValidate(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCClientTimeValidate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCClientTimeValidate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCClientTimeValidate other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CSChangeTable : pb::IMessage<CSChangeTable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CSChangeTable> _parser = new pb::MessageParser<CSChangeTable>(() => new CSChangeTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSChangeTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[262]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangeTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangeTable(CSChangeTable other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSChangeTable Clone() {
      return new CSChangeTable(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSChangeTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSChangeTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSChangeTable other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class SCChangeTable : pb::IMessage<SCChangeTable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SCChangeTable> _parser = new pb::MessageParser<SCChangeTable>(() => new SCChangeTable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCChangeTable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BYDLD.BYDLDReflection.Descriptor.MessageTypes[263]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeTable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeTable(SCChangeTable other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCChangeTable Clone() {
      return new SCChangeTable(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCChangeTable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCChangeTable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCChangeTable other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
