// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/A7U7P.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace A7U7P {

  /// <summary>Holder for reflection information generated from Proto/SubGame/A7U7P.proto</summary>
  public static partial class A7U7PReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/A7U7P.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static A7U7PReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90by9TdWJHYW1lL0E3VTdQLnByb3RvEgVBN1U3UCImCglBN0JldElu",
            "Zm8SCwoDYmV0GAEgASgDEgwKBGFyZWEYAiABKAUifAoMQTdQbGF5ZXJEYXRh",
            "Eg8KB3VzZXJfaWQYASABKAUSEAoId2luX2dvbGQYAiABKAMSEgoKdG90YWxf",
            "cGxheRgDIAEoBRIQCgh3aW5fcGxheRgEIAEoBRIjCgliZXRfaW5mb3MYBSAD",
            "KAsyEC5BN1U3UC5BN0JldEluZm8iOAoSQTdVcFdhaXRCYW5rZXJJbmZvEgoK",
            "AmlkGAEgASgFEhYKDm9wX2Jhbmtlcl9nb2xkGAIgASgDIl4KDEE3QmFua2Vy",
            "SW5mbxIKCgJpZBgBIAEoBRIPCgdvcF9nb2xkGAIgASgDEg0KBXJvdW5kGAMg",
            "ASgFEhEKCXRvdGFsX3dpbhgEIAEoAxIPCgdpc19kb3duGAUgASgIIhsKCU1z",
            "Z1JlY29yZBIOCgZzaWV2ZXMYAiADKAUi6wEKDE1zZ1NjZW5lSW5mbxIQCghi",
            "ZXRfbGlzdBgBIAMoAxIhCgdyZWNvcmRzGAIgAygLMhAuQTdVN1AuTXNnUmVj",
            "b3JkEhEKCWJldF9saW1pdBgDIAMoBRIUCgxwbGF5ZXJfbGltaXQYBSABKAUS",
            "EAoIYmV0X3RpbWUYBiABKAUSEAoIb3V0X3RpbWUYByABKAUSDQoFc3RhdGUY",
            "CCABKAUSEAoIYXJlYV9iZXQYEyADKAUSDgoGc2lldmVzGBQgAygFEigKC3Bs",
            "YXllcl9saXN0GBYgAygLMhMuQTdVN1AuQTdQbGF5ZXJEYXRhIhIKEE1zZ1N0",
            "YXJ0R2FtZVJlc3AiIwoGTXNnQmV0EgsKA2JldBgBIAEoAxIMCgRhcmVhGAIg",
            "ASgFImUKCk1zZ0JldFJlc3ASEAoIcmV0X2NvZGUYASABKAUSDwoHdXNlcl9p",
            "ZBgCIAEoBRIQCghjaGFpcl9pZBgDIAEoBRIiCghiZXRfaW5mbxgEIAEoCzIQ",
            "LkE3VTdQLkE3QmV0SW5mbyI9Cg9Nc2dTZW5kQ2FyZFJlc3ASDAoEY2FyZBgB",
            "IAEoBRIMCgRhcmVhGAIgASgFEg4KBmlzX2VuZBgDIAEoCCJiCglNc2dXaW5N",
            "c2cSDwoHdXNlcl9pZBgBIAEoBRIQCghjaGFpcl9pZBgCIAEoBRIQCgh3aW5f",
            "Z29sZBgDIAEoAxIQCghuZXdfZ29sZBgEIAEoAxIOCgZpc193aW4YBSABKAgi",
            "awoJTXNnUmVzdWx0EhEKCXdpbl9pbmRleBgBIAEoBRIoCgtiYW5rZXJfaW5m",
            "bxgCIAEoCzITLkE3VTdQLkE3QmFua2VySW5mbxIhCgd3aW5fbXNnGAMgAygL",
            "MhAuQTdVN1AuTXNnV2luTXNnKlEKCkVHYW1lU3RhdGUSDAoIR1NfUmVhZHkQ",
            "ABIMCghHU19TdGFydBABEgoKBkdTX0JldBACEgwKCEdTX1NlbmRTEAMSDQoJ",
            "R1NfUmVzdWx0EAQq2AEKDUVNc2dJRFN1YkdhbWUSFQoRTXNnSURTdWJHYW1l",
            "X051bGwQABIUChBNc2dJRFN1YkdhbWVfQmV0EAESGAoUTXNnSURTdWJHYW1l",
            "X0JldFJlc3AQAhIeChpNc2dJRFN1YkdhbWVfR2FtZVN0YXJ0UmVzcBAFEh0K",
            "GU1zZ0lEU3ViR2FtZV9TZW5kQ2FyZFJlc3AQBhIfChtNc2dJRFN1YkdhbWVf",
            "R2FtZVJlc3VsdFJlc3AQBxIgChxNc2dJRFN1YkdhbWVfTm90aWZ5U3RhdGVS",
            "ZXNwEAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::A7U7P.EGameState), typeof(global::A7U7P.EMsgIDSubGame), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.A7BetInfo), global::A7U7P.A7BetInfo.Parser, new[]{ "Bet", "Area" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.A7PlayerData), global::A7U7P.A7PlayerData.Parser, new[]{ "UserId", "WinGold", "TotalPlay", "WinPlay", "BetInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.A7UpWaitBankerInfo), global::A7U7P.A7UpWaitBankerInfo.Parser, new[]{ "Id", "OpBankerGold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.A7BankerInfo), global::A7U7P.A7BankerInfo.Parser, new[]{ "Id", "OpGold", "Round", "TotalWin", "IsDown" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgRecord), global::A7U7P.MsgRecord.Parser, new[]{ "Sieves" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgSceneInfo), global::A7U7P.MsgSceneInfo.Parser, new[]{ "BetList", "Records", "BetLimit", "PlayerLimit", "BetTime", "OutTime", "State", "AreaBet", "Sieves", "PlayerList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgStartGameResp), global::A7U7P.MsgStartGameResp.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgBet), global::A7U7P.MsgBet.Parser, new[]{ "Bet", "Area" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgBetResp), global::A7U7P.MsgBetResp.Parser, new[]{ "RetCode", "UserId", "ChairId", "BetInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgSendCardResp), global::A7U7P.MsgSendCardResp.Parser, new[]{ "Card", "Area", "IsEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgWinMsg), global::A7U7P.MsgWinMsg.Parser, new[]{ "UserId", "ChairId", "WinGold", "NewGold", "IsWin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgResult), global::A7U7P.MsgResult.Parser, new[]{ "WinIndex", "BankerInfo", "WinMsg" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EGameState {
    /// <summary>
    ///准备
    /// </summary>
    [pbr::OriginalName("GS_Ready")] GsReady = 0,
    /// <summary>
    ///开始游戏
    /// </summary>
    [pbr::OriginalName("GS_Start")] GsStart = 1,
    /// <summary>
    ///下注
    /// </summary>
    [pbr::OriginalName("GS_Bet")] GsBet = 2,
    /// <summary>
    ///发牌
    /// </summary>
    [pbr::OriginalName("GS_SendS")] GsSendS = 3,
    /// <summary>
    ///结算
    /// </summary>
    [pbr::OriginalName("GS_Result")] GsResult = 4,
  }

  public enum EMsgIDSubGame {
    [pbr::OriginalName("MsgIDSubGame_Null")] MsgIdsubGameNull = 0,
    /// <summary>
    ///玩家下注(MsgBet)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_Bet")] MsgIdsubGameBet = 1,
    /// <summary>
    ///玩家下注返回(MsgBetResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_BetResp")] MsgIdsubGameBetResp = 2,
    /// <summary>
    ///游戏结果(MsgStartGameResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_GameStartResp")] MsgIdsubGameGameStartResp = 5,
    /// <summary>
    ///游戏结果(MsgSendCardResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_SendCardResp")] MsgIdsubGameSendCardResp = 6,
    /// <summary>
    ///游戏结果(MsgResult)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_GameResultResp")] MsgIdsubGameGameResultResp = 7,
    /// <summary>
    ///游戏状态(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_NotifyStateResp")] MsgIdsubGameNotifyStateResp = 8,
  }

  #endregion

  #region Messages
  public sealed partial class A7BetInfo : pb::IMessage<A7BetInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<A7BetInfo> _parser = new pb::MessageParser<A7BetInfo>(() => new A7BetInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<A7BetInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BetInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BetInfo(A7BetInfo other) : this() {
      bet_ = other.bet_;
      area_ = other.area_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BetInfo Clone() {
      return new A7BetInfo(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private long bet_;
    /// <summary>
    ///下注金额  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///0-17
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as A7BetInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(A7BetInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bet != other.Bet) return false;
      if (Area != other.Area) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bet != 0L) hash ^= Bet.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bet);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(A7BetInfo other) {
      if (other == null) {
        return;
      }
      if (other.Bet != 0L) {
        Bet = other.Bet;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class A7PlayerData : pb::IMessage<A7PlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<A7PlayerData> _parser = new pb::MessageParser<A7PlayerData>(() => new A7PlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<A7PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7PlayerData(A7PlayerData other) : this() {
      userId_ = other.userId_;
      winGold_ = other.winGold_;
      totalPlay_ = other.totalPlay_;
      winPlay_ = other.winPlay_;
      betInfos_ = other.betInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7PlayerData Clone() {
      return new A7PlayerData(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "win_gold" field.</summary>
    public const int WinGoldFieldNumber = 2;
    private long winGold_;
    /// <summary>
    /// 总赢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WinGold {
      get { return winGold_; }
      set {
        winGold_ = value;
      }
    }

    /// <summary>Field number for the "total_play" field.</summary>
    public const int TotalPlayFieldNumber = 3;
    private int totalPlay_;
    /// <summary>
    /// 总玩次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPlay {
      get { return totalPlay_; }
      set {
        totalPlay_ = value;
      }
    }

    /// <summary>Field number for the "win_play" field.</summary>
    public const int WinPlayFieldNumber = 4;
    private int winPlay_;
    /// <summary>
    /// 赢次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinPlay {
      get { return winPlay_; }
      set {
        winPlay_ = value;
      }
    }

    /// <summary>Field number for the "bet_infos" field.</summary>
    public const int BetInfosFieldNumber = 5;
    private static readonly pb::FieldCodec<global::A7U7P.A7BetInfo> _repeated_betInfos_codec
        = pb::FieldCodec.ForMessage(42, global::A7U7P.A7BetInfo.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.A7BetInfo> betInfos_ = new pbc::RepeatedField<global::A7U7P.A7BetInfo>();
    /// <summary>
    /// 下注状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.A7BetInfo> BetInfos {
      get { return betInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as A7PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(A7PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (WinGold != other.WinGold) return false;
      if (TotalPlay != other.TotalPlay) return false;
      if (WinPlay != other.WinPlay) return false;
      if(!betInfos_.Equals(other.betInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (WinGold != 0L) hash ^= WinGold.GetHashCode();
      if (TotalPlay != 0) hash ^= TotalPlay.GetHashCode();
      if (WinPlay != 0) hash ^= WinPlay.GetHashCode();
      hash ^= betInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(WinGold);
      }
      if (TotalPlay != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalPlay);
      }
      if (WinPlay != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(WinPlay);
      }
      betInfos_.WriteTo(output, _repeated_betInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(WinGold);
      }
      if (TotalPlay != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalPlay);
      }
      if (WinPlay != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(WinPlay);
      }
      betInfos_.WriteTo(ref output, _repeated_betInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (WinGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinGold);
      }
      if (TotalPlay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlay);
      }
      if (WinPlay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinPlay);
      }
      size += betInfos_.CalculateSize(_repeated_betInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(A7PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.WinGold != 0L) {
        WinGold = other.WinGold;
      }
      if (other.TotalPlay != 0) {
        TotalPlay = other.TotalPlay;
      }
      if (other.WinPlay != 0) {
        WinPlay = other.WinPlay;
      }
      betInfos_.Add(other.betInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            WinGold = input.ReadInt64();
            break;
          }
          case 24: {
            TotalPlay = input.ReadInt32();
            break;
          }
          case 32: {
            WinPlay = input.ReadInt32();
            break;
          }
          case 42: {
            betInfos_.AddEntriesFrom(input, _repeated_betInfos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            WinGold = input.ReadInt64();
            break;
          }
          case 24: {
            TotalPlay = input.ReadInt32();
            break;
          }
          case 32: {
            WinPlay = input.ReadInt32();
            break;
          }
          case 42: {
            betInfos_.AddEntriesFrom(ref input, _repeated_betInfos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class A7UpWaitBankerInfo : pb::IMessage<A7UpWaitBankerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<A7UpWaitBankerInfo> _parser = new pb::MessageParser<A7UpWaitBankerInfo>(() => new A7UpWaitBankerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<A7UpWaitBankerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7UpWaitBankerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7UpWaitBankerInfo(A7UpWaitBankerInfo other) : this() {
      id_ = other.id_;
      opBankerGold_ = other.opBankerGold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7UpWaitBankerInfo Clone() {
      return new A7UpWaitBankerInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 庄家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "op_banker_gold" field.</summary>
    public const int OpBankerGoldFieldNumber = 2;
    private long opBankerGold_;
    /// <summary>
    /// 用户可输赢金币是否要下庄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OpBankerGold {
      get { return opBankerGold_; }
      set {
        opBankerGold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as A7UpWaitBankerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(A7UpWaitBankerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OpBankerGold != other.OpBankerGold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OpBankerGold != 0L) hash ^= OpBankerGold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OpBankerGold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OpBankerGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OpBankerGold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OpBankerGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (OpBankerGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OpBankerGold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(A7UpWaitBankerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OpBankerGold != 0L) {
        OpBankerGold = other.OpBankerGold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OpBankerGold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OpBankerGold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class A7BankerInfo : pb::IMessage<A7BankerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<A7BankerInfo> _parser = new pb::MessageParser<A7BankerInfo>(() => new A7BankerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<A7BankerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BankerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BankerInfo(A7BankerInfo other) : this() {
      id_ = other.id_;
      opGold_ = other.opGold_;
      round_ = other.round_;
      totalWin_ = other.totalWin_;
      isDown_ = other.isDown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BankerInfo Clone() {
      return new A7BankerInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 庄家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "op_gold" field.</summary>
    public const int OpGoldFieldNumber = 2;
    private long opGold_;
    /// <summary>
    /// 用户可输赢金币是否要下庄
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OpGold {
      get { return opGold_; }
      set {
        opGold_ = value;
      }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 3;
    private int round_;
    /// <summary>
    /// 已经上庄轮数 包涵本局	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Round {
      get { return round_; }
      set {
        round_ = value;
      }
    }

    /// <summary>Field number for the "total_win" field.</summary>
    public const int TotalWinFieldNumber = 4;
    private long totalWin_;
    /// <summary>
    /// 庄家总输赢金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    /// <summary>Field number for the "is_down" field.</summary>
    public const int IsDownFieldNumber = 5;
    private bool isDown_;
    /// <summary>
    /// 是否要下庄 服务器用的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDown {
      get { return isDown_; }
      set {
        isDown_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as A7BankerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(A7BankerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OpGold != other.OpGold) return false;
      if (Round != other.Round) return false;
      if (TotalWin != other.TotalWin) return false;
      if (IsDown != other.IsDown) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OpGold != 0L) hash ^= OpGold.GetHashCode();
      if (Round != 0) hash ^= Round.GetHashCode();
      if (TotalWin != 0L) hash ^= TotalWin.GetHashCode();
      if (IsDown != false) hash ^= IsDown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OpGold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OpGold);
      }
      if (Round != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Round);
      }
      if (TotalWin != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalWin);
      }
      if (IsDown != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OpGold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OpGold);
      }
      if (Round != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Round);
      }
      if (TotalWin != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalWin);
      }
      if (IsDown != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (OpGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OpGold);
      }
      if (Round != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Round);
      }
      if (TotalWin != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalWin);
      }
      if (IsDown != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(A7BankerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OpGold != 0L) {
        OpGold = other.OpGold;
      }
      if (other.Round != 0) {
        Round = other.Round;
      }
      if (other.TotalWin != 0L) {
        TotalWin = other.TotalWin;
      }
      if (other.IsDown != false) {
        IsDown = other.IsDown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OpGold = input.ReadInt64();
            break;
          }
          case 24: {
            Round = input.ReadInt32();
            break;
          }
          case 32: {
            TotalWin = input.ReadInt64();
            break;
          }
          case 40: {
            IsDown = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OpGold = input.ReadInt64();
            break;
          }
          case 24: {
            Round = input.ReadInt32();
            break;
          }
          case 32: {
            TotalWin = input.ReadInt64();
            break;
          }
          case 40: {
            IsDown = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgRecord : pb::IMessage<MsgRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgRecord> _parser = new pb::MessageParser<MsgRecord>(() => new MsgRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRecord(MsgRecord other) : this() {
      sieves_ = other.sieves_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgRecord Clone() {
      return new MsgRecord(this);
    }

    /// <summary>Field number for the "sieves" field.</summary>
    public const int SievesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_sieves_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> sieves_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///两个筛子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Sieves {
      get { return sieves_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sieves_.Equals(other.sieves_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sieves_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sieves_.WriteTo(output, _repeated_sieves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sieves_.WriteTo(ref output, _repeated_sieves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sieves_.CalculateSize(_repeated_sieves_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgRecord other) {
      if (other == null) {
        return;
      }
      sieves_.Add(other.sieves_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18:
          case 16: {
            sieves_.AddEntriesFrom(input, _repeated_sieves_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18:
          case 16: {
            sieves_.AddEntriesFrom(ref input, _repeated_sieves_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///场景消息
  /// </summary>
  public sealed partial class MsgSceneInfo : pb::IMessage<MsgSceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgSceneInfo> _parser = new pb::MessageParser<MsgSceneInfo>(() => new MsgSceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgSceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo(MsgSceneInfo other) : this() {
      betList_ = other.betList_.Clone();
      records_ = other.records_.Clone();
      betLimit_ = other.betLimit_.Clone();
      playerLimit_ = other.playerLimit_;
      betTime_ = other.betTime_;
      outTime_ = other.outTime_;
      state_ = other.state_;
      areaBet_ = other.areaBet_.Clone();
      sieves_ = other.sieves_.Clone();
      playerList_ = other.playerList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo Clone() {
      return new MsgSceneInfo(this);
    }

    /// <summary>Field number for the "bet_list" field.</summary>
    public const int BetListFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_betList_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> betList_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///固定押注配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> BetList {
      get { return betList_; }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::A7U7P.MsgRecord> _repeated_records_codec
        = pb::FieldCodec.ForMessage(18, global::A7U7P.MsgRecord.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.MsgRecord> records_ = new pbc::RepeatedField<global::A7U7P.MsgRecord>();
    /// <summary>
    ///开牌结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.MsgRecord> Records {
      get { return records_; }
    }

    /// <summary>Field number for the "bet_limit" field.</summary>
    public const int BetLimitFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_betLimit_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> betLimit_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///区域下注限制 18个区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BetLimit {
      get { return betLimit_; }
    }

    /// <summary>Field number for the "player_limit" field.</summary>
    public const int PlayerLimitFieldNumber = 5;
    private int playerLimit_;
    /// <summary>
    ///个人下注限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLimit {
      get { return playerLimit_; }
      set {
        playerLimit_ = value;
      }
    }

    /// <summary>Field number for the "bet_time" field.</summary>
    public const int BetTimeFieldNumber = 6;
    private int betTime_;
    /// <summary>
    ///下注总时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetTime {
      get { return betTime_; }
      set {
        betTime_ = value;
      }
    }

    /// <summary>Field number for the "out_time" field.</summary>
    public const int OutTimeFieldNumber = 7;
    private int outTime_;
    /// <summary>
    ///剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutTime {
      get { return outTime_; }
      set {
        outTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private int state_;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "area_bet" field.</summary>
    public const int AreaBetFieldNumber = 19;
    private static readonly pb::FieldCodec<int> _repeated_areaBet_codec
        = pb::FieldCodec.ForInt32(154);
    private readonly pbc::RepeatedField<int> areaBet_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///每个区域的总下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AreaBet {
      get { return areaBet_; }
    }

    /// <summary>Field number for the "sieves" field.</summary>
    public const int SievesFieldNumber = 20;
    private static readonly pb::FieldCodec<int> _repeated_sieves_codec
        = pb::FieldCodec.ForInt32(162);
    private readonly pbc::RepeatedField<int> sieves_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///筛子列表 2颗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Sieves {
      get { return sieves_; }
    }

    /// <summary>Field number for the "player_list" field.</summary>
    public const int PlayerListFieldNumber = 22;
    private static readonly pb::FieldCodec<global::A7U7P.A7PlayerData> _repeated_playerList_codec
        = pb::FieldCodec.ForMessage(178, global::A7U7P.A7PlayerData.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.A7PlayerData> playerList_ = new pbc::RepeatedField<global::A7U7P.A7PlayerData>();
    /// <summary>
    ///玩家状态	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.A7PlayerData> PlayerList {
      get { return playerList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgSceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgSceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!betList_.Equals(other.betList_)) return false;
      if(!records_.Equals(other.records_)) return false;
      if(!betLimit_.Equals(other.betLimit_)) return false;
      if (PlayerLimit != other.PlayerLimit) return false;
      if (BetTime != other.BetTime) return false;
      if (OutTime != other.OutTime) return false;
      if (State != other.State) return false;
      if(!areaBet_.Equals(other.areaBet_)) return false;
      if(!sieves_.Equals(other.sieves_)) return false;
      if(!playerList_.Equals(other.playerList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= betList_.GetHashCode();
      hash ^= records_.GetHashCode();
      hash ^= betLimit_.GetHashCode();
      if (PlayerLimit != 0) hash ^= PlayerLimit.GetHashCode();
      if (BetTime != 0) hash ^= BetTime.GetHashCode();
      if (OutTime != 0) hash ^= OutTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      hash ^= areaBet_.GetHashCode();
      hash ^= sieves_.GetHashCode();
      hash ^= playerList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      betList_.WriteTo(output, _repeated_betList_codec);
      records_.WriteTo(output, _repeated_records_codec);
      betLimit_.WriteTo(output, _repeated_betLimit_codec);
      if (PlayerLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerLimit);
      }
      if (BetTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BetTime);
      }
      if (OutTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutTime);
      }
      if (State != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(State);
      }
      areaBet_.WriteTo(output, _repeated_areaBet_codec);
      sieves_.WriteTo(output, _repeated_sieves_codec);
      playerList_.WriteTo(output, _repeated_playerList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      betList_.WriteTo(ref output, _repeated_betList_codec);
      records_.WriteTo(ref output, _repeated_records_codec);
      betLimit_.WriteTo(ref output, _repeated_betLimit_codec);
      if (PlayerLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerLimit);
      }
      if (BetTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BetTime);
      }
      if (OutTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutTime);
      }
      if (State != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(State);
      }
      areaBet_.WriteTo(ref output, _repeated_areaBet_codec);
      sieves_.WriteTo(ref output, _repeated_sieves_codec);
      playerList_.WriteTo(ref output, _repeated_playerList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += betList_.CalculateSize(_repeated_betList_codec);
      size += records_.CalculateSize(_repeated_records_codec);
      size += betLimit_.CalculateSize(_repeated_betLimit_codec);
      if (PlayerLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLimit);
      }
      if (BetTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetTime);
      }
      if (OutTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      size += areaBet_.CalculateSize(_repeated_areaBet_codec);
      size += sieves_.CalculateSize(_repeated_sieves_codec);
      size += playerList_.CalculateSize(_repeated_playerList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgSceneInfo other) {
      if (other == null) {
        return;
      }
      betList_.Add(other.betList_);
      records_.Add(other.records_);
      betLimit_.Add(other.betLimit_);
      if (other.PlayerLimit != 0) {
        PlayerLimit = other.PlayerLimit;
      }
      if (other.BetTime != 0) {
        BetTime = other.BetTime;
      }
      if (other.OutTime != 0) {
        OutTime = other.OutTime;
      }
      if (other.State != 0) {
        State = other.State;
      }
      areaBet_.Add(other.areaBet_);
      sieves_.Add(other.sieves_);
      playerList_.Add(other.playerList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            betList_.AddEntriesFrom(input, _repeated_betList_codec);
            break;
          }
          case 18: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
          case 26:
          case 24: {
            betLimit_.AddEntriesFrom(input, _repeated_betLimit_codec);
            break;
          }
          case 40: {
            PlayerLimit = input.ReadInt32();
            break;
          }
          case 48: {
            BetTime = input.ReadInt32();
            break;
          }
          case 56: {
            OutTime = input.ReadInt32();
            break;
          }
          case 64: {
            State = input.ReadInt32();
            break;
          }
          case 154:
          case 152: {
            areaBet_.AddEntriesFrom(input, _repeated_areaBet_codec);
            break;
          }
          case 162:
          case 160: {
            sieves_.AddEntriesFrom(input, _repeated_sieves_codec);
            break;
          }
          case 178: {
            playerList_.AddEntriesFrom(input, _repeated_playerList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            betList_.AddEntriesFrom(ref input, _repeated_betList_codec);
            break;
          }
          case 18: {
            records_.AddEntriesFrom(ref input, _repeated_records_codec);
            break;
          }
          case 26:
          case 24: {
            betLimit_.AddEntriesFrom(ref input, _repeated_betLimit_codec);
            break;
          }
          case 40: {
            PlayerLimit = input.ReadInt32();
            break;
          }
          case 48: {
            BetTime = input.ReadInt32();
            break;
          }
          case 56: {
            OutTime = input.ReadInt32();
            break;
          }
          case 64: {
            State = input.ReadInt32();
            break;
          }
          case 154:
          case 152: {
            areaBet_.AddEntriesFrom(ref input, _repeated_areaBet_codec);
            break;
          }
          case 162:
          case 160: {
            sieves_.AddEntriesFrom(ref input, _repeated_sieves_codec);
            break;
          }
          case 178: {
            playerList_.AddEntriesFrom(ref input, _repeated_playerList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///开始游戏
  /// </summary>
  public sealed partial class MsgStartGameResp : pb::IMessage<MsgStartGameResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgStartGameResp> _parser = new pb::MessageParser<MsgStartGameResp>(() => new MsgStartGameResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgStartGameResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgStartGameResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgStartGameResp(MsgStartGameResp other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgStartGameResp Clone() {
      return new MsgStartGameResp(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgStartGameResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgStartGameResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgStartGameResp other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注
  /// </summary>
  public sealed partial class MsgBet : pb::IMessage<MsgBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgBet> _parser = new pb::MessageParser<MsgBet>(() => new MsgBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet(MsgBet other) : this() {
      bet_ = other.bet_;
      area_ = other.area_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet Clone() {
      return new MsgBet(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private long bet_;
    /// <summary>
    ///押注金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///押注区域(0-17)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bet != other.Bet) return false;
      if (Area != other.Area) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bet != 0L) hash ^= Bet.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bet);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgBet other) {
      if (other == null) {
        return;
      }
      if (other.Bet != 0L) {
        Bet = other.Bet;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注返回
  /// </summary>
  public sealed partial class MsgBetResp : pb::IMessage<MsgBetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgBetResp> _parser = new pb::MessageParser<MsgBetResp>(() => new MsgBetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgBetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp(MsgBetResp other) : this() {
      retCode_ = other.retCode_;
      userId_ = other.userId_;
      chairId_ = other.chairId_;
      betInfo_ = other.betInfo_ != null ? other.betInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp Clone() {
      return new MsgBetResp(this);
    }

    /// <summary>Field number for the "ret_code" field.</summary>
    public const int RetCodeFieldNumber = 1;
    private int retCode_;
    /// <summary>
    ///返回码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RetCode {
      get { return retCode_; }
      set {
        retCode_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 3;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_info" field.</summary>
    public const int BetInfoFieldNumber = 4;
    private global::A7U7P.A7BetInfo betInfo_;
    /// <summary>
    ///玩家下注信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::A7U7P.A7BetInfo BetInfo {
      get { return betInfo_; }
      set {
        betInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgBetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgBetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RetCode != other.RetCode) return false;
      if (UserId != other.UserId) return false;
      if (ChairId != other.ChairId) return false;
      if (!object.Equals(BetInfo, other.BetInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RetCode != 0) hash ^= RetCode.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (betInfo_ != null) hash ^= BetInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RetCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetCode);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RetCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetCode);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RetCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetCode);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (betInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BetInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgBetResp other) {
      if (other == null) {
        return;
      }
      if (other.RetCode != 0) {
        RetCode = other.RetCode;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.betInfo_ != null) {
        if (betInfo_ == null) {
          BetInfo = new global::A7U7P.A7BetInfo();
        }
        BetInfo.MergeFrom(other.BetInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RetCode = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            ChairId = input.ReadInt32();
            break;
          }
          case 34: {
            if (betInfo_ == null) {
              BetInfo = new global::A7U7P.A7BetInfo();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RetCode = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            ChairId = input.ReadInt32();
            break;
          }
          case 34: {
            if (betInfo_ == null) {
              BetInfo = new global::A7U7P.A7BetInfo();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgSendCardResp : pb::IMessage<MsgSendCardResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgSendCardResp> _parser = new pb::MessageParser<MsgSendCardResp>(() => new MsgSendCardResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgSendCardResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSendCardResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSendCardResp(MsgSendCardResp other) : this() {
      card_ = other.card_;
      area_ = other.area_;
      isEnd_ = other.isEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSendCardResp Clone() {
      return new MsgSendCardResp(this);
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 1;
    private int card_;
    /// <summary>
    ///牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///发牌区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "is_end" field.</summary>
    public const int IsEndFieldNumber = 3;
    private bool isEnd_;
    /// <summary>
    ///是否结束 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnd {
      get { return isEnd_; }
      set {
        isEnd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgSendCardResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgSendCardResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Card != other.Card) return false;
      if (Area != other.Area) return false;
      if (IsEnd != other.IsEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Card != 0) hash ^= Card.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (IsEnd != false) hash ^= IsEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Card != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Card);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (IsEnd != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Card != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Card);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (IsEnd != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Card != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Card);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (IsEnd != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgSendCardResp other) {
      if (other == null) {
        return;
      }
      if (other.Card != 0) {
        Card = other.Card;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      if (other.IsEnd != false) {
        IsEnd = other.IsEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Card = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
          case 24: {
            IsEnd = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Card = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
          case 24: {
            IsEnd = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家输赢信息                              
  /// </summary>
  public sealed partial class MsgWinMsg : pb::IMessage<MsgWinMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgWinMsg> _parser = new pb::MessageParser<MsgWinMsg>(() => new MsgWinMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgWinMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgWinMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgWinMsg(MsgWinMsg other) : this() {
      userId_ = other.userId_;
      chairId_ = other.chairId_;
      winGold_ = other.winGold_;
      newGold_ = other.newGold_;
      isWin_ = other.isWin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgWinMsg Clone() {
      return new MsgWinMsg(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 2;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "win_gold" field.</summary>
    public const int WinGoldFieldNumber = 3;
    private long winGold_;
    /// <summary>
    ///玩家输赢信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WinGold {
      get { return winGold_; }
      set {
        winGold_ = value;
      }
    }

    /// <summary>Field number for the "new_gold" field.</summary>
    public const int NewGoldFieldNumber = 4;
    private long newGold_;
    /// <summary>
    ///最新金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewGold {
      get { return newGold_; }
      set {
        newGold_ = value;
      }
    }

    /// <summary>Field number for the "is_win" field.</summary>
    public const int IsWinFieldNumber = 5;
    private bool isWin_;
    /// <summary>
    ///是否压中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWin {
      get { return isWin_; }
      set {
        isWin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgWinMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgWinMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChairId != other.ChairId) return false;
      if (WinGold != other.WinGold) return false;
      if (NewGold != other.NewGold) return false;
      if (IsWin != other.IsWin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (WinGold != 0L) hash ^= WinGold.GetHashCode();
      if (NewGold != 0L) hash ^= NewGold.GetHashCode();
      if (IsWin != false) hash ^= IsWin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinGold);
      }
      if (NewGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NewGold);
      }
      if (IsWin != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinGold);
      }
      if (NewGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NewGold);
      }
      if (IsWin != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (WinGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinGold);
      }
      if (NewGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewGold);
      }
      if (IsWin != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgWinMsg other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.WinGold != 0L) {
        WinGold = other.WinGold;
      }
      if (other.NewGold != 0L) {
        NewGold = other.NewGold;
      }
      if (other.IsWin != false) {
        IsWin = other.IsWin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            WinGold = input.ReadInt64();
            break;
          }
          case 32: {
            NewGold = input.ReadInt64();
            break;
          }
          case 40: {
            IsWin = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            WinGold = input.ReadInt64();
            break;
          }
          case 32: {
            NewGold = input.ReadInt64();
            break;
          }
          case 40: {
            IsWin = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏结果                                  
  /// </summary>
  public sealed partial class MsgResult : pb::IMessage<MsgResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgResult> _parser = new pb::MessageParser<MsgResult>(() => new MsgResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult(MsgResult other) : this() {
      winIndex_ = other.winIndex_;
      bankerInfo_ = other.bankerInfo_ != null ? other.bankerInfo_.Clone() : null;
      winMsg_ = other.winMsg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgResult Clone() {
      return new MsgResult(this);
    }

    /// <summary>Field number for the "win_index" field.</summary>
    public const int WinIndexFieldNumber = 1;
    private int winIndex_;
    /// <summary>
    ///开牌结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinIndex {
      get { return winIndex_; }
      set {
        winIndex_ = value;
      }
    }

    /// <summary>Field number for the "banker_info" field.</summary>
    public const int BankerInfoFieldNumber = 2;
    private global::A7U7P.A7BankerInfo bankerInfo_;
    /// <summary>
    ///庄家输赢的金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::A7U7P.A7BankerInfo BankerInfo {
      get { return bankerInfo_; }
      set {
        bankerInfo_ = value;
      }
    }

    /// <summary>Field number for the "win_msg" field.</summary>
    public const int WinMsgFieldNumber = 3;
    private static readonly pb::FieldCodec<global::A7U7P.MsgWinMsg> _repeated_winMsg_codec
        = pb::FieldCodec.ForMessage(26, global::A7U7P.MsgWinMsg.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.MsgWinMsg> winMsg_ = new pbc::RepeatedField<global::A7U7P.MsgWinMsg>();
    /// <summary>
    ///玩家输赢信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.MsgWinMsg> WinMsg {
      get { return winMsg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WinIndex != other.WinIndex) return false;
      if (!object.Equals(BankerInfo, other.BankerInfo)) return false;
      if(!winMsg_.Equals(other.winMsg_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WinIndex != 0) hash ^= WinIndex.GetHashCode();
      if (bankerInfo_ != null) hash ^= BankerInfo.GetHashCode();
      hash ^= winMsg_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WinIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WinIndex);
      }
      if (bankerInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BankerInfo);
      }
      winMsg_.WriteTo(output, _repeated_winMsg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WinIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WinIndex);
      }
      if (bankerInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BankerInfo);
      }
      winMsg_.WriteTo(ref output, _repeated_winMsg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WinIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinIndex);
      }
      if (bankerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BankerInfo);
      }
      size += winMsg_.CalculateSize(_repeated_winMsg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgResult other) {
      if (other == null) {
        return;
      }
      if (other.WinIndex != 0) {
        WinIndex = other.WinIndex;
      }
      if (other.bankerInfo_ != null) {
        if (bankerInfo_ == null) {
          BankerInfo = new global::A7U7P.A7BankerInfo();
        }
        BankerInfo.MergeFrom(other.BankerInfo);
      }
      winMsg_.Add(other.winMsg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WinIndex = input.ReadInt32();
            break;
          }
          case 18: {
            if (bankerInfo_ == null) {
              BankerInfo = new global::A7U7P.A7BankerInfo();
            }
            input.ReadMessage(BankerInfo);
            break;
          }
          case 26: {
            winMsg_.AddEntriesFrom(input, _repeated_winMsg_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WinIndex = input.ReadInt32();
            break;
          }
          case 18: {
            if (bankerInfo_ == null) {
              BankerInfo = new global::A7U7P.A7BankerInfo();
            }
            input.ReadMessage(BankerInfo);
            break;
          }
          case 26: {
            winMsg_.AddEntriesFrom(ref input, _repeated_winMsg_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
