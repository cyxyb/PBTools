// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/A7U7P.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace A7U7P {

  /// <summary>Holder for reflection information generated from Proto/SubGame/A7U7P.proto</summary>
  public static partial class A7U7PReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/A7U7P.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static A7U7PReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90by9TdWJHYW1lL0E3VTdQLnByb3RvEgVBN1U3UCI0ChBNc2dBN05v",
            "dGlmeVN0YXRlEhIKCmdhbWVfc3RhdGUYASABKAUSDAoEdGltZRgCIAEoBSIm",
            "CglBN0JldEluZm8SCwoDYmV0GAEgASgDEgwKBGFyZWEYAiABKAUioAEKDEE3",
            "UGxheWVyRGF0YRIPCgd1c2VyX2lkGAEgASgFEhAKCGNoYWlyX2lkGAIgASgF",
            "EhAKCHdpbl9nb2xkGAMgASgDEhIKCnRvdGFsX3BsYXkYBCABKAUSEAoId2lu",
            "X3BsYXkYBSABKAUSEAoIZ2FtZV9iZXQYBiABKAMSIwoJYmV0X2luZm9zGAcg",
            "AygLMhAuQTdVN1AuQTdCZXRJbmZvIh0KC01zZ0E3UmVjb3JkEg4KBnNpZXZl",
            "cxgCIAMoBSKTAgoOTXNnQTdTY2VuZUluZm8SEAoIYmV0X2xpc3QYASADKAMS",
            "EAoIYXJlYV9tdXAYAiADKAUSIwoHcmVjb3JkcxgDIAMoCzISLkE3VTdQLk1z",
            "Z0E3UmVjb3JkEhEKCWJldF9saW1pdBgEIAMoBRIUCgxwbGF5ZXJfbGltaXQY",
            "BSABKAUSEAoIYmV0X3RpbWUYBiABKAUSEAoIb3V0X3RpbWUYByABKAUSDQoF",
            "c3RhdGUYCCABKAUSEAoIZ2FtZV90YXgYCSABKAUSEAoIYXJlYV9iZXQYEyAD",
            "KAUSDgoGc2lldmVzGBQgAygFEigKC3BsYXllcl9saXN0GBYgAygLMhMuQTdV",
            "N1AuQTdQbGF5ZXJEYXRhIiUKCE1zZ0E3QmV0EgsKA2JldBgBIAEoAxIMCgRh",
            "cmVhGAIgASgFImcKDE1zZ0E3QmV0UmVzcBIQCghyZXRfY29kZRgBIAEoBRIP",
            "Cgd1c2VyX2lkGAIgASgFEhAKCGNoYWlyX2lkGAMgASgFEiIKCGJldF9pbmZv",
            "GAQgASgLMhAuQTdVN1AuQTdCZXRJbmZvIlQKC01zZ0E3V2luTXNnEg8KB3Vz",
            "ZXJfaWQYASABKAUSEAoIY2hhaXJfaWQYAiABKAUSEAoId2luX2dvbGQYAyAB",
            "KAMSEAoIbmV3X2dvbGQYBCABKAMiVQoLTXNnQTdSZXN1bHQSDgoGc2lldmVz",
            "GAIgAygFEhEKCXdpbl9pbmRleBgBIAMoBRIjCgd3aW5fbXNnGAMgAygLMhIu",
            "QTdVN1AuTXNnQTdXaW5Nc2cqQwoKRUdhbWVTdGF0ZRIMCghHU19SZWFkeRAA",
            "EgwKCEdTX1N0YXJ0EAESCgoGR1NfQmV0EAISDQoJR1NfUmVzdWx0EAMqmQEK",
            "DUVNc2dJRFN1YkdhbWUSFQoRTXNnSURTdWJHYW1lX051bGwQABIUChBNc2dJ",
            "RFN1YkdhbWVfQmV0EAESGAoUTXNnSURTdWJHYW1lX0JldFJlc3AQAhIfChtN",
            "c2dJRFN1YkdhbWVfR2FtZVJlc3VsdFJlc3AQBxIgChxNc2dJRFN1YkdhbWVf",
            "Tm90aWZ5U3RhdGVSZXNwEAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::A7U7P.EGameState), typeof(global::A7U7P.EMsgIDSubGame), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgA7NotifyState), global::A7U7P.MsgA7NotifyState.Parser, new[]{ "GameState", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.A7BetInfo), global::A7U7P.A7BetInfo.Parser, new[]{ "Bet", "Area" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.A7PlayerData), global::A7U7P.A7PlayerData.Parser, new[]{ "UserId", "ChairId", "WinGold", "TotalPlay", "WinPlay", "GameBet", "BetInfos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgA7Record), global::A7U7P.MsgA7Record.Parser, new[]{ "Sieves" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgA7SceneInfo), global::A7U7P.MsgA7SceneInfo.Parser, new[]{ "BetList", "AreaMup", "Records", "BetLimit", "PlayerLimit", "BetTime", "OutTime", "State", "GameTax", "AreaBet", "Sieves", "PlayerList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgA7Bet), global::A7U7P.MsgA7Bet.Parser, new[]{ "Bet", "Area" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgA7BetResp), global::A7U7P.MsgA7BetResp.Parser, new[]{ "RetCode", "UserId", "ChairId", "BetInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgA7WinMsg), global::A7U7P.MsgA7WinMsg.Parser, new[]{ "UserId", "ChairId", "WinGold", "NewGold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::A7U7P.MsgA7Result), global::A7U7P.MsgA7Result.Parser, new[]{ "Sieves", "WinIndex", "WinMsg" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EGameState {
    /// <summary>
    ///准备
    /// </summary>
    [pbr::OriginalName("GS_Ready")] GsReady = 0,
    /// <summary>
    ///开始游戏
    /// </summary>
    [pbr::OriginalName("GS_Start")] GsStart = 1,
    /// <summary>
    ///下注
    /// </summary>
    [pbr::OriginalName("GS_Bet")] GsBet = 2,
    /// <summary>
    ///结算
    /// </summary>
    [pbr::OriginalName("GS_Result")] GsResult = 3,
  }

  public enum EMsgIDSubGame {
    [pbr::OriginalName("MsgIDSubGame_Null")] MsgIdsubGameNull = 0,
    /// <summary>
    ///玩家下注(MsgBet)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_Bet")] MsgIdsubGameBet = 1,
    /// <summary>
    ///玩家下注返回(MsgBetResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_BetResp")] MsgIdsubGameBetResp = 2,
    /// <summary>
    ///游戏结果(MsgResult)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_GameResultResp")] MsgIdsubGameGameResultResp = 7,
    /// <summary>
    ///游戏状态(MsgCommonN32)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_NotifyStateResp")] MsgIdsubGameNotifyStateResp = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  ///通知状态
  /// </summary>
  public sealed partial class MsgA7NotifyState : pb::IMessage<MsgA7NotifyState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgA7NotifyState> _parser = new pb::MessageParser<MsgA7NotifyState>(() => new MsgA7NotifyState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgA7NotifyState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7NotifyState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7NotifyState(MsgA7NotifyState other) : this() {
      gameState_ = other.gameState_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7NotifyState Clone() {
      return new MsgA7NotifyState(this);
    }

    /// <summary>Field number for the "game_state" field.</summary>
    public const int GameStateFieldNumber = 1;
    private int gameState_;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameState {
      get { return gameState_; }
      set {
        gameState_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private int time_;
    /// <summary>
    ///当前阶段时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgA7NotifyState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgA7NotifyState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameState != other.GameState) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameState != 0) hash ^= GameState.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameState);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameState);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameState);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgA7NotifyState other) {
      if (other == null) {
        return;
      }
      if (other.GameState != 0) {
        GameState = other.GameState;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameState = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameState = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class A7BetInfo : pb::IMessage<A7BetInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<A7BetInfo> _parser = new pb::MessageParser<A7BetInfo>(() => new A7BetInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<A7BetInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BetInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BetInfo(A7BetInfo other) : this() {
      bet_ = other.bet_;
      area_ = other.area_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7BetInfo Clone() {
      return new A7BetInfo(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private long bet_;
    /// <summary>
    ///下注金额  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///0-16
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as A7BetInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(A7BetInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bet != other.Bet) return false;
      if (Area != other.Area) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bet != 0L) hash ^= Bet.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bet);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(A7BetInfo other) {
      if (other == null) {
        return;
      }
      if (other.Bet != 0L) {
        Bet = other.Bet;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class A7PlayerData : pb::IMessage<A7PlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<A7PlayerData> _parser = new pb::MessageParser<A7PlayerData>(() => new A7PlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<A7PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7PlayerData(A7PlayerData other) : this() {
      userId_ = other.userId_;
      chairId_ = other.chairId_;
      winGold_ = other.winGold_;
      totalPlay_ = other.totalPlay_;
      winPlay_ = other.winPlay_;
      gameBet_ = other.gameBet_;
      betInfos_ = other.betInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public A7PlayerData Clone() {
      return new A7PlayerData(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 2;
    private int chairId_;
    /// <summary>
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "win_gold" field.</summary>
    public const int WinGoldFieldNumber = 3;
    private long winGold_;
    /// <summary>
    /// 总赢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WinGold {
      get { return winGold_; }
      set {
        winGold_ = value;
      }
    }

    /// <summary>Field number for the "total_play" field.</summary>
    public const int TotalPlayFieldNumber = 4;
    private int totalPlay_;
    /// <summary>
    /// 总玩次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalPlay {
      get { return totalPlay_; }
      set {
        totalPlay_ = value;
      }
    }

    /// <summary>Field number for the "win_play" field.</summary>
    public const int WinPlayFieldNumber = 5;
    private int winPlay_;
    /// <summary>
    /// 赢次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinPlay {
      get { return winPlay_; }
      set {
        winPlay_ = value;
      }
    }

    /// <summary>Field number for the "game_bet" field.</summary>
    public const int GameBetFieldNumber = 6;
    private long gameBet_;
    /// <summary>
    /// 玩家总下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GameBet {
      get { return gameBet_; }
      set {
        gameBet_ = value;
      }
    }

    /// <summary>Field number for the "bet_infos" field.</summary>
    public const int BetInfosFieldNumber = 7;
    private static readonly pb::FieldCodec<global::A7U7P.A7BetInfo> _repeated_betInfos_codec
        = pb::FieldCodec.ForMessage(58, global::A7U7P.A7BetInfo.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.A7BetInfo> betInfos_ = new pbc::RepeatedField<global::A7U7P.A7BetInfo>();
    /// <summary>
    /// 下注状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.A7BetInfo> BetInfos {
      get { return betInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as A7PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(A7PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChairId != other.ChairId) return false;
      if (WinGold != other.WinGold) return false;
      if (TotalPlay != other.TotalPlay) return false;
      if (WinPlay != other.WinPlay) return false;
      if (GameBet != other.GameBet) return false;
      if(!betInfos_.Equals(other.betInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (WinGold != 0L) hash ^= WinGold.GetHashCode();
      if (TotalPlay != 0) hash ^= TotalPlay.GetHashCode();
      if (WinPlay != 0) hash ^= WinPlay.GetHashCode();
      if (GameBet != 0L) hash ^= GameBet.GetHashCode();
      hash ^= betInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinGold);
      }
      if (TotalPlay != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalPlay);
      }
      if (WinPlay != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WinPlay);
      }
      if (GameBet != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(GameBet);
      }
      betInfos_.WriteTo(output, _repeated_betInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinGold);
      }
      if (TotalPlay != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalPlay);
      }
      if (WinPlay != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WinPlay);
      }
      if (GameBet != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(GameBet);
      }
      betInfos_.WriteTo(ref output, _repeated_betInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (WinGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinGold);
      }
      if (TotalPlay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlay);
      }
      if (WinPlay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinPlay);
      }
      if (GameBet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GameBet);
      }
      size += betInfos_.CalculateSize(_repeated_betInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(A7PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.WinGold != 0L) {
        WinGold = other.WinGold;
      }
      if (other.TotalPlay != 0) {
        TotalPlay = other.TotalPlay;
      }
      if (other.WinPlay != 0) {
        WinPlay = other.WinPlay;
      }
      if (other.GameBet != 0L) {
        GameBet = other.GameBet;
      }
      betInfos_.Add(other.betInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            WinGold = input.ReadInt64();
            break;
          }
          case 32: {
            TotalPlay = input.ReadInt32();
            break;
          }
          case 40: {
            WinPlay = input.ReadInt32();
            break;
          }
          case 48: {
            GameBet = input.ReadInt64();
            break;
          }
          case 58: {
            betInfos_.AddEntriesFrom(input, _repeated_betInfos_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            WinGold = input.ReadInt64();
            break;
          }
          case 32: {
            TotalPlay = input.ReadInt32();
            break;
          }
          case 40: {
            WinPlay = input.ReadInt32();
            break;
          }
          case 48: {
            GameBet = input.ReadInt64();
            break;
          }
          case 58: {
            betInfos_.AddEntriesFrom(ref input, _repeated_betInfos_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgA7Record : pb::IMessage<MsgA7Record>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgA7Record> _parser = new pb::MessageParser<MsgA7Record>(() => new MsgA7Record());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgA7Record> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Record() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Record(MsgA7Record other) : this() {
      sieves_ = other.sieves_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Record Clone() {
      return new MsgA7Record(this);
    }

    /// <summary>Field number for the "sieves" field.</summary>
    public const int SievesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_sieves_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> sieves_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///两个筛子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Sieves {
      get { return sieves_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgA7Record);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgA7Record other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sieves_.Equals(other.sieves_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sieves_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sieves_.WriteTo(output, _repeated_sieves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sieves_.WriteTo(ref output, _repeated_sieves_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sieves_.CalculateSize(_repeated_sieves_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgA7Record other) {
      if (other == null) {
        return;
      }
      sieves_.Add(other.sieves_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18:
          case 16: {
            sieves_.AddEntriesFrom(input, _repeated_sieves_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18:
          case 16: {
            sieves_.AddEntriesFrom(ref input, _repeated_sieves_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///场景消息
  /// </summary>
  public sealed partial class MsgA7SceneInfo : pb::IMessage<MsgA7SceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgA7SceneInfo> _parser = new pb::MessageParser<MsgA7SceneInfo>(() => new MsgA7SceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgA7SceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7SceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7SceneInfo(MsgA7SceneInfo other) : this() {
      betList_ = other.betList_.Clone();
      areaMup_ = other.areaMup_.Clone();
      records_ = other.records_.Clone();
      betLimit_ = other.betLimit_.Clone();
      playerLimit_ = other.playerLimit_;
      betTime_ = other.betTime_;
      outTime_ = other.outTime_;
      state_ = other.state_;
      gameTax_ = other.gameTax_;
      areaBet_ = other.areaBet_.Clone();
      sieves_ = other.sieves_.Clone();
      playerList_ = other.playerList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7SceneInfo Clone() {
      return new MsgA7SceneInfo(this);
    }

    /// <summary>Field number for the "bet_list" field.</summary>
    public const int BetListFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_betList_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> betList_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///固定押注配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> BetList {
      get { return betList_; }
    }

    /// <summary>Field number for the "area_mup" field.</summary>
    public const int AreaMupFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_areaMup_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> areaMup_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///区域倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AreaMup {
      get { return areaMup_; }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::A7U7P.MsgA7Record> _repeated_records_codec
        = pb::FieldCodec.ForMessage(26, global::A7U7P.MsgA7Record.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.MsgA7Record> records_ = new pbc::RepeatedField<global::A7U7P.MsgA7Record>();
    /// <summary>
    ///开筛子结果历史记录 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.MsgA7Record> Records {
      get { return records_; }
    }

    /// <summary>Field number for the "bet_limit" field.</summary>
    public const int BetLimitFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_betLimit_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> betLimit_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///区域下注限制 17个区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BetLimit {
      get { return betLimit_; }
    }

    /// <summary>Field number for the "player_limit" field.</summary>
    public const int PlayerLimitFieldNumber = 5;
    private int playerLimit_;
    /// <summary>
    ///个人下注限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLimit {
      get { return playerLimit_; }
      set {
        playerLimit_ = value;
      }
    }

    /// <summary>Field number for the "bet_time" field.</summary>
    public const int BetTimeFieldNumber = 6;
    private int betTime_;
    /// <summary>
    ///下注总时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetTime {
      get { return betTime_; }
      set {
        betTime_ = value;
      }
    }

    /// <summary>Field number for the "out_time" field.</summary>
    public const int OutTimeFieldNumber = 7;
    private int outTime_;
    /// <summary>
    ///剩余时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutTime {
      get { return outTime_; }
      set {
        outTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private int state_;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "game_tax" field.</summary>
    public const int GameTaxFieldNumber = 9;
    private int gameTax_;
    /// <summary>
    ///税收配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameTax {
      get { return gameTax_; }
      set {
        gameTax_ = value;
      }
    }

    /// <summary>Field number for the "area_bet" field.</summary>
    public const int AreaBetFieldNumber = 19;
    private static readonly pb::FieldCodec<int> _repeated_areaBet_codec
        = pb::FieldCodec.ForInt32(154);
    private readonly pbc::RepeatedField<int> areaBet_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///每个区域的总下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AreaBet {
      get { return areaBet_; }
    }

    /// <summary>Field number for the "sieves" field.</summary>
    public const int SievesFieldNumber = 20;
    private static readonly pb::FieldCodec<int> _repeated_sieves_codec
        = pb::FieldCodec.ForInt32(162);
    private readonly pbc::RepeatedField<int> sieves_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///筛子列表 2颗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Sieves {
      get { return sieves_; }
    }

    /// <summary>Field number for the "player_list" field.</summary>
    public const int PlayerListFieldNumber = 22;
    private static readonly pb::FieldCodec<global::A7U7P.A7PlayerData> _repeated_playerList_codec
        = pb::FieldCodec.ForMessage(178, global::A7U7P.A7PlayerData.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.A7PlayerData> playerList_ = new pbc::RepeatedField<global::A7U7P.A7PlayerData>();
    /// <summary>
    ///玩家状态	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.A7PlayerData> PlayerList {
      get { return playerList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgA7SceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgA7SceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!betList_.Equals(other.betList_)) return false;
      if(!areaMup_.Equals(other.areaMup_)) return false;
      if(!records_.Equals(other.records_)) return false;
      if(!betLimit_.Equals(other.betLimit_)) return false;
      if (PlayerLimit != other.PlayerLimit) return false;
      if (BetTime != other.BetTime) return false;
      if (OutTime != other.OutTime) return false;
      if (State != other.State) return false;
      if (GameTax != other.GameTax) return false;
      if(!areaBet_.Equals(other.areaBet_)) return false;
      if(!sieves_.Equals(other.sieves_)) return false;
      if(!playerList_.Equals(other.playerList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= betList_.GetHashCode();
      hash ^= areaMup_.GetHashCode();
      hash ^= records_.GetHashCode();
      hash ^= betLimit_.GetHashCode();
      if (PlayerLimit != 0) hash ^= PlayerLimit.GetHashCode();
      if (BetTime != 0) hash ^= BetTime.GetHashCode();
      if (OutTime != 0) hash ^= OutTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (GameTax != 0) hash ^= GameTax.GetHashCode();
      hash ^= areaBet_.GetHashCode();
      hash ^= sieves_.GetHashCode();
      hash ^= playerList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      betList_.WriteTo(output, _repeated_betList_codec);
      areaMup_.WriteTo(output, _repeated_areaMup_codec);
      records_.WriteTo(output, _repeated_records_codec);
      betLimit_.WriteTo(output, _repeated_betLimit_codec);
      if (PlayerLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerLimit);
      }
      if (BetTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BetTime);
      }
      if (OutTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutTime);
      }
      if (State != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(State);
      }
      if (GameTax != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GameTax);
      }
      areaBet_.WriteTo(output, _repeated_areaBet_codec);
      sieves_.WriteTo(output, _repeated_sieves_codec);
      playerList_.WriteTo(output, _repeated_playerList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      betList_.WriteTo(ref output, _repeated_betList_codec);
      areaMup_.WriteTo(ref output, _repeated_areaMup_codec);
      records_.WriteTo(ref output, _repeated_records_codec);
      betLimit_.WriteTo(ref output, _repeated_betLimit_codec);
      if (PlayerLimit != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerLimit);
      }
      if (BetTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BetTime);
      }
      if (OutTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OutTime);
      }
      if (State != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(State);
      }
      if (GameTax != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GameTax);
      }
      areaBet_.WriteTo(ref output, _repeated_areaBet_codec);
      sieves_.WriteTo(ref output, _repeated_sieves_codec);
      playerList_.WriteTo(ref output, _repeated_playerList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += betList_.CalculateSize(_repeated_betList_codec);
      size += areaMup_.CalculateSize(_repeated_areaMup_codec);
      size += records_.CalculateSize(_repeated_records_codec);
      size += betLimit_.CalculateSize(_repeated_betLimit_codec);
      if (PlayerLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLimit);
      }
      if (BetTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetTime);
      }
      if (OutTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (GameTax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTax);
      }
      size += areaBet_.CalculateSize(_repeated_areaBet_codec);
      size += sieves_.CalculateSize(_repeated_sieves_codec);
      size += playerList_.CalculateSize(_repeated_playerList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgA7SceneInfo other) {
      if (other == null) {
        return;
      }
      betList_.Add(other.betList_);
      areaMup_.Add(other.areaMup_);
      records_.Add(other.records_);
      betLimit_.Add(other.betLimit_);
      if (other.PlayerLimit != 0) {
        PlayerLimit = other.PlayerLimit;
      }
      if (other.BetTime != 0) {
        BetTime = other.BetTime;
      }
      if (other.OutTime != 0) {
        OutTime = other.OutTime;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.GameTax != 0) {
        GameTax = other.GameTax;
      }
      areaBet_.Add(other.areaBet_);
      sieves_.Add(other.sieves_);
      playerList_.Add(other.playerList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            betList_.AddEntriesFrom(input, _repeated_betList_codec);
            break;
          }
          case 18:
          case 16: {
            areaMup_.AddEntriesFrom(input, _repeated_areaMup_codec);
            break;
          }
          case 26: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
          case 34:
          case 32: {
            betLimit_.AddEntriesFrom(input, _repeated_betLimit_codec);
            break;
          }
          case 40: {
            PlayerLimit = input.ReadInt32();
            break;
          }
          case 48: {
            BetTime = input.ReadInt32();
            break;
          }
          case 56: {
            OutTime = input.ReadInt32();
            break;
          }
          case 64: {
            State = input.ReadInt32();
            break;
          }
          case 72: {
            GameTax = input.ReadInt32();
            break;
          }
          case 154:
          case 152: {
            areaBet_.AddEntriesFrom(input, _repeated_areaBet_codec);
            break;
          }
          case 162:
          case 160: {
            sieves_.AddEntriesFrom(input, _repeated_sieves_codec);
            break;
          }
          case 178: {
            playerList_.AddEntriesFrom(input, _repeated_playerList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            betList_.AddEntriesFrom(ref input, _repeated_betList_codec);
            break;
          }
          case 18:
          case 16: {
            areaMup_.AddEntriesFrom(ref input, _repeated_areaMup_codec);
            break;
          }
          case 26: {
            records_.AddEntriesFrom(ref input, _repeated_records_codec);
            break;
          }
          case 34:
          case 32: {
            betLimit_.AddEntriesFrom(ref input, _repeated_betLimit_codec);
            break;
          }
          case 40: {
            PlayerLimit = input.ReadInt32();
            break;
          }
          case 48: {
            BetTime = input.ReadInt32();
            break;
          }
          case 56: {
            OutTime = input.ReadInt32();
            break;
          }
          case 64: {
            State = input.ReadInt32();
            break;
          }
          case 72: {
            GameTax = input.ReadInt32();
            break;
          }
          case 154:
          case 152: {
            areaBet_.AddEntriesFrom(ref input, _repeated_areaBet_codec);
            break;
          }
          case 162:
          case 160: {
            sieves_.AddEntriesFrom(ref input, _repeated_sieves_codec);
            break;
          }
          case 178: {
            playerList_.AddEntriesFrom(ref input, _repeated_playerList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注
  /// </summary>
  public sealed partial class MsgA7Bet : pb::IMessage<MsgA7Bet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgA7Bet> _parser = new pb::MessageParser<MsgA7Bet>(() => new MsgA7Bet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgA7Bet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Bet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Bet(MsgA7Bet other) : this() {
      bet_ = other.bet_;
      area_ = other.area_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Bet Clone() {
      return new MsgA7Bet(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private long bet_;
    /// <summary>
    ///押注金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bet {
      get { return bet_; }
      set {
        bet_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///押注区域(0-16)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgA7Bet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgA7Bet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bet != other.Bet) return false;
      if (Area != other.Area) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bet != 0L) hash ^= Bet.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Bet);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bet);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgA7Bet other) {
      if (other == null) {
        return;
      }
      if (other.Bet != 0L) {
        Bet = other.Bet;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bet = input.ReadInt64();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注返回
  /// </summary>
  public sealed partial class MsgA7BetResp : pb::IMessage<MsgA7BetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgA7BetResp> _parser = new pb::MessageParser<MsgA7BetResp>(() => new MsgA7BetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgA7BetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7BetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7BetResp(MsgA7BetResp other) : this() {
      retCode_ = other.retCode_;
      userId_ = other.userId_;
      chairId_ = other.chairId_;
      betInfo_ = other.betInfo_ != null ? other.betInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7BetResp Clone() {
      return new MsgA7BetResp(this);
    }

    /// <summary>Field number for the "ret_code" field.</summary>
    public const int RetCodeFieldNumber = 1;
    private int retCode_;
    /// <summary>
    ///返回码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RetCode {
      get { return retCode_; }
      set {
        retCode_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 3;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_info" field.</summary>
    public const int BetInfoFieldNumber = 4;
    private global::A7U7P.A7BetInfo betInfo_;
    /// <summary>
    ///玩家下注信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::A7U7P.A7BetInfo BetInfo {
      get { return betInfo_; }
      set {
        betInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgA7BetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgA7BetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RetCode != other.RetCode) return false;
      if (UserId != other.UserId) return false;
      if (ChairId != other.ChairId) return false;
      if (!object.Equals(BetInfo, other.BetInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RetCode != 0) hash ^= RetCode.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (betInfo_ != null) hash ^= BetInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RetCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetCode);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RetCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RetCode);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RetCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetCode);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (betInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BetInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgA7BetResp other) {
      if (other == null) {
        return;
      }
      if (other.RetCode != 0) {
        RetCode = other.RetCode;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.betInfo_ != null) {
        if (betInfo_ == null) {
          BetInfo = new global::A7U7P.A7BetInfo();
        }
        BetInfo.MergeFrom(other.BetInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RetCode = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            ChairId = input.ReadInt32();
            break;
          }
          case 34: {
            if (betInfo_ == null) {
              BetInfo = new global::A7U7P.A7BetInfo();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RetCode = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            ChairId = input.ReadInt32();
            break;
          }
          case 34: {
            if (betInfo_ == null) {
              BetInfo = new global::A7U7P.A7BetInfo();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家输赢信息                              
  /// </summary>
  public sealed partial class MsgA7WinMsg : pb::IMessage<MsgA7WinMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgA7WinMsg> _parser = new pb::MessageParser<MsgA7WinMsg>(() => new MsgA7WinMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgA7WinMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7WinMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7WinMsg(MsgA7WinMsg other) : this() {
      userId_ = other.userId_;
      chairId_ = other.chairId_;
      winGold_ = other.winGold_;
      newGold_ = other.newGold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7WinMsg Clone() {
      return new MsgA7WinMsg(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 2;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "win_gold" field.</summary>
    public const int WinGoldFieldNumber = 3;
    private long winGold_;
    /// <summary>
    ///玩家输赢信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WinGold {
      get { return winGold_; }
      set {
        winGold_ = value;
      }
    }

    /// <summary>Field number for the "new_gold" field.</summary>
    public const int NewGoldFieldNumber = 4;
    private long newGold_;
    /// <summary>
    ///最新金币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewGold {
      get { return newGold_; }
      set {
        newGold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgA7WinMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgA7WinMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ChairId != other.ChairId) return false;
      if (WinGold != other.WinGold) return false;
      if (NewGold != other.NewGold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (WinGold != 0L) hash ^= WinGold.GetHashCode();
      if (NewGold != 0L) hash ^= NewGold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinGold);
      }
      if (NewGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NewGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (ChairId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ChairId);
      }
      if (WinGold != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinGold);
      }
      if (NewGold != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NewGold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (WinGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinGold);
      }
      if (NewGold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewGold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgA7WinMsg other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.WinGold != 0L) {
        WinGold = other.WinGold;
      }
      if (other.NewGold != 0L) {
        NewGold = other.NewGold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            WinGold = input.ReadInt64();
            break;
          }
          case 32: {
            NewGold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 16: {
            ChairId = input.ReadInt32();
            break;
          }
          case 24: {
            WinGold = input.ReadInt64();
            break;
          }
          case 32: {
            NewGold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏结果                                  
  /// </summary>
  public sealed partial class MsgA7Result : pb::IMessage<MsgA7Result>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgA7Result> _parser = new pb::MessageParser<MsgA7Result>(() => new MsgA7Result());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgA7Result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::A7U7P.A7U7PReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Result(MsgA7Result other) : this() {
      sieves_ = other.sieves_.Clone();
      winIndex_ = other.winIndex_.Clone();
      winMsg_ = other.winMsg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgA7Result Clone() {
      return new MsgA7Result(this);
    }

    /// <summary>Field number for the "sieves" field.</summary>
    public const int SievesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_sieves_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> sieves_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///开奖两个筛子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Sieves {
      get { return sieves_; }
    }

    /// <summary>Field number for the "win_index" field.</summary>
    public const int WinIndexFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_winIndex_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> winIndex_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///开牌结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> WinIndex {
      get { return winIndex_; }
    }

    /// <summary>Field number for the "win_msg" field.</summary>
    public const int WinMsgFieldNumber = 3;
    private static readonly pb::FieldCodec<global::A7U7P.MsgA7WinMsg> _repeated_winMsg_codec
        = pb::FieldCodec.ForMessage(26, global::A7U7P.MsgA7WinMsg.Parser);
    private readonly pbc::RepeatedField<global::A7U7P.MsgA7WinMsg> winMsg_ = new pbc::RepeatedField<global::A7U7P.MsgA7WinMsg>();
    /// <summary>
    ///玩家输赢信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::A7U7P.MsgA7WinMsg> WinMsg {
      get { return winMsg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgA7Result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgA7Result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sieves_.Equals(other.sieves_)) return false;
      if(!winIndex_.Equals(other.winIndex_)) return false;
      if(!winMsg_.Equals(other.winMsg_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sieves_.GetHashCode();
      hash ^= winIndex_.GetHashCode();
      hash ^= winMsg_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      winIndex_.WriteTo(output, _repeated_winIndex_codec);
      sieves_.WriteTo(output, _repeated_sieves_codec);
      winMsg_.WriteTo(output, _repeated_winMsg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      winIndex_.WriteTo(ref output, _repeated_winIndex_codec);
      sieves_.WriteTo(ref output, _repeated_sieves_codec);
      winMsg_.WriteTo(ref output, _repeated_winMsg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sieves_.CalculateSize(_repeated_sieves_codec);
      size += winIndex_.CalculateSize(_repeated_winIndex_codec);
      size += winMsg_.CalculateSize(_repeated_winMsg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgA7Result other) {
      if (other == null) {
        return;
      }
      sieves_.Add(other.sieves_);
      winIndex_.Add(other.winIndex_);
      winMsg_.Add(other.winMsg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            winIndex_.AddEntriesFrom(input, _repeated_winIndex_codec);
            break;
          }
          case 18:
          case 16: {
            sieves_.AddEntriesFrom(input, _repeated_sieves_codec);
            break;
          }
          case 26: {
            winMsg_.AddEntriesFrom(input, _repeated_winMsg_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            winIndex_.AddEntriesFrom(ref input, _repeated_winIndex_codec);
            break;
          }
          case 18:
          case 16: {
            sieves_.AddEntriesFrom(ref input, _repeated_sieves_codec);
            break;
          }
          case 26: {
            winMsg_.AddEntriesFrom(ref input, _repeated_winMsg_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
