// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/TeenPatti_India.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TeenPattiIndia {

  /// <summary>Holder for reflection information generated from Proto/SubGame/TeenPatti_India.proto</summary>
  public static partial class TeenPattiIndiaReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/TeenPatti_India.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TeenPattiIndiaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNQcm90by9TdWJHYW1lL1RlZW5QYXR0aV9JbmRpYS5wcm90bxIPVGVlblBh",
            "dHRpX0luZGlhIh0KDE1zZ0hhbmRDYXJkcxINCgVjYXJkcxgBIAMoBSLnAQoN",
            "TXNnUGxheWVySW5mbxIPCgd1c2VyX2lkGAEgASgFEhAKCG5pY2tuYW1lGAIg",
            "ASgJEg4KBmF2YXRhchgDIAEoCRIRCgl2aXBfbGV2ZWwYBCABKAUSFAoMYXZh",
            "dGFyX2ZyYW1lGAUgASgFEhAKCGNoYWlyX2lkGAYgASgFEhAKCG1pbmdfemh1",
            "GAcgASgFEhMKC3BsYXlfc3RhdHVzGAggASgFEhIKCnBsYXllcl9iZXQYCSAB",
            "KAUSLQoGaGFuZGxzGAogASgLMh0uVGVlblBhdHRpX0luZGlhLk1zZ0hhbmRD",
            "YXJkcyK0AgoMTXNnU2NlbmVJbmZvEhEKCW1heF9zY29yZRgBIAEoAxIXCg90",
            "YWJsZV9tYXhfc2NvcmUYAiABKAMSEgoKY2VsbF9zY29yZRgDIAEoAxIRCglj",
            "dXJfdGltZXMYBCABKAUSEwoLdGFibGVfc3RhdGUYBSABKAUSFwoPdG90YWxf",
            "YmV0X3Njb3JlGAYgASgDEhcKD2Jhbmtlcl9jaGFpcl9pZBgHIAEoBRIUCgxj",
            "dXJfY2hhaXJfaWQYCCABKAUSNAoMcGxheWVyX2luZm9zGAkgAygLMh4uVGVl",
            "blBhdHRpX0luZGlhLk1zZ1BsYXllckluZm8SFQoNY3VyX2NoYWlyX2FjdBgK",
            "IAEoBRIQCghvdXRfdGltZRgLIAEoBRIVCg1jb21wYXJlX3N0YXRlGAwgASgI",
            "IqcBChBNc2dHYW1lU3RhcnRSZXNwEhQKDGN1cl9jaGFpcl9pZBgBIAEoBRIR",
            "CgljdXJfdGltZXMYAiABKAUSFwoPYmFua2VyX2NoYWlyX2lkGAMgASgFEhEK",
            "CW1heF9zY29yZRgEIAEoAxIRCgltYXhfYmxpbmQYBSABKAMSEgoKY2VsbF9z",
            "Y29yZRgGIAEoAxIXCg90YWJsZV9tYXhfc2NvcmUYByABKAMiUAoJTXNnQWN0",
            "aW9uEgsKA2FjdBgBIAEoBRIRCgliZXRfc2NvcmUYAiABKAMSFAoMY29tcGFy",
            "ZV91c2VyGAMgASgDEg0KBWlzX29rGAQgASgIIiEKDU1zZ0dpdmVVcFJlc3AS",
            "EAoIY2hhaXJfaWQYASABKAUiMgoPTXNnTG9va0NhcmRSZXNwEhAKCGNoYWly",
            "X2lkGAEgASgFEg0KBWNhcmRzGAIgAygFInYKDU1zZ0FkZEJldFJlc3ASFAoM",
            "Y3VyX2NoYWlyX2lkGAEgASgFEhEKCWN1cl90aW1lcxgCIAEoBRITCgtjdXJy",
            "ZW50X2FjdBgDIAEoBRIUCgxhZGRfY2hhaXJfaWQYBCABKAUSEQoJYWRkX3Nj",
            "b3JlGAUgASgDIjoKEk1zZ0NvbXBhcmVDYXJkUmVzcBIQCghjaGFpcl9pZBgB",
            "IAEoBRISCgpjb21wYXJlX2lkGAIgASgFIq0BChVNc2dDb21wYXJlQ2FyZFJl",
            "dFJlc3ASGAoQY3VycmVudF9jaGFpcl9pZBgBIAEoBRITCgtjdXJyZW50X2Fj",
            "dBgCIAEoBRIPCgdsb3N0X2lkGAMgASgFEhIKCmNvbXBhcmVfaWQYBCABKAUS",
            "EgoKcGFzc2l2ZV9pZBgFIAEoBRIVCg1jb21wYXJlX2NhcmRzGAYgAygFEhUK",
            "DXBhc3NpdmVfY2FyZHMYByADKAUifQoNTXNnR2FtZVJlc3VsdBIQCghnYW1l",
            "X3RheBgBIAEoBRISCgpnYW1lX3Njb3JlGAIgAygDEjMKDHBsYXllcl9oYW5k",
            "cxgDIAMoCzIdLlRlZW5QYXR0aV9JbmRpYS5Nc2dIYW5kQ2FyZHMSEQoJZW5k",
            "X3N0YXRlGAQgASgFKroCCg1FTXNnSURTdWJHYW1lEhUKEU1zZ0lEU3ViR2Ft",
            "ZV9OdWxsEAASHgoaTXNnSURTdWJHYW1lX0dhbWVTdGFydFJlc3AQARIXChNN",
            "c2dJRFN1YkdhbWVfQWN0aW9uEAISGwoXTXNnSURTdWJHYW1lX0dpdmVVcFJl",
            "c3AQAxIZChVNc2dJRFN1YkdhbWVfTG9va0NhcmQQBBIbChdNc2dJRFN1Ykdh",
            "bWVfQWRkQmV0UmVzcBAFEiAKHE1zZ0lEU3ViR2FtZV9Db21wYXJlQ2FyZFJl",
            "c3AQBhIfChtNc2dJRFN1YkdhbWVfQ29tcGFyZVJldFJlc3AQBxIfChtNc2dJ",
            "RFN1YkdhbWVfR2FtZVJlc3VsdFJlc3AQCBIgChxNc2dJRFN1YkdhbWVfTm90",
            "aWZ5U3RhdGVSZXNwEAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TeenPattiIndia.EMsgIDSubGame), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgHandCards), global::TeenPattiIndia.MsgHandCards.Parser, new[]{ "Cards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgPlayerInfo), global::TeenPattiIndia.MsgPlayerInfo.Parser, new[]{ "UserId", "Nickname", "Avatar", "VipLevel", "AvatarFrame", "ChairId", "MingZhu", "PlayStatus", "PlayerBet", "Handls" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgSceneInfo), global::TeenPattiIndia.MsgSceneInfo.Parser, new[]{ "MaxScore", "TableMaxScore", "CellScore", "CurTimes", "TableState", "TotalBetScore", "BankerChairId", "CurChairId", "PlayerInfos", "CurChairAct", "OutTime", "CompareState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgGameStartResp), global::TeenPattiIndia.MsgGameStartResp.Parser, new[]{ "CurChairId", "CurTimes", "BankerChairId", "MaxScore", "MaxBlind", "CellScore", "TableMaxScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgAction), global::TeenPattiIndia.MsgAction.Parser, new[]{ "Act", "BetScore", "CompareUser", "IsOk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgGiveUpResp), global::TeenPattiIndia.MsgGiveUpResp.Parser, new[]{ "ChairId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgLookCardResp), global::TeenPattiIndia.MsgLookCardResp.Parser, new[]{ "ChairId", "Cards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgAddBetResp), global::TeenPattiIndia.MsgAddBetResp.Parser, new[]{ "CurChairId", "CurTimes", "CurrentAct", "AddChairId", "AddScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgCompareCardResp), global::TeenPattiIndia.MsgCompareCardResp.Parser, new[]{ "ChairId", "CompareId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgCompareCardRetResp), global::TeenPattiIndia.MsgCompareCardRetResp.Parser, new[]{ "CurrentChairId", "CurrentAct", "LostId", "CompareId", "PassiveId", "CompareCards", "PassiveCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TeenPattiIndia.MsgGameResult), global::TeenPattiIndia.MsgGameResult.Parser, new[]{ "GameTax", "GameScore", "PlayerHands", "EndState" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EMsgIDSubGame {
    [pbr::OriginalName("MsgIDSubGame_Null")] MsgIdsubGameNull = 0,
    /// <summary>
    ///游戏开始(MsgGameStartResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_GameStartResp")] MsgIdsubGameGameStartResp = 1,
    /// <summary>
    ///玩家操作(MsgAction)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_Action")] MsgIdsubGameAction = 2,
    /// <summary>
    ///玩家弃牌返回(MsgGiveUpResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_GiveUpResp")] MsgIdsubGameGiveUpResp = 3,
    /// <summary>
    ///玩家看牌(MsgLookCardResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_LookCard")] MsgIdsubGameLookCard = 4,
    /// <summary>
    ///玩家下注(MsgAddBetResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_AddBetResp")] MsgIdsubGameAddBetResp = 5,
    /// <summary>
    ///玩家请求比牌(MsgCompareCardResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_CompareCardResp")] MsgIdsubGameCompareCardResp = 6,
    /// <summary>
    ///玩家比牌结果(MsgCompareCardRetResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_CompareRetResp")] MsgIdsubGameCompareRetResp = 7,
    /// <summary>
    ///玩家下注记录(MsgGameResultResp)
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_GameResultResp")] MsgIdsubGameGameResultResp = 8,
    /// <summary>
    ///桌子状态
    /// </summary>
    [pbr::OriginalName("MsgIDSubGame_NotifyStateResp")] MsgIdsubGameNotifyStateResp = 9,
  }

  #endregion

  #region Messages
  public sealed partial class MsgHandCards : pb::IMessage<MsgHandCards>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgHandCards> _parser = new pb::MessageParser<MsgHandCards>(() => new MsgHandCards());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgHandCards> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgHandCards() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgHandCards(MsgHandCards other) : this() {
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgHandCards Clone() {
      return new MsgHandCards(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_cards_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> cards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgHandCards);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgHandCards other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgHandCards other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgPlayerInfo : pb::IMessage<MsgPlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgPlayerInfo> _parser = new pb::MessageParser<MsgPlayerInfo>(() => new MsgPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgPlayerInfo(MsgPlayerInfo other) : this() {
      userId_ = other.userId_;
      nickname_ = other.nickname_;
      avatar_ = other.avatar_;
      vipLevel_ = other.vipLevel_;
      avatarFrame_ = other.avatarFrame_;
      chairId_ = other.chairId_;
      mingZhu_ = other.mingZhu_;
      playStatus_ = other.playStatus_;
      playerBet_ = other.playerBet_;
      handls_ = other.handls_ != null ? other.handls_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgPlayerInfo Clone() {
      return new MsgPlayerInfo(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    /// <summary>
    ///玩家ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    /// <summary>
    ///玩家昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private string avatar_ = "";
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vip_level" field.</summary>
    public const int VipLevelFieldNumber = 4;
    private int vipLevel_;
    /// <summary>
    ///VIP等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "avatar_frame" field.</summary>
    public const int AvatarFrameFieldNumber = 5;
    private int avatarFrame_;
    /// <summary>
    ///头像框
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvatarFrame {
      get { return avatarFrame_; }
      set {
        avatarFrame_ = value;
      }
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 6;
    private int chairId_;
    /// <summary>
    ///座位号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "ming_zhu" field.</summary>
    public const int MingZhuFieldNumber = 7;
    private int mingZhu_;
    /// <summary>
    ///明注状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MingZhu {
      get { return mingZhu_; }
      set {
        mingZhu_ = value;
      }
    }

    /// <summary>Field number for the "play_status" field.</summary>
    public const int PlayStatusFieldNumber = 8;
    private int playStatus_;
    /// <summary>
    ///玩家状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayStatus {
      get { return playStatus_; }
      set {
        playStatus_ = value;
      }
    }

    /// <summary>Field number for the "player_bet" field.</summary>
    public const int PlayerBetFieldNumber = 9;
    private int playerBet_;
    /// <summary>
    ///玩家投注总和
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerBet {
      get { return playerBet_; }
      set {
        playerBet_ = value;
      }
    }

    /// <summary>Field number for the "handls" field.</summary>
    public const int HandlsFieldNumber = 10;
    private global::TeenPattiIndia.MsgHandCards handls_;
    /// <summary>
    ///手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TeenPattiIndia.MsgHandCards Handls {
      get { return handls_; }
      set {
        handls_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Nickname != other.Nickname) return false;
      if (Avatar != other.Avatar) return false;
      if (VipLevel != other.VipLevel) return false;
      if (AvatarFrame != other.AvatarFrame) return false;
      if (ChairId != other.ChairId) return false;
      if (MingZhu != other.MingZhu) return false;
      if (PlayStatus != other.PlayStatus) return false;
      if (PlayerBet != other.PlayerBet) return false;
      if (!object.Equals(Handls, other.Handls)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (MingZhu != 0) hash ^= MingZhu.GetHashCode();
      if (PlayStatus != 0) hash ^= PlayStatus.GetHashCode();
      if (PlayerBet != 0) hash ^= PlayerBet.GetHashCode();
      if (handls_ != null) hash ^= Handls.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(VipLevel);
      }
      if (AvatarFrame != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AvatarFrame);
      }
      if (ChairId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChairId);
      }
      if (MingZhu != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MingZhu);
      }
      if (PlayStatus != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PlayStatus);
      }
      if (PlayerBet != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PlayerBet);
      }
      if (handls_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Handls);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Avatar);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(VipLevel);
      }
      if (AvatarFrame != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AvatarFrame);
      }
      if (ChairId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChairId);
      }
      if (MingZhu != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MingZhu);
      }
      if (PlayStatus != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PlayStatus);
      }
      if (PlayerBet != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PlayerBet);
      }
      if (handls_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Handls);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Avatar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (AvatarFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
      }
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (MingZhu != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MingZhu);
      }
      if (PlayStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayStatus);
      }
      if (PlayerBet != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerBet);
      }
      if (handls_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handls);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.AvatarFrame != 0) {
        AvatarFrame = other.AvatarFrame;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.MingZhu != 0) {
        MingZhu = other.MingZhu;
      }
      if (other.PlayStatus != 0) {
        PlayStatus = other.PlayStatus;
      }
      if (other.PlayerBet != 0) {
        PlayerBet = other.PlayerBet;
      }
      if (other.handls_ != null) {
        if (handls_ == null) {
          Handls = new global::TeenPattiIndia.MsgHandCards();
        }
        Handls.MergeFrom(other.Handls);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
          case 32: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 40: {
            AvatarFrame = input.ReadInt32();
            break;
          }
          case 48: {
            ChairId = input.ReadInt32();
            break;
          }
          case 56: {
            MingZhu = input.ReadInt32();
            break;
          }
          case 64: {
            PlayStatus = input.ReadInt32();
            break;
          }
          case 72: {
            PlayerBet = input.ReadInt32();
            break;
          }
          case 82: {
            if (handls_ == null) {
              Handls = new global::TeenPattiIndia.MsgHandCards();
            }
            input.ReadMessage(Handls);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            Avatar = input.ReadString();
            break;
          }
          case 32: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 40: {
            AvatarFrame = input.ReadInt32();
            break;
          }
          case 48: {
            ChairId = input.ReadInt32();
            break;
          }
          case 56: {
            MingZhu = input.ReadInt32();
            break;
          }
          case 64: {
            PlayStatus = input.ReadInt32();
            break;
          }
          case 72: {
            PlayerBet = input.ReadInt32();
            break;
          }
          case 82: {
            if (handls_ == null) {
              Handls = new global::TeenPattiIndia.MsgHandCards();
            }
            input.ReadMessage(Handls);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///场景消息
  /// </summary>
  public sealed partial class MsgSceneInfo : pb::IMessage<MsgSceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgSceneInfo> _parser = new pb::MessageParser<MsgSceneInfo>(() => new MsgSceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgSceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo(MsgSceneInfo other) : this() {
      maxScore_ = other.maxScore_;
      tableMaxScore_ = other.tableMaxScore_;
      cellScore_ = other.cellScore_;
      curTimes_ = other.curTimes_;
      tableState_ = other.tableState_;
      totalBetScore_ = other.totalBetScore_;
      bankerChairId_ = other.bankerChairId_;
      curChairId_ = other.curChairId_;
      playerInfos_ = other.playerInfos_.Clone();
      curChairAct_ = other.curChairAct_;
      outTime_ = other.outTime_;
      compareState_ = other.compareState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo Clone() {
      return new MsgSceneInfo(this);
    }

    /// <summary>Field number for the "max_score" field.</summary>
    public const int MaxScoreFieldNumber = 1;
    private long maxScore_;
    /// <summary>
    ///最大下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxScore {
      get { return maxScore_; }
      set {
        maxScore_ = value;
      }
    }

    /// <summary>Field number for the "table_max_score" field.</summary>
    public const int TableMaxScoreFieldNumber = 2;
    private long tableMaxScore_;
    /// <summary>
    ///最大下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TableMaxScore {
      get { return tableMaxScore_; }
      set {
        tableMaxScore_ = value;
      }
    }

    /// <summary>Field number for the "cell_score" field.</summary>
    public const int CellScoreFieldNumber = 3;
    private long cellScore_;
    /// <summary>
    ///底分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CellScore {
      get { return cellScore_; }
      set {
        cellScore_ = value;
      }
    }

    /// <summary>Field number for the "cur_times" field.</summary>
    public const int CurTimesFieldNumber = 4;
    private int curTimes_;
    /// <summary>
    ///当前倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTimes {
      get { return curTimes_; }
      set {
        curTimes_ = value;
      }
    }

    /// <summary>Field number for the "table_state" field.</summary>
    public const int TableStateFieldNumber = 5;
    private int tableState_;
    /// <summary>
    ///桌子状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TableState {
      get { return tableState_; }
      set {
        tableState_ = value;
      }
    }

    /// <summary>Field number for the "total_bet_score" field.</summary>
    public const int TotalBetScoreFieldNumber = 6;
    private long totalBetScore_;
    /// <summary>
    ///桌内总下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBetScore {
      get { return totalBetScore_; }
      set {
        totalBetScore_ = value;
      }
    }

    /// <summary>Field number for the "banker_chair_id" field.</summary>
    public const int BankerChairIdFieldNumber = 7;
    private int bankerChairId_;
    /// <summary>
    ///庄家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BankerChairId {
      get { return bankerChairId_; }
      set {
        bankerChairId_ = value;
      }
    }

    /// <summary>Field number for the "cur_chair_id" field.</summary>
    public const int CurChairIdFieldNumber = 8;
    private int curChairId_;
    /// <summary>
    ///当前操作椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurChairId {
      get { return curChairId_; }
      set {
        curChairId_ = value;
      }
    }

    /// <summary>Field number for the "player_infos" field.</summary>
    public const int PlayerInfosFieldNumber = 9;
    private static readonly pb::FieldCodec<global::TeenPattiIndia.MsgPlayerInfo> _repeated_playerInfos_codec
        = pb::FieldCodec.ForMessage(74, global::TeenPattiIndia.MsgPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::TeenPattiIndia.MsgPlayerInfo> playerInfos_ = new pbc::RepeatedField<global::TeenPattiIndia.MsgPlayerInfo>();
    /// <summary>
    ///玩家状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TeenPattiIndia.MsgPlayerInfo> PlayerInfos {
      get { return playerInfos_; }
    }

    /// <summary>Field number for the "cur_chair_act" field.</summary>
    public const int CurChairActFieldNumber = 10;
    private int curChairAct_;
    /// <summary>
    ///当前玩家的操作码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurChairAct {
      get { return curChairAct_; }
      set {
        curChairAct_ = value;
      }
    }

    /// <summary>Field number for the "out_time" field.</summary>
    public const int OutTimeFieldNumber = 11;
    private int outTime_;
    /// <summary>
    ///当前状态剩余超时时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutTime {
      get { return outTime_; }
      set {
        outTime_ = value;
      }
    }

    /// <summary>Field number for the "compare_state" field.</summary>
    public const int CompareStateFieldNumber = 12;
    private bool compareState_;
    /// <summary>
    ///当前是否处理比牌中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CompareState {
      get { return compareState_; }
      set {
        compareState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgSceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgSceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxScore != other.MaxScore) return false;
      if (TableMaxScore != other.TableMaxScore) return false;
      if (CellScore != other.CellScore) return false;
      if (CurTimes != other.CurTimes) return false;
      if (TableState != other.TableState) return false;
      if (TotalBetScore != other.TotalBetScore) return false;
      if (BankerChairId != other.BankerChairId) return false;
      if (CurChairId != other.CurChairId) return false;
      if(!playerInfos_.Equals(other.playerInfos_)) return false;
      if (CurChairAct != other.CurChairAct) return false;
      if (OutTime != other.OutTime) return false;
      if (CompareState != other.CompareState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxScore != 0L) hash ^= MaxScore.GetHashCode();
      if (TableMaxScore != 0L) hash ^= TableMaxScore.GetHashCode();
      if (CellScore != 0L) hash ^= CellScore.GetHashCode();
      if (CurTimes != 0) hash ^= CurTimes.GetHashCode();
      if (TableState != 0) hash ^= TableState.GetHashCode();
      if (TotalBetScore != 0L) hash ^= TotalBetScore.GetHashCode();
      if (BankerChairId != 0) hash ^= BankerChairId.GetHashCode();
      if (CurChairId != 0) hash ^= CurChairId.GetHashCode();
      hash ^= playerInfos_.GetHashCode();
      if (CurChairAct != 0) hash ^= CurChairAct.GetHashCode();
      if (OutTime != 0) hash ^= OutTime.GetHashCode();
      if (CompareState != false) hash ^= CompareState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxScore != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxScore);
      }
      if (TableMaxScore != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TableMaxScore);
      }
      if (CellScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CellScore);
      }
      if (CurTimes != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurTimes);
      }
      if (TableState != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TableState);
      }
      if (TotalBetScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalBetScore);
      }
      if (BankerChairId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BankerChairId);
      }
      if (CurChairId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurChairId);
      }
      playerInfos_.WriteTo(output, _repeated_playerInfos_codec);
      if (CurChairAct != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurChairAct);
      }
      if (OutTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OutTime);
      }
      if (CompareState != false) {
        output.WriteRawTag(96);
        output.WriteBool(CompareState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxScore != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxScore);
      }
      if (TableMaxScore != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TableMaxScore);
      }
      if (CellScore != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CellScore);
      }
      if (CurTimes != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurTimes);
      }
      if (TableState != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TableState);
      }
      if (TotalBetScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalBetScore);
      }
      if (BankerChairId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(BankerChairId);
      }
      if (CurChairId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurChairId);
      }
      playerInfos_.WriteTo(ref output, _repeated_playerInfos_codec);
      if (CurChairAct != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurChairAct);
      }
      if (OutTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OutTime);
      }
      if (CompareState != false) {
        output.WriteRawTag(96);
        output.WriteBool(CompareState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxScore);
      }
      if (TableMaxScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TableMaxScore);
      }
      if (CellScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CellScore);
      }
      if (CurTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTimes);
      }
      if (TableState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableState);
      }
      if (TotalBetScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBetScore);
      }
      if (BankerChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BankerChairId);
      }
      if (CurChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurChairId);
      }
      size += playerInfos_.CalculateSize(_repeated_playerInfos_codec);
      if (CurChairAct != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurChairAct);
      }
      if (OutTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutTime);
      }
      if (CompareState != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgSceneInfo other) {
      if (other == null) {
        return;
      }
      if (other.MaxScore != 0L) {
        MaxScore = other.MaxScore;
      }
      if (other.TableMaxScore != 0L) {
        TableMaxScore = other.TableMaxScore;
      }
      if (other.CellScore != 0L) {
        CellScore = other.CellScore;
      }
      if (other.CurTimes != 0) {
        CurTimes = other.CurTimes;
      }
      if (other.TableState != 0) {
        TableState = other.TableState;
      }
      if (other.TotalBetScore != 0L) {
        TotalBetScore = other.TotalBetScore;
      }
      if (other.BankerChairId != 0) {
        BankerChairId = other.BankerChairId;
      }
      if (other.CurChairId != 0) {
        CurChairId = other.CurChairId;
      }
      playerInfos_.Add(other.playerInfos_);
      if (other.CurChairAct != 0) {
        CurChairAct = other.CurChairAct;
      }
      if (other.OutTime != 0) {
        OutTime = other.OutTime;
      }
      if (other.CompareState != false) {
        CompareState = other.CompareState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxScore = input.ReadInt64();
            break;
          }
          case 16: {
            TableMaxScore = input.ReadInt64();
            break;
          }
          case 24: {
            CellScore = input.ReadInt64();
            break;
          }
          case 32: {
            CurTimes = input.ReadInt32();
            break;
          }
          case 40: {
            TableState = input.ReadInt32();
            break;
          }
          case 48: {
            TotalBetScore = input.ReadInt64();
            break;
          }
          case 56: {
            BankerChairId = input.ReadInt32();
            break;
          }
          case 64: {
            CurChairId = input.ReadInt32();
            break;
          }
          case 74: {
            playerInfos_.AddEntriesFrom(input, _repeated_playerInfos_codec);
            break;
          }
          case 80: {
            CurChairAct = input.ReadInt32();
            break;
          }
          case 88: {
            OutTime = input.ReadInt32();
            break;
          }
          case 96: {
            CompareState = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxScore = input.ReadInt64();
            break;
          }
          case 16: {
            TableMaxScore = input.ReadInt64();
            break;
          }
          case 24: {
            CellScore = input.ReadInt64();
            break;
          }
          case 32: {
            CurTimes = input.ReadInt32();
            break;
          }
          case 40: {
            TableState = input.ReadInt32();
            break;
          }
          case 48: {
            TotalBetScore = input.ReadInt64();
            break;
          }
          case 56: {
            BankerChairId = input.ReadInt32();
            break;
          }
          case 64: {
            CurChairId = input.ReadInt32();
            break;
          }
          case 74: {
            playerInfos_.AddEntriesFrom(ref input, _repeated_playerInfos_codec);
            break;
          }
          case 80: {
            CurChairAct = input.ReadInt32();
            break;
          }
          case 88: {
            OutTime = input.ReadInt32();
            break;
          }
          case 96: {
            CompareState = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏开始
  /// </summary>
  public sealed partial class MsgGameStartResp : pb::IMessage<MsgGameStartResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgGameStartResp> _parser = new pb::MessageParser<MsgGameStartResp>(() => new MsgGameStartResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgGameStartResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGameStartResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGameStartResp(MsgGameStartResp other) : this() {
      curChairId_ = other.curChairId_;
      curTimes_ = other.curTimes_;
      bankerChairId_ = other.bankerChairId_;
      maxScore_ = other.maxScore_;
      maxBlind_ = other.maxBlind_;
      cellScore_ = other.cellScore_;
      tableMaxScore_ = other.tableMaxScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGameStartResp Clone() {
      return new MsgGameStartResp(this);
    }

    /// <summary>Field number for the "cur_chair_id" field.</summary>
    public const int CurChairIdFieldNumber = 1;
    private int curChairId_;
    /// <summary>
    ///操作玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurChairId {
      get { return curChairId_; }
      set {
        curChairId_ = value;
      }
    }

    /// <summary>Field number for the "cur_times" field.</summary>
    public const int CurTimesFieldNumber = 2;
    private int curTimes_;
    /// <summary>
    ///当前倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTimes {
      get { return curTimes_; }
      set {
        curTimes_ = value;
      }
    }

    /// <summary>Field number for the "banker_chair_id" field.</summary>
    public const int BankerChairIdFieldNumber = 3;
    private int bankerChairId_;
    /// <summary>
    ///庄家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BankerChairId {
      get { return bankerChairId_; }
      set {
        bankerChairId_ = value;
      }
    }

    /// <summary>Field number for the "max_score" field.</summary>
    public const int MaxScoreFieldNumber = 4;
    private long maxScore_;
    /// <summary>
    ///最大下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxScore {
      get { return maxScore_; }
      set {
        maxScore_ = value;
      }
    }

    /// <summary>Field number for the "max_blind" field.</summary>
    public const int MaxBlindFieldNumber = 5;
    private long maxBlind_;
    /// <summary>
    ///盲投次数限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxBlind {
      get { return maxBlind_; }
      set {
        maxBlind_ = value;
      }
    }

    /// <summary>Field number for the "cell_score" field.</summary>
    public const int CellScoreFieldNumber = 6;
    private long cellScore_;
    /// <summary>
    ///底分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CellScore {
      get { return cellScore_; }
      set {
        cellScore_ = value;
      }
    }

    /// <summary>Field number for the "table_max_score" field.</summary>
    public const int TableMaxScoreFieldNumber = 7;
    private long tableMaxScore_;
    /// <summary>
    ///桌内最大下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TableMaxScore {
      get { return tableMaxScore_; }
      set {
        tableMaxScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgGameStartResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgGameStartResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurChairId != other.CurChairId) return false;
      if (CurTimes != other.CurTimes) return false;
      if (BankerChairId != other.BankerChairId) return false;
      if (MaxScore != other.MaxScore) return false;
      if (MaxBlind != other.MaxBlind) return false;
      if (CellScore != other.CellScore) return false;
      if (TableMaxScore != other.TableMaxScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurChairId != 0) hash ^= CurChairId.GetHashCode();
      if (CurTimes != 0) hash ^= CurTimes.GetHashCode();
      if (BankerChairId != 0) hash ^= BankerChairId.GetHashCode();
      if (MaxScore != 0L) hash ^= MaxScore.GetHashCode();
      if (MaxBlind != 0L) hash ^= MaxBlind.GetHashCode();
      if (CellScore != 0L) hash ^= CellScore.GetHashCode();
      if (TableMaxScore != 0L) hash ^= TableMaxScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurChairId);
      }
      if (CurTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTimes);
      }
      if (BankerChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BankerChairId);
      }
      if (MaxScore != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxScore);
      }
      if (MaxBlind != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MaxBlind);
      }
      if (CellScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CellScore);
      }
      if (TableMaxScore != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TableMaxScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurChairId);
      }
      if (CurTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTimes);
      }
      if (BankerChairId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BankerChairId);
      }
      if (MaxScore != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxScore);
      }
      if (MaxBlind != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MaxBlind);
      }
      if (CellScore != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CellScore);
      }
      if (TableMaxScore != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TableMaxScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurChairId);
      }
      if (CurTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTimes);
      }
      if (BankerChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BankerChairId);
      }
      if (MaxScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxScore);
      }
      if (MaxBlind != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBlind);
      }
      if (CellScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CellScore);
      }
      if (TableMaxScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TableMaxScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgGameStartResp other) {
      if (other == null) {
        return;
      }
      if (other.CurChairId != 0) {
        CurChairId = other.CurChairId;
      }
      if (other.CurTimes != 0) {
        CurTimes = other.CurTimes;
      }
      if (other.BankerChairId != 0) {
        BankerChairId = other.BankerChairId;
      }
      if (other.MaxScore != 0L) {
        MaxScore = other.MaxScore;
      }
      if (other.MaxBlind != 0L) {
        MaxBlind = other.MaxBlind;
      }
      if (other.CellScore != 0L) {
        CellScore = other.CellScore;
      }
      if (other.TableMaxScore != 0L) {
        TableMaxScore = other.TableMaxScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CurTimes = input.ReadInt32();
            break;
          }
          case 24: {
            BankerChairId = input.ReadInt32();
            break;
          }
          case 32: {
            MaxScore = input.ReadInt64();
            break;
          }
          case 40: {
            MaxBlind = input.ReadInt64();
            break;
          }
          case 48: {
            CellScore = input.ReadInt64();
            break;
          }
          case 56: {
            TableMaxScore = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CurTimes = input.ReadInt32();
            break;
          }
          case 24: {
            BankerChairId = input.ReadInt32();
            break;
          }
          case 32: {
            MaxScore = input.ReadInt64();
            break;
          }
          case 40: {
            MaxBlind = input.ReadInt64();
            break;
          }
          case 48: {
            CellScore = input.ReadInt64();
            break;
          }
          case 56: {
            TableMaxScore = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家操作
  /// </summary>
  public sealed partial class MsgAction : pb::IMessage<MsgAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgAction> _parser = new pb::MessageParser<MsgAction>(() => new MsgAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAction(MsgAction other) : this() {
      act_ = other.act_;
      betScore_ = other.betScore_;
      compareUser_ = other.compareUser_;
      isOk_ = other.isOk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAction Clone() {
      return new MsgAction(this);
    }

    /// <summary>Field number for the "act" field.</summary>
    public const int ActFieldNumber = 1;
    private int act_;
    /// <summary>
    ///操作标示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Act {
      get { return act_; }
      set {
        act_ = value;
      }
    }

    /// <summary>Field number for the "bet_score" field.</summary>
    public const int BetScoreFieldNumber = 2;
    private long betScore_;
    /// <summary>
    ///下注金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BetScore {
      get { return betScore_; }
      set {
        betScore_ = value;
      }
    }

    /// <summary>Field number for the "compare_user" field.</summary>
    public const int CompareUserFieldNumber = 3;
    private long compareUser_;
    /// <summary>
    ///比牌椅子id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CompareUser {
      get { return compareUser_; }
      set {
        compareUser_ = value;
      }
    }

    /// <summary>Field number for the "is_ok" field.</summary>
    public const int IsOkFieldNumber = 4;
    private bool isOk_;
    /// <summary>
    ///是否同意比牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOk {
      get { return isOk_; }
      set {
        isOk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Act != other.Act) return false;
      if (BetScore != other.BetScore) return false;
      if (CompareUser != other.CompareUser) return false;
      if (IsOk != other.IsOk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Act != 0) hash ^= Act.GetHashCode();
      if (BetScore != 0L) hash ^= BetScore.GetHashCode();
      if (CompareUser != 0L) hash ^= CompareUser.GetHashCode();
      if (IsOk != false) hash ^= IsOk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Act != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Act);
      }
      if (BetScore != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BetScore);
      }
      if (CompareUser != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CompareUser);
      }
      if (IsOk != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsOk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Act != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Act);
      }
      if (BetScore != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BetScore);
      }
      if (CompareUser != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CompareUser);
      }
      if (IsOk != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsOk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Act != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Act);
      }
      if (BetScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BetScore);
      }
      if (CompareUser != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CompareUser);
      }
      if (IsOk != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgAction other) {
      if (other == null) {
        return;
      }
      if (other.Act != 0) {
        Act = other.Act;
      }
      if (other.BetScore != 0L) {
        BetScore = other.BetScore;
      }
      if (other.CompareUser != 0L) {
        CompareUser = other.CompareUser;
      }
      if (other.IsOk != false) {
        IsOk = other.IsOk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Act = input.ReadInt32();
            break;
          }
          case 16: {
            BetScore = input.ReadInt64();
            break;
          }
          case 24: {
            CompareUser = input.ReadInt64();
            break;
          }
          case 32: {
            IsOk = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Act = input.ReadInt32();
            break;
          }
          case 16: {
            BetScore = input.ReadInt64();
            break;
          }
          case 24: {
            CompareUser = input.ReadInt64();
            break;
          }
          case 32: {
            IsOk = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家弃牌返回
  /// </summary>
  public sealed partial class MsgGiveUpResp : pb::IMessage<MsgGiveUpResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgGiveUpResp> _parser = new pb::MessageParser<MsgGiveUpResp>(() => new MsgGiveUpResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgGiveUpResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGiveUpResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGiveUpResp(MsgGiveUpResp other) : this() {
      chairId_ = other.chairId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGiveUpResp Clone() {
      return new MsgGiveUpResp(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgGiveUpResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgGiveUpResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgGiveUpResp other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家看牌
  /// </summary>
  public sealed partial class MsgLookCardResp : pb::IMessage<MsgLookCardResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgLookCardResp> _parser = new pb::MessageParser<MsgLookCardResp>(() => new MsgLookCardResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgLookCardResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgLookCardResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgLookCardResp(MsgLookCardResp other) : this() {
      chairId_ = other.chairId_;
      cards_ = other.cards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgLookCardResp Clone() {
      return new MsgLookCardResp(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_cards_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> cards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgLookCardResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgLookCardResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if(!cards_.Equals(other.cards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      hash ^= cards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      cards_.WriteTo(output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      cards_.WriteTo(ref output, _repeated_cards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      size += cards_.CalculateSize(_repeated_cards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgLookCardResp other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      cards_.Add(other.cards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cards_.AddEntriesFrom(ref input, _repeated_cards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MsgAddBetResp : pb::IMessage<MsgAddBetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgAddBetResp> _parser = new pb::MessageParser<MsgAddBetResp>(() => new MsgAddBetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgAddBetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAddBetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAddBetResp(MsgAddBetResp other) : this() {
      curChairId_ = other.curChairId_;
      curTimes_ = other.curTimes_;
      currentAct_ = other.currentAct_;
      addChairId_ = other.addChairId_;
      addScore_ = other.addScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAddBetResp Clone() {
      return new MsgAddBetResp(this);
    }

    /// <summary>Field number for the "cur_chair_id" field.</summary>
    public const int CurChairIdFieldNumber = 1;
    private int curChairId_;
    /// <summary>
    ///下个操作玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurChairId {
      get { return curChairId_; }
      set {
        curChairId_ = value;
      }
    }

    /// <summary>Field number for the "cur_times" field.</summary>
    public const int CurTimesFieldNumber = 2;
    private int curTimes_;
    /// <summary>
    ///当前倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurTimes {
      get { return curTimes_; }
      set {
        curTimes_ = value;
      }
    }

    /// <summary>Field number for the "current_act" field.</summary>
    public const int CurrentActFieldNumber = 3;
    private int currentAct_;
    /// <summary>
    ///当前操作码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentAct {
      get { return currentAct_; }
      set {
        currentAct_ = value;
      }
    }

    /// <summary>Field number for the "add_chair_id" field.</summary>
    public const int AddChairIdFieldNumber = 4;
    private int addChairId_;
    /// <summary>
    ///下注玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AddChairId {
      get { return addChairId_; }
      set {
        addChairId_ = value;
      }
    }

    /// <summary>Field number for the "add_score" field.</summary>
    public const int AddScoreFieldNumber = 5;
    private long addScore_;
    /// <summary>
    ///下注金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AddScore {
      get { return addScore_; }
      set {
        addScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgAddBetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgAddBetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurChairId != other.CurChairId) return false;
      if (CurTimes != other.CurTimes) return false;
      if (CurrentAct != other.CurrentAct) return false;
      if (AddChairId != other.AddChairId) return false;
      if (AddScore != other.AddScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurChairId != 0) hash ^= CurChairId.GetHashCode();
      if (CurTimes != 0) hash ^= CurTimes.GetHashCode();
      if (CurrentAct != 0) hash ^= CurrentAct.GetHashCode();
      if (AddChairId != 0) hash ^= AddChairId.GetHashCode();
      if (AddScore != 0L) hash ^= AddScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurChairId);
      }
      if (CurTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTimes);
      }
      if (CurrentAct != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentAct);
      }
      if (AddChairId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AddChairId);
      }
      if (AddScore != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(AddScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurChairId);
      }
      if (CurTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurTimes);
      }
      if (CurrentAct != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentAct);
      }
      if (AddChairId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AddChairId);
      }
      if (AddScore != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(AddScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurChairId);
      }
      if (CurTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurTimes);
      }
      if (CurrentAct != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentAct);
      }
      if (AddChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddChairId);
      }
      if (AddScore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AddScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgAddBetResp other) {
      if (other == null) {
        return;
      }
      if (other.CurChairId != 0) {
        CurChairId = other.CurChairId;
      }
      if (other.CurTimes != 0) {
        CurTimes = other.CurTimes;
      }
      if (other.CurrentAct != 0) {
        CurrentAct = other.CurrentAct;
      }
      if (other.AddChairId != 0) {
        AddChairId = other.AddChairId;
      }
      if (other.AddScore != 0L) {
        AddScore = other.AddScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CurTimes = input.ReadInt32();
            break;
          }
          case 24: {
            CurrentAct = input.ReadInt32();
            break;
          }
          case 32: {
            AddChairId = input.ReadInt32();
            break;
          }
          case 40: {
            AddScore = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CurTimes = input.ReadInt32();
            break;
          }
          case 24: {
            CurrentAct = input.ReadInt32();
            break;
          }
          case 32: {
            AddChairId = input.ReadInt32();
            break;
          }
          case 40: {
            AddScore = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家请求比牌
  /// </summary>
  public sealed partial class MsgCompareCardResp : pb::IMessage<MsgCompareCardResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgCompareCardResp> _parser = new pb::MessageParser<MsgCompareCardResp>(() => new MsgCompareCardResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgCompareCardResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgCompareCardResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgCompareCardResp(MsgCompareCardResp other) : this() {
      chairId_ = other.chairId_;
      compareId_ = other.compareId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgCompareCardResp Clone() {
      return new MsgCompareCardResp(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "compare_id" field.</summary>
    public const int CompareIdFieldNumber = 2;
    private int compareId_;
    /// <summary>
    ///被比玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompareId {
      get { return compareId_; }
      set {
        compareId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgCompareCardResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgCompareCardResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (CompareId != other.CompareId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (CompareId != 0) hash ^= CompareId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (CompareId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CompareId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (CompareId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CompareId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (CompareId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompareId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgCompareCardResp other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.CompareId != 0) {
        CompareId = other.CompareId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CompareId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CompareId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家比牌结果
  /// </summary>
  public sealed partial class MsgCompareCardRetResp : pb::IMessage<MsgCompareCardRetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgCompareCardRetResp> _parser = new pb::MessageParser<MsgCompareCardRetResp>(() => new MsgCompareCardRetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgCompareCardRetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgCompareCardRetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgCompareCardRetResp(MsgCompareCardRetResp other) : this() {
      currentChairId_ = other.currentChairId_;
      currentAct_ = other.currentAct_;
      lostId_ = other.lostId_;
      compareId_ = other.compareId_;
      passiveId_ = other.passiveId_;
      compareCards_ = other.compareCards_.Clone();
      passiveCards_ = other.passiveCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgCompareCardRetResp Clone() {
      return new MsgCompareCardRetResp(this);
    }

    /// <summary>Field number for the "current_chair_id" field.</summary>
    public const int CurrentChairIdFieldNumber = 1;
    private int currentChairId_;
    /// <summary>
    ///下个操作玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentChairId {
      get { return currentChairId_; }
      set {
        currentChairId_ = value;
      }
    }

    /// <summary>Field number for the "current_act" field.</summary>
    public const int CurrentActFieldNumber = 2;
    private int currentAct_;
    /// <summary>
    ///当前操作码=
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentAct {
      get { return currentAct_; }
      set {
        currentAct_ = value;
      }
    }

    /// <summary>Field number for the "lost_id" field.</summary>
    public const int LostIdFieldNumber = 3;
    private int lostId_;
    /// <summary>
    ///输家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LostId {
      get { return lostId_; }
      set {
        lostId_ = value;
      }
    }

    /// <summary>Field number for the "compare_id" field.</summary>
    public const int CompareIdFieldNumber = 4;
    private int compareId_;
    /// <summary>
    ///比牌椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompareId {
      get { return compareId_; }
      set {
        compareId_ = value;
      }
    }

    /// <summary>Field number for the "passive_id" field.</summary>
    public const int PassiveIdFieldNumber = 5;
    private int passiveId_;
    /// <summary>
    ///被比椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PassiveId {
      get { return passiveId_; }
      set {
        passiveId_ = value;
      }
    }

    /// <summary>Field number for the "compare_cards" field.</summary>
    public const int CompareCardsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_compareCards_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> compareCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///比牌玩家手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CompareCards {
      get { return compareCards_; }
    }

    /// <summary>Field number for the "passive_cards" field.</summary>
    public const int PassiveCardsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_passiveCards_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> passiveCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///被比玩家手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PassiveCards {
      get { return passiveCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgCompareCardRetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgCompareCardRetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentChairId != other.CurrentChairId) return false;
      if (CurrentAct != other.CurrentAct) return false;
      if (LostId != other.LostId) return false;
      if (CompareId != other.CompareId) return false;
      if (PassiveId != other.PassiveId) return false;
      if(!compareCards_.Equals(other.compareCards_)) return false;
      if(!passiveCards_.Equals(other.passiveCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentChairId != 0) hash ^= CurrentChairId.GetHashCode();
      if (CurrentAct != 0) hash ^= CurrentAct.GetHashCode();
      if (LostId != 0) hash ^= LostId.GetHashCode();
      if (CompareId != 0) hash ^= CompareId.GetHashCode();
      if (PassiveId != 0) hash ^= PassiveId.GetHashCode();
      hash ^= compareCards_.GetHashCode();
      hash ^= passiveCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentChairId);
      }
      if (CurrentAct != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentAct);
      }
      if (LostId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LostId);
      }
      if (CompareId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CompareId);
      }
      if (PassiveId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PassiveId);
      }
      compareCards_.WriteTo(output, _repeated_compareCards_codec);
      passiveCards_.WriteTo(output, _repeated_passiveCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentChairId);
      }
      if (CurrentAct != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentAct);
      }
      if (LostId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LostId);
      }
      if (CompareId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CompareId);
      }
      if (PassiveId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PassiveId);
      }
      compareCards_.WriteTo(ref output, _repeated_compareCards_codec);
      passiveCards_.WriteTo(ref output, _repeated_passiveCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentChairId);
      }
      if (CurrentAct != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentAct);
      }
      if (LostId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LostId);
      }
      if (CompareId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompareId);
      }
      if (PassiveId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PassiveId);
      }
      size += compareCards_.CalculateSize(_repeated_compareCards_codec);
      size += passiveCards_.CalculateSize(_repeated_passiveCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgCompareCardRetResp other) {
      if (other == null) {
        return;
      }
      if (other.CurrentChairId != 0) {
        CurrentChairId = other.CurrentChairId;
      }
      if (other.CurrentAct != 0) {
        CurrentAct = other.CurrentAct;
      }
      if (other.LostId != 0) {
        LostId = other.LostId;
      }
      if (other.CompareId != 0) {
        CompareId = other.CompareId;
      }
      if (other.PassiveId != 0) {
        PassiveId = other.PassiveId;
      }
      compareCards_.Add(other.compareCards_);
      passiveCards_.Add(other.passiveCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentAct = input.ReadInt32();
            break;
          }
          case 24: {
            LostId = input.ReadInt32();
            break;
          }
          case 32: {
            CompareId = input.ReadInt32();
            break;
          }
          case 40: {
            PassiveId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            compareCards_.AddEntriesFrom(input, _repeated_compareCards_codec);
            break;
          }
          case 58:
          case 56: {
            passiveCards_.AddEntriesFrom(input, _repeated_passiveCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentChairId = input.ReadInt32();
            break;
          }
          case 16: {
            CurrentAct = input.ReadInt32();
            break;
          }
          case 24: {
            LostId = input.ReadInt32();
            break;
          }
          case 32: {
            CompareId = input.ReadInt32();
            break;
          }
          case 40: {
            PassiveId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            compareCards_.AddEntriesFrom(ref input, _repeated_compareCards_codec);
            break;
          }
          case 58:
          case 56: {
            passiveCards_.AddEntriesFrom(ref input, _repeated_passiveCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏结果                                  
  /// </summary>
  public sealed partial class MsgGameResult : pb::IMessage<MsgGameResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgGameResult> _parser = new pb::MessageParser<MsgGameResult>(() => new MsgGameResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgGameResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TeenPattiIndia.TeenPattiIndiaReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGameResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGameResult(MsgGameResult other) : this() {
      gameTax_ = other.gameTax_;
      gameScore_ = other.gameScore_.Clone();
      playerHands_ = other.playerHands_.Clone();
      endState_ = other.endState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGameResult Clone() {
      return new MsgGameResult(this);
    }

    /// <summary>Field number for the "game_tax" field.</summary>
    public const int GameTaxFieldNumber = 1;
    private int gameTax_;
    /// <summary>
    ///税收
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameTax {
      get { return gameTax_; }
      set {
        gameTax_ = value;
      }
    }

    /// <summary>Field number for the "game_score" field.</summary>
    public const int GameScoreFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_gameScore_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> gameScore_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///输赢分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> GameScore {
      get { return gameScore_; }
    }

    /// <summary>Field number for the "player_hands" field.</summary>
    public const int PlayerHandsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TeenPattiIndia.MsgHandCards> _repeated_playerHands_codec
        = pb::FieldCodec.ForMessage(26, global::TeenPattiIndia.MsgHandCards.Parser);
    private readonly pbc::RepeatedField<global::TeenPattiIndia.MsgHandCards> playerHands_ = new pbc::RepeatedField<global::TeenPattiIndia.MsgHandCards>();
    /// <summary>
    ///手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TeenPattiIndia.MsgHandCards> PlayerHands {
      get { return playerHands_; }
    }

    /// <summary>Field number for the "end_state" field.</summary>
    public const int EndStateFieldNumber = 4;
    private int endState_;
    /// <summary>
    ///结束状态  1 比牌结束 2 全场秀牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndState {
      get { return endState_; }
      set {
        endState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgGameResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgGameResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameTax != other.GameTax) return false;
      if(!gameScore_.Equals(other.gameScore_)) return false;
      if(!playerHands_.Equals(other.playerHands_)) return false;
      if (EndState != other.EndState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameTax != 0) hash ^= GameTax.GetHashCode();
      hash ^= gameScore_.GetHashCode();
      hash ^= playerHands_.GetHashCode();
      if (EndState != 0) hash ^= EndState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameTax != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameTax);
      }
      gameScore_.WriteTo(output, _repeated_gameScore_codec);
      playerHands_.WriteTo(output, _repeated_playerHands_codec);
      if (EndState != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EndState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameTax != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameTax);
      }
      gameScore_.WriteTo(ref output, _repeated_gameScore_codec);
      playerHands_.WriteTo(ref output, _repeated_playerHands_codec);
      if (EndState != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EndState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameTax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTax);
      }
      size += gameScore_.CalculateSize(_repeated_gameScore_codec);
      size += playerHands_.CalculateSize(_repeated_playerHands_codec);
      if (EndState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgGameResult other) {
      if (other == null) {
        return;
      }
      if (other.GameTax != 0) {
        GameTax = other.GameTax;
      }
      gameScore_.Add(other.gameScore_);
      playerHands_.Add(other.playerHands_);
      if (other.EndState != 0) {
        EndState = other.EndState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameTax = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            gameScore_.AddEntriesFrom(input, _repeated_gameScore_codec);
            break;
          }
          case 26: {
            playerHands_.AddEntriesFrom(input, _repeated_playerHands_codec);
            break;
          }
          case 32: {
            EndState = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameTax = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            gameScore_.AddEntriesFrom(ref input, _repeated_gameScore_codec);
            break;
          }
          case 26: {
            playerHands_.AddEntriesFrom(ref input, _repeated_playerHands_codec);
            break;
          }
          case 32: {
            EndState = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
