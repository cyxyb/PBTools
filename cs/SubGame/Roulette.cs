// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/Roulette.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Roulette {

  /// <summary>Holder for reflection information generated from Proto/SubGame/Roulette.proto</summary>
  public static partial class RouletteReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/Roulette.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RouletteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90by9TdWJHYW1lL1JvdWxldHRlLnByb3RvEghSb3VsZXR0ZSKMAQoN",
            "R21hZUFMTFJlY29yZBIRCglibGFja19udW0YASABKAUSDwoHcmVkX251bRgC",
            "IAEoBRIQCghldmVuX251bRgDIAEoBRIPCgdvZGRfbnVtGAQgASgFEg8KB2Jp",
            "Z19udW0YBSABKAUSEQoJc21hbGxfbnVtGAYgASgFEhAKCHplcm9fbnVtGAcg",
            "ASgFIh4KCkJldHRvbkFyZWESEAoIYXJlYV9jZmcYASADKAUiMAoIVXNlcklu",
            "Zm8SEQoJdG90YWxfYmV0GAEgASgDEhEKCXRvdGFsX3dpbhgCIAEoAyKIAQoJ",
            "R21hZUNvbmZnEgsKA2JldBgBIAMoBRIVCg1iZXRfbGltaXRfbWluGAIgAygF",
            "EhUKDWJldF9saW1pdF9tYXgYAyADKAUSKgoMYmV0X2FyZWFfY2ZnGAQgAygL",
            "MhQuUm91bGV0dGUuQmV0dG9uQXJlYRIUCgxtdWx0aXBsZV9jZmcYBSADKAUi",
            "LgoJR2FtZVN0YXRlEhIKCmdhbWVfc3RhdGUYASABKAUSDQoFdGltZXMYAiAB",
            "KAUiNAoNVXNlckJldFJlY29yZBIQCghjaGFpcl9pZBgBIAEoBRIRCgliZXRf",
            "dmFsdWUYAiABKAMi8QEKDE1zZ1NjZW5lSW5mbxIlCghnYW1lX2ZvZxgBIAEo",
            "CzITLlJvdWxldHRlLkdtYWVDb25mZxITCgtnYW1lX3JlY29yZBgCIAMoBRIr",
            "CgphbGxfcmVjb3JkGAMgAygLMhcuUm91bGV0dGUuR21hZUFMTFJlY29yZBIn",
            "CgpnYW1lX3N0YXRlGAQgASgLMhMuUm91bGV0dGUuR2FtZVN0YXRlEikKCGdh",
            "bWVfYmV0GAUgAygLMhcuUm91bGV0dGUuVXNlckJldFJlY29yZBIkCgh1c2Vy",
            "X3RvcBgGIAMoCzISLlJvdWxldHRlLlVzZXJJbmZvIiUKBk1zZ0JldBINCgVp",
            "bmRleBgBIAEoBRIMCgRhcmVhGAIgASgFIkIKCk1zZ0JldFJlc3ASEAoIY2hh",
            "aXJfaWQYASABKAUSIgoIYmV0X2luZm8YAiABKAsyEC5Sb3VsZXR0ZS5Nc2dC",
            "ZXQiPAoOU2luZ2xlQWdhaW5CZXQSDQoFaW5kZXgYASABKAUSDAoEYXJlYRgC",
            "IAEoBRINCgVjb3VudBgDIAEoBSI/CgtNc2dBZ2FpbkJldBIwCg5hZ2Fpbl9i",
            "ZXRfaW5mbxgBIAMoCzIYLlJvdWxldHRlLlNpbmdsZUFnYWluQmV0IlIKD01z",
            "Z0FnYWluQmV0UmVzcBIQCghjaGFpcl9pZBgBIAEoBRItCg5hZ2Fpbl9iZXRf",
            "aW5mbxgCIAEoCzIVLlJvdWxldHRlLk1zZ0FnYWluQmV0IjwKDVJldm9jYXRp",
            "b25CZXQSGAoQcmV2b2NhdGlvbl9zdGF0ZRgBIAEoBRIRCgliZXRfaW5kZXgY",
            "AiABKAUiKAoGV2luTXNnEhAKCGNoYWlyX2lkGAEgASgFEgwKBGdvbGQYAiAB",
            "KAMiRgoNTXNnR21hZVJlc3VsdBISCgpyZXN1bHRfbnVtGAEgASgFEiEKB3dp",
            "bl9tc2cYAiADKAsyEC5Sb3VsZXR0ZS5XaW5Nc2cq8AEKDkVNc2dJRFJvdWxl",
            "dHRlEhcKE01zZ0lEX1NDX0dhbWVSZWNvcmQQABIXChNNc2dJRF9TQ19HYW1l",
            "Qm90dG9tEAESGQoVTXNnSURfU0NfQm90dG9tQ2FuY2VsEAISFQoRTXNnSURf",
            "U0NfQWdhaW5CZXQQAxIXChNNc2dJRF9TQ19HYW1lUmVzdWx0EAQSFgoSTXNn",
            "SURfU0NfR2FtZVN0YXRlEAUSFwoTTXNnSURfQ1NfR2FtZUJvdHRvbRAGEhkK",
            "FU1zZ0lEX0NTX0JvdHRvbUNhbmNlbBAHEhUKEU1zZ0lEX0NTX0FnYWluQmV0",
            "EAhiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Roulette.EMsgIDRoulette), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.GmaeALLRecord), global::Roulette.GmaeALLRecord.Parser, new[]{ "BlackNum", "RedNum", "EvenNum", "OddNum", "BigNum", "SmallNum", "ZeroNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.BettonArea), global::Roulette.BettonArea.Parser, new[]{ "AreaCfg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.UserInfo), global::Roulette.UserInfo.Parser, new[]{ "TotalBet", "TotalWin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.GmaeConfg), global::Roulette.GmaeConfg.Parser, new[]{ "Bet", "BetLimitMin", "BetLimitMax", "BetAreaCfg", "MultipleCfg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.GameState), global::Roulette.GameState.Parser, new[]{ "GameState_", "Times" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.UserBetRecord), global::Roulette.UserBetRecord.Parser, new[]{ "ChairId", "BetValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.MsgSceneInfo), global::Roulette.MsgSceneInfo.Parser, new[]{ "GameFog", "GameRecord", "AllRecord", "GameState", "GameBet", "UserTop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.MsgBet), global::Roulette.MsgBet.Parser, new[]{ "Index", "Area" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.MsgBetResp), global::Roulette.MsgBetResp.Parser, new[]{ "ChairId", "BetInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.SingleAgainBet), global::Roulette.SingleAgainBet.Parser, new[]{ "Index", "Area", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.MsgAgainBet), global::Roulette.MsgAgainBet.Parser, new[]{ "AgainBetInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.MsgAgainBetResp), global::Roulette.MsgAgainBetResp.Parser, new[]{ "ChairId", "AgainBetInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.RevocationBet), global::Roulette.RevocationBet.Parser, new[]{ "RevocationState", "BetIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.WinMsg), global::Roulette.WinMsg.Parser, new[]{ "ChairId", "Gold" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Roulette.MsgGmaeResult), global::Roulette.MsgGmaeResult.Parser, new[]{ "ResultNum", "WinMsg" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///消息号
  /// </summary>
  public enum EMsgIDRoulette {
    /// <summary>
    ///游戏记录(GmaeALLRecord)	
    /// </summary>
    [pbr::OriginalName("MsgID_SC_GameRecord")] MsgIdScGameRecord = 0,
    /// <summary>
    ///游戏下注(MsgBetResp)
    /// </summary>
    [pbr::OriginalName("MsgID_SC_GameBottom")] MsgIdScGameBottom = 1,
    /// <summary>
    ///撤回下注(RevocationBet)
    /// </summary>
    [pbr::OriginalName("MsgID_SC_BottomCancel")] MsgIdScBottomCancel = 2,
    /// <summary>
    ///续投(MsgAgainBetResp)
    /// </summary>
    [pbr::OriginalName("MsgID_SC_AgainBet")] MsgIdScAgainBet = 3,
    /// <summary>
    ///游戏结果(MsgGmaeResult)
    /// </summary>
    [pbr::OriginalName("MsgID_SC_GameResult")] MsgIdScGameResult = 4,
    /// <summary>
    ///游戏状态(GameState)
    /// </summary>
    [pbr::OriginalName("MsgID_SC_GameState")] MsgIdScGameState = 5,
    /// <summary>
    ///下注(MsgBet)
    /// </summary>
    [pbr::OriginalName("MsgID_CS_GameBottom")] MsgIdCsGameBottom = 6,
    /// <summary>
    ///下注撤回(RevocationBet)
    /// </summary>
    [pbr::OriginalName("MsgID_CS_BottomCancel")] MsgIdCsBottomCancel = 7,
    /// <summary>
    ///续投(MsgAgainBet)
    /// </summary>
    [pbr::OriginalName("MsgID_CS_AgainBet")] MsgIdCsAgainBet = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  ///ALL 数据展示
  /// </summary>
  public sealed partial class GmaeALLRecord : pb::IMessage<GmaeALLRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GmaeALLRecord> _parser = new pb::MessageParser<GmaeALLRecord>(() => new GmaeALLRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GmaeALLRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmaeALLRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmaeALLRecord(GmaeALLRecord other) : this() {
      blackNum_ = other.blackNum_;
      redNum_ = other.redNum_;
      evenNum_ = other.evenNum_;
      oddNum_ = other.oddNum_;
      bigNum_ = other.bigNum_;
      smallNum_ = other.smallNum_;
      zeroNum_ = other.zeroNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmaeALLRecord Clone() {
      return new GmaeALLRecord(this);
    }

    /// <summary>Field number for the "black_num" field.</summary>
    public const int BlackNumFieldNumber = 1;
    private int blackNum_;
    /// <summary>
    ///黑色数字出现几率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlackNum {
      get { return blackNum_; }
      set {
        blackNum_ = value;
      }
    }

    /// <summary>Field number for the "red_num" field.</summary>
    public const int RedNumFieldNumber = 2;
    private int redNum_;
    /// <summary>
    ///红色数字出现几率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedNum {
      get { return redNum_; }
      set {
        redNum_ = value;
      }
    }

    /// <summary>Field number for the "even_num" field.</summary>
    public const int EvenNumFieldNumber = 3;
    private int evenNum_;
    /// <summary>
    ///偶数数字出现几率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EvenNum {
      get { return evenNum_; }
      set {
        evenNum_ = value;
      }
    }

    /// <summary>Field number for the "odd_num" field.</summary>
    public const int OddNumFieldNumber = 4;
    private int oddNum_;
    /// <summary>
    ///奇数数字出现几率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OddNum {
      get { return oddNum_; }
      set {
        oddNum_ = value;
      }
    }

    /// <summary>Field number for the "big_num" field.</summary>
    public const int BigNumFieldNumber = 5;
    private int bigNum_;
    /// <summary>
    ///大：19-36
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BigNum {
      get { return bigNum_; }
      set {
        bigNum_ = value;
      }
    }

    /// <summary>Field number for the "small_num" field.</summary>
    public const int SmallNumFieldNumber = 6;
    private int smallNum_;
    /// <summary>
    ///小：1-18（注意不含0）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SmallNum {
      get { return smallNum_; }
      set {
        smallNum_ = value;
      }
    }

    /// <summary>Field number for the "zero_num" field.</summary>
    public const int ZeroNumFieldNumber = 7;
    private int zeroNum_;
    /// <summary>
    ///0的几率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ZeroNum {
      get { return zeroNum_; }
      set {
        zeroNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GmaeALLRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GmaeALLRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlackNum != other.BlackNum) return false;
      if (RedNum != other.RedNum) return false;
      if (EvenNum != other.EvenNum) return false;
      if (OddNum != other.OddNum) return false;
      if (BigNum != other.BigNum) return false;
      if (SmallNum != other.SmallNum) return false;
      if (ZeroNum != other.ZeroNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlackNum != 0) hash ^= BlackNum.GetHashCode();
      if (RedNum != 0) hash ^= RedNum.GetHashCode();
      if (EvenNum != 0) hash ^= EvenNum.GetHashCode();
      if (OddNum != 0) hash ^= OddNum.GetHashCode();
      if (BigNum != 0) hash ^= BigNum.GetHashCode();
      if (SmallNum != 0) hash ^= SmallNum.GetHashCode();
      if (ZeroNum != 0) hash ^= ZeroNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BlackNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BlackNum);
      }
      if (RedNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RedNum);
      }
      if (EvenNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EvenNum);
      }
      if (OddNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OddNum);
      }
      if (BigNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BigNum);
      }
      if (SmallNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SmallNum);
      }
      if (ZeroNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ZeroNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BlackNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BlackNum);
      }
      if (RedNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RedNum);
      }
      if (EvenNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EvenNum);
      }
      if (OddNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OddNum);
      }
      if (BigNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BigNum);
      }
      if (SmallNum != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SmallNum);
      }
      if (ZeroNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ZeroNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlackNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlackNum);
      }
      if (RedNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedNum);
      }
      if (EvenNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EvenNum);
      }
      if (OddNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OddNum);
      }
      if (BigNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BigNum);
      }
      if (SmallNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SmallNum);
      }
      if (ZeroNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZeroNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GmaeALLRecord other) {
      if (other == null) {
        return;
      }
      if (other.BlackNum != 0) {
        BlackNum = other.BlackNum;
      }
      if (other.RedNum != 0) {
        RedNum = other.RedNum;
      }
      if (other.EvenNum != 0) {
        EvenNum = other.EvenNum;
      }
      if (other.OddNum != 0) {
        OddNum = other.OddNum;
      }
      if (other.BigNum != 0) {
        BigNum = other.BigNum;
      }
      if (other.SmallNum != 0) {
        SmallNum = other.SmallNum;
      }
      if (other.ZeroNum != 0) {
        ZeroNum = other.ZeroNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlackNum = input.ReadInt32();
            break;
          }
          case 16: {
            RedNum = input.ReadInt32();
            break;
          }
          case 24: {
            EvenNum = input.ReadInt32();
            break;
          }
          case 32: {
            OddNum = input.ReadInt32();
            break;
          }
          case 40: {
            BigNum = input.ReadInt32();
            break;
          }
          case 48: {
            SmallNum = input.ReadInt32();
            break;
          }
          case 56: {
            ZeroNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlackNum = input.ReadInt32();
            break;
          }
          case 16: {
            RedNum = input.ReadInt32();
            break;
          }
          case 24: {
            EvenNum = input.ReadInt32();
            break;
          }
          case 32: {
            OddNum = input.ReadInt32();
            break;
          }
          case 40: {
            BigNum = input.ReadInt32();
            break;
          }
          case 48: {
            SmallNum = input.ReadInt32();
            break;
          }
          case 56: {
            ZeroNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///下注区域配置
  /// </summary>
  public sealed partial class BettonArea : pb::IMessage<BettonArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BettonArea> _parser = new pb::MessageParser<BettonArea>(() => new BettonArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BettonArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BettonArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BettonArea(BettonArea other) : this() {
      areaCfg_ = other.areaCfg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BettonArea Clone() {
      return new BettonArea(this);
    }

    /// <summary>Field number for the "area_cfg" field.</summary>
    public const int AreaCfgFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_areaCfg_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> areaCfg_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AreaCfg {
      get { return areaCfg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BettonArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BettonArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!areaCfg_.Equals(other.areaCfg_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= areaCfg_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      areaCfg_.WriteTo(output, _repeated_areaCfg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      areaCfg_.WriteTo(ref output, _repeated_areaCfg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += areaCfg_.CalculateSize(_repeated_areaCfg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BettonArea other) {
      if (other == null) {
        return;
      }
      areaCfg_.Add(other.areaCfg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            areaCfg_.AddEntriesFrom(input, _repeated_areaCfg_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            areaCfg_.AddEntriesFrom(ref input, _repeated_areaCfg_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家数据
  /// </summary>
  public sealed partial class UserInfo : pb::IMessage<UserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      totalBet_ = other.totalBet_;
      totalWin_ = other.totalWin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "total_bet" field.</summary>
    public const int TotalBetFieldNumber = 1;
    private long totalBet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBet {
      get { return totalBet_; }
      set {
        totalBet_ = value;
      }
    }

    /// <summary>Field number for the "total_win" field.</summary>
    public const int TotalWinFieldNumber = 2;
    private long totalWin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalWin {
      get { return totalWin_; }
      set {
        totalWin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalBet != other.TotalBet) return false;
      if (TotalWin != other.TotalWin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalBet != 0L) hash ^= TotalBet.GetHashCode();
      if (TotalWin != 0L) hash ^= TotalWin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalBet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalBet);
      }
      if (TotalWin != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalBet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TotalBet);
      }
      if (TotalWin != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalWin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalBet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBet);
      }
      if (TotalWin != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalWin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.TotalBet != 0L) {
        TotalBet = other.TotalBet;
      }
      if (other.TotalWin != 0L) {
        TotalWin = other.TotalWin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalBet = input.ReadInt64();
            break;
          }
          case 16: {
            TotalWin = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalBet = input.ReadInt64();
            break;
          }
          case 16: {
            TotalWin = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏配置
  /// </summary>
  public sealed partial class GmaeConfg : pb::IMessage<GmaeConfg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GmaeConfg> _parser = new pb::MessageParser<GmaeConfg>(() => new GmaeConfg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GmaeConfg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmaeConfg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmaeConfg(GmaeConfg other) : this() {
      bet_ = other.bet_.Clone();
      betLimitMin_ = other.betLimitMin_.Clone();
      betLimitMax_ = other.betLimitMax_.Clone();
      betAreaCfg_ = other.betAreaCfg_.Clone();
      multipleCfg_ = other.multipleCfg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GmaeConfg Clone() {
      return new GmaeConfg(this);
    }

    /// <summary>Field number for the "bet" field.</summary>
    public const int BetFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_bet_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> bet_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///下注配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Bet {
      get { return bet_; }
    }

    /// <summary>Field number for the "bet_limit_min" field.</summary>
    public const int BetLimitMinFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_betLimitMin_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> betLimitMin_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///最小下注限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BetLimitMin {
      get { return betLimitMin_; }
    }

    /// <summary>Field number for the "bet_limit_max" field.</summary>
    public const int BetLimitMaxFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_betLimitMax_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> betLimitMax_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///最大下注限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BetLimitMax {
      get { return betLimitMax_; }
    }

    /// <summary>Field number for the "bet_area_cfg" field.</summary>
    public const int BetAreaCfgFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Roulette.BettonArea> _repeated_betAreaCfg_codec
        = pb::FieldCodec.ForMessage(34, global::Roulette.BettonArea.Parser);
    private readonly pbc::RepeatedField<global::Roulette.BettonArea> betAreaCfg_ = new pbc::RepeatedField<global::Roulette.BettonArea>();
    /// <summary>
    ///下注区域配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Roulette.BettonArea> BetAreaCfg {
      get { return betAreaCfg_; }
    }

    /// <summary>Field number for the "multiple_cfg" field.</summary>
    public const int MultipleCfgFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_multipleCfg_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> multipleCfg_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///区域倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MultipleCfg {
      get { return multipleCfg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GmaeConfg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GmaeConfg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bet_.Equals(other.bet_)) return false;
      if(!betLimitMin_.Equals(other.betLimitMin_)) return false;
      if(!betLimitMax_.Equals(other.betLimitMax_)) return false;
      if(!betAreaCfg_.Equals(other.betAreaCfg_)) return false;
      if(!multipleCfg_.Equals(other.multipleCfg_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bet_.GetHashCode();
      hash ^= betLimitMin_.GetHashCode();
      hash ^= betLimitMax_.GetHashCode();
      hash ^= betAreaCfg_.GetHashCode();
      hash ^= multipleCfg_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bet_.WriteTo(output, _repeated_bet_codec);
      betLimitMin_.WriteTo(output, _repeated_betLimitMin_codec);
      betLimitMax_.WriteTo(output, _repeated_betLimitMax_codec);
      betAreaCfg_.WriteTo(output, _repeated_betAreaCfg_codec);
      multipleCfg_.WriteTo(output, _repeated_multipleCfg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bet_.WriteTo(ref output, _repeated_bet_codec);
      betLimitMin_.WriteTo(ref output, _repeated_betLimitMin_codec);
      betLimitMax_.WriteTo(ref output, _repeated_betLimitMax_codec);
      betAreaCfg_.WriteTo(ref output, _repeated_betAreaCfg_codec);
      multipleCfg_.WriteTo(ref output, _repeated_multipleCfg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bet_.CalculateSize(_repeated_bet_codec);
      size += betLimitMin_.CalculateSize(_repeated_betLimitMin_codec);
      size += betLimitMax_.CalculateSize(_repeated_betLimitMax_codec);
      size += betAreaCfg_.CalculateSize(_repeated_betAreaCfg_codec);
      size += multipleCfg_.CalculateSize(_repeated_multipleCfg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GmaeConfg other) {
      if (other == null) {
        return;
      }
      bet_.Add(other.bet_);
      betLimitMin_.Add(other.betLimitMin_);
      betLimitMax_.Add(other.betLimitMax_);
      betAreaCfg_.Add(other.betAreaCfg_);
      multipleCfg_.Add(other.multipleCfg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            bet_.AddEntriesFrom(input, _repeated_bet_codec);
            break;
          }
          case 18:
          case 16: {
            betLimitMin_.AddEntriesFrom(input, _repeated_betLimitMin_codec);
            break;
          }
          case 26:
          case 24: {
            betLimitMax_.AddEntriesFrom(input, _repeated_betLimitMax_codec);
            break;
          }
          case 34: {
            betAreaCfg_.AddEntriesFrom(input, _repeated_betAreaCfg_codec);
            break;
          }
          case 42:
          case 40: {
            multipleCfg_.AddEntriesFrom(input, _repeated_multipleCfg_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            bet_.AddEntriesFrom(ref input, _repeated_bet_codec);
            break;
          }
          case 18:
          case 16: {
            betLimitMin_.AddEntriesFrom(ref input, _repeated_betLimitMin_codec);
            break;
          }
          case 26:
          case 24: {
            betLimitMax_.AddEntriesFrom(ref input, _repeated_betLimitMax_codec);
            break;
          }
          case 34: {
            betAreaCfg_.AddEntriesFrom(ref input, _repeated_betAreaCfg_codec);
            break;
          }
          case 42:
          case 40: {
            multipleCfg_.AddEntriesFrom(ref input, _repeated_multipleCfg_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏状态
  /// </summary>
  public sealed partial class GameState : pb::IMessage<GameState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameState> _parser = new pb::MessageParser<GameState>(() => new GameState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState(GameState other) : this() {
      gameState_ = other.gameState_;
      times_ = other.times_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameState Clone() {
      return new GameState(this);
    }

    /// <summary>Field number for the "game_state" field.</summary>
    public const int GameState_FieldNumber = 1;
    private int gameState_;
    /// <summary>
    ///游戏状态0：下注状态 1：结算状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameState_ {
      get { return gameState_; }
      set {
        gameState_ = value;
      }
    }

    /// <summary>Field number for the "times" field.</summary>
    public const int TimesFieldNumber = 2;
    private int times_;
    /// <summary>
    ///剩余时间 S
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameState_ != other.GameState_) return false;
      if (Times != other.Times) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameState_ != 0) hash ^= GameState_.GetHashCode();
      if (Times != 0) hash ^= Times.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameState_ != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameState_);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameState_ != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameState_);
      }
      if (Times != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameState_ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameState_);
      }
      if (Times != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameState other) {
      if (other == null) {
        return;
      }
      if (other.GameState_ != 0) {
        GameState_ = other.GameState_;
      }
      if (other.Times != 0) {
        Times = other.Times;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameState_ = input.ReadInt32();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameState_ = input.ReadInt32();
            break;
          }
          case 16: {
            Times = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///下注记录
  /// </summary>
  public sealed partial class UserBetRecord : pb::IMessage<UserBetRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserBetRecord> _parser = new pb::MessageParser<UserBetRecord>(() => new UserBetRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserBetRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBetRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBetRecord(UserBetRecord other) : this() {
      chairId_ = other.chairId_;
      betValue_ = other.betValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserBetRecord Clone() {
      return new UserBetRecord(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///下注区域
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_value" field.</summary>
    public const int BetValueFieldNumber = 2;
    private long betValue_;
    /// <summary>
    ///下注值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BetValue {
      get { return betValue_; }
      set {
        betValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserBetRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserBetRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (BetValue != other.BetValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (BetValue != 0L) hash ^= BetValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (BetValue != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BetValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (BetValue != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BetValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (BetValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BetValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserBetRecord other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.BetValue != 0L) {
        BetValue = other.BetValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            BetValue = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            BetValue = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///场景数据
  /// </summary>
  public sealed partial class MsgSceneInfo : pb::IMessage<MsgSceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgSceneInfo> _parser = new pb::MessageParser<MsgSceneInfo>(() => new MsgSceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgSceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo(MsgSceneInfo other) : this() {
      gameFog_ = other.gameFog_ != null ? other.gameFog_.Clone() : null;
      gameRecord_ = other.gameRecord_.Clone();
      allRecord_ = other.allRecord_.Clone();
      gameState_ = other.gameState_ != null ? other.gameState_.Clone() : null;
      gameBet_ = other.gameBet_.Clone();
      userTop_ = other.userTop_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgSceneInfo Clone() {
      return new MsgSceneInfo(this);
    }

    /// <summary>Field number for the "game_fog" field.</summary>
    public const int GameFogFieldNumber = 1;
    private global::Roulette.GmaeConfg gameFog_;
    /// <summary>
    ///戏配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Roulette.GmaeConfg GameFog {
      get { return gameFog_; }
      set {
        gameFog_ = value;
      }
    }

    /// <summary>Field number for the "game_record" field.</summary>
    public const int GameRecordFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_gameRecord_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> gameRecord_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///游戏输赢区域记录12条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GameRecord {
      get { return gameRecord_; }
    }

    /// <summary>Field number for the "all_record" field.</summary>
    public const int AllRecordFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Roulette.GmaeALLRecord> _repeated_allRecord_codec
        = pb::FieldCodec.ForMessage(26, global::Roulette.GmaeALLRecord.Parser);
    private readonly pbc::RepeatedField<global::Roulette.GmaeALLRecord> allRecord_ = new pbc::RepeatedField<global::Roulette.GmaeALLRecord>();
    /// <summary>
    ///戏ALL数据展示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Roulette.GmaeALLRecord> AllRecord {
      get { return allRecord_; }
    }

    /// <summary>Field number for the "game_state" field.</summary>
    public const int GameStateFieldNumber = 4;
    private global::Roulette.GameState gameState_;
    /// <summary>
    ///游戏状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Roulette.GameState GameState {
      get { return gameState_; }
      set {
        gameState_ = value;
      }
    }

    /// <summary>Field number for the "game_bet" field.</summary>
    public const int GameBetFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Roulette.UserBetRecord> _repeated_gameBet_codec
        = pb::FieldCodec.ForMessage(42, global::Roulette.UserBetRecord.Parser);
    private readonly pbc::RepeatedField<global::Roulette.UserBetRecord> gameBet_ = new pbc::RepeatedField<global::Roulette.UserBetRecord>();
    /// <summary>
    ///游戏下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Roulette.UserBetRecord> GameBet {
      get { return gameBet_; }
    }

    /// <summary>Field number for the "user_top" field.</summary>
    public const int UserTopFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Roulette.UserInfo> _repeated_userTop_codec
        = pb::FieldCodec.ForMessage(50, global::Roulette.UserInfo.Parser);
    private readonly pbc::RepeatedField<global::Roulette.UserInfo> userTop_ = new pbc::RepeatedField<global::Roulette.UserInfo>();
    /// <summary>
    ///玩家数据最多100个玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Roulette.UserInfo> UserTop {
      get { return userTop_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgSceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgSceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameFog, other.GameFog)) return false;
      if(!gameRecord_.Equals(other.gameRecord_)) return false;
      if(!allRecord_.Equals(other.allRecord_)) return false;
      if (!object.Equals(GameState, other.GameState)) return false;
      if(!gameBet_.Equals(other.gameBet_)) return false;
      if(!userTop_.Equals(other.userTop_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gameFog_ != null) hash ^= GameFog.GetHashCode();
      hash ^= gameRecord_.GetHashCode();
      hash ^= allRecord_.GetHashCode();
      if (gameState_ != null) hash ^= GameState.GetHashCode();
      hash ^= gameBet_.GetHashCode();
      hash ^= userTop_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (gameFog_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameFog);
      }
      gameRecord_.WriteTo(output, _repeated_gameRecord_codec);
      allRecord_.WriteTo(output, _repeated_allRecord_codec);
      if (gameState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GameState);
      }
      gameBet_.WriteTo(output, _repeated_gameBet_codec);
      userTop_.WriteTo(output, _repeated_userTop_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (gameFog_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GameFog);
      }
      gameRecord_.WriteTo(ref output, _repeated_gameRecord_codec);
      allRecord_.WriteTo(ref output, _repeated_allRecord_codec);
      if (gameState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GameState);
      }
      gameBet_.WriteTo(ref output, _repeated_gameBet_codec);
      userTop_.WriteTo(ref output, _repeated_userTop_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gameFog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameFog);
      }
      size += gameRecord_.CalculateSize(_repeated_gameRecord_codec);
      size += allRecord_.CalculateSize(_repeated_allRecord_codec);
      if (gameState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameState);
      }
      size += gameBet_.CalculateSize(_repeated_gameBet_codec);
      size += userTop_.CalculateSize(_repeated_userTop_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgSceneInfo other) {
      if (other == null) {
        return;
      }
      if (other.gameFog_ != null) {
        if (gameFog_ == null) {
          GameFog = new global::Roulette.GmaeConfg();
        }
        GameFog.MergeFrom(other.GameFog);
      }
      gameRecord_.Add(other.gameRecord_);
      allRecord_.Add(other.allRecord_);
      if (other.gameState_ != null) {
        if (gameState_ == null) {
          GameState = new global::Roulette.GameState();
        }
        GameState.MergeFrom(other.GameState);
      }
      gameBet_.Add(other.gameBet_);
      userTop_.Add(other.userTop_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (gameFog_ == null) {
              GameFog = new global::Roulette.GmaeConfg();
            }
            input.ReadMessage(GameFog);
            break;
          }
          case 18:
          case 16: {
            gameRecord_.AddEntriesFrom(input, _repeated_gameRecord_codec);
            break;
          }
          case 26: {
            allRecord_.AddEntriesFrom(input, _repeated_allRecord_codec);
            break;
          }
          case 34: {
            if (gameState_ == null) {
              GameState = new global::Roulette.GameState();
            }
            input.ReadMessage(GameState);
            break;
          }
          case 42: {
            gameBet_.AddEntriesFrom(input, _repeated_gameBet_codec);
            break;
          }
          case 50: {
            userTop_.AddEntriesFrom(input, _repeated_userTop_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (gameFog_ == null) {
              GameFog = new global::Roulette.GmaeConfg();
            }
            input.ReadMessage(GameFog);
            break;
          }
          case 18:
          case 16: {
            gameRecord_.AddEntriesFrom(ref input, _repeated_gameRecord_codec);
            break;
          }
          case 26: {
            allRecord_.AddEntriesFrom(ref input, _repeated_allRecord_codec);
            break;
          }
          case 34: {
            if (gameState_ == null) {
              GameState = new global::Roulette.GameState();
            }
            input.ReadMessage(GameState);
            break;
          }
          case 42: {
            gameBet_.AddEntriesFrom(ref input, _repeated_gameBet_codec);
            break;
          }
          case 50: {
            userTop_.AddEntriesFrom(ref input, _repeated_userTop_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注
  /// </summary>
  public sealed partial class MsgBet : pb::IMessage<MsgBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgBet> _parser = new pb::MessageParser<MsgBet>(() => new MsgBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet(MsgBet other) : this() {
      index_ = other.index_;
      area_ = other.area_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBet Clone() {
      return new MsgBet(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    /// <summary>
    ///押注下标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///押注区域(0-196)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Area != other.Area) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgBet other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注返回
  /// </summary>
  public sealed partial class MsgBetResp : pb::IMessage<MsgBetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgBetResp> _parser = new pb::MessageParser<MsgBetResp>(() => new MsgBetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgBetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp(MsgBetResp other) : this() {
      chairId_ = other.chairId_;
      betInfo_ = other.betInfo_ != null ? other.betInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgBetResp Clone() {
      return new MsgBetResp(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_info" field.</summary>
    public const int BetInfoFieldNumber = 2;
    private global::Roulette.MsgBet betInfo_;
    /// <summary>
    ///玩家下注信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Roulette.MsgBet BetInfo {
      get { return betInfo_; }
      set {
        betInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgBetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgBetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (!object.Equals(BetInfo, other.BetInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (betInfo_ != null) hash ^= BetInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (betInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (betInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BetInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgBetResp other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.betInfo_ != null) {
        if (betInfo_ == null) {
          BetInfo = new global::Roulette.MsgBet();
        }
        BetInfo.MergeFrom(other.BetInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (betInfo_ == null) {
              BetInfo = new global::Roulette.MsgBet();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (betInfo_ == null) {
              BetInfo = new global::Roulette.MsgBet();
            }
            input.ReadMessage(BetInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家下注
  /// </summary>
  public sealed partial class SingleAgainBet : pb::IMessage<SingleAgainBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SingleAgainBet> _parser = new pb::MessageParser<SingleAgainBet>(() => new SingleAgainBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleAgainBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAgainBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAgainBet(SingleAgainBet other) : this() {
      index_ = other.index_;
      area_ = other.area_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAgainBet Clone() {
      return new SingleAgainBet(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    /// <summary>
    ///押注下标1 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 2;
    private int area_;
    /// <summary>
    ///押注区域(0-196)0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private int count_;
    /// <summary>
    ///次数5 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleAgainBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleAgainBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Area != other.Area) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Area != 0) hash ^= Area.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Area != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Area);
      }
      if (Count != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Area != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Area);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleAgainBet other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Area != 0) {
        Area = other.Area;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Area = input.ReadInt32();
            break;
          }
          case 24: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家续投
  /// </summary>
  public sealed partial class MsgAgainBet : pb::IMessage<MsgAgainBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgAgainBet> _parser = new pb::MessageParser<MsgAgainBet>(() => new MsgAgainBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgAgainBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAgainBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAgainBet(MsgAgainBet other) : this() {
      againBetInfo_ = other.againBetInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAgainBet Clone() {
      return new MsgAgainBet(this);
    }

    /// <summary>Field number for the "again_bet_info" field.</summary>
    public const int AgainBetInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Roulette.SingleAgainBet> _repeated_againBetInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Roulette.SingleAgainBet.Parser);
    private readonly pbc::RepeatedField<global::Roulette.SingleAgainBet> againBetInfo_ = new pbc::RepeatedField<global::Roulette.SingleAgainBet>();
    /// <summary>
    ///玩家续投
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Roulette.SingleAgainBet> AgainBetInfo {
      get { return againBetInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgAgainBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgAgainBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!againBetInfo_.Equals(other.againBetInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= againBetInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      againBetInfo_.WriteTo(output, _repeated_againBetInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      againBetInfo_.WriteTo(ref output, _repeated_againBetInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += againBetInfo_.CalculateSize(_repeated_againBetInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgAgainBet other) {
      if (other == null) {
        return;
      }
      againBetInfo_.Add(other.againBetInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            againBetInfo_.AddEntriesFrom(input, _repeated_againBetInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            againBetInfo_.AddEntriesFrom(ref input, _repeated_againBetInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家续投返回
  /// </summary>
  public sealed partial class MsgAgainBetResp : pb::IMessage<MsgAgainBetResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgAgainBetResp> _parser = new pb::MessageParser<MsgAgainBetResp>(() => new MsgAgainBetResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgAgainBetResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAgainBetResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAgainBetResp(MsgAgainBetResp other) : this() {
      chairId_ = other.chairId_;
      againBetInfo_ = other.againBetInfo_ != null ? other.againBetInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgAgainBetResp Clone() {
      return new MsgAgainBetResp(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "again_bet_info" field.</summary>
    public const int AgainBetInfoFieldNumber = 2;
    private global::Roulette.MsgAgainBet againBetInfo_;
    /// <summary>
    ///玩家续投信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Roulette.MsgAgainBet AgainBetInfo {
      get { return againBetInfo_; }
      set {
        againBetInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgAgainBetResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgAgainBetResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (!object.Equals(AgainBetInfo, other.AgainBetInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (againBetInfo_ != null) hash ^= AgainBetInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (againBetInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AgainBetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (againBetInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AgainBetInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (againBetInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgainBetInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgAgainBetResp other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.againBetInfo_ != null) {
        if (againBetInfo_ == null) {
          AgainBetInfo = new global::Roulette.MsgAgainBet();
        }
        AgainBetInfo.MergeFrom(other.AgainBetInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (againBetInfo_ == null) {
              AgainBetInfo = new global::Roulette.MsgAgainBet();
            }
            input.ReadMessage(AgainBetInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 18: {
            if (againBetInfo_ == null) {
              AgainBetInfo = new global::Roulette.MsgAgainBet();
            }
            input.ReadMessage(AgainBetInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///撤回下注
  /// </summary>
  public sealed partial class RevocationBet : pb::IMessage<RevocationBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RevocationBet> _parser = new pb::MessageParser<RevocationBet>(() => new RevocationBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevocationBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevocationBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevocationBet(RevocationBet other) : this() {
      revocationState_ = other.revocationState_;
      betIndex_ = other.betIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevocationBet Clone() {
      return new RevocationBet(this);
    }

    /// <summary>Field number for the "revocation_state" field.</summary>
    public const int RevocationStateFieldNumber = 1;
    private int revocationState_;
    /// <summary>
    ///1撤回上一步2撤回全部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RevocationState {
      get { return revocationState_; }
      set {
        revocationState_ = value;
      }
    }

    /// <summary>Field number for the "bet_index" field.</summary>
    public const int BetIndexFieldNumber = 2;
    private int betIndex_;
    /// <summary>
    ///下注区域id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetIndex {
      get { return betIndex_; }
      set {
        betIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RevocationBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevocationBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RevocationState != other.RevocationState) return false;
      if (BetIndex != other.BetIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RevocationState != 0) hash ^= RevocationState.GetHashCode();
      if (BetIndex != 0) hash ^= BetIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RevocationState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RevocationState);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RevocationState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RevocationState);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RevocationState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RevocationState);
      }
      if (BetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevocationBet other) {
      if (other == null) {
        return;
      }
      if (other.RevocationState != 0) {
        RevocationState = other.RevocationState;
      }
      if (other.BetIndex != 0) {
        BetIndex = other.BetIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RevocationState = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RevocationState = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家输赢信息                              
  /// </summary>
  public sealed partial class WinMsg : pb::IMessage<WinMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WinMsg> _parser = new pb::MessageParser<WinMsg>(() => new WinMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WinMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WinMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WinMsg(WinMsg other) : this() {
      chairId_ = other.chairId_;
      gold_ = other.gold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WinMsg Clone() {
      return new WinMsg(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 2;
    private long gold_;
    /// <summary>
    ///玩家输赢信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WinMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WinMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (Gold != other.Gold) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (Gold != 0L) hash ^= Gold.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (Gold != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Gold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (Gold != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WinMsg other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.Gold != 0L) {
        Gold = other.Gold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            Gold = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏结果                                  
  /// </summary>
  public sealed partial class MsgGmaeResult : pb::IMessage<MsgGmaeResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MsgGmaeResult> _parser = new pb::MessageParser<MsgGmaeResult>(() => new MsgGmaeResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgGmaeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Roulette.RouletteReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGmaeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGmaeResult(MsgGmaeResult other) : this() {
      resultNum_ = other.resultNum_;
      winMsg_ = other.winMsg_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgGmaeResult Clone() {
      return new MsgGmaeResult(this);
    }

    /// <summary>Field number for the "result_num" field.</summary>
    public const int ResultNumFieldNumber = 1;
    private int resultNum_;
    /// <summary>
    ///轮盘结果0-36                               
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResultNum {
      get { return resultNum_; }
      set {
        resultNum_ = value;
      }
    }

    /// <summary>Field number for the "win_msg" field.</summary>
    public const int WinMsgFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Roulette.WinMsg> _repeated_winMsg_codec
        = pb::FieldCodec.ForMessage(18, global::Roulette.WinMsg.Parser);
    private readonly pbc::RepeatedField<global::Roulette.WinMsg> winMsg_ = new pbc::RepeatedField<global::Roulette.WinMsg>();
    /// <summary>
    ///玩家输赢信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Roulette.WinMsg> WinMsg {
      get { return winMsg_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgGmaeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgGmaeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultNum != other.ResultNum) return false;
      if(!winMsg_.Equals(other.winMsg_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResultNum != 0) hash ^= ResultNum.GetHashCode();
      hash ^= winMsg_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResultNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResultNum);
      }
      winMsg_.WriteTo(output, _repeated_winMsg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResultNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ResultNum);
      }
      winMsg_.WriteTo(ref output, _repeated_winMsg_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResultNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultNum);
      }
      size += winMsg_.CalculateSize(_repeated_winMsg_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgGmaeResult other) {
      if (other == null) {
        return;
      }
      if (other.ResultNum != 0) {
        ResultNum = other.ResultNum;
      }
      winMsg_.Add(other.winMsg_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResultNum = input.ReadInt32();
            break;
          }
          case 18: {
            winMsg_.AddEntriesFrom(input, _repeated_winMsg_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ResultNum = input.ReadInt32();
            break;
          }
          case 18: {
            winMsg_.AddEntriesFrom(ref input, _repeated_winMsg_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
