// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/SubGame/LH.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LH {

  /// <summary>Holder for reflection information generated from Proto/SubGame/LH.proto</summary>
  public static partial class LHReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/SubGame/LH.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LHReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQcm90by9TdWJHYW1lL0xILnByb3RvEgJMSCI3ChNDTURfU0NfTm90aWZ5",
            "U3RhdHVzEhIKCmdhbWVfc3RhdGUYASABKAUSDAoEdGltZRgCIAEoBSJYCgpQ",
            "bGF5ZXJJbmZvEhAKCGdhbWVfYmV0GAEgASgDEhEKCXdpbl9jb3VudBgCIAEo",
            "BRISCgpiZXRfZHJhZ29uGAMgASgFEhEKCWJldF90aWdlchgEIAEoBSIsCg1Q",
            "bGF5ZXJJbmZvVG9wEhsKA3RvcBgBIAMoCzIOLkxILlBsYXllckluZm8iMQoW",
            "Q01EX1NDX1JldXNsdFBsYXRlUGF0aBIXCg9nYW1lX3BsYXRlX3BhdGgYASAD",
            "KAUi1AEKFENNRF9TQ19HYW1lU2NlbmVJbmZvEhcKD2dhbWVfc3RhdGVfaW5m",
            "bxgBIAEoBRISCgpnYW1lX3RpbWVzGAIgASgFEhAKCGdhbWVfYmV0GAMgAygF",
            "Eh0KFXBsYXllcl9iZXRfYXJlYV9saW1pdBgEIAEoBRIbChNnYW1lX2JldF9h",
            "cmVhX2xpbWl0GAUgAygFEhIKCmJldF9jb25maWcYBiADKAUSFQoNYWVyYV9t",
            "dWx0aXBsZRgHIAMoBRIWCg5nYW1lX3Bva2VyX251bRgIIAEoBSJpChFDTURf",
            "U0NfR2FtZVJlc3VsdBIRCglnYW1lX2NyYWQYASADKAUSEAoIYWVyYV93aW4Y",
            "AiABKAUSFwoPZ2FtZV9yZXN1bF90d2luGAMgAygFEhYKDmdhbWVfcG9rZXJf",
            "bnVtGAQgASgFIkYKDUNNRF9TQ19BZGRCZXQSEAoIY2hhaXJfaWQYASABKAUS",
            "EAoIYmV0X2FlcmEYAiABKAUSEQoJYmV0X2luZGV4GAMgASgFIlwKEkNNRF9T",
            "Q19BZGRCZXRBZ2FpbhIQCghjaGFpcl9pZBgBIAEoBRIQCghiZXRfYWVyYRgC",
            "IAEoBRIRCgliZXRfaW5kZXgYAyABKAUSDwoHYmV0X251bRgEIAEoBSI0Cg1D",
            "TURfQ1NfQWRkQmV0EhAKCGJldF9hZXJhGAEgASgFEhEKCWJldF9pbmRleBgC",
            "IAEoBSJKChJDTURfQ1NfQWRkQmV0QWdhaW4SEAoIYmV0X2FlcmEYASABKAUS",
            "EQoJYmV0X2luZGV4GAIgASgFEg8KB2JldF9udW0YAyABKAUqlwIKCEVNc2dJ",
            "RExIEhQKEFNVQl9TQ19TQ0VORUlORk8QABIRCg1TVUJfU0NfQUREQkVUEAES",
            "EwoPU1VCX1NDX0JFVEFHQUlOEAISFQoRU1VCX1NDX0dBTUVSRVNVTFQQAxIX",
            "ChNDTURfU0NfTk9USUZZU1RBVFVTEAQSGwoXU1VCX1NfQ0hFQ0tfUk9CT1Rf",
            "TEVBVkUQBRIRCg1DTURfU0NfQUlfQkVUEAYSFgoSU1VCX1NDX0dBTUVHT0xE",
            "VE9QEAcSFAoQU1VCX1NDX0dBTVJFQ09SRBAIEhcKE1NVQl9TQ19BSV9CRVRf",
            "RVJST1IQCRIRCg1TVUJfQ1NfQUREQkVUEAoSEwoPU1VCX0NTX0JFVEFHQUlO",
            "EAtiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LH.EMsgIDLH), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_SC_NotifyStatus), global::LH.CMD_SC_NotifyStatus.Parser, new[]{ "GameState", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.PlayerInfo), global::LH.PlayerInfo.Parser, new[]{ "GameBet", "WinCount", "BetDragon", "BetTiger" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.PlayerInfoTop), global::LH.PlayerInfoTop.Parser, new[]{ "Top" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_SC_ReusltPlatePath), global::LH.CMD_SC_ReusltPlatePath.Parser, new[]{ "GamePlatePath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_SC_GameSceneInfo), global::LH.CMD_SC_GameSceneInfo.Parser, new[]{ "GameStateInfo", "GameTimes", "GameBet", "PlayerBetAreaLimit", "GameBetAreaLimit", "BetConfig", "AeraMultiple", "GamePokerNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_SC_GameResult), global::LH.CMD_SC_GameResult.Parser, new[]{ "GameCrad", "AeraWin", "GameResulTwin", "GamePokerNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_SC_AddBet), global::LH.CMD_SC_AddBet.Parser, new[]{ "ChairId", "BetAera", "BetIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_SC_AddBetAgain), global::LH.CMD_SC_AddBetAgain.Parser, new[]{ "ChairId", "BetAera", "BetIndex", "BetNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_CS_AddBet), global::LH.CMD_CS_AddBet.Parser, new[]{ "BetAera", "BetIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LH.CMD_CS_AddBetAgain), global::LH.CMD_CS_AddBetAgain.Parser, new[]{ "BetAera", "BetIndex", "BetNum" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EMsgIDLH {
    /// <summary>
    ///游戏场景(CMD_SC_GameSceneInfo)
    /// </summary>
    [pbr::OriginalName("SUB_SC_SCENEINFO")] SubScSceneinfo = 0,
    /// <summary>
    ///下注(CMD_SC_AddBet)
    /// </summary>
    [pbr::OriginalName("SUB_SC_ADDBET")] SubScAddbet = 1,
    /// <summary>
    ///续投(CMD_SC_AddBetAgain)
    /// </summary>
    [pbr::OriginalName("SUB_SC_BETAGAIN")] SubScBetagain = 2,
    /// <summary>
    ///游戏结果(CMD_SC_GameResult)
    /// </summary>
    [pbr::OriginalName("SUB_SC_GAMERESULT")] SubScGameresult = 3,
    /// <summary>
    ///通知游戏状态(CMD_SC_NotifyStatus)
    /// </summary>
    [pbr::OriginalName("CMD_SC_NOTIFYSTATUS")] CmdScNotifystatus = 4,
    /// <summary>
    ///检测机器人退出（前端不管）
    /// </summary>
    [pbr::OriginalName("SUB_S_CHECK_ROBOT_LEAVE")] SubSCheckRobotLeave = 5,
    /// <summary>
    ///机器人下注（前端不管
    /// </summary>
    [pbr::OriginalName("CMD_SC_AI_BET")] CmdScAiBet = 6,
    /// <summary>
    ///游戏排行结果(PlayerInfoTop)
    /// </summary>
    [pbr::OriginalName("SUB_SC_GAMEGOLDTOP")] SubScGamegoldtop = 7,
    /// <summary>
    ///游戏路单(CMD_SC_ReusltPlatePath)
    /// </summary>
    [pbr::OriginalName("SUB_SC_GAMRECORD")] SubScGamrecord = 8,
    /// <summary>
    ///ai下注失败
    /// </summary>
    [pbr::OriginalName("SUB_SC_AI_BET_ERROR")] SubScAiBetError = 9,
    /// <summary>
    ///下注(CMD_CS_AddBet)
    /// </summary>
    [pbr::OriginalName("SUB_CS_ADDBET")] SubCsAddbet = 10,
    /// <summary>
    ///续投(CMD_CS_AddBetAgain)
    /// </summary>
    [pbr::OriginalName("SUB_CS_BETAGAIN")] SubCsBetagain = 11,
  }

  #endregion

  #region Messages
  /// <summary>
  ///通知状态
  /// </summary>
  public sealed partial class CMD_SC_NotifyStatus : pb::IMessage<CMD_SC_NotifyStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_SC_NotifyStatus> _parser = new pb::MessageParser<CMD_SC_NotifyStatus>(() => new CMD_SC_NotifyStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_SC_NotifyStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_NotifyStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_NotifyStatus(CMD_SC_NotifyStatus other) : this() {
      gameState_ = other.gameState_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_NotifyStatus Clone() {
      return new CMD_SC_NotifyStatus(this);
    }

    /// <summary>Field number for the "game_state" field.</summary>
    public const int GameStateFieldNumber = 1;
    private int gameState_;
    /// <summary>
    ///当前状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameState {
      get { return gameState_; }
      set {
        gameState_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private int time_;
    /// <summary>
    ///当前阶段时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_SC_NotifyStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_SC_NotifyStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameState != other.GameState) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameState != 0) hash ^= GameState.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameState);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameState != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameState);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameState);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_SC_NotifyStatus other) {
      if (other == null) {
        return;
      }
      if (other.GameState != 0) {
        GameState = other.GameState;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameState = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameState = input.ReadInt32();
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///玩家排行榜
  /// </summary>
  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      gameBet_ = other.gameBet_;
      winCount_ = other.winCount_;
      betDragon_ = other.betDragon_;
      betTiger_ = other.betTiger_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "game_bet" field.</summary>
    public const int GameBetFieldNumber = 1;
    private long gameBet_;
    /// <summary>
    ///玩家总下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GameBet {
      get { return gameBet_; }
      set {
        gameBet_ = value;
      }
    }

    /// <summary>Field number for the "win_count" field.</summary>
    public const int WinCountFieldNumber = 2;
    private int winCount_;
    /// <summary>
    ///赢次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WinCount {
      get { return winCount_; }
      set {
        winCount_ = value;
      }
    }

    /// <summary>Field number for the "bet_dragon" field.</summary>
    public const int BetDragonFieldNumber = 3;
    private int betDragon_;
    /// <summary>
    ///在龙下注次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetDragon {
      get { return betDragon_; }
      set {
        betDragon_ = value;
      }
    }

    /// <summary>Field number for the "bet_tiger" field.</summary>
    public const int BetTigerFieldNumber = 4;
    private int betTiger_;
    /// <summary>
    ///在虎下注次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetTiger {
      get { return betTiger_; }
      set {
        betTiger_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameBet != other.GameBet) return false;
      if (WinCount != other.WinCount) return false;
      if (BetDragon != other.BetDragon) return false;
      if (BetTiger != other.BetTiger) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameBet != 0L) hash ^= GameBet.GetHashCode();
      if (WinCount != 0) hash ^= WinCount.GetHashCode();
      if (BetDragon != 0) hash ^= BetDragon.GetHashCode();
      if (BetTiger != 0) hash ^= BetTiger.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameBet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(GameBet);
      }
      if (WinCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WinCount);
      }
      if (BetDragon != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetDragon);
      }
      if (BetTiger != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BetTiger);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameBet != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(GameBet);
      }
      if (WinCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WinCount);
      }
      if (BetDragon != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetDragon);
      }
      if (BetTiger != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BetTiger);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameBet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GameBet);
      }
      if (WinCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinCount);
      }
      if (BetDragon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetDragon);
      }
      if (BetTiger != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetTiger);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.GameBet != 0L) {
        GameBet = other.GameBet;
      }
      if (other.WinCount != 0) {
        WinCount = other.WinCount;
      }
      if (other.BetDragon != 0) {
        BetDragon = other.BetDragon;
      }
      if (other.BetTiger != 0) {
        BetTiger = other.BetTiger;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameBet = input.ReadInt64();
            break;
          }
          case 16: {
            WinCount = input.ReadInt32();
            break;
          }
          case 24: {
            BetDragon = input.ReadInt32();
            break;
          }
          case 32: {
            BetTiger = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameBet = input.ReadInt64();
            break;
          }
          case 16: {
            WinCount = input.ReadInt32();
            break;
          }
          case 24: {
            BetDragon = input.ReadInt32();
            break;
          }
          case 32: {
            BetTiger = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerInfoTop : pb::IMessage<PlayerInfoTop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInfoTop> _parser = new pb::MessageParser<PlayerInfoTop>(() => new PlayerInfoTop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfoTop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoTop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoTop(PlayerInfoTop other) : this() {
      top_ = other.top_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfoTop Clone() {
      return new PlayerInfoTop(this);
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LH.PlayerInfo> _repeated_top_codec
        = pb::FieldCodec.ForMessage(10, global::LH.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::LH.PlayerInfo> top_ = new pbc::RepeatedField<global::LH.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LH.PlayerInfo> Top {
      get { return top_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfoTop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfoTop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!top_.Equals(other.top_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= top_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      top_.WriteTo(output, _repeated_top_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      top_.WriteTo(ref output, _repeated_top_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += top_.CalculateSize(_repeated_top_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfoTop other) {
      if (other == null) {
        return;
      }
      top_.Add(other.top_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            top_.AddEntriesFrom(input, _repeated_top_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            top_.AddEntriesFrom(ref input, _repeated_top_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMD_SC_ReusltPlatePath : pb::IMessage<CMD_SC_ReusltPlatePath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_SC_ReusltPlatePath> _parser = new pb::MessageParser<CMD_SC_ReusltPlatePath>(() => new CMD_SC_ReusltPlatePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_SC_ReusltPlatePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_ReusltPlatePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_ReusltPlatePath(CMD_SC_ReusltPlatePath other) : this() {
      gamePlatePath_ = other.gamePlatePath_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_ReusltPlatePath Clone() {
      return new CMD_SC_ReusltPlatePath(this);
    }

    /// <summary>Field number for the "game_plate_path" field.</summary>
    public const int GamePlatePathFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_gamePlatePath_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> gamePlatePath_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///牌路1龙2虎3和
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GamePlatePath {
      get { return gamePlatePath_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_SC_ReusltPlatePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_SC_ReusltPlatePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gamePlatePath_.Equals(other.gamePlatePath_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gamePlatePath_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gamePlatePath_.WriteTo(output, _repeated_gamePlatePath_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gamePlatePath_.WriteTo(ref output, _repeated_gamePlatePath_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gamePlatePath_.CalculateSize(_repeated_gamePlatePath_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_SC_ReusltPlatePath other) {
      if (other == null) {
        return;
      }
      gamePlatePath_.Add(other.gamePlatePath_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            gamePlatePath_.AddEntriesFrom(input, _repeated_gamePlatePath_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            gamePlatePath_.AddEntriesFrom(ref input, _repeated_gamePlatePath_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMD_SC_GameSceneInfo : pb::IMessage<CMD_SC_GameSceneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_SC_GameSceneInfo> _parser = new pb::MessageParser<CMD_SC_GameSceneInfo>(() => new CMD_SC_GameSceneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_SC_GameSceneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_GameSceneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_GameSceneInfo(CMD_SC_GameSceneInfo other) : this() {
      gameStateInfo_ = other.gameStateInfo_;
      gameTimes_ = other.gameTimes_;
      gameBet_ = other.gameBet_.Clone();
      playerBetAreaLimit_ = other.playerBetAreaLimit_;
      gameBetAreaLimit_ = other.gameBetAreaLimit_.Clone();
      betConfig_ = other.betConfig_.Clone();
      aeraMultiple_ = other.aeraMultiple_.Clone();
      gamePokerNum_ = other.gamePokerNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_GameSceneInfo Clone() {
      return new CMD_SC_GameSceneInfo(this);
    }

    /// <summary>Field number for the "game_state_info" field.</summary>
    public const int GameStateInfoFieldNumber = 1;
    private int gameStateInfo_;
    /// <summary>
    ///游戏状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameStateInfo {
      get { return gameStateInfo_; }
      set {
        gameStateInfo_ = value;
      }
    }

    /// <summary>Field number for the "game_times" field.</summary>
    public const int GameTimesFieldNumber = 2;
    private int gameTimes_;
    /// <summary>
    ///剩余时间秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameTimes {
      get { return gameTimes_; }
      set {
        gameTimes_ = value;
      }
    }

    /// <summary>Field number for the "game_bet" field.</summary>
    public const int GameBetFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_gameBet_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> gameBet_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///下注区域详情
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GameBet {
      get { return gameBet_; }
    }

    /// <summary>Field number for the "player_bet_area_limit" field.</summary>
    public const int PlayerBetAreaLimitFieldNumber = 4;
    private int playerBetAreaLimit_;
    /// <summary>
    ///个人下注取悦限制配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerBetAreaLimit {
      get { return playerBetAreaLimit_; }
      set {
        playerBetAreaLimit_ = value;
      }
    }

    /// <summary>Field number for the "game_bet_area_limit" field.</summary>
    public const int GameBetAreaLimitFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_gameBetAreaLimit_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> gameBetAreaLimit_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///下注区域限制配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GameBetAreaLimit {
      get { return gameBetAreaLimit_; }
    }

    /// <summary>Field number for the "bet_config" field.</summary>
    public const int BetConfigFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_betConfig_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> betConfig_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///游戏下注配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BetConfig {
      get { return betConfig_; }
    }

    /// <summary>Field number for the "aera_multiple" field.</summary>
    public const int AeraMultipleFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_aeraMultiple_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> aeraMultiple_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 区域赔付倍数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AeraMultiple {
      get { return aeraMultiple_; }
    }

    /// <summary>Field number for the "game_poker_num" field.</summary>
    public const int GamePokerNumFieldNumber = 8;
    private int gamePokerNum_;
    /// <summary>
    ///游戏剩余牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GamePokerNum {
      get { return gamePokerNum_; }
      set {
        gamePokerNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_SC_GameSceneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_SC_GameSceneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameStateInfo != other.GameStateInfo) return false;
      if (GameTimes != other.GameTimes) return false;
      if(!gameBet_.Equals(other.gameBet_)) return false;
      if (PlayerBetAreaLimit != other.PlayerBetAreaLimit) return false;
      if(!gameBetAreaLimit_.Equals(other.gameBetAreaLimit_)) return false;
      if(!betConfig_.Equals(other.betConfig_)) return false;
      if(!aeraMultiple_.Equals(other.aeraMultiple_)) return false;
      if (GamePokerNum != other.GamePokerNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameStateInfo != 0) hash ^= GameStateInfo.GetHashCode();
      if (GameTimes != 0) hash ^= GameTimes.GetHashCode();
      hash ^= gameBet_.GetHashCode();
      if (PlayerBetAreaLimit != 0) hash ^= PlayerBetAreaLimit.GetHashCode();
      hash ^= gameBetAreaLimit_.GetHashCode();
      hash ^= betConfig_.GetHashCode();
      hash ^= aeraMultiple_.GetHashCode();
      if (GamePokerNum != 0) hash ^= GamePokerNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameStateInfo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameStateInfo);
      }
      if (GameTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameTimes);
      }
      gameBet_.WriteTo(output, _repeated_gameBet_codec);
      if (PlayerBetAreaLimit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerBetAreaLimit);
      }
      gameBetAreaLimit_.WriteTo(output, _repeated_gameBetAreaLimit_codec);
      betConfig_.WriteTo(output, _repeated_betConfig_codec);
      aeraMultiple_.WriteTo(output, _repeated_aeraMultiple_codec);
      if (GamePokerNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GamePokerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameStateInfo != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GameStateInfo);
      }
      if (GameTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameTimes);
      }
      gameBet_.WriteTo(ref output, _repeated_gameBet_codec);
      if (PlayerBetAreaLimit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerBetAreaLimit);
      }
      gameBetAreaLimit_.WriteTo(ref output, _repeated_gameBetAreaLimit_codec);
      betConfig_.WriteTo(ref output, _repeated_betConfig_codec);
      aeraMultiple_.WriteTo(ref output, _repeated_aeraMultiple_codec);
      if (GamePokerNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GamePokerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameStateInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameStateInfo);
      }
      if (GameTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameTimes);
      }
      size += gameBet_.CalculateSize(_repeated_gameBet_codec);
      if (PlayerBetAreaLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerBetAreaLimit);
      }
      size += gameBetAreaLimit_.CalculateSize(_repeated_gameBetAreaLimit_codec);
      size += betConfig_.CalculateSize(_repeated_betConfig_codec);
      size += aeraMultiple_.CalculateSize(_repeated_aeraMultiple_codec);
      if (GamePokerNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GamePokerNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_SC_GameSceneInfo other) {
      if (other == null) {
        return;
      }
      if (other.GameStateInfo != 0) {
        GameStateInfo = other.GameStateInfo;
      }
      if (other.GameTimes != 0) {
        GameTimes = other.GameTimes;
      }
      gameBet_.Add(other.gameBet_);
      if (other.PlayerBetAreaLimit != 0) {
        PlayerBetAreaLimit = other.PlayerBetAreaLimit;
      }
      gameBetAreaLimit_.Add(other.gameBetAreaLimit_);
      betConfig_.Add(other.betConfig_);
      aeraMultiple_.Add(other.aeraMultiple_);
      if (other.GamePokerNum != 0) {
        GamePokerNum = other.GamePokerNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameStateInfo = input.ReadInt32();
            break;
          }
          case 16: {
            GameTimes = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            gameBet_.AddEntriesFrom(input, _repeated_gameBet_codec);
            break;
          }
          case 32: {
            PlayerBetAreaLimit = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            gameBetAreaLimit_.AddEntriesFrom(input, _repeated_gameBetAreaLimit_codec);
            break;
          }
          case 50:
          case 48: {
            betConfig_.AddEntriesFrom(input, _repeated_betConfig_codec);
            break;
          }
          case 58:
          case 56: {
            aeraMultiple_.AddEntriesFrom(input, _repeated_aeraMultiple_codec);
            break;
          }
          case 64: {
            GamePokerNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GameStateInfo = input.ReadInt32();
            break;
          }
          case 16: {
            GameTimes = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            gameBet_.AddEntriesFrom(ref input, _repeated_gameBet_codec);
            break;
          }
          case 32: {
            PlayerBetAreaLimit = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            gameBetAreaLimit_.AddEntriesFrom(ref input, _repeated_gameBetAreaLimit_codec);
            break;
          }
          case 50:
          case 48: {
            betConfig_.AddEntriesFrom(ref input, _repeated_betConfig_codec);
            break;
          }
          case 58:
          case 56: {
            aeraMultiple_.AddEntriesFrom(ref input, _repeated_aeraMultiple_codec);
            break;
          }
          case 64: {
            GamePokerNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMD_SC_GameResult : pb::IMessage<CMD_SC_GameResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_SC_GameResult> _parser = new pb::MessageParser<CMD_SC_GameResult>(() => new CMD_SC_GameResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_SC_GameResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_GameResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_GameResult(CMD_SC_GameResult other) : this() {
      gameCrad_ = other.gameCrad_.Clone();
      aeraWin_ = other.aeraWin_;
      gameResulTwin_ = other.gameResulTwin_.Clone();
      gamePokerNum_ = other.gamePokerNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_GameResult Clone() {
      return new CMD_SC_GameResult(this);
    }

    /// <summary>Field number for the "game_crad" field.</summary>
    public const int GameCradFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_gameCrad_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> gameCrad_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///0龙牌1虎牌 牌点数1-13：a-k
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GameCrad {
      get { return gameCrad_; }
    }

    /// <summary>Field number for the "aera_win" field.</summary>
    public const int AeraWinFieldNumber = 2;
    private int aeraWin_;
    /// <summary>
    ///区域赢 1龙赢2虎赢3平赢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AeraWin {
      get { return aeraWin_; }
      set {
        aeraWin_ = value;
      }
    }

    /// <summary>Field number for the "game_resul_twin" field.</summary>
    public const int GameResulTwinFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_gameResulTwin_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> gameResulTwin_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///玩家输赢详情 负数为输正数为赢
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GameResulTwin {
      get { return gameResulTwin_; }
    }

    /// <summary>Field number for the "game_poker_num" field.</summary>
    public const int GamePokerNumFieldNumber = 4;
    private int gamePokerNum_;
    /// <summary>
    ///剩余牌数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GamePokerNum {
      get { return gamePokerNum_; }
      set {
        gamePokerNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_SC_GameResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_SC_GameResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameCrad_.Equals(other.gameCrad_)) return false;
      if (AeraWin != other.AeraWin) return false;
      if(!gameResulTwin_.Equals(other.gameResulTwin_)) return false;
      if (GamePokerNum != other.GamePokerNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameCrad_.GetHashCode();
      if (AeraWin != 0) hash ^= AeraWin.GetHashCode();
      hash ^= gameResulTwin_.GetHashCode();
      if (GamePokerNum != 0) hash ^= GamePokerNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameCrad_.WriteTo(output, _repeated_gameCrad_codec);
      if (AeraWin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AeraWin);
      }
      gameResulTwin_.WriteTo(output, _repeated_gameResulTwin_codec);
      if (GamePokerNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GamePokerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameCrad_.WriteTo(ref output, _repeated_gameCrad_codec);
      if (AeraWin != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AeraWin);
      }
      gameResulTwin_.WriteTo(ref output, _repeated_gameResulTwin_codec);
      if (GamePokerNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GamePokerNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gameCrad_.CalculateSize(_repeated_gameCrad_codec);
      if (AeraWin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AeraWin);
      }
      size += gameResulTwin_.CalculateSize(_repeated_gameResulTwin_codec);
      if (GamePokerNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GamePokerNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_SC_GameResult other) {
      if (other == null) {
        return;
      }
      gameCrad_.Add(other.gameCrad_);
      if (other.AeraWin != 0) {
        AeraWin = other.AeraWin;
      }
      gameResulTwin_.Add(other.gameResulTwin_);
      if (other.GamePokerNum != 0) {
        GamePokerNum = other.GamePokerNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            gameCrad_.AddEntriesFrom(input, _repeated_gameCrad_codec);
            break;
          }
          case 16: {
            AeraWin = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            gameResulTwin_.AddEntriesFrom(input, _repeated_gameResulTwin_codec);
            break;
          }
          case 32: {
            GamePokerNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            gameCrad_.AddEntriesFrom(ref input, _repeated_gameCrad_codec);
            break;
          }
          case 16: {
            AeraWin = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            gameResulTwin_.AddEntriesFrom(ref input, _repeated_gameResulTwin_codec);
            break;
          }
          case 32: {
            GamePokerNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMD_SC_AddBet : pb::IMessage<CMD_SC_AddBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_SC_AddBet> _parser = new pb::MessageParser<CMD_SC_AddBet>(() => new CMD_SC_AddBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_SC_AddBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_AddBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_AddBet(CMD_SC_AddBet other) : this() {
      chairId_ = other.chairId_;
      betAera_ = other.betAera_;
      betIndex_ = other.betIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_AddBet Clone() {
      return new CMD_SC_AddBet(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///玩家下注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_aera" field.</summary>
    public const int BetAeraFieldNumber = 2;
    private int betAera_;
    /// <summary>
    ///下注区域 0龙1虎2和
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetAera {
      get { return betAera_; }
      set {
        betAera_ = value;
      }
    }

    /// <summary>Field number for the "bet_index" field.</summary>
    public const int BetIndexFieldNumber = 3;
    private int betIndex_;
    /// <summary>
    ///下注下标1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetIndex {
      get { return betIndex_; }
      set {
        betIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_SC_AddBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_SC_AddBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (BetAera != other.BetAera) return false;
      if (BetIndex != other.BetIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (BetAera != 0) hash ^= BetAera.GetHashCode();
      if (BetIndex != 0) hash ^= BetIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (BetAera != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (BetAera != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (BetAera != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetAera);
      }
      if (BetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_SC_AddBet other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.BetAera != 0) {
        BetAera = other.BetAera;
      }
      if (other.BetIndex != 0) {
        BetIndex = other.BetIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            BetAera = input.ReadInt32();
            break;
          }
          case 24: {
            BetIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            BetAera = input.ReadInt32();
            break;
          }
          case 24: {
            BetIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMD_SC_AddBetAgain : pb::IMessage<CMD_SC_AddBetAgain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_SC_AddBetAgain> _parser = new pb::MessageParser<CMD_SC_AddBetAgain>(() => new CMD_SC_AddBetAgain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_SC_AddBetAgain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_AddBetAgain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_AddBetAgain(CMD_SC_AddBetAgain other) : this() {
      chairId_ = other.chairId_;
      betAera_ = other.betAera_;
      betIndex_ = other.betIndex_;
      betNum_ = other.betNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_SC_AddBetAgain Clone() {
      return new CMD_SC_AddBetAgain(this);
    }

    /// <summary>Field number for the "chair_id" field.</summary>
    public const int ChairIdFieldNumber = 1;
    private int chairId_;
    /// <summary>
    ///椅子号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChairId {
      get { return chairId_; }
      set {
        chairId_ = value;
      }
    }

    /// <summary>Field number for the "bet_aera" field.</summary>
    public const int BetAeraFieldNumber = 2;
    private int betAera_;
    /// <summary>
    ///下注区域0龙1虎2和
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetAera {
      get { return betAera_; }
      set {
        betAera_ = value;
      }
    }

    /// <summary>Field number for the "bet_index" field.</summary>
    public const int BetIndexFieldNumber = 3;
    private int betIndex_;
    /// <summary>
    ///下注下标1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetIndex {
      get { return betIndex_; }
      set {
        betIndex_ = value;
      }
    }

    /// <summary>Field number for the "bet_num" field.</summary>
    public const int BetNumFieldNumber = 4;
    private int betNum_;
    /// <summary>
    ///下注数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetNum {
      get { return betNum_; }
      set {
        betNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_SC_AddBetAgain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_SC_AddBetAgain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChairId != other.ChairId) return false;
      if (BetAera != other.BetAera) return false;
      if (BetIndex != other.BetIndex) return false;
      if (BetNum != other.BetNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChairId != 0) hash ^= ChairId.GetHashCode();
      if (BetAera != 0) hash ^= BetAera.GetHashCode();
      if (BetIndex != 0) hash ^= BetIndex.GetHashCode();
      if (BetNum != 0) hash ^= BetNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (BetAera != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetIndex);
      }
      if (BetNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BetNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChairId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ChairId);
      }
      if (BetAera != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetIndex);
      }
      if (BetNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BetNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChairId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
      }
      if (BetAera != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetAera);
      }
      if (BetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetIndex);
      }
      if (BetNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_SC_AddBetAgain other) {
      if (other == null) {
        return;
      }
      if (other.ChairId != 0) {
        ChairId = other.ChairId;
      }
      if (other.BetAera != 0) {
        BetAera = other.BetAera;
      }
      if (other.BetIndex != 0) {
        BetIndex = other.BetIndex;
      }
      if (other.BetNum != 0) {
        BetNum = other.BetNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            BetAera = input.ReadInt32();
            break;
          }
          case 24: {
            BetIndex = input.ReadInt32();
            break;
          }
          case 32: {
            BetNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChairId = input.ReadInt32();
            break;
          }
          case 16: {
            BetAera = input.ReadInt32();
            break;
          }
          case 24: {
            BetIndex = input.ReadInt32();
            break;
          }
          case 32: {
            BetNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMD_CS_AddBet : pb::IMessage<CMD_CS_AddBet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_CS_AddBet> _parser = new pb::MessageParser<CMD_CS_AddBet>(() => new CMD_CS_AddBet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_CS_AddBet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_CS_AddBet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_CS_AddBet(CMD_CS_AddBet other) : this() {
      betAera_ = other.betAera_;
      betIndex_ = other.betIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_CS_AddBet Clone() {
      return new CMD_CS_AddBet(this);
    }

    /// <summary>Field number for the "bet_aera" field.</summary>
    public const int BetAeraFieldNumber = 1;
    private int betAera_;
    /// <summary>
    ///下注区域 0龙1虎2和
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetAera {
      get { return betAera_; }
      set {
        betAera_ = value;
      }
    }

    /// <summary>Field number for the "bet_index" field.</summary>
    public const int BetIndexFieldNumber = 2;
    private int betIndex_;
    /// <summary>
    ///下注下标1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetIndex {
      get { return betIndex_; }
      set {
        betIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_CS_AddBet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_CS_AddBet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BetAera != other.BetAera) return false;
      if (BetIndex != other.BetIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BetAera != 0) hash ^= BetAera.GetHashCode();
      if (BetIndex != 0) hash ^= BetIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BetAera != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BetAera != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BetAera != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetAera);
      }
      if (BetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_CS_AddBet other) {
      if (other == null) {
        return;
      }
      if (other.BetAera != 0) {
        BetAera = other.BetAera;
      }
      if (other.BetIndex != 0) {
        BetIndex = other.BetIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BetAera = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BetAera = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMD_CS_AddBetAgain : pb::IMessage<CMD_CS_AddBetAgain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMD_CS_AddBetAgain> _parser = new pb::MessageParser<CMD_CS_AddBetAgain>(() => new CMD_CS_AddBetAgain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMD_CS_AddBetAgain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LH.LHReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_CS_AddBetAgain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_CS_AddBetAgain(CMD_CS_AddBetAgain other) : this() {
      betAera_ = other.betAera_;
      betIndex_ = other.betIndex_;
      betNum_ = other.betNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMD_CS_AddBetAgain Clone() {
      return new CMD_CS_AddBetAgain(this);
    }

    /// <summary>Field number for the "bet_aera" field.</summary>
    public const int BetAeraFieldNumber = 1;
    private int betAera_;
    /// <summary>
    ///下注区域0龙1虎2和
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetAera {
      get { return betAera_; }
      set {
        betAera_ = value;
      }
    }

    /// <summary>Field number for the "bet_index" field.</summary>
    public const int BetIndexFieldNumber = 2;
    private int betIndex_;
    /// <summary>
    ///下注下标1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetIndex {
      get { return betIndex_; }
      set {
        betIndex_ = value;
      }
    }

    /// <summary>Field number for the "bet_num" field.</summary>
    public const int BetNumFieldNumber = 3;
    private int betNum_;
    /// <summary>
    ///下注数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BetNum {
      get { return betNum_; }
      set {
        betNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMD_CS_AddBetAgain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMD_CS_AddBetAgain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BetAera != other.BetAera) return false;
      if (BetIndex != other.BetIndex) return false;
      if (BetNum != other.BetNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BetAera != 0) hash ^= BetAera.GetHashCode();
      if (BetIndex != 0) hash ^= BetIndex.GetHashCode();
      if (BetNum != 0) hash ^= BetNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BetAera != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (BetNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BetAera != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BetAera);
      }
      if (BetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BetIndex);
      }
      if (BetNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BetNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BetAera != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetAera);
      }
      if (BetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetIndex);
      }
      if (BetNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BetNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMD_CS_AddBetAgain other) {
      if (other == null) {
        return;
      }
      if (other.BetAera != 0) {
        BetAera = other.BetAera;
      }
      if (other.BetIndex != 0) {
        BetIndex = other.BetIndex;
      }
      if (other.BetNum != 0) {
        BetNum = other.BetNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BetAera = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
          case 24: {
            BetNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BetAera = input.ReadInt32();
            break;
          }
          case 16: {
            BetIndex = input.ReadInt32();
            break;
          }
          case 24: {
            BetNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
