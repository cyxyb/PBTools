// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/Common/Common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Proto/Common/Common.proto</summary>
public static partial class CommonReflection {

  #region Descriptor
  /// <summary>File descriptor for Proto/Common/Common.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CommonReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChlQcm90by9Db21tb24vQ29tbW9uLnByb3RvIhAKDk1zZ0NvbW1vbkVtcHR5",
          "Ih4KDU1zZ0NvbW1vbkJvb2wSDQoFdmFsdWUYASABKAgiHQoMTXNnQ29tbW9u",
          "TjMyEg0KBXZhbHVlGAEgASgFIh0KDE1zZ0NvbW1vbk42NBINCgV2YWx1ZRgB",
          "IAEoAyIdCgxNc2dDb21tb25TdHISDQoFdmFsdWUYASABKAki4QEKEU1zZ0dh",
          "bWVTZXJ2ZXJJbmZvEgoKAmlwGAEgASgFEgwKBHBvcnQYAiABKAUSEQoJc2Vy",
          "dmVyX2lkGAMgASgFEhIKCm9ubGluZV9udW0YBCABKAUSDwoHa2luZF9pZBgF",
          "IAEoBRISCgpyb29tX2xldmVsGAYgASgFEhIKCmxpbWl0X2dvbGQYByABKAUS",
          "EgoKbWF4X3BsYXllchgIIAEoBRIRCgl0YWJsZV9udW0YCSABKAUSEQoJY2hh",
          "aXJfbnVtGAogASgFEhgKEGlzX25lZWRfcGFzc3dvcmQYCyABKAgiQQoRTXNn",
          "R2FtZVNlcnZlckxpc3QSLAoQZ2FtZV9zZXJ2ZXJfbGlzdBgBIAMoCzISLk1z",
          "Z0dhbWVTZXJ2ZXJJbmZvIuUBChJNc2dCcm9hZGNhc3RabWRUaXASDwoHdXNl",
          "cl9pZBgBIAEoBRIPCgdnYW1lX2lkGAIgASgFEhIKCnJvb21fbGV2ZWwYAyAB",
          "KAUSEAoId2luX2dvbGQYBCABKAQSEQoJbmlja19uYW1lGAUgASgJEhAKCGhl",
          "YWRfdXJsGAYgASgJEhMKC2xhbmd1YWdlX2lkGAcgASgFEhMKC3RlbXBsYXRl",
          "X2lkGAggASgFEhEKCXZpcF9sZXZlbBgJIAEoBRIUCgxhdmF0YXJfZnJhbWUY",
          "CiABKAUSDwoHY29udGVudBgLIAMoCSJJChZNc2dOb3RpZnlDaGF0Tm9ybWFs",
          "TXNnEg0KBWluZGV4GAEgASgFEg8KB3VzZXJfaWQYAiABKAUSDwoHbWVzc2Fn",
          "ZRgDIAEoCSJiChdNc2dOb3RpZnlDaGF0VHJ1bXBldE1zZxINCgVpbmRleBgB",
          "IAEoBRInCgtwbGF5ZXJfaW5mbxgCIAEoCzISLk1zZ0NoYXRQbGF5ZXJJbmZv",
          "Eg8KB21lc3NhZ2UYAyABKAkimgEKEU1zZ0NoYXRQbGF5ZXJJbmZvEg8KB3Vz",
          "ZXJfaWQYASABKAUSFAoMYmVhdXRpZnVsX2lkGAIgASgFEhAKCG5pY2tuYW1l",
          "GAMgASgJEg4KBmF2YXRhchgEIAEoCRIRCgl2aXBfbGV2ZWwYBSABKAUSFAoM",
          "YXZhdGFyX2ZyYW1lGAYgASgFEhMKC2NsaWVudF90eXBlGAcgASgFImgKEU1z",
          "Z0NoYXRTZXJ2ZXJJbmZvEgoKAmlwGAEgASgFEgwKBHBvcnQYAiABKAUSEQoJ",
          "c2VydmVyX2lkGAMgASgFEhIKCm9ubGluZV9udW0YBCABKAUSEgoKbWF4X3Bs",
          "YXllchgFIAEoBSJBChFNc2dDaGF0U2VydmVyTGlzdBIsChBjaGF0X3NlcnZl",
          "cl9saXN0GAEgAygLMhIuTXNnQ2hhdFNlcnZlckluZm9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonEmpty), global::MsgCommonEmpty.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonBool), global::MsgCommonBool.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonN32), global::MsgCommonN32.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonN64), global::MsgCommonN64.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonStr), global::MsgCommonStr.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGameServerInfo), global::MsgGameServerInfo.Parser, new[]{ "Ip", "Port", "ServerId", "OnlineNum", "KindId", "RoomLevel", "LimitGold", "MaxPlayer", "TableNum", "ChairNum", "IsNeedPassword" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGameServerList), global::MsgGameServerList.Parser, new[]{ "GameServerList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBroadcastZmdTip), global::MsgBroadcastZmdTip.Parser, new[]{ "UserId", "GameId", "RoomLevel", "WinGold", "NickName", "HeadUrl", "LanguageId", "TemplateId", "VipLevel", "AvatarFrame", "Content" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgNotifyChatNormalMsg), global::MsgNotifyChatNormalMsg.Parser, new[]{ "Index", "UserId", "Message" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgNotifyChatTrumpetMsg), global::MsgNotifyChatTrumpetMsg.Parser, new[]{ "Index", "PlayerInfo", "Message" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgChatPlayerInfo), global::MsgChatPlayerInfo.Parser, new[]{ "UserId", "BeautifulId", "Nickname", "Avatar", "VipLevel", "AvatarFrame", "ClientType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgChatServerInfo), global::MsgChatServerInfo.Parser, new[]{ "Ip", "Port", "ServerId", "OnlineNum", "MaxPlayer" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgChatServerList), global::MsgChatServerList.Parser, new[]{ "ChatServerList" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MsgCommonEmpty : pb::IMessage<MsgCommonEmpty>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonEmpty> _parser = new pb::MessageParser<MsgCommonEmpty>(() => new MsgCommonEmpty());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonEmpty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonEmpty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonEmpty(MsgCommonEmpty other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonEmpty Clone() {
    return new MsgCommonEmpty(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonEmpty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonEmpty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonEmpty other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonBool : pb::IMessage<MsgCommonBool>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonBool> _parser = new pb::MessageParser<MsgCommonBool>(() => new MsgCommonBool());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonBool> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonBool() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonBool(MsgCommonBool other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonBool Clone() {
    return new MsgCommonBool(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private bool value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonBool);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonBool other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != false) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != false) {
      output.WriteRawTag(8);
      output.WriteBool(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != false) {
      output.WriteRawTag(8);
      output.WriteBool(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonBool other) {
    if (other == null) {
      return;
    }
    if (other.Value != false) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonN32 : pb::IMessage<MsgCommonN32>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonN32> _parser = new pb::MessageParser<MsgCommonN32>(() => new MsgCommonN32());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonN32> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN32() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN32(MsgCommonN32 other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN32 Clone() {
    return new MsgCommonN32(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private int value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonN32);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonN32 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonN32 other) {
    if (other == null) {
      return;
    }
    if (other.Value != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonN64 : pb::IMessage<MsgCommonN64>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonN64> _parser = new pb::MessageParser<MsgCommonN64>(() => new MsgCommonN64());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonN64> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN64() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN64(MsgCommonN64 other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN64 Clone() {
    return new MsgCommonN64(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private long value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonN64);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonN64 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != 0L) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonN64 other) {
    if (other == null) {
      return;
    }
    if (other.Value != 0L) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonStr : pb::IMessage<MsgCommonStr>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonStr> _parser = new pb::MessageParser<MsgCommonStr>(() => new MsgCommonStr());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonStr> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonStr() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonStr(MsgCommonStr other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonStr Clone() {
    return new MsgCommonStr(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private string value_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonStr);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonStr other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonStr other) {
    if (other == null) {
      return;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Value = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Value = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///游戏服务器信息
/// </summary>
public sealed partial class MsgGameServerInfo : pb::IMessage<MsgGameServerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGameServerInfo> _parser = new pb::MessageParser<MsgGameServerInfo>(() => new MsgGameServerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGameServerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerInfo(MsgGameServerInfo other) : this() {
    ip_ = other.ip_;
    port_ = other.port_;
    serverId_ = other.serverId_;
    onlineNum_ = other.onlineNum_;
    kindId_ = other.kindId_;
    roomLevel_ = other.roomLevel_;
    limitGold_ = other.limitGold_;
    maxPlayer_ = other.maxPlayer_;
    tableNum_ = other.tableNum_;
    chairNum_ = other.chairNum_;
    isNeedPassword_ = other.isNeedPassword_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerInfo Clone() {
    return new MsgGameServerInfo(this);
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 1;
  private int ip_;
  /// <summary>
  ///IP
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Ip {
    get { return ip_; }
    set {
      ip_ = value;
    }
  }

  /// <summary>Field number for the "port" field.</summary>
  public const int PortFieldNumber = 2;
  private int port_;
  /// <summary>
  ///端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  /// <summary>Field number for the "server_id" field.</summary>
  public const int ServerIdFieldNumber = 3;
  private int serverId_;
  /// <summary>
  ///服务器ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerId {
    get { return serverId_; }
    set {
      serverId_ = value;
    }
  }

  /// <summary>Field number for the "online_num" field.</summary>
  public const int OnlineNumFieldNumber = 4;
  private int onlineNum_;
  /// <summary>
  ///在线人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OnlineNum {
    get { return onlineNum_; }
    set {
      onlineNum_ = value;
    }
  }

  /// <summary>Field number for the "kind_id" field.</summary>
  public const int KindIdFieldNumber = 5;
  private int kindId_;
  /// <summary>
  ///kindID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int KindId {
    get { return kindId_; }
    set {
      kindId_ = value;
    }
  }

  /// <summary>Field number for the "room_level" field.</summary>
  public const int RoomLevelFieldNumber = 6;
  private int roomLevel_;
  /// <summary>
  ///房间等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RoomLevel {
    get { return roomLevel_; }
    set {
      roomLevel_ = value;
    }
  }

  /// <summary>Field number for the "limit_gold" field.</summary>
  public const int LimitGoldFieldNumber = 7;
  private int limitGold_;
  /// <summary>
  ///入场金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LimitGold {
    get { return limitGold_; }
    set {
      limitGold_ = value;
    }
  }

  /// <summary>Field number for the "max_player" field.</summary>
  public const int MaxPlayerFieldNumber = 8;
  private int maxPlayer_;
  /// <summary>
  ///最大人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxPlayer {
    get { return maxPlayer_; }
    set {
      maxPlayer_ = value;
    }
  }

  /// <summary>Field number for the "table_num" field.</summary>
  public const int TableNumFieldNumber = 9;
  private int tableNum_;
  /// <summary>
  ///桌子数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TableNum {
    get { return tableNum_; }
    set {
      tableNum_ = value;
    }
  }

  /// <summary>Field number for the "chair_num" field.</summary>
  public const int ChairNumFieldNumber = 10;
  private int chairNum_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairNum {
    get { return chairNum_; }
    set {
      chairNum_ = value;
    }
  }

  /// <summary>Field number for the "is_need_password" field.</summary>
  public const int IsNeedPasswordFieldNumber = 11;
  private bool isNeedPassword_;
  /// <summary>
  ///需要密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsNeedPassword {
    get { return isNeedPassword_; }
    set {
      isNeedPassword_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGameServerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGameServerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ip != other.Ip) return false;
    if (Port != other.Port) return false;
    if (ServerId != other.ServerId) return false;
    if (OnlineNum != other.OnlineNum) return false;
    if (KindId != other.KindId) return false;
    if (RoomLevel != other.RoomLevel) return false;
    if (LimitGold != other.LimitGold) return false;
    if (MaxPlayer != other.MaxPlayer) return false;
    if (TableNum != other.TableNum) return false;
    if (ChairNum != other.ChairNum) return false;
    if (IsNeedPassword != other.IsNeedPassword) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ip != 0) hash ^= Ip.GetHashCode();
    if (Port != 0) hash ^= Port.GetHashCode();
    if (ServerId != 0) hash ^= ServerId.GetHashCode();
    if (OnlineNum != 0) hash ^= OnlineNum.GetHashCode();
    if (KindId != 0) hash ^= KindId.GetHashCode();
    if (RoomLevel != 0) hash ^= RoomLevel.GetHashCode();
    if (LimitGold != 0) hash ^= LimitGold.GetHashCode();
    if (MaxPlayer != 0) hash ^= MaxPlayer.GetHashCode();
    if (TableNum != 0) hash ^= TableNum.GetHashCode();
    if (ChairNum != 0) hash ^= ChairNum.GetHashCode();
    if (IsNeedPassword != false) hash ^= IsNeedPassword.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Ip != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (ServerId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ServerId);
    }
    if (OnlineNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineNum);
    }
    if (KindId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(KindId);
    }
    if (RoomLevel != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(RoomLevel);
    }
    if (LimitGold != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(LimitGold);
    }
    if (MaxPlayer != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(MaxPlayer);
    }
    if (TableNum != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(TableNum);
    }
    if (ChairNum != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(ChairNum);
    }
    if (IsNeedPassword != false) {
      output.WriteRawTag(88);
      output.WriteBool(IsNeedPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Ip != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (ServerId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ServerId);
    }
    if (OnlineNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineNum);
    }
    if (KindId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(KindId);
    }
    if (RoomLevel != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(RoomLevel);
    }
    if (LimitGold != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(LimitGold);
    }
    if (MaxPlayer != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(MaxPlayer);
    }
    if (TableNum != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(TableNum);
    }
    if (ChairNum != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(ChairNum);
    }
    if (IsNeedPassword != false) {
      output.WriteRawTag(88);
      output.WriteBool(IsNeedPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ip != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ip);
    }
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (ServerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
    }
    if (OnlineNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineNum);
    }
    if (KindId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(KindId);
    }
    if (RoomLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomLevel);
    }
    if (LimitGold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitGold);
    }
    if (MaxPlayer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayer);
    }
    if (TableNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableNum);
    }
    if (ChairNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairNum);
    }
    if (IsNeedPassword != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGameServerInfo other) {
    if (other == null) {
      return;
    }
    if (other.Ip != 0) {
      Ip = other.Ip;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    if (other.ServerId != 0) {
      ServerId = other.ServerId;
    }
    if (other.OnlineNum != 0) {
      OnlineNum = other.OnlineNum;
    }
    if (other.KindId != 0) {
      KindId = other.KindId;
    }
    if (other.RoomLevel != 0) {
      RoomLevel = other.RoomLevel;
    }
    if (other.LimitGold != 0) {
      LimitGold = other.LimitGold;
    }
    if (other.MaxPlayer != 0) {
      MaxPlayer = other.MaxPlayer;
    }
    if (other.TableNum != 0) {
      TableNum = other.TableNum;
    }
    if (other.ChairNum != 0) {
      ChairNum = other.ChairNum;
    }
    if (other.IsNeedPassword != false) {
      IsNeedPassword = other.IsNeedPassword;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ip = input.ReadInt32();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
        case 24: {
          ServerId = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineNum = input.ReadInt32();
          break;
        }
        case 40: {
          KindId = input.ReadInt32();
          break;
        }
        case 48: {
          RoomLevel = input.ReadInt32();
          break;
        }
        case 56: {
          LimitGold = input.ReadInt32();
          break;
        }
        case 64: {
          MaxPlayer = input.ReadInt32();
          break;
        }
        case 72: {
          TableNum = input.ReadInt32();
          break;
        }
        case 80: {
          ChairNum = input.ReadInt32();
          break;
        }
        case 88: {
          IsNeedPassword = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ip = input.ReadInt32();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
        case 24: {
          ServerId = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineNum = input.ReadInt32();
          break;
        }
        case 40: {
          KindId = input.ReadInt32();
          break;
        }
        case 48: {
          RoomLevel = input.ReadInt32();
          break;
        }
        case 56: {
          LimitGold = input.ReadInt32();
          break;
        }
        case 64: {
          MaxPlayer = input.ReadInt32();
          break;
        }
        case 72: {
          TableNum = input.ReadInt32();
          break;
        }
        case 80: {
          ChairNum = input.ReadInt32();
          break;
        }
        case 88: {
          IsNeedPassword = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///游戏服务器列表
/// </summary>
public sealed partial class MsgGameServerList : pb::IMessage<MsgGameServerList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGameServerList> _parser = new pb::MessageParser<MsgGameServerList>(() => new MsgGameServerList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGameServerList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerList(MsgGameServerList other) : this() {
    gameServerList_ = other.gameServerList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerList Clone() {
    return new MsgGameServerList(this);
  }

  /// <summary>Field number for the "game_server_list" field.</summary>
  public const int GameServerListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgGameServerInfo> _repeated_gameServerList_codec
      = pb::FieldCodec.ForMessage(10, global::MsgGameServerInfo.Parser);
  private readonly pbc::RepeatedField<global::MsgGameServerInfo> gameServerList_ = new pbc::RepeatedField<global::MsgGameServerInfo>();
  /// <summary>
  ///服务器列表 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgGameServerInfo> GameServerList {
    get { return gameServerList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGameServerList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGameServerList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!gameServerList_.Equals(other.gameServerList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= gameServerList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    gameServerList_.WriteTo(output, _repeated_gameServerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    gameServerList_.WriteTo(ref output, _repeated_gameServerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += gameServerList_.CalculateSize(_repeated_gameServerList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGameServerList other) {
    if (other == null) {
      return;
    }
    gameServerList_.Add(other.gameServerList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          gameServerList_.AddEntriesFrom(input, _repeated_gameServerList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          gameServerList_.AddEntriesFrom(ref input, _repeated_gameServerList_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///跑马灯数据
/// </summary>
public sealed partial class MsgBroadcastZmdTip : pb::IMessage<MsgBroadcastZmdTip>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBroadcastZmdTip> _parser = new pb::MessageParser<MsgBroadcastZmdTip>(() => new MsgBroadcastZmdTip());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBroadcastZmdTip> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBroadcastZmdTip() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBroadcastZmdTip(MsgBroadcastZmdTip other) : this() {
    userId_ = other.userId_;
    gameId_ = other.gameId_;
    roomLevel_ = other.roomLevel_;
    winGold_ = other.winGold_;
    nickName_ = other.nickName_;
    headUrl_ = other.headUrl_;
    languageId_ = other.languageId_;
    templateId_ = other.templateId_;
    vipLevel_ = other.vipLevel_;
    avatarFrame_ = other.avatarFrame_;
    content_ = other.content_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBroadcastZmdTip Clone() {
    return new MsgBroadcastZmdTip(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///用户ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "game_id" field.</summary>
  public const int GameIdFieldNumber = 2;
  private int gameId_;
  /// <summary>
  ///游戏类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GameId {
    get { return gameId_; }
    set {
      gameId_ = value;
    }
  }

  /// <summary>Field number for the "room_level" field.</summary>
  public const int RoomLevelFieldNumber = 3;
  private int roomLevel_;
  /// <summary>
  ///房间等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RoomLevel {
    get { return roomLevel_; }
    set {
      roomLevel_ = value;
    }
  }

  /// <summary>Field number for the "win_gold" field.</summary>
  public const int WinGoldFieldNumber = 4;
  private ulong winGold_;
  /// <summary>
  ///获得金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong WinGold {
    get { return winGold_; }
    set {
      winGold_ = value;
    }
  }

  /// <summary>Field number for the "nick_name" field.</summary>
  public const int NickNameFieldNumber = 5;
  private string nickName_ = "";
  /// <summary>
  ///昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NickName {
    get { return nickName_; }
    set {
      nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "head_url" field.</summary>
  public const int HeadUrlFieldNumber = 6;
  private string headUrl_ = "";
  /// <summary>
  ///头像url
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HeadUrl {
    get { return headUrl_; }
    set {
      headUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "language_id" field.</summary>
  public const int LanguageIdFieldNumber = 7;
  private int languageId_;
  /// <summary>
  ///多语言id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LanguageId {
    get { return languageId_; }
    set {
      languageId_ = value;
    }
  }

  /// <summary>Field number for the "template_id" field.</summary>
  public const int TemplateIdFieldNumber = 8;
  private int templateId_;
  /// <summary>
  ///模板id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TemplateId {
    get { return templateId_; }
    set {
      templateId_ = value;
    }
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 9;
  private int vipLevel_;
  /// <summary>
  ///VIP等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 10;
  private int avatarFrame_;
  /// <summary>
  ///头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 11;
  private static readonly pb::FieldCodec<string> _repeated_content_codec
      = pb::FieldCodec.ForString(90);
  private readonly pbc::RepeatedField<string> content_ = new pbc::RepeatedField<string>();
  /// <summary>
  ///拼接内容数组
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Content {
    get { return content_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBroadcastZmdTip);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBroadcastZmdTip other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (GameId != other.GameId) return false;
    if (RoomLevel != other.RoomLevel) return false;
    if (WinGold != other.WinGold) return false;
    if (NickName != other.NickName) return false;
    if (HeadUrl != other.HeadUrl) return false;
    if (LanguageId != other.LanguageId) return false;
    if (TemplateId != other.TemplateId) return false;
    if (VipLevel != other.VipLevel) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if(!content_.Equals(other.content_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (GameId != 0) hash ^= GameId.GetHashCode();
    if (RoomLevel != 0) hash ^= RoomLevel.GetHashCode();
    if (WinGold != 0UL) hash ^= WinGold.GetHashCode();
    if (NickName.Length != 0) hash ^= NickName.GetHashCode();
    if (HeadUrl.Length != 0) hash ^= HeadUrl.GetHashCode();
    if (LanguageId != 0) hash ^= LanguageId.GetHashCode();
    if (TemplateId != 0) hash ^= TemplateId.GetHashCode();
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    hash ^= content_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (GameId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GameId);
    }
    if (RoomLevel != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RoomLevel);
    }
    if (WinGold != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(WinGold);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(NickName);
    }
    if (HeadUrl.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(HeadUrl);
    }
    if (LanguageId != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(LanguageId);
    }
    if (TemplateId != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(TemplateId);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(AvatarFrame);
    }
    content_.WriteTo(output, _repeated_content_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (GameId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(GameId);
    }
    if (RoomLevel != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(RoomLevel);
    }
    if (WinGold != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(WinGold);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(NickName);
    }
    if (HeadUrl.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(HeadUrl);
    }
    if (LanguageId != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(LanguageId);
    }
    if (TemplateId != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(TemplateId);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(AvatarFrame);
    }
    content_.WriteTo(ref output, _repeated_content_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (GameId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameId);
    }
    if (RoomLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomLevel);
    }
    if (WinGold != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WinGold);
    }
    if (NickName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
    }
    if (HeadUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadUrl);
    }
    if (LanguageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LanguageId);
    }
    if (TemplateId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TemplateId);
    }
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    size += content_.CalculateSize(_repeated_content_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBroadcastZmdTip other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.GameId != 0) {
      GameId = other.GameId;
    }
    if (other.RoomLevel != 0) {
      RoomLevel = other.RoomLevel;
    }
    if (other.WinGold != 0UL) {
      WinGold = other.WinGold;
    }
    if (other.NickName.Length != 0) {
      NickName = other.NickName;
    }
    if (other.HeadUrl.Length != 0) {
      HeadUrl = other.HeadUrl;
    }
    if (other.LanguageId != 0) {
      LanguageId = other.LanguageId;
    }
    if (other.TemplateId != 0) {
      TemplateId = other.TemplateId;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    content_.Add(other.content_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          GameId = input.ReadInt32();
          break;
        }
        case 24: {
          RoomLevel = input.ReadInt32();
          break;
        }
        case 32: {
          WinGold = input.ReadUInt64();
          break;
        }
        case 42: {
          NickName = input.ReadString();
          break;
        }
        case 50: {
          HeadUrl = input.ReadString();
          break;
        }
        case 56: {
          LanguageId = input.ReadInt32();
          break;
        }
        case 64: {
          TemplateId = input.ReadInt32();
          break;
        }
        case 72: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 80: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 90: {
          content_.AddEntriesFrom(input, _repeated_content_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          GameId = input.ReadInt32();
          break;
        }
        case 24: {
          RoomLevel = input.ReadInt32();
          break;
        }
        case 32: {
          WinGold = input.ReadUInt64();
          break;
        }
        case 42: {
          NickName = input.ReadString();
          break;
        }
        case 50: {
          HeadUrl = input.ReadString();
          break;
        }
        case 56: {
          LanguageId = input.ReadInt32();
          break;
        }
        case 64: {
          TemplateId = input.ReadInt32();
          break;
        }
        case 72: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 80: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 90: {
          content_.AddEntriesFrom(ref input, _repeated_content_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///通知普通聊天消息
/// </summary>
public sealed partial class MsgNotifyChatNormalMsg : pb::IMessage<MsgNotifyChatNormalMsg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgNotifyChatNormalMsg> _parser = new pb::MessageParser<MsgNotifyChatNormalMsg>(() => new MsgNotifyChatNormalMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgNotifyChatNormalMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgNotifyChatNormalMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgNotifyChatNormalMsg(MsgNotifyChatNormalMsg other) : this() {
    index_ = other.index_;
    userId_ = other.userId_;
    message_ = other.message_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgNotifyChatNormalMsg Clone() {
    return new MsgNotifyChatNormalMsg(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  /// <summary>
  ///消息索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private int userId_;
  /// <summary>
  ///用户ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 3;
  private string message_ = "";
  /// <summary>
  ///聊天内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgNotifyChatNormalMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgNotifyChatNormalMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (UserId != other.UserId) return false;
    if (Message != other.Message) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgNotifyChatNormalMsg other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 26: {
          Message = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 26: {
          Message = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///通知聊天消息
/// </summary>
public sealed partial class MsgNotifyChatTrumpetMsg : pb::IMessage<MsgNotifyChatTrumpetMsg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgNotifyChatTrumpetMsg> _parser = new pb::MessageParser<MsgNotifyChatTrumpetMsg>(() => new MsgNotifyChatTrumpetMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgNotifyChatTrumpetMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgNotifyChatTrumpetMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgNotifyChatTrumpetMsg(MsgNotifyChatTrumpetMsg other) : this() {
    index_ = other.index_;
    playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
    message_ = other.message_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgNotifyChatTrumpetMsg Clone() {
    return new MsgNotifyChatTrumpetMsg(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  /// <summary>
  ///消息索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "player_info" field.</summary>
  public const int PlayerInfoFieldNumber = 2;
  private global::MsgChatPlayerInfo playerInfo_;
  /// <summary>
  ///玩家信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgChatPlayerInfo PlayerInfo {
    get { return playerInfo_; }
    set {
      playerInfo_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 3;
  private string message_ = "";
  /// <summary>
  ///聊天内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgNotifyChatTrumpetMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgNotifyChatTrumpetMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
    if (Message != other.Message) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (playerInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PlayerInfo);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (playerInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PlayerInfo);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (playerInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgNotifyChatTrumpetMsg other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.playerInfo_ != null) {
      if (playerInfo_ == null) {
        PlayerInfo = new global::MsgChatPlayerInfo();
      }
      PlayerInfo.MergeFrom(other.PlayerInfo);
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 18: {
          if (playerInfo_ == null) {
            PlayerInfo = new global::MsgChatPlayerInfo();
          }
          input.ReadMessage(PlayerInfo);
          break;
        }
        case 26: {
          Message = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 18: {
          if (playerInfo_ == null) {
            PlayerInfo = new global::MsgChatPlayerInfo();
          }
          input.ReadMessage(PlayerInfo);
          break;
        }
        case 26: {
          Message = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///聊天玩家数据
/// </summary>
public sealed partial class MsgChatPlayerInfo : pb::IMessage<MsgChatPlayerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgChatPlayerInfo> _parser = new pb::MessageParser<MsgChatPlayerInfo>(() => new MsgChatPlayerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgChatPlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatPlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatPlayerInfo(MsgChatPlayerInfo other) : this() {
    userId_ = other.userId_;
    beautifulId_ = other.beautifulId_;
    nickname_ = other.nickname_;
    avatar_ = other.avatar_;
    vipLevel_ = other.vipLevel_;
    avatarFrame_ = other.avatarFrame_;
    clientType_ = other.clientType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatPlayerInfo Clone() {
    return new MsgChatPlayerInfo(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 2;
  private int beautifulId_;
  /// <summary>
  ///玩家靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 3;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 4;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 5;
  private int vipLevel_;
  /// <summary>
  ///VIP等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 6;
  private int avatarFrame_;
  /// <summary>
  ///头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "client_type" field.</summary>
  public const int ClientTypeFieldNumber = 7;
  private int clientType_;
  /// <summary>
  ///包类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ClientType {
    get { return clientType_; }
    set {
      clientType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgChatPlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgChatPlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Nickname != other.Nickname) return false;
    if (Avatar != other.Avatar) return false;
    if (VipLevel != other.VipLevel) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if (ClientType != other.ClientType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    if (ClientType != 0) hash ^= ClientType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Avatar);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(AvatarFrame);
    }
    if (ClientType != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ClientType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Avatar);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(AvatarFrame);
    }
    if (ClientType != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ClientType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    if (ClientType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgChatPlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    if (other.ClientType != 0) {
      ClientType = other.ClientType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 34: {
          Avatar = input.ReadString();
          break;
        }
        case 40: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 48: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 56: {
          ClientType = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 34: {
          Avatar = input.ReadString();
          break;
        }
        case 40: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 48: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 56: {
          ClientType = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///聊天服务器信息
/// </summary>
public sealed partial class MsgChatServerInfo : pb::IMessage<MsgChatServerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgChatServerInfo> _parser = new pb::MessageParser<MsgChatServerInfo>(() => new MsgChatServerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgChatServerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatServerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatServerInfo(MsgChatServerInfo other) : this() {
    ip_ = other.ip_;
    port_ = other.port_;
    serverId_ = other.serverId_;
    onlineNum_ = other.onlineNum_;
    maxPlayer_ = other.maxPlayer_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatServerInfo Clone() {
    return new MsgChatServerInfo(this);
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 1;
  private int ip_;
  /// <summary>
  ///IP
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Ip {
    get { return ip_; }
    set {
      ip_ = value;
    }
  }

  /// <summary>Field number for the "port" field.</summary>
  public const int PortFieldNumber = 2;
  private int port_;
  /// <summary>
  ///端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  /// <summary>Field number for the "server_id" field.</summary>
  public const int ServerIdFieldNumber = 3;
  private int serverId_;
  /// <summary>
  ///服务器ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerId {
    get { return serverId_; }
    set {
      serverId_ = value;
    }
  }

  /// <summary>Field number for the "online_num" field.</summary>
  public const int OnlineNumFieldNumber = 4;
  private int onlineNum_;
  /// <summary>
  ///在线人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OnlineNum {
    get { return onlineNum_; }
    set {
      onlineNum_ = value;
    }
  }

  /// <summary>Field number for the "max_player" field.</summary>
  public const int MaxPlayerFieldNumber = 5;
  private int maxPlayer_;
  /// <summary>
  ///最大人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxPlayer {
    get { return maxPlayer_; }
    set {
      maxPlayer_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgChatServerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgChatServerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ip != other.Ip) return false;
    if (Port != other.Port) return false;
    if (ServerId != other.ServerId) return false;
    if (OnlineNum != other.OnlineNum) return false;
    if (MaxPlayer != other.MaxPlayer) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ip != 0) hash ^= Ip.GetHashCode();
    if (Port != 0) hash ^= Port.GetHashCode();
    if (ServerId != 0) hash ^= ServerId.GetHashCode();
    if (OnlineNum != 0) hash ^= OnlineNum.GetHashCode();
    if (MaxPlayer != 0) hash ^= MaxPlayer.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Ip != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (ServerId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ServerId);
    }
    if (OnlineNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineNum);
    }
    if (MaxPlayer != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(MaxPlayer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Ip != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (ServerId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ServerId);
    }
    if (OnlineNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineNum);
    }
    if (MaxPlayer != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(MaxPlayer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ip != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ip);
    }
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (ServerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
    }
    if (OnlineNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineNum);
    }
    if (MaxPlayer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayer);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgChatServerInfo other) {
    if (other == null) {
      return;
    }
    if (other.Ip != 0) {
      Ip = other.Ip;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    if (other.ServerId != 0) {
      ServerId = other.ServerId;
    }
    if (other.OnlineNum != 0) {
      OnlineNum = other.OnlineNum;
    }
    if (other.MaxPlayer != 0) {
      MaxPlayer = other.MaxPlayer;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ip = input.ReadInt32();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
        case 24: {
          ServerId = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineNum = input.ReadInt32();
          break;
        }
        case 40: {
          MaxPlayer = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ip = input.ReadInt32();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
        case 24: {
          ServerId = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineNum = input.ReadInt32();
          break;
        }
        case 40: {
          MaxPlayer = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///聊天服务器列表
/// </summary>
public sealed partial class MsgChatServerList : pb::IMessage<MsgChatServerList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgChatServerList> _parser = new pb::MessageParser<MsgChatServerList>(() => new MsgChatServerList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgChatServerList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatServerList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatServerList(MsgChatServerList other) : this() {
    chatServerList_ = other.chatServerList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgChatServerList Clone() {
    return new MsgChatServerList(this);
  }

  /// <summary>Field number for the "chat_server_list" field.</summary>
  public const int ChatServerListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgChatServerInfo> _repeated_chatServerList_codec
      = pb::FieldCodec.ForMessage(10, global::MsgChatServerInfo.Parser);
  private readonly pbc::RepeatedField<global::MsgChatServerInfo> chatServerList_ = new pbc::RepeatedField<global::MsgChatServerInfo>();
  /// <summary>
  ///服务器列表 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgChatServerInfo> ChatServerList {
    get { return chatServerList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgChatServerList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgChatServerList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!chatServerList_.Equals(other.chatServerList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= chatServerList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    chatServerList_.WriteTo(output, _repeated_chatServerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    chatServerList_.WriteTo(ref output, _repeated_chatServerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += chatServerList_.CalculateSize(_repeated_chatServerList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgChatServerList other) {
    if (other == null) {
      return;
    }
    chatServerList_.Add(other.chatServerList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          chatServerList_.AddEntriesFrom(input, _repeated_chatServerList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          chatServerList_.AddEntriesFrom(ref input, _repeated_chatServerList_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
