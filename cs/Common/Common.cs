// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/Common/Common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Proto/Common/Common.proto</summary>
public static partial class CommonReflection {

  #region Descriptor
  /// <summary>File descriptor for Proto/Common/Common.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CommonReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChlQcm90by9Db21tb24vQ29tbW9uLnByb3RvIh4KDU1zZ0NvbW1vbkJvb2wS",
          "DQoFdmFsdWUYASABKAgiHQoMTXNnQ29tbW9uTjMyEg0KBXZhbHVlGAEgASgF",
          "Ih0KDE1zZ0NvbW1vbk42NBINCgV2YWx1ZRgBIAEoAyIdCgxNc2dDb21tb25T",
          "dHISDQoFdmFsdWUYASABKAkioQEKEU1zZ0dhbWVTZXJ2ZXJJbmZvEgoKAmlw",
          "GAEgASgFEgwKBHBvcnQYAiABKAUSEQoJc2VydmVyX2lkGAMgASgFEhIKCm9u",
          "bGluZV9udW0YBCABKAUSDwoHa2luZF9pZBgFIAEoBRISCgpyb29tX2xldmVs",
          "GAYgASgFEhIKCmxpbWl0X2dvbGQYByABKAUSEgoKbWF4X3BsYXllchgIIAEo",
          "BSJBChFNc2dHYW1lU2VydmVyTGlzdBIsChBnYW1lX3NlcnZlcl9saXN0GAEg",
          "AygLMhIuTXNnR2FtZVNlcnZlckluZm9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonBool), global::MsgCommonBool.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonN32), global::MsgCommonN32.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonN64), global::MsgCommonN64.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonStr), global::MsgCommonStr.Parser, new[]{ "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGameServerInfo), global::MsgGameServerInfo.Parser, new[]{ "Ip", "Port", "ServerId", "OnlineNum", "KindId", "RoomLevel", "LimitGold", "MaxPlayer" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGameServerList), global::MsgGameServerList.Parser, new[]{ "GameServerList" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MsgCommonBool : pb::IMessage<MsgCommonBool>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonBool> _parser = new pb::MessageParser<MsgCommonBool>(() => new MsgCommonBool());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonBool> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonBool() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonBool(MsgCommonBool other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonBool Clone() {
    return new MsgCommonBool(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private bool value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonBool);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonBool other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != false) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != false) {
      output.WriteRawTag(8);
      output.WriteBool(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != false) {
      output.WriteRawTag(8);
      output.WriteBool(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonBool other) {
    if (other == null) {
      return;
    }
    if (other.Value != false) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonN32 : pb::IMessage<MsgCommonN32>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonN32> _parser = new pb::MessageParser<MsgCommonN32>(() => new MsgCommonN32());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonN32> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN32() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN32(MsgCommonN32 other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN32 Clone() {
    return new MsgCommonN32(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private int value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonN32);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonN32 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonN32 other) {
    if (other == null) {
      return;
    }
    if (other.Value != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonN64 : pb::IMessage<MsgCommonN64>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonN64> _parser = new pb::MessageParser<MsgCommonN64>(() => new MsgCommonN64());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonN64> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN64() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN64(MsgCommonN64 other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonN64 Clone() {
    return new MsgCommonN64(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private long value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonN64);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonN64 other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value != 0L) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonN64 other) {
    if (other == null) {
      return;
    }
    if (other.Value != 0L) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Value = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Value = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonStr : pb::IMessage<MsgCommonStr>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonStr> _parser = new pb::MessageParser<MsgCommonStr>(() => new MsgCommonStr());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonStr> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonStr() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonStr(MsgCommonStr other) : this() {
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonStr Clone() {
    return new MsgCommonStr(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 1;
  private string value_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Value {
    get { return value_; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonStr);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonStr other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Value.Length != 0) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Value.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Value.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Value.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonStr other) {
    if (other == null) {
      return;
    }
    if (other.Value.Length != 0) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Value = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Value = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgGameServerInfo : pb::IMessage<MsgGameServerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGameServerInfo> _parser = new pb::MessageParser<MsgGameServerInfo>(() => new MsgGameServerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGameServerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerInfo(MsgGameServerInfo other) : this() {
    ip_ = other.ip_;
    port_ = other.port_;
    serverId_ = other.serverId_;
    onlineNum_ = other.onlineNum_;
    kindId_ = other.kindId_;
    roomLevel_ = other.roomLevel_;
    limitGold_ = other.limitGold_;
    maxPlayer_ = other.maxPlayer_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerInfo Clone() {
    return new MsgGameServerInfo(this);
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 1;
  private int ip_;
  /// <summary>
  ///IP
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Ip {
    get { return ip_; }
    set {
      ip_ = value;
    }
  }

  /// <summary>Field number for the "port" field.</summary>
  public const int PortFieldNumber = 2;
  private int port_;
  /// <summary>
  ///端口
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Port {
    get { return port_; }
    set {
      port_ = value;
    }
  }

  /// <summary>Field number for the "server_id" field.</summary>
  public const int ServerIdFieldNumber = 3;
  private int serverId_;
  /// <summary>
  ///服务器ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ServerId {
    get { return serverId_; }
    set {
      serverId_ = value;
    }
  }

  /// <summary>Field number for the "online_num" field.</summary>
  public const int OnlineNumFieldNumber = 4;
  private int onlineNum_;
  /// <summary>
  ///在线人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OnlineNum {
    get { return onlineNum_; }
    set {
      onlineNum_ = value;
    }
  }

  /// <summary>Field number for the "kind_id" field.</summary>
  public const int KindIdFieldNumber = 5;
  private int kindId_;
  /// <summary>
  ///kindID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int KindId {
    get { return kindId_; }
    set {
      kindId_ = value;
    }
  }

  /// <summary>Field number for the "room_level" field.</summary>
  public const int RoomLevelFieldNumber = 6;
  private int roomLevel_;
  /// <summary>
  ///房间等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RoomLevel {
    get { return roomLevel_; }
    set {
      roomLevel_ = value;
    }
  }

  /// <summary>Field number for the "limit_gold" field.</summary>
  public const int LimitGoldFieldNumber = 7;
  private int limitGold_;
  /// <summary>
  ///入场金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LimitGold {
    get { return limitGold_; }
    set {
      limitGold_ = value;
    }
  }

  /// <summary>Field number for the "max_player" field.</summary>
  public const int MaxPlayerFieldNumber = 8;
  private int maxPlayer_;
  /// <summary>
  ///最大人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxPlayer {
    get { return maxPlayer_; }
    set {
      maxPlayer_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGameServerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGameServerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ip != other.Ip) return false;
    if (Port != other.Port) return false;
    if (ServerId != other.ServerId) return false;
    if (OnlineNum != other.OnlineNum) return false;
    if (KindId != other.KindId) return false;
    if (RoomLevel != other.RoomLevel) return false;
    if (LimitGold != other.LimitGold) return false;
    if (MaxPlayer != other.MaxPlayer) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Ip != 0) hash ^= Ip.GetHashCode();
    if (Port != 0) hash ^= Port.GetHashCode();
    if (ServerId != 0) hash ^= ServerId.GetHashCode();
    if (OnlineNum != 0) hash ^= OnlineNum.GetHashCode();
    if (KindId != 0) hash ^= KindId.GetHashCode();
    if (RoomLevel != 0) hash ^= RoomLevel.GetHashCode();
    if (LimitGold != 0) hash ^= LimitGold.GetHashCode();
    if (MaxPlayer != 0) hash ^= MaxPlayer.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Ip != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (ServerId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ServerId);
    }
    if (OnlineNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineNum);
    }
    if (KindId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(KindId);
    }
    if (RoomLevel != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(RoomLevel);
    }
    if (LimitGold != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(LimitGold);
    }
    if (MaxPlayer != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(MaxPlayer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Ip != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Ip);
    }
    if (Port != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Port);
    }
    if (ServerId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ServerId);
    }
    if (OnlineNum != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineNum);
    }
    if (KindId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(KindId);
    }
    if (RoomLevel != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(RoomLevel);
    }
    if (LimitGold != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(LimitGold);
    }
    if (MaxPlayer != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(MaxPlayer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Ip != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ip);
    }
    if (Port != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
    }
    if (ServerId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerId);
    }
    if (OnlineNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineNum);
    }
    if (KindId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(KindId);
    }
    if (RoomLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomLevel);
    }
    if (LimitGold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitGold);
    }
    if (MaxPlayer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayer);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGameServerInfo other) {
    if (other == null) {
      return;
    }
    if (other.Ip != 0) {
      Ip = other.Ip;
    }
    if (other.Port != 0) {
      Port = other.Port;
    }
    if (other.ServerId != 0) {
      ServerId = other.ServerId;
    }
    if (other.OnlineNum != 0) {
      OnlineNum = other.OnlineNum;
    }
    if (other.KindId != 0) {
      KindId = other.KindId;
    }
    if (other.RoomLevel != 0) {
      RoomLevel = other.RoomLevel;
    }
    if (other.LimitGold != 0) {
      LimitGold = other.LimitGold;
    }
    if (other.MaxPlayer != 0) {
      MaxPlayer = other.MaxPlayer;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ip = input.ReadInt32();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
        case 24: {
          ServerId = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineNum = input.ReadInt32();
          break;
        }
        case 40: {
          KindId = input.ReadInt32();
          break;
        }
        case 48: {
          RoomLevel = input.ReadInt32();
          break;
        }
        case 56: {
          LimitGold = input.ReadInt32();
          break;
        }
        case 64: {
          MaxPlayer = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ip = input.ReadInt32();
          break;
        }
        case 16: {
          Port = input.ReadInt32();
          break;
        }
        case 24: {
          ServerId = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineNum = input.ReadInt32();
          break;
        }
        case 40: {
          KindId = input.ReadInt32();
          break;
        }
        case 48: {
          RoomLevel = input.ReadInt32();
          break;
        }
        case 56: {
          LimitGold = input.ReadInt32();
          break;
        }
        case 64: {
          MaxPlayer = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgGameServerList : pb::IMessage<MsgGameServerList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGameServerList> _parser = new pb::MessageParser<MsgGameServerList>(() => new MsgGameServerList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGameServerList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CommonReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerList(MsgGameServerList other) : this() {
    gameServerList_ = other.gameServerList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGameServerList Clone() {
    return new MsgGameServerList(this);
  }

  /// <summary>Field number for the "game_server_list" field.</summary>
  public const int GameServerListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgGameServerInfo> _repeated_gameServerList_codec
      = pb::FieldCodec.ForMessage(10, global::MsgGameServerInfo.Parser);
  private readonly pbc::RepeatedField<global::MsgGameServerInfo> gameServerList_ = new pbc::RepeatedField<global::MsgGameServerInfo>();
  /// <summary>
  ///服务器列表 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgGameServerInfo> GameServerList {
    get { return gameServerList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGameServerList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGameServerList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!gameServerList_.Equals(other.gameServerList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= gameServerList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    gameServerList_.WriteTo(output, _repeated_gameServerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    gameServerList_.WriteTo(ref output, _repeated_gameServerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += gameServerList_.CalculateSize(_repeated_gameServerList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGameServerList other) {
    if (other == null) {
      return;
    }
    gameServerList_.Add(other.gameServerList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          gameServerList_.AddEntriesFrom(input, _repeated_gameServerList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          gameServerList_.AddEntriesFrom(ref input, _repeated_gameServerList_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
