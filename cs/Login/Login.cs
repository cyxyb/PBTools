// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/Login/Login.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Proto/Login/Login.proto</summary>
public static partial class LoginReflection {

  #region Descriptor
  /// <summary>File descriptor for Proto/Login/Login.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LoginReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChdQcm90by9Mb2dpbi9Mb2dpbi5wcm90byL8AQoOTXNnUGxheWVyTG9naW4S",
          "DwoHYWNjb3VudBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRITCgtwbGF0Zm9y",
          "bV9pZBgDIAEoBRISCgpjaGFubmVsX2lkGAQgASgFEhMKC2NsaWVudF90eXBl",
          "GAUgASgFEhIKCmxvZ2luX3R5cGUYBiABKAUSEwoLbWFjaGluZV9udW0YByAB",
          "KAkSDwoHdXNlcl9pcBgIIAEoCRIQCghpc19kcmFpbhgJIAEoCBIOCgZhdmF0",
          "YXIYCiABKAkSEAoIbmlja25hbWUYCyABKAkSDQoFcGhvbmUYDCABKAkSDAoE",
          "Y29kZRgNIAEoBSLeAQoSTXNnUGxheWVyTG9naW5SZXNwEhAKCHJlc19jb2Rl",
          "GAEgASgFEg8KB3VzZXJfaWQYAiABKAUSFAoMYmVhdXRpZnVsX2lkGAMgASgF",
          "Eg8KB2FjY291bnQYBCABKAkSEAoIbmlja25hbWUYBSABKAkSDgoGYXZhdGFy",
          "GAYgASgJEhYKDmZpcnN0X3JlY2hhcmdlGAcgASgIEhEKCXVzZXJfdHlwZRgI",
          "IAEoBRIQCghpc19kcmFpbhgJIAEoCBIMCgRjb2luGAogASgEEhEKCXBob25l",
          "X251bRgLIAEoCSI/ChFNc2dNb2RpZnlQYXNzd29yZBIUCgxvbGRfcGFzc3dv",
          "cmQYASABKAkSFAoMbmV3X3Bhc3N3b3JkGAIgASgJIkEKDE1zZ0JpbmRQaG9u",
          "ZRIMCgRjb2RlGAEgASgFEhEKCXBob25lX251bRgCIAEoCRIQCghwYXNzd29y",
          "ZBgDIAEoCSIjCgtNc2dDb21tb25LVhIJCgFrGAEgASgFEgkKAXYYAiABKAUi",
          "aQoOTXNnQ2hlY2tJbkluZm8SEgoKY2hlY2tfZGF5cxgBIAEoBRIPCgdpc19v",
          "cGVuGAIgASgIEhAKCGNhbl9waWNrGAMgASgIEiAKCkNoZWNrSW5DZmcYBCAD",
          "KAsyDC5Nc2dDb21tb25LViJkChdNc2dUdXJudGFibGVIaXN0b3J5RGF0YRIP",
          "Cgd1c2VyX2lkGAEgASgFEg0KBXNjb3JlGAIgASgFEg0KBWF3YXJkGAMgASgF",
          "EgwKBHR5cGUYBCABKAUSDAoEdGltZRgFIAEoCSKrAQoQTXNnVHVybnRhYmxl",
          "RGF0YRIQCghwbGF5X251bRgBIAEoBRINCgVzY29yZRgCIAEoBRISCgpuZWVk",
          "X3Njb3JlGAMgASgFEhIKCmxpbWl0X3R1cm4YBCABKAUSIwoNdHVybnRhYmxl",
          "X2NmZxgFIAMoCzIMLk1zZ0NvbW1vbktWEikKB2hpc3RvcnkYBiADKAsyGC5N",
          "c2dUdXJudGFibGVIaXN0b3J5RGF0YSIrCgxNc2dNYWlsc0luZm8SGwoFbWFp",
          "bHMYASADKAsyDC5Nc2dNYWlsRGF0YSKSAQoLTXNnTWFpbERhdGESDgoGbWFp",
          "bElkGAEgASgFEhIKCnNlbmRVc2VySWQYAiABKAUSEAoIc2VuZFRpbWUYAyAB",
          "KAUSDQoFdGl0bGUYBCABKAkSDwoHY29udGVudBgFIAEoCRIMCgRnb2xkGAYg",
          "ASgDEg4KBmlzUmVhZBgHIAEoCBIPCgdpc0NsYWltGAggASgIIjQKDE1zZ1No",
          "YXJlRGF0YRISCgppbnZpdGVDb2RlGAEgASgJEhAKCGJpbmRMaXN0GAIgAygF",
          "IiQKEU1zZ0JpbmRQYXJlbnREYXRhEg8KB3N0ckNvZGUYASABKAkiYwoSTXNn",
          "SW52aXRlQXdhcmRJbmZvEhEKCWludml0ZU51bRgBIAEoBRIRCglwaWNrSW5k",
          "ZXgYAiABKAUSJwoIYXdhcmRDZmcYAyADKAsyFS5Nc2dJbnZpdGVBd2FyZENv",
          "bmZpZyI4ChRNc2dJbnZpdGVBd2FyZENvbmZpZxIRCglpbnZpdGVOdW0YASAB",
          "KAUSDQoFYXdhcmQYAiABKAUidwoPTXNnUmVjaGFyZ2VJbmZvEhEKCWludml0",
          "ZU51bRgBIAEoBRISCgp0b2RheUF3YXJkGAIgASgDEhIKCnRvdGFsQXdhcmQY",
          "AyABKAMSFQoNY2FuUGlja0Ftb3VudBgEIAEoAxISCgppbnZpdGVDb2RlGAUg",
          "ASgJIkwKGE1zZ1F1ZXJ5UmViYXRlUmVjb3JkSW5mbxIwChFxdWVyeVJlYmF0",
          "ZVJlY29yZBgBIAMoCzIVLk1zZ1F1ZXJ5UmViYXRlUmVjb3JkIlYKFE1zZ1F1",
          "ZXJ5UmViYXRlUmVjb3JkEhYKDnJlY2hhcmdlVXNlcklkGAEgASgFEhYKDnJl",
          "Y2hhcmdlQW1vdW50GAIgASgFEg4KBnJlYmF0ZRgDIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerLogin), global::MsgPlayerLogin.Parser, new[]{ "Account", "Password", "PlatformId", "ChannelId", "ClientType", "LoginType", "MachineNum", "UserIp", "IsDrain", "Avatar", "Nickname", "Phone", "Code" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerLoginResp), global::MsgPlayerLoginResp.Parser, new[]{ "ResCode", "UserId", "BeautifulId", "Account", "Nickname", "Avatar", "FirstRecharge", "UserType", "IsDrain", "Coin", "PhoneNum" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgModifyPassword), global::MsgModifyPassword.Parser, new[]{ "OldPassword", "NewPassword" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBindPhone), global::MsgBindPhone.Parser, new[]{ "Code", "PhoneNum", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonKV), global::MsgCommonKV.Parser, new[]{ "K", "V" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCheckInInfo), global::MsgCheckInInfo.Parser, new[]{ "CheckDays", "IsOpen", "CanPick", "CheckInCfg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurntableHistoryData), global::MsgTurntableHistoryData.Parser, new[]{ "UserId", "Score", "Award", "Type", "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurntableData), global::MsgTurntableData.Parser, new[]{ "PlayNum", "Score", "NeedScore", "LimitTurn", "TurntableCfg", "History" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgMailsInfo), global::MsgMailsInfo.Parser, new[]{ "Mails" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgMailData), global::MsgMailData.Parser, new[]{ "MailId", "SendUserId", "SendTime", "Title", "Content", "Gold", "IsRead", "IsClaim" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgShareData), global::MsgShareData.Parser, new[]{ "InviteCode", "BindList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBindParentData), global::MsgBindParentData.Parser, new[]{ "StrCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInviteAwardInfo), global::MsgInviteAwardInfo.Parser, new[]{ "InviteNum", "PickIndex", "AwardCfg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInviteAwardConfig), global::MsgInviteAwardConfig.Parser, new[]{ "InviteNum", "Award" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgRechargeInfo), global::MsgRechargeInfo.Parser, new[]{ "InviteNum", "TodayAward", "TotalAward", "CanPickAmount", "InviteCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgQueryRebateRecordInfo), global::MsgQueryRebateRecordInfo.Parser, new[]{ "QueryRebateRecord" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgQueryRebateRecord), global::MsgQueryRebateRecord.Parser, new[]{ "RechargeUserId", "RechargeAmount", "Rebate" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///玩家登录
/// </summary>
public sealed partial class MsgPlayerLogin : pb::IMessage<MsgPlayerLogin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerLogin> _parser = new pb::MessageParser<MsgPlayerLogin>(() => new MsgPlayerLogin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin(MsgPlayerLogin other) : this() {
    account_ = other.account_;
    password_ = other.password_;
    platformId_ = other.platformId_;
    channelId_ = other.channelId_;
    clientType_ = other.clientType_;
    loginType_ = other.loginType_;
    machineNum_ = other.machineNum_;
    userIp_ = other.userIp_;
    isDrain_ = other.isDrain_;
    avatar_ = other.avatar_;
    nickname_ = other.nickname_;
    phone_ = other.phone_;
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin Clone() {
    return new MsgPlayerLogin(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private string account_ = "";
  /// <summary>
  ///玩家账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  /// <summary>
  ///玩家密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "platform_id" field.</summary>
  public const int PlatformIdFieldNumber = 3;
  private int platformId_;
  /// <summary>
  ///平台id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PlatformId {
    get { return platformId_; }
    set {
      platformId_ = value;
    }
  }

  /// <summary>Field number for the "channel_id" field.</summary>
  public const int ChannelIdFieldNumber = 4;
  private int channelId_;
  /// <summary>
  ///渠道id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChannelId {
    get { return channelId_; }
    set {
      channelId_ = value;
    }
  }

  /// <summary>Field number for the "client_type" field.</summary>
  public const int ClientTypeFieldNumber = 5;
  private int clientType_;
  /// <summary>
  ///包id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ClientType {
    get { return clientType_; }
    set {
      clientType_ = value;
    }
  }

  /// <summary>Field number for the "login_type" field.</summary>
  public const int LoginTypeFieldNumber = 6;
  private int loginType_;
  /// <summary>
  ///1:游客登录 2:账号登录 3:第三方登录 4:注册账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LoginType {
    get { return loginType_; }
    set {
      loginType_ = value;
    }
  }

  /// <summary>Field number for the "machine_num" field.</summary>
  public const int MachineNumFieldNumber = 7;
  private string machineNum_ = "";
  /// <summary>
  ///机器码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MachineNum {
    get { return machineNum_; }
    set {
      machineNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_ip" field.</summary>
  public const int UserIpFieldNumber = 8;
  private string userIp_ = "";
  /// <summary>
  ///玩家IP
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserIp {
    get { return userIp_; }
    set {
      userIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_drain" field.</summary>
  public const int IsDrainFieldNumber = 9;
  private bool isDrain_;
  /// <summary>
  ///是否引流量 0:不是 1:是
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsDrain {
    get { return isDrain_; }
    set {
      isDrain_ = value;
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 10;
  private string avatar_ = "";
  /// <summary>
  ///头像(第三方登录时需要)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 11;
  private string nickname_ = "";
  /// <summary>
  ///昵称(第三方登录时需要)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 12;
  private string phone_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 13;
  private int code_;
  /// <summary>
  ///验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (Password != other.Password) return false;
    if (PlatformId != other.PlatformId) return false;
    if (ChannelId != other.ChannelId) return false;
    if (ClientType != other.ClientType) return false;
    if (LoginType != other.LoginType) return false;
    if (MachineNum != other.MachineNum) return false;
    if (UserIp != other.UserIp) return false;
    if (IsDrain != other.IsDrain) return false;
    if (Avatar != other.Avatar) return false;
    if (Nickname != other.Nickname) return false;
    if (Phone != other.Phone) return false;
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
    if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
    if (ClientType != 0) hash ^= ClientType.GetHashCode();
    if (LoginType != 0) hash ^= LoginType.GetHashCode();
    if (MachineNum.Length != 0) hash ^= MachineNum.GetHashCode();
    if (UserIp.Length != 0) hash ^= UserIp.GetHashCode();
    if (IsDrain != false) hash ^= IsDrain.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (Code != 0) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (PlatformId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PlatformId);
    }
    if (ChannelId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ChannelId);
    }
    if (ClientType != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientType);
    }
    if (LoginType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LoginType);
    }
    if (MachineNum.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(MachineNum);
    }
    if (UserIp.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(UserIp);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Avatar);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Nickname);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (PlatformId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PlatformId);
    }
    if (ChannelId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ChannelId);
    }
    if (ClientType != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientType);
    }
    if (LoginType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LoginType);
    }
    if (MachineNum.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(MachineNum);
    }
    if (UserIp.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(UserIp);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Avatar);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Nickname);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (PlatformId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
    }
    if (ChannelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
    }
    if (ClientType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientType);
    }
    if (LoginType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoginType);
    }
    if (MachineNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineNum);
    }
    if (UserIp.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIp);
    }
    if (IsDrain != false) {
      size += 1 + 1;
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerLogin other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.PlatformId != 0) {
      PlatformId = other.PlatformId;
    }
    if (other.ChannelId != 0) {
      ChannelId = other.ChannelId;
    }
    if (other.ClientType != 0) {
      ClientType = other.ClientType;
    }
    if (other.LoginType != 0) {
      LoginType = other.LoginType;
    }
    if (other.MachineNum.Length != 0) {
      MachineNum = other.MachineNum;
    }
    if (other.UserIp.Length != 0) {
      UserIp = other.UserIp;
    }
    if (other.IsDrain != false) {
      IsDrain = other.IsDrain;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 24: {
          PlatformId = input.ReadInt32();
          break;
        }
        case 32: {
          ChannelId = input.ReadInt32();
          break;
        }
        case 40: {
          ClientType = input.ReadInt32();
          break;
        }
        case 48: {
          LoginType = input.ReadInt32();
          break;
        }
        case 58: {
          MachineNum = input.ReadString();
          break;
        }
        case 66: {
          UserIp = input.ReadString();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 82: {
          Avatar = input.ReadString();
          break;
        }
        case 90: {
          Nickname = input.ReadString();
          break;
        }
        case 98: {
          Phone = input.ReadString();
          break;
        }
        case 104: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 24: {
          PlatformId = input.ReadInt32();
          break;
        }
        case 32: {
          ChannelId = input.ReadInt32();
          break;
        }
        case 40: {
          ClientType = input.ReadInt32();
          break;
        }
        case 48: {
          LoginType = input.ReadInt32();
          break;
        }
        case 58: {
          MachineNum = input.ReadString();
          break;
        }
        case 66: {
          UserIp = input.ReadString();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 82: {
          Avatar = input.ReadString();
          break;
        }
        case 90: {
          Nickname = input.ReadString();
          break;
        }
        case 98: {
          Phone = input.ReadString();
          break;
        }
        case 104: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家登录返回
/// </summary>
public sealed partial class MsgPlayerLoginResp : pb::IMessage<MsgPlayerLoginResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerLoginResp> _parser = new pb::MessageParser<MsgPlayerLoginResp>(() => new MsgPlayerLoginResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerLoginResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp(MsgPlayerLoginResp other) : this() {
    resCode_ = other.resCode_;
    userId_ = other.userId_;
    beautifulId_ = other.beautifulId_;
    account_ = other.account_;
    nickname_ = other.nickname_;
    avatar_ = other.avatar_;
    firstRecharge_ = other.firstRecharge_;
    userType_ = other.userType_;
    isDrain_ = other.isDrain_;
    coin_ = other.coin_;
    phoneNum_ = other.phoneNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp Clone() {
    return new MsgPlayerLoginResp(this);
  }

  /// <summary>Field number for the "res_code" field.</summary>
  public const int ResCodeFieldNumber = 1;
  private int resCode_;
  /// <summary>
  ///登录返回码(0:成功 非0:失败)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResCode {
    get { return resCode_; }
    set {
      resCode_ = value;
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 3;
  private int beautifulId_;
  /// <summary>
  ///玩家靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 4;
  private string account_ = "";
  /// <summary>
  ///玩家账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 5;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 6;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "first_recharge" field.</summary>
  public const int FirstRechargeFieldNumber = 7;
  private bool firstRecharge_;
  /// <summary>
  ///是否首充
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool FirstRecharge {
    get { return firstRecharge_; }
    set {
      firstRecharge_ = value;
    }
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 8;
  private int userType_;
  /// <summary>
  ///玩家类型(0:普通玩家 1:VIP)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "is_drain" field.</summary>
  public const int IsDrainFieldNumber = 9;
  private bool isDrain_;
  /// <summary>
  ///是否引流量 0:不是 1:是
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsDrain {
    get { return isDrain_; }
    set {
      isDrain_ = value;
    }
  }

  /// <summary>Field number for the "coin" field.</summary>
  public const int CoinFieldNumber = 10;
  private ulong coin_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Coin {
    get { return coin_; }
    set {
      coin_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 11;
  private string phoneNum_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerLoginResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerLoginResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResCode != other.ResCode) return false;
    if (UserId != other.UserId) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Account != other.Account) return false;
    if (Nickname != other.Nickname) return false;
    if (Avatar != other.Avatar) return false;
    if (FirstRecharge != other.FirstRecharge) return false;
    if (UserType != other.UserType) return false;
    if (IsDrain != other.IsDrain) return false;
    if (Coin != other.Coin) return false;
    if (PhoneNum != other.PhoneNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ResCode != 0) hash ^= ResCode.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (FirstRecharge != false) hash ^= FirstRecharge.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (IsDrain != false) hash ^= IsDrain.GetHashCode();
    if (Coin != 0UL) hash ^= Coin.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Account.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Account);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Avatar);
    }
    if (FirstRecharge != false) {
      output.WriteRawTag(56);
      output.WriteBool(FirstRecharge);
    }
    if (UserType != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(UserType);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(PhoneNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Account.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Account);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Avatar);
    }
    if (FirstRecharge != false) {
      output.WriteRawTag(56);
      output.WriteBool(FirstRecharge);
    }
    if (UserType != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(UserType);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(PhoneNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ResCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResCode);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (FirstRecharge != false) {
      size += 1 + 1;
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
    }
    if (IsDrain != false) {
      size += 1 + 1;
    }
    if (Coin != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Coin);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerLoginResp other) {
    if (other == null) {
      return;
    }
    if (other.ResCode != 0) {
      ResCode = other.ResCode;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.FirstRecharge != false) {
      FirstRecharge = other.FirstRecharge;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.IsDrain != false) {
      IsDrain = other.IsDrain;
    }
    if (other.Coin != 0UL) {
      Coin = other.Coin;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Account = input.ReadString();
          break;
        }
        case 42: {
          Nickname = input.ReadString();
          break;
        }
        case 50: {
          Avatar = input.ReadString();
          break;
        }
        case 56: {
          FirstRecharge = input.ReadBool();
          break;
        }
        case 64: {
          UserType = input.ReadInt32();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 80: {
          Coin = input.ReadUInt64();
          break;
        }
        case 90: {
          PhoneNum = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Account = input.ReadString();
          break;
        }
        case 42: {
          Nickname = input.ReadString();
          break;
        }
        case 50: {
          Avatar = input.ReadString();
          break;
        }
        case 56: {
          FirstRecharge = input.ReadBool();
          break;
        }
        case 64: {
          UserType = input.ReadInt32();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 80: {
          Coin = input.ReadUInt64();
          break;
        }
        case 90: {
          PhoneNum = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///修改密码
/// </summary>
public sealed partial class MsgModifyPassword : pb::IMessage<MsgModifyPassword>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgModifyPassword> _parser = new pb::MessageParser<MsgModifyPassword>(() => new MsgModifyPassword());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgModifyPassword> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword(MsgModifyPassword other) : this() {
    oldPassword_ = other.oldPassword_;
    newPassword_ = other.newPassword_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword Clone() {
    return new MsgModifyPassword(this);
  }

  /// <summary>Field number for the "old_password" field.</summary>
  public const int OldPasswordFieldNumber = 1;
  private string oldPassword_ = "";
  /// <summary>
  ///旧密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OldPassword {
    get { return oldPassword_; }
    set {
      oldPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "new_password" field.</summary>
  public const int NewPasswordFieldNumber = 2;
  private string newPassword_ = "";
  /// <summary>
  ///新密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPassword {
    get { return newPassword_; }
    set {
      newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgModifyPassword);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgModifyPassword other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OldPassword != other.OldPassword) return false;
    if (NewPassword != other.NewPassword) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OldPassword.Length != 0) hash ^= OldPassword.GetHashCode();
    if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (OldPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(OldPassword);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (OldPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(OldPassword);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OldPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPassword);
    }
    if (NewPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgModifyPassword other) {
    if (other == null) {
      return;
    }
    if (other.OldPassword.Length != 0) {
      OldPassword = other.OldPassword;
    }
    if (other.NewPassword.Length != 0) {
      NewPassword = other.NewPassword;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          OldPassword = input.ReadString();
          break;
        }
        case 18: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          OldPassword = input.ReadString();
          break;
        }
        case 18: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///绑定手机
/// </summary>
public sealed partial class MsgBindPhone : pb::IMessage<MsgBindPhone>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBindPhone> _parser = new pb::MessageParser<MsgBindPhone>(() => new MsgBindPhone());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBindPhone> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone(MsgBindPhone other) : this() {
    code_ = other.code_;
    phoneNum_ = other.phoneNum_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone Clone() {
    return new MsgBindPhone(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private int code_;
  /// <summary>
  ///验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 2;
  private string phoneNum_ = "";
  /// <summary>
  ///手机号码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 3;
  private string password_ = "";
  /// <summary>
  ///密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBindPhone);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBindPhone other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (PhoneNum != other.PhoneNum) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PhoneNum);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PhoneNum);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBindPhone other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          PhoneNum = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          PhoneNum = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonKV : pb::IMessage<MsgCommonKV>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonKV> _parser = new pb::MessageParser<MsgCommonKV>(() => new MsgCommonKV());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonKV> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonKV() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonKV(MsgCommonKV other) : this() {
    k_ = other.k_;
    v_ = other.v_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonKV Clone() {
    return new MsgCommonKV(this);
  }

  /// <summary>Field number for the "k" field.</summary>
  public const int KFieldNumber = 1;
  private int k_;
  /// <summary>
  ///key
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int K {
    get { return k_; }
    set {
      k_ = value;
    }
  }

  /// <summary>Field number for the "v" field.</summary>
  public const int VFieldNumber = 2;
  private int v_;
  /// <summary>
  ///value
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int V {
    get { return v_; }
    set {
      v_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonKV);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonKV other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (K != other.K) return false;
    if (V != other.V) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (K != 0) hash ^= K.GetHashCode();
    if (V != 0) hash ^= V.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (K != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(K);
    }
    if (V != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(V);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (K != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(K);
    }
    if (V != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(V);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (K != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(K);
    }
    if (V != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(V);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonKV other) {
    if (other == null) {
      return;
    }
    if (other.K != 0) {
      K = other.K;
    }
    if (other.V != 0) {
      V = other.V;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          K = input.ReadInt32();
          break;
        }
        case 16: {
          V = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          K = input.ReadInt32();
          break;
        }
        case 16: {
          V = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///签到信息返回
/// </summary>
public sealed partial class MsgCheckInInfo : pb::IMessage<MsgCheckInInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCheckInInfo> _parser = new pb::MessageParser<MsgCheckInInfo>(() => new MsgCheckInInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCheckInInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCheckInInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCheckInInfo(MsgCheckInInfo other) : this() {
    checkDays_ = other.checkDays_;
    isOpen_ = other.isOpen_;
    canPick_ = other.canPick_;
    checkInCfg_ = other.checkInCfg_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCheckInInfo Clone() {
    return new MsgCheckInInfo(this);
  }

  /// <summary>Field number for the "check_days" field.</summary>
  public const int CheckDaysFieldNumber = 1;
  private int checkDays_;
  /// <summary>
  ///已签到天数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CheckDays {
    get { return checkDays_; }
    set {
      checkDays_ = value;
    }
  }

  /// <summary>Field number for the "is_open" field.</summary>
  public const int IsOpenFieldNumber = 2;
  private bool isOpen_;
  /// <summary>
  ///活动是否开启
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsOpen {
    get { return isOpen_; }
    set {
      isOpen_ = value;
    }
  }

  /// <summary>Field number for the "can_pick" field.</summary>
  public const int CanPickFieldNumber = 3;
  private bool canPick_;
  /// <summary>
  ///是否可以领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CanPick {
    get { return canPick_; }
    set {
      canPick_ = value;
    }
  }

  /// <summary>Field number for the "CheckInCfg" field.</summary>
  public const int CheckInCfgFieldNumber = 4;
  private static readonly pb::FieldCodec<global::MsgCommonKV> _repeated_checkInCfg_codec
      = pb::FieldCodec.ForMessage(34, global::MsgCommonKV.Parser);
  private readonly pbc::RepeatedField<global::MsgCommonKV> checkInCfg_ = new pbc::RepeatedField<global::MsgCommonKV>();
  /// <summary>
  ///签到配置(k:天数 v:奖励)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgCommonKV> CheckInCfg {
    get { return checkInCfg_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCheckInInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCheckInInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CheckDays != other.CheckDays) return false;
    if (IsOpen != other.IsOpen) return false;
    if (CanPick != other.CanPick) return false;
    if(!checkInCfg_.Equals(other.checkInCfg_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CheckDays != 0) hash ^= CheckDays.GetHashCode();
    if (IsOpen != false) hash ^= IsOpen.GetHashCode();
    if (CanPick != false) hash ^= CanPick.GetHashCode();
    hash ^= checkInCfg_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (CheckDays != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CheckDays);
    }
    if (IsOpen != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsOpen);
    }
    if (CanPick != false) {
      output.WriteRawTag(24);
      output.WriteBool(CanPick);
    }
    checkInCfg_.WriteTo(output, _repeated_checkInCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (CheckDays != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CheckDays);
    }
    if (IsOpen != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsOpen);
    }
    if (CanPick != false) {
      output.WriteRawTag(24);
      output.WriteBool(CanPick);
    }
    checkInCfg_.WriteTo(ref output, _repeated_checkInCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CheckDays != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CheckDays);
    }
    if (IsOpen != false) {
      size += 1 + 1;
    }
    if (CanPick != false) {
      size += 1 + 1;
    }
    size += checkInCfg_.CalculateSize(_repeated_checkInCfg_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCheckInInfo other) {
    if (other == null) {
      return;
    }
    if (other.CheckDays != 0) {
      CheckDays = other.CheckDays;
    }
    if (other.IsOpen != false) {
      IsOpen = other.IsOpen;
    }
    if (other.CanPick != false) {
      CanPick = other.CanPick;
    }
    checkInCfg_.Add(other.checkInCfg_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CheckDays = input.ReadInt32();
          break;
        }
        case 16: {
          IsOpen = input.ReadBool();
          break;
        }
        case 24: {
          CanPick = input.ReadBool();
          break;
        }
        case 34: {
          checkInCfg_.AddEntriesFrom(input, _repeated_checkInCfg_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CheckDays = input.ReadInt32();
          break;
        }
        case 16: {
          IsOpen = input.ReadBool();
          break;
        }
        case 24: {
          CanPick = input.ReadBool();
          break;
        }
        case 34: {
          checkInCfg_.AddEntriesFrom(ref input, _repeated_checkInCfg_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///转盘信息
/// </summary>
public sealed partial class MsgTurntableHistoryData : pb::IMessage<MsgTurntableHistoryData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurntableHistoryData> _parser = new pb::MessageParser<MsgTurntableHistoryData>(() => new MsgTurntableHistoryData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurntableHistoryData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableHistoryData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableHistoryData(MsgTurntableHistoryData other) : this() {
    userId_ = other.userId_;
    score_ = other.score_;
    award_ = other.award_;
    type_ = other.type_;
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableHistoryData Clone() {
    return new MsgTurntableHistoryData(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 2;
  private int score_;
  /// <summary>
  ///使用积分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "award" field.</summary>
  public const int AwardFieldNumber = 3;
  private int award_;
  /// <summary>
  ///转盘奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Award {
    get { return award_; }
    set {
      award_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 4;
  private int type_;
  /// <summary>
  ///类型(0:个人 1:大赢家)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 5;
  private string time_ = "";
  /// <summary>
  ///时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Time {
    get { return time_; }
    set {
      time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurntableHistoryData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurntableHistoryData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Score != other.Score) return false;
    if (Award != other.Award) return false;
    if (Type != other.Type) return false;
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (Score != 0) hash ^= Score.GetHashCode();
    if (Award != 0) hash ^= Award.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Time.Length != 0) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Score != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (Award != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Award);
    }
    if (Type != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Type);
    }
    if (Time.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Score != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (Award != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Award);
    }
    if (Type != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Type);
    }
    if (Time.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    if (Award != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Time.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurntableHistoryData other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    if (other.Award != 0) {
      Award = other.Award;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Time.Length != 0) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
        case 24: {
          Award = input.ReadInt32();
          break;
        }
        case 32: {
          Type = input.ReadInt32();
          break;
        }
        case 42: {
          Time = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
        case 24: {
          Award = input.ReadInt32();
          break;
        }
        case 32: {
          Type = input.ReadInt32();
          break;
        }
        case 42: {
          Time = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///转盘信息
/// </summary>
public sealed partial class MsgTurntableData : pb::IMessage<MsgTurntableData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurntableData> _parser = new pb::MessageParser<MsgTurntableData>(() => new MsgTurntableData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurntableData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableData(MsgTurntableData other) : this() {
    playNum_ = other.playNum_;
    score_ = other.score_;
    needScore_ = other.needScore_;
    limitTurn_ = other.limitTurn_;
    turntableCfg_ = other.turntableCfg_.Clone();
    history_ = other.history_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableData Clone() {
    return new MsgTurntableData(this);
  }

  /// <summary>Field number for the "play_num" field.</summary>
  public const int PlayNumFieldNumber = 1;
  private int playNum_;
  /// <summary>
  ///已转动次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PlayNum {
    get { return playNum_; }
    set {
      playNum_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 2;
  private int score_;
  /// <summary>
  ///玩家积分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "need_score" field.</summary>
  public const int NeedScoreFieldNumber = 3;
  private int needScore_;
  /// <summary>
  ///转动需要积分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NeedScore {
    get { return needScore_; }
    set {
      needScore_ = value;
    }
  }

  /// <summary>Field number for the "limit_turn" field.</summary>
  public const int LimitTurnFieldNumber = 4;
  private int limitTurn_;
  /// <summary>
  ///转动限制次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LimitTurn {
    get { return limitTurn_; }
    set {
      limitTurn_ = value;
    }
  }

  /// <summary>Field number for the "turntable_cfg" field.</summary>
  public const int TurntableCfgFieldNumber = 5;
  private static readonly pb::FieldCodec<global::MsgCommonKV> _repeated_turntableCfg_codec
      = pb::FieldCodec.ForMessage(42, global::MsgCommonKV.Parser);
  private readonly pbc::RepeatedField<global::MsgCommonKV> turntableCfg_ = new pbc::RepeatedField<global::MsgCommonKV>();
  /// <summary>
  ///转盘配置(k:转盘索引 v:奖励)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgCommonKV> TurntableCfg {
    get { return turntableCfg_; }
  }

  /// <summary>Field number for the "history" field.</summary>
  public const int HistoryFieldNumber = 6;
  private static readonly pb::FieldCodec<global::MsgTurntableHistoryData> _repeated_history_codec
      = pb::FieldCodec.ForMessage(50, global::MsgTurntableHistoryData.Parser);
  private readonly pbc::RepeatedField<global::MsgTurntableHistoryData> history_ = new pbc::RepeatedField<global::MsgTurntableHistoryData>();
  /// <summary>
  ///历史数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgTurntableHistoryData> History {
    get { return history_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurntableData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurntableData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayNum != other.PlayNum) return false;
    if (Score != other.Score) return false;
    if (NeedScore != other.NeedScore) return false;
    if (LimitTurn != other.LimitTurn) return false;
    if(!turntableCfg_.Equals(other.turntableCfg_)) return false;
    if(!history_.Equals(other.history_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayNum != 0) hash ^= PlayNum.GetHashCode();
    if (Score != 0) hash ^= Score.GetHashCode();
    if (NeedScore != 0) hash ^= NeedScore.GetHashCode();
    if (LimitTurn != 0) hash ^= LimitTurn.GetHashCode();
    hash ^= turntableCfg_.GetHashCode();
    hash ^= history_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (PlayNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayNum);
    }
    if (Score != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (NeedScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NeedScore);
    }
    if (LimitTurn != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(LimitTurn);
    }
    turntableCfg_.WriteTo(output, _repeated_turntableCfg_codec);
    history_.WriteTo(output, _repeated_history_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (PlayNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayNum);
    }
    if (Score != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Score);
    }
    if (NeedScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NeedScore);
    }
    if (LimitTurn != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(LimitTurn);
    }
    turntableCfg_.WriteTo(ref output, _repeated_turntableCfg_codec);
    history_.WriteTo(ref output, _repeated_history_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PlayNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayNum);
    }
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    if (NeedScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedScore);
    }
    if (LimitTurn != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitTurn);
    }
    size += turntableCfg_.CalculateSize(_repeated_turntableCfg_codec);
    size += history_.CalculateSize(_repeated_history_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurntableData other) {
    if (other == null) {
      return;
    }
    if (other.PlayNum != 0) {
      PlayNum = other.PlayNum;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    if (other.NeedScore != 0) {
      NeedScore = other.NeedScore;
    }
    if (other.LimitTurn != 0) {
      LimitTurn = other.LimitTurn;
    }
    turntableCfg_.Add(other.turntableCfg_);
    history_.Add(other.history_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PlayNum = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
        case 24: {
          NeedScore = input.ReadInt32();
          break;
        }
        case 32: {
          LimitTurn = input.ReadInt32();
          break;
        }
        case 42: {
          turntableCfg_.AddEntriesFrom(input, _repeated_turntableCfg_codec);
          break;
        }
        case 50: {
          history_.AddEntriesFrom(input, _repeated_history_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PlayNum = input.ReadInt32();
          break;
        }
        case 16: {
          Score = input.ReadInt32();
          break;
        }
        case 24: {
          NeedScore = input.ReadInt32();
          break;
        }
        case 32: {
          LimitTurn = input.ReadInt32();
          break;
        }
        case 42: {
          turntableCfg_.AddEntriesFrom(ref input, _repeated_turntableCfg_codec);
          break;
        }
        case 50: {
          history_.AddEntriesFrom(ref input, _repeated_history_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邮件列表
/// </summary>
public sealed partial class MsgMailsInfo : pb::IMessage<MsgMailsInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgMailsInfo> _parser = new pb::MessageParser<MsgMailsInfo>(() => new MsgMailsInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgMailsInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailsInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailsInfo(MsgMailsInfo other) : this() {
    mails_ = other.mails_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailsInfo Clone() {
    return new MsgMailsInfo(this);
  }

  /// <summary>Field number for the "mails" field.</summary>
  public const int MailsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgMailData> _repeated_mails_codec
      = pb::FieldCodec.ForMessage(10, global::MsgMailData.Parser);
  private readonly pbc::RepeatedField<global::MsgMailData> mails_ = new pbc::RepeatedField<global::MsgMailData>();
  /// <summary>
  ///邮件列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgMailData> Mails {
    get { return mails_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgMailsInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgMailsInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!mails_.Equals(other.mails_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= mails_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    mails_.WriteTo(output, _repeated_mails_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    mails_.WriteTo(ref output, _repeated_mails_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += mails_.CalculateSize(_repeated_mails_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgMailsInfo other) {
    if (other == null) {
      return;
    }
    mails_.Add(other.mails_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          mails_.AddEntriesFrom(input, _repeated_mails_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          mails_.AddEntriesFrom(ref input, _repeated_mails_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邮件信息
/// </summary>
public sealed partial class MsgMailData : pb::IMessage<MsgMailData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgMailData> _parser = new pb::MessageParser<MsgMailData>(() => new MsgMailData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgMailData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailData(MsgMailData other) : this() {
    mailId_ = other.mailId_;
    sendUserId_ = other.sendUserId_;
    sendTime_ = other.sendTime_;
    title_ = other.title_;
    content_ = other.content_;
    gold_ = other.gold_;
    isRead_ = other.isRead_;
    isClaim_ = other.isClaim_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailData Clone() {
    return new MsgMailData(this);
  }

  /// <summary>Field number for the "mailId" field.</summary>
  public const int MailIdFieldNumber = 1;
  private int mailId_;
  /// <summary>
  ///邮件id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MailId {
    get { return mailId_; }
    set {
      mailId_ = value;
    }
  }

  /// <summary>Field number for the "sendUserId" field.</summary>
  public const int SendUserIdFieldNumber = 2;
  private int sendUserId_;
  /// <summary>
  ///发送者ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SendUserId {
    get { return sendUserId_; }
    set {
      sendUserId_ = value;
    }
  }

  /// <summary>Field number for the "sendTime" field.</summary>
  public const int SendTimeFieldNumber = 3;
  private int sendTime_;
  /// <summary>
  ///发送时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SendTime {
    get { return sendTime_; }
    set {
      sendTime_ = value;
    }
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 4;
  private string title_ = "";
  /// <summary>
  ///邮件标题
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Title {
    get { return title_; }
    set {
      title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 5;
  private string content_ = "";
  /// <summary>
  ///邮件内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 6;
  private long gold_;
  /// <summary>
  ///邮件附件(只有金币)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  /// <summary>Field number for the "isRead" field.</summary>
  public const int IsReadFieldNumber = 7;
  private bool isRead_;
  /// <summary>
  ///是否已读
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsRead {
    get { return isRead_; }
    set {
      isRead_ = value;
    }
  }

  /// <summary>Field number for the "isClaim" field.</summary>
  public const int IsClaimFieldNumber = 8;
  private bool isClaim_;
  /// <summary>
  ///是否领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsClaim {
    get { return isClaim_; }
    set {
      isClaim_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgMailData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgMailData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    if (SendUserId != other.SendUserId) return false;
    if (SendTime != other.SendTime) return false;
    if (Title != other.Title) return false;
    if (Content != other.Content) return false;
    if (Gold != other.Gold) return false;
    if (IsRead != other.IsRead) return false;
    if (IsClaim != other.IsClaim) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId != 0) hash ^= MailId.GetHashCode();
    if (SendUserId != 0) hash ^= SendUserId.GetHashCode();
    if (SendTime != 0) hash ^= SendTime.GetHashCode();
    if (Title.Length != 0) hash ^= Title.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (Gold != 0L) hash ^= Gold.GetHashCode();
    if (IsRead != false) hash ^= IsRead.GetHashCode();
    if (IsClaim != false) hash ^= IsClaim.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (MailId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MailId);
    }
    if (SendUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SendUserId);
    }
    if (SendTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SendTime);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Title);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Content);
    }
    if (Gold != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(Gold);
    }
    if (IsRead != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsRead);
    }
    if (IsClaim != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsClaim);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (MailId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MailId);
    }
    if (SendUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SendUserId);
    }
    if (SendTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SendTime);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Title);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Content);
    }
    if (Gold != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(Gold);
    }
    if (IsRead != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsRead);
    }
    if (IsClaim != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsClaim);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailId);
    }
    if (SendUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendUserId);
    }
    if (SendTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
    }
    if (Title.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
    }
    if (Gold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
    }
    if (IsRead != false) {
      size += 1 + 1;
    }
    if (IsClaim != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgMailData other) {
    if (other == null) {
      return;
    }
    if (other.MailId != 0) {
      MailId = other.MailId;
    }
    if (other.SendUserId != 0) {
      SendUserId = other.SendUserId;
    }
    if (other.SendTime != 0) {
      SendTime = other.SendTime;
    }
    if (other.Title.Length != 0) {
      Title = other.Title;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.Gold != 0L) {
      Gold = other.Gold;
    }
    if (other.IsRead != false) {
      IsRead = other.IsRead;
    }
    if (other.IsClaim != false) {
      IsClaim = other.IsClaim;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MailId = input.ReadInt32();
          break;
        }
        case 16: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 24: {
          SendTime = input.ReadInt32();
          break;
        }
        case 34: {
          Title = input.ReadString();
          break;
        }
        case 42: {
          Content = input.ReadString();
          break;
        }
        case 48: {
          Gold = input.ReadInt64();
          break;
        }
        case 56: {
          IsRead = input.ReadBool();
          break;
        }
        case 64: {
          IsClaim = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MailId = input.ReadInt32();
          break;
        }
        case 16: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 24: {
          SendTime = input.ReadInt32();
          break;
        }
        case 34: {
          Title = input.ReadString();
          break;
        }
        case 42: {
          Content = input.ReadString();
          break;
        }
        case 48: {
          Gold = input.ReadInt64();
          break;
        }
        case 56: {
          IsRead = input.ReadBool();
          break;
        }
        case 64: {
          IsClaim = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///分享信息
/// </summary>
public sealed partial class MsgShareData : pb::IMessage<MsgShareData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgShareData> _parser = new pb::MessageParser<MsgShareData>(() => new MsgShareData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgShareData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgShareData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgShareData(MsgShareData other) : this() {
    inviteCode_ = other.inviteCode_;
    bindList_ = other.bindList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgShareData Clone() {
    return new MsgShareData(this);
  }

  /// <summary>Field number for the "inviteCode" field.</summary>
  public const int InviteCodeFieldNumber = 1;
  private string inviteCode_ = "";
  /// <summary>
  ///邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "bindList" field.</summary>
  public const int BindListFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_bindList_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> bindList_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///绑定下级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> BindList {
    get { return bindList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgShareData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgShareData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteCode != other.InviteCode) return false;
    if(!bindList_.Equals(other.bindList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    hash ^= bindList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(InviteCode);
    }
    bindList_.WriteTo(output, _repeated_bindList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(InviteCode);
    }
    bindList_.WriteTo(ref output, _repeated_bindList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    size += bindList_.CalculateSize(_repeated_bindList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgShareData other) {
    if (other == null) {
      return;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    bindList_.Add(other.bindList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          InviteCode = input.ReadString();
          break;
        }
        case 18:
        case 16: {
          bindList_.AddEntriesFrom(input, _repeated_bindList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          InviteCode = input.ReadString();
          break;
        }
        case 18:
        case 16: {
          bindList_.AddEntriesFrom(ref input, _repeated_bindList_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///绑定上级
/// </summary>
public sealed partial class MsgBindParentData : pb::IMessage<MsgBindParentData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBindParentData> _parser = new pb::MessageParser<MsgBindParentData>(() => new MsgBindParentData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBindParentData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentData(MsgBindParentData other) : this() {
    strCode_ = other.strCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentData Clone() {
    return new MsgBindParentData(this);
  }

  /// <summary>Field number for the "strCode" field.</summary>
  public const int StrCodeFieldNumber = 1;
  private string strCode_ = "";
  /// <summary>
  ///上级邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StrCode {
    get { return strCode_; }
    set {
      strCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBindParentData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBindParentData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StrCode != other.StrCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StrCode.Length != 0) hash ^= StrCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (StrCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(StrCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (StrCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(StrCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StrCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StrCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBindParentData other) {
    if (other == null) {
      return;
    }
    if (other.StrCode.Length != 0) {
      StrCode = other.StrCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          StrCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          StrCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邀请奖励配置
/// </summary>
public sealed partial class MsgInviteAwardInfo : pb::IMessage<MsgInviteAwardInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInviteAwardInfo> _parser = new pb::MessageParser<MsgInviteAwardInfo>(() => new MsgInviteAwardInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInviteAwardInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardInfo(MsgInviteAwardInfo other) : this() {
    inviteNum_ = other.inviteNum_;
    pickIndex_ = other.pickIndex_;
    awardCfg_ = other.awardCfg_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardInfo Clone() {
    return new MsgInviteAwardInfo(this);
  }

  /// <summary>Field number for the "inviteNum" field.</summary>
  public const int InviteNumFieldNumber = 1;
  private int inviteNum_;
  /// <summary>
  ///已经邀请的人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InviteNum {
    get { return inviteNum_; }
    set {
      inviteNum_ = value;
    }
  }

  /// <summary>Field number for the "pickIndex" field.</summary>
  public const int PickIndexFieldNumber = 2;
  private int pickIndex_;
  /// <summary>
  ///已经领取的奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PickIndex {
    get { return pickIndex_; }
    set {
      pickIndex_ = value;
    }
  }

  /// <summary>Field number for the "awardCfg" field.</summary>
  public const int AwardCfgFieldNumber = 3;
  private static readonly pb::FieldCodec<global::MsgInviteAwardConfig> _repeated_awardCfg_codec
      = pb::FieldCodec.ForMessage(26, global::MsgInviteAwardConfig.Parser);
  private readonly pbc::RepeatedField<global::MsgInviteAwardConfig> awardCfg_ = new pbc::RepeatedField<global::MsgInviteAwardConfig>();
  /// <summary>
  ///奖励配置
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgInviteAwardConfig> AwardCfg {
    get { return awardCfg_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInviteAwardInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInviteAwardInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteNum != other.InviteNum) return false;
    if (PickIndex != other.PickIndex) return false;
    if(!awardCfg_.Equals(other.awardCfg_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteNum != 0) hash ^= InviteNum.GetHashCode();
    if (PickIndex != 0) hash ^= PickIndex.GetHashCode();
    hash ^= awardCfg_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (PickIndex != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PickIndex);
    }
    awardCfg_.WriteTo(output, _repeated_awardCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (PickIndex != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PickIndex);
    }
    awardCfg_.WriteTo(ref output, _repeated_awardCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteNum);
    }
    if (PickIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PickIndex);
    }
    size += awardCfg_.CalculateSize(_repeated_awardCfg_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInviteAwardInfo other) {
    if (other == null) {
      return;
    }
    if (other.InviteNum != 0) {
      InviteNum = other.InviteNum;
    }
    if (other.PickIndex != 0) {
      PickIndex = other.PickIndex;
    }
    awardCfg_.Add(other.awardCfg_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          PickIndex = input.ReadInt32();
          break;
        }
        case 26: {
          awardCfg_.AddEntriesFrom(input, _repeated_awardCfg_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          PickIndex = input.ReadInt32();
          break;
        }
        case 26: {
          awardCfg_.AddEntriesFrom(ref input, _repeated_awardCfg_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邀请奖励配置
/// </summary>
public sealed partial class MsgInviteAwardConfig : pb::IMessage<MsgInviteAwardConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInviteAwardConfig> _parser = new pb::MessageParser<MsgInviteAwardConfig>(() => new MsgInviteAwardConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInviteAwardConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardConfig(MsgInviteAwardConfig other) : this() {
    inviteNum_ = other.inviteNum_;
    award_ = other.award_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardConfig Clone() {
    return new MsgInviteAwardConfig(this);
  }

  /// <summary>Field number for the "inviteNum" field.</summary>
  public const int InviteNumFieldNumber = 1;
  private int inviteNum_;
  /// <summary>
  ///邀请人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InviteNum {
    get { return inviteNum_; }
    set {
      inviteNum_ = value;
    }
  }

  /// <summary>Field number for the "award" field.</summary>
  public const int AwardFieldNumber = 2;
  private int award_;
  /// <summary>
  ///奖励数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Award {
    get { return award_; }
    set {
      award_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInviteAwardConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInviteAwardConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteNum != other.InviteNum) return false;
    if (Award != other.Award) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteNum != 0) hash ^= InviteNum.GetHashCode();
    if (Award != 0) hash ^= Award.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (Award != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Award);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (Award != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Award);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteNum);
    }
    if (Award != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInviteAwardConfig other) {
    if (other == null) {
      return;
    }
    if (other.InviteNum != 0) {
      InviteNum = other.InviteNum;
    }
    if (other.Award != 0) {
      Award = other.Award;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          Award = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          Award = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///充值信息
/// </summary>
public sealed partial class MsgRechargeInfo : pb::IMessage<MsgRechargeInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgRechargeInfo> _parser = new pb::MessageParser<MsgRechargeInfo>(() => new MsgRechargeInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgRechargeInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRechargeInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRechargeInfo(MsgRechargeInfo other) : this() {
    inviteNum_ = other.inviteNum_;
    todayAward_ = other.todayAward_;
    totalAward_ = other.totalAward_;
    canPickAmount_ = other.canPickAmount_;
    inviteCode_ = other.inviteCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRechargeInfo Clone() {
    return new MsgRechargeInfo(this);
  }

  /// <summary>Field number for the "inviteNum" field.</summary>
  public const int InviteNumFieldNumber = 1;
  private int inviteNum_;
  /// <summary>
  ///邀请人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InviteNum {
    get { return inviteNum_; }
    set {
      inviteNum_ = value;
    }
  }

  /// <summary>Field number for the "todayAward" field.</summary>
  public const int TodayAwardFieldNumber = 2;
  private long todayAward_;
  /// <summary>
  ///今日奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TodayAward {
    get { return todayAward_; }
    set {
      todayAward_ = value;
    }
  }

  /// <summary>Field number for the "totalAward" field.</summary>
  public const int TotalAwardFieldNumber = 3;
  private long totalAward_;
  /// <summary>
  ///总奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TotalAward {
    get { return totalAward_; }
    set {
      totalAward_ = value;
    }
  }

  /// <summary>Field number for the "canPickAmount" field.</summary>
  public const int CanPickAmountFieldNumber = 4;
  private long canPickAmount_;
  /// <summary>
  ///可以领取的数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CanPickAmount {
    get { return canPickAmount_; }
    set {
      canPickAmount_ = value;
    }
  }

  /// <summary>Field number for the "inviteCode" field.</summary>
  public const int InviteCodeFieldNumber = 5;
  private string inviteCode_ = "";
  /// <summary>
  ///自己邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgRechargeInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgRechargeInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteNum != other.InviteNum) return false;
    if (TodayAward != other.TodayAward) return false;
    if (TotalAward != other.TotalAward) return false;
    if (CanPickAmount != other.CanPickAmount) return false;
    if (InviteCode != other.InviteCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteNum != 0) hash ^= InviteNum.GetHashCode();
    if (TodayAward != 0L) hash ^= TodayAward.GetHashCode();
    if (TotalAward != 0L) hash ^= TotalAward.GetHashCode();
    if (CanPickAmount != 0L) hash ^= CanPickAmount.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (TodayAward != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TodayAward);
    }
    if (TotalAward != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TotalAward);
    }
    if (CanPickAmount != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(CanPickAmount);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(InviteCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (TodayAward != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TodayAward);
    }
    if (TotalAward != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TotalAward);
    }
    if (CanPickAmount != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(CanPickAmount);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(InviteCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteNum);
    }
    if (TodayAward != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TodayAward);
    }
    if (TotalAward != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalAward);
    }
    if (CanPickAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CanPickAmount);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgRechargeInfo other) {
    if (other == null) {
      return;
    }
    if (other.InviteNum != 0) {
      InviteNum = other.InviteNum;
    }
    if (other.TodayAward != 0L) {
      TodayAward = other.TodayAward;
    }
    if (other.TotalAward != 0L) {
      TotalAward = other.TotalAward;
    }
    if (other.CanPickAmount != 0L) {
      CanPickAmount = other.CanPickAmount;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          TodayAward = input.ReadInt64();
          break;
        }
        case 24: {
          TotalAward = input.ReadInt64();
          break;
        }
        case 32: {
          CanPickAmount = input.ReadInt64();
          break;
        }
        case 42: {
          InviteCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          TodayAward = input.ReadInt64();
          break;
        }
        case 24: {
          TotalAward = input.ReadInt64();
          break;
        }
        case 32: {
          CanPickAmount = input.ReadInt64();
          break;
        }
        case 42: {
          InviteCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///代理返利
/// </summary>
public sealed partial class MsgQueryRebateRecordInfo : pb::IMessage<MsgQueryRebateRecordInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgQueryRebateRecordInfo> _parser = new pb::MessageParser<MsgQueryRebateRecordInfo>(() => new MsgQueryRebateRecordInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgQueryRebateRecordInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecordInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecordInfo(MsgQueryRebateRecordInfo other) : this() {
    queryRebateRecord_ = other.queryRebateRecord_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecordInfo Clone() {
    return new MsgQueryRebateRecordInfo(this);
  }

  /// <summary>Field number for the "queryRebateRecord" field.</summary>
  public const int QueryRebateRecordFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgQueryRebateRecord> _repeated_queryRebateRecord_codec
      = pb::FieldCodec.ForMessage(10, global::MsgQueryRebateRecord.Parser);
  private readonly pbc::RepeatedField<global::MsgQueryRebateRecord> queryRebateRecord_ = new pbc::RepeatedField<global::MsgQueryRebateRecord>();
  /// <summary>
  ///记录
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgQueryRebateRecord> QueryRebateRecord {
    get { return queryRebateRecord_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgQueryRebateRecordInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgQueryRebateRecordInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!queryRebateRecord_.Equals(other.queryRebateRecord_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= queryRebateRecord_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    queryRebateRecord_.WriteTo(output, _repeated_queryRebateRecord_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    queryRebateRecord_.WriteTo(ref output, _repeated_queryRebateRecord_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += queryRebateRecord_.CalculateSize(_repeated_queryRebateRecord_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgQueryRebateRecordInfo other) {
    if (other == null) {
      return;
    }
    queryRebateRecord_.Add(other.queryRebateRecord_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          queryRebateRecord_.AddEntriesFrom(input, _repeated_queryRebateRecord_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          queryRebateRecord_.AddEntriesFrom(ref input, _repeated_queryRebateRecord_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///代理返利
/// </summary>
public sealed partial class MsgQueryRebateRecord : pb::IMessage<MsgQueryRebateRecord>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgQueryRebateRecord> _parser = new pb::MessageParser<MsgQueryRebateRecord>(() => new MsgQueryRebateRecord());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgQueryRebateRecord> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecord() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecord(MsgQueryRebateRecord other) : this() {
    rechargeUserId_ = other.rechargeUserId_;
    rechargeAmount_ = other.rechargeAmount_;
    rebate_ = other.rebate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecord Clone() {
    return new MsgQueryRebateRecord(this);
  }

  /// <summary>Field number for the "rechargeUserId" field.</summary>
  public const int RechargeUserIdFieldNumber = 1;
  private int rechargeUserId_;
  /// <summary>
  ///user_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RechargeUserId {
    get { return rechargeUserId_; }
    set {
      rechargeUserId_ = value;
    }
  }

  /// <summary>Field number for the "rechargeAmount" field.</summary>
  public const int RechargeAmountFieldNumber = 2;
  private int rechargeAmount_;
  /// <summary>
  ///充值数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RechargeAmount {
    get { return rechargeAmount_; }
    set {
      rechargeAmount_ = value;
    }
  }

  /// <summary>Field number for the "rebate" field.</summary>
  public const int RebateFieldNumber = 3;
  private int rebate_;
  /// <summary>
  ///返利
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Rebate {
    get { return rebate_; }
    set {
      rebate_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgQueryRebateRecord);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgQueryRebateRecord other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RechargeUserId != other.RechargeUserId) return false;
    if (RechargeAmount != other.RechargeAmount) return false;
    if (Rebate != other.Rebate) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RechargeUserId != 0) hash ^= RechargeUserId.GetHashCode();
    if (RechargeAmount != 0) hash ^= RechargeAmount.GetHashCode();
    if (Rebate != 0) hash ^= Rebate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RechargeUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RechargeUserId);
    }
    if (RechargeAmount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RechargeAmount);
    }
    if (Rebate != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Rebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RechargeUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RechargeUserId);
    }
    if (RechargeAmount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RechargeAmount);
    }
    if (Rebate != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Rebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RechargeUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RechargeUserId);
    }
    if (RechargeAmount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RechargeAmount);
    }
    if (Rebate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rebate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgQueryRebateRecord other) {
    if (other == null) {
      return;
    }
    if (other.RechargeUserId != 0) {
      RechargeUserId = other.RechargeUserId;
    }
    if (other.RechargeAmount != 0) {
      RechargeAmount = other.RechargeAmount;
    }
    if (other.Rebate != 0) {
      Rebate = other.Rebate;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RechargeUserId = input.ReadInt32();
          break;
        }
        case 16: {
          RechargeAmount = input.ReadInt32();
          break;
        }
        case 24: {
          Rebate = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RechargeUserId = input.ReadInt32();
          break;
        }
        case 16: {
          RechargeAmount = input.ReadInt32();
          break;
        }
        case 24: {
          Rebate = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
