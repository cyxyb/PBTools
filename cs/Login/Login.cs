// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/Login/Login.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Proto/Login/Login.proto</summary>
public static partial class LoginReflection {

  #region Descriptor
  /// <summary>File descriptor for Proto/Login/Login.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LoginReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChdQcm90by9Mb2dpbi9Mb2dpbi5wcm90byKlAgoOTXNnUGxheWVyTG9naW4S",
          "DwoHYWNjb3VudBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRITCgtwbGF0Zm9y",
          "bV9pZBgDIAEoBRISCgpjaGFubmVsX2lkGAQgASgFEhMKC2NsaWVudF90eXBl",
          "GAUgASgFEhIKCmxvZ2luX3R5cGUYBiABKAUSEwoLbWFjaGluZV9udW0YByAB",
          "KAkSDwoHdXNlcl9pcBgIIAEoCRIQCghpc19kcmFpbhgJIAEoBRIOCgZhdmF0",
          "YXIYCiABKAkSEAoIbmlja25hbWUYCyABKAkSDQoFcGhvbmUYDCABKAkSDAoE",
          "Y29kZRgNIAEoBRITCgtpbnZpdGVfY29kZRgOIAEoCRISCgphZ2VudF90eXBl",
          "GA8gASgFIsADChJNc2dQbGF5ZXJMb2dpblJlc3ASEAoIcmVzX2NvZGUYASAB",
          "KAUSDwoHdXNlcl9pZBgCIAEoBRIUCgxiZWF1dGlmdWxfaWQYAyABKAUSDwoH",
          "YWNjb3VudBgEIAEoCRIQCghuaWNrbmFtZRgFIAEoCRIOCgZhdmF0YXIYBiAB",
          "KAkSFgoOZmlyc3RfcmVjaGFyZ2UYByABKAgSEQoJdXNlcl90eXBlGAggASgF",
          "EhAKCGlzX2RyYWluGAkgASgFEgwKBGNvaW4YCiABKAQSEQoJcGhvbmVfbnVt",
          "GAsgASgJEhEKCXZpcF9sZXZlbBgMIAEoBRIUCgxhdmF0YXJfZnJhbWUYDSAB",
          "KAUSEwoLaW52aXRlX2NvZGUYDiABKAkSEQoJc2lnbmF0dXJlGBAgASgJEhMK",
          "C2FnZW50X2xldmVsGBEgASgFEhAKCHBhc3N3b3JkGBIgASgJEhMKC3doYXRz",
          "dXBfbXNnGBMgASgJEhQKDHRlbGVncmFtX21zZxgUIAEoCRIUCgxmYWNlYm9v",
          "a19tc2cYFSABKAkSEwoLZnJpc3RfbG9naW4YFiABKAgSEgoKYWdlbnRfdHlw",
          "ZRgXIAEoBSI/ChFNc2dNb2RpZnlQYXNzd29yZBIUCgxvbGRfcGFzc3dvcmQY",
          "ASABKAkSFAoMbmV3X3Bhc3N3b3JkGAIgASgJIlYKDE1zZ0JpbmRQaG9uZRIM",
          "CgRjb2RlGAEgASgFEhEKCXBob25lX251bRgCIAEoCRIQCghwYXNzd29yZBgD",
          "IAEoCRITCgtpbnZpdGVfY29kZRgEIAEoCSIjCgtNc2dDb21tb25LVhIJCgFr",
          "GAEgASgFEgkKAXYYAiABKAUiaQoOTXNnQ2hlY2tJbkluZm8SEgoKY2hlY2tf",
          "ZGF5cxgBIAEoBRIPCgdpc19vcGVuGAIgASgIEhAKCGNhbl9waWNrGAMgASgI",
          "EiAKCkNoZWNrSW5DZmcYBCADKAsyDC5Nc2dDb21tb25LViKLAQoXTXNnVHVy",
          "bnRhYmxlSGlzdG9yeURhdGESDwoHdXNlcl9pZBgBIAEoBRIRCgluaWNrX25h",
          "bWUYAiABKAkSDQoFc2NvcmUYAyABKAUSDQoFYXdhcmQYBCABKAUSDAoEdHlw",
          "ZRgFIAEoBRISCgphd2FyZF90eXBlGAYgASgFEgwKBHRpbWUYByABKAkicwoP",
          "TXNnVHVyblBsYXlJbmZvEhAKCHBsYXlfbnVtGAEgASgFEhIKCmxpbWl0X3R1",
          "cm4YAiABKAUSEgoKbmVlZF9zY29yZRgDIAEoBRIQCgh0dXJuX3BybxgEIAEo",
          "BRIUCgx0dXJuX21heF9wcm8YBSABKAUiTAoKTXNnVHVybkNmZxINCgVpbmRl",
          "eBgBIAEoBRINCgVhcndhZBgCIAEoBRISCgphcndhZF90eXBlGAMgASgFEgwK",
          "BHR5cGUYBCABKAUiowIKEE1zZ1R1cm50YWJsZURhdGESDQoFc2NvcmUYASAB",
          "KAMSFQoNZ29sZF90b19zY29yZRgDIAEoBRIlCgtzaWx2ZXJfaW5mbxgEIAEo",
          "CzIQLk1zZ1R1cm5QbGF5SW5mbxIjCglnb2xkX2luZm8YBSABKAsyEC5Nc2dU",
          "dXJuUGxheUluZm8SHwoKc2lsdmVyX2NmZxgGIAMoCzILLk1zZ1R1cm5DZmcS",
          "HQoIZ29sZF9jZmcYByADKAsyCy5Nc2dUdXJuQ2ZnEi4KDHRoaXNfaGlzdG9y",
          "eRgIIAMoCzIYLk1zZ1R1cm50YWJsZUhpc3RvcnlEYXRhEi0KC2JpZ19oaXN0",
          "b3J5GAkgAygLMhguTXNnVHVybnRhYmxlSGlzdG9yeURhdGEiMgoMTXNnVHVy",
          "bnRhYmxlEg8KB3VzZXJfaWQYASABKAUSEQoJdHVybl90eXBlGAIgASgDInwK",
          "EE1zZ1R1cm50YWJsZVJlc3ASDQoFc2NvcmUYASABKAMSEgoKYXdhcmRfdHlw",
          "ZRgCIAEoBRIRCgluZXdfdmFsdWUYAyABKAMSEQoJdHVybkluZGV4GAQgASgD",
          "EhEKCWdldF92YWx1ZRgFIAEoAxIMCgRjb2RlGAYgASgFIisKDE1zZ01haWxz",
          "SW5mbxIbCgVtYWlscxgBIAMoCzIMLk1zZ01haWxEYXRhIqwBCgtNc2dNYWls",
          "RGF0YRIPCgdtYWlsX2lkGAEgASgFEhQKDHNlbmRfdXNlcl9pZBgCIAEoBRIR",
          "CglzZW5kX3RpbWUYAyABKAUSDQoFdGl0bGUYBCABKAkSDwoHY29udGVudBgF",
          "IAEoCRIMCgRnb2xkGAYgASgDEg8KB2lzX3JlYWQYByABKAgSEAoIaXNfY2xh",
          "aW0YCCABKAgSEgoKdG9fdXNlcl9pZBgJIAEoBSI2CgxNc2dTaGFyZURhdGES",
          "EwoLaW52aXRlX2NvZGUYASABKAkSEQoJYmluZF9saXN0GAIgAygFIiQKEU1z",
          "Z0JpbmRQYXJlbnREYXRhEg8KB3N0ckNvZGUYASABKAkiYwoSTXNnSW52aXRl",
          "QXdhcmRJbmZvEhEKCWludml0ZU51bRgBIAEoBRIRCglwaWNrSW5kZXgYAiAB",
          "KAUSJwoIYXdhcmRDZmcYAyADKAsyFS5Nc2dJbnZpdGVBd2FyZENvbmZpZyI4",
          "ChRNc2dJbnZpdGVBd2FyZENvbmZpZxIRCglpbnZpdGVOdW0YASABKAUSDQoF",
          "YXdhcmQYAiABKAUidwoPTXNnUmVjaGFyZ2VJbmZvEhEKCWludml0ZU51bRgB",
          "IAEoBRISCgp0b2RheUF3YXJkGAIgASgDEhIKCnRvdGFsQXdhcmQYAyABKAMS",
          "FQoNY2FuUGlja0Ftb3VudBgEIAEoAxISCgppbnZpdGVDb2RlGAUgASgJIkwK",
          "GE1zZ1F1ZXJ5UmViYXRlUmVjb3JkSW5mbxIwChFxdWVyeVJlYmF0ZVJlY29y",
          "ZBgBIAMoCzIVLk1zZ1F1ZXJ5UmViYXRlUmVjb3JkIlYKFE1zZ1F1ZXJ5UmVi",
          "YXRlUmVjb3JkEhYKDnJlY2hhcmdlVXNlcklkGAEgASgFEhYKDnJlY2hhcmdl",
          "QW1vdW50GAIgASgFEg4KBnJlYmF0ZRgDIAEoBSJbChFNc2dGb3JnZXRQYXNz",
          "d29yZBITCgtjbGllbnRfdHlwZRgBIAEoBRINCgVwaG9uZRgCIAEoCRIMCgRj",
          "b2RlGAMgASgFEhQKDG5ld19wYXNzd29yZBgEIAEoCSLcAQoKTXNnVklQSW5m",
          "bxIRCgl2aXBfbGV2ZWwYASABKAUSEAoIbmVlZF9leHAYAiABKAMSFQoNdHVy",
          "bnRhYmxlX251bRgDIAEoBRIYChB0cnVtcGV0X2Rpc2NvdW50GAQgASgFEhYK",
          "DmNoZWNrX2FkZGl0aW9uGAUgASgFEhIKCndvcmxkX2NoYXQYBiABKAgSDgoG",
          "YXZhdGFyGAcgASgFEhQKDGF2YXRhcl9mcmFtZRgIIAEoBRISCgphd2FyZF9n",
          "b2xkGAkgASgFEhIKCm9uZV90b19vbmUYCiABKAgiLQoMTXNnVklQQ29uZmln",
          "Eh0KCHZpcF9pbmZvGAEgAygLMgsuTXNnVklQSW5mbyIvCg1Nc2dVcGdyYWRl",
          "VklQEhAKCHJlc19jb2RlGAEgASgFEgwKBGdvbGQYAiABKAMiIwoQTXNnR2V0",
          "QXZhdGFySW5mbxIPCgdhdmF0YXJzGAEgAygFIqECCg1Nc2dQbGF5ZXJJbmZv",
          "Eg8KB3VzZXJfaWQYASABKAUSFAoMYmVhdXRpZnVsX2lkGAIgASgFEhAKCG5p",
          "Y2tuYW1lGAMgASgJEg4KBmF2YXRhchgEIAEoCRIMCgRjb2luGAUgASgEEhEK",
          "CXBob25lX251bRgGIAEoCRIRCgl2aXBfbGV2ZWwYByABKAUSFAoMYXZhdGFy",
          "X2ZyYW1lGAggASgFEhEKCXNpZ25hdHVyZRgJIAEoCRITCgt6bWRfZ2FtZV9p",
          "ZBgKIAEoBRIUCgx6bWRfd2luX2dvbGQYCyABKAQSEwoLd2hhdHN1cF9tc2cY",
          "EyABKAkSFAoMdGVsZWdyYW1fbXNnGBQgASgJEhQKDGZhY2Vib29rX21zZxgV",
          "IAEoCSLYAQoNQWN0aXZlSW5mb1JldBIRCglhY3RpdmVfaWQYASABKAUSFQoN",
          "c3ViX2FjdGl2ZV9pZBgCIAEoBRIOCgZwYXJhbTEYAyABKAUSDgoGcGFyYW0y",
          "GAQgASgFEg4KBnBhcmFtMxgFIAEoBRIRCglwcm9ncmVzczEYBiABKAUSEQoJ",
          "cHJvZ3Jlc3MyGAcgASgFEhEKCXByb2dyZXNzMxgIIAEoBRIOCgZyZXdhcmQY",
          "CSABKAUSEwoLcmV3YXJkX3R5cGUYCiABKAUSDwoHaXNfcGljaxgLIAEoCCI2",
          "ChJNc2dBY3RpdmVJbmZvU0NSZXQSIAoIdmVjX2luZm8YASADKAsyDi5BY3Rp",
          "dmVJbmZvUmV0IlAKE01zZ0FjdGl2ZUluZm9DU1BpY2sSDwoHdXNlcl9pZBgB",
          "IAEoBRIRCglhY3RpdmVfaWQYAiABKAUSFQoNc3ViX2FjdGl2ZV9pZBgDIAEo",
          "BSLrAQoTTXNnQWN0aXZlSW5mb1NDUGljaxIRCglhY3RpdmVfaWQYASABKAUS",
          "FQoNc3ViX2FjdGl2ZV9pZBgCIAEoBRIOCgZwYXJhbTEYAyABKAUSDgoGcGFy",
          "YW0yGAQgASgFEg4KBnBhcmFtMxgFIAEoBRIRCglwcm9ncmVzczEYBiABKAUS",
          "EQoJcHJvZ3Jlc3MyGAcgASgFEhEKCXByb2dyZXNzMxgIIAEoBRIOCgZyZXdh",
          "cmQYCSABKAUSEwoLcmV3YXJkX3R5cGUYCiABKAUSDwoHaXNfcGljaxgLIAEo",
          "BRILCgNyZXMYDCABKAgiOAoSTXNnTW9kaWZ5U2lnbmF0dXJlEg8KB3VzZXJf",
          "aWQYASABKAUSEQoJc2lnbmF0dXJlGAIgASgJIkEKEk1zZ1RyYW5zZmVyT3Bl",
          "cmF0ZRIUCgxyZWN2X3VzZXJfaWQYASABKAUSFQoNdHJhbnNmZXJfZ29sZBgC",
          "IAEoAyKKAQoKTXNnVG9wSW5mbxIPCgdyYW5rX2lkGAEgASgFEg8KB3VzZXJf",
          "aWQYAiABKAUSDAoEZ29sZBgDIAEoBBIRCgl2aXBfbGV2ZWwYBCABKA0SFAoM",
          "YXZhdGFyX2ZyYW1lGAUgASgFEhAKCGhlYWRfdXJsGAYgASgJEhEKCW5pY2tf",
          "bmFtZRgHIAEoCSJXCgpNc2dHZXRSYW5rEhEKCXJhbmtfdHlwZRgBIAEoBRIP",
          "Cgd1c2VyX2lkGAIgASgFEhQKDGN1cnJlbnRfcGFnZRgDIAEoBRIPCgdtYXhf",
          "cm93GAQgASgFIosBCg5Nc2dUb3BMaXN0UmVzcBIPCgd1c2VyX2lkGAEgASgF",
          "EhEKCXJhbmtfdHlwZRgCIAEoBRIWCg50aGlzX3JhbmtfbmRleBgDIAEoBRIR",
          "Cgl0aGlzX2dvbGQYBCABKAMSDgoGaXNfZW5kGAUgASgFEhoKBWxpc3RzGAYg",
          "AygLMgsuTXNnVG9wSW5mbyI+ChZNc2dUcmFuc2Zlck9wZXJhdGVSZXNwEhEK",
          "CXJldF92YWx1ZRgBIAEoBRIRCgl1c2VyX2dvbGQYAiABKAMigwEKGk1zZ1Ry",
          "YW5zZmVyT3BlcmF0ZVN5bmNSZXNwEhEKCXJldF92YWx1ZRgBIAEoBRIUCgxz",
          "ZW5kX3VzZXJfaWQYAyABKAUSEAoIYWRkX2dvbGQYBCABKAMSFQoNcmVjZWl2",
          "ZV9zdGF0ZRgGIAEoAxITCgt0cmFuc2Zlcl9pZBgHIAEoAyJAChZNc2dUcmFu",
          "c2ZlclJlY2VpdmVSZXNwEhEKCXJldF92YWx1ZRgBIAEoBRITCgtjaGFuZ2Vf",
          "Z29sZBgCIAEoAyKjAQoRTXNnVHJhbnNmZXJSZWNvcmQSFAoMc2VuZF91c2Vy",
          "X2lkGAEgASgFEhAKCG5pY2tuYW1lGAIgASgJEhUKDXRyYW5zZmVyX2dvbGQY",
          "AyABKAMSDQoFdGltZXIYBSABKAkSFAoMcmVjdl91c2VyX2lkGAYgASgFEhUK",
          "DXJlY2VpdmVfc3RhdGUYByABKAUSEwoLdHJhbnNmZXJfaWQYCCABKAMiPAoV",
          "TXNnVHJhbnNmZXJSZWNvcmRSZXNwEiMKB3JlY29yZHMYASADKAsyEi5Nc2dU",
          "cmFuc2ZlclJlY29yZCIwCgxNc2dQaG9uZUNvZGUSEQoJYXJlYV9jb2RlGAEg",
          "ASgJEg0KBXBob25lGAIgASgJIiwKB01zZ0l0ZW0SDwoHaXRlbV9pZBgBIAEo",
          "BRIQCghpdGVtX251bRgCIAEoAyInCg1Nc2dQbGF5ZXJJdGVtEhYKBGl0ZW0Y",
          "ASADKAsyCC5Nc2dJdGVtIkwKGE1zZ1RyYW5zZmVyUXVlcnlOaWNrbmFtZRIR",
          "CglyZXRfVmFsdWUYASABKAUSEAoIbmlja25hbWUYAiABKAkSCwoDdGF4GAMg",
          "ASgFIp4BChZNc2dTdWJhZ2VudEluZm9ybWF0aW9uEhYKDmFnZW50X25pY2tu",
          "YW1lGAEgASgJEhUKDWFnZW50X3VzZXJfaWQYAiABKAUSEgoKYWdlbnRfdHlw",
          "ZRgDIAEoCBIWCg50b3RhbF9zaGlmdF90bxgEIAEoAxIWCg50b3RhbF9yb2xs",
          "X291dBgFIAEoAxIRCgl2aXBfbGV2ZWwYBiABKAUiSwocTXNnVHRvdGFsU3Vi",
          "YWdlbnRJbmZvcm1hdGlvbhIrCgphZ2VudF9pbmZvGAEgAygLMhcuTXNnU3Vi",
          "YWdlbnRJbmZvcm1hdGlvbiJdChFNc2dCaW5kUGFyZW50SW5mbxIPCgd1c2Vy",
          "X2lkGAEgASgFEg4KBmF2YXRhchgCIAEoCRIUCgxhdmF0YXJfZnJhbWUYAyAB",
          "KAUSEQoJbmlja19uYW1lGAQgASgJIl4KFU1zZ0JpbmRJbnZpdGVDb2RlUmVz",
          "cBIQCghyZXNfY29kZRgBIAEoBRIRCgl1c2VyX3R5cGUYAiABKAUSIAoEaW5m",
          "bxgDIAEoCzISLk1zZ0JpbmRQYXJlbnRJbmZvIlIKEk1zZ0RvdFJlY2hhcmdl",
          "UmVzcBIXCg9pc19uZXdfcmVjaGFyZ2UYASABKAgSDAoEZ29sZBgCIAEoAxIV",
          "Cg1yZWNoYXJnZV9pbmZvGAMgAygFIm0KFU1zZ09ubGluZUFjdGl2ZUNvbmZp",
          "ZxIPCgdpdGVtX2lkGAEgASgFEhAKCGl0ZW1fbnVtGAIgASgFEgwKBHR5cGUY",
          "AyABKAUSFAoMb25saW5lX2luZGV4GAQgASgFEg0KBXRpbWVzGAUgASgFImsK",
          "FE1zZ09ubGluZUFjdGl2ZVF1ZXJ5EhIKCnVzZXJfdGltZXMYASABKAUSEAoI",
          "aW5kZXhfaWQYAiADKAUSLQoNb25saW5lX2NvbmZpZxgDIAMoCzIWLk1zZ09u",
          "bGluZUFjdGl2ZUNvbmZpZyJcChNNc2dPbGluZUFjdGl2ZUF3YXJkEg8KB2l0",
          "ZW1faWQYASABKAUSEAoIaXRlbV9udW0YAiABKAUSDAoEdHlwZRgDIAEoBRIU",
          "CgxvbmxpbmVfaW5kZXgYBCABKAUiRgoOTXNnQ0RLRXhjaGFuZ2USDwoHaXRl",
          "bV9pZBgBIAEoBRIQCghpdGVtX251bRgCIAEoBRIRCglpdGVtX3R5cGUYAyAB",
          "KAUiRQoSTXNnQ0RLRXhjaGFuZ2VSZXNwEhAKCHJldF9jb2RlGAEgASgFEh0K",
          "BGluZm8YAiADKAsyDy5Nc2dDREtFeGNoYW5nZSI2ChlNc2dQZXJzb25hbERl",
          "dGFpbHNSZXNwQWRkEgwKBHR5cGUYASABKAUSCwoDbXNnGAIgASgJImMKEU1z",
          "Z0ludml0ZVVzZXJJbmZvEhEKCXZpcF9sZXZlbBgBIAEoBRITCgtpbnZpdGVf",
          "dGltZRgCIAEoCRIUCgxiZWF1dGlmdWxfaWQYAyABKAUSEAoIbmlja25hbWUY",
          "BCABKAkiNQoRTXNnSW52aXRlVXNlclJlc3ASIAoEaW5mbxgBIAMoCzISLk1z",
          "Z0ludml0ZVVzZXJJbmZvInkKHU1zZ1F1ZXJ5Q2VsZWJyaXR5R29sZENvaW5S",
          "ZXNwEg4KBmF2YXRhchgBIAEoCRIUCgxhdmF0YXJfZnJhbWUYAiABKAUSEAoI",
          "bmlja25hbWUYAyABKAkSEQoJZ29sZF9jb2luGAQgASgDEg0KBXN0YXRlGAUg",
          "ASgIIoYBCh9Nc2dJbmZpbml0ZUFnZW50UXVlcnlNeUluZm9SZXNwEhMKC2Fn",
          "ZW50X2xldmVsGAEgASgFEhMKC2FnZW50X3JhdGlvGAIgASgFEg8KB2JpbmRf",
          "aWQYAyABKAUSEgoKY3VyX3JlYmF0ZRgEIAEoAxIUCgx0b3RhbF9yZWJhdGUY",
          "BSABKAMiVgocTXNnSW5maW5pdGVBZ2VudFF1ZXJ5U3ViSW5mbxIPCgd1c2Vy",
          "X2lkGAEgASgFEhQKDGN1cnJlbnRfcGFnZRgCIAEoBRIPCgdtYXhfcm93GAMg",
          "ASgFIn0KGUluZmluaXRlQWdlbnRRdWVyeVN1YkluZm8SDwoHdXNlcl9pZBgB",
          "IAEoBRIUCgxzdWJvcmRpbmF0ZXMYAiABKAUSEQoJdG90YWxfdGF4GAMgASgD",
          "EhEKCXRvZGF5X3RheBgEIAEoAxITCgthZ2VudF9yYXRpbxgFIAEoBSJzCiBN",
          "c2dJbmZpbml0ZUFnZW50UXVlcnlTdWJJbmZvUmVzcBITCgthZ2VudF9jb3Vu",
          "dBgBIAEoBRIQCghlbmRfbGlzdBgCIAEoCBIoCgRpbmZvGAMgAygLMhouSW5m",
          "aW5pdGVBZ2VudFF1ZXJ5U3ViSW5mbyI2Cg5Nc2dTZXRTdWJBZ2VudBIPCgd1",
          "c2VyX2lkGAEgASgFEhMKC2FnZW50X3JhdGlvGAIgASgFIiIKEk1zZ1NldFN1",
          "YkFnZW50UmVzcBIMCgRjb2RlGAEgASgFIjcKE01zZ0FnZW50UmVjdml2ZVJl",
          "c3ASDAoEY29kZRgBIAEoBRISCgpjdXJfcmViYXRlGAIgASgDYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerLogin), global::MsgPlayerLogin.Parser, new[]{ "Account", "Password", "PlatformId", "ChannelId", "ClientType", "LoginType", "MachineNum", "UserIp", "IsDrain", "Avatar", "Nickname", "Phone", "Code", "InviteCode", "AgentType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerLoginResp), global::MsgPlayerLoginResp.Parser, new[]{ "ResCode", "UserId", "BeautifulId", "Account", "Nickname", "Avatar", "FirstRecharge", "UserType", "IsDrain", "Coin", "PhoneNum", "VipLevel", "AvatarFrame", "InviteCode", "Signature", "AgentLevel", "Password", "WhatsupMsg", "TelegramMsg", "FacebookMsg", "FristLogin", "AgentType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgModifyPassword), global::MsgModifyPassword.Parser, new[]{ "OldPassword", "NewPassword" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBindPhone), global::MsgBindPhone.Parser, new[]{ "Code", "PhoneNum", "Password", "InviteCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCommonKV), global::MsgCommonKV.Parser, new[]{ "K", "V" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCheckInInfo), global::MsgCheckInInfo.Parser, new[]{ "CheckDays", "IsOpen", "CanPick", "CheckInCfg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurntableHistoryData), global::MsgTurntableHistoryData.Parser, new[]{ "UserId", "NickName", "Score", "Award", "Type", "AwardType", "Time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurnPlayInfo), global::MsgTurnPlayInfo.Parser, new[]{ "PlayNum", "LimitTurn", "NeedScore", "TurnPro", "TurnMaxPro" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurnCfg), global::MsgTurnCfg.Parser, new[]{ "Index", "Arwad", "ArwadType", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurntableData), global::MsgTurntableData.Parser, new[]{ "Score", "GoldToScore", "SilverInfo", "GoldInfo", "SilverCfg", "GoldCfg", "ThisHistory", "BigHistory" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurntable), global::MsgTurntable.Parser, new[]{ "UserId", "TurnType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTurntableResp), global::MsgTurntableResp.Parser, new[]{ "Score", "AwardType", "NewValue", "TurnIndex", "GetValue", "Code" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgMailsInfo), global::MsgMailsInfo.Parser, new[]{ "Mails" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgMailData), global::MsgMailData.Parser, new[]{ "MailId", "SendUserId", "SendTime", "Title", "Content", "Gold", "IsRead", "IsClaim", "ToUserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgShareData), global::MsgShareData.Parser, new[]{ "InviteCode", "BindList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBindParentData), global::MsgBindParentData.Parser, new[]{ "StrCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInviteAwardInfo), global::MsgInviteAwardInfo.Parser, new[]{ "InviteNum", "PickIndex", "AwardCfg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInviteAwardConfig), global::MsgInviteAwardConfig.Parser, new[]{ "InviteNum", "Award" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgRechargeInfo), global::MsgRechargeInfo.Parser, new[]{ "InviteNum", "TodayAward", "TotalAward", "CanPickAmount", "InviteCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgQueryRebateRecordInfo), global::MsgQueryRebateRecordInfo.Parser, new[]{ "QueryRebateRecord" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgQueryRebateRecord), global::MsgQueryRebateRecord.Parser, new[]{ "RechargeUserId", "RechargeAmount", "Rebate" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgForgetPassword), global::MsgForgetPassword.Parser, new[]{ "ClientType", "Phone", "Code", "NewPassword" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgVIPInfo), global::MsgVIPInfo.Parser, new[]{ "VipLevel", "NeedExp", "TurntableNum", "TrumpetDiscount", "CheckAddition", "WorldChat", "Avatar", "AvatarFrame", "AwardGold", "OneToOne" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgVIPConfig), global::MsgVIPConfig.Parser, new[]{ "VipInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgUpgradeVIP), global::MsgUpgradeVIP.Parser, new[]{ "ResCode", "Gold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGetAvatarInfo), global::MsgGetAvatarInfo.Parser, new[]{ "Avatars" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerInfo), global::MsgPlayerInfo.Parser, new[]{ "UserId", "BeautifulId", "Nickname", "Avatar", "Coin", "PhoneNum", "VipLevel", "AvatarFrame", "Signature", "ZmdGameId", "ZmdWinGold", "WhatsupMsg", "TelegramMsg", "FacebookMsg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ActiveInfoRet), global::ActiveInfoRet.Parser, new[]{ "ActiveId", "SubActiveId", "Param1", "Param2", "Param3", "Progress1", "Progress2", "Progress3", "Reward", "RewardType", "IsPick" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgActiveInfoSCRet), global::MsgActiveInfoSCRet.Parser, new[]{ "VecInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgActiveInfoCSPick), global::MsgActiveInfoCSPick.Parser, new[]{ "UserId", "ActiveId", "SubActiveId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgActiveInfoSCPick), global::MsgActiveInfoSCPick.Parser, new[]{ "ActiveId", "SubActiveId", "Param1", "Param2", "Param3", "Progress1", "Progress2", "Progress3", "Reward", "RewardType", "IsPick", "Res" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgModifySignature), global::MsgModifySignature.Parser, new[]{ "UserId", "Signature" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTransferOperate), global::MsgTransferOperate.Parser, new[]{ "RecvUserId", "TransferGold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTopInfo), global::MsgTopInfo.Parser, new[]{ "RankId", "UserId", "Gold", "VipLevel", "AvatarFrame", "HeadUrl", "NickName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGetRank), global::MsgGetRank.Parser, new[]{ "RankType", "UserId", "CurrentPage", "MaxRow" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTopListResp), global::MsgTopListResp.Parser, new[]{ "UserId", "RankType", "ThisRankNdex", "ThisGold", "IsEnd", "Lists" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTransferOperateResp), global::MsgTransferOperateResp.Parser, new[]{ "RetValue", "UserGold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTransferOperateSyncResp), global::MsgTransferOperateSyncResp.Parser, new[]{ "RetValue", "SendUserId", "AddGold", "ReceiveState", "TransferId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTransferReceiveResp), global::MsgTransferReceiveResp.Parser, new[]{ "RetValue", "ChangeGold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTransferRecord), global::MsgTransferRecord.Parser, new[]{ "SendUserId", "Nickname", "TransferGold", "Timer", "RecvUserId", "ReceiveState", "TransferId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTransferRecordResp), global::MsgTransferRecordResp.Parser, new[]{ "Records" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPhoneCode), global::MsgPhoneCode.Parser, new[]{ "AreaCode", "Phone" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgItem), global::MsgItem.Parser, new[]{ "ItemId", "ItemNum" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerItem), global::MsgPlayerItem.Parser, new[]{ "Item" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTransferQueryNickname), global::MsgTransferQueryNickname.Parser, new[]{ "RetValue", "Nickname", "Tax" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgSubagentInformation), global::MsgSubagentInformation.Parser, new[]{ "AgentNickname", "AgentUserId", "AgentType", "TotalShiftTo", "TotalRollOut", "VipLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTtotalSubagentInformation), global::MsgTtotalSubagentInformation.Parser, new[]{ "AgentInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBindParentInfo), global::MsgBindParentInfo.Parser, new[]{ "UserId", "Avatar", "AvatarFrame", "NickName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBindInviteCodeResp), global::MsgBindInviteCodeResp.Parser, new[]{ "ResCode", "UserType", "Info" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgDotRechargeResp), global::MsgDotRechargeResp.Parser, new[]{ "IsNewRecharge", "Gold", "RechargeInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgOnlineActiveConfig), global::MsgOnlineActiveConfig.Parser, new[]{ "ItemId", "ItemNum", "Type", "OnlineIndex", "Times" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgOnlineActiveQuery), global::MsgOnlineActiveQuery.Parser, new[]{ "UserTimes", "IndexId", "OnlineConfig" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgOlineActiveAward), global::MsgOlineActiveAward.Parser, new[]{ "ItemId", "ItemNum", "Type", "OnlineIndex" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCDKExchange), global::MsgCDKExchange.Parser, new[]{ "ItemId", "ItemNum", "ItemType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgCDKExchangeResp), global::MsgCDKExchangeResp.Parser, new[]{ "RetCode", "Info" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPersonalDetailsRespAdd), global::MsgPersonalDetailsRespAdd.Parser, new[]{ "Type", "Msg" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInviteUserInfo), global::MsgInviteUserInfo.Parser, new[]{ "VipLevel", "InviteTime", "BeautifulId", "Nickname" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInviteUserResp), global::MsgInviteUserResp.Parser, new[]{ "Info" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgQueryCelebrityGoldCoinResp), global::MsgQueryCelebrityGoldCoinResp.Parser, new[]{ "Avatar", "AvatarFrame", "Nickname", "GoldCoin", "State" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInfiniteAgentQueryMyInfoResp), global::MsgInfiniteAgentQueryMyInfoResp.Parser, new[]{ "AgentLevel", "AgentRatio", "BindId", "CurRebate", "TotalRebate" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInfiniteAgentQuerySubInfo), global::MsgInfiniteAgentQuerySubInfo.Parser, new[]{ "UserId", "CurrentPage", "MaxRow" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfiniteAgentQuerySubInfo), global::InfiniteAgentQuerySubInfo.Parser, new[]{ "UserId", "Subordinates", "TotalTax", "TodayTax", "AgentRatio" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgInfiniteAgentQuerySubInfoResp), global::MsgInfiniteAgentQuerySubInfoResp.Parser, new[]{ "AgentCount", "EndList", "Info" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgSetSubAgent), global::MsgSetSubAgent.Parser, new[]{ "UserId", "AgentRatio" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgSetSubAgentResp), global::MsgSetSubAgentResp.Parser, new[]{ "Code" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgAgentRecviveResp), global::MsgAgentRecviveResp.Parser, new[]{ "Code", "CurRebate" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///玩家登录
/// </summary>
public sealed partial class MsgPlayerLogin : pb::IMessage<MsgPlayerLogin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerLogin> _parser = new pb::MessageParser<MsgPlayerLogin>(() => new MsgPlayerLogin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin(MsgPlayerLogin other) : this() {
    account_ = other.account_;
    password_ = other.password_;
    platformId_ = other.platformId_;
    channelId_ = other.channelId_;
    clientType_ = other.clientType_;
    loginType_ = other.loginType_;
    machineNum_ = other.machineNum_;
    userIp_ = other.userIp_;
    isDrain_ = other.isDrain_;
    avatar_ = other.avatar_;
    nickname_ = other.nickname_;
    phone_ = other.phone_;
    code_ = other.code_;
    inviteCode_ = other.inviteCode_;
    agentType_ = other.agentType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin Clone() {
    return new MsgPlayerLogin(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private string account_ = "";
  /// <summary>
  ///玩家账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  /// <summary>
  ///玩家密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "platform_id" field.</summary>
  public const int PlatformIdFieldNumber = 3;
  private int platformId_;
  /// <summary>
  ///平台id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PlatformId {
    get { return platformId_; }
    set {
      platformId_ = value;
    }
  }

  /// <summary>Field number for the "channel_id" field.</summary>
  public const int ChannelIdFieldNumber = 4;
  private int channelId_;
  /// <summary>
  ///渠道id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChannelId {
    get { return channelId_; }
    set {
      channelId_ = value;
    }
  }

  /// <summary>Field number for the "client_type" field.</summary>
  public const int ClientTypeFieldNumber = 5;
  private int clientType_;
  /// <summary>
  ///包id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ClientType {
    get { return clientType_; }
    set {
      clientType_ = value;
    }
  }

  /// <summary>Field number for the "login_type" field.</summary>
  public const int LoginTypeFieldNumber = 6;
  private int loginType_;
  /// <summary>
  ///1:游客登录 2:账号登录 3:第三方登录 4:注册账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LoginType {
    get { return loginType_; }
    set {
      loginType_ = value;
    }
  }

  /// <summary>Field number for the "machine_num" field.</summary>
  public const int MachineNumFieldNumber = 7;
  private string machineNum_ = "";
  /// <summary>
  ///机器码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MachineNum {
    get { return machineNum_; }
    set {
      machineNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_ip" field.</summary>
  public const int UserIpFieldNumber = 8;
  private string userIp_ = "";
  /// <summary>
  ///玩家IP
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserIp {
    get { return userIp_; }
    set {
      userIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_drain" field.</summary>
  public const int IsDrainFieldNumber = 9;
  private int isDrain_;
  /// <summary>
  ///0:谷歌商店来源 1:推广渠道(facebook等) 2:自定义连接 3：网红用户
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsDrain {
    get { return isDrain_; }
    set {
      isDrain_ = value;
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 10;
  private string avatar_ = "";
  /// <summary>
  ///头像(第三方登录时需要)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 11;
  private string nickname_ = "";
  /// <summary>
  ///昵称(第三方登录时需要)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 12;
  private string phone_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 13;
  private int code_;
  /// <summary>
  ///验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "invite_code" field.</summary>
  public const int InviteCodeFieldNumber = 14;
  private string inviteCode_ = "";
  /// <summary>
  ///邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "agent_type" field.</summary>
  public const int AgentTypeFieldNumber = 15;
  private int agentType_;
  /// <summary>
  ///用户类型  8:线上用户 9:线下用户
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentType {
    get { return agentType_; }
    set {
      agentType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (Password != other.Password) return false;
    if (PlatformId != other.PlatformId) return false;
    if (ChannelId != other.ChannelId) return false;
    if (ClientType != other.ClientType) return false;
    if (LoginType != other.LoginType) return false;
    if (MachineNum != other.MachineNum) return false;
    if (UserIp != other.UserIp) return false;
    if (IsDrain != other.IsDrain) return false;
    if (Avatar != other.Avatar) return false;
    if (Nickname != other.Nickname) return false;
    if (Phone != other.Phone) return false;
    if (Code != other.Code) return false;
    if (InviteCode != other.InviteCode) return false;
    if (AgentType != other.AgentType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
    if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
    if (ClientType != 0) hash ^= ClientType.GetHashCode();
    if (LoginType != 0) hash ^= LoginType.GetHashCode();
    if (MachineNum.Length != 0) hash ^= MachineNum.GetHashCode();
    if (UserIp.Length != 0) hash ^= UserIp.GetHashCode();
    if (IsDrain != 0) hash ^= IsDrain.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (Code != 0) hash ^= Code.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (AgentType != 0) hash ^= AgentType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (PlatformId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PlatformId);
    }
    if (ChannelId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ChannelId);
    }
    if (ClientType != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientType);
    }
    if (LoginType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LoginType);
    }
    if (MachineNum.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(MachineNum);
    }
    if (UserIp.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(UserIp);
    }
    if (IsDrain != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(IsDrain);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Avatar);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Nickname);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(Code);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(InviteCode);
    }
    if (AgentType != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(AgentType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (PlatformId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PlatformId);
    }
    if (ChannelId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ChannelId);
    }
    if (ClientType != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientType);
    }
    if (LoginType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LoginType);
    }
    if (MachineNum.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(MachineNum);
    }
    if (UserIp.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(UserIp);
    }
    if (IsDrain != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(IsDrain);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Avatar);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Nickname);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(Code);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(InviteCode);
    }
    if (AgentType != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(AgentType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (PlatformId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
    }
    if (ChannelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
    }
    if (ClientType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientType);
    }
    if (LoginType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoginType);
    }
    if (MachineNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineNum);
    }
    if (UserIp.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIp);
    }
    if (IsDrain != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsDrain);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (AgentType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerLogin other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.PlatformId != 0) {
      PlatformId = other.PlatformId;
    }
    if (other.ChannelId != 0) {
      ChannelId = other.ChannelId;
    }
    if (other.ClientType != 0) {
      ClientType = other.ClientType;
    }
    if (other.LoginType != 0) {
      LoginType = other.LoginType;
    }
    if (other.MachineNum.Length != 0) {
      MachineNum = other.MachineNum;
    }
    if (other.UserIp.Length != 0) {
      UserIp = other.UserIp;
    }
    if (other.IsDrain != 0) {
      IsDrain = other.IsDrain;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    if (other.AgentType != 0) {
      AgentType = other.AgentType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 24: {
          PlatformId = input.ReadInt32();
          break;
        }
        case 32: {
          ChannelId = input.ReadInt32();
          break;
        }
        case 40: {
          ClientType = input.ReadInt32();
          break;
        }
        case 48: {
          LoginType = input.ReadInt32();
          break;
        }
        case 58: {
          MachineNum = input.ReadString();
          break;
        }
        case 66: {
          UserIp = input.ReadString();
          break;
        }
        case 72: {
          IsDrain = input.ReadInt32();
          break;
        }
        case 82: {
          Avatar = input.ReadString();
          break;
        }
        case 90: {
          Nickname = input.ReadString();
          break;
        }
        case 98: {
          Phone = input.ReadString();
          break;
        }
        case 104: {
          Code = input.ReadInt32();
          break;
        }
        case 114: {
          InviteCode = input.ReadString();
          break;
        }
        case 120: {
          AgentType = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 24: {
          PlatformId = input.ReadInt32();
          break;
        }
        case 32: {
          ChannelId = input.ReadInt32();
          break;
        }
        case 40: {
          ClientType = input.ReadInt32();
          break;
        }
        case 48: {
          LoginType = input.ReadInt32();
          break;
        }
        case 58: {
          MachineNum = input.ReadString();
          break;
        }
        case 66: {
          UserIp = input.ReadString();
          break;
        }
        case 72: {
          IsDrain = input.ReadInt32();
          break;
        }
        case 82: {
          Avatar = input.ReadString();
          break;
        }
        case 90: {
          Nickname = input.ReadString();
          break;
        }
        case 98: {
          Phone = input.ReadString();
          break;
        }
        case 104: {
          Code = input.ReadInt32();
          break;
        }
        case 114: {
          InviteCode = input.ReadString();
          break;
        }
        case 120: {
          AgentType = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家登录返回
/// </summary>
public sealed partial class MsgPlayerLoginResp : pb::IMessage<MsgPlayerLoginResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerLoginResp> _parser = new pb::MessageParser<MsgPlayerLoginResp>(() => new MsgPlayerLoginResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerLoginResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp(MsgPlayerLoginResp other) : this() {
    resCode_ = other.resCode_;
    userId_ = other.userId_;
    beautifulId_ = other.beautifulId_;
    account_ = other.account_;
    nickname_ = other.nickname_;
    avatar_ = other.avatar_;
    firstRecharge_ = other.firstRecharge_;
    userType_ = other.userType_;
    isDrain_ = other.isDrain_;
    coin_ = other.coin_;
    phoneNum_ = other.phoneNum_;
    vipLevel_ = other.vipLevel_;
    avatarFrame_ = other.avatarFrame_;
    inviteCode_ = other.inviteCode_;
    signature_ = other.signature_;
    agentLevel_ = other.agentLevel_;
    password_ = other.password_;
    whatsupMsg_ = other.whatsupMsg_;
    telegramMsg_ = other.telegramMsg_;
    facebookMsg_ = other.facebookMsg_;
    fristLogin_ = other.fristLogin_;
    agentType_ = other.agentType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp Clone() {
    return new MsgPlayerLoginResp(this);
  }

  /// <summary>Field number for the "res_code" field.</summary>
  public const int ResCodeFieldNumber = 1;
  private int resCode_;
  /// <summary>
  ///登录返回码(0:成功 非0:失败)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResCode {
    get { return resCode_; }
    set {
      resCode_ = value;
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 3;
  private int beautifulId_;
  /// <summary>
  ///玩家靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 4;
  private string account_ = "";
  /// <summary>
  ///玩家账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 5;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 6;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "first_recharge" field.</summary>
  public const int FirstRechargeFieldNumber = 7;
  private bool firstRecharge_;
  /// <summary>
  ///是否首充
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool FirstRecharge {
    get { return firstRecharge_; }
    set {
      firstRecharge_ = value;
    }
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 8;
  private int userType_;
  /// <summary>
  ///玩家类型(0:普通玩家 1:VIP)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "is_drain" field.</summary>
  public const int IsDrainFieldNumber = 9;
  private int isDrain_;
  /// <summary>
  ///0:谷歌商店来源 1:推广渠道(facebook等) 2:自定义连接并且初始玩家类型为线下 3：自定义连接并且初始玩家类型为线上 4：网红用户
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsDrain {
    get { return isDrain_; }
    set {
      isDrain_ = value;
    }
  }

  /// <summary>Field number for the "coin" field.</summary>
  public const int CoinFieldNumber = 10;
  private ulong coin_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Coin {
    get { return coin_; }
    set {
      coin_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 11;
  private string phoneNum_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 12;
  private int vipLevel_;
  /// <summary>
  ///VIP等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 13;
  private int avatarFrame_;
  /// <summary>
  ///头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "invite_code" field.</summary>
  public const int InviteCodeFieldNumber = 14;
  private string inviteCode_ = "";
  /// <summary>
  ///邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 16;
  private string signature_ = "";
  /// <summary>
  ///个性签名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "agent_level" field.</summary>
  public const int AgentLevelFieldNumber = 17;
  private int agentLevel_;
  /// <summary>
  ///代理等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentLevel {
    get { return agentLevel_; }
    set {
      agentLevel_ = value;
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 18;
  private string password_ = "";
  /// <summary>
  ///玩家密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "whatsup_msg" field.</summary>
  public const int WhatsupMsgFieldNumber = 19;
  private string whatsupMsg_ = "";
  /// <summary>
  ///个性whats
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WhatsupMsg {
    get { return whatsupMsg_; }
    set {
      whatsupMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "telegram_msg" field.</summary>
  public const int TelegramMsgFieldNumber = 20;
  private string telegramMsg_ = "";
  /// <summary>
  ///个性telegram
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TelegramMsg {
    get { return telegramMsg_; }
    set {
      telegramMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "facebook_msg" field.</summary>
  public const int FacebookMsgFieldNumber = 21;
  private string facebookMsg_ = "";
  /// <summary>
  ///个性facebook
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FacebookMsg {
    get { return facebookMsg_; }
    set {
      facebookMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "frist_login" field.</summary>
  public const int FristLoginFieldNumber = 22;
  private bool fristLogin_;
  /// <summary>
  ///是否第一次登陆
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool FristLogin {
    get { return fristLogin_; }
    set {
      fristLogin_ = value;
    }
  }

  /// <summary>Field number for the "agent_type" field.</summary>
  public const int AgentTypeFieldNumber = 23;
  private int agentType_;
  /// <summary>
  ///用户类型  8:线上用户 9:线下用户
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentType {
    get { return agentType_; }
    set {
      agentType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerLoginResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerLoginResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResCode != other.ResCode) return false;
    if (UserId != other.UserId) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Account != other.Account) return false;
    if (Nickname != other.Nickname) return false;
    if (Avatar != other.Avatar) return false;
    if (FirstRecharge != other.FirstRecharge) return false;
    if (UserType != other.UserType) return false;
    if (IsDrain != other.IsDrain) return false;
    if (Coin != other.Coin) return false;
    if (PhoneNum != other.PhoneNum) return false;
    if (VipLevel != other.VipLevel) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if (InviteCode != other.InviteCode) return false;
    if (Signature != other.Signature) return false;
    if (AgentLevel != other.AgentLevel) return false;
    if (Password != other.Password) return false;
    if (WhatsupMsg != other.WhatsupMsg) return false;
    if (TelegramMsg != other.TelegramMsg) return false;
    if (FacebookMsg != other.FacebookMsg) return false;
    if (FristLogin != other.FristLogin) return false;
    if (AgentType != other.AgentType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ResCode != 0) hash ^= ResCode.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (FirstRecharge != false) hash ^= FirstRecharge.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (IsDrain != 0) hash ^= IsDrain.GetHashCode();
    if (Coin != 0UL) hash ^= Coin.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    if (AgentLevel != 0) hash ^= AgentLevel.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (WhatsupMsg.Length != 0) hash ^= WhatsupMsg.GetHashCode();
    if (TelegramMsg.Length != 0) hash ^= TelegramMsg.GetHashCode();
    if (FacebookMsg.Length != 0) hash ^= FacebookMsg.GetHashCode();
    if (FristLogin != false) hash ^= FristLogin.GetHashCode();
    if (AgentType != 0) hash ^= AgentType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Account.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Account);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Avatar);
    }
    if (FirstRecharge != false) {
      output.WriteRawTag(56);
      output.WriteBool(FirstRecharge);
    }
    if (UserType != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(UserType);
    }
    if (IsDrain != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(IsDrain);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(PhoneNum);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(AvatarFrame);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(InviteCode);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(Signature);
    }
    if (AgentLevel != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(AgentLevel);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(Password);
    }
    if (WhatsupMsg.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(WhatsupMsg);
    }
    if (TelegramMsg.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(TelegramMsg);
    }
    if (FacebookMsg.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(FacebookMsg);
    }
    if (FristLogin != false) {
      output.WriteRawTag(176, 1);
      output.WriteBool(FristLogin);
    }
    if (AgentType != 0) {
      output.WriteRawTag(184, 1);
      output.WriteInt32(AgentType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Account.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Account);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Avatar);
    }
    if (FirstRecharge != false) {
      output.WriteRawTag(56);
      output.WriteBool(FirstRecharge);
    }
    if (UserType != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(UserType);
    }
    if (IsDrain != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(IsDrain);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(PhoneNum);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(AvatarFrame);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(InviteCode);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(Signature);
    }
    if (AgentLevel != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(AgentLevel);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(146, 1);
      output.WriteString(Password);
    }
    if (WhatsupMsg.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(WhatsupMsg);
    }
    if (TelegramMsg.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(TelegramMsg);
    }
    if (FacebookMsg.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(FacebookMsg);
    }
    if (FristLogin != false) {
      output.WriteRawTag(176, 1);
      output.WriteBool(FristLogin);
    }
    if (AgentType != 0) {
      output.WriteRawTag(184, 1);
      output.WriteInt32(AgentType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ResCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResCode);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (FirstRecharge != false) {
      size += 1 + 1;
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
    }
    if (IsDrain != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsDrain);
    }
    if (Coin != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Coin);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (Signature.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    if (AgentLevel != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(AgentLevel);
    }
    if (Password.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (WhatsupMsg.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(WhatsupMsg);
    }
    if (TelegramMsg.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(TelegramMsg);
    }
    if (FacebookMsg.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(FacebookMsg);
    }
    if (FristLogin != false) {
      size += 2 + 1;
    }
    if (AgentType != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(AgentType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerLoginResp other) {
    if (other == null) {
      return;
    }
    if (other.ResCode != 0) {
      ResCode = other.ResCode;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.FirstRecharge != false) {
      FirstRecharge = other.FirstRecharge;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.IsDrain != 0) {
      IsDrain = other.IsDrain;
    }
    if (other.Coin != 0UL) {
      Coin = other.Coin;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    if (other.AgentLevel != 0) {
      AgentLevel = other.AgentLevel;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.WhatsupMsg.Length != 0) {
      WhatsupMsg = other.WhatsupMsg;
    }
    if (other.TelegramMsg.Length != 0) {
      TelegramMsg = other.TelegramMsg;
    }
    if (other.FacebookMsg.Length != 0) {
      FacebookMsg = other.FacebookMsg;
    }
    if (other.FristLogin != false) {
      FristLogin = other.FristLogin;
    }
    if (other.AgentType != 0) {
      AgentType = other.AgentType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Account = input.ReadString();
          break;
        }
        case 42: {
          Nickname = input.ReadString();
          break;
        }
        case 50: {
          Avatar = input.ReadString();
          break;
        }
        case 56: {
          FirstRecharge = input.ReadBool();
          break;
        }
        case 64: {
          UserType = input.ReadInt32();
          break;
        }
        case 72: {
          IsDrain = input.ReadInt32();
          break;
        }
        case 80: {
          Coin = input.ReadUInt64();
          break;
        }
        case 90: {
          PhoneNum = input.ReadString();
          break;
        }
        case 96: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 104: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 114: {
          InviteCode = input.ReadString();
          break;
        }
        case 130: {
          Signature = input.ReadString();
          break;
        }
        case 136: {
          AgentLevel = input.ReadInt32();
          break;
        }
        case 146: {
          Password = input.ReadString();
          break;
        }
        case 154: {
          WhatsupMsg = input.ReadString();
          break;
        }
        case 162: {
          TelegramMsg = input.ReadString();
          break;
        }
        case 170: {
          FacebookMsg = input.ReadString();
          break;
        }
        case 176: {
          FristLogin = input.ReadBool();
          break;
        }
        case 184: {
          AgentType = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Account = input.ReadString();
          break;
        }
        case 42: {
          Nickname = input.ReadString();
          break;
        }
        case 50: {
          Avatar = input.ReadString();
          break;
        }
        case 56: {
          FirstRecharge = input.ReadBool();
          break;
        }
        case 64: {
          UserType = input.ReadInt32();
          break;
        }
        case 72: {
          IsDrain = input.ReadInt32();
          break;
        }
        case 80: {
          Coin = input.ReadUInt64();
          break;
        }
        case 90: {
          PhoneNum = input.ReadString();
          break;
        }
        case 96: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 104: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 114: {
          InviteCode = input.ReadString();
          break;
        }
        case 130: {
          Signature = input.ReadString();
          break;
        }
        case 136: {
          AgentLevel = input.ReadInt32();
          break;
        }
        case 146: {
          Password = input.ReadString();
          break;
        }
        case 154: {
          WhatsupMsg = input.ReadString();
          break;
        }
        case 162: {
          TelegramMsg = input.ReadString();
          break;
        }
        case 170: {
          FacebookMsg = input.ReadString();
          break;
        }
        case 176: {
          FristLogin = input.ReadBool();
          break;
        }
        case 184: {
          AgentType = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///修改密码
/// </summary>
public sealed partial class MsgModifyPassword : pb::IMessage<MsgModifyPassword>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgModifyPassword> _parser = new pb::MessageParser<MsgModifyPassword>(() => new MsgModifyPassword());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgModifyPassword> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword(MsgModifyPassword other) : this() {
    oldPassword_ = other.oldPassword_;
    newPassword_ = other.newPassword_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword Clone() {
    return new MsgModifyPassword(this);
  }

  /// <summary>Field number for the "old_password" field.</summary>
  public const int OldPasswordFieldNumber = 1;
  private string oldPassword_ = "";
  /// <summary>
  ///旧密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OldPassword {
    get { return oldPassword_; }
    set {
      oldPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "new_password" field.</summary>
  public const int NewPasswordFieldNumber = 2;
  private string newPassword_ = "";
  /// <summary>
  ///新密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPassword {
    get { return newPassword_; }
    set {
      newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgModifyPassword);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgModifyPassword other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OldPassword != other.OldPassword) return false;
    if (NewPassword != other.NewPassword) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OldPassword.Length != 0) hash ^= OldPassword.GetHashCode();
    if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (OldPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(OldPassword);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (OldPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(OldPassword);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OldPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPassword);
    }
    if (NewPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgModifyPassword other) {
    if (other == null) {
      return;
    }
    if (other.OldPassword.Length != 0) {
      OldPassword = other.OldPassword;
    }
    if (other.NewPassword.Length != 0) {
      NewPassword = other.NewPassword;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          OldPassword = input.ReadString();
          break;
        }
        case 18: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          OldPassword = input.ReadString();
          break;
        }
        case 18: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///绑定手机
/// </summary>
public sealed partial class MsgBindPhone : pb::IMessage<MsgBindPhone>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBindPhone> _parser = new pb::MessageParser<MsgBindPhone>(() => new MsgBindPhone());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBindPhone> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone(MsgBindPhone other) : this() {
    code_ = other.code_;
    phoneNum_ = other.phoneNum_;
    password_ = other.password_;
    inviteCode_ = other.inviteCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone Clone() {
    return new MsgBindPhone(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private int code_;
  /// <summary>
  ///验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 2;
  private string phoneNum_ = "";
  /// <summary>
  ///手机号码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 3;
  private string password_ = "";
  /// <summary>
  ///密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "invite_code" field.</summary>
  public const int InviteCodeFieldNumber = 4;
  private string inviteCode_ = "";
  /// <summary>
  ///邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBindPhone);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBindPhone other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (PhoneNum != other.PhoneNum) return false;
    if (Password != other.Password) return false;
    if (InviteCode != other.InviteCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PhoneNum);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(InviteCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PhoneNum);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(InviteCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBindPhone other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          PhoneNum = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
        case 34: {
          InviteCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          PhoneNum = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
        case 34: {
          InviteCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCommonKV : pb::IMessage<MsgCommonKV>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCommonKV> _parser = new pb::MessageParser<MsgCommonKV>(() => new MsgCommonKV());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCommonKV> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonKV() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonKV(MsgCommonKV other) : this() {
    k_ = other.k_;
    v_ = other.v_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCommonKV Clone() {
    return new MsgCommonKV(this);
  }

  /// <summary>Field number for the "k" field.</summary>
  public const int KFieldNumber = 1;
  private int k_;
  /// <summary>
  ///key
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int K {
    get { return k_; }
    set {
      k_ = value;
    }
  }

  /// <summary>Field number for the "v" field.</summary>
  public const int VFieldNumber = 2;
  private int v_;
  /// <summary>
  ///value
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int V {
    get { return v_; }
    set {
      v_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCommonKV);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCommonKV other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (K != other.K) return false;
    if (V != other.V) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (K != 0) hash ^= K.GetHashCode();
    if (V != 0) hash ^= V.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (K != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(K);
    }
    if (V != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(V);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (K != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(K);
    }
    if (V != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(V);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (K != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(K);
    }
    if (V != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(V);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCommonKV other) {
    if (other == null) {
      return;
    }
    if (other.K != 0) {
      K = other.K;
    }
    if (other.V != 0) {
      V = other.V;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          K = input.ReadInt32();
          break;
        }
        case 16: {
          V = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          K = input.ReadInt32();
          break;
        }
        case 16: {
          V = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///签到信息返回
/// </summary>
public sealed partial class MsgCheckInInfo : pb::IMessage<MsgCheckInInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCheckInInfo> _parser = new pb::MessageParser<MsgCheckInInfo>(() => new MsgCheckInInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCheckInInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCheckInInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCheckInInfo(MsgCheckInInfo other) : this() {
    checkDays_ = other.checkDays_;
    isOpen_ = other.isOpen_;
    canPick_ = other.canPick_;
    checkInCfg_ = other.checkInCfg_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCheckInInfo Clone() {
    return new MsgCheckInInfo(this);
  }

  /// <summary>Field number for the "check_days" field.</summary>
  public const int CheckDaysFieldNumber = 1;
  private int checkDays_;
  /// <summary>
  ///已签到天数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CheckDays {
    get { return checkDays_; }
    set {
      checkDays_ = value;
    }
  }

  /// <summary>Field number for the "is_open" field.</summary>
  public const int IsOpenFieldNumber = 2;
  private bool isOpen_;
  /// <summary>
  ///活动是否开启
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsOpen {
    get { return isOpen_; }
    set {
      isOpen_ = value;
    }
  }

  /// <summary>Field number for the "can_pick" field.</summary>
  public const int CanPickFieldNumber = 3;
  private bool canPick_;
  /// <summary>
  ///是否可以领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool CanPick {
    get { return canPick_; }
    set {
      canPick_ = value;
    }
  }

  /// <summary>Field number for the "CheckInCfg" field.</summary>
  public const int CheckInCfgFieldNumber = 4;
  private static readonly pb::FieldCodec<global::MsgCommonKV> _repeated_checkInCfg_codec
      = pb::FieldCodec.ForMessage(34, global::MsgCommonKV.Parser);
  private readonly pbc::RepeatedField<global::MsgCommonKV> checkInCfg_ = new pbc::RepeatedField<global::MsgCommonKV>();
  /// <summary>
  ///签到配置(k:天数 v:奖励)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgCommonKV> CheckInCfg {
    get { return checkInCfg_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCheckInInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCheckInInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CheckDays != other.CheckDays) return false;
    if (IsOpen != other.IsOpen) return false;
    if (CanPick != other.CanPick) return false;
    if(!checkInCfg_.Equals(other.checkInCfg_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (CheckDays != 0) hash ^= CheckDays.GetHashCode();
    if (IsOpen != false) hash ^= IsOpen.GetHashCode();
    if (CanPick != false) hash ^= CanPick.GetHashCode();
    hash ^= checkInCfg_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (CheckDays != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CheckDays);
    }
    if (IsOpen != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsOpen);
    }
    if (CanPick != false) {
      output.WriteRawTag(24);
      output.WriteBool(CanPick);
    }
    checkInCfg_.WriteTo(output, _repeated_checkInCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (CheckDays != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(CheckDays);
    }
    if (IsOpen != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsOpen);
    }
    if (CanPick != false) {
      output.WriteRawTag(24);
      output.WriteBool(CanPick);
    }
    checkInCfg_.WriteTo(ref output, _repeated_checkInCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (CheckDays != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CheckDays);
    }
    if (IsOpen != false) {
      size += 1 + 1;
    }
    if (CanPick != false) {
      size += 1 + 1;
    }
    size += checkInCfg_.CalculateSize(_repeated_checkInCfg_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCheckInInfo other) {
    if (other == null) {
      return;
    }
    if (other.CheckDays != 0) {
      CheckDays = other.CheckDays;
    }
    if (other.IsOpen != false) {
      IsOpen = other.IsOpen;
    }
    if (other.CanPick != false) {
      CanPick = other.CanPick;
    }
    checkInCfg_.Add(other.checkInCfg_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CheckDays = input.ReadInt32();
          break;
        }
        case 16: {
          IsOpen = input.ReadBool();
          break;
        }
        case 24: {
          CanPick = input.ReadBool();
          break;
        }
        case 34: {
          checkInCfg_.AddEntriesFrom(input, _repeated_checkInCfg_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CheckDays = input.ReadInt32();
          break;
        }
        case 16: {
          IsOpen = input.ReadBool();
          break;
        }
        case 24: {
          CanPick = input.ReadBool();
          break;
        }
        case 34: {
          checkInCfg_.AddEntriesFrom(ref input, _repeated_checkInCfg_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///转盘信息
/// </summary>
public sealed partial class MsgTurntableHistoryData : pb::IMessage<MsgTurntableHistoryData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurntableHistoryData> _parser = new pb::MessageParser<MsgTurntableHistoryData>(() => new MsgTurntableHistoryData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurntableHistoryData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableHistoryData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableHistoryData(MsgTurntableHistoryData other) : this() {
    userId_ = other.userId_;
    nickName_ = other.nickName_;
    score_ = other.score_;
    award_ = other.award_;
    type_ = other.type_;
    awardType_ = other.awardType_;
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableHistoryData Clone() {
    return new MsgTurntableHistoryData(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "nick_name" field.</summary>
  public const int NickNameFieldNumber = 2;
  private string nickName_ = "";
  /// <summary>
  ///昵称 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NickName {
    get { return nickName_; }
    set {
      nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 3;
  private int score_;
  /// <summary>
  ///使用积分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "award" field.</summary>
  public const int AwardFieldNumber = 4;
  private int award_;
  /// <summary>
  ///转盘奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Award {
    get { return award_; }
    set {
      award_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 5;
  private int type_;
  /// <summary>
  ///类型(0:个人 1:大赢家)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "award_type" field.</summary>
  public const int AwardTypeFieldNumber = 6;
  private int awardType_;
  /// <summary>
  ///奖励类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AwardType {
    get { return awardType_; }
    set {
      awardType_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 7;
  private string time_ = "";
  /// <summary>
  ///时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Time {
    get { return time_; }
    set {
      time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurntableHistoryData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurntableHistoryData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (NickName != other.NickName) return false;
    if (Score != other.Score) return false;
    if (Award != other.Award) return false;
    if (Type != other.Type) return false;
    if (AwardType != other.AwardType) return false;
    if (Time != other.Time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (NickName.Length != 0) hash ^= NickName.GetHashCode();
    if (Score != 0) hash ^= Score.GetHashCode();
    if (Award != 0) hash ^= Award.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (AwardType != 0) hash ^= AwardType.GetHashCode();
    if (Time.Length != 0) hash ^= Time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NickName);
    }
    if (Score != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Score);
    }
    if (Award != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Award);
    }
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Type);
    }
    if (AwardType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(AwardType);
    }
    if (Time.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NickName);
    }
    if (Score != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Score);
    }
    if (Award != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Award);
    }
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Type);
    }
    if (AwardType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(AwardType);
    }
    if (Time.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (NickName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
    }
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
    }
    if (Award != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (AwardType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardType);
    }
    if (Time.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurntableHistoryData other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.NickName.Length != 0) {
      NickName = other.NickName;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    if (other.Award != 0) {
      Award = other.Award;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.AwardType != 0) {
      AwardType = other.AwardType;
    }
    if (other.Time.Length != 0) {
      Time = other.Time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          NickName = input.ReadString();
          break;
        }
        case 24: {
          Score = input.ReadInt32();
          break;
        }
        case 32: {
          Award = input.ReadInt32();
          break;
        }
        case 40: {
          Type = input.ReadInt32();
          break;
        }
        case 48: {
          AwardType = input.ReadInt32();
          break;
        }
        case 58: {
          Time = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          NickName = input.ReadString();
          break;
        }
        case 24: {
          Score = input.ReadInt32();
          break;
        }
        case 32: {
          Award = input.ReadInt32();
          break;
        }
        case 40: {
          Type = input.ReadInt32();
          break;
        }
        case 48: {
          AwardType = input.ReadInt32();
          break;
        }
        case 58: {
          Time = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgTurnPlayInfo : pb::IMessage<MsgTurnPlayInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurnPlayInfo> _parser = new pb::MessageParser<MsgTurnPlayInfo>(() => new MsgTurnPlayInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurnPlayInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurnPlayInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurnPlayInfo(MsgTurnPlayInfo other) : this() {
    playNum_ = other.playNum_;
    limitTurn_ = other.limitTurn_;
    needScore_ = other.needScore_;
    turnPro_ = other.turnPro_;
    turnMaxPro_ = other.turnMaxPro_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurnPlayInfo Clone() {
    return new MsgTurnPlayInfo(this);
  }

  /// <summary>Field number for the "play_num" field.</summary>
  public const int PlayNumFieldNumber = 1;
  private int playNum_;
  /// <summary>
  ///已转动次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PlayNum {
    get { return playNum_; }
    set {
      playNum_ = value;
    }
  }

  /// <summary>Field number for the "limit_turn" field.</summary>
  public const int LimitTurnFieldNumber = 2;
  private int limitTurn_;
  /// <summary>
  ///转动限制次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LimitTurn {
    get { return limitTurn_; }
    set {
      limitTurn_ = value;
    }
  }

  /// <summary>Field number for the "need_score" field.</summary>
  public const int NeedScoreFieldNumber = 3;
  private int needScore_;
  /// <summary>
  ///转动需要积分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int NeedScore {
    get { return needScore_; }
    set {
      needScore_ = value;
    }
  }

  /// <summary>Field number for the "turn_pro" field.</summary>
  public const int TurnProFieldNumber = 4;
  private int turnPro_;
  /// <summary>
  ///当前 进度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TurnPro {
    get { return turnPro_; }
    set {
      turnPro_ = value;
    }
  }

  /// <summary>Field number for the "turn_max_pro" field.</summary>
  public const int TurnMaxProFieldNumber = 5;
  private int turnMaxPro_;
  /// <summary>
  ///转动最大进度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TurnMaxPro {
    get { return turnMaxPro_; }
    set {
      turnMaxPro_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurnPlayInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurnPlayInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayNum != other.PlayNum) return false;
    if (LimitTurn != other.LimitTurn) return false;
    if (NeedScore != other.NeedScore) return false;
    if (TurnPro != other.TurnPro) return false;
    if (TurnMaxPro != other.TurnMaxPro) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayNum != 0) hash ^= PlayNum.GetHashCode();
    if (LimitTurn != 0) hash ^= LimitTurn.GetHashCode();
    if (NeedScore != 0) hash ^= NeedScore.GetHashCode();
    if (TurnPro != 0) hash ^= TurnPro.GetHashCode();
    if (TurnMaxPro != 0) hash ^= TurnMaxPro.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (PlayNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayNum);
    }
    if (LimitTurn != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(LimitTurn);
    }
    if (NeedScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NeedScore);
    }
    if (TurnPro != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(TurnPro);
    }
    if (TurnMaxPro != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(TurnMaxPro);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (PlayNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayNum);
    }
    if (LimitTurn != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(LimitTurn);
    }
    if (NeedScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(NeedScore);
    }
    if (TurnPro != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(TurnPro);
    }
    if (TurnMaxPro != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(TurnMaxPro);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PlayNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayNum);
    }
    if (LimitTurn != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitTurn);
    }
    if (NeedScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedScore);
    }
    if (TurnPro != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TurnPro);
    }
    if (TurnMaxPro != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TurnMaxPro);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurnPlayInfo other) {
    if (other == null) {
      return;
    }
    if (other.PlayNum != 0) {
      PlayNum = other.PlayNum;
    }
    if (other.LimitTurn != 0) {
      LimitTurn = other.LimitTurn;
    }
    if (other.NeedScore != 0) {
      NeedScore = other.NeedScore;
    }
    if (other.TurnPro != 0) {
      TurnPro = other.TurnPro;
    }
    if (other.TurnMaxPro != 0) {
      TurnMaxPro = other.TurnMaxPro;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PlayNum = input.ReadInt32();
          break;
        }
        case 16: {
          LimitTurn = input.ReadInt32();
          break;
        }
        case 24: {
          NeedScore = input.ReadInt32();
          break;
        }
        case 32: {
          TurnPro = input.ReadInt32();
          break;
        }
        case 40: {
          TurnMaxPro = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PlayNum = input.ReadInt32();
          break;
        }
        case 16: {
          LimitTurn = input.ReadInt32();
          break;
        }
        case 24: {
          NeedScore = input.ReadInt32();
          break;
        }
        case 32: {
          TurnPro = input.ReadInt32();
          break;
        }
        case 40: {
          TurnMaxPro = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgTurnCfg : pb::IMessage<MsgTurnCfg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurnCfg> _parser = new pb::MessageParser<MsgTurnCfg>(() => new MsgTurnCfg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurnCfg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurnCfg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurnCfg(MsgTurnCfg other) : this() {
    index_ = other.index_;
    arwad_ = other.arwad_;
    arwadType_ = other.arwadType_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurnCfg Clone() {
    return new MsgTurnCfg(this);
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 1;
  private int index_;
  /// <summary>
  ///转盘索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Index {
    get { return index_; }
    set {
      index_ = value;
    }
  }

  /// <summary>Field number for the "arwad" field.</summary>
  public const int ArwadFieldNumber = 2;
  private int arwad_;
  /// <summary>
  ///奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Arwad {
    get { return arwad_; }
    set {
      arwad_ = value;
    }
  }

  /// <summary>Field number for the "arwad_type" field.</summary>
  public const int ArwadTypeFieldNumber = 3;
  private int arwadType_;
  /// <summary>
  ///奖励类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ArwadType {
    get { return arwadType_; }
    set {
      arwadType_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 4;
  private int type_;
  /// <summary>
  ///类型 1 白银盘 2 黄金盘
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurnCfg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurnCfg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Index != other.Index) return false;
    if (Arwad != other.Arwad) return false;
    if (ArwadType != other.ArwadType) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Index != 0) hash ^= Index.GetHashCode();
    if (Arwad != 0) hash ^= Arwad.GetHashCode();
    if (ArwadType != 0) hash ^= ArwadType.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (Arwad != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Arwad);
    }
    if (ArwadType != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ArwadType);
    }
    if (Type != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Index);
    }
    if (Arwad != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Arwad);
    }
    if (ArwadType != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ArwadType);
    }
    if (Type != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
    }
    if (Arwad != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Arwad);
    }
    if (ArwadType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArwadType);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurnCfg other) {
    if (other == null) {
      return;
    }
    if (other.Index != 0) {
      Index = other.Index;
    }
    if (other.Arwad != 0) {
      Arwad = other.Arwad;
    }
    if (other.ArwadType != 0) {
      ArwadType = other.ArwadType;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          Arwad = input.ReadInt32();
          break;
        }
        case 24: {
          ArwadType = input.ReadInt32();
          break;
        }
        case 32: {
          Type = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Index = input.ReadInt32();
          break;
        }
        case 16: {
          Arwad = input.ReadInt32();
          break;
        }
        case 24: {
          ArwadType = input.ReadInt32();
          break;
        }
        case 32: {
          Type = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///转盘信息
/// </summary>
public sealed partial class MsgTurntableData : pb::IMessage<MsgTurntableData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurntableData> _parser = new pb::MessageParser<MsgTurntableData>(() => new MsgTurntableData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurntableData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableData(MsgTurntableData other) : this() {
    score_ = other.score_;
    goldToScore_ = other.goldToScore_;
    silverInfo_ = other.silverInfo_ != null ? other.silverInfo_.Clone() : null;
    goldInfo_ = other.goldInfo_ != null ? other.goldInfo_.Clone() : null;
    silverCfg_ = other.silverCfg_.Clone();
    goldCfg_ = other.goldCfg_.Clone();
    thisHistory_ = other.thisHistory_.Clone();
    bigHistory_ = other.bigHistory_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableData Clone() {
    return new MsgTurntableData(this);
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 1;
  private long score_;
  /// <summary>
  ///玩家积分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "gold_to_score" field.</summary>
  public const int GoldToScoreFieldNumber = 3;
  private int goldToScore_;
  /// <summary>
  ///金币与积分比例
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int GoldToScore {
    get { return goldToScore_; }
    set {
      goldToScore_ = value;
    }
  }

  /// <summary>Field number for the "silver_info" field.</summary>
  public const int SilverInfoFieldNumber = 4;
  private global::MsgTurnPlayInfo silverInfo_;
  /// <summary>
  ///白银盘信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgTurnPlayInfo SilverInfo {
    get { return silverInfo_; }
    set {
      silverInfo_ = value;
    }
  }

  /// <summary>Field number for the "gold_info" field.</summary>
  public const int GoldInfoFieldNumber = 5;
  private global::MsgTurnPlayInfo goldInfo_;
  /// <summary>
  ///黄金盘信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgTurnPlayInfo GoldInfo {
    get { return goldInfo_; }
    set {
      goldInfo_ = value;
    }
  }

  /// <summary>Field number for the "silver_cfg" field.</summary>
  public const int SilverCfgFieldNumber = 6;
  private static readonly pb::FieldCodec<global::MsgTurnCfg> _repeated_silverCfg_codec
      = pb::FieldCodec.ForMessage(50, global::MsgTurnCfg.Parser);
  private readonly pbc::RepeatedField<global::MsgTurnCfg> silverCfg_ = new pbc::RepeatedField<global::MsgTurnCfg>();
  /// <summary>
  ///盘配置 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgTurnCfg> SilverCfg {
    get { return silverCfg_; }
  }

  /// <summary>Field number for the "gold_cfg" field.</summary>
  public const int GoldCfgFieldNumber = 7;
  private static readonly pb::FieldCodec<global::MsgTurnCfg> _repeated_goldCfg_codec
      = pb::FieldCodec.ForMessage(58, global::MsgTurnCfg.Parser);
  private readonly pbc::RepeatedField<global::MsgTurnCfg> goldCfg_ = new pbc::RepeatedField<global::MsgTurnCfg>();
  /// <summary>
  ///黄金盘配置
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgTurnCfg> GoldCfg {
    get { return goldCfg_; }
  }

  /// <summary>Field number for the "this_history" field.</summary>
  public const int ThisHistoryFieldNumber = 8;
  private static readonly pb::FieldCodec<global::MsgTurntableHistoryData> _repeated_thisHistory_codec
      = pb::FieldCodec.ForMessage(66, global::MsgTurntableHistoryData.Parser);
  private readonly pbc::RepeatedField<global::MsgTurntableHistoryData> thisHistory_ = new pbc::RepeatedField<global::MsgTurntableHistoryData>();
  /// <summary>
  ///自己的历史数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgTurntableHistoryData> ThisHistory {
    get { return thisHistory_; }
  }

  /// <summary>Field number for the "big_history" field.</summary>
  public const int BigHistoryFieldNumber = 9;
  private static readonly pb::FieldCodec<global::MsgTurntableHistoryData> _repeated_bigHistory_codec
      = pb::FieldCodec.ForMessage(74, global::MsgTurntableHistoryData.Parser);
  private readonly pbc::RepeatedField<global::MsgTurntableHistoryData> bigHistory_ = new pbc::RepeatedField<global::MsgTurntableHistoryData>();
  /// <summary>
  ///大赢家历史数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgTurntableHistoryData> BigHistory {
    get { return bigHistory_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurntableData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurntableData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Score != other.Score) return false;
    if (GoldToScore != other.GoldToScore) return false;
    if (!object.Equals(SilverInfo, other.SilverInfo)) return false;
    if (!object.Equals(GoldInfo, other.GoldInfo)) return false;
    if(!silverCfg_.Equals(other.silverCfg_)) return false;
    if(!goldCfg_.Equals(other.goldCfg_)) return false;
    if(!thisHistory_.Equals(other.thisHistory_)) return false;
    if(!bigHistory_.Equals(other.bigHistory_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Score != 0L) hash ^= Score.GetHashCode();
    if (GoldToScore != 0) hash ^= GoldToScore.GetHashCode();
    if (silverInfo_ != null) hash ^= SilverInfo.GetHashCode();
    if (goldInfo_ != null) hash ^= GoldInfo.GetHashCode();
    hash ^= silverCfg_.GetHashCode();
    hash ^= goldCfg_.GetHashCode();
    hash ^= thisHistory_.GetHashCode();
    hash ^= bigHistory_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Score != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Score);
    }
    if (GoldToScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GoldToScore);
    }
    if (silverInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(SilverInfo);
    }
    if (goldInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GoldInfo);
    }
    silverCfg_.WriteTo(output, _repeated_silverCfg_codec);
    goldCfg_.WriteTo(output, _repeated_goldCfg_codec);
    thisHistory_.WriteTo(output, _repeated_thisHistory_codec);
    bigHistory_.WriteTo(output, _repeated_bigHistory_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Score != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Score);
    }
    if (GoldToScore != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(GoldToScore);
    }
    if (silverInfo_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(SilverInfo);
    }
    if (goldInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(GoldInfo);
    }
    silverCfg_.WriteTo(ref output, _repeated_silverCfg_codec);
    goldCfg_.WriteTo(ref output, _repeated_goldCfg_codec);
    thisHistory_.WriteTo(ref output, _repeated_thisHistory_codec);
    bigHistory_.WriteTo(ref output, _repeated_bigHistory_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Score != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
    }
    if (GoldToScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldToScore);
    }
    if (silverInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SilverInfo);
    }
    if (goldInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GoldInfo);
    }
    size += silverCfg_.CalculateSize(_repeated_silverCfg_codec);
    size += goldCfg_.CalculateSize(_repeated_goldCfg_codec);
    size += thisHistory_.CalculateSize(_repeated_thisHistory_codec);
    size += bigHistory_.CalculateSize(_repeated_bigHistory_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurntableData other) {
    if (other == null) {
      return;
    }
    if (other.Score != 0L) {
      Score = other.Score;
    }
    if (other.GoldToScore != 0) {
      GoldToScore = other.GoldToScore;
    }
    if (other.silverInfo_ != null) {
      if (silverInfo_ == null) {
        SilverInfo = new global::MsgTurnPlayInfo();
      }
      SilverInfo.MergeFrom(other.SilverInfo);
    }
    if (other.goldInfo_ != null) {
      if (goldInfo_ == null) {
        GoldInfo = new global::MsgTurnPlayInfo();
      }
      GoldInfo.MergeFrom(other.GoldInfo);
    }
    silverCfg_.Add(other.silverCfg_);
    goldCfg_.Add(other.goldCfg_);
    thisHistory_.Add(other.thisHistory_);
    bigHistory_.Add(other.bigHistory_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Score = input.ReadInt64();
          break;
        }
        case 24: {
          GoldToScore = input.ReadInt32();
          break;
        }
        case 34: {
          if (silverInfo_ == null) {
            SilverInfo = new global::MsgTurnPlayInfo();
          }
          input.ReadMessage(SilverInfo);
          break;
        }
        case 42: {
          if (goldInfo_ == null) {
            GoldInfo = new global::MsgTurnPlayInfo();
          }
          input.ReadMessage(GoldInfo);
          break;
        }
        case 50: {
          silverCfg_.AddEntriesFrom(input, _repeated_silverCfg_codec);
          break;
        }
        case 58: {
          goldCfg_.AddEntriesFrom(input, _repeated_goldCfg_codec);
          break;
        }
        case 66: {
          thisHistory_.AddEntriesFrom(input, _repeated_thisHistory_codec);
          break;
        }
        case 74: {
          bigHistory_.AddEntriesFrom(input, _repeated_bigHistory_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Score = input.ReadInt64();
          break;
        }
        case 24: {
          GoldToScore = input.ReadInt32();
          break;
        }
        case 34: {
          if (silverInfo_ == null) {
            SilverInfo = new global::MsgTurnPlayInfo();
          }
          input.ReadMessage(SilverInfo);
          break;
        }
        case 42: {
          if (goldInfo_ == null) {
            GoldInfo = new global::MsgTurnPlayInfo();
          }
          input.ReadMessage(GoldInfo);
          break;
        }
        case 50: {
          silverCfg_.AddEntriesFrom(ref input, _repeated_silverCfg_codec);
          break;
        }
        case 58: {
          goldCfg_.AddEntriesFrom(ref input, _repeated_goldCfg_codec);
          break;
        }
        case 66: {
          thisHistory_.AddEntriesFrom(ref input, _repeated_thisHistory_codec);
          break;
        }
        case 74: {
          bigHistory_.AddEntriesFrom(ref input, _repeated_bigHistory_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩转盘
/// </summary>
public sealed partial class MsgTurntable : pb::IMessage<MsgTurntable>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurntable> _parser = new pb::MessageParser<MsgTurntable>(() => new MsgTurntable());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurntable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntable(MsgTurntable other) : this() {
    userId_ = other.userId_;
    turnType_ = other.turnType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntable Clone() {
    return new MsgTurntable(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "turn_type" field.</summary>
  public const int TurnTypeFieldNumber = 2;
  private long turnType_;
  /// <summary>
  ///转盘ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TurnType {
    get { return turnType_; }
    set {
      turnType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurntable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurntable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (TurnType != other.TurnType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (TurnType != 0L) hash ^= TurnType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (TurnType != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TurnType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (TurnType != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TurnType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (TurnType != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TurnType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurntable other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.TurnType != 0L) {
      TurnType = other.TurnType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          TurnType = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          TurnType = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///转盘玩后返回
/// </summary>
public sealed partial class MsgTurntableResp : pb::IMessage<MsgTurntableResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTurntableResp> _parser = new pb::MessageParser<MsgTurntableResp>(() => new MsgTurntableResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTurntableResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableResp(MsgTurntableResp other) : this() {
    score_ = other.score_;
    awardType_ = other.awardType_;
    newValue_ = other.newValue_;
    turnIndex_ = other.turnIndex_;
    getValue_ = other.getValue_;
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTurntableResp Clone() {
    return new MsgTurntableResp(this);
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 1;
  private long score_;
  /// <summary>
  ///最新积分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "award_type" field.</summary>
  public const int AwardTypeFieldNumber = 2;
  private int awardType_;
  /// <summary>
  ///奖励类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AwardType {
    get { return awardType_; }
    set {
      awardType_ = value;
    }
  }

  /// <summary>Field number for the "new_value" field.</summary>
  public const int NewValueFieldNumber = 3;
  private long newValue_;
  /// <summary>
  ///最新奖励值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long NewValue {
    get { return newValue_; }
    set {
      newValue_ = value;
    }
  }

  /// <summary>Field number for the "turnIndex" field.</summary>
  public const int TurnIndexFieldNumber = 4;
  private long turnIndex_;
  /// <summary>
  ///转到下标
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TurnIndex {
    get { return turnIndex_; }
    set {
      turnIndex_ = value;
    }
  }

  /// <summary>Field number for the "get_value" field.</summary>
  public const int GetValueFieldNumber = 5;
  private long getValue_;
  /// <summary>
  ///奖励值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long GetValue {
    get { return getValue_; }
    set {
      getValue_ = value;
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 6;
  private int code_;
  /// <summary>
  ///错误Code 前端码211020/211021
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTurntableResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTurntableResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Score != other.Score) return false;
    if (AwardType != other.AwardType) return false;
    if (NewValue != other.NewValue) return false;
    if (TurnIndex != other.TurnIndex) return false;
    if (GetValue != other.GetValue) return false;
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Score != 0L) hash ^= Score.GetHashCode();
    if (AwardType != 0) hash ^= AwardType.GetHashCode();
    if (NewValue != 0L) hash ^= NewValue.GetHashCode();
    if (TurnIndex != 0L) hash ^= TurnIndex.GetHashCode();
    if (GetValue != 0L) hash ^= GetValue.GetHashCode();
    if (Code != 0) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Score != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Score);
    }
    if (AwardType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AwardType);
    }
    if (NewValue != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(NewValue);
    }
    if (TurnIndex != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(TurnIndex);
    }
    if (GetValue != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(GetValue);
    }
    if (Code != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Score != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Score);
    }
    if (AwardType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AwardType);
    }
    if (NewValue != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(NewValue);
    }
    if (TurnIndex != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(TurnIndex);
    }
    if (GetValue != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(GetValue);
    }
    if (Code != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Score != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
    }
    if (AwardType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardType);
    }
    if (NewValue != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewValue);
    }
    if (TurnIndex != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TurnIndex);
    }
    if (GetValue != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(GetValue);
    }
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTurntableResp other) {
    if (other == null) {
      return;
    }
    if (other.Score != 0L) {
      Score = other.Score;
    }
    if (other.AwardType != 0) {
      AwardType = other.AwardType;
    }
    if (other.NewValue != 0L) {
      NewValue = other.NewValue;
    }
    if (other.TurnIndex != 0L) {
      TurnIndex = other.TurnIndex;
    }
    if (other.GetValue != 0L) {
      GetValue = other.GetValue;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Score = input.ReadInt64();
          break;
        }
        case 16: {
          AwardType = input.ReadInt32();
          break;
        }
        case 24: {
          NewValue = input.ReadInt64();
          break;
        }
        case 32: {
          TurnIndex = input.ReadInt64();
          break;
        }
        case 40: {
          GetValue = input.ReadInt64();
          break;
        }
        case 48: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Score = input.ReadInt64();
          break;
        }
        case 16: {
          AwardType = input.ReadInt32();
          break;
        }
        case 24: {
          NewValue = input.ReadInt64();
          break;
        }
        case 32: {
          TurnIndex = input.ReadInt64();
          break;
        }
        case 40: {
          GetValue = input.ReadInt64();
          break;
        }
        case 48: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邮件列表
/// </summary>
public sealed partial class MsgMailsInfo : pb::IMessage<MsgMailsInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgMailsInfo> _parser = new pb::MessageParser<MsgMailsInfo>(() => new MsgMailsInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgMailsInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailsInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailsInfo(MsgMailsInfo other) : this() {
    mails_ = other.mails_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailsInfo Clone() {
    return new MsgMailsInfo(this);
  }

  /// <summary>Field number for the "mails" field.</summary>
  public const int MailsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgMailData> _repeated_mails_codec
      = pb::FieldCodec.ForMessage(10, global::MsgMailData.Parser);
  private readonly pbc::RepeatedField<global::MsgMailData> mails_ = new pbc::RepeatedField<global::MsgMailData>();
  /// <summary>
  ///邮件列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgMailData> Mails {
    get { return mails_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgMailsInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgMailsInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!mails_.Equals(other.mails_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= mails_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    mails_.WriteTo(output, _repeated_mails_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    mails_.WriteTo(ref output, _repeated_mails_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += mails_.CalculateSize(_repeated_mails_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgMailsInfo other) {
    if (other == null) {
      return;
    }
    mails_.Add(other.mails_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          mails_.AddEntriesFrom(input, _repeated_mails_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          mails_.AddEntriesFrom(ref input, _repeated_mails_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邮件信息
/// </summary>
public sealed partial class MsgMailData : pb::IMessage<MsgMailData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgMailData> _parser = new pb::MessageParser<MsgMailData>(() => new MsgMailData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgMailData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailData(MsgMailData other) : this() {
    mailId_ = other.mailId_;
    sendUserId_ = other.sendUserId_;
    sendTime_ = other.sendTime_;
    title_ = other.title_;
    content_ = other.content_;
    gold_ = other.gold_;
    isRead_ = other.isRead_;
    isClaim_ = other.isClaim_;
    toUserId_ = other.toUserId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgMailData Clone() {
    return new MsgMailData(this);
  }

  /// <summary>Field number for the "mail_id" field.</summary>
  public const int MailIdFieldNumber = 1;
  private int mailId_;
  /// <summary>
  ///邮件id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MailId {
    get { return mailId_; }
    set {
      mailId_ = value;
    }
  }

  /// <summary>Field number for the "send_user_id" field.</summary>
  public const int SendUserIdFieldNumber = 2;
  private int sendUserId_;
  /// <summary>
  ///发送者ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SendUserId {
    get { return sendUserId_; }
    set {
      sendUserId_ = value;
    }
  }

  /// <summary>Field number for the "send_time" field.</summary>
  public const int SendTimeFieldNumber = 3;
  private int sendTime_;
  /// <summary>
  ///发送时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SendTime {
    get { return sendTime_; }
    set {
      sendTime_ = value;
    }
  }

  /// <summary>Field number for the "title" field.</summary>
  public const int TitleFieldNumber = 4;
  private string title_ = "";
  /// <summary>
  ///邮件标题
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Title {
    get { return title_; }
    set {
      title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "content" field.</summary>
  public const int ContentFieldNumber = 5;
  private string content_ = "";
  /// <summary>
  ///邮件内容
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Content {
    get { return content_; }
    set {
      content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 6;
  private long gold_;
  /// <summary>
  ///邮件附件(只有金币)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  /// <summary>Field number for the "is_read" field.</summary>
  public const int IsReadFieldNumber = 7;
  private bool isRead_;
  /// <summary>
  ///是否已读
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsRead {
    get { return isRead_; }
    set {
      isRead_ = value;
    }
  }

  /// <summary>Field number for the "is_claim" field.</summary>
  public const int IsClaimFieldNumber = 8;
  private bool isClaim_;
  /// <summary>
  ///是否领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsClaim {
    get { return isClaim_; }
    set {
      isClaim_ = value;
    }
  }

  /// <summary>Field number for the "to_user_id" field.</summary>
  public const int ToUserIdFieldNumber = 9;
  private int toUserId_;
  /// <summary>
  ///接收者ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ToUserId {
    get { return toUserId_; }
    set {
      toUserId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgMailData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgMailData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MailId != other.MailId) return false;
    if (SendUserId != other.SendUserId) return false;
    if (SendTime != other.SendTime) return false;
    if (Title != other.Title) return false;
    if (Content != other.Content) return false;
    if (Gold != other.Gold) return false;
    if (IsRead != other.IsRead) return false;
    if (IsClaim != other.IsClaim) return false;
    if (ToUserId != other.ToUserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MailId != 0) hash ^= MailId.GetHashCode();
    if (SendUserId != 0) hash ^= SendUserId.GetHashCode();
    if (SendTime != 0) hash ^= SendTime.GetHashCode();
    if (Title.Length != 0) hash ^= Title.GetHashCode();
    if (Content.Length != 0) hash ^= Content.GetHashCode();
    if (Gold != 0L) hash ^= Gold.GetHashCode();
    if (IsRead != false) hash ^= IsRead.GetHashCode();
    if (IsClaim != false) hash ^= IsClaim.GetHashCode();
    if (ToUserId != 0) hash ^= ToUserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (MailId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MailId);
    }
    if (SendUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SendUserId);
    }
    if (SendTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SendTime);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Title);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Content);
    }
    if (Gold != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(Gold);
    }
    if (IsRead != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsRead);
    }
    if (IsClaim != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsClaim);
    }
    if (ToUserId != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(ToUserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (MailId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MailId);
    }
    if (SendUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SendUserId);
    }
    if (SendTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SendTime);
    }
    if (Title.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Title);
    }
    if (Content.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Content);
    }
    if (Gold != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(Gold);
    }
    if (IsRead != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsRead);
    }
    if (IsClaim != false) {
      output.WriteRawTag(64);
      output.WriteBool(IsClaim);
    }
    if (ToUserId != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(ToUserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MailId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailId);
    }
    if (SendUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendUserId);
    }
    if (SendTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendTime);
    }
    if (Title.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
    }
    if (Content.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
    }
    if (Gold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
    }
    if (IsRead != false) {
      size += 1 + 1;
    }
    if (IsClaim != false) {
      size += 1 + 1;
    }
    if (ToUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ToUserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgMailData other) {
    if (other == null) {
      return;
    }
    if (other.MailId != 0) {
      MailId = other.MailId;
    }
    if (other.SendUserId != 0) {
      SendUserId = other.SendUserId;
    }
    if (other.SendTime != 0) {
      SendTime = other.SendTime;
    }
    if (other.Title.Length != 0) {
      Title = other.Title;
    }
    if (other.Content.Length != 0) {
      Content = other.Content;
    }
    if (other.Gold != 0L) {
      Gold = other.Gold;
    }
    if (other.IsRead != false) {
      IsRead = other.IsRead;
    }
    if (other.IsClaim != false) {
      IsClaim = other.IsClaim;
    }
    if (other.ToUserId != 0) {
      ToUserId = other.ToUserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MailId = input.ReadInt32();
          break;
        }
        case 16: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 24: {
          SendTime = input.ReadInt32();
          break;
        }
        case 34: {
          Title = input.ReadString();
          break;
        }
        case 42: {
          Content = input.ReadString();
          break;
        }
        case 48: {
          Gold = input.ReadInt64();
          break;
        }
        case 56: {
          IsRead = input.ReadBool();
          break;
        }
        case 64: {
          IsClaim = input.ReadBool();
          break;
        }
        case 72: {
          ToUserId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MailId = input.ReadInt32();
          break;
        }
        case 16: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 24: {
          SendTime = input.ReadInt32();
          break;
        }
        case 34: {
          Title = input.ReadString();
          break;
        }
        case 42: {
          Content = input.ReadString();
          break;
        }
        case 48: {
          Gold = input.ReadInt64();
          break;
        }
        case 56: {
          IsRead = input.ReadBool();
          break;
        }
        case 64: {
          IsClaim = input.ReadBool();
          break;
        }
        case 72: {
          ToUserId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///分享信息
/// </summary>
public sealed partial class MsgShareData : pb::IMessage<MsgShareData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgShareData> _parser = new pb::MessageParser<MsgShareData>(() => new MsgShareData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgShareData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgShareData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgShareData(MsgShareData other) : this() {
    inviteCode_ = other.inviteCode_;
    bindList_ = other.bindList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgShareData Clone() {
    return new MsgShareData(this);
  }

  /// <summary>Field number for the "invite_code" field.</summary>
  public const int InviteCodeFieldNumber = 1;
  private string inviteCode_ = "";
  /// <summary>
  ///邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "bind_list" field.</summary>
  public const int BindListFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_bindList_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> bindList_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///绑定下级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> BindList {
    get { return bindList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgShareData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgShareData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteCode != other.InviteCode) return false;
    if(!bindList_.Equals(other.bindList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    hash ^= bindList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(InviteCode);
    }
    bindList_.WriteTo(output, _repeated_bindList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(InviteCode);
    }
    bindList_.WriteTo(ref output, _repeated_bindList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    size += bindList_.CalculateSize(_repeated_bindList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgShareData other) {
    if (other == null) {
      return;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    bindList_.Add(other.bindList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          InviteCode = input.ReadString();
          break;
        }
        case 18:
        case 16: {
          bindList_.AddEntriesFrom(input, _repeated_bindList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          InviteCode = input.ReadString();
          break;
        }
        case 18:
        case 16: {
          bindList_.AddEntriesFrom(ref input, _repeated_bindList_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///绑定上级
/// </summary>
public sealed partial class MsgBindParentData : pb::IMessage<MsgBindParentData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBindParentData> _parser = new pb::MessageParser<MsgBindParentData>(() => new MsgBindParentData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBindParentData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentData(MsgBindParentData other) : this() {
    strCode_ = other.strCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentData Clone() {
    return new MsgBindParentData(this);
  }

  /// <summary>Field number for the "strCode" field.</summary>
  public const int StrCodeFieldNumber = 1;
  private string strCode_ = "";
  /// <summary>
  ///上级邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StrCode {
    get { return strCode_; }
    set {
      strCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBindParentData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBindParentData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StrCode != other.StrCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (StrCode.Length != 0) hash ^= StrCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (StrCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(StrCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (StrCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(StrCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (StrCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StrCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBindParentData other) {
    if (other == null) {
      return;
    }
    if (other.StrCode.Length != 0) {
      StrCode = other.StrCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          StrCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          StrCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邀请奖励配置
/// </summary>
public sealed partial class MsgInviteAwardInfo : pb::IMessage<MsgInviteAwardInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInviteAwardInfo> _parser = new pb::MessageParser<MsgInviteAwardInfo>(() => new MsgInviteAwardInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInviteAwardInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardInfo(MsgInviteAwardInfo other) : this() {
    inviteNum_ = other.inviteNum_;
    pickIndex_ = other.pickIndex_;
    awardCfg_ = other.awardCfg_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardInfo Clone() {
    return new MsgInviteAwardInfo(this);
  }

  /// <summary>Field number for the "inviteNum" field.</summary>
  public const int InviteNumFieldNumber = 1;
  private int inviteNum_;
  /// <summary>
  ///已经邀请的人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InviteNum {
    get { return inviteNum_; }
    set {
      inviteNum_ = value;
    }
  }

  /// <summary>Field number for the "pickIndex" field.</summary>
  public const int PickIndexFieldNumber = 2;
  private int pickIndex_;
  /// <summary>
  ///已经领取的奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PickIndex {
    get { return pickIndex_; }
    set {
      pickIndex_ = value;
    }
  }

  /// <summary>Field number for the "awardCfg" field.</summary>
  public const int AwardCfgFieldNumber = 3;
  private static readonly pb::FieldCodec<global::MsgInviteAwardConfig> _repeated_awardCfg_codec
      = pb::FieldCodec.ForMessage(26, global::MsgInviteAwardConfig.Parser);
  private readonly pbc::RepeatedField<global::MsgInviteAwardConfig> awardCfg_ = new pbc::RepeatedField<global::MsgInviteAwardConfig>();
  /// <summary>
  ///奖励配置
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgInviteAwardConfig> AwardCfg {
    get { return awardCfg_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInviteAwardInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInviteAwardInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteNum != other.InviteNum) return false;
    if (PickIndex != other.PickIndex) return false;
    if(!awardCfg_.Equals(other.awardCfg_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteNum != 0) hash ^= InviteNum.GetHashCode();
    if (PickIndex != 0) hash ^= PickIndex.GetHashCode();
    hash ^= awardCfg_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (PickIndex != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PickIndex);
    }
    awardCfg_.WriteTo(output, _repeated_awardCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (PickIndex != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PickIndex);
    }
    awardCfg_.WriteTo(ref output, _repeated_awardCfg_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteNum);
    }
    if (PickIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PickIndex);
    }
    size += awardCfg_.CalculateSize(_repeated_awardCfg_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInviteAwardInfo other) {
    if (other == null) {
      return;
    }
    if (other.InviteNum != 0) {
      InviteNum = other.InviteNum;
    }
    if (other.PickIndex != 0) {
      PickIndex = other.PickIndex;
    }
    awardCfg_.Add(other.awardCfg_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          PickIndex = input.ReadInt32();
          break;
        }
        case 26: {
          awardCfg_.AddEntriesFrom(input, _repeated_awardCfg_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          PickIndex = input.ReadInt32();
          break;
        }
        case 26: {
          awardCfg_.AddEntriesFrom(ref input, _repeated_awardCfg_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邀请奖励配置
/// </summary>
public sealed partial class MsgInviteAwardConfig : pb::IMessage<MsgInviteAwardConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInviteAwardConfig> _parser = new pb::MessageParser<MsgInviteAwardConfig>(() => new MsgInviteAwardConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInviteAwardConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardConfig(MsgInviteAwardConfig other) : this() {
    inviteNum_ = other.inviteNum_;
    award_ = other.award_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteAwardConfig Clone() {
    return new MsgInviteAwardConfig(this);
  }

  /// <summary>Field number for the "inviteNum" field.</summary>
  public const int InviteNumFieldNumber = 1;
  private int inviteNum_;
  /// <summary>
  ///邀请人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InviteNum {
    get { return inviteNum_; }
    set {
      inviteNum_ = value;
    }
  }

  /// <summary>Field number for the "award" field.</summary>
  public const int AwardFieldNumber = 2;
  private int award_;
  /// <summary>
  ///奖励数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Award {
    get { return award_; }
    set {
      award_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInviteAwardConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInviteAwardConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteNum != other.InviteNum) return false;
    if (Award != other.Award) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteNum != 0) hash ^= InviteNum.GetHashCode();
    if (Award != 0) hash ^= Award.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (Award != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Award);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (Award != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Award);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteNum);
    }
    if (Award != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Award);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInviteAwardConfig other) {
    if (other == null) {
      return;
    }
    if (other.InviteNum != 0) {
      InviteNum = other.InviteNum;
    }
    if (other.Award != 0) {
      Award = other.Award;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          Award = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          Award = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///充值信息
/// </summary>
public sealed partial class MsgRechargeInfo : pb::IMessage<MsgRechargeInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgRechargeInfo> _parser = new pb::MessageParser<MsgRechargeInfo>(() => new MsgRechargeInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgRechargeInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRechargeInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRechargeInfo(MsgRechargeInfo other) : this() {
    inviteNum_ = other.inviteNum_;
    todayAward_ = other.todayAward_;
    totalAward_ = other.totalAward_;
    canPickAmount_ = other.canPickAmount_;
    inviteCode_ = other.inviteCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRechargeInfo Clone() {
    return new MsgRechargeInfo(this);
  }

  /// <summary>Field number for the "inviteNum" field.</summary>
  public const int InviteNumFieldNumber = 1;
  private int inviteNum_;
  /// <summary>
  ///邀请人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int InviteNum {
    get { return inviteNum_; }
    set {
      inviteNum_ = value;
    }
  }

  /// <summary>Field number for the "todayAward" field.</summary>
  public const int TodayAwardFieldNumber = 2;
  private long todayAward_;
  /// <summary>
  ///今日奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TodayAward {
    get { return todayAward_; }
    set {
      todayAward_ = value;
    }
  }

  /// <summary>Field number for the "totalAward" field.</summary>
  public const int TotalAwardFieldNumber = 3;
  private long totalAward_;
  /// <summary>
  ///总奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TotalAward {
    get { return totalAward_; }
    set {
      totalAward_ = value;
    }
  }

  /// <summary>Field number for the "canPickAmount" field.</summary>
  public const int CanPickAmountFieldNumber = 4;
  private long canPickAmount_;
  /// <summary>
  ///可以领取的数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CanPickAmount {
    get { return canPickAmount_; }
    set {
      canPickAmount_ = value;
    }
  }

  /// <summary>Field number for the "inviteCode" field.</summary>
  public const int InviteCodeFieldNumber = 5;
  private string inviteCode_ = "";
  /// <summary>
  ///自己邀请码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgRechargeInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgRechargeInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InviteNum != other.InviteNum) return false;
    if (TodayAward != other.TodayAward) return false;
    if (TotalAward != other.TotalAward) return false;
    if (CanPickAmount != other.CanPickAmount) return false;
    if (InviteCode != other.InviteCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InviteNum != 0) hash ^= InviteNum.GetHashCode();
    if (TodayAward != 0L) hash ^= TodayAward.GetHashCode();
    if (TotalAward != 0L) hash ^= TotalAward.GetHashCode();
    if (CanPickAmount != 0L) hash ^= CanPickAmount.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (TodayAward != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TodayAward);
    }
    if (TotalAward != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TotalAward);
    }
    if (CanPickAmount != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(CanPickAmount);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(InviteCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (InviteNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(InviteNum);
    }
    if (TodayAward != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TodayAward);
    }
    if (TotalAward != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TotalAward);
    }
    if (CanPickAmount != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(CanPickAmount);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(InviteCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InviteNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(InviteNum);
    }
    if (TodayAward != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TodayAward);
    }
    if (TotalAward != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalAward);
    }
    if (CanPickAmount != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CanPickAmount);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgRechargeInfo other) {
    if (other == null) {
      return;
    }
    if (other.InviteNum != 0) {
      InviteNum = other.InviteNum;
    }
    if (other.TodayAward != 0L) {
      TodayAward = other.TodayAward;
    }
    if (other.TotalAward != 0L) {
      TotalAward = other.TotalAward;
    }
    if (other.CanPickAmount != 0L) {
      CanPickAmount = other.CanPickAmount;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          TodayAward = input.ReadInt64();
          break;
        }
        case 24: {
          TotalAward = input.ReadInt64();
          break;
        }
        case 32: {
          CanPickAmount = input.ReadInt64();
          break;
        }
        case 42: {
          InviteCode = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          InviteNum = input.ReadInt32();
          break;
        }
        case 16: {
          TodayAward = input.ReadInt64();
          break;
        }
        case 24: {
          TotalAward = input.ReadInt64();
          break;
        }
        case 32: {
          CanPickAmount = input.ReadInt64();
          break;
        }
        case 42: {
          InviteCode = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///代理返利
/// </summary>
public sealed partial class MsgQueryRebateRecordInfo : pb::IMessage<MsgQueryRebateRecordInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgQueryRebateRecordInfo> _parser = new pb::MessageParser<MsgQueryRebateRecordInfo>(() => new MsgQueryRebateRecordInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgQueryRebateRecordInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecordInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecordInfo(MsgQueryRebateRecordInfo other) : this() {
    queryRebateRecord_ = other.queryRebateRecord_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecordInfo Clone() {
    return new MsgQueryRebateRecordInfo(this);
  }

  /// <summary>Field number for the "queryRebateRecord" field.</summary>
  public const int QueryRebateRecordFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgQueryRebateRecord> _repeated_queryRebateRecord_codec
      = pb::FieldCodec.ForMessage(10, global::MsgQueryRebateRecord.Parser);
  private readonly pbc::RepeatedField<global::MsgQueryRebateRecord> queryRebateRecord_ = new pbc::RepeatedField<global::MsgQueryRebateRecord>();
  /// <summary>
  ///记录
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgQueryRebateRecord> QueryRebateRecord {
    get { return queryRebateRecord_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgQueryRebateRecordInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgQueryRebateRecordInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!queryRebateRecord_.Equals(other.queryRebateRecord_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= queryRebateRecord_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    queryRebateRecord_.WriteTo(output, _repeated_queryRebateRecord_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    queryRebateRecord_.WriteTo(ref output, _repeated_queryRebateRecord_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += queryRebateRecord_.CalculateSize(_repeated_queryRebateRecord_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgQueryRebateRecordInfo other) {
    if (other == null) {
      return;
    }
    queryRebateRecord_.Add(other.queryRebateRecord_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          queryRebateRecord_.AddEntriesFrom(input, _repeated_queryRebateRecord_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          queryRebateRecord_.AddEntriesFrom(ref input, _repeated_queryRebateRecord_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///代理返利
/// </summary>
public sealed partial class MsgQueryRebateRecord : pb::IMessage<MsgQueryRebateRecord>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgQueryRebateRecord> _parser = new pb::MessageParser<MsgQueryRebateRecord>(() => new MsgQueryRebateRecord());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgQueryRebateRecord> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecord() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecord(MsgQueryRebateRecord other) : this() {
    rechargeUserId_ = other.rechargeUserId_;
    rechargeAmount_ = other.rechargeAmount_;
    rebate_ = other.rebate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRebateRecord Clone() {
    return new MsgQueryRebateRecord(this);
  }

  /// <summary>Field number for the "rechargeUserId" field.</summary>
  public const int RechargeUserIdFieldNumber = 1;
  private int rechargeUserId_;
  /// <summary>
  ///user_id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RechargeUserId {
    get { return rechargeUserId_; }
    set {
      rechargeUserId_ = value;
    }
  }

  /// <summary>Field number for the "rechargeAmount" field.</summary>
  public const int RechargeAmountFieldNumber = 2;
  private int rechargeAmount_;
  /// <summary>
  ///充值数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RechargeAmount {
    get { return rechargeAmount_; }
    set {
      rechargeAmount_ = value;
    }
  }

  /// <summary>Field number for the "rebate" field.</summary>
  public const int RebateFieldNumber = 3;
  private int rebate_;
  /// <summary>
  ///返利
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Rebate {
    get { return rebate_; }
    set {
      rebate_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgQueryRebateRecord);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgQueryRebateRecord other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RechargeUserId != other.RechargeUserId) return false;
    if (RechargeAmount != other.RechargeAmount) return false;
    if (Rebate != other.Rebate) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RechargeUserId != 0) hash ^= RechargeUserId.GetHashCode();
    if (RechargeAmount != 0) hash ^= RechargeAmount.GetHashCode();
    if (Rebate != 0) hash ^= Rebate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RechargeUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RechargeUserId);
    }
    if (RechargeAmount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RechargeAmount);
    }
    if (Rebate != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Rebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RechargeUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RechargeUserId);
    }
    if (RechargeAmount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RechargeAmount);
    }
    if (Rebate != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Rebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RechargeUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RechargeUserId);
    }
    if (RechargeAmount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RechargeAmount);
    }
    if (Rebate != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rebate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgQueryRebateRecord other) {
    if (other == null) {
      return;
    }
    if (other.RechargeUserId != 0) {
      RechargeUserId = other.RechargeUserId;
    }
    if (other.RechargeAmount != 0) {
      RechargeAmount = other.RechargeAmount;
    }
    if (other.Rebate != 0) {
      Rebate = other.Rebate;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RechargeUserId = input.ReadInt32();
          break;
        }
        case 16: {
          RechargeAmount = input.ReadInt32();
          break;
        }
        case 24: {
          Rebate = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RechargeUserId = input.ReadInt32();
          break;
        }
        case 16: {
          RechargeAmount = input.ReadInt32();
          break;
        }
        case 24: {
          Rebate = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///忘记密码
/// </summary>
public sealed partial class MsgForgetPassword : pb::IMessage<MsgForgetPassword>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgForgetPassword> _parser = new pb::MessageParser<MsgForgetPassword>(() => new MsgForgetPassword());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgForgetPassword> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgForgetPassword() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgForgetPassword(MsgForgetPassword other) : this() {
    clientType_ = other.clientType_;
    phone_ = other.phone_;
    code_ = other.code_;
    newPassword_ = other.newPassword_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgForgetPassword Clone() {
    return new MsgForgetPassword(this);
  }

  /// <summary>Field number for the "client_type" field.</summary>
  public const int ClientTypeFieldNumber = 1;
  private int clientType_;
  /// <summary>
  ///包id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ClientType {
    get { return clientType_; }
    set {
      clientType_ = value;
    }
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 2;
  private string phone_ = "";
  /// <summary>
  ///电话号码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 3;
  private int code_;
  /// <summary>
  ///验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "new_password" field.</summary>
  public const int NewPasswordFieldNumber = 4;
  private string newPassword_ = "";
  /// <summary>
  ///新密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPassword {
    get { return newPassword_; }
    set {
      newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgForgetPassword);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgForgetPassword other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientType != other.ClientType) return false;
    if (Phone != other.Phone) return false;
    if (Code != other.Code) return false;
    if (NewPassword != other.NewPassword) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClientType != 0) hash ^= ClientType.GetHashCode();
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (Code != 0) hash ^= Code.GetHashCode();
    if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ClientType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ClientType);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Code);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ClientType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ClientType);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Code);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClientType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientType);
    }
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (NewPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgForgetPassword other) {
    if (other == null) {
      return;
    }
    if (other.ClientType != 0) {
      ClientType = other.ClientType;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.NewPassword.Length != 0) {
      NewPassword = other.NewPassword;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClientType = input.ReadInt32();
          break;
        }
        case 18: {
          Phone = input.ReadString();
          break;
        }
        case 24: {
          Code = input.ReadInt32();
          break;
        }
        case 34: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ClientType = input.ReadInt32();
          break;
        }
        case 18: {
          Phone = input.ReadString();
          break;
        }
        case 24: {
          Code = input.ReadInt32();
          break;
        }
        case 34: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///VIP信息
/// </summary>
public sealed partial class MsgVIPInfo : pb::IMessage<MsgVIPInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgVIPInfo> _parser = new pb::MessageParser<MsgVIPInfo>(() => new MsgVIPInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgVIPInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgVIPInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgVIPInfo(MsgVIPInfo other) : this() {
    vipLevel_ = other.vipLevel_;
    needExp_ = other.needExp_;
    turntableNum_ = other.turntableNum_;
    trumpetDiscount_ = other.trumpetDiscount_;
    checkAddition_ = other.checkAddition_;
    worldChat_ = other.worldChat_;
    avatar_ = other.avatar_;
    avatarFrame_ = other.avatarFrame_;
    awardGold_ = other.awardGold_;
    oneToOne_ = other.oneToOne_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgVIPInfo Clone() {
    return new MsgVIPInfo(this);
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 1;
  private int vipLevel_;
  /// <summary>
  ///vip等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  /// <summary>Field number for the "need_exp" field.</summary>
  public const int NeedExpFieldNumber = 2;
  private long needExp_;
  /// <summary>
  ///需求打码量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long NeedExp {
    get { return needExp_; }
    set {
      needExp_ = value;
    }
  }

  /// <summary>Field number for the "turntable_num" field.</summary>
  public const int TurntableNumFieldNumber = 3;
  private int turntableNum_;
  /// <summary>
  ///转盘次数上线
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TurntableNum {
    get { return turntableNum_; }
    set {
      turntableNum_ = value;
    }
  }

  /// <summary>Field number for the "trumpet_discount" field.</summary>
  public const int TrumpetDiscountFieldNumber = 4;
  private int trumpetDiscount_;
  /// <summary>
  ///世界喇叭扣费减少(百分比)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TrumpetDiscount {
    get { return trumpetDiscount_; }
    set {
      trumpetDiscount_ = value;
    }
  }

  /// <summary>Field number for the "check_addition" field.</summary>
  public const int CheckAdditionFieldNumber = 5;
  private int checkAddition_;
  /// <summary>
  ///7天签到奖励加成(百分比)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CheckAddition {
    get { return checkAddition_; }
    set {
      checkAddition_ = value;
    }
  }

  /// <summary>Field number for the "world_chat" field.</summary>
  public const int WorldChatFieldNumber = 6;
  private bool worldChat_;
  /// <summary>
  ///是否可以世界聊天
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool WorldChat {
    get { return worldChat_; }
    set {
      worldChat_ = value;
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 7;
  private int avatar_;
  /// <summary>
  ///头像奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Avatar {
    get { return avatar_; }
    set {
      avatar_ = value;
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 8;
  private int avatarFrame_;
  /// <summary>
  ///头像框奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "award_gold" field.</summary>
  public const int AwardGoldFieldNumber = 9;
  private int awardGold_;
  /// <summary>
  ///奖励金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AwardGold {
    get { return awardGold_; }
    set {
      awardGold_ = value;
    }
  }

  /// <summary>Field number for the "one_to_one" field.</summary>
  public const int OneToOneFieldNumber = 10;
  private bool oneToOne_;
  /// <summary>
  ///一对一服务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool OneToOne {
    get { return oneToOne_; }
    set {
      oneToOne_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgVIPInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgVIPInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (VipLevel != other.VipLevel) return false;
    if (NeedExp != other.NeedExp) return false;
    if (TurntableNum != other.TurntableNum) return false;
    if (TrumpetDiscount != other.TrumpetDiscount) return false;
    if (CheckAddition != other.CheckAddition) return false;
    if (WorldChat != other.WorldChat) return false;
    if (Avatar != other.Avatar) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if (AwardGold != other.AwardGold) return false;
    if (OneToOne != other.OneToOne) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (NeedExp != 0L) hash ^= NeedExp.GetHashCode();
    if (TurntableNum != 0) hash ^= TurntableNum.GetHashCode();
    if (TrumpetDiscount != 0) hash ^= TrumpetDiscount.GetHashCode();
    if (CheckAddition != 0) hash ^= CheckAddition.GetHashCode();
    if (WorldChat != false) hash ^= WorldChat.GetHashCode();
    if (Avatar != 0) hash ^= Avatar.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    if (AwardGold != 0) hash ^= AwardGold.GetHashCode();
    if (OneToOne != false) hash ^= OneToOne.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (VipLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(VipLevel);
    }
    if (NeedExp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(NeedExp);
    }
    if (TurntableNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(TurntableNum);
    }
    if (TrumpetDiscount != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(TrumpetDiscount);
    }
    if (CheckAddition != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(CheckAddition);
    }
    if (WorldChat != false) {
      output.WriteRawTag(48);
      output.WriteBool(WorldChat);
    }
    if (Avatar != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Avatar);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(AvatarFrame);
    }
    if (AwardGold != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(AwardGold);
    }
    if (OneToOne != false) {
      output.WriteRawTag(80);
      output.WriteBool(OneToOne);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (VipLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(VipLevel);
    }
    if (NeedExp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(NeedExp);
    }
    if (TurntableNum != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(TurntableNum);
    }
    if (TrumpetDiscount != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(TrumpetDiscount);
    }
    if (CheckAddition != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(CheckAddition);
    }
    if (WorldChat != false) {
      output.WriteRawTag(48);
      output.WriteBool(WorldChat);
    }
    if (Avatar != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Avatar);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(AvatarFrame);
    }
    if (AwardGold != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(AwardGold);
    }
    if (OneToOne != false) {
      output.WriteRawTag(80);
      output.WriteBool(OneToOne);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
    }
    if (NeedExp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(NeedExp);
    }
    if (TurntableNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TurntableNum);
    }
    if (TrumpetDiscount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TrumpetDiscount);
    }
    if (CheckAddition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CheckAddition);
    }
    if (WorldChat != false) {
      size += 1 + 1;
    }
    if (Avatar != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Avatar);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    if (AwardGold != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AwardGold);
    }
    if (OneToOne != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgVIPInfo other) {
    if (other == null) {
      return;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    if (other.NeedExp != 0L) {
      NeedExp = other.NeedExp;
    }
    if (other.TurntableNum != 0) {
      TurntableNum = other.TurntableNum;
    }
    if (other.TrumpetDiscount != 0) {
      TrumpetDiscount = other.TrumpetDiscount;
    }
    if (other.CheckAddition != 0) {
      CheckAddition = other.CheckAddition;
    }
    if (other.WorldChat != false) {
      WorldChat = other.WorldChat;
    }
    if (other.Avatar != 0) {
      Avatar = other.Avatar;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    if (other.AwardGold != 0) {
      AwardGold = other.AwardGold;
    }
    if (other.OneToOne != false) {
      OneToOne = other.OneToOne;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 16: {
          NeedExp = input.ReadInt64();
          break;
        }
        case 24: {
          TurntableNum = input.ReadInt32();
          break;
        }
        case 32: {
          TrumpetDiscount = input.ReadInt32();
          break;
        }
        case 40: {
          CheckAddition = input.ReadInt32();
          break;
        }
        case 48: {
          WorldChat = input.ReadBool();
          break;
        }
        case 56: {
          Avatar = input.ReadInt32();
          break;
        }
        case 64: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 72: {
          AwardGold = input.ReadInt32();
          break;
        }
        case 80: {
          OneToOne = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 16: {
          NeedExp = input.ReadInt64();
          break;
        }
        case 24: {
          TurntableNum = input.ReadInt32();
          break;
        }
        case 32: {
          TrumpetDiscount = input.ReadInt32();
          break;
        }
        case 40: {
          CheckAddition = input.ReadInt32();
          break;
        }
        case 48: {
          WorldChat = input.ReadBool();
          break;
        }
        case 56: {
          Avatar = input.ReadInt32();
          break;
        }
        case 64: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 72: {
          AwardGold = input.ReadInt32();
          break;
        }
        case 80: {
          OneToOne = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///vip配置信息
/// </summary>
public sealed partial class MsgVIPConfig : pb::IMessage<MsgVIPConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgVIPConfig> _parser = new pb::MessageParser<MsgVIPConfig>(() => new MsgVIPConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgVIPConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgVIPConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgVIPConfig(MsgVIPConfig other) : this() {
    vipInfo_ = other.vipInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgVIPConfig Clone() {
    return new MsgVIPConfig(this);
  }

  /// <summary>Field number for the "vip_info" field.</summary>
  public const int VipInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgVIPInfo> _repeated_vipInfo_codec
      = pb::FieldCodec.ForMessage(10, global::MsgVIPInfo.Parser);
  private readonly pbc::RepeatedField<global::MsgVIPInfo> vipInfo_ = new pbc::RepeatedField<global::MsgVIPInfo>();
  /// <summary>
  ///vip配置信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgVIPInfo> VipInfo {
    get { return vipInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgVIPConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgVIPConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!vipInfo_.Equals(other.vipInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= vipInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    vipInfo_.WriteTo(output, _repeated_vipInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    vipInfo_.WriteTo(ref output, _repeated_vipInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += vipInfo_.CalculateSize(_repeated_vipInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgVIPConfig other) {
    if (other == null) {
      return;
    }
    vipInfo_.Add(other.vipInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          vipInfo_.AddEntriesFrom(input, _repeated_vipInfo_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          vipInfo_.AddEntriesFrom(ref input, _repeated_vipInfo_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家VIP信息
/// </summary>
public sealed partial class MsgUpgradeVIP : pb::IMessage<MsgUpgradeVIP>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgUpgradeVIP> _parser = new pb::MessageParser<MsgUpgradeVIP>(() => new MsgUpgradeVIP());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgUpgradeVIP> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgUpgradeVIP() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgUpgradeVIP(MsgUpgradeVIP other) : this() {
    resCode_ = other.resCode_;
    gold_ = other.gold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgUpgradeVIP Clone() {
    return new MsgUpgradeVIP(this);
  }

  /// <summary>Field number for the "res_code" field.</summary>
  public const int ResCodeFieldNumber = 1;
  private int resCode_;
  /// <summary>
  ///返回码(0:成功 非0:失败)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResCode {
    get { return resCode_; }
    set {
      resCode_ = value;
    }
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 2;
  private long gold_;
  /// <summary>
  ///玩家当前金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgUpgradeVIP);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgUpgradeVIP other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResCode != other.ResCode) return false;
    if (Gold != other.Gold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ResCode != 0) hash ^= ResCode.GetHashCode();
    if (Gold != 0L) hash ^= Gold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (Gold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Gold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (Gold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Gold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ResCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResCode);
    }
    if (Gold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgUpgradeVIP other) {
    if (other == null) {
      return;
    }
    if (other.ResCode != 0) {
      ResCode = other.ResCode;
    }
    if (other.Gold != 0L) {
      Gold = other.Gold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          Gold = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          Gold = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///头像和头像框信息
/// </summary>
public sealed partial class MsgGetAvatarInfo : pb::IMessage<MsgGetAvatarInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGetAvatarInfo> _parser = new pb::MessageParser<MsgGetAvatarInfo>(() => new MsgGetAvatarInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGetAvatarInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGetAvatarInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGetAvatarInfo(MsgGetAvatarInfo other) : this() {
    avatars_ = other.avatars_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGetAvatarInfo Clone() {
    return new MsgGetAvatarInfo(this);
  }

  /// <summary>Field number for the "avatars" field.</summary>
  public const int AvatarsFieldNumber = 1;
  private static readonly pb::FieldCodec<int> _repeated_avatars_codec
      = pb::FieldCodec.ForInt32(10);
  private readonly pbc::RepeatedField<int> avatars_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///头像和头像框编号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Avatars {
    get { return avatars_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGetAvatarInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGetAvatarInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!avatars_.Equals(other.avatars_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= avatars_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    avatars_.WriteTo(output, _repeated_avatars_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    avatars_.WriteTo(ref output, _repeated_avatars_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += avatars_.CalculateSize(_repeated_avatars_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGetAvatarInfo other) {
    if (other == null) {
      return;
    }
    avatars_.Add(other.avatars_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          avatars_.AddEntriesFrom(input, _repeated_avatars_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          avatars_.AddEntriesFrom(ref input, _repeated_avatars_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///查看玩家个人信息
/// </summary>
public sealed partial class MsgPlayerInfo : pb::IMessage<MsgPlayerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerInfo> _parser = new pb::MessageParser<MsgPlayerInfo>(() => new MsgPlayerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerInfo(MsgPlayerInfo other) : this() {
    userId_ = other.userId_;
    beautifulId_ = other.beautifulId_;
    nickname_ = other.nickname_;
    avatar_ = other.avatar_;
    coin_ = other.coin_;
    phoneNum_ = other.phoneNum_;
    vipLevel_ = other.vipLevel_;
    avatarFrame_ = other.avatarFrame_;
    signature_ = other.signature_;
    zmdGameId_ = other.zmdGameId_;
    zmdWinGold_ = other.zmdWinGold_;
    whatsupMsg_ = other.whatsupMsg_;
    telegramMsg_ = other.telegramMsg_;
    facebookMsg_ = other.facebookMsg_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerInfo Clone() {
    return new MsgPlayerInfo(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 2;
  private int beautifulId_;
  /// <summary>
  ///玩家靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 3;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 4;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "coin" field.</summary>
  public const int CoinFieldNumber = 5;
  private ulong coin_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Coin {
    get { return coin_; }
    set {
      coin_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 6;
  private string phoneNum_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 7;
  private int vipLevel_;
  /// <summary>
  ///VIP等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 8;
  private int avatarFrame_;
  /// <summary>
  ///头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 9;
  private string signature_ = "";
  /// <summary>
  ///签名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "zmd_game_id" field.</summary>
  public const int ZmdGameIdFieldNumber = 10;
  private int zmdGameId_;
  /// <summary>
  ///走马灯数据记录
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZmdGameId {
    get { return zmdGameId_; }
    set {
      zmdGameId_ = value;
    }
  }

  /// <summary>Field number for the "zmd_win_gold" field.</summary>
  public const int ZmdWinGoldFieldNumber = 11;
  private ulong zmdWinGold_;
  /// <summary>
  ///走马灯数据记录
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ZmdWinGold {
    get { return zmdWinGold_; }
    set {
      zmdWinGold_ = value;
    }
  }

  /// <summary>Field number for the "whatsup_msg" field.</summary>
  public const int WhatsupMsgFieldNumber = 19;
  private string whatsupMsg_ = "";
  /// <summary>
  ///个性whats
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string WhatsupMsg {
    get { return whatsupMsg_; }
    set {
      whatsupMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "telegram_msg" field.</summary>
  public const int TelegramMsgFieldNumber = 20;
  private string telegramMsg_ = "";
  /// <summary>
  ///个性telegram
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string TelegramMsg {
    get { return telegramMsg_; }
    set {
      telegramMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "facebook_msg" field.</summary>
  public const int FacebookMsgFieldNumber = 21;
  private string facebookMsg_ = "";
  /// <summary>
  ///个性facebook
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FacebookMsg {
    get { return facebookMsg_; }
    set {
      facebookMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Nickname != other.Nickname) return false;
    if (Avatar != other.Avatar) return false;
    if (Coin != other.Coin) return false;
    if (PhoneNum != other.PhoneNum) return false;
    if (VipLevel != other.VipLevel) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if (Signature != other.Signature) return false;
    if (ZmdGameId != other.ZmdGameId) return false;
    if (ZmdWinGold != other.ZmdWinGold) return false;
    if (WhatsupMsg != other.WhatsupMsg) return false;
    if (TelegramMsg != other.TelegramMsg) return false;
    if (FacebookMsg != other.FacebookMsg) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (Coin != 0UL) hash ^= Coin.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    if (ZmdGameId != 0) hash ^= ZmdGameId.GetHashCode();
    if (ZmdWinGold != 0UL) hash ^= ZmdWinGold.GetHashCode();
    if (WhatsupMsg.Length != 0) hash ^= WhatsupMsg.GetHashCode();
    if (TelegramMsg.Length != 0) hash ^= TelegramMsg.GetHashCode();
    if (FacebookMsg.Length != 0) hash ^= FacebookMsg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Avatar);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(PhoneNum);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(AvatarFrame);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Signature);
    }
    if (ZmdGameId != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(ZmdGameId);
    }
    if (ZmdWinGold != 0UL) {
      output.WriteRawTag(88);
      output.WriteUInt64(ZmdWinGold);
    }
    if (WhatsupMsg.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(WhatsupMsg);
    }
    if (TelegramMsg.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(TelegramMsg);
    }
    if (FacebookMsg.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(FacebookMsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Avatar);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(PhoneNum);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(AvatarFrame);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(Signature);
    }
    if (ZmdGameId != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(ZmdGameId);
    }
    if (ZmdWinGold != 0UL) {
      output.WriteRawTag(88);
      output.WriteUInt64(ZmdWinGold);
    }
    if (WhatsupMsg.Length != 0) {
      output.WriteRawTag(154, 1);
      output.WriteString(WhatsupMsg);
    }
    if (TelegramMsg.Length != 0) {
      output.WriteRawTag(162, 1);
      output.WriteString(TelegramMsg);
    }
    if (FacebookMsg.Length != 0) {
      output.WriteRawTag(170, 1);
      output.WriteString(FacebookMsg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (Coin != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Coin);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    if (Signature.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    if (ZmdGameId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZmdGameId);
    }
    if (ZmdWinGold != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ZmdWinGold);
    }
    if (WhatsupMsg.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(WhatsupMsg);
    }
    if (TelegramMsg.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(TelegramMsg);
    }
    if (FacebookMsg.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(FacebookMsg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.Coin != 0UL) {
      Coin = other.Coin;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    if (other.ZmdGameId != 0) {
      ZmdGameId = other.ZmdGameId;
    }
    if (other.ZmdWinGold != 0UL) {
      ZmdWinGold = other.ZmdWinGold;
    }
    if (other.WhatsupMsg.Length != 0) {
      WhatsupMsg = other.WhatsupMsg;
    }
    if (other.TelegramMsg.Length != 0) {
      TelegramMsg = other.TelegramMsg;
    }
    if (other.FacebookMsg.Length != 0) {
      FacebookMsg = other.FacebookMsg;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 34: {
          Avatar = input.ReadString();
          break;
        }
        case 40: {
          Coin = input.ReadUInt64();
          break;
        }
        case 50: {
          PhoneNum = input.ReadString();
          break;
        }
        case 56: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 64: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 74: {
          Signature = input.ReadString();
          break;
        }
        case 80: {
          ZmdGameId = input.ReadInt32();
          break;
        }
        case 88: {
          ZmdWinGold = input.ReadUInt64();
          break;
        }
        case 154: {
          WhatsupMsg = input.ReadString();
          break;
        }
        case 162: {
          TelegramMsg = input.ReadString();
          break;
        }
        case 170: {
          FacebookMsg = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 34: {
          Avatar = input.ReadString();
          break;
        }
        case 40: {
          Coin = input.ReadUInt64();
          break;
        }
        case 50: {
          PhoneNum = input.ReadString();
          break;
        }
        case 56: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 64: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 74: {
          Signature = input.ReadString();
          break;
        }
        case 80: {
          ZmdGameId = input.ReadInt32();
          break;
        }
        case 88: {
          ZmdWinGold = input.ReadUInt64();
          break;
        }
        case 154: {
          WhatsupMsg = input.ReadString();
          break;
        }
        case 162: {
          TelegramMsg = input.ReadString();
          break;
        }
        case 170: {
          FacebookMsg = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///日常任务
/// </summary>
public sealed partial class ActiveInfoRet : pb::IMessage<ActiveInfoRet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ActiveInfoRet> _parser = new pb::MessageParser<ActiveInfoRet>(() => new ActiveInfoRet());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ActiveInfoRet> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveInfoRet() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveInfoRet(ActiveInfoRet other) : this() {
    activeId_ = other.activeId_;
    subActiveId_ = other.subActiveId_;
    param1_ = other.param1_;
    param2_ = other.param2_;
    param3_ = other.param3_;
    progress1_ = other.progress1_;
    progress2_ = other.progress2_;
    progress3_ = other.progress3_;
    reward_ = other.reward_;
    rewardType_ = other.rewardType_;
    isPick_ = other.isPick_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ActiveInfoRet Clone() {
    return new ActiveInfoRet(this);
  }

  /// <summary>Field number for the "active_id" field.</summary>
  public const int ActiveIdFieldNumber = 1;
  private int activeId_;
  /// <summary>
  ///活动id: 5、teenpattie 6、fb分享 7、轮盘 8、宙斯 10、捕鱼 11、小火箭 12、下注筹码 13、龙虎 14、总进度活动
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActiveId {
    get { return activeId_; }
    set {
      activeId_ = value;
    }
  }

  /// <summary>Field number for the "sub_active_id" field.</summary>
  public const int SubActiveIdFieldNumber = 2;
  private int subActiveId_;
  /// <summary>
  ///子活动id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SubActiveId {
    get { return subActiveId_; }
    set {
      subActiveId_ = value;
    }
  }

  /// <summary>Field number for the "param1" field.</summary>
  public const int Param1FieldNumber = 3;
  private int param1_;
  /// <summary>
  ///完成条件
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Param1 {
    get { return param1_; }
    set {
      param1_ = value;
    }
  }

  /// <summary>Field number for the "param2" field.</summary>
  public const int Param2FieldNumber = 4;
  private int param2_;
  /// <summary>
  ///多语言文字提示码	
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Param2 {
    get { return param2_; }
    set {
      param2_ = value;
    }
  }

  /// <summary>Field number for the "param3" field.</summary>
  public const int Param3FieldNumber = 5;
  private int param3_;
  /// <summary>
  ///游戏id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Param3 {
    get { return param3_; }
    set {
      param3_ = value;
    }
  }

  /// <summary>Field number for the "progress1" field.</summary>
  public const int Progress1FieldNumber = 6;
  private int progress1_;
  /// <summary>
  ///完成度 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Progress1 {
    get { return progress1_; }
    set {
      progress1_ = value;
    }
  }

  /// <summary>Field number for the "progress2" field.</summary>
  public const int Progress2FieldNumber = 7;
  private int progress2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Progress2 {
    get { return progress2_; }
    set {
      progress2_ = value;
    }
  }

  /// <summary>Field number for the "progress3" field.</summary>
  public const int Progress3FieldNumber = 8;
  private int progress3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Progress3 {
    get { return progress3_; }
    set {
      progress3_ = value;
    }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 9;
  private int reward_;
  /// <summary>
  ///活动奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Reward {
    get { return reward_; }
    set {
      reward_ = value;
    }
  }

  /// <summary>Field number for the "reward_type" field.</summary>
  public const int RewardTypeFieldNumber = 10;
  private int rewardType_;
  /// <summary>
  ///活动奖励类型2转盘奖励1金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RewardType {
    get { return rewardType_; }
    set {
      rewardType_ = value;
    }
  }

  /// <summary>Field number for the "is_pick" field.</summary>
  public const int IsPickFieldNumber = 11;
  private bool isPick_;
  /// <summary>
  ///活动奖励是否领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsPick {
    get { return isPick_; }
    set {
      isPick_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ActiveInfoRet);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ActiveInfoRet other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ActiveId != other.ActiveId) return false;
    if (SubActiveId != other.SubActiveId) return false;
    if (Param1 != other.Param1) return false;
    if (Param2 != other.Param2) return false;
    if (Param3 != other.Param3) return false;
    if (Progress1 != other.Progress1) return false;
    if (Progress2 != other.Progress2) return false;
    if (Progress3 != other.Progress3) return false;
    if (Reward != other.Reward) return false;
    if (RewardType != other.RewardType) return false;
    if (IsPick != other.IsPick) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ActiveId != 0) hash ^= ActiveId.GetHashCode();
    if (SubActiveId != 0) hash ^= SubActiveId.GetHashCode();
    if (Param1 != 0) hash ^= Param1.GetHashCode();
    if (Param2 != 0) hash ^= Param2.GetHashCode();
    if (Param3 != 0) hash ^= Param3.GetHashCode();
    if (Progress1 != 0) hash ^= Progress1.GetHashCode();
    if (Progress2 != 0) hash ^= Progress2.GetHashCode();
    if (Progress3 != 0) hash ^= Progress3.GetHashCode();
    if (Reward != 0) hash ^= Reward.GetHashCode();
    if (RewardType != 0) hash ^= RewardType.GetHashCode();
    if (IsPick != false) hash ^= IsPick.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ActiveId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ActiveId);
    }
    if (SubActiveId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SubActiveId);
    }
    if (Param1 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Param1);
    }
    if (Param2 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Param2);
    }
    if (Param3 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Param3);
    }
    if (Progress1 != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Progress1);
    }
    if (Progress2 != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Progress2);
    }
    if (Progress3 != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Progress3);
    }
    if (Reward != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Reward);
    }
    if (RewardType != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(RewardType);
    }
    if (IsPick != false) {
      output.WriteRawTag(88);
      output.WriteBool(IsPick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ActiveId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ActiveId);
    }
    if (SubActiveId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SubActiveId);
    }
    if (Param1 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Param1);
    }
    if (Param2 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Param2);
    }
    if (Param3 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Param3);
    }
    if (Progress1 != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Progress1);
    }
    if (Progress2 != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Progress2);
    }
    if (Progress3 != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Progress3);
    }
    if (Reward != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Reward);
    }
    if (RewardType != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(RewardType);
    }
    if (IsPick != false) {
      output.WriteRawTag(88);
      output.WriteBool(IsPick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ActiveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveId);
    }
    if (SubActiveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubActiveId);
    }
    if (Param1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
    }
    if (Param2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param2);
    }
    if (Param3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param3);
    }
    if (Progress1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress1);
    }
    if (Progress2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress2);
    }
    if (Progress3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress3);
    }
    if (Reward != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reward);
    }
    if (RewardType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardType);
    }
    if (IsPick != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ActiveInfoRet other) {
    if (other == null) {
      return;
    }
    if (other.ActiveId != 0) {
      ActiveId = other.ActiveId;
    }
    if (other.SubActiveId != 0) {
      SubActiveId = other.SubActiveId;
    }
    if (other.Param1 != 0) {
      Param1 = other.Param1;
    }
    if (other.Param2 != 0) {
      Param2 = other.Param2;
    }
    if (other.Param3 != 0) {
      Param3 = other.Param3;
    }
    if (other.Progress1 != 0) {
      Progress1 = other.Progress1;
    }
    if (other.Progress2 != 0) {
      Progress2 = other.Progress2;
    }
    if (other.Progress3 != 0) {
      Progress3 = other.Progress3;
    }
    if (other.Reward != 0) {
      Reward = other.Reward;
    }
    if (other.RewardType != 0) {
      RewardType = other.RewardType;
    }
    if (other.IsPick != false) {
      IsPick = other.IsPick;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ActiveId = input.ReadInt32();
          break;
        }
        case 16: {
          SubActiveId = input.ReadInt32();
          break;
        }
        case 24: {
          Param1 = input.ReadInt32();
          break;
        }
        case 32: {
          Param2 = input.ReadInt32();
          break;
        }
        case 40: {
          Param3 = input.ReadInt32();
          break;
        }
        case 48: {
          Progress1 = input.ReadInt32();
          break;
        }
        case 56: {
          Progress2 = input.ReadInt32();
          break;
        }
        case 64: {
          Progress3 = input.ReadInt32();
          break;
        }
        case 72: {
          Reward = input.ReadInt32();
          break;
        }
        case 80: {
          RewardType = input.ReadInt32();
          break;
        }
        case 88: {
          IsPick = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ActiveId = input.ReadInt32();
          break;
        }
        case 16: {
          SubActiveId = input.ReadInt32();
          break;
        }
        case 24: {
          Param1 = input.ReadInt32();
          break;
        }
        case 32: {
          Param2 = input.ReadInt32();
          break;
        }
        case 40: {
          Param3 = input.ReadInt32();
          break;
        }
        case 48: {
          Progress1 = input.ReadInt32();
          break;
        }
        case 56: {
          Progress2 = input.ReadInt32();
          break;
        }
        case 64: {
          Progress3 = input.ReadInt32();
          break;
        }
        case 72: {
          Reward = input.ReadInt32();
          break;
        }
        case 80: {
          RewardType = input.ReadInt32();
          break;
        }
        case 88: {
          IsPick = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgActiveInfoSCRet : pb::IMessage<MsgActiveInfoSCRet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgActiveInfoSCRet> _parser = new pb::MessageParser<MsgActiveInfoSCRet>(() => new MsgActiveInfoSCRet());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgActiveInfoSCRet> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoSCRet() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoSCRet(MsgActiveInfoSCRet other) : this() {
    vecInfo_ = other.vecInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoSCRet Clone() {
    return new MsgActiveInfoSCRet(this);
  }

  /// <summary>Field number for the "vec_info" field.</summary>
  public const int VecInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ActiveInfoRet> _repeated_vecInfo_codec
      = pb::FieldCodec.ForMessage(10, global::ActiveInfoRet.Parser);
  private readonly pbc::RepeatedField<global::ActiveInfoRet> vecInfo_ = new pbc::RepeatedField<global::ActiveInfoRet>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ActiveInfoRet> VecInfo {
    get { return vecInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgActiveInfoSCRet);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgActiveInfoSCRet other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!vecInfo_.Equals(other.vecInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= vecInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    vecInfo_.WriteTo(output, _repeated_vecInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    vecInfo_.WriteTo(ref output, _repeated_vecInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += vecInfo_.CalculateSize(_repeated_vecInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgActiveInfoSCRet other) {
    if (other == null) {
      return;
    }
    vecInfo_.Add(other.vecInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          vecInfo_.AddEntriesFrom(input, _repeated_vecInfo_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          vecInfo_.AddEntriesFrom(ref input, _repeated_vecInfo_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgActiveInfoCSPick : pb::IMessage<MsgActiveInfoCSPick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgActiveInfoCSPick> _parser = new pb::MessageParser<MsgActiveInfoCSPick>(() => new MsgActiveInfoCSPick());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgActiveInfoCSPick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoCSPick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoCSPick(MsgActiveInfoCSPick other) : this() {
    userId_ = other.userId_;
    activeId_ = other.activeId_;
    subActiveId_ = other.subActiveId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoCSPick Clone() {
    return new MsgActiveInfoCSPick(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "active_id" field.</summary>
  public const int ActiveIdFieldNumber = 2;
  private int activeId_;
  /// <summary>
  ///活动id: 5、teenpattie 6、fb分享 7、轮盘 8、宙斯 10、捕鱼 11、小火箭 12、下注筹码 13、龙虎 14、总进度活动
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActiveId {
    get { return activeId_; }
    set {
      activeId_ = value;
    }
  }

  /// <summary>Field number for the "sub_active_id" field.</summary>
  public const int SubActiveIdFieldNumber = 3;
  private int subActiveId_;
  /// <summary>
  ///活动id: 1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SubActiveId {
    get { return subActiveId_; }
    set {
      subActiveId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgActiveInfoCSPick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgActiveInfoCSPick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ActiveId != other.ActiveId) return false;
    if (SubActiveId != other.SubActiveId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (ActiveId != 0) hash ^= ActiveId.GetHashCode();
    if (SubActiveId != 0) hash ^= SubActiveId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (ActiveId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ActiveId);
    }
    if (SubActiveId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SubActiveId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (ActiveId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ActiveId);
    }
    if (SubActiveId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SubActiveId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (ActiveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveId);
    }
    if (SubActiveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubActiveId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgActiveInfoCSPick other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.ActiveId != 0) {
      ActiveId = other.ActiveId;
    }
    if (other.SubActiveId != 0) {
      SubActiveId = other.SubActiveId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          ActiveId = input.ReadInt32();
          break;
        }
        case 24: {
          SubActiveId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          ActiveId = input.ReadInt32();
          break;
        }
        case 24: {
          SubActiveId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgActiveInfoSCPick : pb::IMessage<MsgActiveInfoSCPick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgActiveInfoSCPick> _parser = new pb::MessageParser<MsgActiveInfoSCPick>(() => new MsgActiveInfoSCPick());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgActiveInfoSCPick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoSCPick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoSCPick(MsgActiveInfoSCPick other) : this() {
    activeId_ = other.activeId_;
    subActiveId_ = other.subActiveId_;
    param1_ = other.param1_;
    param2_ = other.param2_;
    param3_ = other.param3_;
    progress1_ = other.progress1_;
    progress2_ = other.progress2_;
    progress3_ = other.progress3_;
    reward_ = other.reward_;
    rewardType_ = other.rewardType_;
    isPick_ = other.isPick_;
    res_ = other.res_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgActiveInfoSCPick Clone() {
    return new MsgActiveInfoSCPick(this);
  }

  /// <summary>Field number for the "active_id" field.</summary>
  public const int ActiveIdFieldNumber = 1;
  private int activeId_;
  /// <summary>
  ///活动id: 5、teenpattie 6、fb分享 7、轮盘 8、宙斯 10、捕鱼 11、小火箭 12、下注筹码 13、龙虎 14、总进度活动
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActiveId {
    get { return activeId_; }
    set {
      activeId_ = value;
    }
  }

  /// <summary>Field number for the "sub_active_id" field.</summary>
  public const int SubActiveIdFieldNumber = 2;
  private int subActiveId_;
  /// <summary>
  ///子活动id 1
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SubActiveId {
    get { return subActiveId_; }
    set {
      subActiveId_ = value;
    }
  }

  /// <summary>Field number for the "param1" field.</summary>
  public const int Param1FieldNumber = 3;
  private int param1_;
  /// <summary>
  ///完成条件
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Param1 {
    get { return param1_; }
    set {
      param1_ = value;
    }
  }

  /// <summary>Field number for the "param2" field.</summary>
  public const int Param2FieldNumber = 4;
  private int param2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Param2 {
    get { return param2_; }
    set {
      param2_ = value;
    }
  }

  /// <summary>Field number for the "param3" field.</summary>
  public const int Param3FieldNumber = 5;
  private int param3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Param3 {
    get { return param3_; }
    set {
      param3_ = value;
    }
  }

  /// <summary>Field number for the "progress1" field.</summary>
  public const int Progress1FieldNumber = 6;
  private int progress1_;
  /// <summary>
  ///完成度 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Progress1 {
    get { return progress1_; }
    set {
      progress1_ = value;
    }
  }

  /// <summary>Field number for the "progress2" field.</summary>
  public const int Progress2FieldNumber = 7;
  private int progress2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Progress2 {
    get { return progress2_; }
    set {
      progress2_ = value;
    }
  }

  /// <summary>Field number for the "progress3" field.</summary>
  public const int Progress3FieldNumber = 8;
  private int progress3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Progress3 {
    get { return progress3_; }
    set {
      progress3_ = value;
    }
  }

  /// <summary>Field number for the "reward" field.</summary>
  public const int RewardFieldNumber = 9;
  private int reward_;
  /// <summary>
  ///活动奖励
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Reward {
    get { return reward_; }
    set {
      reward_ = value;
    }
  }

  /// <summary>Field number for the "reward_type" field.</summary>
  public const int RewardTypeFieldNumber = 10;
  private int rewardType_;
  /// <summary>
  ///活动奖励类型2转盘奖励1金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RewardType {
    get { return rewardType_; }
    set {
      rewardType_ = value;
    }
  }

  /// <summary>Field number for the "is_pick" field.</summary>
  public const int IsPickFieldNumber = 11;
  private int isPick_;
  /// <summary>
  ///活动奖励是否领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsPick {
    get { return isPick_; }
    set {
      isPick_ = value;
    }
  }

  /// <summary>Field number for the "res" field.</summary>
  public const int ResFieldNumber = 12;
  private bool res_;
  /// <summary>
  ///活动奖励是否领取成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Res {
    get { return res_; }
    set {
      res_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgActiveInfoSCPick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgActiveInfoSCPick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ActiveId != other.ActiveId) return false;
    if (SubActiveId != other.SubActiveId) return false;
    if (Param1 != other.Param1) return false;
    if (Param2 != other.Param2) return false;
    if (Param3 != other.Param3) return false;
    if (Progress1 != other.Progress1) return false;
    if (Progress2 != other.Progress2) return false;
    if (Progress3 != other.Progress3) return false;
    if (Reward != other.Reward) return false;
    if (RewardType != other.RewardType) return false;
    if (IsPick != other.IsPick) return false;
    if (Res != other.Res) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ActiveId != 0) hash ^= ActiveId.GetHashCode();
    if (SubActiveId != 0) hash ^= SubActiveId.GetHashCode();
    if (Param1 != 0) hash ^= Param1.GetHashCode();
    if (Param2 != 0) hash ^= Param2.GetHashCode();
    if (Param3 != 0) hash ^= Param3.GetHashCode();
    if (Progress1 != 0) hash ^= Progress1.GetHashCode();
    if (Progress2 != 0) hash ^= Progress2.GetHashCode();
    if (Progress3 != 0) hash ^= Progress3.GetHashCode();
    if (Reward != 0) hash ^= Reward.GetHashCode();
    if (RewardType != 0) hash ^= RewardType.GetHashCode();
    if (IsPick != 0) hash ^= IsPick.GetHashCode();
    if (Res != false) hash ^= Res.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ActiveId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ActiveId);
    }
    if (SubActiveId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SubActiveId);
    }
    if (Param1 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Param1);
    }
    if (Param2 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Param2);
    }
    if (Param3 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Param3);
    }
    if (Progress1 != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Progress1);
    }
    if (Progress2 != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Progress2);
    }
    if (Progress3 != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Progress3);
    }
    if (Reward != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Reward);
    }
    if (RewardType != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(RewardType);
    }
    if (IsPick != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(IsPick);
    }
    if (Res != false) {
      output.WriteRawTag(96);
      output.WriteBool(Res);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ActiveId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ActiveId);
    }
    if (SubActiveId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SubActiveId);
    }
    if (Param1 != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Param1);
    }
    if (Param2 != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(Param2);
    }
    if (Param3 != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Param3);
    }
    if (Progress1 != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Progress1);
    }
    if (Progress2 != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(Progress2);
    }
    if (Progress3 != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Progress3);
    }
    if (Reward != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Reward);
    }
    if (RewardType != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(RewardType);
    }
    if (IsPick != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(IsPick);
    }
    if (Res != false) {
      output.WriteRawTag(96);
      output.WriteBool(Res);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ActiveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveId);
    }
    if (SubActiveId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubActiveId);
    }
    if (Param1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param1);
    }
    if (Param2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param2);
    }
    if (Param3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param3);
    }
    if (Progress1 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress1);
    }
    if (Progress2 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress2);
    }
    if (Progress3 != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress3);
    }
    if (Reward != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reward);
    }
    if (RewardType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardType);
    }
    if (IsPick != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsPick);
    }
    if (Res != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgActiveInfoSCPick other) {
    if (other == null) {
      return;
    }
    if (other.ActiveId != 0) {
      ActiveId = other.ActiveId;
    }
    if (other.SubActiveId != 0) {
      SubActiveId = other.SubActiveId;
    }
    if (other.Param1 != 0) {
      Param1 = other.Param1;
    }
    if (other.Param2 != 0) {
      Param2 = other.Param2;
    }
    if (other.Param3 != 0) {
      Param3 = other.Param3;
    }
    if (other.Progress1 != 0) {
      Progress1 = other.Progress1;
    }
    if (other.Progress2 != 0) {
      Progress2 = other.Progress2;
    }
    if (other.Progress3 != 0) {
      Progress3 = other.Progress3;
    }
    if (other.Reward != 0) {
      Reward = other.Reward;
    }
    if (other.RewardType != 0) {
      RewardType = other.RewardType;
    }
    if (other.IsPick != 0) {
      IsPick = other.IsPick;
    }
    if (other.Res != false) {
      Res = other.Res;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ActiveId = input.ReadInt32();
          break;
        }
        case 16: {
          SubActiveId = input.ReadInt32();
          break;
        }
        case 24: {
          Param1 = input.ReadInt32();
          break;
        }
        case 32: {
          Param2 = input.ReadInt32();
          break;
        }
        case 40: {
          Param3 = input.ReadInt32();
          break;
        }
        case 48: {
          Progress1 = input.ReadInt32();
          break;
        }
        case 56: {
          Progress2 = input.ReadInt32();
          break;
        }
        case 64: {
          Progress3 = input.ReadInt32();
          break;
        }
        case 72: {
          Reward = input.ReadInt32();
          break;
        }
        case 80: {
          RewardType = input.ReadInt32();
          break;
        }
        case 88: {
          IsPick = input.ReadInt32();
          break;
        }
        case 96: {
          Res = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ActiveId = input.ReadInt32();
          break;
        }
        case 16: {
          SubActiveId = input.ReadInt32();
          break;
        }
        case 24: {
          Param1 = input.ReadInt32();
          break;
        }
        case 32: {
          Param2 = input.ReadInt32();
          break;
        }
        case 40: {
          Param3 = input.ReadInt32();
          break;
        }
        case 48: {
          Progress1 = input.ReadInt32();
          break;
        }
        case 56: {
          Progress2 = input.ReadInt32();
          break;
        }
        case 64: {
          Progress3 = input.ReadInt32();
          break;
        }
        case 72: {
          Reward = input.ReadInt32();
          break;
        }
        case 80: {
          RewardType = input.ReadInt32();
          break;
        }
        case 88: {
          IsPick = input.ReadInt32();
          break;
        }
        case 96: {
          Res = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgModifySignature : pb::IMessage<MsgModifySignature>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgModifySignature> _parser = new pb::MessageParser<MsgModifySignature>(() => new MsgModifySignature());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgModifySignature> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifySignature() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifySignature(MsgModifySignature other) : this() {
    userId_ = other.userId_;
    signature_ = other.signature_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifySignature Clone() {
    return new MsgModifySignature(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///userid
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "signature" field.</summary>
  public const int SignatureFieldNumber = 2;
  private string signature_ = "";
  /// <summary>
  ///新的签名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signature {
    get { return signature_; }
    set {
      signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgModifySignature);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgModifySignature other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Signature != other.Signature) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (Signature.Length != 0) hash ^= Signature.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Signature.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Signature);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (Signature.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgModifySignature other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.Signature.Length != 0) {
      Signature = other.Signature;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          Signature = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          Signature = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///银行
///银行转账
/// </summary>
public sealed partial class MsgTransferOperate : pb::IMessage<MsgTransferOperate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTransferOperate> _parser = new pb::MessageParser<MsgTransferOperate>(() => new MsgTransferOperate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTransferOperate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperate(MsgTransferOperate other) : this() {
    recvUserId_ = other.recvUserId_;
    transferGold_ = other.transferGold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperate Clone() {
    return new MsgTransferOperate(this);
  }

  /// <summary>Field number for the "recv_user_id" field.</summary>
  public const int RecvUserIdFieldNumber = 1;
  private int recvUserId_;
  /// <summary>
  ///接受Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RecvUserId {
    get { return recvUserId_; }
    set {
      recvUserId_ = value;
    }
  }

  /// <summary>Field number for the "transfer_gold" field.</summary>
  public const int TransferGoldFieldNumber = 2;
  private long transferGold_;
  /// <summary>
  ///操作金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TransferGold {
    get { return transferGold_; }
    set {
      transferGold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTransferOperate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTransferOperate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RecvUserId != other.RecvUserId) return false;
    if (TransferGold != other.TransferGold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RecvUserId != 0) hash ^= RecvUserId.GetHashCode();
    if (TransferGold != 0L) hash ^= TransferGold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RecvUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RecvUserId);
    }
    if (TransferGold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TransferGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RecvUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RecvUserId);
    }
    if (TransferGold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(TransferGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RecvUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecvUserId);
    }
    if (TransferGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransferGold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTransferOperate other) {
    if (other == null) {
      return;
    }
    if (other.RecvUserId != 0) {
      RecvUserId = other.RecvUserId;
    }
    if (other.TransferGold != 0L) {
      TransferGold = other.TransferGold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RecvUserId = input.ReadInt32();
          break;
        }
        case 16: {
          TransferGold = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RecvUserId = input.ReadInt32();
          break;
        }
        case 16: {
          TransferGold = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///排行榜数据
/// </summary>
public sealed partial class MsgTopInfo : pb::IMessage<MsgTopInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTopInfo> _parser = new pb::MessageParser<MsgTopInfo>(() => new MsgTopInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTopInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTopInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTopInfo(MsgTopInfo other) : this() {
    rankId_ = other.rankId_;
    userId_ = other.userId_;
    gold_ = other.gold_;
    vipLevel_ = other.vipLevel_;
    avatarFrame_ = other.avatarFrame_;
    headUrl_ = other.headUrl_;
    nickName_ = other.nickName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTopInfo Clone() {
    return new MsgTopInfo(this);
  }

  /// <summary>Field number for the "rank_id" field.</summary>
  public const int RankIdFieldNumber = 1;
  private int rankId_;
  /// <summary>
  ///排行id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RankId {
    get { return rankId_; }
    set {
      rankId_ = value;
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private int userId_;
  /// <summary>
  ///userid
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 3;
  private ulong gold_;
  /// <summary>
  ///金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 4;
  private uint vipLevel_;
  /// <summary>
  ///vip等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 5;
  private int avatarFrame_;
  /// <summary>
  ///头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "head_url" field.</summary>
  public const int HeadUrlFieldNumber = 6;
  private string headUrl_ = "";
  /// <summary>
  ///头像url
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string HeadUrl {
    get { return headUrl_; }
    set {
      headUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nick_name" field.</summary>
  public const int NickNameFieldNumber = 7;
  private string nickName_ = "";
  /// <summary>
  ///昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NickName {
    get { return nickName_; }
    set {
      nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTopInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTopInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RankId != other.RankId) return false;
    if (UserId != other.UserId) return false;
    if (Gold != other.Gold) return false;
    if (VipLevel != other.VipLevel) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if (HeadUrl != other.HeadUrl) return false;
    if (NickName != other.NickName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RankId != 0) hash ^= RankId.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (Gold != 0UL) hash ^= Gold.GetHashCode();
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    if (HeadUrl.Length != 0) hash ^= HeadUrl.GetHashCode();
    if (NickName.Length != 0) hash ^= NickName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RankId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RankId);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (Gold != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Gold);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(AvatarFrame);
    }
    if (HeadUrl.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(HeadUrl);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(NickName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RankId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RankId);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (Gold != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(Gold);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(VipLevel);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(AvatarFrame);
    }
    if (HeadUrl.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(HeadUrl);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(NickName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RankId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankId);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (Gold != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gold);
    }
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VipLevel);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    if (HeadUrl.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadUrl);
    }
    if (NickName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTopInfo other) {
    if (other == null) {
      return;
    }
    if (other.RankId != 0) {
      RankId = other.RankId;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.Gold != 0UL) {
      Gold = other.Gold;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    if (other.HeadUrl.Length != 0) {
      HeadUrl = other.HeadUrl;
    }
    if (other.NickName.Length != 0) {
      NickName = other.NickName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RankId = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          Gold = input.ReadUInt64();
          break;
        }
        case 32: {
          VipLevel = input.ReadUInt32();
          break;
        }
        case 40: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 50: {
          HeadUrl = input.ReadString();
          break;
        }
        case 58: {
          NickName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RankId = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          Gold = input.ReadUInt64();
          break;
        }
        case 32: {
          VipLevel = input.ReadUInt32();
          break;
        }
        case 40: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 50: {
          HeadUrl = input.ReadString();
          break;
        }
        case 58: {
          NickName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgGetRank : pb::IMessage<MsgGetRank>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGetRank> _parser = new pb::MessageParser<MsgGetRank>(() => new MsgGetRank());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGetRank> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGetRank() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGetRank(MsgGetRank other) : this() {
    rankType_ = other.rankType_;
    userId_ = other.userId_;
    currentPage_ = other.currentPage_;
    maxRow_ = other.maxRow_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGetRank Clone() {
    return new MsgGetRank(this);
  }

  /// <summary>Field number for the "rank_type" field.</summary>
  public const int RankTypeFieldNumber = 1;
  private int rankType_;
  /// <summary>
  ///排行榜类型  1 大富豪排行榜 2 今日赢
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RankType {
    get { return rankType_; }
    set {
      rankType_ = value;
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private int userId_;
  /// <summary>
  ///玩家userID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "current_page" field.</summary>
  public const int CurrentPageFieldNumber = 3;
  private int currentPage_;
  /// <summary>
  ///当前页
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurrentPage {
    get { return currentPage_; }
    set {
      currentPage_ = value;
    }
  }

  /// <summary>Field number for the "max_row" field.</summary>
  public const int MaxRowFieldNumber = 4;
  private int maxRow_;
  /// <summary>
  ///每页最大行数  最大20条，超了改数据库
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxRow {
    get { return maxRow_; }
    set {
      maxRow_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGetRank);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGetRank other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RankType != other.RankType) return false;
    if (UserId != other.UserId) return false;
    if (CurrentPage != other.CurrentPage) return false;
    if (MaxRow != other.MaxRow) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RankType != 0) hash ^= RankType.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (CurrentPage != 0) hash ^= CurrentPage.GetHashCode();
    if (MaxRow != 0) hash ^= MaxRow.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RankType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RankType);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (CurrentPage != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CurrentPage);
    }
    if (MaxRow != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(MaxRow);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RankType != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RankType);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (CurrentPage != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CurrentPage);
    }
    if (MaxRow != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(MaxRow);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RankType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankType);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (CurrentPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPage);
    }
    if (MaxRow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRow);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGetRank other) {
    if (other == null) {
      return;
    }
    if (other.RankType != 0) {
      RankType = other.RankType;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.CurrentPage != 0) {
      CurrentPage = other.CurrentPage;
    }
    if (other.MaxRow != 0) {
      MaxRow = other.MaxRow;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RankType = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          CurrentPage = input.ReadInt32();
          break;
        }
        case 32: {
          MaxRow = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RankType = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          CurrentPage = input.ReadInt32();
          break;
        }
        case 32: {
          MaxRow = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///排行榜数据
/// </summary>
public sealed partial class MsgTopListResp : pb::IMessage<MsgTopListResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTopListResp> _parser = new pb::MessageParser<MsgTopListResp>(() => new MsgTopListResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTopListResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTopListResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTopListResp(MsgTopListResp other) : this() {
    userId_ = other.userId_;
    rankType_ = other.rankType_;
    thisRankNdex_ = other.thisRankNdex_;
    thisGold_ = other.thisGold_;
    isEnd_ = other.isEnd_;
    lists_ = other.lists_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTopListResp Clone() {
    return new MsgTopListResp(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///请求玩家userID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "rank_type" field.</summary>
  public const int RankTypeFieldNumber = 2;
  private int rankType_;
  /// <summary>
  ///排行榜类型 1: 财富排行榜 2：输赢排行榜
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RankType {
    get { return rankType_; }
    set {
      rankType_ = value;
    }
  }

  /// <summary>Field number for the "this_rank_ndex" field.</summary>
  public const int ThisRankNdexFieldNumber = 3;
  private int thisRankNdex_;
  /// <summary>
  ///自己的排名
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThisRankNdex {
    get { return thisRankNdex_; }
    set {
      thisRankNdex_ = value;
    }
  }

  /// <summary>Field number for the "this_gold" field.</summary>
  public const int ThisGoldFieldNumber = 4;
  private long thisGold_;
  /// <summary>
  ///自己的金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ThisGold {
    get { return thisGold_; }
    set {
      thisGold_ = value;
    }
  }

  /// <summary>Field number for the "is_end" field.</summary>
  public const int IsEndFieldNumber = 5;
  private int isEnd_;
  /// <summary>
  ///是否到尾了
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IsEnd {
    get { return isEnd_; }
    set {
      isEnd_ = value;
    }
  }

  /// <summary>Field number for the "lists" field.</summary>
  public const int ListsFieldNumber = 6;
  private static readonly pb::FieldCodec<global::MsgTopInfo> _repeated_lists_codec
      = pb::FieldCodec.ForMessage(50, global::MsgTopInfo.Parser);
  private readonly pbc::RepeatedField<global::MsgTopInfo> lists_ = new pbc::RepeatedField<global::MsgTopInfo>();
  /// <summary>
  ///大富豪排行榜
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgTopInfo> Lists {
    get { return lists_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTopListResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTopListResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (RankType != other.RankType) return false;
    if (ThisRankNdex != other.ThisRankNdex) return false;
    if (ThisGold != other.ThisGold) return false;
    if (IsEnd != other.IsEnd) return false;
    if(!lists_.Equals(other.lists_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (RankType != 0) hash ^= RankType.GetHashCode();
    if (ThisRankNdex != 0) hash ^= ThisRankNdex.GetHashCode();
    if (ThisGold != 0L) hash ^= ThisGold.GetHashCode();
    if (IsEnd != 0) hash ^= IsEnd.GetHashCode();
    hash ^= lists_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (RankType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RankType);
    }
    if (ThisRankNdex != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ThisRankNdex);
    }
    if (ThisGold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(ThisGold);
    }
    if (IsEnd != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(IsEnd);
    }
    lists_.WriteTo(output, _repeated_lists_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (RankType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RankType);
    }
    if (ThisRankNdex != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ThisRankNdex);
    }
    if (ThisGold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(ThisGold);
    }
    if (IsEnd != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(IsEnd);
    }
    lists_.WriteTo(ref output, _repeated_lists_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (RankType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankType);
    }
    if (ThisRankNdex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisRankNdex);
    }
    if (ThisGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ThisGold);
    }
    if (IsEnd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsEnd);
    }
    size += lists_.CalculateSize(_repeated_lists_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTopListResp other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.RankType != 0) {
      RankType = other.RankType;
    }
    if (other.ThisRankNdex != 0) {
      ThisRankNdex = other.ThisRankNdex;
    }
    if (other.ThisGold != 0L) {
      ThisGold = other.ThisGold;
    }
    if (other.IsEnd != 0) {
      IsEnd = other.IsEnd;
    }
    lists_.Add(other.lists_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          RankType = input.ReadInt32();
          break;
        }
        case 24: {
          ThisRankNdex = input.ReadInt32();
          break;
        }
        case 32: {
          ThisGold = input.ReadInt64();
          break;
        }
        case 40: {
          IsEnd = input.ReadInt32();
          break;
        }
        case 50: {
          lists_.AddEntriesFrom(input, _repeated_lists_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          RankType = input.ReadInt32();
          break;
        }
        case 24: {
          ThisRankNdex = input.ReadInt32();
          break;
        }
        case 32: {
          ThisGold = input.ReadInt64();
          break;
        }
        case 40: {
          IsEnd = input.ReadInt32();
          break;
        }
        case 50: {
          lists_.AddEntriesFrom(ref input, _repeated_lists_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///银行转账返回
/// </summary>
public sealed partial class MsgTransferOperateResp : pb::IMessage<MsgTransferOperateResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTransferOperateResp> _parser = new pb::MessageParser<MsgTransferOperateResp>(() => new MsgTransferOperateResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTransferOperateResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperateResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperateResp(MsgTransferOperateResp other) : this() {
    retValue_ = other.retValue_;
    userGold_ = other.userGold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperateResp Clone() {
    return new MsgTransferOperateResp(this);
  }

  /// <summary>Field number for the "ret_value" field.</summary>
  public const int RetValueFieldNumber = 1;
  private int retValue_;
  /// <summary>
  ///返回值 0操作成功 非零操作失败：多语言码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RetValue {
    get { return retValue_; }
    set {
      retValue_ = value;
    }
  }

  /// <summary>Field number for the "user_gold" field.</summary>
  public const int UserGoldFieldNumber = 2;
  private long userGold_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long UserGold {
    get { return userGold_; }
    set {
      userGold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTransferOperateResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTransferOperateResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RetValue != other.RetValue) return false;
    if (UserGold != other.UserGold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RetValue != 0) hash ^= RetValue.GetHashCode();
    if (UserGold != 0L) hash ^= UserGold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (UserGold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(UserGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (UserGold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(UserGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RetValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetValue);
    }
    if (UserGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserGold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTransferOperateResp other) {
    if (other == null) {
      return;
    }
    if (other.RetValue != 0) {
      RetValue = other.RetValue;
    }
    if (other.UserGold != 0L) {
      UserGold = other.UserGold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 16: {
          UserGold = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 16: {
          UserGold = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///转账通知
/// </summary>
public sealed partial class MsgTransferOperateSyncResp : pb::IMessage<MsgTransferOperateSyncResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTransferOperateSyncResp> _parser = new pb::MessageParser<MsgTransferOperateSyncResp>(() => new MsgTransferOperateSyncResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTransferOperateSyncResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperateSyncResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperateSyncResp(MsgTransferOperateSyncResp other) : this() {
    retValue_ = other.retValue_;
    sendUserId_ = other.sendUserId_;
    addGold_ = other.addGold_;
    receiveState_ = other.receiveState_;
    transferId_ = other.transferId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferOperateSyncResp Clone() {
    return new MsgTransferOperateSyncResp(this);
  }

  /// <summary>Field number for the "ret_value" field.</summary>
  public const int RetValueFieldNumber = 1;
  private int retValue_;
  /// <summary>
  ///返回值 0：成功 非零：多语言码			
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RetValue {
    get { return retValue_; }
    set {
      retValue_ = value;
    }
  }

  /// <summary>Field number for the "send_user_id" field.</summary>
  public const int SendUserIdFieldNumber = 3;
  private int sendUserId_;
  /// <summary>
  ///发送Id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SendUserId {
    get { return sendUserId_; }
    set {
      sendUserId_ = value;
    }
  }

  /// <summary>Field number for the "add_gold" field.</summary>
  public const int AddGoldFieldNumber = 4;
  private long addGold_;
  /// <summary>
  ///操作金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long AddGold {
    get { return addGold_; }
    set {
      addGold_ = value;
    }
  }

  /// <summary>Field number for the "receive_state" field.</summary>
  public const int ReceiveStateFieldNumber = 6;
  private long receiveState_;
  /// <summary>
  ///领取状态 0：未领取 1:已领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ReceiveState {
    get { return receiveState_; }
    set {
      receiveState_ = value;
    }
  }

  /// <summary>Field number for the "transfer_id" field.</summary>
  public const int TransferIdFieldNumber = 7;
  private long transferId_;
  /// <summary>
  ///转账id 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TransferId {
    get { return transferId_; }
    set {
      transferId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTransferOperateSyncResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTransferOperateSyncResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RetValue != other.RetValue) return false;
    if (SendUserId != other.SendUserId) return false;
    if (AddGold != other.AddGold) return false;
    if (ReceiveState != other.ReceiveState) return false;
    if (TransferId != other.TransferId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RetValue != 0) hash ^= RetValue.GetHashCode();
    if (SendUserId != 0) hash ^= SendUserId.GetHashCode();
    if (AddGold != 0L) hash ^= AddGold.GetHashCode();
    if (ReceiveState != 0L) hash ^= ReceiveState.GetHashCode();
    if (TransferId != 0L) hash ^= TransferId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (SendUserId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SendUserId);
    }
    if (AddGold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(AddGold);
    }
    if (ReceiveState != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(ReceiveState);
    }
    if (TransferId != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(TransferId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (SendUserId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(SendUserId);
    }
    if (AddGold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(AddGold);
    }
    if (ReceiveState != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(ReceiveState);
    }
    if (TransferId != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(TransferId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RetValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetValue);
    }
    if (SendUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendUserId);
    }
    if (AddGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(AddGold);
    }
    if (ReceiveState != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceiveState);
    }
    if (TransferId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransferId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTransferOperateSyncResp other) {
    if (other == null) {
      return;
    }
    if (other.RetValue != 0) {
      RetValue = other.RetValue;
    }
    if (other.SendUserId != 0) {
      SendUserId = other.SendUserId;
    }
    if (other.AddGold != 0L) {
      AddGold = other.AddGold;
    }
    if (other.ReceiveState != 0L) {
      ReceiveState = other.ReceiveState;
    }
    if (other.TransferId != 0L) {
      TransferId = other.TransferId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 24: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 32: {
          AddGold = input.ReadInt64();
          break;
        }
        case 48: {
          ReceiveState = input.ReadInt64();
          break;
        }
        case 56: {
          TransferId = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 24: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 32: {
          AddGold = input.ReadInt64();
          break;
        }
        case 48: {
          ReceiveState = input.ReadInt64();
          break;
        }
        case 56: {
          TransferId = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///领取返回
/// </summary>
public sealed partial class MsgTransferReceiveResp : pb::IMessage<MsgTransferReceiveResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTransferReceiveResp> _parser = new pb::MessageParser<MsgTransferReceiveResp>(() => new MsgTransferReceiveResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTransferReceiveResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferReceiveResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferReceiveResp(MsgTransferReceiveResp other) : this() {
    retValue_ = other.retValue_;
    changeGold_ = other.changeGold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferReceiveResp Clone() {
    return new MsgTransferReceiveResp(this);
  }

  /// <summary>Field number for the "ret_value" field.</summary>
  public const int RetValueFieldNumber = 1;
  private int retValue_;
  /// <summary>
  ///领取返回值 0:成功 失败：多语言码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RetValue {
    get { return retValue_; }
    set {
      retValue_ = value;
    }
  }

  /// <summary>Field number for the "change_gold" field.</summary>
  public const int ChangeGoldFieldNumber = 2;
  private long changeGold_;
  /// <summary>
  ///用户领取金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ChangeGold {
    get { return changeGold_; }
    set {
      changeGold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTransferReceiveResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTransferReceiveResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RetValue != other.RetValue) return false;
    if (ChangeGold != other.ChangeGold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RetValue != 0) hash ^= RetValue.GetHashCode();
    if (ChangeGold != 0L) hash ^= ChangeGold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (ChangeGold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(ChangeGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (ChangeGold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(ChangeGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RetValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetValue);
    }
    if (ChangeGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChangeGold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTransferReceiveResp other) {
    if (other == null) {
      return;
    }
    if (other.RetValue != 0) {
      RetValue = other.RetValue;
    }
    if (other.ChangeGold != 0L) {
      ChangeGold = other.ChangeGold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 16: {
          ChangeGold = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 16: {
          ChangeGold = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///银行转账记录
/// </summary>
public sealed partial class MsgTransferRecord : pb::IMessage<MsgTransferRecord>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTransferRecord> _parser = new pb::MessageParser<MsgTransferRecord>(() => new MsgTransferRecord());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTransferRecord> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferRecord() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferRecord(MsgTransferRecord other) : this() {
    sendUserId_ = other.sendUserId_;
    nickname_ = other.nickname_;
    transferGold_ = other.transferGold_;
    timer_ = other.timer_;
    recvUserId_ = other.recvUserId_;
    receiveState_ = other.receiveState_;
    transferId_ = other.transferId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferRecord Clone() {
    return new MsgTransferRecord(this);
  }

  /// <summary>Field number for the "send_user_id" field.</summary>
  public const int SendUserIdFieldNumber = 1;
  private int sendUserId_;
  /// <summary>
  ///发送id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int SendUserId {
    get { return sendUserId_; }
    set {
      sendUserId_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 2;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "transfer_gold" field.</summary>
  public const int TransferGoldFieldNumber = 3;
  private long transferGold_;
  /// <summary>
  ///操作金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TransferGold {
    get { return transferGold_; }
    set {
      transferGold_ = value;
    }
  }

  /// <summary>Field number for the "timer" field.</summary>
  public const int TimerFieldNumber = 5;
  private string timer_ = "";
  /// <summary>
  ///时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Timer {
    get { return timer_; }
    set {
      timer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "recv_user_id" field.</summary>
  public const int RecvUserIdFieldNumber = 6;
  private int recvUserId_;
  /// <summary>
  ///接受id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RecvUserId {
    get { return recvUserId_; }
    set {
      recvUserId_ = value;
    }
  }

  /// <summary>Field number for the "receive_state" field.</summary>
  public const int ReceiveStateFieldNumber = 7;
  private int receiveState_;
  /// <summary>
  ///状态 0：未领取 1:已领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ReceiveState {
    get { return receiveState_; }
    set {
      receiveState_ = value;
    }
  }

  /// <summary>Field number for the "transfer_id" field.</summary>
  public const int TransferIdFieldNumber = 8;
  private long transferId_;
  /// <summary>
  ///转账id 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TransferId {
    get { return transferId_; }
    set {
      transferId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTransferRecord);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTransferRecord other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SendUserId != other.SendUserId) return false;
    if (Nickname != other.Nickname) return false;
    if (TransferGold != other.TransferGold) return false;
    if (Timer != other.Timer) return false;
    if (RecvUserId != other.RecvUserId) return false;
    if (ReceiveState != other.ReceiveState) return false;
    if (TransferId != other.TransferId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SendUserId != 0) hash ^= SendUserId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (TransferGold != 0L) hash ^= TransferGold.GetHashCode();
    if (Timer.Length != 0) hash ^= Timer.GetHashCode();
    if (RecvUserId != 0) hash ^= RecvUserId.GetHashCode();
    if (ReceiveState != 0) hash ^= ReceiveState.GetHashCode();
    if (TransferId != 0L) hash ^= TransferId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (SendUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SendUserId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    if (TransferGold != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TransferGold);
    }
    if (Timer.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Timer);
    }
    if (RecvUserId != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(RecvUserId);
    }
    if (ReceiveState != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ReceiveState);
    }
    if (TransferId != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(TransferId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (SendUserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(SendUserId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    if (TransferGold != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TransferGold);
    }
    if (Timer.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Timer);
    }
    if (RecvUserId != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(RecvUserId);
    }
    if (ReceiveState != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ReceiveState);
    }
    if (TransferId != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(TransferId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SendUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendUserId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (TransferGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransferGold);
    }
    if (Timer.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Timer);
    }
    if (RecvUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecvUserId);
    }
    if (ReceiveState != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiveState);
    }
    if (TransferId != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TransferId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTransferRecord other) {
    if (other == null) {
      return;
    }
    if (other.SendUserId != 0) {
      SendUserId = other.SendUserId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.TransferGold != 0L) {
      TransferGold = other.TransferGold;
    }
    if (other.Timer.Length != 0) {
      Timer = other.Timer;
    }
    if (other.RecvUserId != 0) {
      RecvUserId = other.RecvUserId;
    }
    if (other.ReceiveState != 0) {
      ReceiveState = other.ReceiveState;
    }
    if (other.TransferId != 0L) {
      TransferId = other.TransferId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 18: {
          Nickname = input.ReadString();
          break;
        }
        case 24: {
          TransferGold = input.ReadInt64();
          break;
        }
        case 42: {
          Timer = input.ReadString();
          break;
        }
        case 48: {
          RecvUserId = input.ReadInt32();
          break;
        }
        case 56: {
          ReceiveState = input.ReadInt32();
          break;
        }
        case 64: {
          TransferId = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SendUserId = input.ReadInt32();
          break;
        }
        case 18: {
          Nickname = input.ReadString();
          break;
        }
        case 24: {
          TransferGold = input.ReadInt64();
          break;
        }
        case 42: {
          Timer = input.ReadString();
          break;
        }
        case 48: {
          RecvUserId = input.ReadInt32();
          break;
        }
        case 56: {
          ReceiveState = input.ReadInt32();
          break;
        }
        case 64: {
          TransferId = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgTransferRecordResp : pb::IMessage<MsgTransferRecordResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTransferRecordResp> _parser = new pb::MessageParser<MsgTransferRecordResp>(() => new MsgTransferRecordResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTransferRecordResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferRecordResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferRecordResp(MsgTransferRecordResp other) : this() {
    records_ = other.records_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferRecordResp Clone() {
    return new MsgTransferRecordResp(this);
  }

  /// <summary>Field number for the "records" field.</summary>
  public const int RecordsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgTransferRecord> _repeated_records_codec
      = pb::FieldCodec.ForMessage(10, global::MsgTransferRecord.Parser);
  private readonly pbc::RepeatedField<global::MsgTransferRecord> records_ = new pbc::RepeatedField<global::MsgTransferRecord>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgTransferRecord> Records {
    get { return records_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTransferRecordResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTransferRecordResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!records_.Equals(other.records_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= records_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    records_.WriteTo(output, _repeated_records_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    records_.WriteTo(ref output, _repeated_records_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += records_.CalculateSize(_repeated_records_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTransferRecordResp other) {
    if (other == null) {
      return;
    }
    records_.Add(other.records_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          records_.AddEntriesFrom(input, _repeated_records_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          records_.AddEntriesFrom(ref input, _repeated_records_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///请求验证码
/// </summary>
public sealed partial class MsgPhoneCode : pb::IMessage<MsgPhoneCode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPhoneCode> _parser = new pb::MessageParser<MsgPhoneCode>(() => new MsgPhoneCode());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPhoneCode> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPhoneCode() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPhoneCode(MsgPhoneCode other) : this() {
    areaCode_ = other.areaCode_;
    phone_ = other.phone_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPhoneCode Clone() {
    return new MsgPhoneCode(this);
  }

  /// <summary>Field number for the "area_code" field.</summary>
  public const int AreaCodeFieldNumber = 1;
  private string areaCode_ = "";
  /// <summary>
  ///区号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AreaCode {
    get { return areaCode_; }
    set {
      areaCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 2;
  private string phone_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPhoneCode);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPhoneCode other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AreaCode != other.AreaCode) return false;
    if (Phone != other.Phone) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AreaCode.Length != 0) hash ^= AreaCode.GetHashCode();
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (AreaCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AreaCode);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Phone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (AreaCode.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AreaCode);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Phone);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AreaCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaCode);
    }
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPhoneCode other) {
    if (other == null) {
      return;
    }
    if (other.AreaCode.Length != 0) {
      AreaCode = other.AreaCode;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AreaCode = input.ReadString();
          break;
        }
        case 18: {
          Phone = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          AreaCode = input.ReadString();
          break;
        }
        case 18: {
          Phone = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家道具
/// </summary>
public sealed partial class MsgItem : pb::IMessage<MsgItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgItem> _parser = new pb::MessageParser<MsgItem>(() => new MsgItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgItem(MsgItem other) : this() {
    itemId_ = other.itemId_;
    itemNum_ = other.itemNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgItem Clone() {
    return new MsgItem(this);
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private int itemId_;
  /// <summary>
  ///道具id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "item_num" field.</summary>
  public const int ItemNumFieldNumber = 2;
  private long itemNum_;
  /// <summary>
  ///道具数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ItemNum {
    get { return itemNum_; }
    set {
      itemNum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemNum != other.ItemNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (ItemNum != 0L) hash ^= ItemNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(ItemNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(ItemNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
    }
    if (ItemNum != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgItem other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.ItemNum != 0L) {
      ItemNum = other.ItemNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家道具
/// </summary>
public sealed partial class MsgPlayerItem : pb::IMessage<MsgPlayerItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerItem> _parser = new pb::MessageParser<MsgPlayerItem>(() => new MsgPlayerItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerItem(MsgPlayerItem other) : this() {
    item_ = other.item_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerItem Clone() {
    return new MsgPlayerItem(this);
  }

  /// <summary>Field number for the "item" field.</summary>
  public const int ItemFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgItem> _repeated_item_codec
      = pb::FieldCodec.ForMessage(10, global::MsgItem.Parser);
  private readonly pbc::RepeatedField<global::MsgItem> item_ = new pbc::RepeatedField<global::MsgItem>();
  /// <summary>
  ///玩家道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgItem> Item {
    get { return item_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!item_.Equals(other.item_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= item_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    item_.WriteTo(output, _repeated_item_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    item_.WriteTo(ref output, _repeated_item_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += item_.CalculateSize(_repeated_item_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerItem other) {
    if (other == null) {
      return;
    }
    item_.Add(other.item_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          item_.AddEntriesFrom(input, _repeated_item_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          item_.AddEntriesFrom(ref input, _repeated_item_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///查询玩家转账对象
/// </summary>
public sealed partial class MsgTransferQueryNickname : pb::IMessage<MsgTransferQueryNickname>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTransferQueryNickname> _parser = new pb::MessageParser<MsgTransferQueryNickname>(() => new MsgTransferQueryNickname());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTransferQueryNickname> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferQueryNickname() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferQueryNickname(MsgTransferQueryNickname other) : this() {
    retValue_ = other.retValue_;
    nickname_ = other.nickname_;
    tax_ = other.tax_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTransferQueryNickname Clone() {
    return new MsgTransferQueryNickname(this);
  }

  /// <summary>Field number for the "ret_Value" field.</summary>
  public const int RetValueFieldNumber = 1;
  private int retValue_;
  /// <summary>
  ///返回值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RetValue {
    get { return retValue_; }
    set {
      retValue_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 2;
  private string nickname_ = "";
  /// <summary>
  ///昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "tax" field.</summary>
  public const int TaxFieldNumber = 3;
  private int tax_;
  /// <summary>
  ///税收值 百分比
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Tax {
    get { return tax_; }
    set {
      tax_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTransferQueryNickname);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTransferQueryNickname other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RetValue != other.RetValue) return false;
    if (Nickname != other.Nickname) return false;
    if (Tax != other.Tax) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RetValue != 0) hash ^= RetValue.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Tax != 0) hash ^= Tax.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    if (Tax != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Tax);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RetValue != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetValue);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    if (Tax != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Tax);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RetValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetValue);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Tax != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tax);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTransferQueryNickname other) {
    if (other == null) {
      return;
    }
    if (other.RetValue != 0) {
      RetValue = other.RetValue;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Tax != 0) {
      Tax = other.Tax;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 18: {
          Nickname = input.ReadString();
          break;
        }
        case 24: {
          Tax = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RetValue = input.ReadInt32();
          break;
        }
        case 18: {
          Nickname = input.ReadString();
          break;
        }
        case 24: {
          Tax = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgSubagentInformation : pb::IMessage<MsgSubagentInformation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgSubagentInformation> _parser = new pb::MessageParser<MsgSubagentInformation>(() => new MsgSubagentInformation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgSubagentInformation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSubagentInformation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSubagentInformation(MsgSubagentInformation other) : this() {
    agentNickname_ = other.agentNickname_;
    agentUserId_ = other.agentUserId_;
    agentType_ = other.agentType_;
    totalShiftTo_ = other.totalShiftTo_;
    totalRollOut_ = other.totalRollOut_;
    vipLevel_ = other.vipLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSubagentInformation Clone() {
    return new MsgSubagentInformation(this);
  }

  /// <summary>Field number for the "agent_nickname" field.</summary>
  public const int AgentNicknameFieldNumber = 1;
  private string agentNickname_ = "";
  /// <summary>
  ///代理昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string AgentNickname {
    get { return agentNickname_; }
    set {
      agentNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "agent_user_id" field.</summary>
  public const int AgentUserIdFieldNumber = 2;
  private int agentUserId_;
  /// <summary>
  ///代理id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentUserId {
    get { return agentUserId_; }
    set {
      agentUserId_ = value;
    }
  }

  /// <summary>Field number for the "agent_type" field.</summary>
  public const int AgentTypeFieldNumber = 3;
  private bool agentType_;
  /// <summary>
  ///代理身份0玩家1代理
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool AgentType {
    get { return agentType_; }
    set {
      agentType_ = value;
    }
  }

  /// <summary>Field number for the "total_shift_to" field.</summary>
  public const int TotalShiftToFieldNumber = 4;
  private long totalShiftTo_;
  /// <summary>
  ///总转入
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TotalShiftTo {
    get { return totalShiftTo_; }
    set {
      totalShiftTo_ = value;
    }
  }

  /// <summary>Field number for the "total_roll_out" field.</summary>
  public const int TotalRollOutFieldNumber = 5;
  private long totalRollOut_;
  /// <summary>
  ///总转出
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TotalRollOut {
    get { return totalRollOut_; }
    set {
      totalRollOut_ = value;
    }
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 6;
  private int vipLevel_;
  /// <summary>
  ///代理VIP
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgSubagentInformation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgSubagentInformation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AgentNickname != other.AgentNickname) return false;
    if (AgentUserId != other.AgentUserId) return false;
    if (AgentType != other.AgentType) return false;
    if (TotalShiftTo != other.TotalShiftTo) return false;
    if (TotalRollOut != other.TotalRollOut) return false;
    if (VipLevel != other.VipLevel) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AgentNickname.Length != 0) hash ^= AgentNickname.GetHashCode();
    if (AgentUserId != 0) hash ^= AgentUserId.GetHashCode();
    if (AgentType != false) hash ^= AgentType.GetHashCode();
    if (TotalShiftTo != 0L) hash ^= TotalShiftTo.GetHashCode();
    if (TotalRollOut != 0L) hash ^= TotalRollOut.GetHashCode();
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (AgentNickname.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AgentNickname);
    }
    if (AgentUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AgentUserId);
    }
    if (AgentType != false) {
      output.WriteRawTag(24);
      output.WriteBool(AgentType);
    }
    if (TotalShiftTo != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(TotalShiftTo);
    }
    if (TotalRollOut != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(TotalRollOut);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(VipLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (AgentNickname.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(AgentNickname);
    }
    if (AgentUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AgentUserId);
    }
    if (AgentType != false) {
      output.WriteRawTag(24);
      output.WriteBool(AgentType);
    }
    if (TotalShiftTo != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(TotalShiftTo);
    }
    if (TotalRollOut != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(TotalRollOut);
    }
    if (VipLevel != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(VipLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AgentNickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentNickname);
    }
    if (AgentUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentUserId);
    }
    if (AgentType != false) {
      size += 1 + 1;
    }
    if (TotalShiftTo != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalShiftTo);
    }
    if (TotalRollOut != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalRollOut);
    }
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgSubagentInformation other) {
    if (other == null) {
      return;
    }
    if (other.AgentNickname.Length != 0) {
      AgentNickname = other.AgentNickname;
    }
    if (other.AgentUserId != 0) {
      AgentUserId = other.AgentUserId;
    }
    if (other.AgentType != false) {
      AgentType = other.AgentType;
    }
    if (other.TotalShiftTo != 0L) {
      TotalShiftTo = other.TotalShiftTo;
    }
    if (other.TotalRollOut != 0L) {
      TotalRollOut = other.TotalRollOut;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          AgentNickname = input.ReadString();
          break;
        }
        case 16: {
          AgentUserId = input.ReadInt32();
          break;
        }
        case 24: {
          AgentType = input.ReadBool();
          break;
        }
        case 32: {
          TotalShiftTo = input.ReadInt64();
          break;
        }
        case 40: {
          TotalRollOut = input.ReadInt64();
          break;
        }
        case 48: {
          VipLevel = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          AgentNickname = input.ReadString();
          break;
        }
        case 16: {
          AgentUserId = input.ReadInt32();
          break;
        }
        case 24: {
          AgentType = input.ReadBool();
          break;
        }
        case 32: {
          TotalShiftTo = input.ReadInt64();
          break;
        }
        case 40: {
          TotalRollOut = input.ReadInt64();
          break;
        }
        case 48: {
          VipLevel = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgTtotalSubagentInformation : pb::IMessage<MsgTtotalSubagentInformation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTtotalSubagentInformation> _parser = new pb::MessageParser<MsgTtotalSubagentInformation>(() => new MsgTtotalSubagentInformation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTtotalSubagentInformation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTtotalSubagentInformation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTtotalSubagentInformation(MsgTtotalSubagentInformation other) : this() {
    agentInfo_ = other.agentInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTtotalSubagentInformation Clone() {
    return new MsgTtotalSubagentInformation(this);
  }

  /// <summary>Field number for the "agent_info" field.</summary>
  public const int AgentInfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgSubagentInformation> _repeated_agentInfo_codec
      = pb::FieldCodec.ForMessage(10, global::MsgSubagentInformation.Parser);
  private readonly pbc::RepeatedField<global::MsgSubagentInformation> agentInfo_ = new pbc::RepeatedField<global::MsgSubagentInformation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgSubagentInformation> AgentInfo {
    get { return agentInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTtotalSubagentInformation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTtotalSubagentInformation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!agentInfo_.Equals(other.agentInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= agentInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    agentInfo_.WriteTo(output, _repeated_agentInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    agentInfo_.WriteTo(ref output, _repeated_agentInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += agentInfo_.CalculateSize(_repeated_agentInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTtotalSubagentInformation other) {
    if (other == null) {
      return;
    }
    agentInfo_.Add(other.agentInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          agentInfo_.AddEntriesFrom(input, _repeated_agentInfo_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          agentInfo_.AddEntriesFrom(ref input, _repeated_agentInfo_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///分享绑定上级信息返回
/// </summary>
public sealed partial class MsgBindParentInfo : pb::IMessage<MsgBindParentInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBindParentInfo> _parser = new pb::MessageParser<MsgBindParentInfo>(() => new MsgBindParentInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBindParentInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentInfo(MsgBindParentInfo other) : this() {
    userId_ = other.userId_;
    avatar_ = other.avatar_;
    avatarFrame_ = other.avatarFrame_;
    nickName_ = other.nickName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindParentInfo Clone() {
    return new MsgBindParentInfo(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 2;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 3;
  private int avatarFrame_;
  /// <summary>
  ///头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "nick_name" field.</summary>
  public const int NickNameFieldNumber = 4;
  private string nickName_ = "";
  /// <summary>
  ///昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NickName {
    get { return nickName_; }
    set {
      nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBindParentInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBindParentInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Avatar != other.Avatar) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if (NickName != other.NickName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    if (NickName.Length != 0) hash ^= NickName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Avatar);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AvatarFrame);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(NickName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Avatar);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(AvatarFrame);
    }
    if (NickName.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(NickName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    if (NickName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBindParentInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    if (other.NickName.Length != 0) {
      NickName = other.NickName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          Avatar = input.ReadString();
          break;
        }
        case 24: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 34: {
          NickName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          Avatar = input.ReadString();
          break;
        }
        case 24: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 34: {
          NickName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///绑定邀请码返回
/// </summary>
public sealed partial class MsgBindInviteCodeResp : pb::IMessage<MsgBindInviteCodeResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBindInviteCodeResp> _parser = new pb::MessageParser<MsgBindInviteCodeResp>(() => new MsgBindInviteCodeResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBindInviteCodeResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindInviteCodeResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindInviteCodeResp(MsgBindInviteCodeResp other) : this() {
    resCode_ = other.resCode_;
    userType_ = other.userType_;
    info_ = other.info_ != null ? other.info_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindInviteCodeResp Clone() {
    return new MsgBindInviteCodeResp(this);
  }

  /// <summary>Field number for the "res_code" field.</summary>
  public const int ResCodeFieldNumber = 1;
  private int resCode_;
  /// <summary>
  ///返回码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResCode {
    get { return resCode_; }
    set {
      resCode_ = value;
    }
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 2;
  private int userType_;
  /// <summary>
  ///玩家类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 3;
  private global::MsgBindParentInfo info_;
  /// <summary>
  ///绑定上级信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgBindParentInfo Info {
    get { return info_; }
    set {
      info_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBindInviteCodeResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBindInviteCodeResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResCode != other.ResCode) return false;
    if (UserType != other.UserType) return false;
    if (!object.Equals(Info, other.Info)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ResCode != 0) hash ^= ResCode.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (info_ != null) hash ^= Info.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserType);
    }
    if (info_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Info);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserType != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserType);
    }
    if (info_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Info);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ResCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResCode);
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
    }
    if (info_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBindInviteCodeResp other) {
    if (other == null) {
      return;
    }
    if (other.ResCode != 0) {
      ResCode = other.ResCode;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.info_ != null) {
      if (info_ == null) {
        Info = new global::MsgBindParentInfo();
      }
      Info.MergeFrom(other.Info);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserType = input.ReadInt32();
          break;
        }
        case 26: {
          if (info_ == null) {
            Info = new global::MsgBindParentInfo();
          }
          input.ReadMessage(Info);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserType = input.ReadInt32();
          break;
        }
        case 26: {
          if (info_ == null) {
            Info = new global::MsgBindParentInfo();
          }
          input.ReadMessage(Info);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///打点充值返回
/// </summary>
public sealed partial class MsgDotRechargeResp : pb::IMessage<MsgDotRechargeResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgDotRechargeResp> _parser = new pb::MessageParser<MsgDotRechargeResp>(() => new MsgDotRechargeResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgDotRechargeResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgDotRechargeResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgDotRechargeResp(MsgDotRechargeResp other) : this() {
    isNewRecharge_ = other.isNewRecharge_;
    gold_ = other.gold_;
    rechargeInfo_ = other.rechargeInfo_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgDotRechargeResp Clone() {
    return new MsgDotRechargeResp(this);
  }

  /// <summary>Field number for the "is_new_recharge" field.</summary>
  public const int IsNewRechargeFieldNumber = 1;
  private bool isNewRecharge_;
  /// <summary>
  ///是否新充值用户
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsNewRecharge {
    get { return isNewRecharge_; }
    set {
      isNewRecharge_ = value;
    }
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 2;
  private long gold_;
  /// <summary>
  ///玩家类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  /// <summary>Field number for the "recharge_info" field.</summary>
  public const int RechargeInfoFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_rechargeInfo_codec
      = pb::FieldCodec.ForInt32(26);
  private readonly pbc::RepeatedField<int> rechargeInfo_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///充值数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> RechargeInfo {
    get { return rechargeInfo_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgDotRechargeResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgDotRechargeResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsNewRecharge != other.IsNewRecharge) return false;
    if (Gold != other.Gold) return false;
    if(!rechargeInfo_.Equals(other.rechargeInfo_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (IsNewRecharge != false) hash ^= IsNewRecharge.GetHashCode();
    if (Gold != 0L) hash ^= Gold.GetHashCode();
    hash ^= rechargeInfo_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (IsNewRecharge != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsNewRecharge);
    }
    if (Gold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Gold);
    }
    rechargeInfo_.WriteTo(output, _repeated_rechargeInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (IsNewRecharge != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsNewRecharge);
    }
    if (Gold != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(Gold);
    }
    rechargeInfo_.WriteTo(ref output, _repeated_rechargeInfo_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (IsNewRecharge != false) {
      size += 1 + 1;
    }
    if (Gold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
    }
    size += rechargeInfo_.CalculateSize(_repeated_rechargeInfo_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgDotRechargeResp other) {
    if (other == null) {
      return;
    }
    if (other.IsNewRecharge != false) {
      IsNewRecharge = other.IsNewRecharge;
    }
    if (other.Gold != 0L) {
      Gold = other.Gold;
    }
    rechargeInfo_.Add(other.rechargeInfo_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsNewRecharge = input.ReadBool();
          break;
        }
        case 16: {
          Gold = input.ReadInt64();
          break;
        }
        case 26:
        case 24: {
          rechargeInfo_.AddEntriesFrom(input, _repeated_rechargeInfo_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          IsNewRecharge = input.ReadBool();
          break;
        }
        case 16: {
          Gold = input.ReadInt64();
          break;
        }
        case 26:
        case 24: {
          rechargeInfo_.AddEntriesFrom(ref input, _repeated_rechargeInfo_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///在线时长配置
/// </summary>
public sealed partial class MsgOnlineActiveConfig : pb::IMessage<MsgOnlineActiveConfig>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgOnlineActiveConfig> _parser = new pb::MessageParser<MsgOnlineActiveConfig>(() => new MsgOnlineActiveConfig());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgOnlineActiveConfig> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOnlineActiveConfig() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOnlineActiveConfig(MsgOnlineActiveConfig other) : this() {
    itemId_ = other.itemId_;
    itemNum_ = other.itemNum_;
    type_ = other.type_;
    onlineIndex_ = other.onlineIndex_;
    times_ = other.times_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOnlineActiveConfig Clone() {
    return new MsgOnlineActiveConfig(this);
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private int itemId_;
  /// <summary>
  ///奖励id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "item_num" field.</summary>
  public const int ItemNumFieldNumber = 2;
  private int itemNum_;
  /// <summary>
  ///奖励数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemNum {
    get { return itemNum_; }
    set {
      itemNum_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private int type_;
  /// <summary>
  ///奖励类型 类型为1 为任务1以此类推 每个类型有四个相同类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "online_index" field.</summary>
  public const int OnlineIndexFieldNumber = 4;
  private int onlineIndex_;
  /// <summary>
  ///奖励索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OnlineIndex {
    get { return onlineIndex_; }
    set {
      onlineIndex_ = value;
    }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int TimesFieldNumber = 5;
  private int times_;
  /// <summary>
  ///所需时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Times {
    get { return times_; }
    set {
      times_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgOnlineActiveConfig);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgOnlineActiveConfig other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemNum != other.ItemNum) return false;
    if (Type != other.Type) return false;
    if (OnlineIndex != other.OnlineIndex) return false;
    if (Times != other.Times) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (OnlineIndex != 0) hash ^= OnlineIndex.GetHashCode();
    if (Times != 0) hash ^= Times.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ItemNum);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (OnlineIndex != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineIndex);
    }
    if (Times != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Times);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ItemNum);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (OnlineIndex != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineIndex);
    }
    if (Times != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Times);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
    }
    if (ItemNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (OnlineIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineIndex);
    }
    if (Times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Times);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgOnlineActiveConfig other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.ItemNum != 0) {
      ItemNum = other.ItemNum;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.OnlineIndex != 0) {
      OnlineIndex = other.OnlineIndex;
    }
    if (other.Times != 0) {
      Times = other.Times;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineIndex = input.ReadInt32();
          break;
        }
        case 40: {
          Times = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineIndex = input.ReadInt32();
          break;
        }
        case 40: {
          Times = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///在线时长查询
/// </summary>
public sealed partial class MsgOnlineActiveQuery : pb::IMessage<MsgOnlineActiveQuery>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgOnlineActiveQuery> _parser = new pb::MessageParser<MsgOnlineActiveQuery>(() => new MsgOnlineActiveQuery());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgOnlineActiveQuery> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOnlineActiveQuery() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOnlineActiveQuery(MsgOnlineActiveQuery other) : this() {
    userTimes_ = other.userTimes_;
    indexId_ = other.indexId_.Clone();
    onlineConfig_ = other.onlineConfig_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOnlineActiveQuery Clone() {
    return new MsgOnlineActiveQuery(this);
  }

  /// <summary>Field number for the "user_times" field.</summary>
  public const int UserTimesFieldNumber = 1;
  private int userTimes_;
  /// <summary>
  ///玩家当前时长
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserTimes {
    get { return userTimes_; }
    set {
      userTimes_ = value;
    }
  }

  /// <summary>Field number for the "index_id" field.</summary>
  public const int IndexIdFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_indexId_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> indexId_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///0表示未领取非0已经领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> IndexId {
    get { return indexId_; }
  }

  /// <summary>Field number for the "online_config" field.</summary>
  public const int OnlineConfigFieldNumber = 3;
  private static readonly pb::FieldCodec<global::MsgOnlineActiveConfig> _repeated_onlineConfig_codec
      = pb::FieldCodec.ForMessage(26, global::MsgOnlineActiveConfig.Parser);
  private readonly pbc::RepeatedField<global::MsgOnlineActiveConfig> onlineConfig_ = new pbc::RepeatedField<global::MsgOnlineActiveConfig>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgOnlineActiveConfig> OnlineConfig {
    get { return onlineConfig_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgOnlineActiveQuery);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgOnlineActiveQuery other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserTimes != other.UserTimes) return false;
    if(!indexId_.Equals(other.indexId_)) return false;
    if(!onlineConfig_.Equals(other.onlineConfig_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserTimes != 0) hash ^= UserTimes.GetHashCode();
    hash ^= indexId_.GetHashCode();
    hash ^= onlineConfig_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserTimes != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserTimes);
    }
    indexId_.WriteTo(output, _repeated_indexId_codec);
    onlineConfig_.WriteTo(output, _repeated_onlineConfig_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserTimes != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserTimes);
    }
    indexId_.WriteTo(ref output, _repeated_indexId_codec);
    onlineConfig_.WriteTo(ref output, _repeated_onlineConfig_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserTimes);
    }
    size += indexId_.CalculateSize(_repeated_indexId_codec);
    size += onlineConfig_.CalculateSize(_repeated_onlineConfig_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgOnlineActiveQuery other) {
    if (other == null) {
      return;
    }
    if (other.UserTimes != 0) {
      UserTimes = other.UserTimes;
    }
    indexId_.Add(other.indexId_);
    onlineConfig_.Add(other.onlineConfig_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserTimes = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          indexId_.AddEntriesFrom(input, _repeated_indexId_codec);
          break;
        }
        case 26: {
          onlineConfig_.AddEntriesFrom(input, _repeated_onlineConfig_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserTimes = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          indexId_.AddEntriesFrom(ref input, _repeated_indexId_codec);
          break;
        }
        case 26: {
          onlineConfig_.AddEntriesFrom(ref input, _repeated_onlineConfig_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///在线时长奖励
/// </summary>
public sealed partial class MsgOlineActiveAward : pb::IMessage<MsgOlineActiveAward>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgOlineActiveAward> _parser = new pb::MessageParser<MsgOlineActiveAward>(() => new MsgOlineActiveAward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgOlineActiveAward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOlineActiveAward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOlineActiveAward(MsgOlineActiveAward other) : this() {
    itemId_ = other.itemId_;
    itemNum_ = other.itemNum_;
    type_ = other.type_;
    onlineIndex_ = other.onlineIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgOlineActiveAward Clone() {
    return new MsgOlineActiveAward(this);
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private int itemId_;
  /// <summary>
  ///奖励id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "item_num" field.</summary>
  public const int ItemNumFieldNumber = 2;
  private int itemNum_;
  /// <summary>
  ///奖励数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemNum {
    get { return itemNum_; }
    set {
      itemNum_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private int type_;
  /// <summary>
  ///奖励类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "online_index" field.</summary>
  public const int OnlineIndexFieldNumber = 4;
  private int onlineIndex_;
  /// <summary>
  ///奖励索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OnlineIndex {
    get { return onlineIndex_; }
    set {
      onlineIndex_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgOlineActiveAward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgOlineActiveAward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemNum != other.ItemNum) return false;
    if (Type != other.Type) return false;
    if (OnlineIndex != other.OnlineIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (OnlineIndex != 0) hash ^= OnlineIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ItemNum);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (OnlineIndex != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ItemNum);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (OnlineIndex != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(OnlineIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
    }
    if (ItemNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (OnlineIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgOlineActiveAward other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.ItemNum != 0) {
      ItemNum = other.ItemNum;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.OnlineIndex != 0) {
      OnlineIndex = other.OnlineIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineIndex = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
        case 32: {
          OnlineIndex = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///CDK使用兑换
/// </summary>
public sealed partial class MsgCDKExchange : pb::IMessage<MsgCDKExchange>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCDKExchange> _parser = new pb::MessageParser<MsgCDKExchange>(() => new MsgCDKExchange());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCDKExchange> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCDKExchange() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCDKExchange(MsgCDKExchange other) : this() {
    itemId_ = other.itemId_;
    itemNum_ = other.itemNum_;
    itemType_ = other.itemType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCDKExchange Clone() {
    return new MsgCDKExchange(this);
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private int itemId_;
  /// <summary>
  ///奖励道具id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "item_num" field.</summary>
  public const int ItemNumFieldNumber = 2;
  private int itemNum_;
  /// <summary>
  ///奖励道具数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemNum {
    get { return itemNum_; }
    set {
      itemNum_ = value;
    }
  }

  /// <summary>Field number for the "item_type" field.</summary>
  public const int ItemTypeFieldNumber = 3;
  private int itemType_;
  /// <summary>
  ///奖励道具类型：1金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemType {
    get { return itemType_; }
    set {
      itemType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCDKExchange);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCDKExchange other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemNum != other.ItemNum) return false;
    if (ItemType != other.ItemType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (ItemNum != 0) hash ^= ItemNum.GetHashCode();
    if (ItemType != 0) hash ^= ItemType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ItemNum);
    }
    if (ItemType != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ItemType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ItemId);
    }
    if (ItemNum != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ItemNum);
    }
    if (ItemType != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ItemType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
    }
    if (ItemNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemNum);
    }
    if (ItemType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCDKExchange other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.ItemNum != 0) {
      ItemNum = other.ItemNum;
    }
    if (other.ItemType != 0) {
      ItemType = other.ItemType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt32();
          break;
        }
        case 24: {
          ItemType = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ItemId = input.ReadInt32();
          break;
        }
        case 16: {
          ItemNum = input.ReadInt32();
          break;
        }
        case 24: {
          ItemType = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgCDKExchangeResp : pb::IMessage<MsgCDKExchangeResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgCDKExchangeResp> _parser = new pb::MessageParser<MsgCDKExchangeResp>(() => new MsgCDKExchangeResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgCDKExchangeResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCDKExchangeResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCDKExchangeResp(MsgCDKExchangeResp other) : this() {
    retCode_ = other.retCode_;
    info_ = other.info_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgCDKExchangeResp Clone() {
    return new MsgCDKExchangeResp(this);
  }

  /// <summary>Field number for the "ret_code" field.</summary>
  public const int RetCodeFieldNumber = 1;
  private int retCode_;
  /// <summary>
  ///返回多语言码：0成功
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RetCode {
    get { return retCode_; }
    set {
      retCode_ = value;
    }
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 2;
  private static readonly pb::FieldCodec<global::MsgCDKExchange> _repeated_info_codec
      = pb::FieldCodec.ForMessage(18, global::MsgCDKExchange.Parser);
  private readonly pbc::RepeatedField<global::MsgCDKExchange> info_ = new pbc::RepeatedField<global::MsgCDKExchange>();
  /// <summary>
  ///奖励列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgCDKExchange> Info {
    get { return info_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgCDKExchangeResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgCDKExchangeResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RetCode != other.RetCode) return false;
    if(!info_.Equals(other.info_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RetCode != 0) hash ^= RetCode.GetHashCode();
    hash ^= info_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RetCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetCode);
    }
    info_.WriteTo(output, _repeated_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RetCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RetCode);
    }
    info_.WriteTo(ref output, _repeated_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RetCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RetCode);
    }
    size += info_.CalculateSize(_repeated_info_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgCDKExchangeResp other) {
    if (other == null) {
      return;
    }
    if (other.RetCode != 0) {
      RetCode = other.RetCode;
    }
    info_.Add(other.info_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RetCode = input.ReadInt32();
          break;
        }
        case 18: {
          info_.AddEntriesFrom(input, _repeated_info_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RetCode = input.ReadInt32();
          break;
        }
        case 18: {
          info_.AddEntriesFrom(ref input, _repeated_info_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class MsgPersonalDetailsRespAdd : pb::IMessage<MsgPersonalDetailsRespAdd>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPersonalDetailsRespAdd> _parser = new pb::MessageParser<MsgPersonalDetailsRespAdd>(() => new MsgPersonalDetailsRespAdd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPersonalDetailsRespAdd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPersonalDetailsRespAdd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPersonalDetailsRespAdd(MsgPersonalDetailsRespAdd other) : this() {
    type_ = other.type_;
    msg_ = other.msg_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPersonalDetailsRespAdd Clone() {
    return new MsgPersonalDetailsRespAdd(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private int type_;
  /// <summary>
  ///信息类型 1:WhatsApp、2:telegram、3:facebook
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 2;
  private string msg_ = "";
  /// <summary>
  ///账号信息限长64字节
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Msg {
    get { return msg_; }
    set {
      msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPersonalDetailsRespAdd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPersonalDetailsRespAdd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Msg != other.Msg) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Msg.Length != 0) hash ^= Msg.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Msg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Type);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Msg);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (Msg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPersonalDetailsRespAdd other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Msg.Length != 0) {
      Msg = other.Msg;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 18: {
          Msg = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = input.ReadInt32();
          break;
        }
        case 18: {
          Msg = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邀请玩家信息
/// </summary>
public sealed partial class MsgInviteUserInfo : pb::IMessage<MsgInviteUserInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInviteUserInfo> _parser = new pb::MessageParser<MsgInviteUserInfo>(() => new MsgInviteUserInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInviteUserInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteUserInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteUserInfo(MsgInviteUserInfo other) : this() {
    vipLevel_ = other.vipLevel_;
    inviteTime_ = other.inviteTime_;
    beautifulId_ = other.beautifulId_;
    nickname_ = other.nickname_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteUserInfo Clone() {
    return new MsgInviteUserInfo(this);
  }

  /// <summary>Field number for the "vip_level" field.</summary>
  public const int VipLevelFieldNumber = 1;
  private int vipLevel_;
  /// <summary>
  ///vip等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int VipLevel {
    get { return vipLevel_; }
    set {
      vipLevel_ = value;
    }
  }

  /// <summary>Field number for the "invite_time" field.</summary>
  public const int InviteTimeFieldNumber = 2;
  private string inviteTime_ = "";
  /// <summary>
  ///邀请时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteTime {
    get { return inviteTime_; }
    set {
      inviteTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 3;
  private int beautifulId_;
  /// <summary>
  ///靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 4;
  private string nickname_ = "";
  /// <summary>
  ///昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInviteUserInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInviteUserInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (VipLevel != other.VipLevel) return false;
    if (InviteTime != other.InviteTime) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Nickname != other.Nickname) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
    if (InviteTime.Length != 0) hash ^= InviteTime.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (VipLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(VipLevel);
    }
    if (InviteTime.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(InviteTime);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Nickname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (VipLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(VipLevel);
    }
    if (InviteTime.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(InviteTime);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Nickname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (VipLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
    }
    if (InviteTime.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteTime);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInviteUserInfo other) {
    if (other == null) {
      return;
    }
    if (other.VipLevel != 0) {
      VipLevel = other.VipLevel;
    }
    if (other.InviteTime.Length != 0) {
      InviteTime = other.InviteTime;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 18: {
          InviteTime = input.ReadString();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Nickname = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          VipLevel = input.ReadInt32();
          break;
        }
        case 18: {
          InviteTime = input.ReadString();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Nickname = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///邀请玩家信息
/// </summary>
public sealed partial class MsgInviteUserResp : pb::IMessage<MsgInviteUserResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInviteUserResp> _parser = new pb::MessageParser<MsgInviteUserResp>(() => new MsgInviteUserResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInviteUserResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteUserResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteUserResp(MsgInviteUserResp other) : this() {
    info_ = other.info_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInviteUserResp Clone() {
    return new MsgInviteUserResp(this);
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 1;
  private static readonly pb::FieldCodec<global::MsgInviteUserInfo> _repeated_info_codec
      = pb::FieldCodec.ForMessage(10, global::MsgInviteUserInfo.Parser);
  private readonly pbc::RepeatedField<global::MsgInviteUserInfo> info_ = new pbc::RepeatedField<global::MsgInviteUserInfo>();
  /// <summary>
  ///邀请玩家列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgInviteUserInfo> Info {
    get { return info_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInviteUserResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInviteUserResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!info_.Equals(other.info_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= info_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    info_.WriteTo(output, _repeated_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    info_.WriteTo(ref output, _repeated_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += info_.CalculateSize(_repeated_info_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInviteUserResp other) {
    if (other == null) {
      return;
    }
    info_.Add(other.info_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          info_.AddEntriesFrom(input, _repeated_info_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          info_.AddEntriesFrom(ref input, _repeated_info_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///网红金币
/// </summary>
public sealed partial class MsgQueryCelebrityGoldCoinResp : pb::IMessage<MsgQueryCelebrityGoldCoinResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgQueryCelebrityGoldCoinResp> _parser = new pb::MessageParser<MsgQueryCelebrityGoldCoinResp>(() => new MsgQueryCelebrityGoldCoinResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgQueryCelebrityGoldCoinResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryCelebrityGoldCoinResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryCelebrityGoldCoinResp(MsgQueryCelebrityGoldCoinResp other) : this() {
    avatar_ = other.avatar_;
    avatarFrame_ = other.avatarFrame_;
    nickname_ = other.nickname_;
    goldCoin_ = other.goldCoin_;
    state_ = other.state_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryCelebrityGoldCoinResp Clone() {
    return new MsgQueryCelebrityGoldCoinResp(this);
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 1;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar_frame" field.</summary>
  public const int AvatarFrameFieldNumber = 2;
  private int avatarFrame_;
  /// <summary>
  ///头像框
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AvatarFrame {
    get { return avatarFrame_; }
    set {
      avatarFrame_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 3;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gold_coin" field.</summary>
  public const int GoldCoinFieldNumber = 4;
  private long goldCoin_;
  /// <summary>
  ///赠送金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long GoldCoin {
    get { return goldCoin_; }
    set {
      goldCoin_ = value;
    }
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 5;
  private bool state_;
  /// <summary>
  ///领取状态0：未领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgQueryCelebrityGoldCoinResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgQueryCelebrityGoldCoinResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Avatar != other.Avatar) return false;
    if (AvatarFrame != other.AvatarFrame) return false;
    if (Nickname != other.Nickname) return false;
    if (GoldCoin != other.GoldCoin) return false;
    if (State != other.State) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (AvatarFrame != 0) hash ^= AvatarFrame.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (GoldCoin != 0L) hash ^= GoldCoin.GetHashCode();
    if (State != false) hash ^= State.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Avatar.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Avatar);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AvatarFrame);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (GoldCoin != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(GoldCoin);
    }
    if (State != false) {
      output.WriteRawTag(40);
      output.WriteBool(State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Avatar.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Avatar);
    }
    if (AvatarFrame != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AvatarFrame);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (GoldCoin != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(GoldCoin);
    }
    if (State != false) {
      output.WriteRawTag(40);
      output.WriteBool(State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (AvatarFrame != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvatarFrame);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (GoldCoin != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(GoldCoin);
    }
    if (State != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgQueryCelebrityGoldCoinResp other) {
    if (other == null) {
      return;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.AvatarFrame != 0) {
      AvatarFrame = other.AvatarFrame;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.GoldCoin != 0L) {
      GoldCoin = other.GoldCoin;
    }
    if (other.State != false) {
      State = other.State;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Avatar = input.ReadString();
          break;
        }
        case 16: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 32: {
          GoldCoin = input.ReadInt64();
          break;
        }
        case 40: {
          State = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Avatar = input.ReadString();
          break;
        }
        case 16: {
          AvatarFrame = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 32: {
          GoldCoin = input.ReadInt64();
          break;
        }
        case 40: {
          State = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// 请求代理数据返回
/// </summary>
public sealed partial class MsgInfiniteAgentQueryMyInfoResp : pb::IMessage<MsgInfiniteAgentQueryMyInfoResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInfiniteAgentQueryMyInfoResp> _parser = new pb::MessageParser<MsgInfiniteAgentQueryMyInfoResp>(() => new MsgInfiniteAgentQueryMyInfoResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInfiniteAgentQueryMyInfoResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQueryMyInfoResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQueryMyInfoResp(MsgInfiniteAgentQueryMyInfoResp other) : this() {
    agentLevel_ = other.agentLevel_;
    agentRatio_ = other.agentRatio_;
    bindId_ = other.bindId_;
    curRebate_ = other.curRebate_;
    totalRebate_ = other.totalRebate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQueryMyInfoResp Clone() {
    return new MsgInfiniteAgentQueryMyInfoResp(this);
  }

  /// <summary>Field number for the "agent_level" field.</summary>
  public const int AgentLevelFieldNumber = 1;
  private int agentLevel_;
  /// <summary>
  ///代理等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentLevel {
    get { return agentLevel_; }
    set {
      agentLevel_ = value;
    }
  }

  /// <summary>Field number for the "agent_ratio" field.</summary>
  public const int AgentRatioFieldNumber = 2;
  private int agentRatio_;
  /// <summary>
  ///分成比例
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentRatio {
    get { return agentRatio_; }
    set {
      agentRatio_ = value;
    }
  }

  /// <summary>Field number for the "bind_id" field.</summary>
  public const int BindIdFieldNumber = 3;
  private int bindId_;
  /// <summary>
  ///上级id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BindId {
    get { return bindId_; }
    set {
      bindId_ = value;
    }
  }

  /// <summary>Field number for the "cur_rebate" field.</summary>
  public const int CurRebateFieldNumber = 4;
  private long curRebate_;
  /// <summary>
  ///当前返利
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CurRebate {
    get { return curRebate_; }
    set {
      curRebate_ = value;
    }
  }

  /// <summary>Field number for the "total_rebate" field.</summary>
  public const int TotalRebateFieldNumber = 5;
  private long totalRebate_;
  /// <summary>
  ///总返利
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TotalRebate {
    get { return totalRebate_; }
    set {
      totalRebate_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInfiniteAgentQueryMyInfoResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInfiniteAgentQueryMyInfoResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AgentLevel != other.AgentLevel) return false;
    if (AgentRatio != other.AgentRatio) return false;
    if (BindId != other.BindId) return false;
    if (CurRebate != other.CurRebate) return false;
    if (TotalRebate != other.TotalRebate) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AgentLevel != 0) hash ^= AgentLevel.GetHashCode();
    if (AgentRatio != 0) hash ^= AgentRatio.GetHashCode();
    if (BindId != 0) hash ^= BindId.GetHashCode();
    if (CurRebate != 0L) hash ^= CurRebate.GetHashCode();
    if (TotalRebate != 0L) hash ^= TotalRebate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (AgentLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AgentLevel);
    }
    if (AgentRatio != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AgentRatio);
    }
    if (BindId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BindId);
    }
    if (CurRebate != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(CurRebate);
    }
    if (TotalRebate != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(TotalRebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (AgentLevel != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AgentLevel);
    }
    if (AgentRatio != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AgentRatio);
    }
    if (BindId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BindId);
    }
    if (CurRebate != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(CurRebate);
    }
    if (TotalRebate != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(TotalRebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AgentLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentLevel);
    }
    if (AgentRatio != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentRatio);
    }
    if (BindId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BindId);
    }
    if (CurRebate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurRebate);
    }
    if (TotalRebate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalRebate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInfiniteAgentQueryMyInfoResp other) {
    if (other == null) {
      return;
    }
    if (other.AgentLevel != 0) {
      AgentLevel = other.AgentLevel;
    }
    if (other.AgentRatio != 0) {
      AgentRatio = other.AgentRatio;
    }
    if (other.BindId != 0) {
      BindId = other.BindId;
    }
    if (other.CurRebate != 0L) {
      CurRebate = other.CurRebate;
    }
    if (other.TotalRebate != 0L) {
      TotalRebate = other.TotalRebate;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AgentLevel = input.ReadInt32();
          break;
        }
        case 16: {
          AgentRatio = input.ReadInt32();
          break;
        }
        case 24: {
          BindId = input.ReadInt32();
          break;
        }
        case 32: {
          CurRebate = input.ReadInt64();
          break;
        }
        case 40: {
          TotalRebate = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AgentLevel = input.ReadInt32();
          break;
        }
        case 16: {
          AgentRatio = input.ReadInt32();
          break;
        }
        case 24: {
          BindId = input.ReadInt32();
          break;
        }
        case 32: {
          CurRebate = input.ReadInt64();
          break;
        }
        case 40: {
          TotalRebate = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///请求下级数据
/// </summary>
public sealed partial class MsgInfiniteAgentQuerySubInfo : pb::IMessage<MsgInfiniteAgentQuerySubInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInfiniteAgentQuerySubInfo> _parser = new pb::MessageParser<MsgInfiniteAgentQuerySubInfo>(() => new MsgInfiniteAgentQuerySubInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInfiniteAgentQuerySubInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQuerySubInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQuerySubInfo(MsgInfiniteAgentQuerySubInfo other) : this() {
    userId_ = other.userId_;
    currentPage_ = other.currentPage_;
    maxRow_ = other.maxRow_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQuerySubInfo Clone() {
    return new MsgInfiniteAgentQuerySubInfo(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///userid
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "current_page" field.</summary>
  public const int CurrentPageFieldNumber = 2;
  private int currentPage_;
  /// <summary>
  ///当前页
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurrentPage {
    get { return currentPage_; }
    set {
      currentPage_ = value;
    }
  }

  /// <summary>Field number for the "max_row" field.</summary>
  public const int MaxRowFieldNumber = 3;
  private int maxRow_;
  /// <summary>
  ///每页最大行数  最大50，超了改数据库
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxRow {
    get { return maxRow_; }
    set {
      maxRow_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInfiniteAgentQuerySubInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInfiniteAgentQuerySubInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CurrentPage != other.CurrentPage) return false;
    if (MaxRow != other.MaxRow) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (CurrentPage != 0) hash ^= CurrentPage.GetHashCode();
    if (MaxRow != 0) hash ^= MaxRow.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (CurrentPage != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CurrentPage);
    }
    if (MaxRow != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(MaxRow);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (CurrentPage != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(CurrentPage);
    }
    if (MaxRow != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(MaxRow);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (CurrentPage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPage);
    }
    if (MaxRow != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRow);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInfiniteAgentQuerySubInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.CurrentPage != 0) {
      CurrentPage = other.CurrentPage;
    }
    if (other.MaxRow != 0) {
      MaxRow = other.MaxRow;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          CurrentPage = input.ReadInt32();
          break;
        }
        case 24: {
          MaxRow = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          CurrentPage = input.ReadInt32();
          break;
        }
        case 24: {
          MaxRow = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///请下级数据	                    
/// </summary>
public sealed partial class InfiniteAgentQuerySubInfo : pb::IMessage<InfiniteAgentQuerySubInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfiniteAgentQuerySubInfo> _parser = new pb::MessageParser<InfiniteAgentQuerySubInfo>(() => new InfiniteAgentQuerySubInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfiniteAgentQuerySubInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfiniteAgentQuerySubInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfiniteAgentQuerySubInfo(InfiniteAgentQuerySubInfo other) : this() {
    userId_ = other.userId_;
    subordinates_ = other.subordinates_;
    totalTax_ = other.totalTax_;
    todayTax_ = other.todayTax_;
    agentRatio_ = other.agentRatio_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfiniteAgentQuerySubInfo Clone() {
    return new InfiniteAgentQuerySubInfo(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///下级userid
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "subordinates" field.</summary>
  public const int SubordinatesFieldNumber = 2;
  private int subordinates_;
  /// <summary>
  ///当前id下级人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Subordinates {
    get { return subordinates_; }
    set {
      subordinates_ = value;
    }
  }

  /// <summary>Field number for the "total_tax" field.</summary>
  public const int TotalTaxFieldNumber = 3;
  private long totalTax_;
  /// <summary>
  ///总税收
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TotalTax {
    get { return totalTax_; }
    set {
      totalTax_ = value;
    }
  }

  /// <summary>Field number for the "today_tax" field.</summary>
  public const int TodayTaxFieldNumber = 4;
  private long todayTax_;
  /// <summary>
  ///今日税收
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TodayTax {
    get { return todayTax_; }
    set {
      todayTax_ = value;
    }
  }

  /// <summary>Field number for the "agent_ratio" field.</summary>
  public const int AgentRatioFieldNumber = 5;
  private int agentRatio_;
  /// <summary>
  ///分成比例
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentRatio {
    get { return agentRatio_; }
    set {
      agentRatio_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfiniteAgentQuerySubInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfiniteAgentQuerySubInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Subordinates != other.Subordinates) return false;
    if (TotalTax != other.TotalTax) return false;
    if (TodayTax != other.TodayTax) return false;
    if (AgentRatio != other.AgentRatio) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (Subordinates != 0) hash ^= Subordinates.GetHashCode();
    if (TotalTax != 0L) hash ^= TotalTax.GetHashCode();
    if (TodayTax != 0L) hash ^= TodayTax.GetHashCode();
    if (AgentRatio != 0) hash ^= AgentRatio.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Subordinates != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Subordinates);
    }
    if (TotalTax != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TotalTax);
    }
    if (TodayTax != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(TodayTax);
    }
    if (AgentRatio != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(AgentRatio);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Subordinates != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Subordinates);
    }
    if (TotalTax != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(TotalTax);
    }
    if (TodayTax != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(TodayTax);
    }
    if (AgentRatio != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(AgentRatio);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (Subordinates != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Subordinates);
    }
    if (TotalTax != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalTax);
    }
    if (TodayTax != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TodayTax);
    }
    if (AgentRatio != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentRatio);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfiniteAgentQuerySubInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.Subordinates != 0) {
      Subordinates = other.Subordinates;
    }
    if (other.TotalTax != 0L) {
      TotalTax = other.TotalTax;
    }
    if (other.TodayTax != 0L) {
      TodayTax = other.TodayTax;
    }
    if (other.AgentRatio != 0) {
      AgentRatio = other.AgentRatio;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          Subordinates = input.ReadInt32();
          break;
        }
        case 24: {
          TotalTax = input.ReadInt64();
          break;
        }
        case 32: {
          TodayTax = input.ReadInt64();
          break;
        }
        case 40: {
          AgentRatio = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          Subordinates = input.ReadInt32();
          break;
        }
        case 24: {
          TotalTax = input.ReadInt64();
          break;
        }
        case 32: {
          TodayTax = input.ReadInt64();
          break;
        }
        case 40: {
          AgentRatio = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///请求下级数据返回
/// </summary>
public sealed partial class MsgInfiniteAgentQuerySubInfoResp : pb::IMessage<MsgInfiniteAgentQuerySubInfoResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgInfiniteAgentQuerySubInfoResp> _parser = new pb::MessageParser<MsgInfiniteAgentQuerySubInfoResp>(() => new MsgInfiniteAgentQuerySubInfoResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgInfiniteAgentQuerySubInfoResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQuerySubInfoResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQuerySubInfoResp(MsgInfiniteAgentQuerySubInfoResp other) : this() {
    agentCount_ = other.agentCount_;
    endList_ = other.endList_;
    info_ = other.info_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgInfiniteAgentQuerySubInfoResp Clone() {
    return new MsgInfiniteAgentQuerySubInfoResp(this);
  }

  /// <summary>Field number for the "agent_count" field.</summary>
  public const int AgentCountFieldNumber = 1;
  private int agentCount_;
  /// <summary>
  ///代理数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentCount {
    get { return agentCount_; }
    set {
      agentCount_ = value;
    }
  }

  /// <summary>Field number for the "end_list" field.</summary>
  public const int EndListFieldNumber = 2;
  private bool endList_;
  /// <summary>
  ///结束
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool EndList {
    get { return endList_; }
    set {
      endList_ = value;
    }
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 3;
  private static readonly pb::FieldCodec<global::InfiniteAgentQuerySubInfo> _repeated_info_codec
      = pb::FieldCodec.ForMessage(26, global::InfiniteAgentQuerySubInfo.Parser);
  private readonly pbc::RepeatedField<global::InfiniteAgentQuerySubInfo> info_ = new pbc::RepeatedField<global::InfiniteAgentQuerySubInfo>();
  /// <summary>
  ///代理总数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfiniteAgentQuerySubInfo> Info {
    get { return info_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgInfiniteAgentQuerySubInfoResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgInfiniteAgentQuerySubInfoResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AgentCount != other.AgentCount) return false;
    if (EndList != other.EndList) return false;
    if(!info_.Equals(other.info_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (AgentCount != 0) hash ^= AgentCount.GetHashCode();
    if (EndList != false) hash ^= EndList.GetHashCode();
    hash ^= info_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (AgentCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AgentCount);
    }
    if (EndList != false) {
      output.WriteRawTag(16);
      output.WriteBool(EndList);
    }
    info_.WriteTo(output, _repeated_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (AgentCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(AgentCount);
    }
    if (EndList != false) {
      output.WriteRawTag(16);
      output.WriteBool(EndList);
    }
    info_.WriteTo(ref output, _repeated_info_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (AgentCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentCount);
    }
    if (EndList != false) {
      size += 1 + 1;
    }
    size += info_.CalculateSize(_repeated_info_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgInfiniteAgentQuerySubInfoResp other) {
    if (other == null) {
      return;
    }
    if (other.AgentCount != 0) {
      AgentCount = other.AgentCount;
    }
    if (other.EndList != false) {
      EndList = other.EndList;
    }
    info_.Add(other.info_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AgentCount = input.ReadInt32();
          break;
        }
        case 16: {
          EndList = input.ReadBool();
          break;
        }
        case 26: {
          info_.AddEntriesFrom(input, _repeated_info_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AgentCount = input.ReadInt32();
          break;
        }
        case 16: {
          EndList = input.ReadBool();
          break;
        }
        case 26: {
          info_.AddEntriesFrom(ref input, _repeated_info_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///设置下级代理
/// </summary>
public sealed partial class MsgSetSubAgent : pb::IMessage<MsgSetSubAgent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgSetSubAgent> _parser = new pb::MessageParser<MsgSetSubAgent>(() => new MsgSetSubAgent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgSetSubAgent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSetSubAgent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSetSubAgent(MsgSetSubAgent other) : this() {
    userId_ = other.userId_;
    agentRatio_ = other.agentRatio_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSetSubAgent Clone() {
    return new MsgSetSubAgent(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "agent_ratio" field.</summary>
  public const int AgentRatioFieldNumber = 2;
  private int agentRatio_;
  /// <summary>
  ///分成比例
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int AgentRatio {
    get { return agentRatio_; }
    set {
      agentRatio_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgSetSubAgent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgSetSubAgent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (AgentRatio != other.AgentRatio) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (AgentRatio != 0) hash ^= AgentRatio.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (AgentRatio != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AgentRatio);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (AgentRatio != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(AgentRatio);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (AgentRatio != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgentRatio);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgSetSubAgent other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.AgentRatio != 0) {
      AgentRatio = other.AgentRatio;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          AgentRatio = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          AgentRatio = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///设置下级代理返回
/// </summary>
public sealed partial class MsgSetSubAgentResp : pb::IMessage<MsgSetSubAgentResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgSetSubAgentResp> _parser = new pb::MessageParser<MsgSetSubAgentResp>(() => new MsgSetSubAgentResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgSetSubAgentResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSetSubAgentResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSetSubAgentResp(MsgSetSubAgentResp other) : this() {
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSetSubAgentResp Clone() {
    return new MsgSetSubAgentResp(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private int code_;
  /// <summary>
  ///0：成功，非0 多语言码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgSetSubAgentResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgSetSubAgentResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgSetSubAgentResp other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///领取返利返回
/// </summary>
public sealed partial class MsgAgentRecviveResp : pb::IMessage<MsgAgentRecviveResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgAgentRecviveResp> _parser = new pb::MessageParser<MsgAgentRecviveResp>(() => new MsgAgentRecviveResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgAgentRecviveResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgAgentRecviveResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgAgentRecviveResp(MsgAgentRecviveResp other) : this() {
    code_ = other.code_;
    curRebate_ = other.curRebate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgAgentRecviveResp Clone() {
    return new MsgAgentRecviveResp(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private int code_;
  /// <summary>
  ///0：成功，非0 多语言码	
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "cur_rebate" field.</summary>
  public const int CurRebateFieldNumber = 2;
  private long curRebate_;
  /// <summary>
  ///当前返利
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long CurRebate {
    get { return curRebate_; }
    set {
      curRebate_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgAgentRecviveResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgAgentRecviveResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (CurRebate != other.CurRebate) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    if (CurRebate != 0L) hash ^= CurRebate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (CurRebate != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(CurRebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (CurRebate != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(CurRebate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (CurRebate != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurRebate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgAgentRecviveResp other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.CurRebate != 0L) {
      CurRebate = other.CurRebate;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 16: {
          CurRebate = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 16: {
          CurRebate = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
