// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/Login/Login.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Proto/Login/Login.proto</summary>
public static partial class LoginReflection {

  #region Descriptor
  /// <summary>File descriptor for Proto/Login/Login.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LoginReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChdQcm90by9Mb2dpbi9Mb2dpbi5wcm90byL8AQoOTXNnUGxheWVyTG9naW4S",
          "DwoHYWNjb3VudBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRITCgtwbGF0Zm9y",
          "bV9pZBgDIAEoBRISCgpjaGFubmVsX2lkGAQgASgFEhMKC2NsaWVudF90eXBl",
          "GAUgASgFEhIKCmxvZ2luX3R5cGUYBiABKAUSEwoLbWFjaGluZV9udW0YByAB",
          "KAkSDwoHdXNlcl9pcBgIIAEoCRIQCghpc19kcmFpbhgJIAEoCBIOCgZhdmF0",
          "YXIYCiABKAkSEAoIbmlja25hbWUYCyABKAkSDQoFcGhvbmUYDCABKAkSDAoE",
          "Y29kZRgNIAEoBSLeAQoSTXNnUGxheWVyTG9naW5SZXNwEhAKCHJlc19jb2Rl",
          "GAEgASgFEg8KB3VzZXJfaWQYAiABKAUSFAoMYmVhdXRpZnVsX2lkGAMgASgF",
          "Eg8KB2FjY291bnQYBCABKAkSEAoIbmlja25hbWUYBSABKAkSDgoGYXZhdGFy",
          "GAYgASgJEhYKDmZpcnN0X3JlY2hhcmdlGAcgASgIEhEKCXVzZXJfdHlwZRgI",
          "IAEoBRIQCghpc19kcmFpbhgJIAEoCBIMCgRjb2luGAogASgEEhEKCXBob25l",
          "X251bRgLIAEoCSI/ChFNc2dNb2RpZnlQYXNzd29yZBIUCgxvbGRfcGFzc3dv",
          "cmQYASABKAkSFAoMbmV3X3Bhc3N3b3JkGAIgASgJIkEKDE1zZ0JpbmRQaG9u",
          "ZRIMCgRjb2RlGAEgASgFEhEKCXBob25lX251bRgCIAEoCRIQCghwYXNzd29y",
          "ZBgDIAEoCWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerLogin), global::MsgPlayerLogin.Parser, new[]{ "Account", "Password", "PlatformId", "ChannelId", "ClientType", "LoginType", "MachineNum", "UserIp", "IsDrain", "Avatar", "Nickname", "Phone", "Code" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgPlayerLoginResp), global::MsgPlayerLoginResp.Parser, new[]{ "ResCode", "UserId", "BeautifulId", "Account", "Nickname", "Avatar", "FirstRecharge", "UserType", "IsDrain", "Coin", "PhoneNum" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgModifyPassword), global::MsgModifyPassword.Parser, new[]{ "OldPassword", "NewPassword" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgBindPhone), global::MsgBindPhone.Parser, new[]{ "Code", "PhoneNum", "Password" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///玩家登录
/// </summary>
public sealed partial class MsgPlayerLogin : pb::IMessage<MsgPlayerLogin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerLogin> _parser = new pb::MessageParser<MsgPlayerLogin>(() => new MsgPlayerLogin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin(MsgPlayerLogin other) : this() {
    account_ = other.account_;
    password_ = other.password_;
    platformId_ = other.platformId_;
    channelId_ = other.channelId_;
    clientType_ = other.clientType_;
    loginType_ = other.loginType_;
    machineNum_ = other.machineNum_;
    userIp_ = other.userIp_;
    isDrain_ = other.isDrain_;
    avatar_ = other.avatar_;
    nickname_ = other.nickname_;
    phone_ = other.phone_;
    code_ = other.code_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLogin Clone() {
    return new MsgPlayerLogin(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private string account_ = "";
  /// <summary>
  ///玩家账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  /// <summary>
  ///玩家密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "platform_id" field.</summary>
  public const int PlatformIdFieldNumber = 3;
  private int platformId_;
  /// <summary>
  ///平台id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PlatformId {
    get { return platformId_; }
    set {
      platformId_ = value;
    }
  }

  /// <summary>Field number for the "channel_id" field.</summary>
  public const int ChannelIdFieldNumber = 4;
  private int channelId_;
  /// <summary>
  ///渠道id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChannelId {
    get { return channelId_; }
    set {
      channelId_ = value;
    }
  }

  /// <summary>Field number for the "client_type" field.</summary>
  public const int ClientTypeFieldNumber = 5;
  private int clientType_;
  /// <summary>
  ///包id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ClientType {
    get { return clientType_; }
    set {
      clientType_ = value;
    }
  }

  /// <summary>Field number for the "login_type" field.</summary>
  public const int LoginTypeFieldNumber = 6;
  private int loginType_;
  /// <summary>
  ///1:游客登录 2:账号登录 3:第三方登录 4:注册账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LoginType {
    get { return loginType_; }
    set {
      loginType_ = value;
    }
  }

  /// <summary>Field number for the "machine_num" field.</summary>
  public const int MachineNumFieldNumber = 7;
  private string machineNum_ = "";
  /// <summary>
  ///机器码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string MachineNum {
    get { return machineNum_; }
    set {
      machineNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "user_ip" field.</summary>
  public const int UserIpFieldNumber = 8;
  private string userIp_ = "";
  /// <summary>
  ///玩家IP
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserIp {
    get { return userIp_; }
    set {
      userIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_drain" field.</summary>
  public const int IsDrainFieldNumber = 9;
  private bool isDrain_;
  /// <summary>
  ///是否引流量 0:不是 1:是
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsDrain {
    get { return isDrain_; }
    set {
      isDrain_ = value;
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 10;
  private string avatar_ = "";
  /// <summary>
  ///头像(第三方登录时需要)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 11;
  private string nickname_ = "";
  /// <summary>
  ///昵称(第三方登录时需要)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "phone" field.</summary>
  public const int PhoneFieldNumber = 12;
  private string phone_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Phone {
    get { return phone_; }
    set {
      phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 13;
  private int code_;
  /// <summary>
  ///验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (Password != other.Password) return false;
    if (PlatformId != other.PlatformId) return false;
    if (ChannelId != other.ChannelId) return false;
    if (ClientType != other.ClientType) return false;
    if (LoginType != other.LoginType) return false;
    if (MachineNum != other.MachineNum) return false;
    if (UserIp != other.UserIp) return false;
    if (IsDrain != other.IsDrain) return false;
    if (Avatar != other.Avatar) return false;
    if (Nickname != other.Nickname) return false;
    if (Phone != other.Phone) return false;
    if (Code != other.Code) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (PlatformId != 0) hash ^= PlatformId.GetHashCode();
    if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
    if (ClientType != 0) hash ^= ClientType.GetHashCode();
    if (LoginType != 0) hash ^= LoginType.GetHashCode();
    if (MachineNum.Length != 0) hash ^= MachineNum.GetHashCode();
    if (UserIp.Length != 0) hash ^= UserIp.GetHashCode();
    if (IsDrain != false) hash ^= IsDrain.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Phone.Length != 0) hash ^= Phone.GetHashCode();
    if (Code != 0) hash ^= Code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (PlatformId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PlatformId);
    }
    if (ChannelId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ChannelId);
    }
    if (ClientType != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientType);
    }
    if (LoginType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LoginType);
    }
    if (MachineNum.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(MachineNum);
    }
    if (UserIp.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(UserIp);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Avatar);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Nickname);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (PlatformId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(PlatformId);
    }
    if (ChannelId != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(ChannelId);
    }
    if (ClientType != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientType);
    }
    if (LoginType != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(LoginType);
    }
    if (MachineNum.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(MachineNum);
    }
    if (UserIp.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(UserIp);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(82);
      output.WriteString(Avatar);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(Nickname);
    }
    if (Phone.Length != 0) {
      output.WriteRawTag(98);
      output.WriteString(Phone);
    }
    if (Code != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(Code);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (PlatformId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlatformId);
    }
    if (ChannelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChannelId);
    }
    if (ClientType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientType);
    }
    if (LoginType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoginType);
    }
    if (MachineNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineNum);
    }
    if (UserIp.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIp);
    }
    if (IsDrain != false) {
      size += 1 + 1;
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Phone.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
    }
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerLogin other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.PlatformId != 0) {
      PlatformId = other.PlatformId;
    }
    if (other.ChannelId != 0) {
      ChannelId = other.ChannelId;
    }
    if (other.ClientType != 0) {
      ClientType = other.ClientType;
    }
    if (other.LoginType != 0) {
      LoginType = other.LoginType;
    }
    if (other.MachineNum.Length != 0) {
      MachineNum = other.MachineNum;
    }
    if (other.UserIp.Length != 0) {
      UserIp = other.UserIp;
    }
    if (other.IsDrain != false) {
      IsDrain = other.IsDrain;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Phone.Length != 0) {
      Phone = other.Phone;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 24: {
          PlatformId = input.ReadInt32();
          break;
        }
        case 32: {
          ChannelId = input.ReadInt32();
          break;
        }
        case 40: {
          ClientType = input.ReadInt32();
          break;
        }
        case 48: {
          LoginType = input.ReadInt32();
          break;
        }
        case 58: {
          MachineNum = input.ReadString();
          break;
        }
        case 66: {
          UserIp = input.ReadString();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 82: {
          Avatar = input.ReadString();
          break;
        }
        case 90: {
          Nickname = input.ReadString();
          break;
        }
        case 98: {
          Phone = input.ReadString();
          break;
        }
        case 104: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 24: {
          PlatformId = input.ReadInt32();
          break;
        }
        case 32: {
          ChannelId = input.ReadInt32();
          break;
        }
        case 40: {
          ClientType = input.ReadInt32();
          break;
        }
        case 48: {
          LoginType = input.ReadInt32();
          break;
        }
        case 58: {
          MachineNum = input.ReadString();
          break;
        }
        case 66: {
          UserIp = input.ReadString();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 82: {
          Avatar = input.ReadString();
          break;
        }
        case 90: {
          Nickname = input.ReadString();
          break;
        }
        case 98: {
          Phone = input.ReadString();
          break;
        }
        case 104: {
          Code = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///玩家登录返回
/// </summary>
public sealed partial class MsgPlayerLoginResp : pb::IMessage<MsgPlayerLoginResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgPlayerLoginResp> _parser = new pb::MessageParser<MsgPlayerLoginResp>(() => new MsgPlayerLoginResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgPlayerLoginResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp(MsgPlayerLoginResp other) : this() {
    resCode_ = other.resCode_;
    userId_ = other.userId_;
    beautifulId_ = other.beautifulId_;
    account_ = other.account_;
    nickname_ = other.nickname_;
    avatar_ = other.avatar_;
    firstRecharge_ = other.firstRecharge_;
    userType_ = other.userType_;
    isDrain_ = other.isDrain_;
    coin_ = other.coin_;
    phoneNum_ = other.phoneNum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgPlayerLoginResp Clone() {
    return new MsgPlayerLoginResp(this);
  }

  /// <summary>Field number for the "res_code" field.</summary>
  public const int ResCodeFieldNumber = 1;
  private int resCode_;
  /// <summary>
  ///登录返回码(0:成功 非0:失败)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResCode {
    get { return resCode_; }
    set {
      resCode_ = value;
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 3;
  private int beautifulId_;
  /// <summary>
  ///玩家靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 4;
  private string account_ = "";
  /// <summary>
  ///玩家账号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 5;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 6;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "first_recharge" field.</summary>
  public const int FirstRechargeFieldNumber = 7;
  private bool firstRecharge_;
  /// <summary>
  ///是否首充
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool FirstRecharge {
    get { return firstRecharge_; }
    set {
      firstRecharge_ = value;
    }
  }

  /// <summary>Field number for the "user_type" field.</summary>
  public const int UserTypeFieldNumber = 8;
  private int userType_;
  /// <summary>
  ///玩家类型(0:普通玩家 1:VIP)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserType {
    get { return userType_; }
    set {
      userType_ = value;
    }
  }

  /// <summary>Field number for the "is_drain" field.</summary>
  public const int IsDrainFieldNumber = 9;
  private bool isDrain_;
  /// <summary>
  ///是否引流量 0:不是 1:是
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsDrain {
    get { return isDrain_; }
    set {
      isDrain_ = value;
    }
  }

  /// <summary>Field number for the "coin" field.</summary>
  public const int CoinFieldNumber = 10;
  private ulong coin_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Coin {
    get { return coin_; }
    set {
      coin_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 11;
  private string phoneNum_ = "";
  /// <summary>
  ///手机号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgPlayerLoginResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgPlayerLoginResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResCode != other.ResCode) return false;
    if (UserId != other.UserId) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Account != other.Account) return false;
    if (Nickname != other.Nickname) return false;
    if (Avatar != other.Avatar) return false;
    if (FirstRecharge != other.FirstRecharge) return false;
    if (UserType != other.UserType) return false;
    if (IsDrain != other.IsDrain) return false;
    if (Coin != other.Coin) return false;
    if (PhoneNum != other.PhoneNum) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ResCode != 0) hash ^= ResCode.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (FirstRecharge != false) hash ^= FirstRecharge.GetHashCode();
    if (UserType != 0) hash ^= UserType.GetHashCode();
    if (IsDrain != false) hash ^= IsDrain.GetHashCode();
    if (Coin != 0UL) hash ^= Coin.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Account.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Account);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Avatar);
    }
    if (FirstRecharge != false) {
      output.WriteRawTag(56);
      output.WriteBool(FirstRecharge);
    }
    if (UserType != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(UserType);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(PhoneNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Account.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Account);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(Avatar);
    }
    if (FirstRecharge != false) {
      output.WriteRawTag(56);
      output.WriteBool(FirstRecharge);
    }
    if (UserType != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(UserType);
    }
    if (IsDrain != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDrain);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(Coin);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(90);
      output.WriteString(PhoneNum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ResCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResCode);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (FirstRecharge != false) {
      size += 1 + 1;
    }
    if (UserType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserType);
    }
    if (IsDrain != false) {
      size += 1 + 1;
    }
    if (Coin != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Coin);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgPlayerLoginResp other) {
    if (other == null) {
      return;
    }
    if (other.ResCode != 0) {
      ResCode = other.ResCode;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.FirstRecharge != false) {
      FirstRecharge = other.FirstRecharge;
    }
    if (other.UserType != 0) {
      UserType = other.UserType;
    }
    if (other.IsDrain != false) {
      IsDrain = other.IsDrain;
    }
    if (other.Coin != 0UL) {
      Coin = other.Coin;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Account = input.ReadString();
          break;
        }
        case 42: {
          Nickname = input.ReadString();
          break;
        }
        case 50: {
          Avatar = input.ReadString();
          break;
        }
        case 56: {
          FirstRecharge = input.ReadBool();
          break;
        }
        case 64: {
          UserType = input.ReadInt32();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 80: {
          Coin = input.ReadUInt64();
          break;
        }
        case 90: {
          PhoneNum = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Account = input.ReadString();
          break;
        }
        case 42: {
          Nickname = input.ReadString();
          break;
        }
        case 50: {
          Avatar = input.ReadString();
          break;
        }
        case 56: {
          FirstRecharge = input.ReadBool();
          break;
        }
        case 64: {
          UserType = input.ReadInt32();
          break;
        }
        case 72: {
          IsDrain = input.ReadBool();
          break;
        }
        case 80: {
          Coin = input.ReadUInt64();
          break;
        }
        case 90: {
          PhoneNum = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///修改密码
/// </summary>
public sealed partial class MsgModifyPassword : pb::IMessage<MsgModifyPassword>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgModifyPassword> _parser = new pb::MessageParser<MsgModifyPassword>(() => new MsgModifyPassword());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgModifyPassword> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword(MsgModifyPassword other) : this() {
    oldPassword_ = other.oldPassword_;
    newPassword_ = other.newPassword_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgModifyPassword Clone() {
    return new MsgModifyPassword(this);
  }

  /// <summary>Field number for the "old_password" field.</summary>
  public const int OldPasswordFieldNumber = 1;
  private string oldPassword_ = "";
  /// <summary>
  ///旧密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OldPassword {
    get { return oldPassword_; }
    set {
      oldPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "new_password" field.</summary>
  public const int NewPasswordFieldNumber = 2;
  private string newPassword_ = "";
  /// <summary>
  ///新密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string NewPassword {
    get { return newPassword_; }
    set {
      newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgModifyPassword);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgModifyPassword other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OldPassword != other.OldPassword) return false;
    if (NewPassword != other.NewPassword) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OldPassword.Length != 0) hash ^= OldPassword.GetHashCode();
    if (NewPassword.Length != 0) hash ^= NewPassword.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (OldPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(OldPassword);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (OldPassword.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(OldPassword);
    }
    if (NewPassword.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(NewPassword);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OldPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPassword);
    }
    if (NewPassword.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgModifyPassword other) {
    if (other == null) {
      return;
    }
    if (other.OldPassword.Length != 0) {
      OldPassword = other.OldPassword;
    }
    if (other.NewPassword.Length != 0) {
      NewPassword = other.NewPassword;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          OldPassword = input.ReadString();
          break;
        }
        case 18: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          OldPassword = input.ReadString();
          break;
        }
        case 18: {
          NewPassword = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///绑定手机
/// </summary>
public sealed partial class MsgBindPhone : pb::IMessage<MsgBindPhone>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgBindPhone> _parser = new pb::MessageParser<MsgBindPhone>(() => new MsgBindPhone());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgBindPhone> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoginReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone(MsgBindPhone other) : this() {
    code_ = other.code_;
    phoneNum_ = other.phoneNum_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgBindPhone Clone() {
    return new MsgBindPhone(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private int code_;
  /// <summary>
  ///验证码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "phone_num" field.</summary>
  public const int PhoneNumFieldNumber = 2;
  private string phoneNum_ = "";
  /// <summary>
  ///手机号码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PhoneNum {
    get { return phoneNum_; }
    set {
      phoneNum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 3;
  private string password_ = "";
  /// <summary>
  ///密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgBindPhone);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgBindPhone other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (PhoneNum != other.PhoneNum) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code != 0) hash ^= Code.GetHashCode();
    if (PhoneNum.Length != 0) hash ^= PhoneNum.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PhoneNum);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Code != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Code);
    }
    if (PhoneNum.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PhoneNum);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (PhoneNum.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNum);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgBindPhone other) {
    if (other == null) {
      return;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.PhoneNum.Length != 0) {
      PhoneNum = other.PhoneNum;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          PhoneNum = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Code = input.ReadInt32();
          break;
        }
        case 18: {
          PhoneNum = input.ReadString();
          break;
        }
        case 26: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
