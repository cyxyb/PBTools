// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/Game/Game.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Proto/Game/Game.proto</summary>
public static partial class GameReflection {

  #region Descriptor
  /// <summary>File descriptor for Proto/Game/Game.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GameReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVQcm90by9HYW1lL0dhbWUucHJvdG8iNwoSTXNnR2FtZVBsYXllckxvZ2lu",
          "Eg8KB3VzZXJfaWQYASABKAUSEAoIcGFzc3dvcmQYAiABKAkijgEKEU1zZ0dh",
          "bWVQbGF5ZXJJbmZvEg8KB3VzZXJfaWQYASABKAUSFAoMYmVhdXRpZnVsX2lk",
          "GAIgASgFEhAKCG5pY2tuYW1lGAMgASgJEg4KBmF2YXRhchgEIAEoCRIMCgRj",
          "b2luGAUgASgEEhAKCHRhYmxlX2lkGAYgASgFEhAKCGNoYWlyX2lkGAcgASgF",
          "IoEBChZNc2dHYW1lUGxheWVyTG9naW5SZXNwEhAKCHJlc19jb2RlGAEgASgF",
          "Eg8KB3VzZXJfaWQYAiABKAUSFAoMYmVhdXRpZnVsX2lkGAMgASgFEhAKCG5p",
          "Y2tuYW1lGAQgASgJEg4KBmF2YXRhchgFIAEoCRIMCgRjb2luGAYgASgEIjUK",
          "E01zZ1N5bmNQbGF5ZXJzU2NvcmUSEAoIY2hhaXJfaWQYASABKAUSDAoEY29p",
          "bhgCIAEoBCJVCgxNc2dSb3VuZERhdGESDAoEdGltZRgBIAEoBRITCgt3aW5f",
          "dXNlcl9pZBgCIAEoBRIUCgxsb3NlX3VzZXJfaWQYAyABKAUSDAoEZ29sZBgE",
          "IAEoAyJJChFNc2dUb3RhbFJvdW5kRGF0YRIRCgl0b3RhbF9udW0YASABKAUS",
          "IQoKcm91bmRfZGF0YRgCIAMoCzINLk1zZ1JvdW5kRGF0YSKqAQoKTXNnRGF5",
          "RGF0YRIMCgR0aW1lGAEgASgJEhgKEHRvdGFsX3BsYXlfY291bnQYAiABKAUS",
          "EgoKbG9zZV9jb3VudBgDIAEoBRIRCglsb3NlX2dvbGQYBCABKAMSEQoJd2lu",
          "X2NvdW50GAUgASgFEhAKCHdpbl9nb2xkGAYgASgDEhIKCnRvdGFsX2dvbGQY",
          "ByABKAMSFAoMc3VycGx1c19nb2xkGAggASgDIkUKD01zZ1RvdGFsRGF5RGF0",
          "YRIRCgl0b3RhbF9udW0YASABKAUSHwoKZGFpbHlfZGF0YRgCIAMoCzILLk1z",
          "Z0RheURhdGEiOQoOTXNnUXVlcnlSZWNvcmQSDAoEcGFnZRgBIAEoBRILCgNu",
          "dW0YAiABKAUSDAoEdHlwZRgDIAEoBSI3Cg5Nc2dKYWNrcG90SW5mbxIPCgdq",
          "YWNrcG90GAEgASgDEhQKDGZha2VfamFja3BvdBgCIAEoA2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGamePlayerLogin), global::MsgGamePlayerLogin.Parser, new[]{ "UserId", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGamePlayerInfo), global::MsgGamePlayerInfo.Parser, new[]{ "UserId", "BeautifulId", "Nickname", "Avatar", "Coin", "TableId", "ChairId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgGamePlayerLoginResp), global::MsgGamePlayerLoginResp.Parser, new[]{ "ResCode", "UserId", "BeautifulId", "Nickname", "Avatar", "Coin" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgSyncPlayersScore), global::MsgSyncPlayersScore.Parser, new[]{ "ChairId", "Coin" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgRoundData), global::MsgRoundData.Parser, new[]{ "Time", "WinUserId", "LoseUserId", "Gold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTotalRoundData), global::MsgTotalRoundData.Parser, new[]{ "TotalNum", "RoundData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgDayData), global::MsgDayData.Parser, new[]{ "Time", "TotalPlayCount", "LoseCount", "LoseGold", "WinCount", "WinGold", "TotalGold", "SurplusGold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgTotalDayData), global::MsgTotalDayData.Parser, new[]{ "TotalNum", "DailyData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgQueryRecord), global::MsgQueryRecord.Parser, new[]{ "Page", "Num", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MsgJackpotInfo), global::MsgJackpotInfo.Parser, new[]{ "Jackpot", "FakeJackpot" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///游戏登录
/// </summary>
public sealed partial class MsgGamePlayerLogin : pb::IMessage<MsgGamePlayerLogin>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGamePlayerLogin> _parser = new pb::MessageParser<MsgGamePlayerLogin>(() => new MsgGamePlayerLogin());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGamePlayerLogin> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerLogin() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerLogin(MsgGamePlayerLogin other) : this() {
    userId_ = other.userId_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerLogin Clone() {
    return new MsgGamePlayerLogin(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  /// <summary>
  ///玩家密码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGamePlayerLogin);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGamePlayerLogin other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGamePlayerLogin other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///游戏玩家信息
/// </summary>
public sealed partial class MsgGamePlayerInfo : pb::IMessage<MsgGamePlayerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGamePlayerInfo> _parser = new pb::MessageParser<MsgGamePlayerInfo>(() => new MsgGamePlayerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGamePlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerInfo(MsgGamePlayerInfo other) : this() {
    userId_ = other.userId_;
    beautifulId_ = other.beautifulId_;
    nickname_ = other.nickname_;
    avatar_ = other.avatar_;
    coin_ = other.coin_;
    tableId_ = other.tableId_;
    chairId_ = other.chairId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerInfo Clone() {
    return new MsgGamePlayerInfo(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 2;
  private int beautifulId_;
  /// <summary>
  ///玩家靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 3;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 4;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "coin" field.</summary>
  public const int CoinFieldNumber = 5;
  private ulong coin_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Coin {
    get { return coin_; }
    set {
      coin_ = value;
    }
  }

  /// <summary>Field number for the "table_id" field.</summary>
  public const int TableIdFieldNumber = 6;
  private int tableId_;
  /// <summary>
  ///玩家座位号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TableId {
    get { return tableId_; }
    set {
      tableId_ = value;
    }
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 7;
  private int chairId_;
  /// <summary>
  ///玩家椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGamePlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGamePlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Nickname != other.Nickname) return false;
    if (Avatar != other.Avatar) return false;
    if (Coin != other.Coin) return false;
    if (TableId != other.TableId) return false;
    if (ChairId != other.ChairId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (Coin != 0UL) hash ^= Coin.GetHashCode();
    if (TableId != 0) hash ^= TableId.GetHashCode();
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Avatar);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(Coin);
    }
    if (TableId != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(TableId);
    }
    if (ChairId != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ChairId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (UserId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Avatar);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(40);
      output.WriteUInt64(Coin);
    }
    if (TableId != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(TableId);
    }
    if (ChairId != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(ChairId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (Coin != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Coin);
    }
    if (TableId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableId);
    }
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGamePlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.Coin != 0UL) {
      Coin = other.Coin;
    }
    if (other.TableId != 0) {
      TableId = other.TableId;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 34: {
          Avatar = input.ReadString();
          break;
        }
        case 40: {
          Coin = input.ReadUInt64();
          break;
        }
        case 48: {
          TableId = input.ReadInt32();
          break;
        }
        case 56: {
          ChairId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          UserId = input.ReadInt32();
          break;
        }
        case 16: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 26: {
          Nickname = input.ReadString();
          break;
        }
        case 34: {
          Avatar = input.ReadString();
          break;
        }
        case 40: {
          Coin = input.ReadUInt64();
          break;
        }
        case 48: {
          TableId = input.ReadInt32();
          break;
        }
        case 56: {
          ChairId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///游戏登录返回
/// </summary>
public sealed partial class MsgGamePlayerLoginResp : pb::IMessage<MsgGamePlayerLoginResp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgGamePlayerLoginResp> _parser = new pb::MessageParser<MsgGamePlayerLoginResp>(() => new MsgGamePlayerLoginResp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgGamePlayerLoginResp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerLoginResp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerLoginResp(MsgGamePlayerLoginResp other) : this() {
    resCode_ = other.resCode_;
    userId_ = other.userId_;
    beautifulId_ = other.beautifulId_;
    nickname_ = other.nickname_;
    avatar_ = other.avatar_;
    coin_ = other.coin_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgGamePlayerLoginResp Clone() {
    return new MsgGamePlayerLoginResp(this);
  }

  /// <summary>Field number for the "res_code" field.</summary>
  public const int ResCodeFieldNumber = 1;
  private int resCode_;
  /// <summary>
  ///登录返回码(0:成功 非0:失败)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ResCode {
    get { return resCode_; }
    set {
      resCode_ = value;
    }
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 2;
  private int userId_;
  /// <summary>
  ///玩家ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserId {
    get { return userId_; }
    set {
      userId_ = value;
    }
  }

  /// <summary>Field number for the "beautiful_id" field.</summary>
  public const int BeautifulIdFieldNumber = 3;
  private int beautifulId_;
  /// <summary>
  ///玩家靓号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BeautifulId {
    get { return beautifulId_; }
    set {
      beautifulId_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 4;
  private string nickname_ = "";
  /// <summary>
  ///玩家昵称
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "avatar" field.</summary>
  public const int AvatarFieldNumber = 5;
  private string avatar_ = "";
  /// <summary>
  ///头像
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Avatar {
    get { return avatar_; }
    set {
      avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "coin" field.</summary>
  public const int CoinFieldNumber = 6;
  private ulong coin_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Coin {
    get { return coin_; }
    set {
      coin_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgGamePlayerLoginResp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgGamePlayerLoginResp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResCode != other.ResCode) return false;
    if (UserId != other.UserId) return false;
    if (BeautifulId != other.BeautifulId) return false;
    if (Nickname != other.Nickname) return false;
    if (Avatar != other.Avatar) return false;
    if (Coin != other.Coin) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ResCode != 0) hash ^= ResCode.GetHashCode();
    if (UserId != 0) hash ^= UserId.GetHashCode();
    if (BeautifulId != 0) hash ^= BeautifulId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
    if (Coin != 0UL) hash ^= Coin.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Avatar);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(Coin);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ResCode != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ResCode);
    }
    if (UserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(UserId);
    }
    if (BeautifulId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BeautifulId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Nickname);
    }
    if (Avatar.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Avatar);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(48);
      output.WriteUInt64(Coin);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ResCode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResCode);
    }
    if (UserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
    }
    if (BeautifulId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeautifulId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Avatar.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Avatar);
    }
    if (Coin != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Coin);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgGamePlayerLoginResp other) {
    if (other == null) {
      return;
    }
    if (other.ResCode != 0) {
      ResCode = other.ResCode;
    }
    if (other.UserId != 0) {
      UserId = other.UserId;
    }
    if (other.BeautifulId != 0) {
      BeautifulId = other.BeautifulId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Avatar.Length != 0) {
      Avatar = other.Avatar;
    }
    if (other.Coin != 0UL) {
      Coin = other.Coin;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Nickname = input.ReadString();
          break;
        }
        case 42: {
          Avatar = input.ReadString();
          break;
        }
        case 48: {
          Coin = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ResCode = input.ReadInt32();
          break;
        }
        case 16: {
          UserId = input.ReadInt32();
          break;
        }
        case 24: {
          BeautifulId = input.ReadInt32();
          break;
        }
        case 34: {
          Nickname = input.ReadString();
          break;
        }
        case 42: {
          Avatar = input.ReadString();
          break;
        }
        case 48: {
          Coin = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///同步桌子所有玩家分数
/// </summary>
public sealed partial class MsgSyncPlayersScore : pb::IMessage<MsgSyncPlayersScore>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgSyncPlayersScore> _parser = new pb::MessageParser<MsgSyncPlayersScore>(() => new MsgSyncPlayersScore());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgSyncPlayersScore> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSyncPlayersScore() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSyncPlayersScore(MsgSyncPlayersScore other) : this() {
    chairId_ = other.chairId_;
    coin_ = other.coin_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgSyncPlayersScore Clone() {
    return new MsgSyncPlayersScore(this);
  }

  /// <summary>Field number for the "chair_id" field.</summary>
  public const int ChairIdFieldNumber = 1;
  private int chairId_;
  /// <summary>
  ///椅子号
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChairId {
    get { return chairId_; }
    set {
      chairId_ = value;
    }
  }

  /// <summary>Field number for the "coin" field.</summary>
  public const int CoinFieldNumber = 2;
  private ulong coin_;
  /// <summary>
  ///玩家金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Coin {
    get { return coin_; }
    set {
      coin_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgSyncPlayersScore);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgSyncPlayersScore other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ChairId != other.ChairId) return false;
    if (Coin != other.Coin) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ChairId != 0) hash ^= ChairId.GetHashCode();
    if (Coin != 0UL) hash ^= Coin.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Coin);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ChairId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ChairId);
    }
    if (Coin != 0UL) {
      output.WriteRawTag(16);
      output.WriteUInt64(Coin);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ChairId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChairId);
    }
    if (Coin != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Coin);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgSyncPlayersScore other) {
    if (other == null) {
      return;
    }
    if (other.ChairId != 0) {
      ChairId = other.ChairId;
    }
    if (other.Coin != 0UL) {
      Coin = other.Coin;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Coin = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ChairId = input.ReadInt32();
          break;
        }
        case 16: {
          Coin = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///每局数据
/// </summary>
public sealed partial class MsgRoundData : pb::IMessage<MsgRoundData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgRoundData> _parser = new pb::MessageParser<MsgRoundData>(() => new MsgRoundData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgRoundData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRoundData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRoundData(MsgRoundData other) : this() {
    time_ = other.time_;
    winUserId_ = other.winUserId_;
    loseUserId_ = other.loseUserId_;
    gold_ = other.gold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgRoundData Clone() {
    return new MsgRoundData(this);
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 1;
  private int time_;
  /// <summary>
  ///时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "win_user_id" field.</summary>
  public const int WinUserIdFieldNumber = 2;
  private int winUserId_;
  /// <summary>
  ///胜利玩家id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WinUserId {
    get { return winUserId_; }
    set {
      winUserId_ = value;
    }
  }

  /// <summary>Field number for the "lose_user_id" field.</summary>
  public const int LoseUserIdFieldNumber = 3;
  private int loseUserId_;
  /// <summary>
  ///失败玩家id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LoseUserId {
    get { return loseUserId_; }
    set {
      loseUserId_ = value;
    }
  }

  /// <summary>Field number for the "gold" field.</summary>
  public const int GoldFieldNumber = 4;
  private long gold_;
  /// <summary>
  ///金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Gold {
    get { return gold_; }
    set {
      gold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgRoundData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgRoundData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Time != other.Time) return false;
    if (WinUserId != other.WinUserId) return false;
    if (LoseUserId != other.LoseUserId) return false;
    if (Gold != other.Gold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Time != 0) hash ^= Time.GetHashCode();
    if (WinUserId != 0) hash ^= WinUserId.GetHashCode();
    if (LoseUserId != 0) hash ^= LoseUserId.GetHashCode();
    if (Gold != 0L) hash ^= Gold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Time != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Time);
    }
    if (WinUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(WinUserId);
    }
    if (LoseUserId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(LoseUserId);
    }
    if (Gold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(Gold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Time != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Time);
    }
    if (WinUserId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(WinUserId);
    }
    if (LoseUserId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(LoseUserId);
    }
    if (Gold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(Gold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Time != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
    }
    if (WinUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinUserId);
    }
    if (LoseUserId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoseUserId);
    }
    if (Gold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgRoundData other) {
    if (other == null) {
      return;
    }
    if (other.Time != 0) {
      Time = other.Time;
    }
    if (other.WinUserId != 0) {
      WinUserId = other.WinUserId;
    }
    if (other.LoseUserId != 0) {
      LoseUserId = other.LoseUserId;
    }
    if (other.Gold != 0L) {
      Gold = other.Gold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Time = input.ReadInt32();
          break;
        }
        case 16: {
          WinUserId = input.ReadInt32();
          break;
        }
        case 24: {
          LoseUserId = input.ReadInt32();
          break;
        }
        case 32: {
          Gold = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Time = input.ReadInt32();
          break;
        }
        case 16: {
          WinUserId = input.ReadInt32();
          break;
        }
        case 24: {
          LoseUserId = input.ReadInt32();
          break;
        }
        case 32: {
          Gold = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///总的每局数据
/// </summary>
public sealed partial class MsgTotalRoundData : pb::IMessage<MsgTotalRoundData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTotalRoundData> _parser = new pb::MessageParser<MsgTotalRoundData>(() => new MsgTotalRoundData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTotalRoundData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTotalRoundData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTotalRoundData(MsgTotalRoundData other) : this() {
    totalNum_ = other.totalNum_;
    roundData_ = other.roundData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTotalRoundData Clone() {
    return new MsgTotalRoundData(this);
  }

  /// <summary>Field number for the "total_num" field.</summary>
  public const int TotalNumFieldNumber = 1;
  private int totalNum_;
  /// <summary>
  ///总条数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalNum {
    get { return totalNum_; }
    set {
      totalNum_ = value;
    }
  }

  /// <summary>Field number for the "round_data" field.</summary>
  public const int RoundDataFieldNumber = 2;
  private static readonly pb::FieldCodec<global::MsgRoundData> _repeated_roundData_codec
      = pb::FieldCodec.ForMessage(18, global::MsgRoundData.Parser);
  private readonly pbc::RepeatedField<global::MsgRoundData> roundData_ = new pbc::RepeatedField<global::MsgRoundData>();
  /// <summary>
  ///每局数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgRoundData> RoundData {
    get { return roundData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTotalRoundData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTotalRoundData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalNum != other.TotalNum) return false;
    if(!roundData_.Equals(other.roundData_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalNum != 0) hash ^= TotalNum.GetHashCode();
    hash ^= roundData_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (TotalNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalNum);
    }
    roundData_.WriteTo(output, _repeated_roundData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (TotalNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalNum);
    }
    roundData_.WriteTo(ref output, _repeated_roundData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
    }
    size += roundData_.CalculateSize(_repeated_roundData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTotalRoundData other) {
    if (other == null) {
      return;
    }
    if (other.TotalNum != 0) {
      TotalNum = other.TotalNum;
    }
    roundData_.Add(other.roundData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalNum = input.ReadInt32();
          break;
        }
        case 18: {
          roundData_.AddEntriesFrom(input, _repeated_roundData_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TotalNum = input.ReadInt32();
          break;
        }
        case 18: {
          roundData_.AddEntriesFrom(ref input, _repeated_roundData_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///每日数据
/// </summary>
public sealed partial class MsgDayData : pb::IMessage<MsgDayData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgDayData> _parser = new pb::MessageParser<MsgDayData>(() => new MsgDayData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgDayData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgDayData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgDayData(MsgDayData other) : this() {
    time_ = other.time_;
    totalPlayCount_ = other.totalPlayCount_;
    loseCount_ = other.loseCount_;
    loseGold_ = other.loseGold_;
    winCount_ = other.winCount_;
    winGold_ = other.winGold_;
    totalGold_ = other.totalGold_;
    surplusGold_ = other.surplusGold_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgDayData Clone() {
    return new MsgDayData(this);
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 1;
  private string time_ = "";
  /// <summary>
  ///日期
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Time {
    get { return time_; }
    set {
      time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "total_play_count" field.</summary>
  public const int TotalPlayCountFieldNumber = 2;
  private int totalPlayCount_;
  /// <summary>
  ///总游玩次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalPlayCount {
    get { return totalPlayCount_; }
    set {
      totalPlayCount_ = value;
    }
  }

  /// <summary>Field number for the "lose_count" field.</summary>
  public const int LoseCountFieldNumber = 3;
  private int loseCount_;
  /// <summary>
  ///输次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int LoseCount {
    get { return loseCount_; }
    set {
      loseCount_ = value;
    }
  }

  /// <summary>Field number for the "lose_gold" field.</summary>
  public const int LoseGoldFieldNumber = 4;
  private long loseGold_;
  /// <summary>
  ///输金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long LoseGold {
    get { return loseGold_; }
    set {
      loseGold_ = value;
    }
  }

  /// <summary>Field number for the "win_count" field.</summary>
  public const int WinCountFieldNumber = 5;
  private int winCount_;
  /// <summary>
  ///赢次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int WinCount {
    get { return winCount_; }
    set {
      winCount_ = value;
    }
  }

  /// <summary>Field number for the "win_gold" field.</summary>
  public const int WinGoldFieldNumber = 6;
  private long winGold_;
  /// <summary>
  ///赢金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long WinGold {
    get { return winGold_; }
    set {
      winGold_ = value;
    }
  }

  /// <summary>Field number for the "total_gold" field.</summary>
  public const int TotalGoldFieldNumber = 7;
  private long totalGold_;
  /// <summary>
  ///总输赢
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long TotalGold {
    get { return totalGold_; }
    set {
      totalGold_ = value;
    }
  }

  /// <summary>Field number for the "surplus_gold" field.</summary>
  public const int SurplusGoldFieldNumber = 8;
  private long surplusGold_;
  /// <summary>
  ///当日剩余金额
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long SurplusGold {
    get { return surplusGold_; }
    set {
      surplusGold_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgDayData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgDayData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Time != other.Time) return false;
    if (TotalPlayCount != other.TotalPlayCount) return false;
    if (LoseCount != other.LoseCount) return false;
    if (LoseGold != other.LoseGold) return false;
    if (WinCount != other.WinCount) return false;
    if (WinGold != other.WinGold) return false;
    if (TotalGold != other.TotalGold) return false;
    if (SurplusGold != other.SurplusGold) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Time.Length != 0) hash ^= Time.GetHashCode();
    if (TotalPlayCount != 0) hash ^= TotalPlayCount.GetHashCode();
    if (LoseCount != 0) hash ^= LoseCount.GetHashCode();
    if (LoseGold != 0L) hash ^= LoseGold.GetHashCode();
    if (WinCount != 0) hash ^= WinCount.GetHashCode();
    if (WinGold != 0L) hash ^= WinGold.GetHashCode();
    if (TotalGold != 0L) hash ^= TotalGold.GetHashCode();
    if (SurplusGold != 0L) hash ^= SurplusGold.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Time.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Time);
    }
    if (TotalPlayCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TotalPlayCount);
    }
    if (LoseCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(LoseCount);
    }
    if (LoseGold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(LoseGold);
    }
    if (WinCount != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(WinCount);
    }
    if (WinGold != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(WinGold);
    }
    if (TotalGold != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(TotalGold);
    }
    if (SurplusGold != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(SurplusGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Time.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Time);
    }
    if (TotalPlayCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(TotalPlayCount);
    }
    if (LoseCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(LoseCount);
    }
    if (LoseGold != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(LoseGold);
    }
    if (WinCount != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(WinCount);
    }
    if (WinGold != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(WinGold);
    }
    if (TotalGold != 0L) {
      output.WriteRawTag(56);
      output.WriteInt64(TotalGold);
    }
    if (SurplusGold != 0L) {
      output.WriteRawTag(64);
      output.WriteInt64(SurplusGold);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Time.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
    }
    if (TotalPlayCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalPlayCount);
    }
    if (LoseCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoseCount);
    }
    if (LoseGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(LoseGold);
    }
    if (WinCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(WinCount);
    }
    if (WinGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinGold);
    }
    if (TotalGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalGold);
    }
    if (SurplusGold != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(SurplusGold);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgDayData other) {
    if (other == null) {
      return;
    }
    if (other.Time.Length != 0) {
      Time = other.Time;
    }
    if (other.TotalPlayCount != 0) {
      TotalPlayCount = other.TotalPlayCount;
    }
    if (other.LoseCount != 0) {
      LoseCount = other.LoseCount;
    }
    if (other.LoseGold != 0L) {
      LoseGold = other.LoseGold;
    }
    if (other.WinCount != 0) {
      WinCount = other.WinCount;
    }
    if (other.WinGold != 0L) {
      WinGold = other.WinGold;
    }
    if (other.TotalGold != 0L) {
      TotalGold = other.TotalGold;
    }
    if (other.SurplusGold != 0L) {
      SurplusGold = other.SurplusGold;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Time = input.ReadString();
          break;
        }
        case 16: {
          TotalPlayCount = input.ReadInt32();
          break;
        }
        case 24: {
          LoseCount = input.ReadInt32();
          break;
        }
        case 32: {
          LoseGold = input.ReadInt64();
          break;
        }
        case 40: {
          WinCount = input.ReadInt32();
          break;
        }
        case 48: {
          WinGold = input.ReadInt64();
          break;
        }
        case 56: {
          TotalGold = input.ReadInt64();
          break;
        }
        case 64: {
          SurplusGold = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Time = input.ReadString();
          break;
        }
        case 16: {
          TotalPlayCount = input.ReadInt32();
          break;
        }
        case 24: {
          LoseCount = input.ReadInt32();
          break;
        }
        case 32: {
          LoseGold = input.ReadInt64();
          break;
        }
        case 40: {
          WinCount = input.ReadInt32();
          break;
        }
        case 48: {
          WinGold = input.ReadInt64();
          break;
        }
        case 56: {
          TotalGold = input.ReadInt64();
          break;
        }
        case 64: {
          SurplusGold = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///总的每局数据
/// </summary>
public sealed partial class MsgTotalDayData : pb::IMessage<MsgTotalDayData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgTotalDayData> _parser = new pb::MessageParser<MsgTotalDayData>(() => new MsgTotalDayData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgTotalDayData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTotalDayData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTotalDayData(MsgTotalDayData other) : this() {
    totalNum_ = other.totalNum_;
    dailyData_ = other.dailyData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgTotalDayData Clone() {
    return new MsgTotalDayData(this);
  }

  /// <summary>Field number for the "total_num" field.</summary>
  public const int TotalNumFieldNumber = 1;
  private int totalNum_;
  /// <summary>
  ///总条数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int TotalNum {
    get { return totalNum_; }
    set {
      totalNum_ = value;
    }
  }

  /// <summary>Field number for the "daily_data" field.</summary>
  public const int DailyDataFieldNumber = 2;
  private static readonly pb::FieldCodec<global::MsgDayData> _repeated_dailyData_codec
      = pb::FieldCodec.ForMessage(18, global::MsgDayData.Parser);
  private readonly pbc::RepeatedField<global::MsgDayData> dailyData_ = new pbc::RepeatedField<global::MsgDayData>();
  /// <summary>
  ///每日数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MsgDayData> DailyData {
    get { return dailyData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgTotalDayData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgTotalDayData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TotalNum != other.TotalNum) return false;
    if(!dailyData_.Equals(other.dailyData_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TotalNum != 0) hash ^= TotalNum.GetHashCode();
    hash ^= dailyData_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (TotalNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalNum);
    }
    dailyData_.WriteTo(output, _repeated_dailyData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (TotalNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(TotalNum);
    }
    dailyData_.WriteTo(ref output, _repeated_dailyData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TotalNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
    }
    size += dailyData_.CalculateSize(_repeated_dailyData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgTotalDayData other) {
    if (other == null) {
      return;
    }
    if (other.TotalNum != 0) {
      TotalNum = other.TotalNum;
    }
    dailyData_.Add(other.dailyData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TotalNum = input.ReadInt32();
          break;
        }
        case 18: {
          dailyData_.AddEntriesFrom(input, _repeated_dailyData_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TotalNum = input.ReadInt32();
          break;
        }
        case 18: {
          dailyData_.AddEntriesFrom(ref input, _repeated_dailyData_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///查询数据记录
/// </summary>
public sealed partial class MsgQueryRecord : pb::IMessage<MsgQueryRecord>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgQueryRecord> _parser = new pb::MessageParser<MsgQueryRecord>(() => new MsgQueryRecord());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgQueryRecord> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRecord() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRecord(MsgQueryRecord other) : this() {
    page_ = other.page_;
    num_ = other.num_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgQueryRecord Clone() {
    return new MsgQueryRecord(this);
  }

  /// <summary>Field number for the "page" field.</summary>
  public const int PageFieldNumber = 1;
  private int page_;
  /// <summary>
  ///当前页(从0开始)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Page {
    get { return page_; }
    set {
      page_ = value;
    }
  }

  /// <summary>Field number for the "num" field.</summary>
  public const int NumFieldNumber = 2;
  private int num_;
  /// <summary>
  ///每页条数(最大每页50条)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Num {
    get { return num_; }
    set {
      num_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private int type_;
  /// <summary>
  ///1:每局数据 2:每日数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgQueryRecord);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgQueryRecord other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Page != other.Page) return false;
    if (Num != other.Num) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Page != 0) hash ^= Page.GetHashCode();
    if (Num != 0) hash ^= Num.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Page != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Page);
    }
    if (Num != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Num);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Page != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Page);
    }
    if (Num != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Num);
    }
    if (Type != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Page != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
    }
    if (Num != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num);
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgQueryRecord other) {
    if (other == null) {
      return;
    }
    if (other.Page != 0) {
      Page = other.Page;
    }
    if (other.Num != 0) {
      Num = other.Num;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Page = input.ReadInt32();
          break;
        }
        case 16: {
          Num = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Page = input.ReadInt32();
          break;
        }
        case 16: {
          Num = input.ReadInt32();
          break;
        }
        case 24: {
          Type = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///奖池信息
/// </summary>
public sealed partial class MsgJackpotInfo : pb::IMessage<MsgJackpotInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MsgJackpotInfo> _parser = new pb::MessageParser<MsgJackpotInfo>(() => new MsgJackpotInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MsgJackpotInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgJackpotInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgJackpotInfo(MsgJackpotInfo other) : this() {
    jackpot_ = other.jackpot_;
    fakeJackpot_ = other.fakeJackpot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MsgJackpotInfo Clone() {
    return new MsgJackpotInfo(this);
  }

  /// <summary>Field number for the "jackpot" field.</summary>
  public const int JackpotFieldNumber = 1;
  private long jackpot_;
  /// <summary>
  ///奖池分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long Jackpot {
    get { return jackpot_; }
    set {
      jackpot_ = value;
    }
  }

  /// <summary>Field number for the "fake_jackpot" field.</summary>
  public const int FakeJackpotFieldNumber = 2;
  private long fakeJackpot_;
  /// <summary>
  ///假奖池分数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long FakeJackpot {
    get { return fakeJackpot_; }
    set {
      fakeJackpot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MsgJackpotInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MsgJackpotInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Jackpot != other.Jackpot) return false;
    if (FakeJackpot != other.FakeJackpot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Jackpot != 0L) hash ^= Jackpot.GetHashCode();
    if (FakeJackpot != 0L) hash ^= FakeJackpot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Jackpot != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Jackpot);
    }
    if (FakeJackpot != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(FakeJackpot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Jackpot != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Jackpot);
    }
    if (FakeJackpot != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(FakeJackpot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Jackpot != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Jackpot);
    }
    if (FakeJackpot != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(FakeJackpot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MsgJackpotInfo other) {
    if (other == null) {
      return;
    }
    if (other.Jackpot != 0L) {
      Jackpot = other.Jackpot;
    }
    if (other.FakeJackpot != 0L) {
      FakeJackpot = other.FakeJackpot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Jackpot = input.ReadInt64();
          break;
        }
        case 16: {
          FakeJackpot = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Jackpot = input.ReadInt64();
          break;
        }
        case 16: {
          FakeJackpot = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
