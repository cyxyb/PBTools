// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerInternalProto.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ServerInternalProto_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ServerInternalProto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ServerInternalProto_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ServerInternalProto_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[65]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ServerInternalProto_2eproto;
class MsgApplyRobot;
class MsgApplyRobotDefaultTypeInternal;
extern MsgApplyRobotDefaultTypeInternal _MsgApplyRobot_default_instance_;
class MsgApplyRobotResp;
class MsgApplyRobotRespDefaultTypeInternal;
extern MsgApplyRobotRespDefaultTypeInternal _MsgApplyRobotResp_default_instance_;
class MsgCreateRobot;
class MsgCreateRobotDefaultTypeInternal;
extern MsgCreateRobotDefaultTypeInternal _MsgCreateRobot_default_instance_;
class MsgCreateRobotResp;
class MsgCreateRobotRespDefaultTypeInternal;
extern MsgCreateRobotRespDefaultTypeInternal _MsgCreateRobotResp_default_instance_;
class MsgDBBindInviteCode;
class MsgDBBindInviteCodeDefaultTypeInternal;
extern MsgDBBindInviteCodeDefaultTypeInternal _MsgDBBindInviteCode_default_instance_;
class MsgDBBindPhone;
class MsgDBBindPhoneDefaultTypeInternal;
extern MsgDBBindPhoneDefaultTypeInternal _MsgDBBindPhone_default_instance_;
class MsgDBBindPhoneRes;
class MsgDBBindPhoneResDefaultTypeInternal;
extern MsgDBBindPhoneResDefaultTypeInternal _MsgDBBindPhoneRes_default_instance_;
class MsgDBBuyGoods;
class MsgDBBuyGoodsDefaultTypeInternal;
extern MsgDBBuyGoodsDefaultTypeInternal _MsgDBBuyGoods_default_instance_;
class MsgDBCDKExchange;
class MsgDBCDKExchangeDefaultTypeInternal;
extern MsgDBCDKExchangeDefaultTypeInternal _MsgDBCDKExchange_default_instance_;
class MsgDBChatLogin;
class MsgDBChatLoginDefaultTypeInternal;
extern MsgDBChatLoginDefaultTypeInternal _MsgDBChatLogin_default_instance_;
class MsgDBChatTrumpetMsg;
class MsgDBChatTrumpetMsgDefaultTypeInternal;
extern MsgDBChatTrumpetMsgDefaultTypeInternal _MsgDBChatTrumpetMsg_default_instance_;
class MsgDBCommonKV;
class MsgDBCommonKVDefaultTypeInternal;
extern MsgDBCommonKVDefaultTypeInternal _MsgDBCommonKV_default_instance_;
class MsgDBFingerGuessQueryRecord;
class MsgDBFingerGuessQueryRecordDefaultTypeInternal;
extern MsgDBFingerGuessQueryRecordDefaultTypeInternal _MsgDBFingerGuessQueryRecord_default_instance_;
class MsgDBFingerGuessWriteScore;
class MsgDBFingerGuessWriteScoreDefaultTypeInternal;
extern MsgDBFingerGuessWriteScoreDefaultTypeInternal _MsgDBFingerGuessWriteScore_default_instance_;
class MsgDBFingerGuessWriteScoreResp;
class MsgDBFingerGuessWriteScoreRespDefaultTypeInternal;
extern MsgDBFingerGuessWriteScoreRespDefaultTypeInternal _MsgDBFingerGuessWriteScoreResp_default_instance_;
class MsgDBGameLoginOut;
class MsgDBGameLoginOutDefaultTypeInternal;
extern MsgDBGameLoginOutDefaultTypeInternal _MsgDBGameLoginOut_default_instance_;
class MsgDBGamePlayerLogin;
class MsgDBGamePlayerLoginDefaultTypeInternal;
extern MsgDBGamePlayerLoginDefaultTypeInternal _MsgDBGamePlayerLogin_default_instance_;
class MsgDBGamePlayerLoginResp;
class MsgDBGamePlayerLoginRespDefaultTypeInternal;
extern MsgDBGamePlayerLoginRespDefaultTypeInternal _MsgDBGamePlayerLoginResp_default_instance_;
class MsgDBGetPlayerGold;
class MsgDBGetPlayerGoldDefaultTypeInternal;
extern MsgDBGetPlayerGoldDefaultTypeInternal _MsgDBGetPlayerGold_default_instance_;
class MsgDBLoadRobot;
class MsgDBLoadRobotDefaultTypeInternal;
extern MsgDBLoadRobotDefaultTypeInternal _MsgDBLoadRobot_default_instance_;
class MsgDBLoadRobotInfo;
class MsgDBLoadRobotInfoDefaultTypeInternal;
extern MsgDBLoadRobotInfoDefaultTypeInternal _MsgDBLoadRobotInfo_default_instance_;
class MsgDBLoginOut;
class MsgDBLoginOutDefaultTypeInternal;
extern MsgDBLoginOutDefaultTypeInternal _MsgDBLoginOut_default_instance_;
class MsgDBMail;
class MsgDBMailDefaultTypeInternal;
extern MsgDBMailDefaultTypeInternal _MsgDBMail_default_instance_;
class MsgDBMailData;
class MsgDBMailDataDefaultTypeInternal;
extern MsgDBMailDataDefaultTypeInternal _MsgDBMailData_default_instance_;
class MsgDBModifyAvatar;
class MsgDBModifyAvatarDefaultTypeInternal;
extern MsgDBModifyAvatarDefaultTypeInternal _MsgDBModifyAvatar_default_instance_;
class MsgDBOnlineActivePick;
class MsgDBOnlineActivePickDefaultTypeInternal;
extern MsgDBOnlineActivePickDefaultTypeInternal _MsgDBOnlineActivePick_default_instance_;
class MsgDBPersonalDetailsRespAdd;
class MsgDBPersonalDetailsRespAddDefaultTypeInternal;
extern MsgDBPersonalDetailsRespAddDefaultTypeInternal _MsgDBPersonalDetailsRespAdd_default_instance_;
class MsgDBPlayerReconnectData;
class MsgDBPlayerReconnectDataDefaultTypeInternal;
extern MsgDBPlayerReconnectDataDefaultTypeInternal _MsgDBPlayerReconnectData_default_instance_;
class MsgDBQueryTransferTax;
class MsgDBQueryTransferTaxDefaultTypeInternal;
extern MsgDBQueryTransferTaxDefaultTypeInternal _MsgDBQueryTransferTax_default_instance_;
class MsgDBRegisterGame;
class MsgDBRegisterGameDefaultTypeInternal;
extern MsgDBRegisterGameDefaultTypeInternal _MsgDBRegisterGame_default_instance_;
class MsgDBRegisterLogin;
class MsgDBRegisterLoginDefaultTypeInternal;
extern MsgDBRegisterLoginDefaultTypeInternal _MsgDBRegisterLogin_default_instance_;
class MsgDBSetSubAgent;
class MsgDBSetSubAgentDefaultTypeInternal;
extern MsgDBSetSubAgentDefaultTypeInternal _MsgDBSetSubAgent_default_instance_;
class MsgDBSubagentInformation;
class MsgDBSubagentInformationDefaultTypeInternal;
extern MsgDBSubagentInformationDefaultTypeInternal _MsgDBSubagentInformation_default_instance_;
class MsgDBSyncDotData;
class MsgDBSyncDotDataDefaultTypeInternal;
extern MsgDBSyncDotDataDefaultTypeInternal _MsgDBSyncDotData_default_instance_;
class MsgDBTransferOperate;
class MsgDBTransferOperateDefaultTypeInternal;
extern MsgDBTransferOperateDefaultTypeInternal _MsgDBTransferOperate_default_instance_;
class MsgDBTransferReceive;
class MsgDBTransferReceiveDefaultTypeInternal;
extern MsgDBTransferReceiveDefaultTypeInternal _MsgDBTransferReceive_default_instance_;
class MsgDBTransferTakeOut;
class MsgDBTransferTakeOutDefaultTypeInternal;
extern MsgDBTransferTakeOutDefaultTypeInternal _MsgDBTransferTakeOut_default_instance_;
class MsgDBUpdateJackpot;
class MsgDBUpdateJackpotDefaultTypeInternal;
extern MsgDBUpdateJackpotDefaultTypeInternal _MsgDBUpdateJackpot_default_instance_;
class MsgDBUpdateOnlineNum;
class MsgDBUpdateOnlineNumDefaultTypeInternal;
extern MsgDBUpdateOnlineNumDefaultTypeInternal _MsgDBUpdateOnlineNum_default_instance_;
class MsgDBUpdatePlayerInfo;
class MsgDBUpdatePlayerInfoDefaultTypeInternal;
extern MsgDBUpdatePlayerInfoDefaultTypeInternal _MsgDBUpdatePlayerInfo_default_instance_;
class MsgDBUpgradeVIP;
class MsgDBUpgradeVIPDefaultTypeInternal;
extern MsgDBUpgradeVIPDefaultTypeInternal _MsgDBUpgradeVIP_default_instance_;
class MsgDBWriteScore;
class MsgDBWriteScoreDefaultTypeInternal;
extern MsgDBWriteScoreDefaultTypeInternal _MsgDBWriteScore_default_instance_;
class MsgDBWriteScoreResp;
class MsgDBWriteScoreRespDefaultTypeInternal;
extern MsgDBWriteScoreRespDefaultTypeInternal _MsgDBWriteScoreResp_default_instance_;
class MsgDeleteFrequentlyPhone;
class MsgDeleteFrequentlyPhoneDefaultTypeInternal;
extern MsgDeleteFrequentlyPhoneDefaultTypeInternal _MsgDeleteFrequentlyPhone_default_instance_;
class MsgErrorCode;
class MsgErrorCodeDefaultTypeInternal;
extern MsgErrorCodeDefaultTypeInternal _MsgErrorCode_default_instance_;
class MsgGameServerUnRegister;
class MsgGameServerUnRegisterDefaultTypeInternal;
extern MsgGameServerUnRegisterDefaultTypeInternal _MsgGameServerUnRegister_default_instance_;
class MsgLoadCheatRate;
class MsgLoadCheatRateDefaultTypeInternal;
extern MsgLoadCheatRateDefaultTypeInternal _MsgLoadCheatRate_default_instance_;
class MsgLoginPlayerInfo;
class MsgLoginPlayerInfoDefaultTypeInternal;
extern MsgLoginPlayerInfoDefaultTypeInternal _MsgLoginPlayerInfo_default_instance_;
class MsgPlayerAttribute;
class MsgPlayerAttributeDefaultTypeInternal;
extern MsgPlayerAttributeDefaultTypeInternal _MsgPlayerAttribute_default_instance_;
class MsgPvpAddTable;
class MsgPvpAddTableDefaultTypeInternal;
extern MsgPvpAddTableDefaultTypeInternal _MsgPvpAddTable_default_instance_;
class MsgPvpDelTable;
class MsgPvpDelTableDefaultTypeInternal;
extern MsgPvpDelTableDefaultTypeInternal _MsgPvpDelTable_default_instance_;
class MsgPvpSerTableInfo;
class MsgPvpSerTableInfoDefaultTypeInternal;
extern MsgPvpSerTableInfoDefaultTypeInternal _MsgPvpSerTableInfo_default_instance_;
class MsgRegisterChatServer;
class MsgRegisterChatServerDefaultTypeInternal;
extern MsgRegisterChatServerDefaultTypeInternal _MsgRegisterChatServer_default_instance_;
class MsgRegisterGameServer;
class MsgRegisterGameServerDefaultTypeInternal;
extern MsgRegisterGameServerDefaultTypeInternal _MsgRegisterGameServer_default_instance_;
class MsgRegisterServer;
class MsgRegisterServerDefaultTypeInternal;
extern MsgRegisterServerDefaultTypeInternal _MsgRegisterServer_default_instance_;
class MsgRelayServerAddMail;
class MsgRelayServerAddMailDefaultTypeInternal;
extern MsgRelayServerAddMailDefaultTypeInternal _MsgRelayServerAddMail_default_instance_;
class MsgRelayServerRecharge;
class MsgRelayServerRechargeDefaultTypeInternal;
extern MsgRelayServerRechargeDefaultTypeInternal _MsgRelayServerRecharge_default_instance_;
class MsgRelayServerRegister;
class MsgRelayServerRegisterDefaultTypeInternal;
extern MsgRelayServerRegisterDefaultTypeInternal _MsgRelayServerRegister_default_instance_;
class MsgSendPhoneCode;
class MsgSendPhoneCodeDefaultTypeInternal;
extern MsgSendPhoneCodeDefaultTypeInternal _MsgSendPhoneCode_default_instance_;
class MsgStorageCode;
class MsgStorageCodeDefaultTypeInternal;
extern MsgStorageCodeDefaultTypeInternal _MsgStorageCode_default_instance_;
class MsgUpdateChatServerOnlineNum;
class MsgUpdateChatServerOnlineNumDefaultTypeInternal;
extern MsgUpdateChatServerOnlineNumDefaultTypeInternal _MsgUpdateChatServerOnlineNum_default_instance_;
class MsgUpdateGameServerOnlineNum;
class MsgUpdateGameServerOnlineNumDefaultTypeInternal;
extern MsgUpdateGameServerOnlineNumDefaultTypeInternal _MsgUpdateGameServerOnlineNum_default_instance_;
class MsgUpdateLImitChat;
class MsgUpdateLImitChatDefaultTypeInternal;
extern MsgUpdateLImitChatDefaultTypeInternal _MsgUpdateLImitChat_default_instance_;
class MsgUpdatePhoneCodeState;
class MsgUpdatePhoneCodeStateDefaultTypeInternal;
extern MsgUpdatePhoneCodeStateDefaultTypeInternal _MsgUpdatePhoneCodeState_default_instance_;
class MsgWebCmd;
class MsgWebCmdDefaultTypeInternal;
extern MsgWebCmdDefaultTypeInternal _MsgWebCmd_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::MsgApplyRobot* Arena::CreateMaybeMessage<::MsgApplyRobot>(Arena*);
template<> ::MsgApplyRobotResp* Arena::CreateMaybeMessage<::MsgApplyRobotResp>(Arena*);
template<> ::MsgCreateRobot* Arena::CreateMaybeMessage<::MsgCreateRobot>(Arena*);
template<> ::MsgCreateRobotResp* Arena::CreateMaybeMessage<::MsgCreateRobotResp>(Arena*);
template<> ::MsgDBBindInviteCode* Arena::CreateMaybeMessage<::MsgDBBindInviteCode>(Arena*);
template<> ::MsgDBBindPhone* Arena::CreateMaybeMessage<::MsgDBBindPhone>(Arena*);
template<> ::MsgDBBindPhoneRes* Arena::CreateMaybeMessage<::MsgDBBindPhoneRes>(Arena*);
template<> ::MsgDBBuyGoods* Arena::CreateMaybeMessage<::MsgDBBuyGoods>(Arena*);
template<> ::MsgDBCDKExchange* Arena::CreateMaybeMessage<::MsgDBCDKExchange>(Arena*);
template<> ::MsgDBChatLogin* Arena::CreateMaybeMessage<::MsgDBChatLogin>(Arena*);
template<> ::MsgDBChatTrumpetMsg* Arena::CreateMaybeMessage<::MsgDBChatTrumpetMsg>(Arena*);
template<> ::MsgDBCommonKV* Arena::CreateMaybeMessage<::MsgDBCommonKV>(Arena*);
template<> ::MsgDBFingerGuessQueryRecord* Arena::CreateMaybeMessage<::MsgDBFingerGuessQueryRecord>(Arena*);
template<> ::MsgDBFingerGuessWriteScore* Arena::CreateMaybeMessage<::MsgDBFingerGuessWriteScore>(Arena*);
template<> ::MsgDBFingerGuessWriteScoreResp* Arena::CreateMaybeMessage<::MsgDBFingerGuessWriteScoreResp>(Arena*);
template<> ::MsgDBGameLoginOut* Arena::CreateMaybeMessage<::MsgDBGameLoginOut>(Arena*);
template<> ::MsgDBGamePlayerLogin* Arena::CreateMaybeMessage<::MsgDBGamePlayerLogin>(Arena*);
template<> ::MsgDBGamePlayerLoginResp* Arena::CreateMaybeMessage<::MsgDBGamePlayerLoginResp>(Arena*);
template<> ::MsgDBGetPlayerGold* Arena::CreateMaybeMessage<::MsgDBGetPlayerGold>(Arena*);
template<> ::MsgDBLoadRobot* Arena::CreateMaybeMessage<::MsgDBLoadRobot>(Arena*);
template<> ::MsgDBLoadRobotInfo* Arena::CreateMaybeMessage<::MsgDBLoadRobotInfo>(Arena*);
template<> ::MsgDBLoginOut* Arena::CreateMaybeMessage<::MsgDBLoginOut>(Arena*);
template<> ::MsgDBMail* Arena::CreateMaybeMessage<::MsgDBMail>(Arena*);
template<> ::MsgDBMailData* Arena::CreateMaybeMessage<::MsgDBMailData>(Arena*);
template<> ::MsgDBModifyAvatar* Arena::CreateMaybeMessage<::MsgDBModifyAvatar>(Arena*);
template<> ::MsgDBOnlineActivePick* Arena::CreateMaybeMessage<::MsgDBOnlineActivePick>(Arena*);
template<> ::MsgDBPersonalDetailsRespAdd* Arena::CreateMaybeMessage<::MsgDBPersonalDetailsRespAdd>(Arena*);
template<> ::MsgDBPlayerReconnectData* Arena::CreateMaybeMessage<::MsgDBPlayerReconnectData>(Arena*);
template<> ::MsgDBQueryTransferTax* Arena::CreateMaybeMessage<::MsgDBQueryTransferTax>(Arena*);
template<> ::MsgDBRegisterGame* Arena::CreateMaybeMessage<::MsgDBRegisterGame>(Arena*);
template<> ::MsgDBRegisterLogin* Arena::CreateMaybeMessage<::MsgDBRegisterLogin>(Arena*);
template<> ::MsgDBSetSubAgent* Arena::CreateMaybeMessage<::MsgDBSetSubAgent>(Arena*);
template<> ::MsgDBSubagentInformation* Arena::CreateMaybeMessage<::MsgDBSubagentInformation>(Arena*);
template<> ::MsgDBSyncDotData* Arena::CreateMaybeMessage<::MsgDBSyncDotData>(Arena*);
template<> ::MsgDBTransferOperate* Arena::CreateMaybeMessage<::MsgDBTransferOperate>(Arena*);
template<> ::MsgDBTransferReceive* Arena::CreateMaybeMessage<::MsgDBTransferReceive>(Arena*);
template<> ::MsgDBTransferTakeOut* Arena::CreateMaybeMessage<::MsgDBTransferTakeOut>(Arena*);
template<> ::MsgDBUpdateJackpot* Arena::CreateMaybeMessage<::MsgDBUpdateJackpot>(Arena*);
template<> ::MsgDBUpdateOnlineNum* Arena::CreateMaybeMessage<::MsgDBUpdateOnlineNum>(Arena*);
template<> ::MsgDBUpdatePlayerInfo* Arena::CreateMaybeMessage<::MsgDBUpdatePlayerInfo>(Arena*);
template<> ::MsgDBUpgradeVIP* Arena::CreateMaybeMessage<::MsgDBUpgradeVIP>(Arena*);
template<> ::MsgDBWriteScore* Arena::CreateMaybeMessage<::MsgDBWriteScore>(Arena*);
template<> ::MsgDBWriteScoreResp* Arena::CreateMaybeMessage<::MsgDBWriteScoreResp>(Arena*);
template<> ::MsgDeleteFrequentlyPhone* Arena::CreateMaybeMessage<::MsgDeleteFrequentlyPhone>(Arena*);
template<> ::MsgErrorCode* Arena::CreateMaybeMessage<::MsgErrorCode>(Arena*);
template<> ::MsgGameServerUnRegister* Arena::CreateMaybeMessage<::MsgGameServerUnRegister>(Arena*);
template<> ::MsgLoadCheatRate* Arena::CreateMaybeMessage<::MsgLoadCheatRate>(Arena*);
template<> ::MsgLoginPlayerInfo* Arena::CreateMaybeMessage<::MsgLoginPlayerInfo>(Arena*);
template<> ::MsgPlayerAttribute* Arena::CreateMaybeMessage<::MsgPlayerAttribute>(Arena*);
template<> ::MsgPvpAddTable* Arena::CreateMaybeMessage<::MsgPvpAddTable>(Arena*);
template<> ::MsgPvpDelTable* Arena::CreateMaybeMessage<::MsgPvpDelTable>(Arena*);
template<> ::MsgPvpSerTableInfo* Arena::CreateMaybeMessage<::MsgPvpSerTableInfo>(Arena*);
template<> ::MsgRegisterChatServer* Arena::CreateMaybeMessage<::MsgRegisterChatServer>(Arena*);
template<> ::MsgRegisterGameServer* Arena::CreateMaybeMessage<::MsgRegisterGameServer>(Arena*);
template<> ::MsgRegisterServer* Arena::CreateMaybeMessage<::MsgRegisterServer>(Arena*);
template<> ::MsgRelayServerAddMail* Arena::CreateMaybeMessage<::MsgRelayServerAddMail>(Arena*);
template<> ::MsgRelayServerRecharge* Arena::CreateMaybeMessage<::MsgRelayServerRecharge>(Arena*);
template<> ::MsgRelayServerRegister* Arena::CreateMaybeMessage<::MsgRelayServerRegister>(Arena*);
template<> ::MsgSendPhoneCode* Arena::CreateMaybeMessage<::MsgSendPhoneCode>(Arena*);
template<> ::MsgStorageCode* Arena::CreateMaybeMessage<::MsgStorageCode>(Arena*);
template<> ::MsgUpdateChatServerOnlineNum* Arena::CreateMaybeMessage<::MsgUpdateChatServerOnlineNum>(Arena*);
template<> ::MsgUpdateGameServerOnlineNum* Arena::CreateMaybeMessage<::MsgUpdateGameServerOnlineNum>(Arena*);
template<> ::MsgUpdateLImitChat* Arena::CreateMaybeMessage<::MsgUpdateLImitChat>(Arena*);
template<> ::MsgUpdatePhoneCodeState* Arena::CreateMaybeMessage<::MsgUpdatePhoneCodeState>(Arena*);
template<> ::MsgWebCmd* Arena::CreateMaybeMessage<::MsgWebCmd>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class MsgRegisterServer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgRegisterServer) */ {
 public:
  inline MsgRegisterServer() : MsgRegisterServer(nullptr) {}
  virtual ~MsgRegisterServer();

  MsgRegisterServer(const MsgRegisterServer& from);
  MsgRegisterServer(MsgRegisterServer&& from) noexcept
    : MsgRegisterServer() {
    *this = ::std::move(from);
  }

  inline MsgRegisterServer& operator=(const MsgRegisterServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRegisterServer& operator=(MsgRegisterServer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgRegisterServer& default_instance();

  static inline const MsgRegisterServer* internal_default_instance() {
    return reinterpret_cast<const MsgRegisterServer*>(
               &_MsgRegisterServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgRegisterServer& a, MsgRegisterServer& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRegisterServer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRegisterServer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgRegisterServer* New() const final {
    return CreateMaybeMessage<MsgRegisterServer>(nullptr);
  }

  MsgRegisterServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgRegisterServer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgRegisterServer& from);
  void MergeFrom(const MsgRegisterServer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRegisterServer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgRegisterServer";
  }
  protected:
  explicit MsgRegisterServer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 1,
    kPortFieldNumber = 2,
    kServerIdFieldNumber = 3,
  };
  // int32 ip = 1;
  void clear_ip();
  ::PROTOBUF_NAMESPACE_ID::int32 ip() const;
  void set_ip(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ip() const;
  void _internal_set_ip(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 port = 2;
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::int32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 server_id = 3;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgRegisterServer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 ip_;
  ::PROTOBUF_NAMESPACE_ID::int32 port_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgRegisterGameServer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgRegisterGameServer) */ {
 public:
  inline MsgRegisterGameServer() : MsgRegisterGameServer(nullptr) {}
  virtual ~MsgRegisterGameServer();

  MsgRegisterGameServer(const MsgRegisterGameServer& from);
  MsgRegisterGameServer(MsgRegisterGameServer&& from) noexcept
    : MsgRegisterGameServer() {
    *this = ::std::move(from);
  }

  inline MsgRegisterGameServer& operator=(const MsgRegisterGameServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRegisterGameServer& operator=(MsgRegisterGameServer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgRegisterGameServer& default_instance();

  static inline const MsgRegisterGameServer* internal_default_instance() {
    return reinterpret_cast<const MsgRegisterGameServer*>(
               &_MsgRegisterGameServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgRegisterGameServer& a, MsgRegisterGameServer& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRegisterGameServer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRegisterGameServer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgRegisterGameServer* New() const final {
    return CreateMaybeMessage<MsgRegisterGameServer>(nullptr);
  }

  MsgRegisterGameServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgRegisterGameServer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgRegisterGameServer& from);
  void MergeFrom(const MsgRegisterGameServer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRegisterGameServer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgRegisterGameServer";
  }
  protected:
  explicit MsgRegisterGameServer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomNameFieldNumber = 8,
    kIpFieldNumber = 1,
    kPortFieldNumber = 2,
    kServerIdFieldNumber = 3,
    kKindIdFieldNumber = 4,
    kRoomLevelFieldNumber = 5,
    kLimitGoldFieldNumber = 6,
    kMaxPlayerFieldNumber = 7,
  };
  // string room_name = 8;
  void clear_room_name();
  const std::string& room_name() const;
  void set_room_name(const std::string& value);
  void set_room_name(std::string&& value);
  void set_room_name(const char* value);
  void set_room_name(const char* value, size_t size);
  std::string* mutable_room_name();
  std::string* release_room_name();
  void set_allocated_room_name(std::string* room_name);
  private:
  const std::string& _internal_room_name() const;
  void _internal_set_room_name(const std::string& value);
  std::string* _internal_mutable_room_name();
  public:

  // int32 ip = 1;
  void clear_ip();
  ::PROTOBUF_NAMESPACE_ID::int32 ip() const;
  void set_ip(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ip() const;
  void _internal_set_ip(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 port = 2;
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::int32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 server_id = 3;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 kind_id = 4;
  void clear_kind_id();
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id() const;
  void set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind_id() const;
  void _internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 room_level = 5;
  void clear_room_level();
  ::PROTOBUF_NAMESPACE_ID::int32 room_level() const;
  void set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_room_level() const;
  void _internal_set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit_gold = 6;
  void clear_limit_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 limit_gold() const;
  void set_limit_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit_gold() const;
  void _internal_set_limit_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_player = 7;
  void clear_max_player();
  ::PROTOBUF_NAMESPACE_ID::int32 max_player() const;
  void set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_player() const;
  void _internal_set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgRegisterGameServer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr room_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 ip_;
  ::PROTOBUF_NAMESPACE_ID::int32 port_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 room_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_player_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgRegisterChatServer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgRegisterChatServer) */ {
 public:
  inline MsgRegisterChatServer() : MsgRegisterChatServer(nullptr) {}
  virtual ~MsgRegisterChatServer();

  MsgRegisterChatServer(const MsgRegisterChatServer& from);
  MsgRegisterChatServer(MsgRegisterChatServer&& from) noexcept
    : MsgRegisterChatServer() {
    *this = ::std::move(from);
  }

  inline MsgRegisterChatServer& operator=(const MsgRegisterChatServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRegisterChatServer& operator=(MsgRegisterChatServer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgRegisterChatServer& default_instance();

  static inline const MsgRegisterChatServer* internal_default_instance() {
    return reinterpret_cast<const MsgRegisterChatServer*>(
               &_MsgRegisterChatServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgRegisterChatServer& a, MsgRegisterChatServer& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRegisterChatServer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRegisterChatServer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgRegisterChatServer* New() const final {
    return CreateMaybeMessage<MsgRegisterChatServer>(nullptr);
  }

  MsgRegisterChatServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgRegisterChatServer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgRegisterChatServer& from);
  void MergeFrom(const MsgRegisterChatServer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRegisterChatServer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgRegisterChatServer";
  }
  protected:
  explicit MsgRegisterChatServer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 1,
    kPortFieldNumber = 2,
    kServerIdFieldNumber = 3,
    kMaxPlayerFieldNumber = 4,
  };
  // int32 ip = 1;
  void clear_ip();
  ::PROTOBUF_NAMESPACE_ID::int32 ip() const;
  void set_ip(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ip() const;
  void _internal_set_ip(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 port = 2;
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::int32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 server_id = 3;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_player = 4;
  void clear_max_player();
  ::PROTOBUF_NAMESPACE_ID::int32 max_player() const;
  void set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_player() const;
  void _internal_set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgRegisterChatServer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 ip_;
  ::PROTOBUF_NAMESPACE_ID::int32 port_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_player_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgApplyRobot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgApplyRobot) */ {
 public:
  inline MsgApplyRobot() : MsgApplyRobot(nullptr) {}
  virtual ~MsgApplyRobot();

  MsgApplyRobot(const MsgApplyRobot& from);
  MsgApplyRobot(MsgApplyRobot&& from) noexcept
    : MsgApplyRobot() {
    *this = ::std::move(from);
  }

  inline MsgApplyRobot& operator=(const MsgApplyRobot& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgApplyRobot& operator=(MsgApplyRobot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgApplyRobot& default_instance();

  static inline const MsgApplyRobot* internal_default_instance() {
    return reinterpret_cast<const MsgApplyRobot*>(
               &_MsgApplyRobot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgApplyRobot& a, MsgApplyRobot& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgApplyRobot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgApplyRobot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyRobot* New() const final {
    return CreateMaybeMessage<MsgApplyRobot>(nullptr);
  }

  MsgApplyRobot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyRobot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgApplyRobot& from);
  void MergeFrom(const MsgApplyRobot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyRobot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgApplyRobot";
  }
  protected:
  explicit MsgApplyRobot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumFieldNumber = 2,
    kServerIdFieldNumber = 1,
  };
  // repeated int32 num = 2;
  int num_size() const;
  private:
  int _internal_num_size() const;
  public:
  void clear_num();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_num() const;
  void _internal_add_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_num();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 num(int index) const;
  void set_num(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      num() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_num();

  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgApplyRobot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > num_;
  mutable std::atomic<int> _num_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgApplyRobotResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgApplyRobotResp) */ {
 public:
  inline MsgApplyRobotResp() : MsgApplyRobotResp(nullptr) {}
  virtual ~MsgApplyRobotResp();

  MsgApplyRobotResp(const MsgApplyRobotResp& from);
  MsgApplyRobotResp(MsgApplyRobotResp&& from) noexcept
    : MsgApplyRobotResp() {
    *this = ::std::move(from);
  }

  inline MsgApplyRobotResp& operator=(const MsgApplyRobotResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgApplyRobotResp& operator=(MsgApplyRobotResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgApplyRobotResp& default_instance();

  static inline const MsgApplyRobotResp* internal_default_instance() {
    return reinterpret_cast<const MsgApplyRobotResp*>(
               &_MsgApplyRobotResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgApplyRobotResp& a, MsgApplyRobotResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgApplyRobotResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgApplyRobotResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyRobotResp* New() const final {
    return CreateMaybeMessage<MsgApplyRobotResp>(nullptr);
  }

  MsgApplyRobotResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyRobotResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgApplyRobotResp& from);
  void MergeFrom(const MsgApplyRobotResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyRobotResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgApplyRobotResp";
  }
  protected:
  explicit MsgApplyRobotResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRobotUserIdFieldNumber = 1,
  };
  // repeated int32 robot_user_id = 1;
  int robot_user_id_size() const;
  private:
  int _internal_robot_user_id_size() const;
  public:
  void clear_robot_user_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_robot_user_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_robot_user_id() const;
  void _internal_add_robot_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_robot_user_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 robot_user_id(int index) const;
  void set_robot_user_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_robot_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      robot_user_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_robot_user_id();

  // @@protoc_insertion_point(class_scope:MsgApplyRobotResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > robot_user_id_;
  mutable std::atomic<int> _robot_user_id_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateRobot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgCreateRobot) */ {
 public:
  inline MsgCreateRobot() : MsgCreateRobot(nullptr) {}
  virtual ~MsgCreateRobot();

  MsgCreateRobot(const MsgCreateRobot& from);
  MsgCreateRobot(MsgCreateRobot&& from) noexcept
    : MsgCreateRobot() {
    *this = ::std::move(from);
  }

  inline MsgCreateRobot& operator=(const MsgCreateRobot& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateRobot& operator=(MsgCreateRobot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgCreateRobot& default_instance();

  static inline const MsgCreateRobot* internal_default_instance() {
    return reinterpret_cast<const MsgCreateRobot*>(
               &_MsgCreateRobot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgCreateRobot& a, MsgCreateRobot& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreateRobot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateRobot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgCreateRobot* New() const final {
    return CreateMaybeMessage<MsgCreateRobot>(nullptr);
  }

  MsgCreateRobot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgCreateRobot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgCreateRobot& from);
  void MergeFrom(const MsgCreateRobot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCreateRobot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgCreateRobot";
  }
  protected:
  explicit MsgCreateRobot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerIdFieldNumber = 1,
    kGenerateNumFieldNumber = 2,
    kClientSocketIdFieldNumber = 3,
  };
  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 generate_num = 2;
  void clear_generate_num();
  ::PROTOBUF_NAMESPACE_ID::int32 generate_num() const;
  void set_generate_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_generate_num() const;
  void _internal_set_generate_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 client_socket_id = 3;
  void clear_client_socket_id();
  ::PROTOBUF_NAMESPACE_ID::int32 client_socket_id() const;
  void set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_client_socket_id() const;
  void _internal_set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgCreateRobot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 generate_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 client_socket_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateRobotResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgCreateRobotResp) */ {
 public:
  inline MsgCreateRobotResp() : MsgCreateRobotResp(nullptr) {}
  virtual ~MsgCreateRobotResp();

  MsgCreateRobotResp(const MsgCreateRobotResp& from);
  MsgCreateRobotResp(MsgCreateRobotResp&& from) noexcept
    : MsgCreateRobotResp() {
    *this = ::std::move(from);
  }

  inline MsgCreateRobotResp& operator=(const MsgCreateRobotResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateRobotResp& operator=(MsgCreateRobotResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgCreateRobotResp& default_instance();

  static inline const MsgCreateRobotResp* internal_default_instance() {
    return reinterpret_cast<const MsgCreateRobotResp*>(
               &_MsgCreateRobotResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgCreateRobotResp& a, MsgCreateRobotResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreateRobotResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateRobotResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgCreateRobotResp* New() const final {
    return CreateMaybeMessage<MsgCreateRobotResp>(nullptr);
  }

  MsgCreateRobotResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgCreateRobotResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgCreateRobotResp& from);
  void MergeFrom(const MsgCreateRobotResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCreateRobotResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgCreateRobotResp";
  }
  protected:
  explicit MsgCreateRobotResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 2,
    kServerIdFieldNumber = 1,
    kClientSocketIdFieldNumber = 3,
  };
  // repeated int32 user_id = 2;
  int user_id_size() const;
  private:
  int _internal_user_id_size() const;
  public:
  void clear_user_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_user_id() const;
  void _internal_add_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_user_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 user_id(int index) const;
  void set_user_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      user_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_user_id();

  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 client_socket_id = 3;
  void clear_client_socket_id();
  ::PROTOBUF_NAMESPACE_ID::int32 client_socket_id() const;
  void set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_client_socket_id() const;
  void _internal_set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgCreateRobotResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > user_id_;
  mutable std::atomic<int> _user_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 client_socket_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgSendPhoneCode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgSendPhoneCode) */ {
 public:
  inline MsgSendPhoneCode() : MsgSendPhoneCode(nullptr) {}
  virtual ~MsgSendPhoneCode();

  MsgSendPhoneCode(const MsgSendPhoneCode& from);
  MsgSendPhoneCode(MsgSendPhoneCode&& from) noexcept
    : MsgSendPhoneCode() {
    *this = ::std::move(from);
  }

  inline MsgSendPhoneCode& operator=(const MsgSendPhoneCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSendPhoneCode& operator=(MsgSendPhoneCode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgSendPhoneCode& default_instance();

  static inline const MsgSendPhoneCode* internal_default_instance() {
    return reinterpret_cast<const MsgSendPhoneCode*>(
               &_MsgSendPhoneCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgSendPhoneCode& a, MsgSendPhoneCode& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSendPhoneCode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSendPhoneCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgSendPhoneCode* New() const final {
    return CreateMaybeMessage<MsgSendPhoneCode>(nullptr);
  }

  MsgSendPhoneCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendPhoneCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgSendPhoneCode& from);
  void MergeFrom(const MsgSendPhoneCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendPhoneCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgSendPhoneCode";
  }
  protected:
  explicit MsgSendPhoneCode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 1,
    kCodeFieldNumber = 2,
    kIdFieldNumber = 3,
  };
  // string phone = 1;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // int32 code = 2;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 id = 3;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgSendPhoneCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdatePhoneCodeState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgUpdatePhoneCodeState) */ {
 public:
  inline MsgUpdatePhoneCodeState() : MsgUpdatePhoneCodeState(nullptr) {}
  virtual ~MsgUpdatePhoneCodeState();

  MsgUpdatePhoneCodeState(const MsgUpdatePhoneCodeState& from);
  MsgUpdatePhoneCodeState(MsgUpdatePhoneCodeState&& from) noexcept
    : MsgUpdatePhoneCodeState() {
    *this = ::std::move(from);
  }

  inline MsgUpdatePhoneCodeState& operator=(const MsgUpdatePhoneCodeState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdatePhoneCodeState& operator=(MsgUpdatePhoneCodeState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgUpdatePhoneCodeState& default_instance();

  static inline const MsgUpdatePhoneCodeState* internal_default_instance() {
    return reinterpret_cast<const MsgUpdatePhoneCodeState*>(
               &_MsgUpdatePhoneCodeState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgUpdatePhoneCodeState& a, MsgUpdatePhoneCodeState& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdatePhoneCodeState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdatePhoneCodeState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdatePhoneCodeState* New() const final {
    return CreateMaybeMessage<MsgUpdatePhoneCodeState>(nullptr);
  }

  MsgUpdatePhoneCodeState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdatePhoneCodeState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgUpdatePhoneCodeState& from);
  void MergeFrom(const MsgUpdatePhoneCodeState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdatePhoneCodeState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgUpdatePhoneCodeState";
  }
  protected:
  explicit MsgUpdatePhoneCodeState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChannelFieldNumber = 2,
    kIdFieldNumber = 1,
    kSuccessFieldNumber = 3,
  };
  // string channel = 2;
  void clear_channel();
  const std::string& channel() const;
  void set_channel(const std::string& value);
  void set_channel(std::string&& value);
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  std::string* mutable_channel();
  std::string* release_channel();
  void set_allocated_channel(std::string* channel);
  private:
  const std::string& _internal_channel() const;
  void _internal_set_channel(const std::string& value);
  std::string* _internal_mutable_channel();
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 success = 3;
  void clear_success();
  ::PROTOBUF_NAMESPACE_ID::int32 success() const;
  void set_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_success() const;
  void _internal_set_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgUpdatePhoneCodeState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr channel_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 success_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateGameServerOnlineNum PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgUpdateGameServerOnlineNum) */ {
 public:
  inline MsgUpdateGameServerOnlineNum() : MsgUpdateGameServerOnlineNum(nullptr) {}
  virtual ~MsgUpdateGameServerOnlineNum();

  MsgUpdateGameServerOnlineNum(const MsgUpdateGameServerOnlineNum& from);
  MsgUpdateGameServerOnlineNum(MsgUpdateGameServerOnlineNum&& from) noexcept
    : MsgUpdateGameServerOnlineNum() {
    *this = ::std::move(from);
  }

  inline MsgUpdateGameServerOnlineNum& operator=(const MsgUpdateGameServerOnlineNum& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateGameServerOnlineNum& operator=(MsgUpdateGameServerOnlineNum&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgUpdateGameServerOnlineNum& default_instance();

  static inline const MsgUpdateGameServerOnlineNum* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateGameServerOnlineNum*>(
               &_MsgUpdateGameServerOnlineNum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgUpdateGameServerOnlineNum& a, MsgUpdateGameServerOnlineNum& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateGameServerOnlineNum* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateGameServerOnlineNum* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdateGameServerOnlineNum* New() const final {
    return CreateMaybeMessage<MsgUpdateGameServerOnlineNum>(nullptr);
  }

  MsgUpdateGameServerOnlineNum* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdateGameServerOnlineNum>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgUpdateGameServerOnlineNum& from);
  void MergeFrom(const MsgUpdateGameServerOnlineNum& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateGameServerOnlineNum* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgUpdateGameServerOnlineNum";
  }
  protected:
  explicit MsgUpdateGameServerOnlineNum(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerIdFieldNumber = 1,
    kKindIdFieldNumber = 2,
    kRoomLevelFieldNumber = 3,
    kOnlineNumFieldNumber = 4,
  };
  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 kind_id = 2;
  void clear_kind_id();
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id() const;
  void set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind_id() const;
  void _internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 room_level = 3;
  void clear_room_level();
  ::PROTOBUF_NAMESPACE_ID::int32 room_level() const;
  void set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_room_level() const;
  void _internal_set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 online_num = 4;
  void clear_online_num();
  ::PROTOBUF_NAMESPACE_ID::int32 online_num() const;
  void set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_online_num() const;
  void _internal_set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgUpdateGameServerOnlineNum)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 room_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 online_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgGameServerUnRegister PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgGameServerUnRegister) */ {
 public:
  inline MsgGameServerUnRegister() : MsgGameServerUnRegister(nullptr) {}
  virtual ~MsgGameServerUnRegister();

  MsgGameServerUnRegister(const MsgGameServerUnRegister& from);
  MsgGameServerUnRegister(MsgGameServerUnRegister&& from) noexcept
    : MsgGameServerUnRegister() {
    *this = ::std::move(from);
  }

  inline MsgGameServerUnRegister& operator=(const MsgGameServerUnRegister& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGameServerUnRegister& operator=(MsgGameServerUnRegister&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgGameServerUnRegister& default_instance();

  static inline const MsgGameServerUnRegister* internal_default_instance() {
    return reinterpret_cast<const MsgGameServerUnRegister*>(
               &_MsgGameServerUnRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MsgGameServerUnRegister& a, MsgGameServerUnRegister& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGameServerUnRegister* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGameServerUnRegister* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgGameServerUnRegister* New() const final {
    return CreateMaybeMessage<MsgGameServerUnRegister>(nullptr);
  }

  MsgGameServerUnRegister* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgGameServerUnRegister>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgGameServerUnRegister& from);
  void MergeFrom(const MsgGameServerUnRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGameServerUnRegister* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgGameServerUnRegister";
  }
  protected:
  explicit MsgGameServerUnRegister(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerIdFieldNumber = 1,
    kKindIdFieldNumber = 2,
    kRoomLevelFieldNumber = 3,
  };
  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 kind_id = 2;
  void clear_kind_id();
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id() const;
  void set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind_id() const;
  void _internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 room_level = 3;
  void clear_room_level();
  ::PROTOBUF_NAMESPACE_ID::int32 room_level() const;
  void set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_room_level() const;
  void _internal_set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgGameServerUnRegister)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 room_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgLoadCheatRate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgLoadCheatRate) */ {
 public:
  inline MsgLoadCheatRate() : MsgLoadCheatRate(nullptr) {}
  virtual ~MsgLoadCheatRate();

  MsgLoadCheatRate(const MsgLoadCheatRate& from);
  MsgLoadCheatRate(MsgLoadCheatRate&& from) noexcept
    : MsgLoadCheatRate() {
    *this = ::std::move(from);
  }

  inline MsgLoadCheatRate& operator=(const MsgLoadCheatRate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgLoadCheatRate& operator=(MsgLoadCheatRate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgLoadCheatRate& default_instance();

  static inline const MsgLoadCheatRate* internal_default_instance() {
    return reinterpret_cast<const MsgLoadCheatRate*>(
               &_MsgLoadCheatRate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MsgLoadCheatRate& a, MsgLoadCheatRate& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgLoadCheatRate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgLoadCheatRate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgLoadCheatRate* New() const final {
    return CreateMaybeMessage<MsgLoadCheatRate>(nullptr);
  }

  MsgLoadCheatRate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoadCheatRate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgLoadCheatRate& from);
  void MergeFrom(const MsgLoadCheatRate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoadCheatRate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgLoadCheatRate";
  }
  protected:
  explicit MsgLoadCheatRate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBloodScoreFieldNumber = 1,
    kFailMinLineScoreFieldNumber = 3,
    kFailMaxLineScoreFieldNumber = 4,
    kCheatRateFieldNumber = 2,
  };
  // int64 blood_score = 1;
  void clear_blood_score();
  ::PROTOBUF_NAMESPACE_ID::int64 blood_score() const;
  void set_blood_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_blood_score() const;
  void _internal_set_blood_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 fail_min_line_score = 3;
  void clear_fail_min_line_score();
  ::PROTOBUF_NAMESPACE_ID::int64 fail_min_line_score() const;
  void set_fail_min_line_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_fail_min_line_score() const;
  void _internal_set_fail_min_line_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 fail_max_line_score = 4;
  void clear_fail_max_line_score();
  ::PROTOBUF_NAMESPACE_ID::int64 fail_max_line_score() const;
  void set_fail_max_line_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_fail_max_line_score() const;
  void _internal_set_fail_max_line_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 cheat_rate = 2;
  void clear_cheat_rate();
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_rate() const;
  void set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cheat_rate() const;
  void _internal_set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgLoadCheatRate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 blood_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 fail_min_line_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 fail_max_line_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_rate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgRelayServerRegister PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgRelayServerRegister) */ {
 public:
  inline MsgRelayServerRegister() : MsgRelayServerRegister(nullptr) {}
  virtual ~MsgRelayServerRegister();

  MsgRelayServerRegister(const MsgRelayServerRegister& from);
  MsgRelayServerRegister(MsgRelayServerRegister&& from) noexcept
    : MsgRelayServerRegister() {
    *this = ::std::move(from);
  }

  inline MsgRelayServerRegister& operator=(const MsgRelayServerRegister& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRelayServerRegister& operator=(MsgRelayServerRegister&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgRelayServerRegister& default_instance();

  static inline const MsgRelayServerRegister* internal_default_instance() {
    return reinterpret_cast<const MsgRelayServerRegister*>(
               &_MsgRelayServerRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MsgRelayServerRegister& a, MsgRelayServerRegister& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRelayServerRegister* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRelayServerRegister* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgRelayServerRegister* New() const final {
    return CreateMaybeMessage<MsgRelayServerRegister>(nullptr);
  }

  MsgRelayServerRegister* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgRelayServerRegister>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgRelayServerRegister& from);
  void MergeFrom(const MsgRelayServerRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRelayServerRegister* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgRelayServerRegister";
  }
  protected:
  explicit MsgRelayServerRegister(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerIdFieldNumber = 1,
    kServerPortFieldNumber = 2,
  };
  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 server_port = 2;
  void clear_server_port();
  ::PROTOBUF_NAMESPACE_ID::int32 server_port() const;
  void set_server_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_port() const;
  void _internal_set_server_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgRelayServerRegister)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_port_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgRelayServerAddMail PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgRelayServerAddMail) */ {
 public:
  inline MsgRelayServerAddMail() : MsgRelayServerAddMail(nullptr) {}
  virtual ~MsgRelayServerAddMail();

  MsgRelayServerAddMail(const MsgRelayServerAddMail& from);
  MsgRelayServerAddMail(MsgRelayServerAddMail&& from) noexcept
    : MsgRelayServerAddMail() {
    *this = ::std::move(from);
  }

  inline MsgRelayServerAddMail& operator=(const MsgRelayServerAddMail& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRelayServerAddMail& operator=(MsgRelayServerAddMail&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgRelayServerAddMail& default_instance();

  static inline const MsgRelayServerAddMail* internal_default_instance() {
    return reinterpret_cast<const MsgRelayServerAddMail*>(
               &_MsgRelayServerAddMail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MsgRelayServerAddMail& a, MsgRelayServerAddMail& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRelayServerAddMail* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRelayServerAddMail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgRelayServerAddMail* New() const final {
    return CreateMaybeMessage<MsgRelayServerAddMail>(nullptr);
  }

  MsgRelayServerAddMail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgRelayServerAddMail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgRelayServerAddMail& from);
  void MergeFrom(const MsgRelayServerAddMail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRelayServerAddMail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgRelayServerAddMail";
  }
  protected:
  explicit MsgRelayServerAddMail(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 2,
    kContentFieldNumber = 3,
    kToUserIdFieldNumber = 1,
    kTypeFieldNumber = 5,
    kNumFieldNumber = 4,
    kFromUserIdFieldNumber = 6,
    kCodingTypeFieldNumber = 7,
  };
  // string title = 2;
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // string content = 3;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // int32 to_user_id = 1;
  void clear_to_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 to_user_id() const;
  void set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_to_user_id() const;
  void _internal_set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 5;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 num = 4;
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::int64 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 from_user_id = 6;
  void clear_from_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 from_user_id() const;
  void set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_from_user_id() const;
  void _internal_set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 coding_type = 7;
  void clear_coding_type();
  ::PROTOBUF_NAMESPACE_ID::int32 coding_type() const;
  void set_coding_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_coding_type() const;
  void _internal_set_coding_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgRelayServerAddMail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::int32 to_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int64 num_;
  ::PROTOBUF_NAMESPACE_ID::int32 from_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 coding_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgRelayServerRecharge PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgRelayServerRecharge) */ {
 public:
  inline MsgRelayServerRecharge() : MsgRelayServerRecharge(nullptr) {}
  virtual ~MsgRelayServerRecharge();

  MsgRelayServerRecharge(const MsgRelayServerRecharge& from);
  MsgRelayServerRecharge(MsgRelayServerRecharge&& from) noexcept
    : MsgRelayServerRecharge() {
    *this = ::std::move(from);
  }

  inline MsgRelayServerRecharge& operator=(const MsgRelayServerRecharge& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRelayServerRecharge& operator=(MsgRelayServerRecharge&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgRelayServerRecharge& default_instance();

  static inline const MsgRelayServerRecharge* internal_default_instance() {
    return reinterpret_cast<const MsgRelayServerRecharge*>(
               &_MsgRelayServerRecharge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MsgRelayServerRecharge& a, MsgRelayServerRecharge& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRelayServerRecharge* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRelayServerRecharge* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgRelayServerRecharge* New() const final {
    return CreateMaybeMessage<MsgRelayServerRecharge>(nullptr);
  }

  MsgRelayServerRecharge* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgRelayServerRecharge>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgRelayServerRecharge& from);
  void MergeFrom(const MsgRelayServerRecharge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRelayServerRecharge* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgRelayServerRecharge";
  }
  protected:
  explicit MsgRelayServerRecharge(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kGoldFieldNumber = 2,
    kGameCoinFieldNumber = 3,
    kTypeFieldNumber = 4,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gold = 2;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 game_coin = 3;
  void clear_game_coin();
  ::PROTOBUF_NAMESPACE_ID::int32 game_coin() const;
  void set_game_coin(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_coin() const;
  void _internal_set_game_coin(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 4;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgRelayServerRecharge)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_coin_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateChatServerOnlineNum PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgUpdateChatServerOnlineNum) */ {
 public:
  inline MsgUpdateChatServerOnlineNum() : MsgUpdateChatServerOnlineNum(nullptr) {}
  virtual ~MsgUpdateChatServerOnlineNum();

  MsgUpdateChatServerOnlineNum(const MsgUpdateChatServerOnlineNum& from);
  MsgUpdateChatServerOnlineNum(MsgUpdateChatServerOnlineNum&& from) noexcept
    : MsgUpdateChatServerOnlineNum() {
    *this = ::std::move(from);
  }

  inline MsgUpdateChatServerOnlineNum& operator=(const MsgUpdateChatServerOnlineNum& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateChatServerOnlineNum& operator=(MsgUpdateChatServerOnlineNum&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgUpdateChatServerOnlineNum& default_instance();

  static inline const MsgUpdateChatServerOnlineNum* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateChatServerOnlineNum*>(
               &_MsgUpdateChatServerOnlineNum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MsgUpdateChatServerOnlineNum& a, MsgUpdateChatServerOnlineNum& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateChatServerOnlineNum* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateChatServerOnlineNum* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdateChatServerOnlineNum* New() const final {
    return CreateMaybeMessage<MsgUpdateChatServerOnlineNum>(nullptr);
  }

  MsgUpdateChatServerOnlineNum* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdateChatServerOnlineNum>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgUpdateChatServerOnlineNum& from);
  void MergeFrom(const MsgUpdateChatServerOnlineNum& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateChatServerOnlineNum* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgUpdateChatServerOnlineNum";
  }
  protected:
  explicit MsgUpdateChatServerOnlineNum(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerIdFieldNumber = 1,
    kOnlineNumFieldNumber = 2,
  };
  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 online_num = 2;
  void clear_online_num();
  ::PROTOBUF_NAMESPACE_ID::int32 online_num() const;
  void set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_online_num() const;
  void _internal_set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgUpdateChatServerOnlineNum)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 online_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateLImitChat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgUpdateLImitChat) */ {
 public:
  inline MsgUpdateLImitChat() : MsgUpdateLImitChat(nullptr) {}
  virtual ~MsgUpdateLImitChat();

  MsgUpdateLImitChat(const MsgUpdateLImitChat& from);
  MsgUpdateLImitChat(MsgUpdateLImitChat&& from) noexcept
    : MsgUpdateLImitChat() {
    *this = ::std::move(from);
  }

  inline MsgUpdateLImitChat& operator=(const MsgUpdateLImitChat& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateLImitChat& operator=(MsgUpdateLImitChat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgUpdateLImitChat& default_instance();

  static inline const MsgUpdateLImitChat* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateLImitChat*>(
               &_MsgUpdateLImitChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MsgUpdateLImitChat& a, MsgUpdateLImitChat& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateLImitChat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateLImitChat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdateLImitChat* New() const final {
    return CreateMaybeMessage<MsgUpdateLImitChat>(nullptr);
  }

  MsgUpdateLImitChat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdateLImitChat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgUpdateLImitChat& from);
  void MergeFrom(const MsgUpdateLImitChat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateLImitChat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgUpdateLImitChat";
  }
  protected:
  explicit MsgUpdateLImitChat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kChatLimitStateFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chat_limit_state = 2;
  void clear_chat_limit_state();
  ::PROTOBUF_NAMESPACE_ID::int32 chat_limit_state() const;
  void set_chat_limit_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chat_limit_state() const;
  void _internal_set_chat_limit_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgUpdateLImitChat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chat_limit_state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgWebCmd PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgWebCmd) */ {
 public:
  inline MsgWebCmd() : MsgWebCmd(nullptr) {}
  virtual ~MsgWebCmd();

  MsgWebCmd(const MsgWebCmd& from);
  MsgWebCmd(MsgWebCmd&& from) noexcept
    : MsgWebCmd() {
    *this = ::std::move(from);
  }

  inline MsgWebCmd& operator=(const MsgWebCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgWebCmd& operator=(MsgWebCmd&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgWebCmd& default_instance();

  static inline const MsgWebCmd* internal_default_instance() {
    return reinterpret_cast<const MsgWebCmd*>(
               &_MsgWebCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MsgWebCmd& a, MsgWebCmd& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgWebCmd* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgWebCmd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgWebCmd* New() const final {
    return CreateMaybeMessage<MsgWebCmd>(nullptr);
  }

  MsgWebCmd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgWebCmd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgWebCmd& from);
  void MergeFrom(const MsgWebCmd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgWebCmd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgWebCmd";
  }
  protected:
  explicit MsgWebCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdIdFieldNumber = 1,
    kParam1FieldNumber = 2,
    kParam2FieldNumber = 3,
    kParam3FieldNumber = 4,
  };
  // int32 cmd_id = 1;
  void clear_cmd_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_id() const;
  void set_cmd_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd_id() const;
  void _internal_set_cmd_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param1 = 2;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param2 = 3;
  void clear_param2();
  ::PROTOBUF_NAMESPACE_ID::int32 param2() const;
  void set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param2() const;
  void _internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param3 = 4;
  void clear_param3();
  ::PROTOBUF_NAMESPACE_ID::int32 param3() const;
  void set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param3() const;
  void _internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgWebCmd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  ::PROTOBUF_NAMESPACE_ID::int32 param2_;
  ::PROTOBUF_NAMESPACE_ID::int32 param3_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBCommonKV PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBCommonKV) */ {
 public:
  inline MsgDBCommonKV() : MsgDBCommonKV(nullptr) {}
  virtual ~MsgDBCommonKV();

  MsgDBCommonKV(const MsgDBCommonKV& from);
  MsgDBCommonKV(MsgDBCommonKV&& from) noexcept
    : MsgDBCommonKV() {
    *this = ::std::move(from);
  }

  inline MsgDBCommonKV& operator=(const MsgDBCommonKV& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBCommonKV& operator=(MsgDBCommonKV&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBCommonKV& default_instance();

  static inline const MsgDBCommonKV* internal_default_instance() {
    return reinterpret_cast<const MsgDBCommonKV*>(
               &_MsgDBCommonKV_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MsgDBCommonKV& a, MsgDBCommonKV& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBCommonKV* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBCommonKV* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBCommonKV* New() const final {
    return CreateMaybeMessage<MsgDBCommonKV>(nullptr);
  }

  MsgDBCommonKV* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBCommonKV>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBCommonKV& from);
  void MergeFrom(const MsgDBCommonKV& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBCommonKV* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBCommonKV";
  }
  protected:
  explicit MsgDBCommonKV(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKFieldNumber = 1,
    kVFieldNumber = 2,
  };
  // int32 k = 1;
  void clear_k();
  ::PROTOBUF_NAMESPACE_ID::int32 k() const;
  void set_k(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_k() const;
  void _internal_set_k(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 v = 2;
  void clear_v();
  ::PROTOBUF_NAMESPACE_ID::int32 v() const;
  void set_v(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_v() const;
  void _internal_set_v(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBCommonKV)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 k_;
  ::PROTOBUF_NAMESPACE_ID::int32 v_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBUpdateOnlineNum PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBUpdateOnlineNum) */ {
 public:
  inline MsgDBUpdateOnlineNum() : MsgDBUpdateOnlineNum(nullptr) {}
  virtual ~MsgDBUpdateOnlineNum();

  MsgDBUpdateOnlineNum(const MsgDBUpdateOnlineNum& from);
  MsgDBUpdateOnlineNum(MsgDBUpdateOnlineNum&& from) noexcept
    : MsgDBUpdateOnlineNum() {
    *this = ::std::move(from);
  }

  inline MsgDBUpdateOnlineNum& operator=(const MsgDBUpdateOnlineNum& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBUpdateOnlineNum& operator=(MsgDBUpdateOnlineNum&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBUpdateOnlineNum& default_instance();

  static inline const MsgDBUpdateOnlineNum* internal_default_instance() {
    return reinterpret_cast<const MsgDBUpdateOnlineNum*>(
               &_MsgDBUpdateOnlineNum_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MsgDBUpdateOnlineNum& a, MsgDBUpdateOnlineNum& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBUpdateOnlineNum* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBUpdateOnlineNum* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBUpdateOnlineNum* New() const final {
    return CreateMaybeMessage<MsgDBUpdateOnlineNum>(nullptr);
  }

  MsgDBUpdateOnlineNum* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBUpdateOnlineNum>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBUpdateOnlineNum& from);
  void MergeFrom(const MsgDBUpdateOnlineNum& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBUpdateOnlineNum* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBUpdateOnlineNum";
  }
  protected:
  explicit MsgDBUpdateOnlineNum(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerIdFieldNumber = 1,
    kPortFieldNumber = 2,
    kOnlineNumFieldNumber = 3,
  };
  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 port = 2;
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::int32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 online_num = 3;
  void clear_online_num();
  ::PROTOBUF_NAMESPACE_ID::int32 online_num() const;
  void set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_online_num() const;
  void _internal_set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBUpdateOnlineNum)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 port_;
  ::PROTOBUF_NAMESPACE_ID::int32 online_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBRegisterLogin PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBRegisterLogin) */ {
 public:
  inline MsgDBRegisterLogin() : MsgDBRegisterLogin(nullptr) {}
  virtual ~MsgDBRegisterLogin();

  MsgDBRegisterLogin(const MsgDBRegisterLogin& from);
  MsgDBRegisterLogin(MsgDBRegisterLogin&& from) noexcept
    : MsgDBRegisterLogin() {
    *this = ::std::move(from);
  }

  inline MsgDBRegisterLogin& operator=(const MsgDBRegisterLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBRegisterLogin& operator=(MsgDBRegisterLogin&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBRegisterLogin& default_instance();

  static inline const MsgDBRegisterLogin* internal_default_instance() {
    return reinterpret_cast<const MsgDBRegisterLogin*>(
               &_MsgDBRegisterLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MsgDBRegisterLogin& a, MsgDBRegisterLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBRegisterLogin* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBRegisterLogin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBRegisterLogin* New() const final {
    return CreateMaybeMessage<MsgDBRegisterLogin>(nullptr);
  }

  MsgDBRegisterLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBRegisterLogin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBRegisterLogin& from);
  void MergeFrom(const MsgDBRegisterLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBRegisterLogin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBRegisterLogin";
  }
  protected:
  explicit MsgDBRegisterLogin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerIdFieldNumber = 1,
    kPortFieldNumber = 2,
  };
  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 port = 2;
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::int32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBRegisterLogin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 port_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgPlayerAttribute PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPlayerAttribute) */ {
 public:
  inline MsgPlayerAttribute() : MsgPlayerAttribute(nullptr) {}
  virtual ~MsgPlayerAttribute();

  MsgPlayerAttribute(const MsgPlayerAttribute& from);
  MsgPlayerAttribute(MsgPlayerAttribute&& from) noexcept
    : MsgPlayerAttribute() {
    *this = ::std::move(from);
  }

  inline MsgPlayerAttribute& operator=(const MsgPlayerAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPlayerAttribute& operator=(MsgPlayerAttribute&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPlayerAttribute& default_instance();

  static inline const MsgPlayerAttribute* internal_default_instance() {
    return reinterpret_cast<const MsgPlayerAttribute*>(
               &_MsgPlayerAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MsgPlayerAttribute& a, MsgPlayerAttribute& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPlayerAttribute* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPlayerAttribute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPlayerAttribute* New() const final {
    return CreateMaybeMessage<MsgPlayerAttribute>(nullptr);
  }

  MsgPlayerAttribute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPlayerAttribute>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPlayerAttribute& from);
  void MergeFrom(const MsgPlayerAttribute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPlayerAttribute* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPlayerAttribute";
  }
  protected:
  explicit MsgPlayerAttribute(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 4,
    kNicknameFieldNumber = 8,
    kUserIdFieldNumber = 1,
    kBeautifulIdFieldNumber = 2,
    kCoinFieldNumber = 5,
    kUserTypeFieldNumber = 3,
    kHeadIdFieldNumber = 7,
  };
  // string phone = 4;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string nickname = 8;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 beautiful_id = 2;
  void clear_beautiful_id();
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id() const;
  void set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_beautiful_id() const;
  void _internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 coin = 5;
  void clear_coin();
  ::PROTOBUF_NAMESPACE_ID::int64 coin() const;
  void set_coin(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_coin() const;
  void _internal_set_coin(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 user_type = 3;
  void clear_user_type();
  ::PROTOBUF_NAMESPACE_ID::int32 user_type() const;
  void set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_type() const;
  void _internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 head_id = 7;
  void clear_head_id();
  ::PROTOBUF_NAMESPACE_ID::int32 head_id() const;
  void set_head_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_head_id() const;
  void _internal_set_head_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgPlayerAttribute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 coin_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 head_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgLoginPlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgLoginPlayerInfo) */ {
 public:
  inline MsgLoginPlayerInfo() : MsgLoginPlayerInfo(nullptr) {}
  virtual ~MsgLoginPlayerInfo();

  MsgLoginPlayerInfo(const MsgLoginPlayerInfo& from);
  MsgLoginPlayerInfo(MsgLoginPlayerInfo&& from) noexcept
    : MsgLoginPlayerInfo() {
    *this = ::std::move(from);
  }

  inline MsgLoginPlayerInfo& operator=(const MsgLoginPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgLoginPlayerInfo& operator=(MsgLoginPlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgLoginPlayerInfo& default_instance();

  static inline const MsgLoginPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const MsgLoginPlayerInfo*>(
               &_MsgLoginPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MsgLoginPlayerInfo& a, MsgLoginPlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgLoginPlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgLoginPlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginPlayerInfo* New() const final {
    return CreateMaybeMessage<MsgLoginPlayerInfo>(nullptr);
  }

  MsgLoginPlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginPlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgLoginPlayerInfo& from);
  void MergeFrom(const MsgLoginPlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginPlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgLoginPlayerInfo";
  }
  protected:
  explicit MsgLoginPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountFieldNumber = 4,
    kNicknameFieldNumber = 5,
    kAvatarFieldNumber = 6,
    kPhoneNumFieldNumber = 11,
    kPasswordFieldNumber = 12,
    kInviteCodeFieldNumber = 18,
    kSignatureFieldNumber = 19,
    kWhatsupMsgFieldNumber = 21,
    kTelegramMsgFieldNumber = 22,
    kFacebookMsgFieldNumber = 23,
    kIpInfoFieldNumber = 26,
    kLongitudeFieldNumber = 27,
    kLatitudeFieldNumber = 28,
    kResCodeFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kBeautifulIdFieldNumber = 3,
    kUserTypeFieldNumber = 8,
    kCoinFieldNumber = 10,
    kIsDrainFieldNumber = 9,
    kVipLevelFieldNumber = 13,
    kAvatarFrameFieldNumber = 14,
    kChannelIdFieldNumber = 15,
    kFirstRechargeFieldNumber = 7,
    kFristLoginFieldNumber = 29,
    kAgentLevelFieldNumber = 20,
    kNewInviterFieldNumber = 24,
    kBindIdFieldNumber = 25,
    kAgentTypeFieldNumber = 30,
    kServerIdFieldNumber = 31,
    kKindIdFieldNumber = 32,
    kRegisterGoldFieldNumber = 33,
  };
  // string account = 4;
  void clear_account();
  const std::string& account() const;
  void set_account(const std::string& value);
  void set_account(std::string&& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  std::string* mutable_account();
  std::string* release_account();
  void set_allocated_account(std::string* account);
  private:
  const std::string& _internal_account() const;
  void _internal_set_account(const std::string& value);
  std::string* _internal_mutable_account();
  public:

  // string nickname = 5;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // string avatar = 6;
  void clear_avatar();
  const std::string& avatar() const;
  void set_avatar(const std::string& value);
  void set_avatar(std::string&& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  std::string* mutable_avatar();
  std::string* release_avatar();
  void set_allocated_avatar(std::string* avatar);
  private:
  const std::string& _internal_avatar() const;
  void _internal_set_avatar(const std::string& value);
  std::string* _internal_mutable_avatar();
  public:

  // string phone_num = 11;
  void clear_phone_num();
  const std::string& phone_num() const;
  void set_phone_num(const std::string& value);
  void set_phone_num(std::string&& value);
  void set_phone_num(const char* value);
  void set_phone_num(const char* value, size_t size);
  std::string* mutable_phone_num();
  std::string* release_phone_num();
  void set_allocated_phone_num(std::string* phone_num);
  private:
  const std::string& _internal_phone_num() const;
  void _internal_set_phone_num(const std::string& value);
  std::string* _internal_mutable_phone_num();
  public:

  // string password = 12;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // string invite_code = 18;
  void clear_invite_code();
  const std::string& invite_code() const;
  void set_invite_code(const std::string& value);
  void set_invite_code(std::string&& value);
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  std::string* mutable_invite_code();
  std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // string signature = 19;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // string whatsup_msg = 21;
  void clear_whatsup_msg();
  const std::string& whatsup_msg() const;
  void set_whatsup_msg(const std::string& value);
  void set_whatsup_msg(std::string&& value);
  void set_whatsup_msg(const char* value);
  void set_whatsup_msg(const char* value, size_t size);
  std::string* mutable_whatsup_msg();
  std::string* release_whatsup_msg();
  void set_allocated_whatsup_msg(std::string* whatsup_msg);
  private:
  const std::string& _internal_whatsup_msg() const;
  void _internal_set_whatsup_msg(const std::string& value);
  std::string* _internal_mutable_whatsup_msg();
  public:

  // string telegram_msg = 22;
  void clear_telegram_msg();
  const std::string& telegram_msg() const;
  void set_telegram_msg(const std::string& value);
  void set_telegram_msg(std::string&& value);
  void set_telegram_msg(const char* value);
  void set_telegram_msg(const char* value, size_t size);
  std::string* mutable_telegram_msg();
  std::string* release_telegram_msg();
  void set_allocated_telegram_msg(std::string* telegram_msg);
  private:
  const std::string& _internal_telegram_msg() const;
  void _internal_set_telegram_msg(const std::string& value);
  std::string* _internal_mutable_telegram_msg();
  public:

  // string facebook_msg = 23;
  void clear_facebook_msg();
  const std::string& facebook_msg() const;
  void set_facebook_msg(const std::string& value);
  void set_facebook_msg(std::string&& value);
  void set_facebook_msg(const char* value);
  void set_facebook_msg(const char* value, size_t size);
  std::string* mutable_facebook_msg();
  std::string* release_facebook_msg();
  void set_allocated_facebook_msg(std::string* facebook_msg);
  private:
  const std::string& _internal_facebook_msg() const;
  void _internal_set_facebook_msg(const std::string& value);
  std::string* _internal_mutable_facebook_msg();
  public:

  // string ip_info = 26;
  void clear_ip_info();
  const std::string& ip_info() const;
  void set_ip_info(const std::string& value);
  void set_ip_info(std::string&& value);
  void set_ip_info(const char* value);
  void set_ip_info(const char* value, size_t size);
  std::string* mutable_ip_info();
  std::string* release_ip_info();
  void set_allocated_ip_info(std::string* ip_info);
  private:
  const std::string& _internal_ip_info() const;
  void _internal_set_ip_info(const std::string& value);
  std::string* _internal_mutable_ip_info();
  public:

  // string longitude = 27;
  void clear_longitude();
  const std::string& longitude() const;
  void set_longitude(const std::string& value);
  void set_longitude(std::string&& value);
  void set_longitude(const char* value);
  void set_longitude(const char* value, size_t size);
  std::string* mutable_longitude();
  std::string* release_longitude();
  void set_allocated_longitude(std::string* longitude);
  private:
  const std::string& _internal_longitude() const;
  void _internal_set_longitude(const std::string& value);
  std::string* _internal_mutable_longitude();
  public:

  // string latitude = 28;
  void clear_latitude();
  const std::string& latitude() const;
  void set_latitude(const std::string& value);
  void set_latitude(std::string&& value);
  void set_latitude(const char* value);
  void set_latitude(const char* value, size_t size);
  std::string* mutable_latitude();
  std::string* release_latitude();
  void set_allocated_latitude(std::string* latitude);
  private:
  const std::string& _internal_latitude() const;
  void _internal_set_latitude(const std::string& value);
  std::string* _internal_mutable_latitude();
  public:

  // int32 res_code = 1;
  void clear_res_code();
  ::PROTOBUF_NAMESPACE_ID::int32 res_code() const;
  void set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_code() const;
  void _internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 beautiful_id = 3;
  void clear_beautiful_id();
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id() const;
  void set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_beautiful_id() const;
  void _internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_type = 8;
  void clear_user_type();
  ::PROTOBUF_NAMESPACE_ID::int32 user_type() const;
  void set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_type() const;
  void _internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 coin = 10;
  void clear_coin();
  ::PROTOBUF_NAMESPACE_ID::uint64 coin() const;
  void set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_coin() const;
  void _internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 is_drain = 9;
  void clear_is_drain();
  ::PROTOBUF_NAMESPACE_ID::int32 is_drain() const;
  void set_is_drain(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_drain() const;
  void _internal_set_is_drain(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 vip_level = 13;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 avatar_frame = 14;
  void clear_avatar_frame();
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame() const;
  void set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatar_frame() const;
  void _internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 channel_id = 15;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::int32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool first_recharge = 7;
  void clear_first_recharge();
  bool first_recharge() const;
  void set_first_recharge(bool value);
  private:
  bool _internal_first_recharge() const;
  void _internal_set_first_recharge(bool value);
  public:

  // bool frist_login = 29;
  void clear_frist_login();
  bool frist_login() const;
  void set_frist_login(bool value);
  private:
  bool _internal_frist_login() const;
  void _internal_set_frist_login(bool value);
  public:

  // int32 agent_level = 20;
  void clear_agent_level();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_level() const;
  void set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agent_level() const;
  void _internal_set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 new_inviter = 24;
  void clear_new_inviter();
  ::PROTOBUF_NAMESPACE_ID::int32 new_inviter() const;
  void set_new_inviter(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_new_inviter() const;
  void _internal_set_new_inviter(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bind_id = 25;
  void clear_bind_id();
  ::PROTOBUF_NAMESPACE_ID::int32 bind_id() const;
  void set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bind_id() const;
  void _internal_set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 agent_type = 30;
  void clear_agent_type();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_type() const;
  void set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agent_type() const;
  void _internal_set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 server_id = 31;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 kind_id = 32;
  void clear_kind_id();
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id() const;
  void set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind_id() const;
  void _internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 register_gold = 33;
  void clear_register_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 register_gold() const;
  void set_register_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_register_gold() const;
  void _internal_set_register_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgLoginPlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_num_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr whatsup_msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr telegram_msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr facebook_msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ip_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr longitude_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr latitude_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_type_;
  ::PROTOBUF_NAMESPACE_ID::uint64 coin_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_drain_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame_;
  ::PROTOBUF_NAMESPACE_ID::int32 channel_id_;
  bool first_recharge_;
  bool frist_login_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 new_inviter_;
  ::PROTOBUF_NAMESPACE_ID::int32 bind_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 register_gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBLoginOut PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBLoginOut) */ {
 public:
  inline MsgDBLoginOut() : MsgDBLoginOut(nullptr) {}
  virtual ~MsgDBLoginOut();

  MsgDBLoginOut(const MsgDBLoginOut& from);
  MsgDBLoginOut(MsgDBLoginOut&& from) noexcept
    : MsgDBLoginOut() {
    *this = ::std::move(from);
  }

  inline MsgDBLoginOut& operator=(const MsgDBLoginOut& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBLoginOut& operator=(MsgDBLoginOut&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBLoginOut& default_instance();

  static inline const MsgDBLoginOut* internal_default_instance() {
    return reinterpret_cast<const MsgDBLoginOut*>(
               &_MsgDBLoginOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MsgDBLoginOut& a, MsgDBLoginOut& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBLoginOut* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBLoginOut* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBLoginOut* New() const final {
    return CreateMaybeMessage<MsgDBLoginOut>(nullptr);
  }

  MsgDBLoginOut* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBLoginOut>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBLoginOut& from);
  void MergeFrom(const MsgDBLoginOut& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBLoginOut* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBLoginOut";
  }
  protected:
  explicit MsgDBLoginOut(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kOnlineTimeFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 online_time = 2;
  void clear_online_time();
  ::PROTOBUF_NAMESPACE_ID::int32 online_time() const;
  void set_online_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_online_time() const;
  void _internal_set_online_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBLoginOut)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 online_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBUpdatePlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBUpdatePlayerInfo) */ {
 public:
  inline MsgDBUpdatePlayerInfo() : MsgDBUpdatePlayerInfo(nullptr) {}
  virtual ~MsgDBUpdatePlayerInfo();

  MsgDBUpdatePlayerInfo(const MsgDBUpdatePlayerInfo& from);
  MsgDBUpdatePlayerInfo(MsgDBUpdatePlayerInfo&& from) noexcept
    : MsgDBUpdatePlayerInfo() {
    *this = ::std::move(from);
  }

  inline MsgDBUpdatePlayerInfo& operator=(const MsgDBUpdatePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBUpdatePlayerInfo& operator=(MsgDBUpdatePlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBUpdatePlayerInfo& default_instance();

  static inline const MsgDBUpdatePlayerInfo* internal_default_instance() {
    return reinterpret_cast<const MsgDBUpdatePlayerInfo*>(
               &_MsgDBUpdatePlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MsgDBUpdatePlayerInfo& a, MsgDBUpdatePlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBUpdatePlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBUpdatePlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBUpdatePlayerInfo* New() const final {
    return CreateMaybeMessage<MsgDBUpdatePlayerInfo>(nullptr);
  }

  MsgDBUpdatePlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBUpdatePlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBUpdatePlayerInfo& from);
  void MergeFrom(const MsgDBUpdatePlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBUpdatePlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBUpdatePlayerInfo";
  }
  protected:
  explicit MsgDBUpdatePlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 4,
    kNicknameFieldNumber = 5,
    kPasswordFieldNumber = 6,
    kUserIdFieldNumber = 1,
    kBeautifulIdFieldNumber = 2,
    kUserTypeFieldNumber = 3,
  };
  // string phone = 4;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string nickname = 5;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // string password = 6;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 beautiful_id = 2;
  void clear_beautiful_id();
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id() const;
  void set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_beautiful_id() const;
  void _internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_type = 3;
  void clear_user_type();
  ::PROTOBUF_NAMESPACE_ID::int32 user_type() const;
  void set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_type() const;
  void _internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBUpdatePlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBMailData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBMailData) */ {
 public:
  inline MsgDBMailData() : MsgDBMailData(nullptr) {}
  virtual ~MsgDBMailData();

  MsgDBMailData(const MsgDBMailData& from);
  MsgDBMailData(MsgDBMailData&& from) noexcept
    : MsgDBMailData() {
    *this = ::std::move(from);
  }

  inline MsgDBMailData& operator=(const MsgDBMailData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBMailData& operator=(MsgDBMailData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBMailData& default_instance();

  static inline const MsgDBMailData* internal_default_instance() {
    return reinterpret_cast<const MsgDBMailData*>(
               &_MsgDBMailData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MsgDBMailData& a, MsgDBMailData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBMailData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBMailData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBMailData* New() const final {
    return CreateMaybeMessage<MsgDBMailData>(nullptr);
  }

  MsgDBMailData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBMailData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBMailData& from);
  void MergeFrom(const MsgDBMailData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBMailData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBMailData";
  }
  protected:
  explicit MsgDBMailData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kMailIdFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 mail_id = 2;
  void clear_mail_id();
  ::PROTOBUF_NAMESPACE_ID::int32 mail_id() const;
  void set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mail_id() const;
  void _internal_set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBMailData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 mail_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBMail PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBMail) */ {
 public:
  inline MsgDBMail() : MsgDBMail(nullptr) {}
  virtual ~MsgDBMail();

  MsgDBMail(const MsgDBMail& from);
  MsgDBMail(MsgDBMail&& from) noexcept
    : MsgDBMail() {
    *this = ::std::move(from);
  }

  inline MsgDBMail& operator=(const MsgDBMail& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBMail& operator=(MsgDBMail&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBMail& default_instance();

  static inline const MsgDBMail* internal_default_instance() {
    return reinterpret_cast<const MsgDBMail*>(
               &_MsgDBMail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MsgDBMail& a, MsgDBMail& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBMail* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBMail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBMail* New() const final {
    return CreateMaybeMessage<MsgDBMail>(nullptr);
  }

  MsgDBMail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBMail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBMail& from);
  void MergeFrom(const MsgDBMail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBMail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBMail";
  }
  protected:
  explicit MsgDBMail(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailTitleFieldNumber = 5,
    kMailContentFieldNumber = 6,
    kMailGuidFieldNumber = 1,
    kMailIdFieldNumber = 2,
    kSenderIdFieldNumber = 3,
    kRecverBeautifulIdFieldNumber = 4,
    kGoldFieldNumber = 7,
    kSendTimeFieldNumber = 8,
    kIsCustomFieldNumber = 9,
  };
  // string mail_title = 5;
  void clear_mail_title();
  const std::string& mail_title() const;
  void set_mail_title(const std::string& value);
  void set_mail_title(std::string&& value);
  void set_mail_title(const char* value);
  void set_mail_title(const char* value, size_t size);
  std::string* mutable_mail_title();
  std::string* release_mail_title();
  void set_allocated_mail_title(std::string* mail_title);
  private:
  const std::string& _internal_mail_title() const;
  void _internal_set_mail_title(const std::string& value);
  std::string* _internal_mutable_mail_title();
  public:

  // string mail_content = 6;
  void clear_mail_content();
  const std::string& mail_content() const;
  void set_mail_content(const std::string& value);
  void set_mail_content(std::string&& value);
  void set_mail_content(const char* value);
  void set_mail_content(const char* value, size_t size);
  std::string* mutable_mail_content();
  std::string* release_mail_content();
  void set_allocated_mail_content(std::string* mail_content);
  private:
  const std::string& _internal_mail_content() const;
  void _internal_set_mail_content(const std::string& value);
  std::string* _internal_mutable_mail_content();
  public:

  // int32 mail_guid = 1;
  void clear_mail_guid();
  ::PROTOBUF_NAMESPACE_ID::int32 mail_guid() const;
  void set_mail_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mail_guid() const;
  void _internal_set_mail_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 mail_id = 2;
  void clear_mail_id();
  ::PROTOBUF_NAMESPACE_ID::int32 mail_id() const;
  void set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mail_id() const;
  void _internal_set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sender_id = 3;
  void clear_sender_id();
  ::PROTOBUF_NAMESPACE_ID::int32 sender_id() const;
  void set_sender_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sender_id() const;
  void _internal_set_sender_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 recver_beautiful_id = 4;
  void clear_recver_beautiful_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recver_beautiful_id() const;
  void set_recver_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recver_beautiful_id() const;
  void _internal_set_recver_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 gold = 7;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 send_time = 8;
  void clear_send_time();
  ::PROTOBUF_NAMESPACE_ID::int64 send_time() const;
  void set_send_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_send_time() const;
  void _internal_set_send_time(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 is_custom = 9;
  void clear_is_custom();
  ::PROTOBUF_NAMESPACE_ID::int32 is_custom() const;
  void set_is_custom(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_custom() const;
  void _internal_set_is_custom(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBMail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mail_title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mail_content_;
  ::PROTOBUF_NAMESPACE_ID::int32 mail_guid_;
  ::PROTOBUF_NAMESPACE_ID::int32 mail_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 sender_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 recver_beautiful_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 send_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_custom_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBRegisterGame PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBRegisterGame) */ {
 public:
  inline MsgDBRegisterGame() : MsgDBRegisterGame(nullptr) {}
  virtual ~MsgDBRegisterGame();

  MsgDBRegisterGame(const MsgDBRegisterGame& from);
  MsgDBRegisterGame(MsgDBRegisterGame&& from) noexcept
    : MsgDBRegisterGame() {
    *this = ::std::move(from);
  }

  inline MsgDBRegisterGame& operator=(const MsgDBRegisterGame& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBRegisterGame& operator=(MsgDBRegisterGame&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBRegisterGame& default_instance();

  static inline const MsgDBRegisterGame* internal_default_instance() {
    return reinterpret_cast<const MsgDBRegisterGame*>(
               &_MsgDBRegisterGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MsgDBRegisterGame& a, MsgDBRegisterGame& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBRegisterGame* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBRegisterGame* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBRegisterGame* New() const final {
    return CreateMaybeMessage<MsgDBRegisterGame>(nullptr);
  }

  MsgDBRegisterGame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBRegisterGame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBRegisterGame& from);
  void MergeFrom(const MsgDBRegisterGame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBRegisterGame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBRegisterGame";
  }
  protected:
  explicit MsgDBRegisterGame(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerNameFieldNumber = 2,
    kServerIdFieldNumber = 1,
  };
  // string server_name = 2;
  void clear_server_name();
  const std::string& server_name() const;
  void set_server_name(const std::string& value);
  void set_server_name(std::string&& value);
  void set_server_name(const char* value);
  void set_server_name(const char* value, size_t size);
  std::string* mutable_server_name();
  std::string* release_server_name();
  void set_allocated_server_name(std::string* server_name);
  private:
  const std::string& _internal_server_name() const;
  void _internal_set_server_name(const std::string& value);
  std::string* _internal_mutable_server_name();
  public:

  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBRegisterGame)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr server_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBLoadRobotInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBLoadRobotInfo) */ {
 public:
  inline MsgDBLoadRobotInfo() : MsgDBLoadRobotInfo(nullptr) {}
  virtual ~MsgDBLoadRobotInfo();

  MsgDBLoadRobotInfo(const MsgDBLoadRobotInfo& from);
  MsgDBLoadRobotInfo(MsgDBLoadRobotInfo&& from) noexcept
    : MsgDBLoadRobotInfo() {
    *this = ::std::move(from);
  }

  inline MsgDBLoadRobotInfo& operator=(const MsgDBLoadRobotInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBLoadRobotInfo& operator=(MsgDBLoadRobotInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBLoadRobotInfo& default_instance();

  static inline const MsgDBLoadRobotInfo* internal_default_instance() {
    return reinterpret_cast<const MsgDBLoadRobotInfo*>(
               &_MsgDBLoadRobotInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(MsgDBLoadRobotInfo& a, MsgDBLoadRobotInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBLoadRobotInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBLoadRobotInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBLoadRobotInfo* New() const final {
    return CreateMaybeMessage<MsgDBLoadRobotInfo>(nullptr);
  }

  MsgDBLoadRobotInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBLoadRobotInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBLoadRobotInfo& from);
  void MergeFrom(const MsgDBLoadRobotInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBLoadRobotInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBLoadRobotInfo";
  }
  protected:
  explicit MsgDBLoadRobotInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kVipLevelFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 vip_level = 2;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBLoadRobotInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBLoadRobot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBLoadRobot) */ {
 public:
  inline MsgDBLoadRobot() : MsgDBLoadRobot(nullptr) {}
  virtual ~MsgDBLoadRobot();

  MsgDBLoadRobot(const MsgDBLoadRobot& from);
  MsgDBLoadRobot(MsgDBLoadRobot&& from) noexcept
    : MsgDBLoadRobot() {
    *this = ::std::move(from);
  }

  inline MsgDBLoadRobot& operator=(const MsgDBLoadRobot& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBLoadRobot& operator=(MsgDBLoadRobot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBLoadRobot& default_instance();

  static inline const MsgDBLoadRobot* internal_default_instance() {
    return reinterpret_cast<const MsgDBLoadRobot*>(
               &_MsgDBLoadRobot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MsgDBLoadRobot& a, MsgDBLoadRobot& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBLoadRobot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBLoadRobot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBLoadRobot* New() const final {
    return CreateMaybeMessage<MsgDBLoadRobot>(nullptr);
  }

  MsgDBLoadRobot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBLoadRobot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBLoadRobot& from);
  void MergeFrom(const MsgDBLoadRobot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBLoadRobot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBLoadRobot";
  }
  protected:
  explicit MsgDBLoadRobot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // repeated .MsgDBLoadRobotInfo info = 1;
  int info_size() const;
  private:
  int _internal_info_size() const;
  public:
  void clear_info();
  ::MsgDBLoadRobotInfo* mutable_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgDBLoadRobotInfo >*
      mutable_info();
  private:
  const ::MsgDBLoadRobotInfo& _internal_info(int index) const;
  ::MsgDBLoadRobotInfo* _internal_add_info();
  public:
  const ::MsgDBLoadRobotInfo& info(int index) const;
  ::MsgDBLoadRobotInfo* add_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgDBLoadRobotInfo >&
      info() const;

  // @@protoc_insertion_point(class_scope:MsgDBLoadRobot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgDBLoadRobotInfo > info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBGamePlayerLogin PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBGamePlayerLogin) */ {
 public:
  inline MsgDBGamePlayerLogin() : MsgDBGamePlayerLogin(nullptr) {}
  virtual ~MsgDBGamePlayerLogin();

  MsgDBGamePlayerLogin(const MsgDBGamePlayerLogin& from);
  MsgDBGamePlayerLogin(MsgDBGamePlayerLogin&& from) noexcept
    : MsgDBGamePlayerLogin() {
    *this = ::std::move(from);
  }

  inline MsgDBGamePlayerLogin& operator=(const MsgDBGamePlayerLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBGamePlayerLogin& operator=(MsgDBGamePlayerLogin&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBGamePlayerLogin& default_instance();

  static inline const MsgDBGamePlayerLogin* internal_default_instance() {
    return reinterpret_cast<const MsgDBGamePlayerLogin*>(
               &_MsgDBGamePlayerLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(MsgDBGamePlayerLogin& a, MsgDBGamePlayerLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBGamePlayerLogin* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBGamePlayerLogin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBGamePlayerLogin* New() const final {
    return CreateMaybeMessage<MsgDBGamePlayerLogin>(nullptr);
  }

  MsgDBGamePlayerLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBGamePlayerLogin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBGamePlayerLogin& from);
  void MergeFrom(const MsgDBGamePlayerLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBGamePlayerLogin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBGamePlayerLogin";
  }
  protected:
  explicit MsgDBGamePlayerLogin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 2,
    kIpFieldNumber = 3,
    kLongitudeFieldNumber = 4,
    kLatitudeFieldNumber = 5,
    kUserIdFieldNumber = 1,
  };
  // string password = 2;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // string ip = 3;
  void clear_ip();
  const std::string& ip() const;
  void set_ip(const std::string& value);
  void set_ip(std::string&& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  std::string* mutable_ip();
  std::string* release_ip();
  void set_allocated_ip(std::string* ip);
  private:
  const std::string& _internal_ip() const;
  void _internal_set_ip(const std::string& value);
  std::string* _internal_mutable_ip();
  public:

  // string longitude = 4;
  void clear_longitude();
  const std::string& longitude() const;
  void set_longitude(const std::string& value);
  void set_longitude(std::string&& value);
  void set_longitude(const char* value);
  void set_longitude(const char* value, size_t size);
  std::string* mutable_longitude();
  std::string* release_longitude();
  void set_allocated_longitude(std::string* longitude);
  private:
  const std::string& _internal_longitude() const;
  void _internal_set_longitude(const std::string& value);
  std::string* _internal_mutable_longitude();
  public:

  // string latitude = 5;
  void clear_latitude();
  const std::string& latitude() const;
  void set_latitude(const std::string& value);
  void set_latitude(std::string&& value);
  void set_latitude(const char* value);
  void set_latitude(const char* value, size_t size);
  std::string* mutable_latitude();
  std::string* release_latitude();
  void set_allocated_latitude(std::string* latitude);
  private:
  const std::string& _internal_latitude() const;
  void _internal_set_latitude(const std::string& value);
  std::string* _internal_mutable_latitude();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBGamePlayerLogin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr longitude_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr latitude_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBPlayerReconnectData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBPlayerReconnectData) */ {
 public:
  inline MsgDBPlayerReconnectData() : MsgDBPlayerReconnectData(nullptr) {}
  virtual ~MsgDBPlayerReconnectData();

  MsgDBPlayerReconnectData(const MsgDBPlayerReconnectData& from);
  MsgDBPlayerReconnectData(MsgDBPlayerReconnectData&& from) noexcept
    : MsgDBPlayerReconnectData() {
    *this = ::std::move(from);
  }

  inline MsgDBPlayerReconnectData& operator=(const MsgDBPlayerReconnectData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBPlayerReconnectData& operator=(MsgDBPlayerReconnectData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBPlayerReconnectData& default_instance();

  static inline const MsgDBPlayerReconnectData* internal_default_instance() {
    return reinterpret_cast<const MsgDBPlayerReconnectData*>(
               &_MsgDBPlayerReconnectData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MsgDBPlayerReconnectData& a, MsgDBPlayerReconnectData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBPlayerReconnectData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBPlayerReconnectData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBPlayerReconnectData* New() const final {
    return CreateMaybeMessage<MsgDBPlayerReconnectData>(nullptr);
  }

  MsgDBPlayerReconnectData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBPlayerReconnectData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBPlayerReconnectData& from);
  void MergeFrom(const MsgDBPlayerReconnectData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBPlayerReconnectData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBPlayerReconnectData";
  }
  protected:
  explicit MsgDBPlayerReconnectData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamFieldNumber = 9,
    kUserIdFieldNumber = 1,
    kServerIdFieldNumber = 2,
    kMultipleFieldNumber = 3,
    kScoreBonusFieldNumber = 4,
    kLeftFreeGameCntFieldNumber = 5,
    kSmallGameTypeFieldNumber = 6,
    kSmallGameFailCntFieldNumber = 7,
    kGameLevelFieldNumber = 8,
  };
  // repeated int32 param = 9;
  int param_size() const;
  private:
  int _internal_param_size() const;
  public:
  void clear_param();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_param() const;
  void _internal_add_param(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_param();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 param(int index) const;
  void set_param(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_param(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      param() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_param();

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 server_id = 2;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 multiple = 3;
  void clear_multiple();
  ::PROTOBUF_NAMESPACE_ID::int32 multiple() const;
  void set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_multiple() const;
  void _internal_set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 score_bonus = 4;
  void clear_score_bonus();
  ::PROTOBUF_NAMESPACE_ID::int32 score_bonus() const;
  void set_score_bonus(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_score_bonus() const;
  void _internal_set_score_bonus(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 left_free_game_cnt = 5;
  void clear_left_free_game_cnt();
  ::PROTOBUF_NAMESPACE_ID::int32 left_free_game_cnt() const;
  void set_left_free_game_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_free_game_cnt() const;
  void _internal_set_left_free_game_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 small_game_type = 6;
  void clear_small_game_type();
  ::PROTOBUF_NAMESPACE_ID::int32 small_game_type() const;
  void set_small_game_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_small_game_type() const;
  void _internal_set_small_game_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 small_game_fail_cnt = 7;
  void clear_small_game_fail_cnt();
  ::PROTOBUF_NAMESPACE_ID::int32 small_game_fail_cnt() const;
  void set_small_game_fail_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_small_game_fail_cnt() const;
  void _internal_set_small_game_fail_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 game_level = 8;
  void clear_game_level();
  ::PROTOBUF_NAMESPACE_ID::int32 game_level() const;
  void set_game_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_level() const;
  void _internal_set_game_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBPlayerReconnectData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > param_;
  mutable std::atomic<int> _param_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 multiple_;
  ::PROTOBUF_NAMESPACE_ID::int32 score_bonus_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_free_game_cnt_;
  ::PROTOBUF_NAMESPACE_ID::int32 small_game_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 small_game_fail_cnt_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBGamePlayerLoginResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBGamePlayerLoginResp) */ {
 public:
  inline MsgDBGamePlayerLoginResp() : MsgDBGamePlayerLoginResp(nullptr) {}
  virtual ~MsgDBGamePlayerLoginResp();

  MsgDBGamePlayerLoginResp(const MsgDBGamePlayerLoginResp& from);
  MsgDBGamePlayerLoginResp(MsgDBGamePlayerLoginResp&& from) noexcept
    : MsgDBGamePlayerLoginResp() {
    *this = ::std::move(from);
  }

  inline MsgDBGamePlayerLoginResp& operator=(const MsgDBGamePlayerLoginResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBGamePlayerLoginResp& operator=(MsgDBGamePlayerLoginResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBGamePlayerLoginResp& default_instance();

  static inline const MsgDBGamePlayerLoginResp* internal_default_instance() {
    return reinterpret_cast<const MsgDBGamePlayerLoginResp*>(
               &_MsgDBGamePlayerLoginResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(MsgDBGamePlayerLoginResp& a, MsgDBGamePlayerLoginResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBGamePlayerLoginResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBGamePlayerLoginResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBGamePlayerLoginResp* New() const final {
    return CreateMaybeMessage<MsgDBGamePlayerLoginResp>(nullptr);
  }

  MsgDBGamePlayerLoginResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBGamePlayerLoginResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBGamePlayerLoginResp& from);
  void MergeFrom(const MsgDBGamePlayerLoginResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBGamePlayerLoginResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBGamePlayerLoginResp";
  }
  protected:
  explicit MsgDBGamePlayerLoginResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 4,
    kAvatarFieldNumber = 5,
    kPasswordFieldNumber = 7,
    kUserIpFieldNumber = 13,
    kLongitudeFieldNumber = 14,
    kLatitudeFieldNumber = 15,
    kReconnectDataFieldNumber = 11,
    kResCodeFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kBeautifulIdFieldNumber = 3,
    kCheatRateFieldNumber = 8,
    kCoinFieldNumber = 6,
    kVipLevelFieldNumber = 9,
    kAvatarFrameFieldNumber = 10,
    kLoginServerIdFieldNumber = 12,
  };
  // string nickname = 4;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // string avatar = 5;
  void clear_avatar();
  const std::string& avatar() const;
  void set_avatar(const std::string& value);
  void set_avatar(std::string&& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  std::string* mutable_avatar();
  std::string* release_avatar();
  void set_allocated_avatar(std::string* avatar);
  private:
  const std::string& _internal_avatar() const;
  void _internal_set_avatar(const std::string& value);
  std::string* _internal_mutable_avatar();
  public:

  // string password = 7;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // string user_ip = 13;
  void clear_user_ip();
  const std::string& user_ip() const;
  void set_user_ip(const std::string& value);
  void set_user_ip(std::string&& value);
  void set_user_ip(const char* value);
  void set_user_ip(const char* value, size_t size);
  std::string* mutable_user_ip();
  std::string* release_user_ip();
  void set_allocated_user_ip(std::string* user_ip);
  private:
  const std::string& _internal_user_ip() const;
  void _internal_set_user_ip(const std::string& value);
  std::string* _internal_mutable_user_ip();
  public:

  // string longitude = 14;
  void clear_longitude();
  const std::string& longitude() const;
  void set_longitude(const std::string& value);
  void set_longitude(std::string&& value);
  void set_longitude(const char* value);
  void set_longitude(const char* value, size_t size);
  std::string* mutable_longitude();
  std::string* release_longitude();
  void set_allocated_longitude(std::string* longitude);
  private:
  const std::string& _internal_longitude() const;
  void _internal_set_longitude(const std::string& value);
  std::string* _internal_mutable_longitude();
  public:

  // string latitude = 15;
  void clear_latitude();
  const std::string& latitude() const;
  void set_latitude(const std::string& value);
  void set_latitude(std::string&& value);
  void set_latitude(const char* value);
  void set_latitude(const char* value, size_t size);
  std::string* mutable_latitude();
  std::string* release_latitude();
  void set_allocated_latitude(std::string* latitude);
  private:
  const std::string& _internal_latitude() const;
  void _internal_set_latitude(const std::string& value);
  std::string* _internal_mutable_latitude();
  public:

  // .MsgDBPlayerReconnectData reconnect_data = 11;
  bool has_reconnect_data() const;
  private:
  bool _internal_has_reconnect_data() const;
  public:
  void clear_reconnect_data();
  const ::MsgDBPlayerReconnectData& reconnect_data() const;
  ::MsgDBPlayerReconnectData* release_reconnect_data();
  ::MsgDBPlayerReconnectData* mutable_reconnect_data();
  void set_allocated_reconnect_data(::MsgDBPlayerReconnectData* reconnect_data);
  private:
  const ::MsgDBPlayerReconnectData& _internal_reconnect_data() const;
  ::MsgDBPlayerReconnectData* _internal_mutable_reconnect_data();
  public:
  void unsafe_arena_set_allocated_reconnect_data(
      ::MsgDBPlayerReconnectData* reconnect_data);
  ::MsgDBPlayerReconnectData* unsafe_arena_release_reconnect_data();

  // int32 res_code = 1;
  void clear_res_code();
  ::PROTOBUF_NAMESPACE_ID::int32 res_code() const;
  void set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_code() const;
  void _internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 beautiful_id = 3;
  void clear_beautiful_id();
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id() const;
  void set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_beautiful_id() const;
  void _internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cheat_rate = 8;
  void clear_cheat_rate();
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_rate() const;
  void set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cheat_rate() const;
  void _internal_set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 coin = 6;
  void clear_coin();
  ::PROTOBUF_NAMESPACE_ID::uint64 coin() const;
  void set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_coin() const;
  void _internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 vip_level = 9;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 avatar_frame = 10;
  void clear_avatar_frame();
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame() const;
  void set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatar_frame() const;
  void _internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 login_server_id = 12;
  void clear_login_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 login_server_id() const;
  void set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_login_server_id() const;
  void _internal_set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBGamePlayerLoginResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr longitude_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr latitude_;
  ::MsgDBPlayerReconnectData* reconnect_data_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_rate_;
  ::PROTOBUF_NAMESPACE_ID::uint64 coin_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame_;
  ::PROTOBUF_NAMESPACE_ID::int32 login_server_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBWriteScore PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBWriteScore) */ {
 public:
  inline MsgDBWriteScore() : MsgDBWriteScore(nullptr) {}
  virtual ~MsgDBWriteScore();

  MsgDBWriteScore(const MsgDBWriteScore& from);
  MsgDBWriteScore(MsgDBWriteScore&& from) noexcept
    : MsgDBWriteScore() {
    *this = ::std::move(from);
  }

  inline MsgDBWriteScore& operator=(const MsgDBWriteScore& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBWriteScore& operator=(MsgDBWriteScore&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBWriteScore& default_instance();

  static inline const MsgDBWriteScore* internal_default_instance() {
    return reinterpret_cast<const MsgDBWriteScore*>(
               &_MsgDBWriteScore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(MsgDBWriteScore& a, MsgDBWriteScore& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBWriteScore* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBWriteScore* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBWriteScore* New() const final {
    return CreateMaybeMessage<MsgDBWriteScore>(nullptr);
  }

  MsgDBWriteScore* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBWriteScore>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBWriteScore& from);
  void MergeFrom(const MsgDBWriteScore& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBWriteScore* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBWriteScore";
  }
  protected:
  explicit MsgDBWriteScore(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameDetailsFieldNumber = 9,
    kUserIdFieldNumber = 1,
    kBetFieldNumber = 2,
    kScoreFieldNumber = 3,
    kIsUpRankFieldNumber = 4,
    kTableIdFieldNumber = 5,
    kTaxScoreFieldNumber = 7,
    kTableNoFieldNumber = 6,
    kValidBetFieldNumber = 8,
  };
  // string game_details = 9;
  void clear_game_details();
  const std::string& game_details() const;
  void set_game_details(const std::string& value);
  void set_game_details(std::string&& value);
  void set_game_details(const char* value);
  void set_game_details(const char* value, size_t size);
  std::string* mutable_game_details();
  std::string* release_game_details();
  void set_allocated_game_details(std::string* game_details);
  private:
  const std::string& _internal_game_details() const;
  void _internal_set_game_details(const std::string& value);
  std::string* _internal_mutable_game_details();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet = 2;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int32 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 score = 3;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int64 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 is_up_rank = 4;
  void clear_is_up_rank();
  ::PROTOBUF_NAMESPACE_ID::int32 is_up_rank() const;
  void set_is_up_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_up_rank() const;
  void _internal_set_is_up_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 table_id = 5;
  void clear_table_id();
  ::PROTOBUF_NAMESPACE_ID::int32 table_id() const;
  void set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_id() const;
  void _internal_set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 tax_score = 7;
  void clear_tax_score();
  ::PROTOBUF_NAMESPACE_ID::int64 tax_score() const;
  void set_tax_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tax_score() const;
  void _internal_set_tax_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 table_no = 6;
  void clear_table_no();
  ::PROTOBUF_NAMESPACE_ID::int32 table_no() const;
  void set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_no() const;
  void _internal_set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 valid_bet = 8;
  void clear_valid_bet();
  ::PROTOBUF_NAMESPACE_ID::int32 valid_bet() const;
  void set_valid_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_valid_bet() const;
  void _internal_set_valid_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBWriteScore)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_details_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_;
  ::PROTOBUF_NAMESPACE_ID::int64 score_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_up_rank_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 tax_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_no_;
  ::PROTOBUF_NAMESPACE_ID::int32 valid_bet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBWriteScoreResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBWriteScoreResp) */ {
 public:
  inline MsgDBWriteScoreResp() : MsgDBWriteScoreResp(nullptr) {}
  virtual ~MsgDBWriteScoreResp();

  MsgDBWriteScoreResp(const MsgDBWriteScoreResp& from);
  MsgDBWriteScoreResp(MsgDBWriteScoreResp&& from) noexcept
    : MsgDBWriteScoreResp() {
    *this = ::std::move(from);
  }

  inline MsgDBWriteScoreResp& operator=(const MsgDBWriteScoreResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBWriteScoreResp& operator=(MsgDBWriteScoreResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBWriteScoreResp& default_instance();

  static inline const MsgDBWriteScoreResp* internal_default_instance() {
    return reinterpret_cast<const MsgDBWriteScoreResp*>(
               &_MsgDBWriteScoreResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(MsgDBWriteScoreResp& a, MsgDBWriteScoreResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBWriteScoreResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBWriteScoreResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBWriteScoreResp* New() const final {
    return CreateMaybeMessage<MsgDBWriteScoreResp>(nullptr);
  }

  MsgDBWriteScoreResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBWriteScoreResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBWriteScoreResp& from);
  void MergeFrom(const MsgDBWriteScoreResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBWriteScoreResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBWriteScoreResp";
  }
  protected:
  explicit MsgDBWriteScoreResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kPlayerCheatRateFieldNumber = 2,
    kPlayerCheatScoreFieldNumber = 3,
    kSystemCheatRateFieldNumber = 4,
    kSystemCheatScoreFieldNumber = 5,
    kSystemBloodMinLineFieldNumber = 6,
    kSystemBloodMaxLineFieldNumber = 7,
    kPlayerScoreFieldNumber = 8,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 player_cheat_rate = 2;
  void clear_player_cheat_rate();
  ::PROTOBUF_NAMESPACE_ID::int32 player_cheat_rate() const;
  void set_player_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_cheat_rate() const;
  void _internal_set_player_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 player_cheat_score = 3;
  void clear_player_cheat_score();
  ::PROTOBUF_NAMESPACE_ID::int32 player_cheat_score() const;
  void set_player_cheat_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_cheat_score() const;
  void _internal_set_player_cheat_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 system_cheat_rate = 4;
  void clear_system_cheat_rate();
  ::PROTOBUF_NAMESPACE_ID::int32 system_cheat_rate() const;
  void set_system_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_system_cheat_rate() const;
  void _internal_set_system_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 system_cheat_score = 5;
  void clear_system_cheat_score();
  ::PROTOBUF_NAMESPACE_ID::int64 system_cheat_score() const;
  void set_system_cheat_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_system_cheat_score() const;
  void _internal_set_system_cheat_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 system_blood_min_line = 6;
  void clear_system_blood_min_line();
  ::PROTOBUF_NAMESPACE_ID::int64 system_blood_min_line() const;
  void set_system_blood_min_line(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_system_blood_min_line() const;
  void _internal_set_system_blood_min_line(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 system_blood_max_line = 7;
  void clear_system_blood_max_line();
  ::PROTOBUF_NAMESPACE_ID::int64 system_blood_max_line() const;
  void set_system_blood_max_line(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_system_blood_max_line() const;
  void _internal_set_system_blood_max_line(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 player_score = 8;
  void clear_player_score();
  ::PROTOBUF_NAMESPACE_ID::int64 player_score() const;
  void set_player_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_score() const;
  void _internal_set_player_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBWriteScoreResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_cheat_rate_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_cheat_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 system_cheat_rate_;
  ::PROTOBUF_NAMESPACE_ID::int64 system_cheat_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 system_blood_min_line_;
  ::PROTOBUF_NAMESPACE_ID::int64 system_blood_max_line_;
  ::PROTOBUF_NAMESPACE_ID::int64 player_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBFingerGuessWriteScore PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBFingerGuessWriteScore) */ {
 public:
  inline MsgDBFingerGuessWriteScore() : MsgDBFingerGuessWriteScore(nullptr) {}
  virtual ~MsgDBFingerGuessWriteScore();

  MsgDBFingerGuessWriteScore(const MsgDBFingerGuessWriteScore& from);
  MsgDBFingerGuessWriteScore(MsgDBFingerGuessWriteScore&& from) noexcept
    : MsgDBFingerGuessWriteScore() {
    *this = ::std::move(from);
  }

  inline MsgDBFingerGuessWriteScore& operator=(const MsgDBFingerGuessWriteScore& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBFingerGuessWriteScore& operator=(MsgDBFingerGuessWriteScore&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBFingerGuessWriteScore& default_instance();

  static inline const MsgDBFingerGuessWriteScore* internal_default_instance() {
    return reinterpret_cast<const MsgDBFingerGuessWriteScore*>(
               &_MsgDBFingerGuessWriteScore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(MsgDBFingerGuessWriteScore& a, MsgDBFingerGuessWriteScore& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBFingerGuessWriteScore* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBFingerGuessWriteScore* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBFingerGuessWriteScore* New() const final {
    return CreateMaybeMessage<MsgDBFingerGuessWriteScore>(nullptr);
  }

  MsgDBFingerGuessWriteScore* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBFingerGuessWriteScore>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBFingerGuessWriteScore& from);
  void MergeFrom(const MsgDBFingerGuessWriteScore& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBFingerGuessWriteScore* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBFingerGuessWriteScore";
  }
  protected:
  explicit MsgDBFingerGuessWriteScore(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBankerUserIdFieldNumber = 1,
    kPlayerUserIdFieldNumber = 2,
    kBetFieldNumber = 4,
    kResultFieldNumber = 3,
  };
  // int32 banker_user_id = 1;
  void clear_banker_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_user_id() const;
  void set_banker_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_user_id() const;
  void _internal_set_banker_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 player_user_id = 2;
  void clear_player_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_user_id() const;
  void set_player_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_user_id() const;
  void _internal_set_player_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 bet = 4;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 result = 3;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBFingerGuessWriteScore)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBFingerGuessWriteScoreResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBFingerGuessWriteScoreResp) */ {
 public:
  inline MsgDBFingerGuessWriteScoreResp() : MsgDBFingerGuessWriteScoreResp(nullptr) {}
  virtual ~MsgDBFingerGuessWriteScoreResp();

  MsgDBFingerGuessWriteScoreResp(const MsgDBFingerGuessWriteScoreResp& from);
  MsgDBFingerGuessWriteScoreResp(MsgDBFingerGuessWriteScoreResp&& from) noexcept
    : MsgDBFingerGuessWriteScoreResp() {
    *this = ::std::move(from);
  }

  inline MsgDBFingerGuessWriteScoreResp& operator=(const MsgDBFingerGuessWriteScoreResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBFingerGuessWriteScoreResp& operator=(MsgDBFingerGuessWriteScoreResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBFingerGuessWriteScoreResp& default_instance();

  static inline const MsgDBFingerGuessWriteScoreResp* internal_default_instance() {
    return reinterpret_cast<const MsgDBFingerGuessWriteScoreResp*>(
               &_MsgDBFingerGuessWriteScoreResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(MsgDBFingerGuessWriteScoreResp& a, MsgDBFingerGuessWriteScoreResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBFingerGuessWriteScoreResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBFingerGuessWriteScoreResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBFingerGuessWriteScoreResp* New() const final {
    return CreateMaybeMessage<MsgDBFingerGuessWriteScoreResp>(nullptr);
  }

  MsgDBFingerGuessWriteScoreResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBFingerGuessWriteScoreResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBFingerGuessWriteScoreResp& from);
  void MergeFrom(const MsgDBFingerGuessWriteScoreResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBFingerGuessWriteScoreResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBFingerGuessWriteScoreResp";
  }
  protected:
  explicit MsgDBFingerGuessWriteScoreResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinUserIdFieldNumber = 1,
    kLoseUserIdFieldNumber = 2,
    kWinUserGoldFieldNumber = 3,
    kLoseUserGoldFieldNumber = 4,
    kTimeFieldNumber = 5,
    kResultFieldNumber = 6,
    kBetFieldNumber = 7,
  };
  // int32 win_user_id = 1;
  void clear_win_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 win_user_id() const;
  void set_win_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_win_user_id() const;
  void _internal_set_win_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 lose_user_id = 2;
  void clear_lose_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 lose_user_id() const;
  void set_lose_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lose_user_id() const;
  void _internal_set_lose_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 win_user_gold = 3;
  void clear_win_user_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_user_gold() const;
  void set_win_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_user_gold() const;
  void _internal_set_win_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 lose_user_gold = 4;
  void clear_lose_user_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 lose_user_gold() const;
  void set_lose_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_lose_user_gold() const;
  void _internal_set_lose_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 time = 5;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::int32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 result = 6;
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::int32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 bet = 7;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBFingerGuessWriteScoreResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 win_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 lose_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_user_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 lose_user_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 time_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBFingerGuessQueryRecord PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBFingerGuessQueryRecord) */ {
 public:
  inline MsgDBFingerGuessQueryRecord() : MsgDBFingerGuessQueryRecord(nullptr) {}
  virtual ~MsgDBFingerGuessQueryRecord();

  MsgDBFingerGuessQueryRecord(const MsgDBFingerGuessQueryRecord& from);
  MsgDBFingerGuessQueryRecord(MsgDBFingerGuessQueryRecord&& from) noexcept
    : MsgDBFingerGuessQueryRecord() {
    *this = ::std::move(from);
  }

  inline MsgDBFingerGuessQueryRecord& operator=(const MsgDBFingerGuessQueryRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBFingerGuessQueryRecord& operator=(MsgDBFingerGuessQueryRecord&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBFingerGuessQueryRecord& default_instance();

  static inline const MsgDBFingerGuessQueryRecord* internal_default_instance() {
    return reinterpret_cast<const MsgDBFingerGuessQueryRecord*>(
               &_MsgDBFingerGuessQueryRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(MsgDBFingerGuessQueryRecord& a, MsgDBFingerGuessQueryRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBFingerGuessQueryRecord* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBFingerGuessQueryRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBFingerGuessQueryRecord* New() const final {
    return CreateMaybeMessage<MsgDBFingerGuessQueryRecord>(nullptr);
  }

  MsgDBFingerGuessQueryRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBFingerGuessQueryRecord>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBFingerGuessQueryRecord& from);
  void MergeFrom(const MsgDBFingerGuessQueryRecord& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBFingerGuessQueryRecord* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBFingerGuessQueryRecord";
  }
  protected:
  explicit MsgDBFingerGuessQueryRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kNumFieldNumber = 2,
    kTypeFieldNumber = 3,
    kUserIdFieldNumber = 4,
  };
  // int32 page = 1;
  void clear_page();
  ::PROTOBUF_NAMESPACE_ID::int32 page() const;
  void set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page() const;
  void _internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 num = 2;
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::int32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 4;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBFingerGuessQueryRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBModifyAvatar PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBModifyAvatar) */ {
 public:
  inline MsgDBModifyAvatar() : MsgDBModifyAvatar(nullptr) {}
  virtual ~MsgDBModifyAvatar();

  MsgDBModifyAvatar(const MsgDBModifyAvatar& from);
  MsgDBModifyAvatar(MsgDBModifyAvatar&& from) noexcept
    : MsgDBModifyAvatar() {
    *this = ::std::move(from);
  }

  inline MsgDBModifyAvatar& operator=(const MsgDBModifyAvatar& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBModifyAvatar& operator=(MsgDBModifyAvatar&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBModifyAvatar& default_instance();

  static inline const MsgDBModifyAvatar* internal_default_instance() {
    return reinterpret_cast<const MsgDBModifyAvatar*>(
               &_MsgDBModifyAvatar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(MsgDBModifyAvatar& a, MsgDBModifyAvatar& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBModifyAvatar* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBModifyAvatar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBModifyAvatar* New() const final {
    return CreateMaybeMessage<MsgDBModifyAvatar>(nullptr);
  }

  MsgDBModifyAvatar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBModifyAvatar>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBModifyAvatar& from);
  void MergeFrom(const MsgDBModifyAvatar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBModifyAvatar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBModifyAvatar";
  }
  protected:
  explicit MsgDBModifyAvatar(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string avatar = 2;
  void clear_avatar();
  const std::string& avatar() const;
  void set_avatar(const std::string& value);
  void set_avatar(std::string&& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  std::string* mutable_avatar();
  std::string* release_avatar();
  void set_allocated_avatar(std::string* avatar);
  private:
  const std::string& _internal_avatar() const;
  void _internal_set_avatar(const std::string& value);
  std::string* _internal_mutable_avatar();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBModifyAvatar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBUpdateJackpot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBUpdateJackpot) */ {
 public:
  inline MsgDBUpdateJackpot() : MsgDBUpdateJackpot(nullptr) {}
  virtual ~MsgDBUpdateJackpot();

  MsgDBUpdateJackpot(const MsgDBUpdateJackpot& from);
  MsgDBUpdateJackpot(MsgDBUpdateJackpot&& from) noexcept
    : MsgDBUpdateJackpot() {
    *this = ::std::move(from);
  }

  inline MsgDBUpdateJackpot& operator=(const MsgDBUpdateJackpot& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBUpdateJackpot& operator=(MsgDBUpdateJackpot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBUpdateJackpot& default_instance();

  static inline const MsgDBUpdateJackpot* internal_default_instance() {
    return reinterpret_cast<const MsgDBUpdateJackpot*>(
               &_MsgDBUpdateJackpot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(MsgDBUpdateJackpot& a, MsgDBUpdateJackpot& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBUpdateJackpot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBUpdateJackpot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBUpdateJackpot* New() const final {
    return CreateMaybeMessage<MsgDBUpdateJackpot>(nullptr);
  }

  MsgDBUpdateJackpot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBUpdateJackpot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBUpdateJackpot& from);
  void MergeFrom(const MsgDBUpdateJackpot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBUpdateJackpot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBUpdateJackpot";
  }
  protected:
  explicit MsgDBUpdateJackpot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJackpotFieldNumber = 2,
    kFakeJackpotFieldNumber = 3,
    kServerIdFieldNumber = 1,
  };
  // int64 jackpot = 2;
  void clear_jackpot();
  ::PROTOBUF_NAMESPACE_ID::int64 jackpot() const;
  void set_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_jackpot() const;
  void _internal_set_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 fake_jackpot = 3;
  void clear_fake_jackpot();
  ::PROTOBUF_NAMESPACE_ID::int64 fake_jackpot() const;
  void set_fake_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_fake_jackpot() const;
  void _internal_set_fake_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 server_id = 1;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBUpdateJackpot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 jackpot_;
  ::PROTOBUF_NAMESPACE_ID::int64 fake_jackpot_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBTransferOperate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBTransferOperate) */ {
 public:
  inline MsgDBTransferOperate() : MsgDBTransferOperate(nullptr) {}
  virtual ~MsgDBTransferOperate();

  MsgDBTransferOperate(const MsgDBTransferOperate& from);
  MsgDBTransferOperate(MsgDBTransferOperate&& from) noexcept
    : MsgDBTransferOperate() {
    *this = ::std::move(from);
  }

  inline MsgDBTransferOperate& operator=(const MsgDBTransferOperate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBTransferOperate& operator=(MsgDBTransferOperate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBTransferOperate& default_instance();

  static inline const MsgDBTransferOperate* internal_default_instance() {
    return reinterpret_cast<const MsgDBTransferOperate*>(
               &_MsgDBTransferOperate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(MsgDBTransferOperate& a, MsgDBTransferOperate& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBTransferOperate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBTransferOperate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBTransferOperate* New() const final {
    return CreateMaybeMessage<MsgDBTransferOperate>(nullptr);
  }

  MsgDBTransferOperate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBTransferOperate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBTransferOperate& from);
  void MergeFrom(const MsgDBTransferOperate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBTransferOperate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBTransferOperate";
  }
  protected:
  explicit MsgDBTransferOperate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromUserIdFieldNumber = 1,
    kRecvUserIdFieldNumber = 2,
    kTransferGoldFieldNumber = 3,
    kTransferTypeFieldNumber = 4,
  };
  // int32 from_user_id = 1;
  void clear_from_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 from_user_id() const;
  void set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_from_user_id() const;
  void _internal_set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 recv_user_id = 2;
  void clear_recv_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id() const;
  void set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recv_user_id() const;
  void _internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 transfer_gold = 3;
  void clear_transfer_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_gold() const;
  void set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_transfer_gold() const;
  void _internal_set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 transfer_type = 4;
  void clear_transfer_type();
  ::PROTOBUF_NAMESPACE_ID::int32 transfer_type() const;
  void set_transfer_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_transfer_type() const;
  void _internal_set_transfer_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBTransferOperate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 from_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 transfer_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgStorageCode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgStorageCode) */ {
 public:
  inline MsgStorageCode() : MsgStorageCode(nullptr) {}
  virtual ~MsgStorageCode();

  MsgStorageCode(const MsgStorageCode& from);
  MsgStorageCode(MsgStorageCode&& from) noexcept
    : MsgStorageCode() {
    *this = ::std::move(from);
  }

  inline MsgStorageCode& operator=(const MsgStorageCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStorageCode& operator=(MsgStorageCode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgStorageCode& default_instance();

  static inline const MsgStorageCode* internal_default_instance() {
    return reinterpret_cast<const MsgStorageCode*>(
               &_MsgStorageCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(MsgStorageCode& a, MsgStorageCode& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgStorageCode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStorageCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgStorageCode* New() const final {
    return CreateMaybeMessage<MsgStorageCode>(nullptr);
  }

  MsgStorageCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgStorageCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgStorageCode& from);
  void MergeFrom(const MsgStorageCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStorageCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgStorageCode";
  }
  protected:
  explicit MsgStorageCode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 2,
    kUserIdFieldNumber = 1,
    kCodeFieldNumber = 3,
    kTypeFieldNumber = 4,
  };
  // string phone = 2;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 code = 3;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 4;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgStorageCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBBindPhone PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBBindPhone) */ {
 public:
  inline MsgDBBindPhone() : MsgDBBindPhone(nullptr) {}
  virtual ~MsgDBBindPhone();

  MsgDBBindPhone(const MsgDBBindPhone& from);
  MsgDBBindPhone(MsgDBBindPhone&& from) noexcept
    : MsgDBBindPhone() {
    *this = ::std::move(from);
  }

  inline MsgDBBindPhone& operator=(const MsgDBBindPhone& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBBindPhone& operator=(MsgDBBindPhone&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBBindPhone& default_instance();

  static inline const MsgDBBindPhone* internal_default_instance() {
    return reinterpret_cast<const MsgDBBindPhone*>(
               &_MsgDBBindPhone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(MsgDBBindPhone& a, MsgDBBindPhone& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBBindPhone* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBBindPhone* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBBindPhone* New() const final {
    return CreateMaybeMessage<MsgDBBindPhone>(nullptr);
  }

  MsgDBBindPhone* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBBindPhone>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBBindPhone& from);
  void MergeFrom(const MsgDBBindPhone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBBindPhone* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBBindPhone";
  }
  protected:
  explicit MsgDBBindPhone(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 2,
    kPhoneFieldNumber = 3,
    kPasswordFieldNumber = 4,
    kUserIdFieldNumber = 1,
  };
  // string invite_code = 2;
  void clear_invite_code();
  const std::string& invite_code() const;
  void set_invite_code(const std::string& value);
  void set_invite_code(std::string&& value);
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  std::string* mutable_invite_code();
  std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // string phone = 3;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string password = 4;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBBindPhone)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBBindPhoneRes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBBindPhoneRes) */ {
 public:
  inline MsgDBBindPhoneRes() : MsgDBBindPhoneRes(nullptr) {}
  virtual ~MsgDBBindPhoneRes();

  MsgDBBindPhoneRes(const MsgDBBindPhoneRes& from);
  MsgDBBindPhoneRes(MsgDBBindPhoneRes&& from) noexcept
    : MsgDBBindPhoneRes() {
    *this = ::std::move(from);
  }

  inline MsgDBBindPhoneRes& operator=(const MsgDBBindPhoneRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBBindPhoneRes& operator=(MsgDBBindPhoneRes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBBindPhoneRes& default_instance();

  static inline const MsgDBBindPhoneRes* internal_default_instance() {
    return reinterpret_cast<const MsgDBBindPhoneRes*>(
               &_MsgDBBindPhoneRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(MsgDBBindPhoneRes& a, MsgDBBindPhoneRes& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBBindPhoneRes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBBindPhoneRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBBindPhoneRes* New() const final {
    return CreateMaybeMessage<MsgDBBindPhoneRes>(nullptr);
  }

  MsgDBBindPhoneRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBBindPhoneRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBBindPhoneRes& from);
  void MergeFrom(const MsgDBBindPhoneRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBBindPhoneRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBBindPhoneRes";
  }
  protected:
  explicit MsgDBBindPhoneRes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 2,
    kPasswordFieldNumber = 3,
    kResCodeFieldNumber = 1,
    kAwardFieldNumber = 4,
  };
  // string phone = 2;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string password = 3;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // int32 res_code = 1;
  void clear_res_code();
  ::PROTOBUF_NAMESPACE_ID::int32 res_code() const;
  void set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_code() const;
  void _internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 award = 4;
  void clear_award();
  ::PROTOBUF_NAMESPACE_ID::int32 award() const;
  void set_award(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_award() const;
  void _internal_set_award(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBBindPhoneRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 award_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBChatLogin PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBChatLogin) */ {
 public:
  inline MsgDBChatLogin() : MsgDBChatLogin(nullptr) {}
  virtual ~MsgDBChatLogin();

  MsgDBChatLogin(const MsgDBChatLogin& from);
  MsgDBChatLogin(MsgDBChatLogin&& from) noexcept
    : MsgDBChatLogin() {
    *this = ::std::move(from);
  }

  inline MsgDBChatLogin& operator=(const MsgDBChatLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBChatLogin& operator=(MsgDBChatLogin&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBChatLogin& default_instance();

  static inline const MsgDBChatLogin* internal_default_instance() {
    return reinterpret_cast<const MsgDBChatLogin*>(
               &_MsgDBChatLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(MsgDBChatLogin& a, MsgDBChatLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBChatLogin* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBChatLogin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBChatLogin* New() const final {
    return CreateMaybeMessage<MsgDBChatLogin>(nullptr);
  }

  MsgDBChatLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBChatLogin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBChatLogin& from);
  void MergeFrom(const MsgDBChatLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBChatLogin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBChatLogin";
  }
  protected:
  explicit MsgDBChatLogin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string password = 2;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBChatLogin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBChatTrumpetMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBChatTrumpetMsg) */ {
 public:
  inline MsgDBChatTrumpetMsg() : MsgDBChatTrumpetMsg(nullptr) {}
  virtual ~MsgDBChatTrumpetMsg();

  MsgDBChatTrumpetMsg(const MsgDBChatTrumpetMsg& from);
  MsgDBChatTrumpetMsg(MsgDBChatTrumpetMsg&& from) noexcept
    : MsgDBChatTrumpetMsg() {
    *this = ::std::move(from);
  }

  inline MsgDBChatTrumpetMsg& operator=(const MsgDBChatTrumpetMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBChatTrumpetMsg& operator=(MsgDBChatTrumpetMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBChatTrumpetMsg& default_instance();

  static inline const MsgDBChatTrumpetMsg* internal_default_instance() {
    return reinterpret_cast<const MsgDBChatTrumpetMsg*>(
               &_MsgDBChatTrumpetMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(MsgDBChatTrumpetMsg& a, MsgDBChatTrumpetMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBChatTrumpetMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBChatTrumpetMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBChatTrumpetMsg* New() const final {
    return CreateMaybeMessage<MsgDBChatTrumpetMsg>(nullptr);
  }

  MsgDBChatTrumpetMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBChatTrumpetMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBChatTrumpetMsg& from);
  void MergeFrom(const MsgDBChatTrumpetMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBChatTrumpetMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBChatTrumpetMsg";
  }
  protected:
  explicit MsgDBChatTrumpetMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string message = 2;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBChatTrumpetMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBBuyGoods PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBBuyGoods) */ {
 public:
  inline MsgDBBuyGoods() : MsgDBBuyGoods(nullptr) {}
  virtual ~MsgDBBuyGoods();

  MsgDBBuyGoods(const MsgDBBuyGoods& from);
  MsgDBBuyGoods(MsgDBBuyGoods&& from) noexcept
    : MsgDBBuyGoods() {
    *this = ::std::move(from);
  }

  inline MsgDBBuyGoods& operator=(const MsgDBBuyGoods& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBBuyGoods& operator=(MsgDBBuyGoods&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBBuyGoods& default_instance();

  static inline const MsgDBBuyGoods* internal_default_instance() {
    return reinterpret_cast<const MsgDBBuyGoods*>(
               &_MsgDBBuyGoods_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(MsgDBBuyGoods& a, MsgDBBuyGoods& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBBuyGoods* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBBuyGoods* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBBuyGoods* New() const final {
    return CreateMaybeMessage<MsgDBBuyGoods>(nullptr);
  }

  MsgDBBuyGoods* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBBuyGoods>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBBuyGoods& from);
  void MergeFrom(const MsgDBBuyGoods& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBBuyGoods* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBBuyGoods";
  }
  protected:
  explicit MsgDBBuyGoods(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kItemIdFieldNumber = 2,
    kItemNumFieldNumber = 3,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 item_id = 2;
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 item_num = 3;
  void clear_item_num();
  ::PROTOBUF_NAMESPACE_ID::int32 item_num() const;
  void set_item_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_num() const;
  void _internal_set_item_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBBuyGoods)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBGameLoginOut PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBGameLoginOut) */ {
 public:
  inline MsgDBGameLoginOut() : MsgDBGameLoginOut(nullptr) {}
  virtual ~MsgDBGameLoginOut();

  MsgDBGameLoginOut(const MsgDBGameLoginOut& from);
  MsgDBGameLoginOut(MsgDBGameLoginOut&& from) noexcept
    : MsgDBGameLoginOut() {
    *this = ::std::move(from);
  }

  inline MsgDBGameLoginOut& operator=(const MsgDBGameLoginOut& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBGameLoginOut& operator=(MsgDBGameLoginOut&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBGameLoginOut& default_instance();

  static inline const MsgDBGameLoginOut* internal_default_instance() {
    return reinterpret_cast<const MsgDBGameLoginOut*>(
               &_MsgDBGameLoginOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(MsgDBGameLoginOut& a, MsgDBGameLoginOut& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBGameLoginOut* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBGameLoginOut* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBGameLoginOut* New() const final {
    return CreateMaybeMessage<MsgDBGameLoginOut>(nullptr);
  }

  MsgDBGameLoginOut* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBGameLoginOut>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBGameLoginOut& from);
  void MergeFrom(const MsgDBGameLoginOut& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBGameLoginOut* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBGameLoginOut";
  }
  protected:
  explicit MsgDBGameLoginOut(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kIsOfflineFieldNumber = 2,
    kServerIdFieldNumber = 3,
    kKindIdFieldNumber = 4,
    kLoginServerIdFieldNumber = 5,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_offline = 2;
  void clear_is_offline();
  ::PROTOBUF_NAMESPACE_ID::int32 is_offline() const;
  void set_is_offline(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_offline() const;
  void _internal_set_is_offline(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 server_id = 3;
  void clear_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 server_id() const;
  void set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_server_id() const;
  void _internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 kind_id = 4;
  void clear_kind_id();
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id() const;
  void set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind_id() const;
  void _internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 login_server_id = 5;
  void clear_login_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 login_server_id() const;
  void set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_login_server_id() const;
  void _internal_set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBGameLoginOut)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_offline_;
  ::PROTOBUF_NAMESPACE_ID::int32 server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 login_server_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBSubagentInformation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBSubagentInformation) */ {
 public:
  inline MsgDBSubagentInformation() : MsgDBSubagentInformation(nullptr) {}
  virtual ~MsgDBSubagentInformation();

  MsgDBSubagentInformation(const MsgDBSubagentInformation& from);
  MsgDBSubagentInformation(MsgDBSubagentInformation&& from) noexcept
    : MsgDBSubagentInformation() {
    *this = ::std::move(from);
  }

  inline MsgDBSubagentInformation& operator=(const MsgDBSubagentInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBSubagentInformation& operator=(MsgDBSubagentInformation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBSubagentInformation& default_instance();

  static inline const MsgDBSubagentInformation* internal_default_instance() {
    return reinterpret_cast<const MsgDBSubagentInformation*>(
               &_MsgDBSubagentInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(MsgDBSubagentInformation& a, MsgDBSubagentInformation& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBSubagentInformation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBSubagentInformation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBSubagentInformation* New() const final {
    return CreateMaybeMessage<MsgDBSubagentInformation>(nullptr);
  }

  MsgDBSubagentInformation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBSubagentInformation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBSubagentInformation& from);
  void MergeFrom(const MsgDBSubagentInformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBSubagentInformation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBSubagentInformation";
  }
  protected:
  explicit MsgDBSubagentInformation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentNicknameFieldNumber = 1,
    kAgentUserIdFieldNumber = 2,
    kAgentTypeFieldNumber = 3,
    kTotalShiftToFieldNumber = 4,
    kTotalRollOutFieldNumber = 5,
    kVipLevelFieldNumber = 6,
  };
  // string agent_nickname = 1;
  void clear_agent_nickname();
  const std::string& agent_nickname() const;
  void set_agent_nickname(const std::string& value);
  void set_agent_nickname(std::string&& value);
  void set_agent_nickname(const char* value);
  void set_agent_nickname(const char* value, size_t size);
  std::string* mutable_agent_nickname();
  std::string* release_agent_nickname();
  void set_allocated_agent_nickname(std::string* agent_nickname);
  private:
  const std::string& _internal_agent_nickname() const;
  void _internal_set_agent_nickname(const std::string& value);
  std::string* _internal_mutable_agent_nickname();
  public:

  // int32 agent_user_id = 2;
  void clear_agent_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_user_id() const;
  void set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agent_user_id() const;
  void _internal_set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 agent_type = 3;
  void clear_agent_type();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_type() const;
  void set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agent_type() const;
  void _internal_set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 total_shift_to = 4;
  void clear_total_shift_to();
  ::PROTOBUF_NAMESPACE_ID::int64 total_shift_to() const;
  void set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_shift_to() const;
  void _internal_set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 total_roll_out = 5;
  void clear_total_roll_out();
  ::PROTOBUF_NAMESPACE_ID::int64 total_roll_out() const;
  void set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_roll_out() const;
  void _internal_set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 vip_level = 6;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBSubagentInformation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr agent_nickname_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_shift_to_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_roll_out_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBQueryTransferTax PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBQueryTransferTax) */ {
 public:
  inline MsgDBQueryTransferTax() : MsgDBQueryTransferTax(nullptr) {}
  virtual ~MsgDBQueryTransferTax();

  MsgDBQueryTransferTax(const MsgDBQueryTransferTax& from);
  MsgDBQueryTransferTax(MsgDBQueryTransferTax&& from) noexcept
    : MsgDBQueryTransferTax() {
    *this = ::std::move(from);
  }

  inline MsgDBQueryTransferTax& operator=(const MsgDBQueryTransferTax& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBQueryTransferTax& operator=(MsgDBQueryTransferTax&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBQueryTransferTax& default_instance();

  static inline const MsgDBQueryTransferTax* internal_default_instance() {
    return reinterpret_cast<const MsgDBQueryTransferTax*>(
               &_MsgDBQueryTransferTax_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(MsgDBQueryTransferTax& a, MsgDBQueryTransferTax& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBQueryTransferTax* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBQueryTransferTax* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBQueryTransferTax* New() const final {
    return CreateMaybeMessage<MsgDBQueryTransferTax>(nullptr);
  }

  MsgDBQueryTransferTax* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBQueryTransferTax>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBQueryTransferTax& from);
  void MergeFrom(const MsgDBQueryTransferTax& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBQueryTransferTax* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBQueryTransferTax";
  }
  protected:
  explicit MsgDBQueryTransferTax(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFromUserIdFieldNumber = 1,
    kRecvUserIdFieldNumber = 2,
  };
  // int32 from_user_id = 1;
  void clear_from_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 from_user_id() const;
  void set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_from_user_id() const;
  void _internal_set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 recv_user_id = 2;
  void clear_recv_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id() const;
  void set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recv_user_id() const;
  void _internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBQueryTransferTax)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 from_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBTransferTakeOut PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBTransferTakeOut) */ {
 public:
  inline MsgDBTransferTakeOut() : MsgDBTransferTakeOut(nullptr) {}
  virtual ~MsgDBTransferTakeOut();

  MsgDBTransferTakeOut(const MsgDBTransferTakeOut& from);
  MsgDBTransferTakeOut(MsgDBTransferTakeOut&& from) noexcept
    : MsgDBTransferTakeOut() {
    *this = ::std::move(from);
  }

  inline MsgDBTransferTakeOut& operator=(const MsgDBTransferTakeOut& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBTransferTakeOut& operator=(MsgDBTransferTakeOut&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBTransferTakeOut& default_instance();

  static inline const MsgDBTransferTakeOut* internal_default_instance() {
    return reinterpret_cast<const MsgDBTransferTakeOut*>(
               &_MsgDBTransferTakeOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(MsgDBTransferTakeOut& a, MsgDBTransferTakeOut& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBTransferTakeOut* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBTransferTakeOut* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBTransferTakeOut* New() const final {
    return CreateMaybeMessage<MsgDBTransferTakeOut>(nullptr);
  }

  MsgDBTransferTakeOut* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBTransferTakeOut>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBTransferTakeOut& from);
  void MergeFrom(const MsgDBTransferTakeOut& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBTransferTakeOut* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBTransferTakeOut";
  }
  protected:
  explicit MsgDBTransferTakeOut(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetValueFieldNumber = 1,
    kRecvUserIdFieldNumber = 2,
    kAddGoldFieldNumber = 4,
    kUserGoldFieldNumber = 5,
    kReceiveStateFieldNumber = 6,
    kTransferIdFieldNumber = 7,
    kSendUserIdFieldNumber = 3,
  };
  // int32 ret_value = 1;
  void clear_ret_value();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value() const;
  void set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_value() const;
  void _internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 recv_user_id = 2;
  void clear_recv_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id() const;
  void set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recv_user_id() const;
  void _internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 add_gold = 4;
  void clear_add_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 add_gold() const;
  void set_add_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_add_gold() const;
  void _internal_set_add_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 user_gold = 5;
  void clear_user_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 user_gold() const;
  void set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_user_gold() const;
  void _internal_set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 receive_state = 6;
  void clear_receive_state();
  ::PROTOBUF_NAMESPACE_ID::int64 receive_state() const;
  void set_receive_state(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_receive_state() const;
  void _internal_set_receive_state(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 transfer_id = 7;
  void clear_transfer_id();
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_id() const;
  void set_transfer_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_transfer_id() const;
  void _internal_set_transfer_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 send_user_id = 3;
  void clear_send_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 send_user_id() const;
  void set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_send_user_id() const;
  void _internal_set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBTransferTakeOut)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 add_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 user_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 receive_state_;
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 send_user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBTransferReceive PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBTransferReceive) */ {
 public:
  inline MsgDBTransferReceive() : MsgDBTransferReceive(nullptr) {}
  virtual ~MsgDBTransferReceive();

  MsgDBTransferReceive(const MsgDBTransferReceive& from);
  MsgDBTransferReceive(MsgDBTransferReceive&& from) noexcept
    : MsgDBTransferReceive() {
    *this = ::std::move(from);
  }

  inline MsgDBTransferReceive& operator=(const MsgDBTransferReceive& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBTransferReceive& operator=(MsgDBTransferReceive&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBTransferReceive& default_instance();

  static inline const MsgDBTransferReceive* internal_default_instance() {
    return reinterpret_cast<const MsgDBTransferReceive*>(
               &_MsgDBTransferReceive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(MsgDBTransferReceive& a, MsgDBTransferReceive& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBTransferReceive* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBTransferReceive* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBTransferReceive* New() const final {
    return CreateMaybeMessage<MsgDBTransferReceive>(nullptr);
  }

  MsgDBTransferReceive* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBTransferReceive>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBTransferReceive& from);
  void MergeFrom(const MsgDBTransferReceive& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBTransferReceive* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBTransferReceive";
  }
  protected:
  explicit MsgDBTransferReceive(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReceiveIdFieldNumber = 2,
    kReceiveUserIdFieldNumber = 1,
  };
  // int64 receive_id = 2;
  void clear_receive_id();
  ::PROTOBUF_NAMESPACE_ID::int64 receive_id() const;
  void set_receive_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_receive_id() const;
  void _internal_set_receive_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 receive_user_id = 1;
  void clear_receive_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 receive_user_id() const;
  void set_receive_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_receive_user_id() const;
  void _internal_set_receive_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBTransferReceive)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 receive_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 receive_user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBBindInviteCode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBBindInviteCode) */ {
 public:
  inline MsgDBBindInviteCode() : MsgDBBindInviteCode(nullptr) {}
  virtual ~MsgDBBindInviteCode();

  MsgDBBindInviteCode(const MsgDBBindInviteCode& from);
  MsgDBBindInviteCode(MsgDBBindInviteCode&& from) noexcept
    : MsgDBBindInviteCode() {
    *this = ::std::move(from);
  }

  inline MsgDBBindInviteCode& operator=(const MsgDBBindInviteCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBBindInviteCode& operator=(MsgDBBindInviteCode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBBindInviteCode& default_instance();

  static inline const MsgDBBindInviteCode* internal_default_instance() {
    return reinterpret_cast<const MsgDBBindInviteCode*>(
               &_MsgDBBindInviteCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(MsgDBBindInviteCode& a, MsgDBBindInviteCode& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBBindInviteCode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBBindInviteCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBBindInviteCode* New() const final {
    return CreateMaybeMessage<MsgDBBindInviteCode>(nullptr);
  }

  MsgDBBindInviteCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBBindInviteCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBBindInviteCode& from);
  void MergeFrom(const MsgDBBindInviteCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBBindInviteCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBBindInviteCode";
  }
  protected:
  explicit MsgDBBindInviteCode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string invite_code = 2;
  void clear_invite_code();
  const std::string& invite_code() const;
  void set_invite_code(const std::string& value);
  void set_invite_code(std::string&& value);
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  std::string* mutable_invite_code();
  std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBBindInviteCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBSyncDotData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBSyncDotData) */ {
 public:
  inline MsgDBSyncDotData() : MsgDBSyncDotData(nullptr) {}
  virtual ~MsgDBSyncDotData();

  MsgDBSyncDotData(const MsgDBSyncDotData& from);
  MsgDBSyncDotData(MsgDBSyncDotData&& from) noexcept
    : MsgDBSyncDotData() {
    *this = ::std::move(from);
  }

  inline MsgDBSyncDotData& operator=(const MsgDBSyncDotData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBSyncDotData& operator=(MsgDBSyncDotData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBSyncDotData& default_instance();

  static inline const MsgDBSyncDotData* internal_default_instance() {
    return reinterpret_cast<const MsgDBSyncDotData*>(
               &_MsgDBSyncDotData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(MsgDBSyncDotData& a, MsgDBSyncDotData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBSyncDotData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBSyncDotData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBSyncDotData* New() const final {
    return CreateMaybeMessage<MsgDBSyncDotData>(nullptr);
  }

  MsgDBSyncDotData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBSyncDotData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBSyncDotData& from);
  void MergeFrom(const MsgDBSyncDotData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBSyncDotData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBSyncDotData";
  }
  protected:
  explicit MsgDBSyncDotData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBSyncDotData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBOnlineActivePick PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBOnlineActivePick) */ {
 public:
  inline MsgDBOnlineActivePick() : MsgDBOnlineActivePick(nullptr) {}
  virtual ~MsgDBOnlineActivePick();

  MsgDBOnlineActivePick(const MsgDBOnlineActivePick& from);
  MsgDBOnlineActivePick(MsgDBOnlineActivePick&& from) noexcept
    : MsgDBOnlineActivePick() {
    *this = ::std::move(from);
  }

  inline MsgDBOnlineActivePick& operator=(const MsgDBOnlineActivePick& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBOnlineActivePick& operator=(MsgDBOnlineActivePick&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBOnlineActivePick& default_instance();

  static inline const MsgDBOnlineActivePick* internal_default_instance() {
    return reinterpret_cast<const MsgDBOnlineActivePick*>(
               &_MsgDBOnlineActivePick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(MsgDBOnlineActivePick& a, MsgDBOnlineActivePick& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBOnlineActivePick* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBOnlineActivePick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBOnlineActivePick* New() const final {
    return CreateMaybeMessage<MsgDBOnlineActivePick>(nullptr);
  }

  MsgDBOnlineActivePick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBOnlineActivePick>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBOnlineActivePick& from);
  void MergeFrom(const MsgDBOnlineActivePick& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBOnlineActivePick* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBOnlineActivePick";
  }
  protected:
  explicit MsgDBOnlineActivePick(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBOnlineActivePick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBCDKExchange PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBCDKExchange) */ {
 public:
  inline MsgDBCDKExchange() : MsgDBCDKExchange(nullptr) {}
  virtual ~MsgDBCDKExchange();

  MsgDBCDKExchange(const MsgDBCDKExchange& from);
  MsgDBCDKExchange(MsgDBCDKExchange&& from) noexcept
    : MsgDBCDKExchange() {
    *this = ::std::move(from);
  }

  inline MsgDBCDKExchange& operator=(const MsgDBCDKExchange& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBCDKExchange& operator=(MsgDBCDKExchange&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBCDKExchange& default_instance();

  static inline const MsgDBCDKExchange* internal_default_instance() {
    return reinterpret_cast<const MsgDBCDKExchange*>(
               &_MsgDBCDKExchange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(MsgDBCDKExchange& a, MsgDBCDKExchange& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBCDKExchange* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBCDKExchange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBCDKExchange* New() const final {
    return CreateMaybeMessage<MsgDBCDKExchange>(nullptr);
  }

  MsgDBCDKExchange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBCDKExchange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBCDKExchange& from);
  void MergeFrom(const MsgDBCDKExchange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBCDKExchange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBCDKExchange";
  }
  protected:
  explicit MsgDBCDKExchange(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCdkCodeFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string cdk_code = 2;
  void clear_cdk_code();
  const std::string& cdk_code() const;
  void set_cdk_code(const std::string& value);
  void set_cdk_code(std::string&& value);
  void set_cdk_code(const char* value);
  void set_cdk_code(const char* value, size_t size);
  std::string* mutable_cdk_code();
  std::string* release_cdk_code();
  void set_allocated_cdk_code(std::string* cdk_code);
  private:
  const std::string& _internal_cdk_code() const;
  void _internal_set_cdk_code(const std::string& value);
  std::string* _internal_mutable_cdk_code();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBCDKExchange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cdk_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBPersonalDetailsRespAdd PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBPersonalDetailsRespAdd) */ {
 public:
  inline MsgDBPersonalDetailsRespAdd() : MsgDBPersonalDetailsRespAdd(nullptr) {}
  virtual ~MsgDBPersonalDetailsRespAdd();

  MsgDBPersonalDetailsRespAdd(const MsgDBPersonalDetailsRespAdd& from);
  MsgDBPersonalDetailsRespAdd(MsgDBPersonalDetailsRespAdd&& from) noexcept
    : MsgDBPersonalDetailsRespAdd() {
    *this = ::std::move(from);
  }

  inline MsgDBPersonalDetailsRespAdd& operator=(const MsgDBPersonalDetailsRespAdd& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBPersonalDetailsRespAdd& operator=(MsgDBPersonalDetailsRespAdd&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBPersonalDetailsRespAdd& default_instance();

  static inline const MsgDBPersonalDetailsRespAdd* internal_default_instance() {
    return reinterpret_cast<const MsgDBPersonalDetailsRespAdd*>(
               &_MsgDBPersonalDetailsRespAdd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(MsgDBPersonalDetailsRespAdd& a, MsgDBPersonalDetailsRespAdd& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBPersonalDetailsRespAdd* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBPersonalDetailsRespAdd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBPersonalDetailsRespAdd* New() const final {
    return CreateMaybeMessage<MsgDBPersonalDetailsRespAdd>(nullptr);
  }

  MsgDBPersonalDetailsRespAdd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBPersonalDetailsRespAdd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBPersonalDetailsRespAdd& from);
  void MergeFrom(const MsgDBPersonalDetailsRespAdd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBPersonalDetailsRespAdd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBPersonalDetailsRespAdd";
  }
  protected:
  explicit MsgDBPersonalDetailsRespAdd(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 3,
    kUserIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string msg = 3;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBPersonalDetailsRespAdd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBUpgradeVIP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBUpgradeVIP) */ {
 public:
  inline MsgDBUpgradeVIP() : MsgDBUpgradeVIP(nullptr) {}
  virtual ~MsgDBUpgradeVIP();

  MsgDBUpgradeVIP(const MsgDBUpgradeVIP& from);
  MsgDBUpgradeVIP(MsgDBUpgradeVIP&& from) noexcept
    : MsgDBUpgradeVIP() {
    *this = ::std::move(from);
  }

  inline MsgDBUpgradeVIP& operator=(const MsgDBUpgradeVIP& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBUpgradeVIP& operator=(MsgDBUpgradeVIP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBUpgradeVIP& default_instance();

  static inline const MsgDBUpgradeVIP* internal_default_instance() {
    return reinterpret_cast<const MsgDBUpgradeVIP*>(
               &_MsgDBUpgradeVIP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(MsgDBUpgradeVIP& a, MsgDBUpgradeVIP& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBUpgradeVIP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBUpgradeVIP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBUpgradeVIP* New() const final {
    return CreateMaybeMessage<MsgDBUpgradeVIP>(nullptr);
  }

  MsgDBUpgradeVIP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBUpgradeVIP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBUpgradeVIP& from);
  void MergeFrom(const MsgDBUpgradeVIP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBUpgradeVIP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBUpgradeVIP";
  }
  protected:
  explicit MsgDBUpgradeVIP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldFieldNumber = 2,
    kResCodeFieldNumber = 1,
    kBindIdFieldNumber = 3,
    kAddVipExpFieldNumber = 4,
  };
  // int64 gold = 2;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 res_code = 1;
  void clear_res_code();
  ::PROTOBUF_NAMESPACE_ID::int32 res_code() const;
  void set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_code() const;
  void _internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bind_id = 3;
  void clear_bind_id();
  ::PROTOBUF_NAMESPACE_ID::int32 bind_id() const;
  void set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bind_id() const;
  void _internal_set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 add_vip_exp = 4;
  void clear_add_vip_exp();
  ::PROTOBUF_NAMESPACE_ID::int32 add_vip_exp() const;
  void set_add_vip_exp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_add_vip_exp() const;
  void _internal_set_add_vip_exp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBUpgradeVIP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 bind_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 add_vip_exp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBSetSubAgent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBSetSubAgent) */ {
 public:
  inline MsgDBSetSubAgent() : MsgDBSetSubAgent(nullptr) {}
  virtual ~MsgDBSetSubAgent();

  MsgDBSetSubAgent(const MsgDBSetSubAgent& from);
  MsgDBSetSubAgent(MsgDBSetSubAgent&& from) noexcept
    : MsgDBSetSubAgent() {
    *this = ::std::move(from);
  }

  inline MsgDBSetSubAgent& operator=(const MsgDBSetSubAgent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBSetSubAgent& operator=(MsgDBSetSubAgent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBSetSubAgent& default_instance();

  static inline const MsgDBSetSubAgent* internal_default_instance() {
    return reinterpret_cast<const MsgDBSetSubAgent*>(
               &_MsgDBSetSubAgent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(MsgDBSetSubAgent& a, MsgDBSetSubAgent& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBSetSubAgent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBSetSubAgent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBSetSubAgent* New() const final {
    return CreateMaybeMessage<MsgDBSetSubAgent>(nullptr);
  }

  MsgDBSetSubAgent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBSetSubAgent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBSetSubAgent& from);
  void MergeFrom(const MsgDBSetSubAgent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBSetSubAgent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBSetSubAgent";
  }
  protected:
  explicit MsgDBSetSubAgent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kSubUserFieldNumber = 2,
    kAgentRatioFieldNumber = 3,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sub_user = 2;
  void clear_sub_user();
  ::PROTOBUF_NAMESPACE_ID::int32 sub_user() const;
  void set_sub_user(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sub_user() const;
  void _internal_set_sub_user(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 agent_ratio = 3;
  void clear_agent_ratio();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_ratio() const;
  void set_agent_ratio(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agent_ratio() const;
  void _internal_set_agent_ratio(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBSetSubAgent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 sub_user_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_ratio_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDBGetPlayerGold PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDBGetPlayerGold) */ {
 public:
  inline MsgDBGetPlayerGold() : MsgDBGetPlayerGold(nullptr) {}
  virtual ~MsgDBGetPlayerGold();

  MsgDBGetPlayerGold(const MsgDBGetPlayerGold& from);
  MsgDBGetPlayerGold(MsgDBGetPlayerGold&& from) noexcept
    : MsgDBGetPlayerGold() {
    *this = ::std::move(from);
  }

  inline MsgDBGetPlayerGold& operator=(const MsgDBGetPlayerGold& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDBGetPlayerGold& operator=(MsgDBGetPlayerGold&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDBGetPlayerGold& default_instance();

  static inline const MsgDBGetPlayerGold* internal_default_instance() {
    return reinterpret_cast<const MsgDBGetPlayerGold*>(
               &_MsgDBGetPlayerGold_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(MsgDBGetPlayerGold& a, MsgDBGetPlayerGold& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDBGetPlayerGold* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDBGetPlayerGold* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDBGetPlayerGold* New() const final {
    return CreateMaybeMessage<MsgDBGetPlayerGold>(nullptr);
  }

  MsgDBGetPlayerGold* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDBGetPlayerGold>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDBGetPlayerGold& from);
  void MergeFrom(const MsgDBGetPlayerGold& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDBGetPlayerGold* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDBGetPlayerGold";
  }
  protected:
  explicit MsgDBGetPlayerGold(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoinFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // int64 coin = 2;
  void clear_coin();
  ::PROTOBUF_NAMESPACE_ID::int64 coin() const;
  void set_coin(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_coin() const;
  void _internal_set_coin(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgDBGetPlayerGold)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 coin_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgErrorCode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgErrorCode) */ {
 public:
  inline MsgErrorCode() : MsgErrorCode(nullptr) {}
  virtual ~MsgErrorCode();

  MsgErrorCode(const MsgErrorCode& from);
  MsgErrorCode(MsgErrorCode&& from) noexcept
    : MsgErrorCode() {
    *this = ::std::move(from);
  }

  inline MsgErrorCode& operator=(const MsgErrorCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgErrorCode& operator=(MsgErrorCode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgErrorCode& default_instance();

  static inline const MsgErrorCode* internal_default_instance() {
    return reinterpret_cast<const MsgErrorCode*>(
               &_MsgErrorCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(MsgErrorCode& a, MsgErrorCode& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgErrorCode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgErrorCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgErrorCode* New() const final {
    return CreateMaybeMessage<MsgErrorCode>(nullptr);
  }

  MsgErrorCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgErrorCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgErrorCode& from);
  void MergeFrom(const MsgErrorCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgErrorCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgErrorCode";
  }
  protected:
  explicit MsgErrorCode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // int32 type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 value = 2;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgErrorCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgDeleteFrequentlyPhone PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgDeleteFrequentlyPhone) */ {
 public:
  inline MsgDeleteFrequentlyPhone() : MsgDeleteFrequentlyPhone(nullptr) {}
  virtual ~MsgDeleteFrequentlyPhone();

  MsgDeleteFrequentlyPhone(const MsgDeleteFrequentlyPhone& from);
  MsgDeleteFrequentlyPhone(MsgDeleteFrequentlyPhone&& from) noexcept
    : MsgDeleteFrequentlyPhone() {
    *this = ::std::move(from);
  }

  inline MsgDeleteFrequentlyPhone& operator=(const MsgDeleteFrequentlyPhone& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDeleteFrequentlyPhone& operator=(MsgDeleteFrequentlyPhone&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgDeleteFrequentlyPhone& default_instance();

  static inline const MsgDeleteFrequentlyPhone* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteFrequentlyPhone*>(
               &_MsgDeleteFrequentlyPhone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(MsgDeleteFrequentlyPhone& a, MsgDeleteFrequentlyPhone& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgDeleteFrequentlyPhone* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDeleteFrequentlyPhone* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgDeleteFrequentlyPhone* New() const final {
    return CreateMaybeMessage<MsgDeleteFrequentlyPhone>(nullptr);
  }

  MsgDeleteFrequentlyPhone* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgDeleteFrequentlyPhone>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgDeleteFrequentlyPhone& from);
  void MergeFrom(const MsgDeleteFrequentlyPhone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDeleteFrequentlyPhone* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgDeleteFrequentlyPhone";
  }
  protected:
  explicit MsgDeleteFrequentlyPhone(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 2,
    kErrorCodeFieldNumber = 1,
  };
  // string phone = 2;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // .MsgErrorCode error_code = 1;
  bool has_error_code() const;
  private:
  bool _internal_has_error_code() const;
  public:
  void clear_error_code();
  const ::MsgErrorCode& error_code() const;
  ::MsgErrorCode* release_error_code();
  ::MsgErrorCode* mutable_error_code();
  void set_allocated_error_code(::MsgErrorCode* error_code);
  private:
  const ::MsgErrorCode& _internal_error_code() const;
  ::MsgErrorCode* _internal_mutable_error_code();
  public:
  void unsafe_arena_set_allocated_error_code(
      ::MsgErrorCode* error_code);
  ::MsgErrorCode* unsafe_arena_release_error_code();

  // @@protoc_insertion_point(class_scope:MsgDeleteFrequentlyPhone)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::MsgErrorCode* error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgPvpSerTableInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPvpSerTableInfo) */ {
 public:
  inline MsgPvpSerTableInfo() : MsgPvpSerTableInfo(nullptr) {}
  virtual ~MsgPvpSerTableInfo();

  MsgPvpSerTableInfo(const MsgPvpSerTableInfo& from);
  MsgPvpSerTableInfo(MsgPvpSerTableInfo&& from) noexcept
    : MsgPvpSerTableInfo() {
    *this = ::std::move(from);
  }

  inline MsgPvpSerTableInfo& operator=(const MsgPvpSerTableInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPvpSerTableInfo& operator=(MsgPvpSerTableInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPvpSerTableInfo& default_instance();

  static inline const MsgPvpSerTableInfo* internal_default_instance() {
    return reinterpret_cast<const MsgPvpSerTableInfo*>(
               &_MsgPvpSerTableInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(MsgPvpSerTableInfo& a, MsgPvpSerTableInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPvpSerTableInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPvpSerTableInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPvpSerTableInfo* New() const final {
    return CreateMaybeMessage<MsgPvpSerTableInfo>(nullptr);
  }

  MsgPvpSerTableInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPvpSerTableInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPvpSerTableInfo& from);
  void MergeFrom(const MsgPvpSerTableInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPvpSerTableInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPvpSerTableInfo";
  }
  protected:
  explicit MsgPvpSerTableInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTableNameFieldNumber = 2,
    kOwnerNickFieldNumber = 9,
    kTableIdFieldNumber = 1,
    kChairNumFieldNumber = 3,
    kEnterNumFieldNumber = 4,
    kBaseScoreFieldNumber = 5,
    kIsActivateFieldNumber = 6,
    kIsPrivateFieldNumber = 7,
    kTableNoFieldNumber = 10,
  };
  // string table_name = 2;
  void clear_table_name();
  const std::string& table_name() const;
  void set_table_name(const std::string& value);
  void set_table_name(std::string&& value);
  void set_table_name(const char* value);
  void set_table_name(const char* value, size_t size);
  std::string* mutable_table_name();
  std::string* release_table_name();
  void set_allocated_table_name(std::string* table_name);
  private:
  const std::string& _internal_table_name() const;
  void _internal_set_table_name(const std::string& value);
  std::string* _internal_mutable_table_name();
  public:

  // string owner_nick = 9;
  void clear_owner_nick();
  const std::string& owner_nick() const;
  void set_owner_nick(const std::string& value);
  void set_owner_nick(std::string&& value);
  void set_owner_nick(const char* value);
  void set_owner_nick(const char* value, size_t size);
  std::string* mutable_owner_nick();
  std::string* release_owner_nick();
  void set_allocated_owner_nick(std::string* owner_nick);
  private:
  const std::string& _internal_owner_nick() const;
  void _internal_set_owner_nick(const std::string& value);
  std::string* _internal_mutable_owner_nick();
  public:

  // int32 table_id = 1;
  void clear_table_id();
  ::PROTOBUF_NAMESPACE_ID::int32 table_id() const;
  void set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_id() const;
  void _internal_set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_num = 3;
  void clear_chair_num();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_num() const;
  void set_chair_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_num() const;
  void _internal_set_chair_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 enter_num = 4;
  void clear_enter_num();
  ::PROTOBUF_NAMESPACE_ID::int32 enter_num() const;
  void set_enter_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_enter_num() const;
  void _internal_set_enter_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 base_score = 5;
  void clear_base_score();
  ::PROTOBUF_NAMESPACE_ID::int32 base_score() const;
  void set_base_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_base_score() const;
  void _internal_set_base_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_activate = 6;
  void clear_is_activate();
  bool is_activate() const;
  void set_is_activate(bool value);
  private:
  bool _internal_is_activate() const;
  void _internal_set_is_activate(bool value);
  public:

  // bool is_private = 7;
  void clear_is_private();
  bool is_private() const;
  void set_is_private(bool value);
  private:
  bool _internal_is_private() const;
  void _internal_set_is_private(bool value);
  public:

  // int32 table_no = 10;
  void clear_table_no();
  ::PROTOBUF_NAMESPACE_ID::int32 table_no() const;
  void set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_no() const;
  void _internal_set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgPvpSerTableInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr table_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr owner_nick_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 enter_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 base_score_;
  bool is_activate_;
  bool is_private_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_no_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgPvpAddTable PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPvpAddTable) */ {
 public:
  inline MsgPvpAddTable() : MsgPvpAddTable(nullptr) {}
  virtual ~MsgPvpAddTable();

  MsgPvpAddTable(const MsgPvpAddTable& from);
  MsgPvpAddTable(MsgPvpAddTable&& from) noexcept
    : MsgPvpAddTable() {
    *this = ::std::move(from);
  }

  inline MsgPvpAddTable& operator=(const MsgPvpAddTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPvpAddTable& operator=(MsgPvpAddTable&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPvpAddTable& default_instance();

  static inline const MsgPvpAddTable* internal_default_instance() {
    return reinterpret_cast<const MsgPvpAddTable*>(
               &_MsgPvpAddTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(MsgPvpAddTable& a, MsgPvpAddTable& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPvpAddTable* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPvpAddTable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPvpAddTable* New() const final {
    return CreateMaybeMessage<MsgPvpAddTable>(nullptr);
  }

  MsgPvpAddTable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPvpAddTable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPvpAddTable& from);
  void MergeFrom(const MsgPvpAddTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPvpAddTable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPvpAddTable";
  }
  protected:
  explicit MsgPvpAddTable(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTableListFieldNumber = 2,
    kGameTypeFieldNumber = 1,
  };
  // repeated .MsgPvpSerTableInfo table_list = 2;
  int table_list_size() const;
  private:
  int _internal_table_list_size() const;
  public:
  void clear_table_list();
  ::MsgPvpSerTableInfo* mutable_table_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgPvpSerTableInfo >*
      mutable_table_list();
  private:
  const ::MsgPvpSerTableInfo& _internal_table_list(int index) const;
  ::MsgPvpSerTableInfo* _internal_add_table_list();
  public:
  const ::MsgPvpSerTableInfo& table_list(int index) const;
  ::MsgPvpSerTableInfo* add_table_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgPvpSerTableInfo >&
      table_list() const;

  // int32 game_type = 1;
  void clear_game_type();
  ::PROTOBUF_NAMESPACE_ID::int32 game_type() const;
  void set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_type() const;
  void _internal_set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgPvpAddTable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgPvpSerTableInfo > table_list_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// -------------------------------------------------------------------

class MsgPvpDelTable PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPvpDelTable) */ {
 public:
  inline MsgPvpDelTable() : MsgPvpDelTable(nullptr) {}
  virtual ~MsgPvpDelTable();

  MsgPvpDelTable(const MsgPvpDelTable& from);
  MsgPvpDelTable(MsgPvpDelTable&& from) noexcept
    : MsgPvpDelTable() {
    *this = ::std::move(from);
  }

  inline MsgPvpDelTable& operator=(const MsgPvpDelTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPvpDelTable& operator=(MsgPvpDelTable&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPvpDelTable& default_instance();

  static inline const MsgPvpDelTable* internal_default_instance() {
    return reinterpret_cast<const MsgPvpDelTable*>(
               &_MsgPvpDelTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(MsgPvpDelTable& a, MsgPvpDelTable& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPvpDelTable* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPvpDelTable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPvpDelTable* New() const final {
    return CreateMaybeMessage<MsgPvpDelTable>(nullptr);
  }

  MsgPvpDelTable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPvpDelTable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPvpDelTable& from);
  void MergeFrom(const MsgPvpDelTable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPvpDelTable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPvpDelTable";
  }
  protected:
  explicit MsgPvpDelTable(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ServerInternalProto_2eproto);
    return ::descriptor_table_ServerInternalProto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameTypeFieldNumber = 1,
    kTableIdFieldNumber = 2,
  };
  // int32 game_type = 1;
  void clear_game_type();
  ::PROTOBUF_NAMESPACE_ID::int32 game_type() const;
  void set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_type() const;
  void _internal_set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 table_id = 2;
  void clear_table_id();
  ::PROTOBUF_NAMESPACE_ID::int32 table_id() const;
  void set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_id() const;
  void _internal_set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgPvpDelTable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ServerInternalProto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgRegisterServer

// int32 ip = 1;
inline void MsgRegisterServer::clear_ip() {
  ip_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterServer::_internal_ip() const {
  return ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterServer::ip() const {
  // @@protoc_insertion_point(field_get:MsgRegisterServer.ip)
  return _internal_ip();
}
inline void MsgRegisterServer::_internal_set_ip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ip_ = value;
}
inline void MsgRegisterServer::set_ip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:MsgRegisterServer.ip)
}

// int32 port = 2;
inline void MsgRegisterServer::clear_port() {
  port_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterServer::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterServer::port() const {
  // @@protoc_insertion_point(field_get:MsgRegisterServer.port)
  return _internal_port();
}
inline void MsgRegisterServer::_internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  port_ = value;
}
inline void MsgRegisterServer::set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:MsgRegisterServer.port)
}

// int32 server_id = 3;
inline void MsgRegisterServer::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterServer::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterServer::server_id() const {
  // @@protoc_insertion_point(field_get:MsgRegisterServer.server_id)
  return _internal_server_id();
}
inline void MsgRegisterServer::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgRegisterServer::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgRegisterServer.server_id)
}

// -------------------------------------------------------------------

// MsgRegisterGameServer

// int32 ip = 1;
inline void MsgRegisterGameServer::clear_ip() {
  ip_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::_internal_ip() const {
  return ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::ip() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.ip)
  return _internal_ip();
}
inline void MsgRegisterGameServer::_internal_set_ip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ip_ = value;
}
inline void MsgRegisterGameServer::set_ip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.ip)
}

// int32 port = 2;
inline void MsgRegisterGameServer::clear_port() {
  port_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::port() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.port)
  return _internal_port();
}
inline void MsgRegisterGameServer::_internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  port_ = value;
}
inline void MsgRegisterGameServer::set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.port)
}

// int32 server_id = 3;
inline void MsgRegisterGameServer::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::server_id() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.server_id)
  return _internal_server_id();
}
inline void MsgRegisterGameServer::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgRegisterGameServer::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.server_id)
}

// int32 kind_id = 4;
inline void MsgRegisterGameServer::clear_kind_id() {
  kind_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::_internal_kind_id() const {
  return kind_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::kind_id() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.kind_id)
  return _internal_kind_id();
}
inline void MsgRegisterGameServer::_internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_id_ = value;
}
inline void MsgRegisterGameServer::set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind_id(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.kind_id)
}

// int32 room_level = 5;
inline void MsgRegisterGameServer::clear_room_level() {
  room_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::_internal_room_level() const {
  return room_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::room_level() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.room_level)
  return _internal_room_level();
}
inline void MsgRegisterGameServer::_internal_set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  room_level_ = value;
}
inline void MsgRegisterGameServer::set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_room_level(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.room_level)
}

// int32 limit_gold = 6;
inline void MsgRegisterGameServer::clear_limit_gold() {
  limit_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::_internal_limit_gold() const {
  return limit_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::limit_gold() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.limit_gold)
  return _internal_limit_gold();
}
inline void MsgRegisterGameServer::_internal_set_limit_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_gold_ = value;
}
inline void MsgRegisterGameServer::set_limit_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit_gold(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.limit_gold)
}

// int32 max_player = 7;
inline void MsgRegisterGameServer::clear_max_player() {
  max_player_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::_internal_max_player() const {
  return max_player_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterGameServer::max_player() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.max_player)
  return _internal_max_player();
}
inline void MsgRegisterGameServer::_internal_set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_player_ = value;
}
inline void MsgRegisterGameServer::set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_player(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.max_player)
}

// string room_name = 8;
inline void MsgRegisterGameServer::clear_room_name() {
  room_name_.ClearToEmpty();
}
inline const std::string& MsgRegisterGameServer::room_name() const {
  // @@protoc_insertion_point(field_get:MsgRegisterGameServer.room_name)
  return _internal_room_name();
}
inline void MsgRegisterGameServer::set_room_name(const std::string& value) {
  _internal_set_room_name(value);
  // @@protoc_insertion_point(field_set:MsgRegisterGameServer.room_name)
}
inline std::string* MsgRegisterGameServer::mutable_room_name() {
  // @@protoc_insertion_point(field_mutable:MsgRegisterGameServer.room_name)
  return _internal_mutable_room_name();
}
inline const std::string& MsgRegisterGameServer::_internal_room_name() const {
  return room_name_.Get();
}
inline void MsgRegisterGameServer::_internal_set_room_name(const std::string& value) {
  
  room_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgRegisterGameServer::set_room_name(std::string&& value) {
  
  room_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgRegisterGameServer.room_name)
}
inline void MsgRegisterGameServer::set_room_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  room_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgRegisterGameServer.room_name)
}
inline void MsgRegisterGameServer::set_room_name(const char* value,
    size_t size) {
  
  room_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgRegisterGameServer.room_name)
}
inline std::string* MsgRegisterGameServer::_internal_mutable_room_name() {
  
  return room_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgRegisterGameServer::release_room_name() {
  // @@protoc_insertion_point(field_release:MsgRegisterGameServer.room_name)
  return room_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgRegisterGameServer::set_allocated_room_name(std::string* room_name) {
  if (room_name != nullptr) {
    
  } else {
    
  }
  room_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), room_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgRegisterGameServer.room_name)
}

// -------------------------------------------------------------------

// MsgRegisterChatServer

// int32 ip = 1;
inline void MsgRegisterChatServer::clear_ip() {
  ip_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::_internal_ip() const {
  return ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::ip() const {
  // @@protoc_insertion_point(field_get:MsgRegisterChatServer.ip)
  return _internal_ip();
}
inline void MsgRegisterChatServer::_internal_set_ip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ip_ = value;
}
inline void MsgRegisterChatServer::set_ip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:MsgRegisterChatServer.ip)
}

// int32 port = 2;
inline void MsgRegisterChatServer::clear_port() {
  port_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::port() const {
  // @@protoc_insertion_point(field_get:MsgRegisterChatServer.port)
  return _internal_port();
}
inline void MsgRegisterChatServer::_internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  port_ = value;
}
inline void MsgRegisterChatServer::set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:MsgRegisterChatServer.port)
}

// int32 server_id = 3;
inline void MsgRegisterChatServer::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::server_id() const {
  // @@protoc_insertion_point(field_get:MsgRegisterChatServer.server_id)
  return _internal_server_id();
}
inline void MsgRegisterChatServer::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgRegisterChatServer::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgRegisterChatServer.server_id)
}

// int32 max_player = 4;
inline void MsgRegisterChatServer::clear_max_player() {
  max_player_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::_internal_max_player() const {
  return max_player_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRegisterChatServer::max_player() const {
  // @@protoc_insertion_point(field_get:MsgRegisterChatServer.max_player)
  return _internal_max_player();
}
inline void MsgRegisterChatServer::_internal_set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_player_ = value;
}
inline void MsgRegisterChatServer::set_max_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_player(value);
  // @@protoc_insertion_point(field_set:MsgRegisterChatServer.max_player)
}

// -------------------------------------------------------------------

// MsgApplyRobot

// int32 server_id = 1;
inline void MsgApplyRobot::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgApplyRobot::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgApplyRobot::server_id() const {
  // @@protoc_insertion_point(field_get:MsgApplyRobot.server_id)
  return _internal_server_id();
}
inline void MsgApplyRobot::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgApplyRobot::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgApplyRobot.server_id)
}

// repeated int32 num = 2;
inline int MsgApplyRobot::_internal_num_size() const {
  return num_.size();
}
inline int MsgApplyRobot::num_size() const {
  return _internal_num_size();
}
inline void MsgApplyRobot::clear_num() {
  num_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgApplyRobot::_internal_num(int index) const {
  return num_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgApplyRobot::num(int index) const {
  // @@protoc_insertion_point(field_get:MsgApplyRobot.num)
  return _internal_num(index);
}
inline void MsgApplyRobot::set_num(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  num_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgApplyRobot.num)
}
inline void MsgApplyRobot::_internal_add_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  num_.Add(value);
}
inline void MsgApplyRobot::add_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_num(value);
  // @@protoc_insertion_point(field_add:MsgApplyRobot.num)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgApplyRobot::_internal_num() const {
  return num_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgApplyRobot::num() const {
  // @@protoc_insertion_point(field_list:MsgApplyRobot.num)
  return _internal_num();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgApplyRobot::_internal_mutable_num() {
  return &num_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgApplyRobot::mutable_num() {
  // @@protoc_insertion_point(field_mutable_list:MsgApplyRobot.num)
  return _internal_mutable_num();
}

// -------------------------------------------------------------------

// MsgApplyRobotResp

// repeated int32 robot_user_id = 1;
inline int MsgApplyRobotResp::_internal_robot_user_id_size() const {
  return robot_user_id_.size();
}
inline int MsgApplyRobotResp::robot_user_id_size() const {
  return _internal_robot_user_id_size();
}
inline void MsgApplyRobotResp::clear_robot_user_id() {
  robot_user_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgApplyRobotResp::_internal_robot_user_id(int index) const {
  return robot_user_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgApplyRobotResp::robot_user_id(int index) const {
  // @@protoc_insertion_point(field_get:MsgApplyRobotResp.robot_user_id)
  return _internal_robot_user_id(index);
}
inline void MsgApplyRobotResp::set_robot_user_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  robot_user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgApplyRobotResp.robot_user_id)
}
inline void MsgApplyRobotResp::_internal_add_robot_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  robot_user_id_.Add(value);
}
inline void MsgApplyRobotResp::add_robot_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_robot_user_id(value);
  // @@protoc_insertion_point(field_add:MsgApplyRobotResp.robot_user_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgApplyRobotResp::_internal_robot_user_id() const {
  return robot_user_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgApplyRobotResp::robot_user_id() const {
  // @@protoc_insertion_point(field_list:MsgApplyRobotResp.robot_user_id)
  return _internal_robot_user_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgApplyRobotResp::_internal_mutable_robot_user_id() {
  return &robot_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgApplyRobotResp::mutable_robot_user_id() {
  // @@protoc_insertion_point(field_mutable_list:MsgApplyRobotResp.robot_user_id)
  return _internal_mutable_robot_user_id();
}

// -------------------------------------------------------------------

// MsgCreateRobot

// int32 server_id = 1;
inline void MsgCreateRobot::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobot::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobot::server_id() const {
  // @@protoc_insertion_point(field_get:MsgCreateRobot.server_id)
  return _internal_server_id();
}
inline void MsgCreateRobot::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgCreateRobot::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgCreateRobot.server_id)
}

// int32 generate_num = 2;
inline void MsgCreateRobot::clear_generate_num() {
  generate_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobot::_internal_generate_num() const {
  return generate_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobot::generate_num() const {
  // @@protoc_insertion_point(field_get:MsgCreateRobot.generate_num)
  return _internal_generate_num();
}
inline void MsgCreateRobot::_internal_set_generate_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  generate_num_ = value;
}
inline void MsgCreateRobot::set_generate_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_generate_num(value);
  // @@protoc_insertion_point(field_set:MsgCreateRobot.generate_num)
}

// int32 client_socket_id = 3;
inline void MsgCreateRobot::clear_client_socket_id() {
  client_socket_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobot::_internal_client_socket_id() const {
  return client_socket_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobot::client_socket_id() const {
  // @@protoc_insertion_point(field_get:MsgCreateRobot.client_socket_id)
  return _internal_client_socket_id();
}
inline void MsgCreateRobot::_internal_set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  client_socket_id_ = value;
}
inline void MsgCreateRobot::set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_client_socket_id(value);
  // @@protoc_insertion_point(field_set:MsgCreateRobot.client_socket_id)
}

// -------------------------------------------------------------------

// MsgCreateRobotResp

// int32 server_id = 1;
inline void MsgCreateRobotResp::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobotResp::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobotResp::server_id() const {
  // @@protoc_insertion_point(field_get:MsgCreateRobotResp.server_id)
  return _internal_server_id();
}
inline void MsgCreateRobotResp::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgCreateRobotResp::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgCreateRobotResp.server_id)
}

// repeated int32 user_id = 2;
inline int MsgCreateRobotResp::_internal_user_id_size() const {
  return user_id_.size();
}
inline int MsgCreateRobotResp::user_id_size() const {
  return _internal_user_id_size();
}
inline void MsgCreateRobotResp::clear_user_id() {
  user_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobotResp::_internal_user_id(int index) const {
  return user_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobotResp::user_id(int index) const {
  // @@protoc_insertion_point(field_get:MsgCreateRobotResp.user_id)
  return _internal_user_id(index);
}
inline void MsgCreateRobotResp::set_user_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgCreateRobotResp.user_id)
}
inline void MsgCreateRobotResp::_internal_add_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  user_id_.Add(value);
}
inline void MsgCreateRobotResp::add_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_user_id(value);
  // @@protoc_insertion_point(field_add:MsgCreateRobotResp.user_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgCreateRobotResp::_internal_user_id() const {
  return user_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgCreateRobotResp::user_id() const {
  // @@protoc_insertion_point(field_list:MsgCreateRobotResp.user_id)
  return _internal_user_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgCreateRobotResp::_internal_mutable_user_id() {
  return &user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgCreateRobotResp::mutable_user_id() {
  // @@protoc_insertion_point(field_mutable_list:MsgCreateRobotResp.user_id)
  return _internal_mutable_user_id();
}

// int32 client_socket_id = 3;
inline void MsgCreateRobotResp::clear_client_socket_id() {
  client_socket_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobotResp::_internal_client_socket_id() const {
  return client_socket_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCreateRobotResp::client_socket_id() const {
  // @@protoc_insertion_point(field_get:MsgCreateRobotResp.client_socket_id)
  return _internal_client_socket_id();
}
inline void MsgCreateRobotResp::_internal_set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  client_socket_id_ = value;
}
inline void MsgCreateRobotResp::set_client_socket_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_client_socket_id(value);
  // @@protoc_insertion_point(field_set:MsgCreateRobotResp.client_socket_id)
}

// -------------------------------------------------------------------

// MsgSendPhoneCode

// string phone = 1;
inline void MsgSendPhoneCode::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgSendPhoneCode::phone() const {
  // @@protoc_insertion_point(field_get:MsgSendPhoneCode.phone)
  return _internal_phone();
}
inline void MsgSendPhoneCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgSendPhoneCode.phone)
}
inline std::string* MsgSendPhoneCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgSendPhoneCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgSendPhoneCode::_internal_phone() const {
  return phone_.Get();
}
inline void MsgSendPhoneCode::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgSendPhoneCode::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgSendPhoneCode.phone)
}
inline void MsgSendPhoneCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgSendPhoneCode.phone)
}
inline void MsgSendPhoneCode::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgSendPhoneCode.phone)
}
inline std::string* MsgSendPhoneCode::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgSendPhoneCode::release_phone() {
  // @@protoc_insertion_point(field_release:MsgSendPhoneCode.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgSendPhoneCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgSendPhoneCode.phone)
}

// int32 code = 2;
inline void MsgSendPhoneCode::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendPhoneCode::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendPhoneCode::code() const {
  // @@protoc_insertion_point(field_get:MsgSendPhoneCode.code)
  return _internal_code();
}
inline void MsgSendPhoneCode::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void MsgSendPhoneCode::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:MsgSendPhoneCode.code)
}

// int32 id = 3;
inline void MsgSendPhoneCode::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendPhoneCode::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendPhoneCode::id() const {
  // @@protoc_insertion_point(field_get:MsgSendPhoneCode.id)
  return _internal_id();
}
inline void MsgSendPhoneCode::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void MsgSendPhoneCode::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MsgSendPhoneCode.id)
}

// -------------------------------------------------------------------

// MsgUpdatePhoneCodeState

// int32 id = 1;
inline void MsgUpdatePhoneCodeState::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdatePhoneCodeState::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdatePhoneCodeState::id() const {
  // @@protoc_insertion_point(field_get:MsgUpdatePhoneCodeState.id)
  return _internal_id();
}
inline void MsgUpdatePhoneCodeState::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void MsgUpdatePhoneCodeState::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:MsgUpdatePhoneCodeState.id)
}

// string channel = 2;
inline void MsgUpdatePhoneCodeState::clear_channel() {
  channel_.ClearToEmpty();
}
inline const std::string& MsgUpdatePhoneCodeState::channel() const {
  // @@protoc_insertion_point(field_get:MsgUpdatePhoneCodeState.channel)
  return _internal_channel();
}
inline void MsgUpdatePhoneCodeState::set_channel(const std::string& value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:MsgUpdatePhoneCodeState.channel)
}
inline std::string* MsgUpdatePhoneCodeState::mutable_channel() {
  // @@protoc_insertion_point(field_mutable:MsgUpdatePhoneCodeState.channel)
  return _internal_mutable_channel();
}
inline const std::string& MsgUpdatePhoneCodeState::_internal_channel() const {
  return channel_.Get();
}
inline void MsgUpdatePhoneCodeState::_internal_set_channel(const std::string& value) {
  
  channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgUpdatePhoneCodeState::set_channel(std::string&& value) {
  
  channel_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgUpdatePhoneCodeState.channel)
}
inline void MsgUpdatePhoneCodeState::set_channel(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgUpdatePhoneCodeState.channel)
}
inline void MsgUpdatePhoneCodeState::set_channel(const char* value,
    size_t size) {
  
  channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgUpdatePhoneCodeState.channel)
}
inline std::string* MsgUpdatePhoneCodeState::_internal_mutable_channel() {
  
  return channel_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgUpdatePhoneCodeState::release_channel() {
  // @@protoc_insertion_point(field_release:MsgUpdatePhoneCodeState.channel)
  return channel_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgUpdatePhoneCodeState::set_allocated_channel(std::string* channel) {
  if (channel != nullptr) {
    
  } else {
    
  }
  channel_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), channel,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgUpdatePhoneCodeState.channel)
}

// int32 success = 3;
inline void MsgUpdatePhoneCodeState::clear_success() {
  success_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdatePhoneCodeState::_internal_success() const {
  return success_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdatePhoneCodeState::success() const {
  // @@protoc_insertion_point(field_get:MsgUpdatePhoneCodeState.success)
  return _internal_success();
}
inline void MsgUpdatePhoneCodeState::_internal_set_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  success_ = value;
}
inline void MsgUpdatePhoneCodeState::set_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:MsgUpdatePhoneCodeState.success)
}

// -------------------------------------------------------------------

// MsgUpdateGameServerOnlineNum

// int32 server_id = 1;
inline void MsgUpdateGameServerOnlineNum::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::server_id() const {
  // @@protoc_insertion_point(field_get:MsgUpdateGameServerOnlineNum.server_id)
  return _internal_server_id();
}
inline void MsgUpdateGameServerOnlineNum::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgUpdateGameServerOnlineNum::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgUpdateGameServerOnlineNum.server_id)
}

// int32 kind_id = 2;
inline void MsgUpdateGameServerOnlineNum::clear_kind_id() {
  kind_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::_internal_kind_id() const {
  return kind_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::kind_id() const {
  // @@protoc_insertion_point(field_get:MsgUpdateGameServerOnlineNum.kind_id)
  return _internal_kind_id();
}
inline void MsgUpdateGameServerOnlineNum::_internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_id_ = value;
}
inline void MsgUpdateGameServerOnlineNum::set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind_id(value);
  // @@protoc_insertion_point(field_set:MsgUpdateGameServerOnlineNum.kind_id)
}

// int32 room_level = 3;
inline void MsgUpdateGameServerOnlineNum::clear_room_level() {
  room_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::_internal_room_level() const {
  return room_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::room_level() const {
  // @@protoc_insertion_point(field_get:MsgUpdateGameServerOnlineNum.room_level)
  return _internal_room_level();
}
inline void MsgUpdateGameServerOnlineNum::_internal_set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  room_level_ = value;
}
inline void MsgUpdateGameServerOnlineNum::set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_room_level(value);
  // @@protoc_insertion_point(field_set:MsgUpdateGameServerOnlineNum.room_level)
}

// int32 online_num = 4;
inline void MsgUpdateGameServerOnlineNum::clear_online_num() {
  online_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::_internal_online_num() const {
  return online_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateGameServerOnlineNum::online_num() const {
  // @@protoc_insertion_point(field_get:MsgUpdateGameServerOnlineNum.online_num)
  return _internal_online_num();
}
inline void MsgUpdateGameServerOnlineNum::_internal_set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  online_num_ = value;
}
inline void MsgUpdateGameServerOnlineNum::set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_online_num(value);
  // @@protoc_insertion_point(field_set:MsgUpdateGameServerOnlineNum.online_num)
}

// -------------------------------------------------------------------

// MsgGameServerUnRegister

// int32 server_id = 1;
inline void MsgGameServerUnRegister::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGameServerUnRegister::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGameServerUnRegister::server_id() const {
  // @@protoc_insertion_point(field_get:MsgGameServerUnRegister.server_id)
  return _internal_server_id();
}
inline void MsgGameServerUnRegister::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgGameServerUnRegister::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgGameServerUnRegister.server_id)
}

// int32 kind_id = 2;
inline void MsgGameServerUnRegister::clear_kind_id() {
  kind_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGameServerUnRegister::_internal_kind_id() const {
  return kind_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGameServerUnRegister::kind_id() const {
  // @@protoc_insertion_point(field_get:MsgGameServerUnRegister.kind_id)
  return _internal_kind_id();
}
inline void MsgGameServerUnRegister::_internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_id_ = value;
}
inline void MsgGameServerUnRegister::set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind_id(value);
  // @@protoc_insertion_point(field_set:MsgGameServerUnRegister.kind_id)
}

// int32 room_level = 3;
inline void MsgGameServerUnRegister::clear_room_level() {
  room_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGameServerUnRegister::_internal_room_level() const {
  return room_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGameServerUnRegister::room_level() const {
  // @@protoc_insertion_point(field_get:MsgGameServerUnRegister.room_level)
  return _internal_room_level();
}
inline void MsgGameServerUnRegister::_internal_set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  room_level_ = value;
}
inline void MsgGameServerUnRegister::set_room_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_room_level(value);
  // @@protoc_insertion_point(field_set:MsgGameServerUnRegister.room_level)
}

// -------------------------------------------------------------------

// MsgLoadCheatRate

// int64 blood_score = 1;
inline void MsgLoadCheatRate::clear_blood_score() {
  blood_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgLoadCheatRate::_internal_blood_score() const {
  return blood_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgLoadCheatRate::blood_score() const {
  // @@protoc_insertion_point(field_get:MsgLoadCheatRate.blood_score)
  return _internal_blood_score();
}
inline void MsgLoadCheatRate::_internal_set_blood_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  blood_score_ = value;
}
inline void MsgLoadCheatRate::set_blood_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_blood_score(value);
  // @@protoc_insertion_point(field_set:MsgLoadCheatRate.blood_score)
}

// int32 cheat_rate = 2;
inline void MsgLoadCheatRate::clear_cheat_rate() {
  cheat_rate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoadCheatRate::_internal_cheat_rate() const {
  return cheat_rate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoadCheatRate::cheat_rate() const {
  // @@protoc_insertion_point(field_get:MsgLoadCheatRate.cheat_rate)
  return _internal_cheat_rate();
}
inline void MsgLoadCheatRate::_internal_set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cheat_rate_ = value;
}
inline void MsgLoadCheatRate::set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cheat_rate(value);
  // @@protoc_insertion_point(field_set:MsgLoadCheatRate.cheat_rate)
}

// int64 fail_min_line_score = 3;
inline void MsgLoadCheatRate::clear_fail_min_line_score() {
  fail_min_line_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgLoadCheatRate::_internal_fail_min_line_score() const {
  return fail_min_line_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgLoadCheatRate::fail_min_line_score() const {
  // @@protoc_insertion_point(field_get:MsgLoadCheatRate.fail_min_line_score)
  return _internal_fail_min_line_score();
}
inline void MsgLoadCheatRate::_internal_set_fail_min_line_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  fail_min_line_score_ = value;
}
inline void MsgLoadCheatRate::set_fail_min_line_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_fail_min_line_score(value);
  // @@protoc_insertion_point(field_set:MsgLoadCheatRate.fail_min_line_score)
}

// int64 fail_max_line_score = 4;
inline void MsgLoadCheatRate::clear_fail_max_line_score() {
  fail_max_line_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgLoadCheatRate::_internal_fail_max_line_score() const {
  return fail_max_line_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgLoadCheatRate::fail_max_line_score() const {
  // @@protoc_insertion_point(field_get:MsgLoadCheatRate.fail_max_line_score)
  return _internal_fail_max_line_score();
}
inline void MsgLoadCheatRate::_internal_set_fail_max_line_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  fail_max_line_score_ = value;
}
inline void MsgLoadCheatRate::set_fail_max_line_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_fail_max_line_score(value);
  // @@protoc_insertion_point(field_set:MsgLoadCheatRate.fail_max_line_score)
}

// -------------------------------------------------------------------

// MsgRelayServerRegister

// int32 server_id = 1;
inline void MsgRelayServerRegister::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRegister::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRegister::server_id() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerRegister.server_id)
  return _internal_server_id();
}
inline void MsgRelayServerRegister::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgRelayServerRegister::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerRegister.server_id)
}

// int32 server_port = 2;
inline void MsgRelayServerRegister::clear_server_port() {
  server_port_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRegister::_internal_server_port() const {
  return server_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRegister::server_port() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerRegister.server_port)
  return _internal_server_port();
}
inline void MsgRelayServerRegister::_internal_set_server_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_port_ = value;
}
inline void MsgRelayServerRegister::set_server_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_port(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerRegister.server_port)
}

// -------------------------------------------------------------------

// MsgRelayServerAddMail

// int32 to_user_id = 1;
inline void MsgRelayServerAddMail::clear_to_user_id() {
  to_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::_internal_to_user_id() const {
  return to_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::to_user_id() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerAddMail.to_user_id)
  return _internal_to_user_id();
}
inline void MsgRelayServerAddMail::_internal_set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  to_user_id_ = value;
}
inline void MsgRelayServerAddMail::set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_to_user_id(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerAddMail.to_user_id)
}

// string title = 2;
inline void MsgRelayServerAddMail::clear_title() {
  title_.ClearToEmpty();
}
inline const std::string& MsgRelayServerAddMail::title() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerAddMail.title)
  return _internal_title();
}
inline void MsgRelayServerAddMail::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerAddMail.title)
}
inline std::string* MsgRelayServerAddMail::mutable_title() {
  // @@protoc_insertion_point(field_mutable:MsgRelayServerAddMail.title)
  return _internal_mutable_title();
}
inline const std::string& MsgRelayServerAddMail::_internal_title() const {
  return title_.Get();
}
inline void MsgRelayServerAddMail::_internal_set_title(const std::string& value) {
  
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgRelayServerAddMail::set_title(std::string&& value) {
  
  title_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgRelayServerAddMail.title)
}
inline void MsgRelayServerAddMail::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgRelayServerAddMail.title)
}
inline void MsgRelayServerAddMail::set_title(const char* value,
    size_t size) {
  
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgRelayServerAddMail.title)
}
inline std::string* MsgRelayServerAddMail::_internal_mutable_title() {
  
  return title_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgRelayServerAddMail::release_title() {
  // @@protoc_insertion_point(field_release:MsgRelayServerAddMail.title)
  return title_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgRelayServerAddMail::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgRelayServerAddMail.title)
}

// string content = 3;
inline void MsgRelayServerAddMail::clear_content() {
  content_.ClearToEmpty();
}
inline const std::string& MsgRelayServerAddMail::content() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerAddMail.content)
  return _internal_content();
}
inline void MsgRelayServerAddMail::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerAddMail.content)
}
inline std::string* MsgRelayServerAddMail::mutable_content() {
  // @@protoc_insertion_point(field_mutable:MsgRelayServerAddMail.content)
  return _internal_mutable_content();
}
inline const std::string& MsgRelayServerAddMail::_internal_content() const {
  return content_.Get();
}
inline void MsgRelayServerAddMail::_internal_set_content(const std::string& value) {
  
  content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgRelayServerAddMail::set_content(std::string&& value) {
  
  content_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgRelayServerAddMail.content)
}
inline void MsgRelayServerAddMail::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgRelayServerAddMail.content)
}
inline void MsgRelayServerAddMail::set_content(const char* value,
    size_t size) {
  
  content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgRelayServerAddMail.content)
}
inline std::string* MsgRelayServerAddMail::_internal_mutable_content() {
  
  return content_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgRelayServerAddMail::release_content() {
  // @@protoc_insertion_point(field_release:MsgRelayServerAddMail.content)
  return content_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgRelayServerAddMail::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgRelayServerAddMail.content)
}

// int64 num = 4;
inline void MsgRelayServerAddMail::clear_num() {
  num_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRelayServerAddMail::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRelayServerAddMail::num() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerAddMail.num)
  return _internal_num();
}
inline void MsgRelayServerAddMail::_internal_set_num(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  num_ = value;
}
inline void MsgRelayServerAddMail::set_num(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerAddMail.num)
}

// int32 type = 5;
inline void MsgRelayServerAddMail::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::type() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerAddMail.type)
  return _internal_type();
}
inline void MsgRelayServerAddMail::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgRelayServerAddMail::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerAddMail.type)
}

// int32 from_user_id = 6;
inline void MsgRelayServerAddMail::clear_from_user_id() {
  from_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::_internal_from_user_id() const {
  return from_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::from_user_id() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerAddMail.from_user_id)
  return _internal_from_user_id();
}
inline void MsgRelayServerAddMail::_internal_set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  from_user_id_ = value;
}
inline void MsgRelayServerAddMail::set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_from_user_id(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerAddMail.from_user_id)
}

// int32 coding_type = 7;
inline void MsgRelayServerAddMail::clear_coding_type() {
  coding_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::_internal_coding_type() const {
  return coding_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerAddMail::coding_type() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerAddMail.coding_type)
  return _internal_coding_type();
}
inline void MsgRelayServerAddMail::_internal_set_coding_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  coding_type_ = value;
}
inline void MsgRelayServerAddMail::set_coding_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_coding_type(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerAddMail.coding_type)
}

// -------------------------------------------------------------------

// MsgRelayServerRecharge

// int32 user_id = 1;
inline void MsgRelayServerRecharge::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::user_id() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerRecharge.user_id)
  return _internal_user_id();
}
inline void MsgRelayServerRecharge::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgRelayServerRecharge::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerRecharge.user_id)
}

// int32 gold = 2;
inline void MsgRelayServerRecharge::clear_gold() {
  gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::gold() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerRecharge.gold)
  return _internal_gold();
}
inline void MsgRelayServerRecharge::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gold_ = value;
}
inline void MsgRelayServerRecharge::set_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerRecharge.gold)
}

// int32 game_coin = 3;
inline void MsgRelayServerRecharge::clear_game_coin() {
  game_coin_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::_internal_game_coin() const {
  return game_coin_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::game_coin() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerRecharge.game_coin)
  return _internal_game_coin();
}
inline void MsgRelayServerRecharge::_internal_set_game_coin(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_coin_ = value;
}
inline void MsgRelayServerRecharge::set_game_coin(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_coin(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerRecharge.game_coin)
}

// int32 type = 4;
inline void MsgRelayServerRecharge::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRelayServerRecharge::type() const {
  // @@protoc_insertion_point(field_get:MsgRelayServerRecharge.type)
  return _internal_type();
}
inline void MsgRelayServerRecharge::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgRelayServerRecharge::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgRelayServerRecharge.type)
}

// -------------------------------------------------------------------

// MsgUpdateChatServerOnlineNum

// int32 server_id = 1;
inline void MsgUpdateChatServerOnlineNum::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateChatServerOnlineNum::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateChatServerOnlineNum::server_id() const {
  // @@protoc_insertion_point(field_get:MsgUpdateChatServerOnlineNum.server_id)
  return _internal_server_id();
}
inline void MsgUpdateChatServerOnlineNum::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgUpdateChatServerOnlineNum::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgUpdateChatServerOnlineNum.server_id)
}

// int32 online_num = 2;
inline void MsgUpdateChatServerOnlineNum::clear_online_num() {
  online_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateChatServerOnlineNum::_internal_online_num() const {
  return online_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateChatServerOnlineNum::online_num() const {
  // @@protoc_insertion_point(field_get:MsgUpdateChatServerOnlineNum.online_num)
  return _internal_online_num();
}
inline void MsgUpdateChatServerOnlineNum::_internal_set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  online_num_ = value;
}
inline void MsgUpdateChatServerOnlineNum::set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_online_num(value);
  // @@protoc_insertion_point(field_set:MsgUpdateChatServerOnlineNum.online_num)
}

// -------------------------------------------------------------------

// MsgUpdateLImitChat

// int32 user_id = 1;
inline void MsgUpdateLImitChat::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateLImitChat::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateLImitChat::user_id() const {
  // @@protoc_insertion_point(field_get:MsgUpdateLImitChat.user_id)
  return _internal_user_id();
}
inline void MsgUpdateLImitChat::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgUpdateLImitChat::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgUpdateLImitChat.user_id)
}

// int32 chat_limit_state = 2;
inline void MsgUpdateLImitChat::clear_chat_limit_state() {
  chat_limit_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateLImitChat::_internal_chat_limit_state() const {
  return chat_limit_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpdateLImitChat::chat_limit_state() const {
  // @@protoc_insertion_point(field_get:MsgUpdateLImitChat.chat_limit_state)
  return _internal_chat_limit_state();
}
inline void MsgUpdateLImitChat::_internal_set_chat_limit_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chat_limit_state_ = value;
}
inline void MsgUpdateLImitChat::set_chat_limit_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chat_limit_state(value);
  // @@protoc_insertion_point(field_set:MsgUpdateLImitChat.chat_limit_state)
}

// -------------------------------------------------------------------

// MsgWebCmd

// int32 cmd_id = 1;
inline void MsgWebCmd::clear_cmd_id() {
  cmd_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::_internal_cmd_id() const {
  return cmd_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::cmd_id() const {
  // @@protoc_insertion_point(field_get:MsgWebCmd.cmd_id)
  return _internal_cmd_id();
}
inline void MsgWebCmd::_internal_set_cmd_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cmd_id_ = value;
}
inline void MsgWebCmd::set_cmd_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd_id(value);
  // @@protoc_insertion_point(field_set:MsgWebCmd.cmd_id)
}

// int32 param1 = 2;
inline void MsgWebCmd::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::param1() const {
  // @@protoc_insertion_point(field_get:MsgWebCmd.param1)
  return _internal_param1();
}
inline void MsgWebCmd::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void MsgWebCmd::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:MsgWebCmd.param1)
}

// int32 param2 = 3;
inline void MsgWebCmd::clear_param2() {
  param2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::_internal_param2() const {
  return param2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::param2() const {
  // @@protoc_insertion_point(field_get:MsgWebCmd.param2)
  return _internal_param2();
}
inline void MsgWebCmd::_internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param2_ = value;
}
inline void MsgWebCmd::set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:MsgWebCmd.param2)
}

// int32 param3 = 4;
inline void MsgWebCmd::clear_param3() {
  param3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::_internal_param3() const {
  return param3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWebCmd::param3() const {
  // @@protoc_insertion_point(field_get:MsgWebCmd.param3)
  return _internal_param3();
}
inline void MsgWebCmd::_internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param3_ = value;
}
inline void MsgWebCmd::set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param3(value);
  // @@protoc_insertion_point(field_set:MsgWebCmd.param3)
}

// -------------------------------------------------------------------

// MsgDBCommonKV

// int32 k = 1;
inline void MsgDBCommonKV::clear_k() {
  k_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBCommonKV::_internal_k() const {
  return k_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBCommonKV::k() const {
  // @@protoc_insertion_point(field_get:MsgDBCommonKV.k)
  return _internal_k();
}
inline void MsgDBCommonKV::_internal_set_k(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  k_ = value;
}
inline void MsgDBCommonKV::set_k(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_k(value);
  // @@protoc_insertion_point(field_set:MsgDBCommonKV.k)
}

// int32 v = 2;
inline void MsgDBCommonKV::clear_v() {
  v_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBCommonKV::_internal_v() const {
  return v_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBCommonKV::v() const {
  // @@protoc_insertion_point(field_get:MsgDBCommonKV.v)
  return _internal_v();
}
inline void MsgDBCommonKV::_internal_set_v(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  v_ = value;
}
inline void MsgDBCommonKV::set_v(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_v(value);
  // @@protoc_insertion_point(field_set:MsgDBCommonKV.v)
}

// -------------------------------------------------------------------

// MsgDBUpdateOnlineNum

// int32 server_id = 1;
inline void MsgDBUpdateOnlineNum::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateOnlineNum::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateOnlineNum::server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdateOnlineNum.server_id)
  return _internal_server_id();
}
inline void MsgDBUpdateOnlineNum::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgDBUpdateOnlineNum::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdateOnlineNum.server_id)
}

// int32 port = 2;
inline void MsgDBUpdateOnlineNum::clear_port() {
  port_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateOnlineNum::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateOnlineNum::port() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdateOnlineNum.port)
  return _internal_port();
}
inline void MsgDBUpdateOnlineNum::_internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  port_ = value;
}
inline void MsgDBUpdateOnlineNum::set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdateOnlineNum.port)
}

// int32 online_num = 3;
inline void MsgDBUpdateOnlineNum::clear_online_num() {
  online_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateOnlineNum::_internal_online_num() const {
  return online_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateOnlineNum::online_num() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdateOnlineNum.online_num)
  return _internal_online_num();
}
inline void MsgDBUpdateOnlineNum::_internal_set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  online_num_ = value;
}
inline void MsgDBUpdateOnlineNum::set_online_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_online_num(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdateOnlineNum.online_num)
}

// -------------------------------------------------------------------

// MsgDBRegisterLogin

// int32 server_id = 1;
inline void MsgDBRegisterLogin::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBRegisterLogin::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBRegisterLogin::server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBRegisterLogin.server_id)
  return _internal_server_id();
}
inline void MsgDBRegisterLogin::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgDBRegisterLogin::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBRegisterLogin.server_id)
}

// int32 port = 2;
inline void MsgDBRegisterLogin::clear_port() {
  port_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBRegisterLogin::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBRegisterLogin::port() const {
  // @@protoc_insertion_point(field_get:MsgDBRegisterLogin.port)
  return _internal_port();
}
inline void MsgDBRegisterLogin::_internal_set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  port_ = value;
}
inline void MsgDBRegisterLogin::set_port(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:MsgDBRegisterLogin.port)
}

// -------------------------------------------------------------------

// MsgPlayerAttribute

// int32 user_id = 1;
inline void MsgPlayerAttribute::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::user_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAttribute.user_id)
  return _internal_user_id();
}
inline void MsgPlayerAttribute::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgPlayerAttribute::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerAttribute.user_id)
}

// int32 beautiful_id = 2;
inline void MsgPlayerAttribute::clear_beautiful_id() {
  beautiful_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::_internal_beautiful_id() const {
  return beautiful_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::beautiful_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAttribute.beautiful_id)
  return _internal_beautiful_id();
}
inline void MsgPlayerAttribute::_internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  beautiful_id_ = value;
}
inline void MsgPlayerAttribute::set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_beautiful_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerAttribute.beautiful_id)
}

// int32 user_type = 3;
inline void MsgPlayerAttribute::clear_user_type() {
  user_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::_internal_user_type() const {
  return user_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::user_type() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAttribute.user_type)
  return _internal_user_type();
}
inline void MsgPlayerAttribute::_internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_type_ = value;
}
inline void MsgPlayerAttribute::set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_type(value);
  // @@protoc_insertion_point(field_set:MsgPlayerAttribute.user_type)
}

// string phone = 4;
inline void MsgPlayerAttribute::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgPlayerAttribute::phone() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAttribute.phone)
  return _internal_phone();
}
inline void MsgPlayerAttribute::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgPlayerAttribute.phone)
}
inline std::string* MsgPlayerAttribute::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerAttribute.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgPlayerAttribute::_internal_phone() const {
  return phone_.Get();
}
inline void MsgPlayerAttribute::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerAttribute::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerAttribute.phone)
}
inline void MsgPlayerAttribute::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerAttribute.phone)
}
inline void MsgPlayerAttribute::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerAttribute.phone)
}
inline std::string* MsgPlayerAttribute::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerAttribute::release_phone() {
  // @@protoc_insertion_point(field_release:MsgPlayerAttribute.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerAttribute::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerAttribute.phone)
}

// int64 coin = 5;
inline void MsgPlayerAttribute::clear_coin() {
  coin_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgPlayerAttribute::_internal_coin() const {
  return coin_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgPlayerAttribute::coin() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAttribute.coin)
  return _internal_coin();
}
inline void MsgPlayerAttribute::_internal_set_coin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  coin_ = value;
}
inline void MsgPlayerAttribute::set_coin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_coin(value);
  // @@protoc_insertion_point(field_set:MsgPlayerAttribute.coin)
}

// int32 head_id = 7;
inline void MsgPlayerAttribute::clear_head_id() {
  head_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::_internal_head_id() const {
  return head_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerAttribute::head_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAttribute.head_id)
  return _internal_head_id();
}
inline void MsgPlayerAttribute::_internal_set_head_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  head_id_ = value;
}
inline void MsgPlayerAttribute::set_head_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_head_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerAttribute.head_id)
}

// string nickname = 8;
inline void MsgPlayerAttribute::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgPlayerAttribute::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPlayerAttribute.nickname)
  return _internal_nickname();
}
inline void MsgPlayerAttribute::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgPlayerAttribute.nickname)
}
inline std::string* MsgPlayerAttribute::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerAttribute.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgPlayerAttribute::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgPlayerAttribute::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerAttribute::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerAttribute.nickname)
}
inline void MsgPlayerAttribute::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerAttribute.nickname)
}
inline void MsgPlayerAttribute::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerAttribute.nickname)
}
inline std::string* MsgPlayerAttribute::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerAttribute::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgPlayerAttribute.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerAttribute::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerAttribute.nickname)
}

// -------------------------------------------------------------------

// MsgLoginPlayerInfo

// int32 res_code = 1;
inline void MsgLoginPlayerInfo::clear_res_code() {
  res_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_res_code() const {
  return res_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::res_code() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.res_code)
  return _internal_res_code();
}
inline void MsgLoginPlayerInfo::_internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_code_ = value;
}
inline void MsgLoginPlayerInfo::set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_code(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.res_code)
}

// int32 user_id = 2;
inline void MsgLoginPlayerInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::user_id() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.user_id)
  return _internal_user_id();
}
inline void MsgLoginPlayerInfo::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgLoginPlayerInfo::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.user_id)
}

// int32 beautiful_id = 3;
inline void MsgLoginPlayerInfo::clear_beautiful_id() {
  beautiful_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_beautiful_id() const {
  return beautiful_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::beautiful_id() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.beautiful_id)
  return _internal_beautiful_id();
}
inline void MsgLoginPlayerInfo::_internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  beautiful_id_ = value;
}
inline void MsgLoginPlayerInfo::set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_beautiful_id(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.beautiful_id)
}

// string account = 4;
inline void MsgLoginPlayerInfo::clear_account() {
  account_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::account() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.account)
  return _internal_account();
}
inline void MsgLoginPlayerInfo::set_account(const std::string& value) {
  _internal_set_account(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.account)
}
inline std::string* MsgLoginPlayerInfo::mutable_account() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.account)
  return _internal_mutable_account();
}
inline const std::string& MsgLoginPlayerInfo::_internal_account() const {
  return account_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_account(const std::string& value) {
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_account(std::string&& value) {
  
  account_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.account)
}
inline void MsgLoginPlayerInfo::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.account)
}
inline void MsgLoginPlayerInfo::set_account(const char* value,
    size_t size) {
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.account)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_account() {
  
  return account_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_account() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.account)
  return account_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_account(std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.account)
}

// string nickname = 5;
inline void MsgLoginPlayerInfo::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.nickname)
  return _internal_nickname();
}
inline void MsgLoginPlayerInfo::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.nickname)
}
inline std::string* MsgLoginPlayerInfo::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgLoginPlayerInfo::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.nickname)
}
inline void MsgLoginPlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.nickname)
}
inline void MsgLoginPlayerInfo::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.nickname)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.nickname)
}

// string avatar = 6;
inline void MsgLoginPlayerInfo::clear_avatar() {
  avatar_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::avatar() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.avatar)
  return _internal_avatar();
}
inline void MsgLoginPlayerInfo::set_avatar(const std::string& value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.avatar)
}
inline std::string* MsgLoginPlayerInfo::mutable_avatar() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.avatar)
  return _internal_mutable_avatar();
}
inline const std::string& MsgLoginPlayerInfo::_internal_avatar() const {
  return avatar_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_avatar(const std::string& value) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_avatar(std::string&& value) {
  
  avatar_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.avatar)
}
inline void MsgLoginPlayerInfo::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.avatar)
}
inline void MsgLoginPlayerInfo::set_avatar(const char* value,
    size_t size) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.avatar)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_avatar() {
  
  return avatar_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.avatar)
  return avatar_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_avatar(std::string* avatar) {
  if (avatar != nullptr) {
    
  } else {
    
  }
  avatar_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.avatar)
}

// bool first_recharge = 7;
inline void MsgLoginPlayerInfo::clear_first_recharge() {
  first_recharge_ = false;
}
inline bool MsgLoginPlayerInfo::_internal_first_recharge() const {
  return first_recharge_;
}
inline bool MsgLoginPlayerInfo::first_recharge() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.first_recharge)
  return _internal_first_recharge();
}
inline void MsgLoginPlayerInfo::_internal_set_first_recharge(bool value) {
  
  first_recharge_ = value;
}
inline void MsgLoginPlayerInfo::set_first_recharge(bool value) {
  _internal_set_first_recharge(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.first_recharge)
}

// int32 user_type = 8;
inline void MsgLoginPlayerInfo::clear_user_type() {
  user_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_user_type() const {
  return user_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::user_type() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.user_type)
  return _internal_user_type();
}
inline void MsgLoginPlayerInfo::_internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_type_ = value;
}
inline void MsgLoginPlayerInfo::set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_type(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.user_type)
}

// int32 is_drain = 9;
inline void MsgLoginPlayerInfo::clear_is_drain() {
  is_drain_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_is_drain() const {
  return is_drain_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::is_drain() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.is_drain)
  return _internal_is_drain();
}
inline void MsgLoginPlayerInfo::_internal_set_is_drain(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_drain_ = value;
}
inline void MsgLoginPlayerInfo::set_is_drain(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_drain(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.is_drain)
}

// uint64 coin = 10;
inline void MsgLoginPlayerInfo::clear_coin() {
  coin_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgLoginPlayerInfo::_internal_coin() const {
  return coin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgLoginPlayerInfo::coin() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.coin)
  return _internal_coin();
}
inline void MsgLoginPlayerInfo::_internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  coin_ = value;
}
inline void MsgLoginPlayerInfo::set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_coin(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.coin)
}

// string phone_num = 11;
inline void MsgLoginPlayerInfo::clear_phone_num() {
  phone_num_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::phone_num() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.phone_num)
  return _internal_phone_num();
}
inline void MsgLoginPlayerInfo::set_phone_num(const std::string& value) {
  _internal_set_phone_num(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.phone_num)
}
inline std::string* MsgLoginPlayerInfo::mutable_phone_num() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.phone_num)
  return _internal_mutable_phone_num();
}
inline const std::string& MsgLoginPlayerInfo::_internal_phone_num() const {
  return phone_num_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_phone_num(const std::string& value) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_phone_num(std::string&& value) {
  
  phone_num_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.phone_num)
}
inline void MsgLoginPlayerInfo::set_phone_num(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.phone_num)
}
inline void MsgLoginPlayerInfo::set_phone_num(const char* value,
    size_t size) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.phone_num)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_phone_num() {
  
  return phone_num_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_phone_num() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.phone_num)
  return phone_num_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_phone_num(std::string* phone_num) {
  if (phone_num != nullptr) {
    
  } else {
    
  }
  phone_num_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone_num,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.phone_num)
}

// string password = 12;
inline void MsgLoginPlayerInfo::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::password() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.password)
  return _internal_password();
}
inline void MsgLoginPlayerInfo::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.password)
}
inline std::string* MsgLoginPlayerInfo::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.password)
  return _internal_mutable_password();
}
inline const std::string& MsgLoginPlayerInfo::_internal_password() const {
  return password_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.password)
}
inline void MsgLoginPlayerInfo::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.password)
}
inline void MsgLoginPlayerInfo::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.password)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_password() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.password)
}

// int32 vip_level = 13;
inline void MsgLoginPlayerInfo::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.vip_level)
  return _internal_vip_level();
}
inline void MsgLoginPlayerInfo::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgLoginPlayerInfo::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.vip_level)
}

// int32 avatar_frame = 14;
inline void MsgLoginPlayerInfo::clear_avatar_frame() {
  avatar_frame_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_avatar_frame() const {
  return avatar_frame_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::avatar_frame() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.avatar_frame)
  return _internal_avatar_frame();
}
inline void MsgLoginPlayerInfo::_internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avatar_frame_ = value;
}
inline void MsgLoginPlayerInfo::set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avatar_frame(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.avatar_frame)
}

// int32 channel_id = 15;
inline void MsgLoginPlayerInfo::clear_channel_id() {
  channel_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::channel_id() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.channel_id)
  return _internal_channel_id();
}
inline void MsgLoginPlayerInfo::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channel_id_ = value;
}
inline void MsgLoginPlayerInfo::set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.channel_id)
}

// string invite_code = 18;
inline void MsgLoginPlayerInfo::clear_invite_code() {
  invite_code_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::invite_code() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.invite_code)
  return _internal_invite_code();
}
inline void MsgLoginPlayerInfo::set_invite_code(const std::string& value) {
  _internal_set_invite_code(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.invite_code)
}
inline std::string* MsgLoginPlayerInfo::mutable_invite_code() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.invite_code)
  return _internal_mutable_invite_code();
}
inline const std::string& MsgLoginPlayerInfo::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_invite_code(const std::string& value) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_invite_code(std::string&& value) {
  
  invite_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.invite_code)
}
inline void MsgLoginPlayerInfo::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.invite_code)
}
inline void MsgLoginPlayerInfo::set_invite_code(const char* value,
    size_t size) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.invite_code)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_invite_code() {
  
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_invite_code() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.invite_code)
  return invite_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    
  } else {
    
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.invite_code)
}

// string signature = 19;
inline void MsgLoginPlayerInfo::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::signature() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.signature)
  return _internal_signature();
}
inline void MsgLoginPlayerInfo::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.signature)
}
inline std::string* MsgLoginPlayerInfo::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.signature)
  return _internal_mutable_signature();
}
inline const std::string& MsgLoginPlayerInfo::_internal_signature() const {
  return signature_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.signature)
}
inline void MsgLoginPlayerInfo::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.signature)
}
inline void MsgLoginPlayerInfo::set_signature(const char* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.signature)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_signature() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.signature)
}

// int32 agent_level = 20;
inline void MsgLoginPlayerInfo::clear_agent_level() {
  agent_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_agent_level() const {
  return agent_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::agent_level() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.agent_level)
  return _internal_agent_level();
}
inline void MsgLoginPlayerInfo::_internal_set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agent_level_ = value;
}
inline void MsgLoginPlayerInfo::set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agent_level(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.agent_level)
}

// string whatsup_msg = 21;
inline void MsgLoginPlayerInfo::clear_whatsup_msg() {
  whatsup_msg_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::whatsup_msg() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.whatsup_msg)
  return _internal_whatsup_msg();
}
inline void MsgLoginPlayerInfo::set_whatsup_msg(const std::string& value) {
  _internal_set_whatsup_msg(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.whatsup_msg)
}
inline std::string* MsgLoginPlayerInfo::mutable_whatsup_msg() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.whatsup_msg)
  return _internal_mutable_whatsup_msg();
}
inline const std::string& MsgLoginPlayerInfo::_internal_whatsup_msg() const {
  return whatsup_msg_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_whatsup_msg(const std::string& value) {
  
  whatsup_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_whatsup_msg(std::string&& value) {
  
  whatsup_msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.whatsup_msg)
}
inline void MsgLoginPlayerInfo::set_whatsup_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  whatsup_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.whatsup_msg)
}
inline void MsgLoginPlayerInfo::set_whatsup_msg(const char* value,
    size_t size) {
  
  whatsup_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.whatsup_msg)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_whatsup_msg() {
  
  return whatsup_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_whatsup_msg() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.whatsup_msg)
  return whatsup_msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_whatsup_msg(std::string* whatsup_msg) {
  if (whatsup_msg != nullptr) {
    
  } else {
    
  }
  whatsup_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), whatsup_msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.whatsup_msg)
}

// string telegram_msg = 22;
inline void MsgLoginPlayerInfo::clear_telegram_msg() {
  telegram_msg_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::telegram_msg() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.telegram_msg)
  return _internal_telegram_msg();
}
inline void MsgLoginPlayerInfo::set_telegram_msg(const std::string& value) {
  _internal_set_telegram_msg(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.telegram_msg)
}
inline std::string* MsgLoginPlayerInfo::mutable_telegram_msg() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.telegram_msg)
  return _internal_mutable_telegram_msg();
}
inline const std::string& MsgLoginPlayerInfo::_internal_telegram_msg() const {
  return telegram_msg_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_telegram_msg(const std::string& value) {
  
  telegram_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_telegram_msg(std::string&& value) {
  
  telegram_msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.telegram_msg)
}
inline void MsgLoginPlayerInfo::set_telegram_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  telegram_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.telegram_msg)
}
inline void MsgLoginPlayerInfo::set_telegram_msg(const char* value,
    size_t size) {
  
  telegram_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.telegram_msg)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_telegram_msg() {
  
  return telegram_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_telegram_msg() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.telegram_msg)
  return telegram_msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_telegram_msg(std::string* telegram_msg) {
  if (telegram_msg != nullptr) {
    
  } else {
    
  }
  telegram_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), telegram_msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.telegram_msg)
}

// string facebook_msg = 23;
inline void MsgLoginPlayerInfo::clear_facebook_msg() {
  facebook_msg_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::facebook_msg() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.facebook_msg)
  return _internal_facebook_msg();
}
inline void MsgLoginPlayerInfo::set_facebook_msg(const std::string& value) {
  _internal_set_facebook_msg(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.facebook_msg)
}
inline std::string* MsgLoginPlayerInfo::mutable_facebook_msg() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.facebook_msg)
  return _internal_mutable_facebook_msg();
}
inline const std::string& MsgLoginPlayerInfo::_internal_facebook_msg() const {
  return facebook_msg_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_facebook_msg(const std::string& value) {
  
  facebook_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_facebook_msg(std::string&& value) {
  
  facebook_msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.facebook_msg)
}
inline void MsgLoginPlayerInfo::set_facebook_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  facebook_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.facebook_msg)
}
inline void MsgLoginPlayerInfo::set_facebook_msg(const char* value,
    size_t size) {
  
  facebook_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.facebook_msg)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_facebook_msg() {
  
  return facebook_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_facebook_msg() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.facebook_msg)
  return facebook_msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_facebook_msg(std::string* facebook_msg) {
  if (facebook_msg != nullptr) {
    
  } else {
    
  }
  facebook_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), facebook_msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.facebook_msg)
}

// int32 new_inviter = 24;
inline void MsgLoginPlayerInfo::clear_new_inviter() {
  new_inviter_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_new_inviter() const {
  return new_inviter_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::new_inviter() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.new_inviter)
  return _internal_new_inviter();
}
inline void MsgLoginPlayerInfo::_internal_set_new_inviter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  new_inviter_ = value;
}
inline void MsgLoginPlayerInfo::set_new_inviter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_new_inviter(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.new_inviter)
}

// int32 bind_id = 25;
inline void MsgLoginPlayerInfo::clear_bind_id() {
  bind_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_bind_id() const {
  return bind_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::bind_id() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.bind_id)
  return _internal_bind_id();
}
inline void MsgLoginPlayerInfo::_internal_set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bind_id_ = value;
}
inline void MsgLoginPlayerInfo::set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bind_id(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.bind_id)
}

// string ip_info = 26;
inline void MsgLoginPlayerInfo::clear_ip_info() {
  ip_info_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::ip_info() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.ip_info)
  return _internal_ip_info();
}
inline void MsgLoginPlayerInfo::set_ip_info(const std::string& value) {
  _internal_set_ip_info(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.ip_info)
}
inline std::string* MsgLoginPlayerInfo::mutable_ip_info() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.ip_info)
  return _internal_mutable_ip_info();
}
inline const std::string& MsgLoginPlayerInfo::_internal_ip_info() const {
  return ip_info_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_ip_info(const std::string& value) {
  
  ip_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_ip_info(std::string&& value) {
  
  ip_info_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.ip_info)
}
inline void MsgLoginPlayerInfo::set_ip_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.ip_info)
}
inline void MsgLoginPlayerInfo::set_ip_info(const char* value,
    size_t size) {
  
  ip_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.ip_info)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_ip_info() {
  
  return ip_info_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_ip_info() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.ip_info)
  return ip_info_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_ip_info(std::string* ip_info) {
  if (ip_info != nullptr) {
    
  } else {
    
  }
  ip_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ip_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.ip_info)
}

// string longitude = 27;
inline void MsgLoginPlayerInfo::clear_longitude() {
  longitude_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::longitude() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.longitude)
  return _internal_longitude();
}
inline void MsgLoginPlayerInfo::set_longitude(const std::string& value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.longitude)
}
inline std::string* MsgLoginPlayerInfo::mutable_longitude() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.longitude)
  return _internal_mutable_longitude();
}
inline const std::string& MsgLoginPlayerInfo::_internal_longitude() const {
  return longitude_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_longitude(const std::string& value) {
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_longitude(std::string&& value) {
  
  longitude_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.longitude)
}
inline void MsgLoginPlayerInfo::set_longitude(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.longitude)
}
inline void MsgLoginPlayerInfo::set_longitude(const char* value,
    size_t size) {
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.longitude)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_longitude() {
  
  return longitude_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_longitude() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.longitude)
  return longitude_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_longitude(std::string* longitude) {
  if (longitude != nullptr) {
    
  } else {
    
  }
  longitude_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), longitude,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.longitude)
}

// string latitude = 28;
inline void MsgLoginPlayerInfo::clear_latitude() {
  latitude_.ClearToEmpty();
}
inline const std::string& MsgLoginPlayerInfo::latitude() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.latitude)
  return _internal_latitude();
}
inline void MsgLoginPlayerInfo::set_latitude(const std::string& value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.latitude)
}
inline std::string* MsgLoginPlayerInfo::mutable_latitude() {
  // @@protoc_insertion_point(field_mutable:MsgLoginPlayerInfo.latitude)
  return _internal_mutable_latitude();
}
inline const std::string& MsgLoginPlayerInfo::_internal_latitude() const {
  return latitude_.Get();
}
inline void MsgLoginPlayerInfo::_internal_set_latitude(const std::string& value) {
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgLoginPlayerInfo::set_latitude(std::string&& value) {
  
  latitude_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgLoginPlayerInfo.latitude)
}
inline void MsgLoginPlayerInfo::set_latitude(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgLoginPlayerInfo.latitude)
}
inline void MsgLoginPlayerInfo::set_latitude(const char* value,
    size_t size) {
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgLoginPlayerInfo.latitude)
}
inline std::string* MsgLoginPlayerInfo::_internal_mutable_latitude() {
  
  return latitude_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgLoginPlayerInfo::release_latitude() {
  // @@protoc_insertion_point(field_release:MsgLoginPlayerInfo.latitude)
  return latitude_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgLoginPlayerInfo::set_allocated_latitude(std::string* latitude) {
  if (latitude != nullptr) {
    
  } else {
    
  }
  latitude_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), latitude,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgLoginPlayerInfo.latitude)
}

// bool frist_login = 29;
inline void MsgLoginPlayerInfo::clear_frist_login() {
  frist_login_ = false;
}
inline bool MsgLoginPlayerInfo::_internal_frist_login() const {
  return frist_login_;
}
inline bool MsgLoginPlayerInfo::frist_login() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.frist_login)
  return _internal_frist_login();
}
inline void MsgLoginPlayerInfo::_internal_set_frist_login(bool value) {
  
  frist_login_ = value;
}
inline void MsgLoginPlayerInfo::set_frist_login(bool value) {
  _internal_set_frist_login(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.frist_login)
}

// int32 agent_type = 30;
inline void MsgLoginPlayerInfo::clear_agent_type() {
  agent_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_agent_type() const {
  return agent_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::agent_type() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.agent_type)
  return _internal_agent_type();
}
inline void MsgLoginPlayerInfo::_internal_set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agent_type_ = value;
}
inline void MsgLoginPlayerInfo::set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agent_type(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.agent_type)
}

// int32 server_id = 31;
inline void MsgLoginPlayerInfo::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::server_id() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.server_id)
  return _internal_server_id();
}
inline void MsgLoginPlayerInfo::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgLoginPlayerInfo::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.server_id)
}

// int32 kind_id = 32;
inline void MsgLoginPlayerInfo::clear_kind_id() {
  kind_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_kind_id() const {
  return kind_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::kind_id() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.kind_id)
  return _internal_kind_id();
}
inline void MsgLoginPlayerInfo::_internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_id_ = value;
}
inline void MsgLoginPlayerInfo::set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind_id(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.kind_id)
}

// int32 register_gold = 33;
inline void MsgLoginPlayerInfo::clear_register_gold() {
  register_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::_internal_register_gold() const {
  return register_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgLoginPlayerInfo::register_gold() const {
  // @@protoc_insertion_point(field_get:MsgLoginPlayerInfo.register_gold)
  return _internal_register_gold();
}
inline void MsgLoginPlayerInfo::_internal_set_register_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  register_gold_ = value;
}
inline void MsgLoginPlayerInfo::set_register_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_register_gold(value);
  // @@protoc_insertion_point(field_set:MsgLoginPlayerInfo.register_gold)
}

// -------------------------------------------------------------------

// MsgDBLoginOut

// int32 user_id = 1;
inline void MsgDBLoginOut::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoginOut::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoginOut::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBLoginOut.user_id)
  return _internal_user_id();
}
inline void MsgDBLoginOut::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBLoginOut::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBLoginOut.user_id)
}

// int32 online_time = 2;
inline void MsgDBLoginOut::clear_online_time() {
  online_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoginOut::_internal_online_time() const {
  return online_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoginOut::online_time() const {
  // @@protoc_insertion_point(field_get:MsgDBLoginOut.online_time)
  return _internal_online_time();
}
inline void MsgDBLoginOut::_internal_set_online_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  online_time_ = value;
}
inline void MsgDBLoginOut::set_online_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_online_time(value);
  // @@protoc_insertion_point(field_set:MsgDBLoginOut.online_time)
}

// -------------------------------------------------------------------

// MsgDBUpdatePlayerInfo

// int32 user_id = 1;
inline void MsgDBUpdatePlayerInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdatePlayerInfo::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdatePlayerInfo::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdatePlayerInfo.user_id)
  return _internal_user_id();
}
inline void MsgDBUpdatePlayerInfo::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBUpdatePlayerInfo::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdatePlayerInfo.user_id)
}

// int32 beautiful_id = 2;
inline void MsgDBUpdatePlayerInfo::clear_beautiful_id() {
  beautiful_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdatePlayerInfo::_internal_beautiful_id() const {
  return beautiful_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdatePlayerInfo::beautiful_id() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdatePlayerInfo.beautiful_id)
  return _internal_beautiful_id();
}
inline void MsgDBUpdatePlayerInfo::_internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  beautiful_id_ = value;
}
inline void MsgDBUpdatePlayerInfo::set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_beautiful_id(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdatePlayerInfo.beautiful_id)
}

// int32 user_type = 3;
inline void MsgDBUpdatePlayerInfo::clear_user_type() {
  user_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdatePlayerInfo::_internal_user_type() const {
  return user_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdatePlayerInfo::user_type() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdatePlayerInfo.user_type)
  return _internal_user_type();
}
inline void MsgDBUpdatePlayerInfo::_internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_type_ = value;
}
inline void MsgDBUpdatePlayerInfo::set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_type(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdatePlayerInfo.user_type)
}

// string phone = 4;
inline void MsgDBUpdatePlayerInfo::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgDBUpdatePlayerInfo::phone() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdatePlayerInfo.phone)
  return _internal_phone();
}
inline void MsgDBUpdatePlayerInfo::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdatePlayerInfo.phone)
}
inline std::string* MsgDBUpdatePlayerInfo::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgDBUpdatePlayerInfo.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgDBUpdatePlayerInfo::_internal_phone() const {
  return phone_.Get();
}
inline void MsgDBUpdatePlayerInfo::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBUpdatePlayerInfo::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBUpdatePlayerInfo.phone)
}
inline void MsgDBUpdatePlayerInfo::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBUpdatePlayerInfo.phone)
}
inline void MsgDBUpdatePlayerInfo::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBUpdatePlayerInfo.phone)
}
inline std::string* MsgDBUpdatePlayerInfo::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBUpdatePlayerInfo::release_phone() {
  // @@protoc_insertion_point(field_release:MsgDBUpdatePlayerInfo.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBUpdatePlayerInfo::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBUpdatePlayerInfo.phone)
}

// string nickname = 5;
inline void MsgDBUpdatePlayerInfo::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgDBUpdatePlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdatePlayerInfo.nickname)
  return _internal_nickname();
}
inline void MsgDBUpdatePlayerInfo::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdatePlayerInfo.nickname)
}
inline std::string* MsgDBUpdatePlayerInfo::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgDBUpdatePlayerInfo.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgDBUpdatePlayerInfo::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgDBUpdatePlayerInfo::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBUpdatePlayerInfo::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBUpdatePlayerInfo.nickname)
}
inline void MsgDBUpdatePlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBUpdatePlayerInfo.nickname)
}
inline void MsgDBUpdatePlayerInfo::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBUpdatePlayerInfo.nickname)
}
inline std::string* MsgDBUpdatePlayerInfo::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBUpdatePlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgDBUpdatePlayerInfo.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBUpdatePlayerInfo::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBUpdatePlayerInfo.nickname)
}

// string password = 6;
inline void MsgDBUpdatePlayerInfo::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgDBUpdatePlayerInfo::password() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdatePlayerInfo.password)
  return _internal_password();
}
inline void MsgDBUpdatePlayerInfo::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdatePlayerInfo.password)
}
inline std::string* MsgDBUpdatePlayerInfo::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgDBUpdatePlayerInfo.password)
  return _internal_mutable_password();
}
inline const std::string& MsgDBUpdatePlayerInfo::_internal_password() const {
  return password_.Get();
}
inline void MsgDBUpdatePlayerInfo::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBUpdatePlayerInfo::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBUpdatePlayerInfo.password)
}
inline void MsgDBUpdatePlayerInfo::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBUpdatePlayerInfo.password)
}
inline void MsgDBUpdatePlayerInfo::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBUpdatePlayerInfo.password)
}
inline std::string* MsgDBUpdatePlayerInfo::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBUpdatePlayerInfo::release_password() {
  // @@protoc_insertion_point(field_release:MsgDBUpdatePlayerInfo.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBUpdatePlayerInfo::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBUpdatePlayerInfo.password)
}

// -------------------------------------------------------------------

// MsgDBMailData

// int32 user_id = 1;
inline void MsgDBMailData::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMailData::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMailData::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBMailData.user_id)
  return _internal_user_id();
}
inline void MsgDBMailData::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBMailData::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBMailData.user_id)
}

// int32 mail_id = 2;
inline void MsgDBMailData::clear_mail_id() {
  mail_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMailData::_internal_mail_id() const {
  return mail_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMailData::mail_id() const {
  // @@protoc_insertion_point(field_get:MsgDBMailData.mail_id)
  return _internal_mail_id();
}
inline void MsgDBMailData::_internal_set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mail_id_ = value;
}
inline void MsgDBMailData::set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mail_id(value);
  // @@protoc_insertion_point(field_set:MsgDBMailData.mail_id)
}

// -------------------------------------------------------------------

// MsgDBMail

// int32 mail_guid = 1;
inline void MsgDBMail::clear_mail_guid() {
  mail_guid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::_internal_mail_guid() const {
  return mail_guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::mail_guid() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.mail_guid)
  return _internal_mail_guid();
}
inline void MsgDBMail::_internal_set_mail_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mail_guid_ = value;
}
inline void MsgDBMail::set_mail_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mail_guid(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.mail_guid)
}

// int32 mail_id = 2;
inline void MsgDBMail::clear_mail_id() {
  mail_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::_internal_mail_id() const {
  return mail_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::mail_id() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.mail_id)
  return _internal_mail_id();
}
inline void MsgDBMail::_internal_set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mail_id_ = value;
}
inline void MsgDBMail::set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mail_id(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.mail_id)
}

// int32 sender_id = 3;
inline void MsgDBMail::clear_sender_id() {
  sender_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::_internal_sender_id() const {
  return sender_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::sender_id() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.sender_id)
  return _internal_sender_id();
}
inline void MsgDBMail::_internal_set_sender_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sender_id_ = value;
}
inline void MsgDBMail::set_sender_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.sender_id)
}

// int32 recver_beautiful_id = 4;
inline void MsgDBMail::clear_recver_beautiful_id() {
  recver_beautiful_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::_internal_recver_beautiful_id() const {
  return recver_beautiful_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::recver_beautiful_id() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.recver_beautiful_id)
  return _internal_recver_beautiful_id();
}
inline void MsgDBMail::_internal_set_recver_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recver_beautiful_id_ = value;
}
inline void MsgDBMail::set_recver_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recver_beautiful_id(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.recver_beautiful_id)
}

// string mail_title = 5;
inline void MsgDBMail::clear_mail_title() {
  mail_title_.ClearToEmpty();
}
inline const std::string& MsgDBMail::mail_title() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.mail_title)
  return _internal_mail_title();
}
inline void MsgDBMail::set_mail_title(const std::string& value) {
  _internal_set_mail_title(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.mail_title)
}
inline std::string* MsgDBMail::mutable_mail_title() {
  // @@protoc_insertion_point(field_mutable:MsgDBMail.mail_title)
  return _internal_mutable_mail_title();
}
inline const std::string& MsgDBMail::_internal_mail_title() const {
  return mail_title_.Get();
}
inline void MsgDBMail::_internal_set_mail_title(const std::string& value) {
  
  mail_title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBMail::set_mail_title(std::string&& value) {
  
  mail_title_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBMail.mail_title)
}
inline void MsgDBMail::set_mail_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mail_title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBMail.mail_title)
}
inline void MsgDBMail::set_mail_title(const char* value,
    size_t size) {
  
  mail_title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBMail.mail_title)
}
inline std::string* MsgDBMail::_internal_mutable_mail_title() {
  
  return mail_title_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBMail::release_mail_title() {
  // @@protoc_insertion_point(field_release:MsgDBMail.mail_title)
  return mail_title_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBMail::set_allocated_mail_title(std::string* mail_title) {
  if (mail_title != nullptr) {
    
  } else {
    
  }
  mail_title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mail_title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBMail.mail_title)
}

// string mail_content = 6;
inline void MsgDBMail::clear_mail_content() {
  mail_content_.ClearToEmpty();
}
inline const std::string& MsgDBMail::mail_content() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.mail_content)
  return _internal_mail_content();
}
inline void MsgDBMail::set_mail_content(const std::string& value) {
  _internal_set_mail_content(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.mail_content)
}
inline std::string* MsgDBMail::mutable_mail_content() {
  // @@protoc_insertion_point(field_mutable:MsgDBMail.mail_content)
  return _internal_mutable_mail_content();
}
inline const std::string& MsgDBMail::_internal_mail_content() const {
  return mail_content_.Get();
}
inline void MsgDBMail::_internal_set_mail_content(const std::string& value) {
  
  mail_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBMail::set_mail_content(std::string&& value) {
  
  mail_content_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBMail.mail_content)
}
inline void MsgDBMail::set_mail_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mail_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBMail.mail_content)
}
inline void MsgDBMail::set_mail_content(const char* value,
    size_t size) {
  
  mail_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBMail.mail_content)
}
inline std::string* MsgDBMail::_internal_mutable_mail_content() {
  
  return mail_content_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBMail::release_mail_content() {
  // @@protoc_insertion_point(field_release:MsgDBMail.mail_content)
  return mail_content_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBMail::set_allocated_mail_content(std::string* mail_content) {
  if (mail_content != nullptr) {
    
  } else {
    
  }
  mail_content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mail_content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBMail.mail_content)
}

// int64 gold = 7;
inline void MsgDBMail::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBMail::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBMail::gold() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.gold)
  return _internal_gold();
}
inline void MsgDBMail::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void MsgDBMail::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.gold)
}

// int64 send_time = 8;
inline void MsgDBMail::clear_send_time() {
  send_time_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBMail::_internal_send_time() const {
  return send_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBMail::send_time() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.send_time)
  return _internal_send_time();
}
inline void MsgDBMail::_internal_set_send_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  send_time_ = value;
}
inline void MsgDBMail::set_send_time(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_send_time(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.send_time)
}

// int32 is_custom = 9;
inline void MsgDBMail::clear_is_custom() {
  is_custom_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::_internal_is_custom() const {
  return is_custom_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBMail::is_custom() const {
  // @@protoc_insertion_point(field_get:MsgDBMail.is_custom)
  return _internal_is_custom();
}
inline void MsgDBMail::_internal_set_is_custom(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_custom_ = value;
}
inline void MsgDBMail::set_is_custom(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_custom(value);
  // @@protoc_insertion_point(field_set:MsgDBMail.is_custom)
}

// -------------------------------------------------------------------

// MsgDBRegisterGame

// int32 server_id = 1;
inline void MsgDBRegisterGame::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBRegisterGame::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBRegisterGame::server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBRegisterGame.server_id)
  return _internal_server_id();
}
inline void MsgDBRegisterGame::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgDBRegisterGame::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBRegisterGame.server_id)
}

// string server_name = 2;
inline void MsgDBRegisterGame::clear_server_name() {
  server_name_.ClearToEmpty();
}
inline const std::string& MsgDBRegisterGame::server_name() const {
  // @@protoc_insertion_point(field_get:MsgDBRegisterGame.server_name)
  return _internal_server_name();
}
inline void MsgDBRegisterGame::set_server_name(const std::string& value) {
  _internal_set_server_name(value);
  // @@protoc_insertion_point(field_set:MsgDBRegisterGame.server_name)
}
inline std::string* MsgDBRegisterGame::mutable_server_name() {
  // @@protoc_insertion_point(field_mutable:MsgDBRegisterGame.server_name)
  return _internal_mutable_server_name();
}
inline const std::string& MsgDBRegisterGame::_internal_server_name() const {
  return server_name_.Get();
}
inline void MsgDBRegisterGame::_internal_set_server_name(const std::string& value) {
  
  server_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBRegisterGame::set_server_name(std::string&& value) {
  
  server_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBRegisterGame.server_name)
}
inline void MsgDBRegisterGame::set_server_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  server_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBRegisterGame.server_name)
}
inline void MsgDBRegisterGame::set_server_name(const char* value,
    size_t size) {
  
  server_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBRegisterGame.server_name)
}
inline std::string* MsgDBRegisterGame::_internal_mutable_server_name() {
  
  return server_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBRegisterGame::release_server_name() {
  // @@protoc_insertion_point(field_release:MsgDBRegisterGame.server_name)
  return server_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBRegisterGame::set_allocated_server_name(std::string* server_name) {
  if (server_name != nullptr) {
    
  } else {
    
  }
  server_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), server_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBRegisterGame.server_name)
}

// -------------------------------------------------------------------

// MsgDBLoadRobotInfo

// int32 user_id = 1;
inline void MsgDBLoadRobotInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoadRobotInfo::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoadRobotInfo::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBLoadRobotInfo.user_id)
  return _internal_user_id();
}
inline void MsgDBLoadRobotInfo::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBLoadRobotInfo::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBLoadRobotInfo.user_id)
}

// int32 vip_level = 2;
inline void MsgDBLoadRobotInfo::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoadRobotInfo::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBLoadRobotInfo::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgDBLoadRobotInfo.vip_level)
  return _internal_vip_level();
}
inline void MsgDBLoadRobotInfo::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgDBLoadRobotInfo::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgDBLoadRobotInfo.vip_level)
}

// -------------------------------------------------------------------

// MsgDBLoadRobot

// repeated .MsgDBLoadRobotInfo info = 1;
inline int MsgDBLoadRobot::_internal_info_size() const {
  return info_.size();
}
inline int MsgDBLoadRobot::info_size() const {
  return _internal_info_size();
}
inline void MsgDBLoadRobot::clear_info() {
  info_.Clear();
}
inline ::MsgDBLoadRobotInfo* MsgDBLoadRobot::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgDBLoadRobot.info)
  return info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgDBLoadRobotInfo >*
MsgDBLoadRobot::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgDBLoadRobot.info)
  return &info_;
}
inline const ::MsgDBLoadRobotInfo& MsgDBLoadRobot::_internal_info(int index) const {
  return info_.Get(index);
}
inline const ::MsgDBLoadRobotInfo& MsgDBLoadRobot::info(int index) const {
  // @@protoc_insertion_point(field_get:MsgDBLoadRobot.info)
  return _internal_info(index);
}
inline ::MsgDBLoadRobotInfo* MsgDBLoadRobot::_internal_add_info() {
  return info_.Add();
}
inline ::MsgDBLoadRobotInfo* MsgDBLoadRobot::add_info() {
  // @@protoc_insertion_point(field_add:MsgDBLoadRobot.info)
  return _internal_add_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgDBLoadRobotInfo >&
MsgDBLoadRobot::info() const {
  // @@protoc_insertion_point(field_list:MsgDBLoadRobot.info)
  return info_;
}

// -------------------------------------------------------------------

// MsgDBGamePlayerLogin

// int32 user_id = 1;
inline void MsgDBGamePlayerLogin::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLogin::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLogin::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLogin.user_id)
  return _internal_user_id();
}
inline void MsgDBGamePlayerLogin::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBGamePlayerLogin::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLogin.user_id)
}

// string password = 2;
inline void MsgDBGamePlayerLogin::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLogin::password() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLogin.password)
  return _internal_password();
}
inline void MsgDBGamePlayerLogin::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLogin.password)
}
inline std::string* MsgDBGamePlayerLogin::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLogin.password)
  return _internal_mutable_password();
}
inline const std::string& MsgDBGamePlayerLogin::_internal_password() const {
  return password_.Get();
}
inline void MsgDBGamePlayerLogin::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLogin::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLogin.password)
}
inline void MsgDBGamePlayerLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLogin.password)
}
inline void MsgDBGamePlayerLogin::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLogin.password)
}
inline std::string* MsgDBGamePlayerLogin::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLogin::release_password() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLogin.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLogin::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLogin.password)
}

// string ip = 3;
inline void MsgDBGamePlayerLogin::clear_ip() {
  ip_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLogin::ip() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLogin.ip)
  return _internal_ip();
}
inline void MsgDBGamePlayerLogin::set_ip(const std::string& value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLogin.ip)
}
inline std::string* MsgDBGamePlayerLogin::mutable_ip() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLogin.ip)
  return _internal_mutable_ip();
}
inline const std::string& MsgDBGamePlayerLogin::_internal_ip() const {
  return ip_.Get();
}
inline void MsgDBGamePlayerLogin::_internal_set_ip(const std::string& value) {
  
  ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLogin::set_ip(std::string&& value) {
  
  ip_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLogin.ip)
}
inline void MsgDBGamePlayerLogin::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLogin.ip)
}
inline void MsgDBGamePlayerLogin::set_ip(const char* value,
    size_t size) {
  
  ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLogin.ip)
}
inline std::string* MsgDBGamePlayerLogin::_internal_mutable_ip() {
  
  return ip_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLogin::release_ip() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLogin.ip)
  return ip_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLogin::set_allocated_ip(std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ip,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLogin.ip)
}

// string longitude = 4;
inline void MsgDBGamePlayerLogin::clear_longitude() {
  longitude_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLogin::longitude() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLogin.longitude)
  return _internal_longitude();
}
inline void MsgDBGamePlayerLogin::set_longitude(const std::string& value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLogin.longitude)
}
inline std::string* MsgDBGamePlayerLogin::mutable_longitude() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLogin.longitude)
  return _internal_mutable_longitude();
}
inline const std::string& MsgDBGamePlayerLogin::_internal_longitude() const {
  return longitude_.Get();
}
inline void MsgDBGamePlayerLogin::_internal_set_longitude(const std::string& value) {
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLogin::set_longitude(std::string&& value) {
  
  longitude_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLogin.longitude)
}
inline void MsgDBGamePlayerLogin::set_longitude(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLogin.longitude)
}
inline void MsgDBGamePlayerLogin::set_longitude(const char* value,
    size_t size) {
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLogin.longitude)
}
inline std::string* MsgDBGamePlayerLogin::_internal_mutable_longitude() {
  
  return longitude_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLogin::release_longitude() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLogin.longitude)
  return longitude_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLogin::set_allocated_longitude(std::string* longitude) {
  if (longitude != nullptr) {
    
  } else {
    
  }
  longitude_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), longitude,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLogin.longitude)
}

// string latitude = 5;
inline void MsgDBGamePlayerLogin::clear_latitude() {
  latitude_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLogin::latitude() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLogin.latitude)
  return _internal_latitude();
}
inline void MsgDBGamePlayerLogin::set_latitude(const std::string& value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLogin.latitude)
}
inline std::string* MsgDBGamePlayerLogin::mutable_latitude() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLogin.latitude)
  return _internal_mutable_latitude();
}
inline const std::string& MsgDBGamePlayerLogin::_internal_latitude() const {
  return latitude_.Get();
}
inline void MsgDBGamePlayerLogin::_internal_set_latitude(const std::string& value) {
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLogin::set_latitude(std::string&& value) {
  
  latitude_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLogin.latitude)
}
inline void MsgDBGamePlayerLogin::set_latitude(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLogin.latitude)
}
inline void MsgDBGamePlayerLogin::set_latitude(const char* value,
    size_t size) {
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLogin.latitude)
}
inline std::string* MsgDBGamePlayerLogin::_internal_mutable_latitude() {
  
  return latitude_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLogin::release_latitude() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLogin.latitude)
  return latitude_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLogin::set_allocated_latitude(std::string* latitude) {
  if (latitude != nullptr) {
    
  } else {
    
  }
  latitude_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), latitude,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLogin.latitude)
}

// -------------------------------------------------------------------

// MsgDBPlayerReconnectData

// int32 user_id = 1;
inline void MsgDBPlayerReconnectData::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.user_id)
  return _internal_user_id();
}
inline void MsgDBPlayerReconnectData::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBPlayerReconnectData::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.user_id)
}

// int32 server_id = 2;
inline void MsgDBPlayerReconnectData::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.server_id)
  return _internal_server_id();
}
inline void MsgDBPlayerReconnectData::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgDBPlayerReconnectData::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.server_id)
}

// int32 multiple = 3;
inline void MsgDBPlayerReconnectData::clear_multiple() {
  multiple_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_multiple() const {
  return multiple_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::multiple() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.multiple)
  return _internal_multiple();
}
inline void MsgDBPlayerReconnectData::_internal_set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  multiple_ = value;
}
inline void MsgDBPlayerReconnectData::set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_multiple(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.multiple)
}

// int32 score_bonus = 4;
inline void MsgDBPlayerReconnectData::clear_score_bonus() {
  score_bonus_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_score_bonus() const {
  return score_bonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::score_bonus() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.score_bonus)
  return _internal_score_bonus();
}
inline void MsgDBPlayerReconnectData::_internal_set_score_bonus(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  score_bonus_ = value;
}
inline void MsgDBPlayerReconnectData::set_score_bonus(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_score_bonus(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.score_bonus)
}

// int32 left_free_game_cnt = 5;
inline void MsgDBPlayerReconnectData::clear_left_free_game_cnt() {
  left_free_game_cnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_left_free_game_cnt() const {
  return left_free_game_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::left_free_game_cnt() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.left_free_game_cnt)
  return _internal_left_free_game_cnt();
}
inline void MsgDBPlayerReconnectData::_internal_set_left_free_game_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  left_free_game_cnt_ = value;
}
inline void MsgDBPlayerReconnectData::set_left_free_game_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_free_game_cnt(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.left_free_game_cnt)
}

// int32 small_game_type = 6;
inline void MsgDBPlayerReconnectData::clear_small_game_type() {
  small_game_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_small_game_type() const {
  return small_game_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::small_game_type() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.small_game_type)
  return _internal_small_game_type();
}
inline void MsgDBPlayerReconnectData::_internal_set_small_game_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  small_game_type_ = value;
}
inline void MsgDBPlayerReconnectData::set_small_game_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_small_game_type(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.small_game_type)
}

// int32 small_game_fail_cnt = 7;
inline void MsgDBPlayerReconnectData::clear_small_game_fail_cnt() {
  small_game_fail_cnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_small_game_fail_cnt() const {
  return small_game_fail_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::small_game_fail_cnt() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.small_game_fail_cnt)
  return _internal_small_game_fail_cnt();
}
inline void MsgDBPlayerReconnectData::_internal_set_small_game_fail_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  small_game_fail_cnt_ = value;
}
inline void MsgDBPlayerReconnectData::set_small_game_fail_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_small_game_fail_cnt(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.small_game_fail_cnt)
}

// int32 game_level = 8;
inline void MsgDBPlayerReconnectData::clear_game_level() {
  game_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_game_level() const {
  return game_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::game_level() const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.game_level)
  return _internal_game_level();
}
inline void MsgDBPlayerReconnectData::_internal_set_game_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_level_ = value;
}
inline void MsgDBPlayerReconnectData::set_game_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_level(value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.game_level)
}

// repeated int32 param = 9;
inline int MsgDBPlayerReconnectData::_internal_param_size() const {
  return param_.size();
}
inline int MsgDBPlayerReconnectData::param_size() const {
  return _internal_param_size();
}
inline void MsgDBPlayerReconnectData::clear_param() {
  param_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::_internal_param(int index) const {
  return param_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPlayerReconnectData::param(int index) const {
  // @@protoc_insertion_point(field_get:MsgDBPlayerReconnectData.param)
  return _internal_param(index);
}
inline void MsgDBPlayerReconnectData::set_param(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  param_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgDBPlayerReconnectData.param)
}
inline void MsgDBPlayerReconnectData::_internal_add_param(::PROTOBUF_NAMESPACE_ID::int32 value) {
  param_.Add(value);
}
inline void MsgDBPlayerReconnectData::add_param(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_param(value);
  // @@protoc_insertion_point(field_add:MsgDBPlayerReconnectData.param)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgDBPlayerReconnectData::_internal_param() const {
  return param_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgDBPlayerReconnectData::param() const {
  // @@protoc_insertion_point(field_list:MsgDBPlayerReconnectData.param)
  return _internal_param();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgDBPlayerReconnectData::_internal_mutable_param() {
  return &param_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgDBPlayerReconnectData::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:MsgDBPlayerReconnectData.param)
  return _internal_mutable_param();
}

// -------------------------------------------------------------------

// MsgDBGamePlayerLoginResp

// int32 res_code = 1;
inline void MsgDBGamePlayerLoginResp::clear_res_code() {
  res_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::_internal_res_code() const {
  return res_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::res_code() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.res_code)
  return _internal_res_code();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_code_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_code(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.res_code)
}

// int32 user_id = 2;
inline void MsgDBGamePlayerLoginResp::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.user_id)
  return _internal_user_id();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.user_id)
}

// int32 beautiful_id = 3;
inline void MsgDBGamePlayerLoginResp::clear_beautiful_id() {
  beautiful_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::_internal_beautiful_id() const {
  return beautiful_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::beautiful_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.beautiful_id)
  return _internal_beautiful_id();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  beautiful_id_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_beautiful_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.beautiful_id)
}

// string nickname = 4;
inline void MsgDBGamePlayerLoginResp::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLoginResp::nickname() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.nickname)
  return _internal_nickname();
}
inline void MsgDBGamePlayerLoginResp::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.nickname)
}
inline std::string* MsgDBGamePlayerLoginResp::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLoginResp.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgDBGamePlayerLoginResp::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLoginResp.nickname)
}
inline void MsgDBGamePlayerLoginResp::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLoginResp.nickname)
}
inline void MsgDBGamePlayerLoginResp::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLoginResp.nickname)
}
inline std::string* MsgDBGamePlayerLoginResp::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLoginResp::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLoginResp.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLoginResp.nickname)
}

// string avatar = 5;
inline void MsgDBGamePlayerLoginResp::clear_avatar() {
  avatar_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLoginResp::avatar() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.avatar)
  return _internal_avatar();
}
inline void MsgDBGamePlayerLoginResp::set_avatar(const std::string& value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.avatar)
}
inline std::string* MsgDBGamePlayerLoginResp::mutable_avatar() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLoginResp.avatar)
  return _internal_mutable_avatar();
}
inline const std::string& MsgDBGamePlayerLoginResp::_internal_avatar() const {
  return avatar_.Get();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_avatar(const std::string& value) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_avatar(std::string&& value) {
  
  avatar_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLoginResp.avatar)
}
inline void MsgDBGamePlayerLoginResp::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLoginResp.avatar)
}
inline void MsgDBGamePlayerLoginResp::set_avatar(const char* value,
    size_t size) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLoginResp.avatar)
}
inline std::string* MsgDBGamePlayerLoginResp::_internal_mutable_avatar() {
  
  return avatar_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLoginResp::release_avatar() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLoginResp.avatar)
  return avatar_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_allocated_avatar(std::string* avatar) {
  if (avatar != nullptr) {
    
  } else {
    
  }
  avatar_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLoginResp.avatar)
}

// uint64 coin = 6;
inline void MsgDBGamePlayerLoginResp::clear_coin() {
  coin_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgDBGamePlayerLoginResp::_internal_coin() const {
  return coin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgDBGamePlayerLoginResp::coin() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.coin)
  return _internal_coin();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  coin_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_coin(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.coin)
}

// string password = 7;
inline void MsgDBGamePlayerLoginResp::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLoginResp::password() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.password)
  return _internal_password();
}
inline void MsgDBGamePlayerLoginResp::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.password)
}
inline std::string* MsgDBGamePlayerLoginResp::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLoginResp.password)
  return _internal_mutable_password();
}
inline const std::string& MsgDBGamePlayerLoginResp::_internal_password() const {
  return password_.Get();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLoginResp.password)
}
inline void MsgDBGamePlayerLoginResp::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLoginResp.password)
}
inline void MsgDBGamePlayerLoginResp::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLoginResp.password)
}
inline std::string* MsgDBGamePlayerLoginResp::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLoginResp::release_password() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLoginResp.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLoginResp.password)
}

// int32 cheat_rate = 8;
inline void MsgDBGamePlayerLoginResp::clear_cheat_rate() {
  cheat_rate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::_internal_cheat_rate() const {
  return cheat_rate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::cheat_rate() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.cheat_rate)
  return _internal_cheat_rate();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cheat_rate_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cheat_rate(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.cheat_rate)
}

// int32 vip_level = 9;
inline void MsgDBGamePlayerLoginResp::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.vip_level)
  return _internal_vip_level();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.vip_level)
}

// int32 avatar_frame = 10;
inline void MsgDBGamePlayerLoginResp::clear_avatar_frame() {
  avatar_frame_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::_internal_avatar_frame() const {
  return avatar_frame_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::avatar_frame() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.avatar_frame)
  return _internal_avatar_frame();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avatar_frame_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avatar_frame(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.avatar_frame)
}

// .MsgDBPlayerReconnectData reconnect_data = 11;
inline bool MsgDBGamePlayerLoginResp::_internal_has_reconnect_data() const {
  return this != internal_default_instance() && reconnect_data_ != nullptr;
}
inline bool MsgDBGamePlayerLoginResp::has_reconnect_data() const {
  return _internal_has_reconnect_data();
}
inline void MsgDBGamePlayerLoginResp::clear_reconnect_data() {
  if (GetArena() == nullptr && reconnect_data_ != nullptr) {
    delete reconnect_data_;
  }
  reconnect_data_ = nullptr;
}
inline const ::MsgDBPlayerReconnectData& MsgDBGamePlayerLoginResp::_internal_reconnect_data() const {
  const ::MsgDBPlayerReconnectData* p = reconnect_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::MsgDBPlayerReconnectData&>(
      ::_MsgDBPlayerReconnectData_default_instance_);
}
inline const ::MsgDBPlayerReconnectData& MsgDBGamePlayerLoginResp::reconnect_data() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.reconnect_data)
  return _internal_reconnect_data();
}
inline void MsgDBGamePlayerLoginResp::unsafe_arena_set_allocated_reconnect_data(
    ::MsgDBPlayerReconnectData* reconnect_data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reconnect_data_);
  }
  reconnect_data_ = reconnect_data;
  if (reconnect_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MsgDBGamePlayerLoginResp.reconnect_data)
}
inline ::MsgDBPlayerReconnectData* MsgDBGamePlayerLoginResp::release_reconnect_data() {
  
  ::MsgDBPlayerReconnectData* temp = reconnect_data_;
  reconnect_data_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MsgDBPlayerReconnectData* MsgDBGamePlayerLoginResp::unsafe_arena_release_reconnect_data() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLoginResp.reconnect_data)
  
  ::MsgDBPlayerReconnectData* temp = reconnect_data_;
  reconnect_data_ = nullptr;
  return temp;
}
inline ::MsgDBPlayerReconnectData* MsgDBGamePlayerLoginResp::_internal_mutable_reconnect_data() {
  
  if (reconnect_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::MsgDBPlayerReconnectData>(GetArena());
    reconnect_data_ = p;
  }
  return reconnect_data_;
}
inline ::MsgDBPlayerReconnectData* MsgDBGamePlayerLoginResp::mutable_reconnect_data() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLoginResp.reconnect_data)
  return _internal_mutable_reconnect_data();
}
inline void MsgDBGamePlayerLoginResp::set_allocated_reconnect_data(::MsgDBPlayerReconnectData* reconnect_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reconnect_data_;
  }
  if (reconnect_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reconnect_data);
    if (message_arena != submessage_arena) {
      reconnect_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reconnect_data, submessage_arena);
    }
    
  } else {
    
  }
  reconnect_data_ = reconnect_data;
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLoginResp.reconnect_data)
}

// int32 login_server_id = 12;
inline void MsgDBGamePlayerLoginResp::clear_login_server_id() {
  login_server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::_internal_login_server_id() const {
  return login_server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGamePlayerLoginResp::login_server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.login_server_id)
  return _internal_login_server_id();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  login_server_id_ = value;
}
inline void MsgDBGamePlayerLoginResp::set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_login_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.login_server_id)
}

// string user_ip = 13;
inline void MsgDBGamePlayerLoginResp::clear_user_ip() {
  user_ip_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLoginResp::user_ip() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.user_ip)
  return _internal_user_ip();
}
inline void MsgDBGamePlayerLoginResp::set_user_ip(const std::string& value) {
  _internal_set_user_ip(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.user_ip)
}
inline std::string* MsgDBGamePlayerLoginResp::mutable_user_ip() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLoginResp.user_ip)
  return _internal_mutable_user_ip();
}
inline const std::string& MsgDBGamePlayerLoginResp::_internal_user_ip() const {
  return user_ip_.Get();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_user_ip(const std::string& value) {
  
  user_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_user_ip(std::string&& value) {
  
  user_ip_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLoginResp.user_ip)
}
inline void MsgDBGamePlayerLoginResp::set_user_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLoginResp.user_ip)
}
inline void MsgDBGamePlayerLoginResp::set_user_ip(const char* value,
    size_t size) {
  
  user_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLoginResp.user_ip)
}
inline std::string* MsgDBGamePlayerLoginResp::_internal_mutable_user_ip() {
  
  return user_ip_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLoginResp::release_user_ip() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLoginResp.user_ip)
  return user_ip_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_allocated_user_ip(std::string* user_ip) {
  if (user_ip != nullptr) {
    
  } else {
    
  }
  user_ip_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), user_ip,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLoginResp.user_ip)
}

// string longitude = 14;
inline void MsgDBGamePlayerLoginResp::clear_longitude() {
  longitude_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLoginResp::longitude() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.longitude)
  return _internal_longitude();
}
inline void MsgDBGamePlayerLoginResp::set_longitude(const std::string& value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.longitude)
}
inline std::string* MsgDBGamePlayerLoginResp::mutable_longitude() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLoginResp.longitude)
  return _internal_mutable_longitude();
}
inline const std::string& MsgDBGamePlayerLoginResp::_internal_longitude() const {
  return longitude_.Get();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_longitude(const std::string& value) {
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_longitude(std::string&& value) {
  
  longitude_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLoginResp.longitude)
}
inline void MsgDBGamePlayerLoginResp::set_longitude(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLoginResp.longitude)
}
inline void MsgDBGamePlayerLoginResp::set_longitude(const char* value,
    size_t size) {
  
  longitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLoginResp.longitude)
}
inline std::string* MsgDBGamePlayerLoginResp::_internal_mutable_longitude() {
  
  return longitude_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLoginResp::release_longitude() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLoginResp.longitude)
  return longitude_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_allocated_longitude(std::string* longitude) {
  if (longitude != nullptr) {
    
  } else {
    
  }
  longitude_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), longitude,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLoginResp.longitude)
}

// string latitude = 15;
inline void MsgDBGamePlayerLoginResp::clear_latitude() {
  latitude_.ClearToEmpty();
}
inline const std::string& MsgDBGamePlayerLoginResp::latitude() const {
  // @@protoc_insertion_point(field_get:MsgDBGamePlayerLoginResp.latitude)
  return _internal_latitude();
}
inline void MsgDBGamePlayerLoginResp::set_latitude(const std::string& value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:MsgDBGamePlayerLoginResp.latitude)
}
inline std::string* MsgDBGamePlayerLoginResp::mutable_latitude() {
  // @@protoc_insertion_point(field_mutable:MsgDBGamePlayerLoginResp.latitude)
  return _internal_mutable_latitude();
}
inline const std::string& MsgDBGamePlayerLoginResp::_internal_latitude() const {
  return latitude_.Get();
}
inline void MsgDBGamePlayerLoginResp::_internal_set_latitude(const std::string& value) {
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_latitude(std::string&& value) {
  
  latitude_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBGamePlayerLoginResp.latitude)
}
inline void MsgDBGamePlayerLoginResp::set_latitude(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBGamePlayerLoginResp.latitude)
}
inline void MsgDBGamePlayerLoginResp::set_latitude(const char* value,
    size_t size) {
  
  latitude_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBGamePlayerLoginResp.latitude)
}
inline std::string* MsgDBGamePlayerLoginResp::_internal_mutable_latitude() {
  
  return latitude_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBGamePlayerLoginResp::release_latitude() {
  // @@protoc_insertion_point(field_release:MsgDBGamePlayerLoginResp.latitude)
  return latitude_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBGamePlayerLoginResp::set_allocated_latitude(std::string* latitude) {
  if (latitude != nullptr) {
    
  } else {
    
  }
  latitude_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), latitude,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBGamePlayerLoginResp.latitude)
}

// -------------------------------------------------------------------

// MsgDBWriteScore

// int32 user_id = 1;
inline void MsgDBWriteScore::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.user_id)
  return _internal_user_id();
}
inline void MsgDBWriteScore::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBWriteScore::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.user_id)
}

// int32 bet = 2;
inline void MsgDBWriteScore::clear_bet() {
  bet_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::bet() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.bet)
  return _internal_bet();
}
inline void MsgDBWriteScore::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_ = value;
}
inline void MsgDBWriteScore::set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.bet)
}

// int64 score = 3;
inline void MsgDBWriteScore::clear_score() {
  score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScore::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScore::score() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.score)
  return _internal_score();
}
inline void MsgDBWriteScore::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  score_ = value;
}
inline void MsgDBWriteScore::set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.score)
}

// int32 is_up_rank = 4;
inline void MsgDBWriteScore::clear_is_up_rank() {
  is_up_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::_internal_is_up_rank() const {
  return is_up_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::is_up_rank() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.is_up_rank)
  return _internal_is_up_rank();
}
inline void MsgDBWriteScore::_internal_set_is_up_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_up_rank_ = value;
}
inline void MsgDBWriteScore::set_is_up_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_up_rank(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.is_up_rank)
}

// int32 table_id = 5;
inline void MsgDBWriteScore::clear_table_id() {
  table_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::_internal_table_id() const {
  return table_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::table_id() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.table_id)
  return _internal_table_id();
}
inline void MsgDBWriteScore::_internal_set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_id_ = value;
}
inline void MsgDBWriteScore::set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_id(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.table_id)
}

// int32 table_no = 6;
inline void MsgDBWriteScore::clear_table_no() {
  table_no_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::_internal_table_no() const {
  return table_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::table_no() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.table_no)
  return _internal_table_no();
}
inline void MsgDBWriteScore::_internal_set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_no_ = value;
}
inline void MsgDBWriteScore::set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_no(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.table_no)
}

// int64 tax_score = 7;
inline void MsgDBWriteScore::clear_tax_score() {
  tax_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScore::_internal_tax_score() const {
  return tax_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScore::tax_score() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.tax_score)
  return _internal_tax_score();
}
inline void MsgDBWriteScore::_internal_set_tax_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  tax_score_ = value;
}
inline void MsgDBWriteScore::set_tax_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tax_score(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.tax_score)
}

// int32 valid_bet = 8;
inline void MsgDBWriteScore::clear_valid_bet() {
  valid_bet_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::_internal_valid_bet() const {
  return valid_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScore::valid_bet() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.valid_bet)
  return _internal_valid_bet();
}
inline void MsgDBWriteScore::_internal_set_valid_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  valid_bet_ = value;
}
inline void MsgDBWriteScore::set_valid_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_valid_bet(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.valid_bet)
}

// string game_details = 9;
inline void MsgDBWriteScore::clear_game_details() {
  game_details_.ClearToEmpty();
}
inline const std::string& MsgDBWriteScore::game_details() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScore.game_details)
  return _internal_game_details();
}
inline void MsgDBWriteScore::set_game_details(const std::string& value) {
  _internal_set_game_details(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScore.game_details)
}
inline std::string* MsgDBWriteScore::mutable_game_details() {
  // @@protoc_insertion_point(field_mutable:MsgDBWriteScore.game_details)
  return _internal_mutable_game_details();
}
inline const std::string& MsgDBWriteScore::_internal_game_details() const {
  return game_details_.Get();
}
inline void MsgDBWriteScore::_internal_set_game_details(const std::string& value) {
  
  game_details_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBWriteScore::set_game_details(std::string&& value) {
  
  game_details_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBWriteScore.game_details)
}
inline void MsgDBWriteScore::set_game_details(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  game_details_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBWriteScore.game_details)
}
inline void MsgDBWriteScore::set_game_details(const char* value,
    size_t size) {
  
  game_details_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBWriteScore.game_details)
}
inline std::string* MsgDBWriteScore::_internal_mutable_game_details() {
  
  return game_details_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBWriteScore::release_game_details() {
  // @@protoc_insertion_point(field_release:MsgDBWriteScore.game_details)
  return game_details_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBWriteScore::set_allocated_game_details(std::string* game_details) {
  if (game_details != nullptr) {
    
  } else {
    
  }
  game_details_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), game_details,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBWriteScore.game_details)
}

// -------------------------------------------------------------------

// MsgDBWriteScoreResp

// int32 user_id = 1;
inline void MsgDBWriteScoreResp::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.user_id)
  return _internal_user_id();
}
inline void MsgDBWriteScoreResp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBWriteScoreResp::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.user_id)
}

// int32 player_cheat_rate = 2;
inline void MsgDBWriteScoreResp::clear_player_cheat_rate() {
  player_cheat_rate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::_internal_player_cheat_rate() const {
  return player_cheat_rate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::player_cheat_rate() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.player_cheat_rate)
  return _internal_player_cheat_rate();
}
inline void MsgDBWriteScoreResp::_internal_set_player_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  player_cheat_rate_ = value;
}
inline void MsgDBWriteScoreResp::set_player_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_cheat_rate(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.player_cheat_rate)
}

// int32 player_cheat_score = 3;
inline void MsgDBWriteScoreResp::clear_player_cheat_score() {
  player_cheat_score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::_internal_player_cheat_score() const {
  return player_cheat_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::player_cheat_score() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.player_cheat_score)
  return _internal_player_cheat_score();
}
inline void MsgDBWriteScoreResp::_internal_set_player_cheat_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  player_cheat_score_ = value;
}
inline void MsgDBWriteScoreResp::set_player_cheat_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_cheat_score(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.player_cheat_score)
}

// int32 system_cheat_rate = 4;
inline void MsgDBWriteScoreResp::clear_system_cheat_rate() {
  system_cheat_rate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::_internal_system_cheat_rate() const {
  return system_cheat_rate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBWriteScoreResp::system_cheat_rate() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.system_cheat_rate)
  return _internal_system_cheat_rate();
}
inline void MsgDBWriteScoreResp::_internal_set_system_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  system_cheat_rate_ = value;
}
inline void MsgDBWriteScoreResp::set_system_cheat_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_system_cheat_rate(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.system_cheat_rate)
}

// int64 system_cheat_score = 5;
inline void MsgDBWriteScoreResp::clear_system_cheat_score() {
  system_cheat_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::_internal_system_cheat_score() const {
  return system_cheat_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::system_cheat_score() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.system_cheat_score)
  return _internal_system_cheat_score();
}
inline void MsgDBWriteScoreResp::_internal_set_system_cheat_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  system_cheat_score_ = value;
}
inline void MsgDBWriteScoreResp::set_system_cheat_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_system_cheat_score(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.system_cheat_score)
}

// int64 system_blood_min_line = 6;
inline void MsgDBWriteScoreResp::clear_system_blood_min_line() {
  system_blood_min_line_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::_internal_system_blood_min_line() const {
  return system_blood_min_line_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::system_blood_min_line() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.system_blood_min_line)
  return _internal_system_blood_min_line();
}
inline void MsgDBWriteScoreResp::_internal_set_system_blood_min_line(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  system_blood_min_line_ = value;
}
inline void MsgDBWriteScoreResp::set_system_blood_min_line(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_system_blood_min_line(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.system_blood_min_line)
}

// int64 system_blood_max_line = 7;
inline void MsgDBWriteScoreResp::clear_system_blood_max_line() {
  system_blood_max_line_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::_internal_system_blood_max_line() const {
  return system_blood_max_line_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::system_blood_max_line() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.system_blood_max_line)
  return _internal_system_blood_max_line();
}
inline void MsgDBWriteScoreResp::_internal_set_system_blood_max_line(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  system_blood_max_line_ = value;
}
inline void MsgDBWriteScoreResp::set_system_blood_max_line(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_system_blood_max_line(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.system_blood_max_line)
}

// int64 player_score = 8;
inline void MsgDBWriteScoreResp::clear_player_score() {
  player_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::_internal_player_score() const {
  return player_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBWriteScoreResp::player_score() const {
  // @@protoc_insertion_point(field_get:MsgDBWriteScoreResp.player_score)
  return _internal_player_score();
}
inline void MsgDBWriteScoreResp::_internal_set_player_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  player_score_ = value;
}
inline void MsgDBWriteScoreResp::set_player_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_player_score(value);
  // @@protoc_insertion_point(field_set:MsgDBWriteScoreResp.player_score)
}

// -------------------------------------------------------------------

// MsgDBFingerGuessWriteScore

// int32 banker_user_id = 1;
inline void MsgDBFingerGuessWriteScore::clear_banker_user_id() {
  banker_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScore::_internal_banker_user_id() const {
  return banker_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScore::banker_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScore.banker_user_id)
  return _internal_banker_user_id();
}
inline void MsgDBFingerGuessWriteScore::_internal_set_banker_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_user_id_ = value;
}
inline void MsgDBFingerGuessWriteScore::set_banker_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScore.banker_user_id)
}

// int32 player_user_id = 2;
inline void MsgDBFingerGuessWriteScore::clear_player_user_id() {
  player_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScore::_internal_player_user_id() const {
  return player_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScore::player_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScore.player_user_id)
  return _internal_player_user_id();
}
inline void MsgDBFingerGuessWriteScore::_internal_set_player_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  player_user_id_ = value;
}
inline void MsgDBFingerGuessWriteScore::set_player_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScore.player_user_id)
}

// int32 result = 3;
inline void MsgDBFingerGuessWriteScore::clear_result() {
  result_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScore::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScore::result() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScore.result)
  return _internal_result();
}
inline void MsgDBFingerGuessWriteScore::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_ = value;
}
inline void MsgDBFingerGuessWriteScore::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScore.result)
}

// int64 bet = 4;
inline void MsgDBFingerGuessWriteScore::clear_bet() {
  bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScore::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScore::bet() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScore.bet)
  return _internal_bet();
}
inline void MsgDBFingerGuessWriteScore::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_ = value;
}
inline void MsgDBFingerGuessWriteScore::set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScore.bet)
}

// -------------------------------------------------------------------

// MsgDBFingerGuessWriteScoreResp

// int32 win_user_id = 1;
inline void MsgDBFingerGuessWriteScoreResp::clear_win_user_id() {
  win_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::_internal_win_user_id() const {
  return win_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::win_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScoreResp.win_user_id)
  return _internal_win_user_id();
}
inline void MsgDBFingerGuessWriteScoreResp::_internal_set_win_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  win_user_id_ = value;
}
inline void MsgDBFingerGuessWriteScoreResp::set_win_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_win_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScoreResp.win_user_id)
}

// int32 lose_user_id = 2;
inline void MsgDBFingerGuessWriteScoreResp::clear_lose_user_id() {
  lose_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::_internal_lose_user_id() const {
  return lose_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::lose_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScoreResp.lose_user_id)
  return _internal_lose_user_id();
}
inline void MsgDBFingerGuessWriteScoreResp::_internal_set_lose_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lose_user_id_ = value;
}
inline void MsgDBFingerGuessWriteScoreResp::set_lose_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lose_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScoreResp.lose_user_id)
}

// int64 win_user_gold = 3;
inline void MsgDBFingerGuessWriteScoreResp::clear_win_user_gold() {
  win_user_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScoreResp::_internal_win_user_gold() const {
  return win_user_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScoreResp::win_user_gold() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScoreResp.win_user_gold)
  return _internal_win_user_gold();
}
inline void MsgDBFingerGuessWriteScoreResp::_internal_set_win_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_user_gold_ = value;
}
inline void MsgDBFingerGuessWriteScoreResp::set_win_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_user_gold(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScoreResp.win_user_gold)
}

// int64 lose_user_gold = 4;
inline void MsgDBFingerGuessWriteScoreResp::clear_lose_user_gold() {
  lose_user_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScoreResp::_internal_lose_user_gold() const {
  return lose_user_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScoreResp::lose_user_gold() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScoreResp.lose_user_gold)
  return _internal_lose_user_gold();
}
inline void MsgDBFingerGuessWriteScoreResp::_internal_set_lose_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lose_user_gold_ = value;
}
inline void MsgDBFingerGuessWriteScoreResp::set_lose_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_lose_user_gold(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScoreResp.lose_user_gold)
}

// int32 time = 5;
inline void MsgDBFingerGuessWriteScoreResp::clear_time() {
  time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::time() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScoreResp.time)
  return _internal_time();
}
inline void MsgDBFingerGuessWriteScoreResp::_internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  time_ = value;
}
inline void MsgDBFingerGuessWriteScoreResp::set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScoreResp.time)
}

// int32 result = 6;
inline void MsgDBFingerGuessWriteScoreResp::clear_result() {
  result_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessWriteScoreResp::result() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScoreResp.result)
  return _internal_result();
}
inline void MsgDBFingerGuessWriteScoreResp::_internal_set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_ = value;
}
inline void MsgDBFingerGuessWriteScoreResp::set_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScoreResp.result)
}

// int64 bet = 7;
inline void MsgDBFingerGuessWriteScoreResp::clear_bet() {
  bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScoreResp::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBFingerGuessWriteScoreResp::bet() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessWriteScoreResp.bet)
  return _internal_bet();
}
inline void MsgDBFingerGuessWriteScoreResp::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_ = value;
}
inline void MsgDBFingerGuessWriteScoreResp::set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessWriteScoreResp.bet)
}

// -------------------------------------------------------------------

// MsgDBFingerGuessQueryRecord

// int32 page = 1;
inline void MsgDBFingerGuessQueryRecord::clear_page() {
  page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::_internal_page() const {
  return page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::page() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessQueryRecord.page)
  return _internal_page();
}
inline void MsgDBFingerGuessQueryRecord::_internal_set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_ = value;
}
inline void MsgDBFingerGuessQueryRecord::set_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessQueryRecord.page)
}

// int32 num = 2;
inline void MsgDBFingerGuessQueryRecord::clear_num() {
  num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::num() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessQueryRecord.num)
  return _internal_num();
}
inline void MsgDBFingerGuessQueryRecord::_internal_set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_ = value;
}
inline void MsgDBFingerGuessQueryRecord::set_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessQueryRecord.num)
}

// int32 type = 3;
inline void MsgDBFingerGuessQueryRecord::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::type() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessQueryRecord.type)
  return _internal_type();
}
inline void MsgDBFingerGuessQueryRecord::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgDBFingerGuessQueryRecord::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessQueryRecord.type)
}

// int32 user_id = 4;
inline void MsgDBFingerGuessQueryRecord::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBFingerGuessQueryRecord::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBFingerGuessQueryRecord.user_id)
  return _internal_user_id();
}
inline void MsgDBFingerGuessQueryRecord::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBFingerGuessQueryRecord::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBFingerGuessQueryRecord.user_id)
}

// -------------------------------------------------------------------

// MsgDBModifyAvatar

// int32 user_id = 1;
inline void MsgDBModifyAvatar::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBModifyAvatar::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBModifyAvatar::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBModifyAvatar.user_id)
  return _internal_user_id();
}
inline void MsgDBModifyAvatar::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBModifyAvatar::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBModifyAvatar.user_id)
}

// string avatar = 2;
inline void MsgDBModifyAvatar::clear_avatar() {
  avatar_.ClearToEmpty();
}
inline const std::string& MsgDBModifyAvatar::avatar() const {
  // @@protoc_insertion_point(field_get:MsgDBModifyAvatar.avatar)
  return _internal_avatar();
}
inline void MsgDBModifyAvatar::set_avatar(const std::string& value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:MsgDBModifyAvatar.avatar)
}
inline std::string* MsgDBModifyAvatar::mutable_avatar() {
  // @@protoc_insertion_point(field_mutable:MsgDBModifyAvatar.avatar)
  return _internal_mutable_avatar();
}
inline const std::string& MsgDBModifyAvatar::_internal_avatar() const {
  return avatar_.Get();
}
inline void MsgDBModifyAvatar::_internal_set_avatar(const std::string& value) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBModifyAvatar::set_avatar(std::string&& value) {
  
  avatar_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBModifyAvatar.avatar)
}
inline void MsgDBModifyAvatar::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBModifyAvatar.avatar)
}
inline void MsgDBModifyAvatar::set_avatar(const char* value,
    size_t size) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBModifyAvatar.avatar)
}
inline std::string* MsgDBModifyAvatar::_internal_mutable_avatar() {
  
  return avatar_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBModifyAvatar::release_avatar() {
  // @@protoc_insertion_point(field_release:MsgDBModifyAvatar.avatar)
  return avatar_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBModifyAvatar::set_allocated_avatar(std::string* avatar) {
  if (avatar != nullptr) {
    
  } else {
    
  }
  avatar_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBModifyAvatar.avatar)
}

// -------------------------------------------------------------------

// MsgDBUpdateJackpot

// int32 server_id = 1;
inline void MsgDBUpdateJackpot::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateJackpot::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpdateJackpot::server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdateJackpot.server_id)
  return _internal_server_id();
}
inline void MsgDBUpdateJackpot::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgDBUpdateJackpot::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdateJackpot.server_id)
}

// int64 jackpot = 2;
inline void MsgDBUpdateJackpot::clear_jackpot() {
  jackpot_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBUpdateJackpot::_internal_jackpot() const {
  return jackpot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBUpdateJackpot::jackpot() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdateJackpot.jackpot)
  return _internal_jackpot();
}
inline void MsgDBUpdateJackpot::_internal_set_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  jackpot_ = value;
}
inline void MsgDBUpdateJackpot::set_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_jackpot(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdateJackpot.jackpot)
}

// int64 fake_jackpot = 3;
inline void MsgDBUpdateJackpot::clear_fake_jackpot() {
  fake_jackpot_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBUpdateJackpot::_internal_fake_jackpot() const {
  return fake_jackpot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBUpdateJackpot::fake_jackpot() const {
  // @@protoc_insertion_point(field_get:MsgDBUpdateJackpot.fake_jackpot)
  return _internal_fake_jackpot();
}
inline void MsgDBUpdateJackpot::_internal_set_fake_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  fake_jackpot_ = value;
}
inline void MsgDBUpdateJackpot::set_fake_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_fake_jackpot(value);
  // @@protoc_insertion_point(field_set:MsgDBUpdateJackpot.fake_jackpot)
}

// -------------------------------------------------------------------

// MsgDBTransferOperate

// int32 from_user_id = 1;
inline void MsgDBTransferOperate::clear_from_user_id() {
  from_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferOperate::_internal_from_user_id() const {
  return from_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferOperate::from_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferOperate.from_user_id)
  return _internal_from_user_id();
}
inline void MsgDBTransferOperate::_internal_set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  from_user_id_ = value;
}
inline void MsgDBTransferOperate::set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_from_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferOperate.from_user_id)
}

// int32 recv_user_id = 2;
inline void MsgDBTransferOperate::clear_recv_user_id() {
  recv_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferOperate::_internal_recv_user_id() const {
  return recv_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferOperate::recv_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferOperate.recv_user_id)
  return _internal_recv_user_id();
}
inline void MsgDBTransferOperate::_internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recv_user_id_ = value;
}
inline void MsgDBTransferOperate::set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recv_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferOperate.recv_user_id)
}

// int64 transfer_gold = 3;
inline void MsgDBTransferOperate::clear_transfer_gold() {
  transfer_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferOperate::_internal_transfer_gold() const {
  return transfer_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferOperate::transfer_gold() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferOperate.transfer_gold)
  return _internal_transfer_gold();
}
inline void MsgDBTransferOperate::_internal_set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  transfer_gold_ = value;
}
inline void MsgDBTransferOperate::set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_transfer_gold(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferOperate.transfer_gold)
}

// int32 transfer_type = 4;
inline void MsgDBTransferOperate::clear_transfer_type() {
  transfer_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferOperate::_internal_transfer_type() const {
  return transfer_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferOperate::transfer_type() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferOperate.transfer_type)
  return _internal_transfer_type();
}
inline void MsgDBTransferOperate::_internal_set_transfer_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  transfer_type_ = value;
}
inline void MsgDBTransferOperate::set_transfer_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_transfer_type(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferOperate.transfer_type)
}

// -------------------------------------------------------------------

// MsgStorageCode

// int32 user_id = 1;
inline void MsgStorageCode::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStorageCode::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStorageCode::user_id() const {
  // @@protoc_insertion_point(field_get:MsgStorageCode.user_id)
  return _internal_user_id();
}
inline void MsgStorageCode::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgStorageCode::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgStorageCode.user_id)
}

// string phone = 2;
inline void MsgStorageCode::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgStorageCode::phone() const {
  // @@protoc_insertion_point(field_get:MsgStorageCode.phone)
  return _internal_phone();
}
inline void MsgStorageCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgStorageCode.phone)
}
inline std::string* MsgStorageCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgStorageCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgStorageCode::_internal_phone() const {
  return phone_.Get();
}
inline void MsgStorageCode::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgStorageCode::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgStorageCode.phone)
}
inline void MsgStorageCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgStorageCode.phone)
}
inline void MsgStorageCode::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgStorageCode.phone)
}
inline std::string* MsgStorageCode::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgStorageCode::release_phone() {
  // @@protoc_insertion_point(field_release:MsgStorageCode.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgStorageCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgStorageCode.phone)
}

// int32 code = 3;
inline void MsgStorageCode::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStorageCode::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStorageCode::code() const {
  // @@protoc_insertion_point(field_get:MsgStorageCode.code)
  return _internal_code();
}
inline void MsgStorageCode::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void MsgStorageCode::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:MsgStorageCode.code)
}

// int32 type = 4;
inline void MsgStorageCode::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStorageCode::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStorageCode::type() const {
  // @@protoc_insertion_point(field_get:MsgStorageCode.type)
  return _internal_type();
}
inline void MsgStorageCode::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgStorageCode::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgStorageCode.type)
}

// -------------------------------------------------------------------

// MsgDBBindPhone

// int32 user_id = 1;
inline void MsgDBBindPhone::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindPhone::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindPhone::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhone.user_id)
  return _internal_user_id();
}
inline void MsgDBBindPhone::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBBindPhone::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhone.user_id)
}

// string invite_code = 2;
inline void MsgDBBindPhone::clear_invite_code() {
  invite_code_.ClearToEmpty();
}
inline const std::string& MsgDBBindPhone::invite_code() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhone.invite_code)
  return _internal_invite_code();
}
inline void MsgDBBindPhone::set_invite_code(const std::string& value) {
  _internal_set_invite_code(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhone.invite_code)
}
inline std::string* MsgDBBindPhone::mutable_invite_code() {
  // @@protoc_insertion_point(field_mutable:MsgDBBindPhone.invite_code)
  return _internal_mutable_invite_code();
}
inline const std::string& MsgDBBindPhone::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void MsgDBBindPhone::_internal_set_invite_code(const std::string& value) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBBindPhone::set_invite_code(std::string&& value) {
  
  invite_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBBindPhone.invite_code)
}
inline void MsgDBBindPhone::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBBindPhone.invite_code)
}
inline void MsgDBBindPhone::set_invite_code(const char* value,
    size_t size) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBBindPhone.invite_code)
}
inline std::string* MsgDBBindPhone::_internal_mutable_invite_code() {
  
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBBindPhone::release_invite_code() {
  // @@protoc_insertion_point(field_release:MsgDBBindPhone.invite_code)
  return invite_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBBindPhone::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    
  } else {
    
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBBindPhone.invite_code)
}

// string phone = 3;
inline void MsgDBBindPhone::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgDBBindPhone::phone() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhone.phone)
  return _internal_phone();
}
inline void MsgDBBindPhone::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhone.phone)
}
inline std::string* MsgDBBindPhone::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgDBBindPhone.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgDBBindPhone::_internal_phone() const {
  return phone_.Get();
}
inline void MsgDBBindPhone::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBBindPhone::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBBindPhone.phone)
}
inline void MsgDBBindPhone::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBBindPhone.phone)
}
inline void MsgDBBindPhone::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBBindPhone.phone)
}
inline std::string* MsgDBBindPhone::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBBindPhone::release_phone() {
  // @@protoc_insertion_point(field_release:MsgDBBindPhone.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBBindPhone::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBBindPhone.phone)
}

// string password = 4;
inline void MsgDBBindPhone::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgDBBindPhone::password() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhone.password)
  return _internal_password();
}
inline void MsgDBBindPhone::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhone.password)
}
inline std::string* MsgDBBindPhone::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgDBBindPhone.password)
  return _internal_mutable_password();
}
inline const std::string& MsgDBBindPhone::_internal_password() const {
  return password_.Get();
}
inline void MsgDBBindPhone::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBBindPhone::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBBindPhone.password)
}
inline void MsgDBBindPhone::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBBindPhone.password)
}
inline void MsgDBBindPhone::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBBindPhone.password)
}
inline std::string* MsgDBBindPhone::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBBindPhone::release_password() {
  // @@protoc_insertion_point(field_release:MsgDBBindPhone.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBBindPhone::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBBindPhone.password)
}

// -------------------------------------------------------------------

// MsgDBBindPhoneRes

// int32 res_code = 1;
inline void MsgDBBindPhoneRes::clear_res_code() {
  res_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindPhoneRes::_internal_res_code() const {
  return res_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindPhoneRes::res_code() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhoneRes.res_code)
  return _internal_res_code();
}
inline void MsgDBBindPhoneRes::_internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_code_ = value;
}
inline void MsgDBBindPhoneRes::set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_code(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhoneRes.res_code)
}

// string phone = 2;
inline void MsgDBBindPhoneRes::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgDBBindPhoneRes::phone() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhoneRes.phone)
  return _internal_phone();
}
inline void MsgDBBindPhoneRes::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhoneRes.phone)
}
inline std::string* MsgDBBindPhoneRes::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgDBBindPhoneRes.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgDBBindPhoneRes::_internal_phone() const {
  return phone_.Get();
}
inline void MsgDBBindPhoneRes::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBBindPhoneRes::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBBindPhoneRes.phone)
}
inline void MsgDBBindPhoneRes::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBBindPhoneRes.phone)
}
inline void MsgDBBindPhoneRes::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBBindPhoneRes.phone)
}
inline std::string* MsgDBBindPhoneRes::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBBindPhoneRes::release_phone() {
  // @@protoc_insertion_point(field_release:MsgDBBindPhoneRes.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBBindPhoneRes::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBBindPhoneRes.phone)
}

// string password = 3;
inline void MsgDBBindPhoneRes::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgDBBindPhoneRes::password() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhoneRes.password)
  return _internal_password();
}
inline void MsgDBBindPhoneRes::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhoneRes.password)
}
inline std::string* MsgDBBindPhoneRes::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgDBBindPhoneRes.password)
  return _internal_mutable_password();
}
inline const std::string& MsgDBBindPhoneRes::_internal_password() const {
  return password_.Get();
}
inline void MsgDBBindPhoneRes::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBBindPhoneRes::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBBindPhoneRes.password)
}
inline void MsgDBBindPhoneRes::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBBindPhoneRes.password)
}
inline void MsgDBBindPhoneRes::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBBindPhoneRes.password)
}
inline std::string* MsgDBBindPhoneRes::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBBindPhoneRes::release_password() {
  // @@protoc_insertion_point(field_release:MsgDBBindPhoneRes.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBBindPhoneRes::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBBindPhoneRes.password)
}

// int32 award = 4;
inline void MsgDBBindPhoneRes::clear_award() {
  award_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindPhoneRes::_internal_award() const {
  return award_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindPhoneRes::award() const {
  // @@protoc_insertion_point(field_get:MsgDBBindPhoneRes.award)
  return _internal_award();
}
inline void MsgDBBindPhoneRes::_internal_set_award(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  award_ = value;
}
inline void MsgDBBindPhoneRes::set_award(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_award(value);
  // @@protoc_insertion_point(field_set:MsgDBBindPhoneRes.award)
}

// -------------------------------------------------------------------

// MsgDBChatLogin

// int32 user_id = 1;
inline void MsgDBChatLogin::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBChatLogin::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBChatLogin::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBChatLogin.user_id)
  return _internal_user_id();
}
inline void MsgDBChatLogin::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBChatLogin::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBChatLogin.user_id)
}

// string password = 2;
inline void MsgDBChatLogin::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgDBChatLogin::password() const {
  // @@protoc_insertion_point(field_get:MsgDBChatLogin.password)
  return _internal_password();
}
inline void MsgDBChatLogin::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgDBChatLogin.password)
}
inline std::string* MsgDBChatLogin::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgDBChatLogin.password)
  return _internal_mutable_password();
}
inline const std::string& MsgDBChatLogin::_internal_password() const {
  return password_.Get();
}
inline void MsgDBChatLogin::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBChatLogin::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBChatLogin.password)
}
inline void MsgDBChatLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBChatLogin.password)
}
inline void MsgDBChatLogin::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBChatLogin.password)
}
inline std::string* MsgDBChatLogin::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBChatLogin::release_password() {
  // @@protoc_insertion_point(field_release:MsgDBChatLogin.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBChatLogin::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBChatLogin.password)
}

// -------------------------------------------------------------------

// MsgDBChatTrumpetMsg

// int32 user_id = 1;
inline void MsgDBChatTrumpetMsg::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBChatTrumpetMsg::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBChatTrumpetMsg::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBChatTrumpetMsg.user_id)
  return _internal_user_id();
}
inline void MsgDBChatTrumpetMsg::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBChatTrumpetMsg::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBChatTrumpetMsg.user_id)
}

// string message = 2;
inline void MsgDBChatTrumpetMsg::clear_message() {
  message_.ClearToEmpty();
}
inline const std::string& MsgDBChatTrumpetMsg::message() const {
  // @@protoc_insertion_point(field_get:MsgDBChatTrumpetMsg.message)
  return _internal_message();
}
inline void MsgDBChatTrumpetMsg::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:MsgDBChatTrumpetMsg.message)
}
inline std::string* MsgDBChatTrumpetMsg::mutable_message() {
  // @@protoc_insertion_point(field_mutable:MsgDBChatTrumpetMsg.message)
  return _internal_mutable_message();
}
inline const std::string& MsgDBChatTrumpetMsg::_internal_message() const {
  return message_.Get();
}
inline void MsgDBChatTrumpetMsg::_internal_set_message(const std::string& value) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBChatTrumpetMsg::set_message(std::string&& value) {
  
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBChatTrumpetMsg.message)
}
inline void MsgDBChatTrumpetMsg::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBChatTrumpetMsg.message)
}
inline void MsgDBChatTrumpetMsg::set_message(const char* value,
    size_t size) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBChatTrumpetMsg.message)
}
inline std::string* MsgDBChatTrumpetMsg::_internal_mutable_message() {
  
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBChatTrumpetMsg::release_message() {
  // @@protoc_insertion_point(field_release:MsgDBChatTrumpetMsg.message)
  return message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBChatTrumpetMsg::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBChatTrumpetMsg.message)
}

// -------------------------------------------------------------------

// MsgDBBuyGoods

// int32 user_id = 1;
inline void MsgDBBuyGoods::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBuyGoods::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBuyGoods::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBBuyGoods.user_id)
  return _internal_user_id();
}
inline void MsgDBBuyGoods::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBBuyGoods::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBBuyGoods.user_id)
}

// int32 item_id = 2;
inline void MsgDBBuyGoods::clear_item_id() {
  item_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBuyGoods::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBuyGoods::item_id() const {
  // @@protoc_insertion_point(field_get:MsgDBBuyGoods.item_id)
  return _internal_item_id();
}
inline void MsgDBBuyGoods::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  item_id_ = value;
}
inline void MsgDBBuyGoods::set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:MsgDBBuyGoods.item_id)
}

// int32 item_num = 3;
inline void MsgDBBuyGoods::clear_item_num() {
  item_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBuyGoods::_internal_item_num() const {
  return item_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBuyGoods::item_num() const {
  // @@protoc_insertion_point(field_get:MsgDBBuyGoods.item_num)
  return _internal_item_num();
}
inline void MsgDBBuyGoods::_internal_set_item_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  item_num_ = value;
}
inline void MsgDBBuyGoods::set_item_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_num(value);
  // @@protoc_insertion_point(field_set:MsgDBBuyGoods.item_num)
}

// -------------------------------------------------------------------

// MsgDBGameLoginOut

// int32 user_id = 1;
inline void MsgDBGameLoginOut::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGameLoginOut.user_id)
  return _internal_user_id();
}
inline void MsgDBGameLoginOut::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBGameLoginOut::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGameLoginOut.user_id)
}

// int32 is_offline = 2;
inline void MsgDBGameLoginOut::clear_is_offline() {
  is_offline_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::_internal_is_offline() const {
  return is_offline_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::is_offline() const {
  // @@protoc_insertion_point(field_get:MsgDBGameLoginOut.is_offline)
  return _internal_is_offline();
}
inline void MsgDBGameLoginOut::_internal_set_is_offline(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_offline_ = value;
}
inline void MsgDBGameLoginOut::set_is_offline(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_offline(value);
  // @@protoc_insertion_point(field_set:MsgDBGameLoginOut.is_offline)
}

// int32 server_id = 3;
inline void MsgDBGameLoginOut::clear_server_id() {
  server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::_internal_server_id() const {
  return server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGameLoginOut.server_id)
  return _internal_server_id();
}
inline void MsgDBGameLoginOut::_internal_set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  server_id_ = value;
}
inline void MsgDBGameLoginOut::set_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGameLoginOut.server_id)
}

// int32 kind_id = 4;
inline void MsgDBGameLoginOut::clear_kind_id() {
  kind_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::_internal_kind_id() const {
  return kind_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::kind_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGameLoginOut.kind_id)
  return _internal_kind_id();
}
inline void MsgDBGameLoginOut::_internal_set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_id_ = value;
}
inline void MsgDBGameLoginOut::set_kind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGameLoginOut.kind_id)
}

// int32 login_server_id = 5;
inline void MsgDBGameLoginOut::clear_login_server_id() {
  login_server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::_internal_login_server_id() const {
  return login_server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGameLoginOut::login_server_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGameLoginOut.login_server_id)
  return _internal_login_server_id();
}
inline void MsgDBGameLoginOut::_internal_set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  login_server_id_ = value;
}
inline void MsgDBGameLoginOut::set_login_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_login_server_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGameLoginOut.login_server_id)
}

// -------------------------------------------------------------------

// MsgDBSubagentInformation

// string agent_nickname = 1;
inline void MsgDBSubagentInformation::clear_agent_nickname() {
  agent_nickname_.ClearToEmpty();
}
inline const std::string& MsgDBSubagentInformation::agent_nickname() const {
  // @@protoc_insertion_point(field_get:MsgDBSubagentInformation.agent_nickname)
  return _internal_agent_nickname();
}
inline void MsgDBSubagentInformation::set_agent_nickname(const std::string& value) {
  _internal_set_agent_nickname(value);
  // @@protoc_insertion_point(field_set:MsgDBSubagentInformation.agent_nickname)
}
inline std::string* MsgDBSubagentInformation::mutable_agent_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgDBSubagentInformation.agent_nickname)
  return _internal_mutable_agent_nickname();
}
inline const std::string& MsgDBSubagentInformation::_internal_agent_nickname() const {
  return agent_nickname_.Get();
}
inline void MsgDBSubagentInformation::_internal_set_agent_nickname(const std::string& value) {
  
  agent_nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBSubagentInformation::set_agent_nickname(std::string&& value) {
  
  agent_nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBSubagentInformation.agent_nickname)
}
inline void MsgDBSubagentInformation::set_agent_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  agent_nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBSubagentInformation.agent_nickname)
}
inline void MsgDBSubagentInformation::set_agent_nickname(const char* value,
    size_t size) {
  
  agent_nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBSubagentInformation.agent_nickname)
}
inline std::string* MsgDBSubagentInformation::_internal_mutable_agent_nickname() {
  
  return agent_nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBSubagentInformation::release_agent_nickname() {
  // @@protoc_insertion_point(field_release:MsgDBSubagentInformation.agent_nickname)
  return agent_nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBSubagentInformation::set_allocated_agent_nickname(std::string* agent_nickname) {
  if (agent_nickname != nullptr) {
    
  } else {
    
  }
  agent_nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), agent_nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBSubagentInformation.agent_nickname)
}

// int32 agent_user_id = 2;
inline void MsgDBSubagentInformation::clear_agent_user_id() {
  agent_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSubagentInformation::_internal_agent_user_id() const {
  return agent_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSubagentInformation::agent_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBSubagentInformation.agent_user_id)
  return _internal_agent_user_id();
}
inline void MsgDBSubagentInformation::_internal_set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agent_user_id_ = value;
}
inline void MsgDBSubagentInformation::set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agent_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBSubagentInformation.agent_user_id)
}

// int32 agent_type = 3;
inline void MsgDBSubagentInformation::clear_agent_type() {
  agent_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSubagentInformation::_internal_agent_type() const {
  return agent_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSubagentInformation::agent_type() const {
  // @@protoc_insertion_point(field_get:MsgDBSubagentInformation.agent_type)
  return _internal_agent_type();
}
inline void MsgDBSubagentInformation::_internal_set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agent_type_ = value;
}
inline void MsgDBSubagentInformation::set_agent_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agent_type(value);
  // @@protoc_insertion_point(field_set:MsgDBSubagentInformation.agent_type)
}

// int64 total_shift_to = 4;
inline void MsgDBSubagentInformation::clear_total_shift_to() {
  total_shift_to_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBSubagentInformation::_internal_total_shift_to() const {
  return total_shift_to_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBSubagentInformation::total_shift_to() const {
  // @@protoc_insertion_point(field_get:MsgDBSubagentInformation.total_shift_to)
  return _internal_total_shift_to();
}
inline void MsgDBSubagentInformation::_internal_set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_shift_to_ = value;
}
inline void MsgDBSubagentInformation::set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_shift_to(value);
  // @@protoc_insertion_point(field_set:MsgDBSubagentInformation.total_shift_to)
}

// int64 total_roll_out = 5;
inline void MsgDBSubagentInformation::clear_total_roll_out() {
  total_roll_out_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBSubagentInformation::_internal_total_roll_out() const {
  return total_roll_out_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBSubagentInformation::total_roll_out() const {
  // @@protoc_insertion_point(field_get:MsgDBSubagentInformation.total_roll_out)
  return _internal_total_roll_out();
}
inline void MsgDBSubagentInformation::_internal_set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_roll_out_ = value;
}
inline void MsgDBSubagentInformation::set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_roll_out(value);
  // @@protoc_insertion_point(field_set:MsgDBSubagentInformation.total_roll_out)
}

// int32 vip_level = 6;
inline void MsgDBSubagentInformation::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSubagentInformation::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSubagentInformation::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgDBSubagentInformation.vip_level)
  return _internal_vip_level();
}
inline void MsgDBSubagentInformation::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgDBSubagentInformation::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgDBSubagentInformation.vip_level)
}

// -------------------------------------------------------------------

// MsgDBQueryTransferTax

// int32 from_user_id = 1;
inline void MsgDBQueryTransferTax::clear_from_user_id() {
  from_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBQueryTransferTax::_internal_from_user_id() const {
  return from_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBQueryTransferTax::from_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBQueryTransferTax.from_user_id)
  return _internal_from_user_id();
}
inline void MsgDBQueryTransferTax::_internal_set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  from_user_id_ = value;
}
inline void MsgDBQueryTransferTax::set_from_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_from_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBQueryTransferTax.from_user_id)
}

// int32 recv_user_id = 2;
inline void MsgDBQueryTransferTax::clear_recv_user_id() {
  recv_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBQueryTransferTax::_internal_recv_user_id() const {
  return recv_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBQueryTransferTax::recv_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBQueryTransferTax.recv_user_id)
  return _internal_recv_user_id();
}
inline void MsgDBQueryTransferTax::_internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recv_user_id_ = value;
}
inline void MsgDBQueryTransferTax::set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recv_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBQueryTransferTax.recv_user_id)
}

// -------------------------------------------------------------------

// MsgDBTransferTakeOut

// int32 ret_value = 1;
inline void MsgDBTransferTakeOut::clear_ret_value() {
  ret_value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferTakeOut::_internal_ret_value() const {
  return ret_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferTakeOut::ret_value() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferTakeOut.ret_value)
  return _internal_ret_value();
}
inline void MsgDBTransferTakeOut::_internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_value_ = value;
}
inline void MsgDBTransferTakeOut::set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_value(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferTakeOut.ret_value)
}

// int32 recv_user_id = 2;
inline void MsgDBTransferTakeOut::clear_recv_user_id() {
  recv_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferTakeOut::_internal_recv_user_id() const {
  return recv_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferTakeOut::recv_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferTakeOut.recv_user_id)
  return _internal_recv_user_id();
}
inline void MsgDBTransferTakeOut::_internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recv_user_id_ = value;
}
inline void MsgDBTransferTakeOut::set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recv_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferTakeOut.recv_user_id)
}

// int32 send_user_id = 3;
inline void MsgDBTransferTakeOut::clear_send_user_id() {
  send_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferTakeOut::_internal_send_user_id() const {
  return send_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferTakeOut::send_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferTakeOut.send_user_id)
  return _internal_send_user_id();
}
inline void MsgDBTransferTakeOut::_internal_set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  send_user_id_ = value;
}
inline void MsgDBTransferTakeOut::set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_send_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferTakeOut.send_user_id)
}

// int64 add_gold = 4;
inline void MsgDBTransferTakeOut::clear_add_gold() {
  add_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::_internal_add_gold() const {
  return add_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::add_gold() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferTakeOut.add_gold)
  return _internal_add_gold();
}
inline void MsgDBTransferTakeOut::_internal_set_add_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  add_gold_ = value;
}
inline void MsgDBTransferTakeOut::set_add_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_add_gold(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferTakeOut.add_gold)
}

// int64 user_gold = 5;
inline void MsgDBTransferTakeOut::clear_user_gold() {
  user_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::_internal_user_gold() const {
  return user_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::user_gold() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferTakeOut.user_gold)
  return _internal_user_gold();
}
inline void MsgDBTransferTakeOut::_internal_set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  user_gold_ = value;
}
inline void MsgDBTransferTakeOut::set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_user_gold(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferTakeOut.user_gold)
}

// int64 receive_state = 6;
inline void MsgDBTransferTakeOut::clear_receive_state() {
  receive_state_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::_internal_receive_state() const {
  return receive_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::receive_state() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferTakeOut.receive_state)
  return _internal_receive_state();
}
inline void MsgDBTransferTakeOut::_internal_set_receive_state(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  receive_state_ = value;
}
inline void MsgDBTransferTakeOut::set_receive_state(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_receive_state(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferTakeOut.receive_state)
}

// int64 transfer_id = 7;
inline void MsgDBTransferTakeOut::clear_transfer_id() {
  transfer_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::_internal_transfer_id() const {
  return transfer_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferTakeOut::transfer_id() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferTakeOut.transfer_id)
  return _internal_transfer_id();
}
inline void MsgDBTransferTakeOut::_internal_set_transfer_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  transfer_id_ = value;
}
inline void MsgDBTransferTakeOut::set_transfer_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_transfer_id(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferTakeOut.transfer_id)
}

// -------------------------------------------------------------------

// MsgDBTransferReceive

// int32 receive_user_id = 1;
inline void MsgDBTransferReceive::clear_receive_user_id() {
  receive_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferReceive::_internal_receive_user_id() const {
  return receive_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBTransferReceive::receive_user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferReceive.receive_user_id)
  return _internal_receive_user_id();
}
inline void MsgDBTransferReceive::_internal_set_receive_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  receive_user_id_ = value;
}
inline void MsgDBTransferReceive::set_receive_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_receive_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferReceive.receive_user_id)
}

// int64 receive_id = 2;
inline void MsgDBTransferReceive::clear_receive_id() {
  receive_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferReceive::_internal_receive_id() const {
  return receive_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBTransferReceive::receive_id() const {
  // @@protoc_insertion_point(field_get:MsgDBTransferReceive.receive_id)
  return _internal_receive_id();
}
inline void MsgDBTransferReceive::_internal_set_receive_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  receive_id_ = value;
}
inline void MsgDBTransferReceive::set_receive_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_receive_id(value);
  // @@protoc_insertion_point(field_set:MsgDBTransferReceive.receive_id)
}

// -------------------------------------------------------------------

// MsgDBBindInviteCode

// int32 user_id = 1;
inline void MsgDBBindInviteCode::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindInviteCode::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBBindInviteCode::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBBindInviteCode.user_id)
  return _internal_user_id();
}
inline void MsgDBBindInviteCode::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBBindInviteCode::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBBindInviteCode.user_id)
}

// string invite_code = 2;
inline void MsgDBBindInviteCode::clear_invite_code() {
  invite_code_.ClearToEmpty();
}
inline const std::string& MsgDBBindInviteCode::invite_code() const {
  // @@protoc_insertion_point(field_get:MsgDBBindInviteCode.invite_code)
  return _internal_invite_code();
}
inline void MsgDBBindInviteCode::set_invite_code(const std::string& value) {
  _internal_set_invite_code(value);
  // @@protoc_insertion_point(field_set:MsgDBBindInviteCode.invite_code)
}
inline std::string* MsgDBBindInviteCode::mutable_invite_code() {
  // @@protoc_insertion_point(field_mutable:MsgDBBindInviteCode.invite_code)
  return _internal_mutable_invite_code();
}
inline const std::string& MsgDBBindInviteCode::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void MsgDBBindInviteCode::_internal_set_invite_code(const std::string& value) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBBindInviteCode::set_invite_code(std::string&& value) {
  
  invite_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBBindInviteCode.invite_code)
}
inline void MsgDBBindInviteCode::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBBindInviteCode.invite_code)
}
inline void MsgDBBindInviteCode::set_invite_code(const char* value,
    size_t size) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBBindInviteCode.invite_code)
}
inline std::string* MsgDBBindInviteCode::_internal_mutable_invite_code() {
  
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBBindInviteCode::release_invite_code() {
  // @@protoc_insertion_point(field_release:MsgDBBindInviteCode.invite_code)
  return invite_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBBindInviteCode::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    
  } else {
    
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBBindInviteCode.invite_code)
}

// -------------------------------------------------------------------

// MsgDBSyncDotData

// int32 user_id = 1;
inline void MsgDBSyncDotData::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSyncDotData::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSyncDotData::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBSyncDotData.user_id)
  return _internal_user_id();
}
inline void MsgDBSyncDotData::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBSyncDotData::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBSyncDotData.user_id)
}

// int32 type = 2;
inline void MsgDBSyncDotData::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSyncDotData::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSyncDotData::type() const {
  // @@protoc_insertion_point(field_get:MsgDBSyncDotData.type)
  return _internal_type();
}
inline void MsgDBSyncDotData::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgDBSyncDotData::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgDBSyncDotData.type)
}

// -------------------------------------------------------------------

// MsgDBOnlineActivePick

// int32 user_id = 1;
inline void MsgDBOnlineActivePick::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBOnlineActivePick::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBOnlineActivePick::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBOnlineActivePick.user_id)
  return _internal_user_id();
}
inline void MsgDBOnlineActivePick::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBOnlineActivePick::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBOnlineActivePick.user_id)
}

// int32 type = 2;
inline void MsgDBOnlineActivePick::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBOnlineActivePick::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBOnlineActivePick::type() const {
  // @@protoc_insertion_point(field_get:MsgDBOnlineActivePick.type)
  return _internal_type();
}
inline void MsgDBOnlineActivePick::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgDBOnlineActivePick::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgDBOnlineActivePick.type)
}

// -------------------------------------------------------------------

// MsgDBCDKExchange

// int32 user_id = 1;
inline void MsgDBCDKExchange::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBCDKExchange::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBCDKExchange::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBCDKExchange.user_id)
  return _internal_user_id();
}
inline void MsgDBCDKExchange::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBCDKExchange::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBCDKExchange.user_id)
}

// string cdk_code = 2;
inline void MsgDBCDKExchange::clear_cdk_code() {
  cdk_code_.ClearToEmpty();
}
inline const std::string& MsgDBCDKExchange::cdk_code() const {
  // @@protoc_insertion_point(field_get:MsgDBCDKExchange.cdk_code)
  return _internal_cdk_code();
}
inline void MsgDBCDKExchange::set_cdk_code(const std::string& value) {
  _internal_set_cdk_code(value);
  // @@protoc_insertion_point(field_set:MsgDBCDKExchange.cdk_code)
}
inline std::string* MsgDBCDKExchange::mutable_cdk_code() {
  // @@protoc_insertion_point(field_mutable:MsgDBCDKExchange.cdk_code)
  return _internal_mutable_cdk_code();
}
inline const std::string& MsgDBCDKExchange::_internal_cdk_code() const {
  return cdk_code_.Get();
}
inline void MsgDBCDKExchange::_internal_set_cdk_code(const std::string& value) {
  
  cdk_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBCDKExchange::set_cdk_code(std::string&& value) {
  
  cdk_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBCDKExchange.cdk_code)
}
inline void MsgDBCDKExchange::set_cdk_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cdk_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBCDKExchange.cdk_code)
}
inline void MsgDBCDKExchange::set_cdk_code(const char* value,
    size_t size) {
  
  cdk_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBCDKExchange.cdk_code)
}
inline std::string* MsgDBCDKExchange::_internal_mutable_cdk_code() {
  
  return cdk_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBCDKExchange::release_cdk_code() {
  // @@protoc_insertion_point(field_release:MsgDBCDKExchange.cdk_code)
  return cdk_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBCDKExchange::set_allocated_cdk_code(std::string* cdk_code) {
  if (cdk_code != nullptr) {
    
  } else {
    
  }
  cdk_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cdk_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBCDKExchange.cdk_code)
}

// -------------------------------------------------------------------

// MsgDBPersonalDetailsRespAdd

// int32 user_id = 1;
inline void MsgDBPersonalDetailsRespAdd::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPersonalDetailsRespAdd::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPersonalDetailsRespAdd::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBPersonalDetailsRespAdd.user_id)
  return _internal_user_id();
}
inline void MsgDBPersonalDetailsRespAdd::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBPersonalDetailsRespAdd::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBPersonalDetailsRespAdd.user_id)
}

// int32 type = 2;
inline void MsgDBPersonalDetailsRespAdd::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPersonalDetailsRespAdd::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBPersonalDetailsRespAdd::type() const {
  // @@protoc_insertion_point(field_get:MsgDBPersonalDetailsRespAdd.type)
  return _internal_type();
}
inline void MsgDBPersonalDetailsRespAdd::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgDBPersonalDetailsRespAdd::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgDBPersonalDetailsRespAdd.type)
}

// string msg = 3;
inline void MsgDBPersonalDetailsRespAdd::clear_msg() {
  msg_.ClearToEmpty();
}
inline const std::string& MsgDBPersonalDetailsRespAdd::msg() const {
  // @@protoc_insertion_point(field_get:MsgDBPersonalDetailsRespAdd.msg)
  return _internal_msg();
}
inline void MsgDBPersonalDetailsRespAdd::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:MsgDBPersonalDetailsRespAdd.msg)
}
inline std::string* MsgDBPersonalDetailsRespAdd::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:MsgDBPersonalDetailsRespAdd.msg)
  return _internal_mutable_msg();
}
inline const std::string& MsgDBPersonalDetailsRespAdd::_internal_msg() const {
  return msg_.Get();
}
inline void MsgDBPersonalDetailsRespAdd::_internal_set_msg(const std::string& value) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDBPersonalDetailsRespAdd::set_msg(std::string&& value) {
  
  msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDBPersonalDetailsRespAdd.msg)
}
inline void MsgDBPersonalDetailsRespAdd::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDBPersonalDetailsRespAdd.msg)
}
inline void MsgDBPersonalDetailsRespAdd::set_msg(const char* value,
    size_t size) {
  
  msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDBPersonalDetailsRespAdd.msg)
}
inline std::string* MsgDBPersonalDetailsRespAdd::_internal_mutable_msg() {
  
  return msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDBPersonalDetailsRespAdd::release_msg() {
  // @@protoc_insertion_point(field_release:MsgDBPersonalDetailsRespAdd.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDBPersonalDetailsRespAdd::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDBPersonalDetailsRespAdd.msg)
}

// -------------------------------------------------------------------

// MsgDBUpgradeVIP

// int32 res_code = 1;
inline void MsgDBUpgradeVIP::clear_res_code() {
  res_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpgradeVIP::_internal_res_code() const {
  return res_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpgradeVIP::res_code() const {
  // @@protoc_insertion_point(field_get:MsgDBUpgradeVIP.res_code)
  return _internal_res_code();
}
inline void MsgDBUpgradeVIP::_internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_code_ = value;
}
inline void MsgDBUpgradeVIP::set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_code(value);
  // @@protoc_insertion_point(field_set:MsgDBUpgradeVIP.res_code)
}

// int64 gold = 2;
inline void MsgDBUpgradeVIP::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBUpgradeVIP::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBUpgradeVIP::gold() const {
  // @@protoc_insertion_point(field_get:MsgDBUpgradeVIP.gold)
  return _internal_gold();
}
inline void MsgDBUpgradeVIP::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void MsgDBUpgradeVIP::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:MsgDBUpgradeVIP.gold)
}

// int32 bind_id = 3;
inline void MsgDBUpgradeVIP::clear_bind_id() {
  bind_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpgradeVIP::_internal_bind_id() const {
  return bind_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpgradeVIP::bind_id() const {
  // @@protoc_insertion_point(field_get:MsgDBUpgradeVIP.bind_id)
  return _internal_bind_id();
}
inline void MsgDBUpgradeVIP::_internal_set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bind_id_ = value;
}
inline void MsgDBUpgradeVIP::set_bind_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bind_id(value);
  // @@protoc_insertion_point(field_set:MsgDBUpgradeVIP.bind_id)
}

// int32 add_vip_exp = 4;
inline void MsgDBUpgradeVIP::clear_add_vip_exp() {
  add_vip_exp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpgradeVIP::_internal_add_vip_exp() const {
  return add_vip_exp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBUpgradeVIP::add_vip_exp() const {
  // @@protoc_insertion_point(field_get:MsgDBUpgradeVIP.add_vip_exp)
  return _internal_add_vip_exp();
}
inline void MsgDBUpgradeVIP::_internal_set_add_vip_exp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  add_vip_exp_ = value;
}
inline void MsgDBUpgradeVIP::set_add_vip_exp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_add_vip_exp(value);
  // @@protoc_insertion_point(field_set:MsgDBUpgradeVIP.add_vip_exp)
}

// -------------------------------------------------------------------

// MsgDBSetSubAgent

// int32 user_id = 1;
inline void MsgDBSetSubAgent::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSetSubAgent::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSetSubAgent::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBSetSubAgent.user_id)
  return _internal_user_id();
}
inline void MsgDBSetSubAgent::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBSetSubAgent::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBSetSubAgent.user_id)
}

// int32 sub_user = 2;
inline void MsgDBSetSubAgent::clear_sub_user() {
  sub_user_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSetSubAgent::_internal_sub_user() const {
  return sub_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSetSubAgent::sub_user() const {
  // @@protoc_insertion_point(field_get:MsgDBSetSubAgent.sub_user)
  return _internal_sub_user();
}
inline void MsgDBSetSubAgent::_internal_set_sub_user(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sub_user_ = value;
}
inline void MsgDBSetSubAgent::set_sub_user(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sub_user(value);
  // @@protoc_insertion_point(field_set:MsgDBSetSubAgent.sub_user)
}

// int32 agent_ratio = 3;
inline void MsgDBSetSubAgent::clear_agent_ratio() {
  agent_ratio_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSetSubAgent::_internal_agent_ratio() const {
  return agent_ratio_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBSetSubAgent::agent_ratio() const {
  // @@protoc_insertion_point(field_get:MsgDBSetSubAgent.agent_ratio)
  return _internal_agent_ratio();
}
inline void MsgDBSetSubAgent::_internal_set_agent_ratio(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agent_ratio_ = value;
}
inline void MsgDBSetSubAgent::set_agent_ratio(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agent_ratio(value);
  // @@protoc_insertion_point(field_set:MsgDBSetSubAgent.agent_ratio)
}

// -------------------------------------------------------------------

// MsgDBGetPlayerGold

// int32 user_id = 1;
inline void MsgDBGetPlayerGold::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGetPlayerGold::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgDBGetPlayerGold::user_id() const {
  // @@protoc_insertion_point(field_get:MsgDBGetPlayerGold.user_id)
  return _internal_user_id();
}
inline void MsgDBGetPlayerGold::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgDBGetPlayerGold::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgDBGetPlayerGold.user_id)
}

// int64 coin = 2;
inline void MsgDBGetPlayerGold::clear_coin() {
  coin_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBGetPlayerGold::_internal_coin() const {
  return coin_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgDBGetPlayerGold::coin() const {
  // @@protoc_insertion_point(field_get:MsgDBGetPlayerGold.coin)
  return _internal_coin();
}
inline void MsgDBGetPlayerGold::_internal_set_coin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  coin_ = value;
}
inline void MsgDBGetPlayerGold::set_coin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_coin(value);
  // @@protoc_insertion_point(field_set:MsgDBGetPlayerGold.coin)
}

// -------------------------------------------------------------------

// MsgErrorCode

// int32 type = 1;
inline void MsgErrorCode::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgErrorCode::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgErrorCode::type() const {
  // @@protoc_insertion_point(field_get:MsgErrorCode.type)
  return _internal_type();
}
inline void MsgErrorCode::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgErrorCode::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgErrorCode.type)
}

// int32 value = 2;
inline void MsgErrorCode::clear_value() {
  value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgErrorCode::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgErrorCode::value() const {
  // @@protoc_insertion_point(field_get:MsgErrorCode.value)
  return _internal_value();
}
inline void MsgErrorCode::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  value_ = value;
}
inline void MsgErrorCode::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:MsgErrorCode.value)
}

// -------------------------------------------------------------------

// MsgDeleteFrequentlyPhone

// .MsgErrorCode error_code = 1;
inline bool MsgDeleteFrequentlyPhone::_internal_has_error_code() const {
  return this != internal_default_instance() && error_code_ != nullptr;
}
inline bool MsgDeleteFrequentlyPhone::has_error_code() const {
  return _internal_has_error_code();
}
inline void MsgDeleteFrequentlyPhone::clear_error_code() {
  if (GetArena() == nullptr && error_code_ != nullptr) {
    delete error_code_;
  }
  error_code_ = nullptr;
}
inline const ::MsgErrorCode& MsgDeleteFrequentlyPhone::_internal_error_code() const {
  const ::MsgErrorCode* p = error_code_;
  return p != nullptr ? *p : reinterpret_cast<const ::MsgErrorCode&>(
      ::_MsgErrorCode_default_instance_);
}
inline const ::MsgErrorCode& MsgDeleteFrequentlyPhone::error_code() const {
  // @@protoc_insertion_point(field_get:MsgDeleteFrequentlyPhone.error_code)
  return _internal_error_code();
}
inline void MsgDeleteFrequentlyPhone::unsafe_arena_set_allocated_error_code(
    ::MsgErrorCode* error_code) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_code_);
  }
  error_code_ = error_code;
  if (error_code) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MsgDeleteFrequentlyPhone.error_code)
}
inline ::MsgErrorCode* MsgDeleteFrequentlyPhone::release_error_code() {
  
  ::MsgErrorCode* temp = error_code_;
  error_code_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MsgErrorCode* MsgDeleteFrequentlyPhone::unsafe_arena_release_error_code() {
  // @@protoc_insertion_point(field_release:MsgDeleteFrequentlyPhone.error_code)
  
  ::MsgErrorCode* temp = error_code_;
  error_code_ = nullptr;
  return temp;
}
inline ::MsgErrorCode* MsgDeleteFrequentlyPhone::_internal_mutable_error_code() {
  
  if (error_code_ == nullptr) {
    auto* p = CreateMaybeMessage<::MsgErrorCode>(GetArena());
    error_code_ = p;
  }
  return error_code_;
}
inline ::MsgErrorCode* MsgDeleteFrequentlyPhone::mutable_error_code() {
  // @@protoc_insertion_point(field_mutable:MsgDeleteFrequentlyPhone.error_code)
  return _internal_mutable_error_code();
}
inline void MsgDeleteFrequentlyPhone::set_allocated_error_code(::MsgErrorCode* error_code) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete error_code_;
  }
  if (error_code) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(error_code);
    if (message_arena != submessage_arena) {
      error_code = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error_code, submessage_arena);
    }
    
  } else {
    
  }
  error_code_ = error_code;
  // @@protoc_insertion_point(field_set_allocated:MsgDeleteFrequentlyPhone.error_code)
}

// string phone = 2;
inline void MsgDeleteFrequentlyPhone::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgDeleteFrequentlyPhone::phone() const {
  // @@protoc_insertion_point(field_get:MsgDeleteFrequentlyPhone.phone)
  return _internal_phone();
}
inline void MsgDeleteFrequentlyPhone::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgDeleteFrequentlyPhone.phone)
}
inline std::string* MsgDeleteFrequentlyPhone::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgDeleteFrequentlyPhone.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgDeleteFrequentlyPhone::_internal_phone() const {
  return phone_.Get();
}
inline void MsgDeleteFrequentlyPhone::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgDeleteFrequentlyPhone::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgDeleteFrequentlyPhone.phone)
}
inline void MsgDeleteFrequentlyPhone::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgDeleteFrequentlyPhone.phone)
}
inline void MsgDeleteFrequentlyPhone::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgDeleteFrequentlyPhone.phone)
}
inline std::string* MsgDeleteFrequentlyPhone::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgDeleteFrequentlyPhone::release_phone() {
  // @@protoc_insertion_point(field_release:MsgDeleteFrequentlyPhone.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgDeleteFrequentlyPhone::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgDeleteFrequentlyPhone.phone)
}

// -------------------------------------------------------------------

// MsgPvpSerTableInfo

// int32 table_id = 1;
inline void MsgPvpSerTableInfo::clear_table_id() {
  table_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::_internal_table_id() const {
  return table_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::table_id() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.table_id)
  return _internal_table_id();
}
inline void MsgPvpSerTableInfo::_internal_set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_id_ = value;
}
inline void MsgPvpSerTableInfo::set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_id(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.table_id)
}

// string table_name = 2;
inline void MsgPvpSerTableInfo::clear_table_name() {
  table_name_.ClearToEmpty();
}
inline const std::string& MsgPvpSerTableInfo::table_name() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.table_name)
  return _internal_table_name();
}
inline void MsgPvpSerTableInfo::set_table_name(const std::string& value) {
  _internal_set_table_name(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.table_name)
}
inline std::string* MsgPvpSerTableInfo::mutable_table_name() {
  // @@protoc_insertion_point(field_mutable:MsgPvpSerTableInfo.table_name)
  return _internal_mutable_table_name();
}
inline const std::string& MsgPvpSerTableInfo::_internal_table_name() const {
  return table_name_.Get();
}
inline void MsgPvpSerTableInfo::_internal_set_table_name(const std::string& value) {
  
  table_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPvpSerTableInfo::set_table_name(std::string&& value) {
  
  table_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPvpSerTableInfo.table_name)
}
inline void MsgPvpSerTableInfo::set_table_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  table_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPvpSerTableInfo.table_name)
}
inline void MsgPvpSerTableInfo::set_table_name(const char* value,
    size_t size) {
  
  table_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPvpSerTableInfo.table_name)
}
inline std::string* MsgPvpSerTableInfo::_internal_mutable_table_name() {
  
  return table_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPvpSerTableInfo::release_table_name() {
  // @@protoc_insertion_point(field_release:MsgPvpSerTableInfo.table_name)
  return table_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPvpSerTableInfo::set_allocated_table_name(std::string* table_name) {
  if (table_name != nullptr) {
    
  } else {
    
  }
  table_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), table_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPvpSerTableInfo.table_name)
}

// int32 chair_num = 3;
inline void MsgPvpSerTableInfo::clear_chair_num() {
  chair_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::_internal_chair_num() const {
  return chair_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::chair_num() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.chair_num)
  return _internal_chair_num();
}
inline void MsgPvpSerTableInfo::_internal_set_chair_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_num_ = value;
}
inline void MsgPvpSerTableInfo::set_chair_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_num(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.chair_num)
}

// int32 enter_num = 4;
inline void MsgPvpSerTableInfo::clear_enter_num() {
  enter_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::_internal_enter_num() const {
  return enter_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::enter_num() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.enter_num)
  return _internal_enter_num();
}
inline void MsgPvpSerTableInfo::_internal_set_enter_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  enter_num_ = value;
}
inline void MsgPvpSerTableInfo::set_enter_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_enter_num(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.enter_num)
}

// int32 base_score = 5;
inline void MsgPvpSerTableInfo::clear_base_score() {
  base_score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::_internal_base_score() const {
  return base_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::base_score() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.base_score)
  return _internal_base_score();
}
inline void MsgPvpSerTableInfo::_internal_set_base_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  base_score_ = value;
}
inline void MsgPvpSerTableInfo::set_base_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_base_score(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.base_score)
}

// bool is_activate = 6;
inline void MsgPvpSerTableInfo::clear_is_activate() {
  is_activate_ = false;
}
inline bool MsgPvpSerTableInfo::_internal_is_activate() const {
  return is_activate_;
}
inline bool MsgPvpSerTableInfo::is_activate() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.is_activate)
  return _internal_is_activate();
}
inline void MsgPvpSerTableInfo::_internal_set_is_activate(bool value) {
  
  is_activate_ = value;
}
inline void MsgPvpSerTableInfo::set_is_activate(bool value) {
  _internal_set_is_activate(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.is_activate)
}

// bool is_private = 7;
inline void MsgPvpSerTableInfo::clear_is_private() {
  is_private_ = false;
}
inline bool MsgPvpSerTableInfo::_internal_is_private() const {
  return is_private_;
}
inline bool MsgPvpSerTableInfo::is_private() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.is_private)
  return _internal_is_private();
}
inline void MsgPvpSerTableInfo::_internal_set_is_private(bool value) {
  
  is_private_ = value;
}
inline void MsgPvpSerTableInfo::set_is_private(bool value) {
  _internal_set_is_private(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.is_private)
}

// string owner_nick = 9;
inline void MsgPvpSerTableInfo::clear_owner_nick() {
  owner_nick_.ClearToEmpty();
}
inline const std::string& MsgPvpSerTableInfo::owner_nick() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.owner_nick)
  return _internal_owner_nick();
}
inline void MsgPvpSerTableInfo::set_owner_nick(const std::string& value) {
  _internal_set_owner_nick(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.owner_nick)
}
inline std::string* MsgPvpSerTableInfo::mutable_owner_nick() {
  // @@protoc_insertion_point(field_mutable:MsgPvpSerTableInfo.owner_nick)
  return _internal_mutable_owner_nick();
}
inline const std::string& MsgPvpSerTableInfo::_internal_owner_nick() const {
  return owner_nick_.Get();
}
inline void MsgPvpSerTableInfo::_internal_set_owner_nick(const std::string& value) {
  
  owner_nick_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPvpSerTableInfo::set_owner_nick(std::string&& value) {
  
  owner_nick_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPvpSerTableInfo.owner_nick)
}
inline void MsgPvpSerTableInfo::set_owner_nick(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  owner_nick_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPvpSerTableInfo.owner_nick)
}
inline void MsgPvpSerTableInfo::set_owner_nick(const char* value,
    size_t size) {
  
  owner_nick_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPvpSerTableInfo.owner_nick)
}
inline std::string* MsgPvpSerTableInfo::_internal_mutable_owner_nick() {
  
  return owner_nick_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPvpSerTableInfo::release_owner_nick() {
  // @@protoc_insertion_point(field_release:MsgPvpSerTableInfo.owner_nick)
  return owner_nick_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPvpSerTableInfo::set_allocated_owner_nick(std::string* owner_nick) {
  if (owner_nick != nullptr) {
    
  } else {
    
  }
  owner_nick_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), owner_nick,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPvpSerTableInfo.owner_nick)
}

// int32 table_no = 10;
inline void MsgPvpSerTableInfo::clear_table_no() {
  table_no_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::_internal_table_no() const {
  return table_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpSerTableInfo::table_no() const {
  // @@protoc_insertion_point(field_get:MsgPvpSerTableInfo.table_no)
  return _internal_table_no();
}
inline void MsgPvpSerTableInfo::_internal_set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_no_ = value;
}
inline void MsgPvpSerTableInfo::set_table_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_no(value);
  // @@protoc_insertion_point(field_set:MsgPvpSerTableInfo.table_no)
}

// -------------------------------------------------------------------

// MsgPvpAddTable

// int32 game_type = 1;
inline void MsgPvpAddTable::clear_game_type() {
  game_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpAddTable::_internal_game_type() const {
  return game_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpAddTable::game_type() const {
  // @@protoc_insertion_point(field_get:MsgPvpAddTable.game_type)
  return _internal_game_type();
}
inline void MsgPvpAddTable::_internal_set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_type_ = value;
}
inline void MsgPvpAddTable::set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_type(value);
  // @@protoc_insertion_point(field_set:MsgPvpAddTable.game_type)
}

// repeated .MsgPvpSerTableInfo table_list = 2;
inline int MsgPvpAddTable::_internal_table_list_size() const {
  return table_list_.size();
}
inline int MsgPvpAddTable::table_list_size() const {
  return _internal_table_list_size();
}
inline void MsgPvpAddTable::clear_table_list() {
  table_list_.Clear();
}
inline ::MsgPvpSerTableInfo* MsgPvpAddTable::mutable_table_list(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPvpAddTable.table_list)
  return table_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgPvpSerTableInfo >*
MsgPvpAddTable::mutable_table_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgPvpAddTable.table_list)
  return &table_list_;
}
inline const ::MsgPvpSerTableInfo& MsgPvpAddTable::_internal_table_list(int index) const {
  return table_list_.Get(index);
}
inline const ::MsgPvpSerTableInfo& MsgPvpAddTable::table_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgPvpAddTable.table_list)
  return _internal_table_list(index);
}
inline ::MsgPvpSerTableInfo* MsgPvpAddTable::_internal_add_table_list() {
  return table_list_.Add();
}
inline ::MsgPvpSerTableInfo* MsgPvpAddTable::add_table_list() {
  // @@protoc_insertion_point(field_add:MsgPvpAddTable.table_list)
  return _internal_add_table_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgPvpSerTableInfo >&
MsgPvpAddTable::table_list() const {
  // @@protoc_insertion_point(field_list:MsgPvpAddTable.table_list)
  return table_list_;
}

// -------------------------------------------------------------------

// MsgPvpDelTable

// int32 game_type = 1;
inline void MsgPvpDelTable::clear_game_type() {
  game_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpDelTable::_internal_game_type() const {
  return game_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpDelTable::game_type() const {
  // @@protoc_insertion_point(field_get:MsgPvpDelTable.game_type)
  return _internal_game_type();
}
inline void MsgPvpDelTable::_internal_set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_type_ = value;
}
inline void MsgPvpDelTable::set_game_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_type(value);
  // @@protoc_insertion_point(field_set:MsgPvpDelTable.game_type)
}

// int32 table_id = 2;
inline void MsgPvpDelTable::clear_table_id() {
  table_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpDelTable::_internal_table_id() const {
  return table_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPvpDelTable::table_id() const {
  // @@protoc_insertion_point(field_get:MsgPvpDelTable.table_id)
  return _internal_table_id();
}
inline void MsgPvpDelTable::_internal_set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_id_ = value;
}
inline void MsgPvpDelTable::set_table_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_id(value);
  // @@protoc_insertion_point(field_set:MsgPvpDelTable.table_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ServerInternalProto_2eproto
