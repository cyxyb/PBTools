// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: YGBH.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_YGBH_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_YGBH_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_YGBH_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_YGBH_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_YGBH_2eproto;
namespace YGBH {
class CMD_3D_CS_StartGame;
class CMD_3D_CS_StartGameDefaultTypeInternal;
extern CMD_3D_CS_StartGameDefaultTypeInternal _CMD_3D_CS_StartGame_default_instance_;
class CMD_3D_SC_Result;
class CMD_3D_SC_ResultDefaultTypeInternal;
extern CMD_3D_SC_ResultDefaultTypeInternal _CMD_3D_SC_Result_default_instance_;
class CMD_SC_SmallGame;
class CMD_SC_SmallGameDefaultTypeInternal;
extern CMD_SC_SmallGameDefaultTypeInternal _CMD_SC_SmallGame_default_instance_;
class CMD_SC_SmallGameEnd;
class CMD_SC_SmallGameEndDefaultTypeInternal;
extern CMD_SC_SmallGameEndDefaultTypeInternal _CMD_SC_SmallGameEnd_default_instance_;
class HitIcon;
class HitIconDefaultTypeInternal;
extern HitIconDefaultTypeInternal _HitIcon_default_instance_;
class SC_SceneInfo;
class SC_SceneInfoDefaultTypeInternal;
extern SC_SceneInfoDefaultTypeInternal _SC_SceneInfo_default_instance_;
}  // namespace YGBH
PROTOBUF_NAMESPACE_OPEN
template<> ::YGBH::CMD_3D_CS_StartGame* Arena::CreateMaybeMessage<::YGBH::CMD_3D_CS_StartGame>(Arena*);
template<> ::YGBH::CMD_3D_SC_Result* Arena::CreateMaybeMessage<::YGBH::CMD_3D_SC_Result>(Arena*);
template<> ::YGBH::CMD_SC_SmallGame* Arena::CreateMaybeMessage<::YGBH::CMD_SC_SmallGame>(Arena*);
template<> ::YGBH::CMD_SC_SmallGameEnd* Arena::CreateMaybeMessage<::YGBH::CMD_SC_SmallGameEnd>(Arena*);
template<> ::YGBH::HitIcon* Arena::CreateMaybeMessage<::YGBH::HitIcon>(Arena*);
template<> ::YGBH::SC_SceneInfo* Arena::CreateMaybeMessage<::YGBH::SC_SceneInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace YGBH {

enum EMsgID : int {
  SUB_SC_BET_FAIL = 0,
  SUB_SC_SMALLGAME = 1,
  SUB_SC_SMALLGAMEEND = 2,
  SUB_SC_START_GAME = 3,
  SUB_CS_GAME_START = 4,
  SUB_CS_CHOSE_FREEGAME_TYPE = 5,
  SUB_CS_LITTLE_GAME = 6,
  EMsgID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EMsgID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EMsgID_IsValid(int value);
constexpr EMsgID EMsgID_MIN = SUB_SC_BET_FAIL;
constexpr EMsgID EMsgID_MAX = SUB_CS_LITTLE_GAME;
constexpr int EMsgID_ARRAYSIZE = EMsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgID_descriptor();
template<typename T>
inline const std::string& EMsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMsgID_descriptor(), enum_t_value);
}
inline bool EMsgID_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMsgID>(
    EMsgID_descriptor(), name, value);
}
// ===================================================================

class SC_SceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:YGBH.SC_SceneInfo) */ {
 public:
  inline SC_SceneInfo() : SC_SceneInfo(nullptr) {}
  virtual ~SC_SceneInfo();

  SC_SceneInfo(const SC_SceneInfo& from);
  SC_SceneInfo(SC_SceneInfo&& from) noexcept
    : SC_SceneInfo() {
    *this = ::std::move(from);
  }

  inline SC_SceneInfo& operator=(const SC_SceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_SceneInfo& operator=(SC_SceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SC_SceneInfo& default_instance();

  static inline const SC_SceneInfo* internal_default_instance() {
    return reinterpret_cast<const SC_SceneInfo*>(
               &_SC_SceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SC_SceneInfo& a, SC_SceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_SceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_SceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SC_SceneInfo* New() const final {
    return CreateMaybeMessage<SC_SceneInfo>(nullptr);
  }

  SC_SceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SC_SceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SC_SceneInfo& from);
  void MergeFrom(const SC_SceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SC_SceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "YGBH.SC_SceneInfo";
  }
  protected:
  explicit SC_SceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_YGBH_2eproto);
    return ::descriptor_table_YGBH_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 5,
    kFreeIconLieFieldNumber = 6,
    kGoldFieldNumber = 8,
    kFreeCountFieldNumber = 1,
    kCurrentBetFieldNumber = 2,
    kGainPeiLvFieldNumber = 3,
    kBetCountFieldNumber = 4,
    kFreeTypeFieldNumber = 7,
  };
  // repeated int32 bet = 5;
  int bet_size() const;
  private:
  int _internal_bet_size() const;
  public:
  void clear_bet();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bet() const;
  void _internal_add_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bet();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bet(int index) const;
  void set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bet() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bet();

  // repeated int32 free_icon_lie = 6;
  int free_icon_lie_size() const;
  private:
  int _internal_free_icon_lie_size() const;
  public:
  void clear_free_icon_lie();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_free_icon_lie(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_free_icon_lie() const;
  void _internal_add_free_icon_lie(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_free_icon_lie();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 free_icon_lie(int index) const;
  void set_free_icon_lie(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_free_icon_lie(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      free_icon_lie() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_free_icon_lie();

  // repeated int32 gold = 8;
  int gold_size() const;
  private:
  int _internal_gold_size() const;
  public:
  void clear_gold();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gold(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_gold() const;
  void _internal_add_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_gold();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 gold(int index) const;
  void set_gold(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      gold() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_gold();

  // int32 free_count = 1;
  void clear_free_count();
  ::PROTOBUF_NAMESPACE_ID::int32 free_count() const;
  void set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_free_count() const;
  void _internal_set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 current_bet = 2;
  void clear_current_bet();
  ::PROTOBUF_NAMESPACE_ID::int32 current_bet() const;
  void set_current_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_bet() const;
  void _internal_set_current_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gain_pei_lv = 3;
  void clear_gain_pei_lv();
  ::PROTOBUF_NAMESPACE_ID::int32 gain_pei_lv() const;
  void set_gain_pei_lv(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gain_pei_lv() const;
  void _internal_set_gain_pei_lv(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet_count = 4;
  void clear_bet_count();
  ::PROTOBUF_NAMESPACE_ID::int32 bet_count() const;
  void set_bet_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_count() const;
  void _internal_set_bet_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 free_type = 7;
  void clear_free_type();
  ::PROTOBUF_NAMESPACE_ID::int32 free_type() const;
  void set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_free_type() const;
  void _internal_set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:YGBH.SC_SceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bet_;
  mutable std::atomic<int> _bet_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > free_icon_lie_;
  mutable std::atomic<int> _free_icon_lie_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > gold_;
  mutable std::atomic<int> _gold_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 free_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 gain_pei_lv_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 free_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_YGBH_2eproto;
};
// -------------------------------------------------------------------

class HitIcon PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:YGBH.HitIcon) */ {
 public:
  inline HitIcon() : HitIcon(nullptr) {}
  virtual ~HitIcon();

  HitIcon(const HitIcon& from);
  HitIcon(HitIcon&& from) noexcept
    : HitIcon() {
    *this = ::std::move(from);
  }

  inline HitIcon& operator=(const HitIcon& from) {
    CopyFrom(from);
    return *this;
  }
  inline HitIcon& operator=(HitIcon&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HitIcon& default_instance();

  static inline const HitIcon* internal_default_instance() {
    return reinterpret_cast<const HitIcon*>(
               &_HitIcon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HitIcon& a, HitIcon& b) {
    a.Swap(&b);
  }
  inline void Swap(HitIcon* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HitIcon* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HitIcon* New() const final {
    return CreateMaybeMessage<HitIcon>(nullptr);
  }

  HitIcon* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HitIcon>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HitIcon& from);
  void MergeFrom(const HitIcon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HitIcon* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "YGBH.HitIcon";
  }
  protected:
  explicit HitIcon(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_YGBH_2eproto);
    return ::descriptor_table_YGBH_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated int32 value = 1;
  int value_size() const;
  private:
  int _internal_value_size() const;
  public:
  void clear_value();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_value() const;
  void _internal_add_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_value();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 value(int index) const;
  void set_value(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_value();

  // @@protoc_insertion_point(class_scope:YGBH.HitIcon)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > value_;
  mutable std::atomic<int> _value_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_YGBH_2eproto;
};
// -------------------------------------------------------------------

class CMD_3D_SC_Result PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:YGBH.CMD_3D_SC_Result) */ {
 public:
  inline CMD_3D_SC_Result() : CMD_3D_SC_Result(nullptr) {}
  virtual ~CMD_3D_SC_Result();

  CMD_3D_SC_Result(const CMD_3D_SC_Result& from);
  CMD_3D_SC_Result(CMD_3D_SC_Result&& from) noexcept
    : CMD_3D_SC_Result() {
    *this = ::std::move(from);
  }

  inline CMD_3D_SC_Result& operator=(const CMD_3D_SC_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_3D_SC_Result& operator=(CMD_3D_SC_Result&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_3D_SC_Result& default_instance();

  static inline const CMD_3D_SC_Result* internal_default_instance() {
    return reinterpret_cast<const CMD_3D_SC_Result*>(
               &_CMD_3D_SC_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMD_3D_SC_Result& a, CMD_3D_SC_Result& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_3D_SC_Result* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_3D_SC_Result* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_3D_SC_Result* New() const final {
    return CreateMaybeMessage<CMD_3D_SC_Result>(nullptr);
  }

  CMD_3D_SC_Result* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_3D_SC_Result>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_3D_SC_Result& from);
  void MergeFrom(const CMD_3D_SC_Result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_3D_SC_Result* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "YGBH.CMD_3D_SC_Result";
  }
  protected:
  explicit CMD_3D_SC_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_YGBH_2eproto);
    return ::descriptor_table_YGBH_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIconFieldNumber = 1,
    kHitIconFieldNumber = 2,
    kIconLineFieldNumber = 16,
    kCurGoldFieldNumber = 4,
    kWinOddFieldNumber = 3,
    kWinGoldFieldNumber = 5,
    kTotalWinGoldFieldNumber = 6,
    kIsSmallGameFieldNumber = 7,
    kFreeCountFieldNumber = 8,
    kPriceGoldFieldNumber = 9,
    kMultipleFieldNumber = 10,
    kPricePoolPercentMaxFieldNumber = 11,
    kSmallNumFieldNumber = 12,
    kTotalFreeTimesFieldNumber = 13,
    kPrizePoolWildGoldFieldNumber = 14,
    kFreeTypeFieldNumber = 15,
  };
  // repeated int32 icon = 1;
  int icon_size() const;
  private:
  int _internal_icon_size() const;
  public:
  void clear_icon();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icon(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_icon() const;
  void _internal_add_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_icon();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 icon(int index) const;
  void set_icon(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      icon() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_icon();

  // repeated .YGBH.HitIcon hit_icon = 2;
  int hit_icon_size() const;
  private:
  int _internal_hit_icon_size() const;
  public:
  void clear_hit_icon();
  ::YGBH::HitIcon* mutable_hit_icon(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YGBH::HitIcon >*
      mutable_hit_icon();
  private:
  const ::YGBH::HitIcon& _internal_hit_icon(int index) const;
  ::YGBH::HitIcon* _internal_add_hit_icon();
  public:
  const ::YGBH::HitIcon& hit_icon(int index) const;
  ::YGBH::HitIcon* add_hit_icon();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YGBH::HitIcon >&
      hit_icon() const;

  // repeated int32 icon_line = 16;
  int icon_line_size() const;
  private:
  int _internal_icon_line_size() const;
  public:
  void clear_icon_line();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icon_line(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_icon_line() const;
  void _internal_add_icon_line(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_icon_line();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 icon_line(int index) const;
  void set_icon_line(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_icon_line(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      icon_line() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_icon_line();

  // int64 cur_gold = 4;
  void clear_cur_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 cur_gold() const;
  void set_cur_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cur_gold() const;
  void _internal_set_cur_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 win_odd = 3;
  void clear_win_odd();
  ::PROTOBUF_NAMESPACE_ID::int32 win_odd() const;
  void set_win_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_win_odd() const;
  void _internal_set_win_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 win_gold = 5;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total_win_gold = 6;
  void clear_total_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 total_win_gold() const;
  void set_total_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_win_gold() const;
  void _internal_set_total_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_small_game = 7;
  void clear_is_small_game();
  ::PROTOBUF_NAMESPACE_ID::int32 is_small_game() const;
  void set_is_small_game(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_small_game() const;
  void _internal_set_is_small_game(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 free_count = 8;
  void clear_free_count();
  ::PROTOBUF_NAMESPACE_ID::int32 free_count() const;
  void set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_free_count() const;
  void _internal_set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 price_gold = 9;
  void clear_price_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 price_gold() const;
  void set_price_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_price_gold() const;
  void _internal_set_price_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 multiple = 10;
  void clear_multiple();
  ::PROTOBUF_NAMESPACE_ID::int32 multiple() const;
  void set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_multiple() const;
  void _internal_set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 price_pool_percent_max = 11;
  void clear_price_pool_percent_max();
  ::PROTOBUF_NAMESPACE_ID::int32 price_pool_percent_max() const;
  void set_price_pool_percent_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_price_pool_percent_max() const;
  void _internal_set_price_pool_percent_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 small_num = 12;
  void clear_small_num();
  ::PROTOBUF_NAMESPACE_ID::int32 small_num() const;
  void set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_small_num() const;
  void _internal_set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total_free_times = 13;
  void clear_total_free_times();
  ::PROTOBUF_NAMESPACE_ID::int32 total_free_times() const;
  void set_total_free_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_free_times() const;
  void _internal_set_total_free_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 prize_pool_wild_gold = 14;
  void clear_prize_pool_wild_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 prize_pool_wild_gold() const;
  void set_prize_pool_wild_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_prize_pool_wild_gold() const;
  void _internal_set_prize_pool_wild_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 free_type = 15;
  void clear_free_type();
  ::PROTOBUF_NAMESPACE_ID::int32 free_type() const;
  void set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_free_type() const;
  void _internal_set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:YGBH.CMD_3D_SC_Result)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > icon_;
  mutable std::atomic<int> _icon_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YGBH::HitIcon > hit_icon_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > icon_line_;
  mutable std::atomic<int> _icon_line_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 cur_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 win_odd_;
  ::PROTOBUF_NAMESPACE_ID::int32 win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_small_game_;
  ::PROTOBUF_NAMESPACE_ID::int32 free_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 price_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 multiple_;
  ::PROTOBUF_NAMESPACE_ID::int32 price_pool_percent_max_;
  ::PROTOBUF_NAMESPACE_ID::int32 small_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_free_times_;
  ::PROTOBUF_NAMESPACE_ID::int32 prize_pool_wild_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 free_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_YGBH_2eproto;
};
// -------------------------------------------------------------------

class CMD_3D_CS_StartGame PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:YGBH.CMD_3D_CS_StartGame) */ {
 public:
  inline CMD_3D_CS_StartGame() : CMD_3D_CS_StartGame(nullptr) {}
  virtual ~CMD_3D_CS_StartGame();

  CMD_3D_CS_StartGame(const CMD_3D_CS_StartGame& from);
  CMD_3D_CS_StartGame(CMD_3D_CS_StartGame&& from) noexcept
    : CMD_3D_CS_StartGame() {
    *this = ::std::move(from);
  }

  inline CMD_3D_CS_StartGame& operator=(const CMD_3D_CS_StartGame& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_3D_CS_StartGame& operator=(CMD_3D_CS_StartGame&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_3D_CS_StartGame& default_instance();

  static inline const CMD_3D_CS_StartGame* internal_default_instance() {
    return reinterpret_cast<const CMD_3D_CS_StartGame*>(
               &_CMD_3D_CS_StartGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMD_3D_CS_StartGame& a, CMD_3D_CS_StartGame& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_3D_CS_StartGame* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_3D_CS_StartGame* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_3D_CS_StartGame* New() const final {
    return CreateMaybeMessage<CMD_3D_CS_StartGame>(nullptr);
  }

  CMD_3D_CS_StartGame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_3D_CS_StartGame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_3D_CS_StartGame& from);
  void MergeFrom(const CMD_3D_CS_StartGame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_3D_CS_StartGame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "YGBH.CMD_3D_CS_StartGame";
  }
  protected:
  explicit CMD_3D_CS_StartGame(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_YGBH_2eproto);
    return ::descriptor_table_YGBH_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineFieldNumber = 1,
    kBetFieldNumber = 2,
  };
  // int32 line = 1;
  void clear_line();
  ::PROTOBUF_NAMESPACE_ID::int32 line() const;
  void set_line(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_line() const;
  void _internal_set_line(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet = 2;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int32 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:YGBH.CMD_3D_CS_StartGame)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 line_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_YGBH_2eproto;
};
// -------------------------------------------------------------------

class CMD_SC_SmallGame PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:YGBH.CMD_SC_SmallGame) */ {
 public:
  inline CMD_SC_SmallGame() : CMD_SC_SmallGame(nullptr) {}
  virtual ~CMD_SC_SmallGame();

  CMD_SC_SmallGame(const CMD_SC_SmallGame& from);
  CMD_SC_SmallGame(CMD_SC_SmallGame&& from) noexcept
    : CMD_SC_SmallGame() {
    *this = ::std::move(from);
  }

  inline CMD_SC_SmallGame& operator=(const CMD_SC_SmallGame& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_SC_SmallGame& operator=(CMD_SC_SmallGame&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_SC_SmallGame& default_instance();

  static inline const CMD_SC_SmallGame* internal_default_instance() {
    return reinterpret_cast<const CMD_SC_SmallGame*>(
               &_CMD_SC_SmallGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMD_SC_SmallGame& a, CMD_SC_SmallGame& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_SC_SmallGame* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_SC_SmallGame* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_SC_SmallGame* New() const final {
    return CreateMaybeMessage<CMD_SC_SmallGame>(nullptr);
  }

  CMD_SC_SmallGame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_SC_SmallGame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_SC_SmallGame& from);
  void MergeFrom(const CMD_SC_SmallGame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_SC_SmallGame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "YGBH.CMD_SC_SmallGame";
  }
  protected:
  explicit CMD_SC_SmallGame(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_YGBH_2eproto);
    return ::descriptor_table_YGBH_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldFieldNumber = 1,
  };
  // repeated int32 gold = 1;
  int gold_size() const;
  private:
  int _internal_gold_size() const;
  public:
  void clear_gold();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gold(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_gold() const;
  void _internal_add_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_gold();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 gold(int index) const;
  void set_gold(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      gold() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_gold();

  // @@protoc_insertion_point(class_scope:YGBH.CMD_SC_SmallGame)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > gold_;
  mutable std::atomic<int> _gold_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_YGBH_2eproto;
};
// -------------------------------------------------------------------

class CMD_SC_SmallGameEnd PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:YGBH.CMD_SC_SmallGameEnd) */ {
 public:
  inline CMD_SC_SmallGameEnd() : CMD_SC_SmallGameEnd(nullptr) {}
  virtual ~CMD_SC_SmallGameEnd();

  CMD_SC_SmallGameEnd(const CMD_SC_SmallGameEnd& from);
  CMD_SC_SmallGameEnd(CMD_SC_SmallGameEnd&& from) noexcept
    : CMD_SC_SmallGameEnd() {
    *this = ::std::move(from);
  }

  inline CMD_SC_SmallGameEnd& operator=(const CMD_SC_SmallGameEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_SC_SmallGameEnd& operator=(CMD_SC_SmallGameEnd&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_SC_SmallGameEnd& default_instance();

  static inline const CMD_SC_SmallGameEnd* internal_default_instance() {
    return reinterpret_cast<const CMD_SC_SmallGameEnd*>(
               &_CMD_SC_SmallGameEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMD_SC_SmallGameEnd& a, CMD_SC_SmallGameEnd& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_SC_SmallGameEnd* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_SC_SmallGameEnd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_SC_SmallGameEnd* New() const final {
    return CreateMaybeMessage<CMD_SC_SmallGameEnd>(nullptr);
  }

  CMD_SC_SmallGameEnd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_SC_SmallGameEnd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_SC_SmallGameEnd& from);
  void MergeFrom(const CMD_SC_SmallGameEnd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_SC_SmallGameEnd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "YGBH.CMD_SC_SmallGameEnd";
  }
  protected:
  explicit CMD_SC_SmallGameEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_YGBH_2eproto);
    return ::descriptor_table_YGBH_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kGoldFieldNumber = 2,
  };
  // int32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gold = 2;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:YGBH.CMD_SC_SmallGameEnd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_YGBH_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SC_SceneInfo

// int32 free_count = 1;
inline void SC_SceneInfo::clear_free_count() {
  free_count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_free_count() const {
  return free_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::free_count() const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.free_count)
  return _internal_free_count();
}
inline void SC_SceneInfo::_internal_set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  free_count_ = value;
}
inline void SC_SceneInfo::set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_free_count(value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.free_count)
}

// int32 current_bet = 2;
inline void SC_SceneInfo::clear_current_bet() {
  current_bet_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_current_bet() const {
  return current_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::current_bet() const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.current_bet)
  return _internal_current_bet();
}
inline void SC_SceneInfo::_internal_set_current_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_bet_ = value;
}
inline void SC_SceneInfo::set_current_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_bet(value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.current_bet)
}

// int32 gain_pei_lv = 3;
inline void SC_SceneInfo::clear_gain_pei_lv() {
  gain_pei_lv_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_gain_pei_lv() const {
  return gain_pei_lv_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::gain_pei_lv() const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.gain_pei_lv)
  return _internal_gain_pei_lv();
}
inline void SC_SceneInfo::_internal_set_gain_pei_lv(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gain_pei_lv_ = value;
}
inline void SC_SceneInfo::set_gain_pei_lv(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gain_pei_lv(value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.gain_pei_lv)
}

// int32 bet_count = 4;
inline void SC_SceneInfo::clear_bet_count() {
  bet_count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_bet_count() const {
  return bet_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::bet_count() const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.bet_count)
  return _internal_bet_count();
}
inline void SC_SceneInfo::_internal_set_bet_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_count_ = value;
}
inline void SC_SceneInfo::set_bet_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet_count(value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.bet_count)
}

// repeated int32 bet = 5;
inline int SC_SceneInfo::_internal_bet_size() const {
  return bet_.size();
}
inline int SC_SceneInfo::bet_size() const {
  return _internal_bet_size();
}
inline void SC_SceneInfo::clear_bet() {
  bet_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_bet(int index) const {
  return bet_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::bet(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.bet)
  return _internal_bet(index);
}
inline void SC_SceneInfo::set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_.Set(index, value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.bet)
}
inline void SC_SceneInfo::_internal_add_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_.Add(value);
}
inline void SC_SceneInfo::add_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bet(value);
  // @@protoc_insertion_point(field_add:YGBH.SC_SceneInfo.bet)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_bet() const {
  return bet_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::bet() const {
  // @@protoc_insertion_point(field_list:YGBH.SC_SceneInfo.bet)
  return _internal_bet();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_bet() {
  return &bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_bet() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.SC_SceneInfo.bet)
  return _internal_mutable_bet();
}

// repeated int32 free_icon_lie = 6;
inline int SC_SceneInfo::_internal_free_icon_lie_size() const {
  return free_icon_lie_.size();
}
inline int SC_SceneInfo::free_icon_lie_size() const {
  return _internal_free_icon_lie_size();
}
inline void SC_SceneInfo::clear_free_icon_lie() {
  free_icon_lie_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_free_icon_lie(int index) const {
  return free_icon_lie_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::free_icon_lie(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.free_icon_lie)
  return _internal_free_icon_lie(index);
}
inline void SC_SceneInfo::set_free_icon_lie(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  free_icon_lie_.Set(index, value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.free_icon_lie)
}
inline void SC_SceneInfo::_internal_add_free_icon_lie(::PROTOBUF_NAMESPACE_ID::int32 value) {
  free_icon_lie_.Add(value);
}
inline void SC_SceneInfo::add_free_icon_lie(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_free_icon_lie(value);
  // @@protoc_insertion_point(field_add:YGBH.SC_SceneInfo.free_icon_lie)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_free_icon_lie() const {
  return free_icon_lie_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::free_icon_lie() const {
  // @@protoc_insertion_point(field_list:YGBH.SC_SceneInfo.free_icon_lie)
  return _internal_free_icon_lie();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_free_icon_lie() {
  return &free_icon_lie_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_free_icon_lie() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.SC_SceneInfo.free_icon_lie)
  return _internal_mutable_free_icon_lie();
}

// int32 free_type = 7;
inline void SC_SceneInfo::clear_free_type() {
  free_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_free_type() const {
  return free_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::free_type() const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.free_type)
  return _internal_free_type();
}
inline void SC_SceneInfo::_internal_set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  free_type_ = value;
}
inline void SC_SceneInfo::set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_free_type(value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.free_type)
}

// repeated int32 gold = 8;
inline int SC_SceneInfo::_internal_gold_size() const {
  return gold_.size();
}
inline int SC_SceneInfo::gold_size() const {
  return _internal_gold_size();
}
inline void SC_SceneInfo::clear_gold() {
  gold_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_gold(int index) const {
  return gold_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::gold(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.SC_SceneInfo.gold)
  return _internal_gold(index);
}
inline void SC_SceneInfo::set_gold(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:YGBH.SC_SceneInfo.gold)
}
inline void SC_SceneInfo::_internal_add_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  gold_.Add(value);
}
inline void SC_SceneInfo::add_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_gold(value);
  // @@protoc_insertion_point(field_add:YGBH.SC_SceneInfo.gold)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_gold() const {
  return gold_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::gold() const {
  // @@protoc_insertion_point(field_list:YGBH.SC_SceneInfo.gold)
  return _internal_gold();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_gold() {
  return &gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_gold() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.SC_SceneInfo.gold)
  return _internal_mutable_gold();
}

// -------------------------------------------------------------------

// HitIcon

// repeated int32 value = 1;
inline int HitIcon::_internal_value_size() const {
  return value_.size();
}
inline int HitIcon::value_size() const {
  return _internal_value_size();
}
inline void HitIcon::clear_value() {
  value_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HitIcon::_internal_value(int index) const {
  return value_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HitIcon::value(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.HitIcon.value)
  return _internal_value(index);
}
inline void HitIcon::set_value(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  value_.Set(index, value);
  // @@protoc_insertion_point(field_set:YGBH.HitIcon.value)
}
inline void HitIcon::_internal_add_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  value_.Add(value);
}
inline void HitIcon::add_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_value(value);
  // @@protoc_insertion_point(field_add:YGBH.HitIcon.value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
HitIcon::_internal_value() const {
  return value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
HitIcon::value() const {
  // @@protoc_insertion_point(field_list:YGBH.HitIcon.value)
  return _internal_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
HitIcon::_internal_mutable_value() {
  return &value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
HitIcon::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.HitIcon.value)
  return _internal_mutable_value();
}

// -------------------------------------------------------------------

// CMD_3D_SC_Result

// repeated int32 icon = 1;
inline int CMD_3D_SC_Result::_internal_icon_size() const {
  return icon_.size();
}
inline int CMD_3D_SC_Result::icon_size() const {
  return _internal_icon_size();
}
inline void CMD_3D_SC_Result::clear_icon() {
  icon_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_icon(int index) const {
  return icon_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::icon(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.icon)
  return _internal_icon(index);
}
inline void CMD_3D_SC_Result::set_icon(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_.Set(index, value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.icon)
}
inline void CMD_3D_SC_Result::_internal_add_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_.Add(value);
}
inline void CMD_3D_SC_Result::add_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_icon(value);
  // @@protoc_insertion_point(field_add:YGBH.CMD_3D_SC_Result.icon)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_3D_SC_Result::_internal_icon() const {
  return icon_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_3D_SC_Result::icon() const {
  // @@protoc_insertion_point(field_list:YGBH.CMD_3D_SC_Result.icon)
  return _internal_icon();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_3D_SC_Result::_internal_mutable_icon() {
  return &icon_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_3D_SC_Result::mutable_icon() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.CMD_3D_SC_Result.icon)
  return _internal_mutable_icon();
}

// repeated .YGBH.HitIcon hit_icon = 2;
inline int CMD_3D_SC_Result::_internal_hit_icon_size() const {
  return hit_icon_.size();
}
inline int CMD_3D_SC_Result::hit_icon_size() const {
  return _internal_hit_icon_size();
}
inline void CMD_3D_SC_Result::clear_hit_icon() {
  hit_icon_.Clear();
}
inline ::YGBH::HitIcon* CMD_3D_SC_Result::mutable_hit_icon(int index) {
  // @@protoc_insertion_point(field_mutable:YGBH.CMD_3D_SC_Result.hit_icon)
  return hit_icon_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YGBH::HitIcon >*
CMD_3D_SC_Result::mutable_hit_icon() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.CMD_3D_SC_Result.hit_icon)
  return &hit_icon_;
}
inline const ::YGBH::HitIcon& CMD_3D_SC_Result::_internal_hit_icon(int index) const {
  return hit_icon_.Get(index);
}
inline const ::YGBH::HitIcon& CMD_3D_SC_Result::hit_icon(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.hit_icon)
  return _internal_hit_icon(index);
}
inline ::YGBH::HitIcon* CMD_3D_SC_Result::_internal_add_hit_icon() {
  return hit_icon_.Add();
}
inline ::YGBH::HitIcon* CMD_3D_SC_Result::add_hit_icon() {
  // @@protoc_insertion_point(field_add:YGBH.CMD_3D_SC_Result.hit_icon)
  return _internal_add_hit_icon();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::YGBH::HitIcon >&
CMD_3D_SC_Result::hit_icon() const {
  // @@protoc_insertion_point(field_list:YGBH.CMD_3D_SC_Result.hit_icon)
  return hit_icon_;
}

// int32 win_odd = 3;
inline void CMD_3D_SC_Result::clear_win_odd() {
  win_odd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_win_odd() const {
  return win_odd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::win_odd() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.win_odd)
  return _internal_win_odd();
}
inline void CMD_3D_SC_Result::_internal_set_win_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  win_odd_ = value;
}
inline void CMD_3D_SC_Result::set_win_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_win_odd(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.win_odd)
}

// int64 cur_gold = 4;
inline void CMD_3D_SC_Result::clear_cur_gold() {
  cur_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::_internal_cur_gold() const {
  return cur_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::cur_gold() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.cur_gold)
  return _internal_cur_gold();
}
inline void CMD_3D_SC_Result::_internal_set_cur_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cur_gold_ = value;
}
inline void CMD_3D_SC_Result::set_cur_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cur_gold(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.cur_gold)
}

// int32 win_gold = 5;
inline void CMD_3D_SC_Result::clear_win_gold() {
  win_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::win_gold() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.win_gold)
  return _internal_win_gold();
}
inline void CMD_3D_SC_Result::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  win_gold_ = value;
}
inline void CMD_3D_SC_Result::set_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.win_gold)
}

// int32 total_win_gold = 6;
inline void CMD_3D_SC_Result::clear_total_win_gold() {
  total_win_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_total_win_gold() const {
  return total_win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::total_win_gold() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.total_win_gold)
  return _internal_total_win_gold();
}
inline void CMD_3D_SC_Result::_internal_set_total_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_win_gold_ = value;
}
inline void CMD_3D_SC_Result::set_total_win_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_win_gold(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.total_win_gold)
}

// int32 is_small_game = 7;
inline void CMD_3D_SC_Result::clear_is_small_game() {
  is_small_game_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_is_small_game() const {
  return is_small_game_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::is_small_game() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.is_small_game)
  return _internal_is_small_game();
}
inline void CMD_3D_SC_Result::_internal_set_is_small_game(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_small_game_ = value;
}
inline void CMD_3D_SC_Result::set_is_small_game(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_small_game(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.is_small_game)
}

// int32 free_count = 8;
inline void CMD_3D_SC_Result::clear_free_count() {
  free_count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_free_count() const {
  return free_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::free_count() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.free_count)
  return _internal_free_count();
}
inline void CMD_3D_SC_Result::_internal_set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  free_count_ = value;
}
inline void CMD_3D_SC_Result::set_free_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_free_count(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.free_count)
}

// int32 price_gold = 9;
inline void CMD_3D_SC_Result::clear_price_gold() {
  price_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_price_gold() const {
  return price_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::price_gold() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.price_gold)
  return _internal_price_gold();
}
inline void CMD_3D_SC_Result::_internal_set_price_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  price_gold_ = value;
}
inline void CMD_3D_SC_Result::set_price_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_price_gold(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.price_gold)
}

// int32 multiple = 10;
inline void CMD_3D_SC_Result::clear_multiple() {
  multiple_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_multiple() const {
  return multiple_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::multiple() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.multiple)
  return _internal_multiple();
}
inline void CMD_3D_SC_Result::_internal_set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  multiple_ = value;
}
inline void CMD_3D_SC_Result::set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_multiple(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.multiple)
}

// int32 price_pool_percent_max = 11;
inline void CMD_3D_SC_Result::clear_price_pool_percent_max() {
  price_pool_percent_max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_price_pool_percent_max() const {
  return price_pool_percent_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::price_pool_percent_max() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.price_pool_percent_max)
  return _internal_price_pool_percent_max();
}
inline void CMD_3D_SC_Result::_internal_set_price_pool_percent_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  price_pool_percent_max_ = value;
}
inline void CMD_3D_SC_Result::set_price_pool_percent_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_price_pool_percent_max(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.price_pool_percent_max)
}

// int32 small_num = 12;
inline void CMD_3D_SC_Result::clear_small_num() {
  small_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_small_num() const {
  return small_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::small_num() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.small_num)
  return _internal_small_num();
}
inline void CMD_3D_SC_Result::_internal_set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  small_num_ = value;
}
inline void CMD_3D_SC_Result::set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_small_num(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.small_num)
}

// int32 total_free_times = 13;
inline void CMD_3D_SC_Result::clear_total_free_times() {
  total_free_times_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_total_free_times() const {
  return total_free_times_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::total_free_times() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.total_free_times)
  return _internal_total_free_times();
}
inline void CMD_3D_SC_Result::_internal_set_total_free_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_free_times_ = value;
}
inline void CMD_3D_SC_Result::set_total_free_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_free_times(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.total_free_times)
}

// int32 prize_pool_wild_gold = 14;
inline void CMD_3D_SC_Result::clear_prize_pool_wild_gold() {
  prize_pool_wild_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_prize_pool_wild_gold() const {
  return prize_pool_wild_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::prize_pool_wild_gold() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.prize_pool_wild_gold)
  return _internal_prize_pool_wild_gold();
}
inline void CMD_3D_SC_Result::_internal_set_prize_pool_wild_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  prize_pool_wild_gold_ = value;
}
inline void CMD_3D_SC_Result::set_prize_pool_wild_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_prize_pool_wild_gold(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.prize_pool_wild_gold)
}

// int32 free_type = 15;
inline void CMD_3D_SC_Result::clear_free_type() {
  free_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_free_type() const {
  return free_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::free_type() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.free_type)
  return _internal_free_type();
}
inline void CMD_3D_SC_Result::_internal_set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  free_type_ = value;
}
inline void CMD_3D_SC_Result::set_free_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_free_type(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.free_type)
}

// repeated int32 icon_line = 16;
inline int CMD_3D_SC_Result::_internal_icon_line_size() const {
  return icon_line_.size();
}
inline int CMD_3D_SC_Result::icon_line_size() const {
  return _internal_icon_line_size();
}
inline void CMD_3D_SC_Result::clear_icon_line() {
  icon_line_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_icon_line(int index) const {
  return icon_line_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::icon_line(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_SC_Result.icon_line)
  return _internal_icon_line(index);
}
inline void CMD_3D_SC_Result::set_icon_line(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_line_.Set(index, value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_SC_Result.icon_line)
}
inline void CMD_3D_SC_Result::_internal_add_icon_line(::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_line_.Add(value);
}
inline void CMD_3D_SC_Result::add_icon_line(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_icon_line(value);
  // @@protoc_insertion_point(field_add:YGBH.CMD_3D_SC_Result.icon_line)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_3D_SC_Result::_internal_icon_line() const {
  return icon_line_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_3D_SC_Result::icon_line() const {
  // @@protoc_insertion_point(field_list:YGBH.CMD_3D_SC_Result.icon_line)
  return _internal_icon_line();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_3D_SC_Result::_internal_mutable_icon_line() {
  return &icon_line_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_3D_SC_Result::mutable_icon_line() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.CMD_3D_SC_Result.icon_line)
  return _internal_mutable_icon_line();
}

// -------------------------------------------------------------------

// CMD_3D_CS_StartGame

// int32 line = 1;
inline void CMD_3D_CS_StartGame::clear_line() {
  line_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_CS_StartGame::_internal_line() const {
  return line_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_CS_StartGame::line() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_CS_StartGame.line)
  return _internal_line();
}
inline void CMD_3D_CS_StartGame::_internal_set_line(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  line_ = value;
}
inline void CMD_3D_CS_StartGame::set_line(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_line(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_CS_StartGame.line)
}

// int32 bet = 2;
inline void CMD_3D_CS_StartGame::clear_bet() {
  bet_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_CS_StartGame::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_CS_StartGame::bet() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_3D_CS_StartGame.bet)
  return _internal_bet();
}
inline void CMD_3D_CS_StartGame::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_ = value;
}
inline void CMD_3D_CS_StartGame::set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_3D_CS_StartGame.bet)
}

// -------------------------------------------------------------------

// CMD_SC_SmallGame

// repeated int32 gold = 1;
inline int CMD_SC_SmallGame::_internal_gold_size() const {
  return gold_.size();
}
inline int CMD_SC_SmallGame::gold_size() const {
  return _internal_gold_size();
}
inline void CMD_SC_SmallGame::clear_gold() {
  gold_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_SC_SmallGame::_internal_gold(int index) const {
  return gold_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_SC_SmallGame::gold(int index) const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_SC_SmallGame.gold)
  return _internal_gold(index);
}
inline void CMD_SC_SmallGame::set_gold(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_SC_SmallGame.gold)
}
inline void CMD_SC_SmallGame::_internal_add_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  gold_.Add(value);
}
inline void CMD_SC_SmallGame::add_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_gold(value);
  // @@protoc_insertion_point(field_add:YGBH.CMD_SC_SmallGame.gold)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_SC_SmallGame::_internal_gold() const {
  return gold_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_SC_SmallGame::gold() const {
  // @@protoc_insertion_point(field_list:YGBH.CMD_SC_SmallGame.gold)
  return _internal_gold();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_SC_SmallGame::_internal_mutable_gold() {
  return &gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_SC_SmallGame::mutable_gold() {
  // @@protoc_insertion_point(field_mutable_list:YGBH.CMD_SC_SmallGame.gold)
  return _internal_mutable_gold();
}

// -------------------------------------------------------------------

// CMD_SC_SmallGameEnd

// int32 index = 1;
inline void CMD_SC_SmallGameEnd::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_SC_SmallGameEnd::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_SC_SmallGameEnd::index() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_SC_SmallGameEnd.index)
  return _internal_index();
}
inline void CMD_SC_SmallGameEnd::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void CMD_SC_SmallGameEnd::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_SC_SmallGameEnd.index)
}

// int32 gold = 2;
inline void CMD_SC_SmallGameEnd::clear_gold() {
  gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_SC_SmallGameEnd::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_SC_SmallGameEnd::gold() const {
  // @@protoc_insertion_point(field_get:YGBH.CMD_SC_SmallGameEnd.gold)
  return _internal_gold();
}
inline void CMD_SC_SmallGameEnd::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gold_ = value;
}
inline void CMD_SC_SmallGameEnd::set_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:YGBH.CMD_SC_SmallGameEnd.gold)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace YGBH

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::YGBH::EMsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::YGBH::EMsgID>() {
  return ::YGBH::EMsgID_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_YGBH_2eproto
