// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rummy.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Rummy_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Rummy_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Rummy_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Rummy_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[14]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Rummy_2eproto;
namespace Rummy {
class RMColumnInfo;
class RMColumnInfoDefaultTypeInternal;
extern RMColumnInfoDefaultTypeInternal _RMColumnInfo_default_instance_;
class RMMsgAction;
class RMMsgActionDefaultTypeInternal;
extern RMMsgActionDefaultTypeInternal _RMMsgAction_default_instance_;
class RMMsgActionChoice;
class RMMsgActionChoiceDefaultTypeInternal;
extern RMMsgActionChoiceDefaultTypeInternal _RMMsgActionChoice_default_instance_;
class RMMsgActionResp;
class RMMsgActionRespDefaultTypeInternal;
extern RMMsgActionRespDefaultTypeInternal _RMMsgActionResp_default_instance_;
class RMMsgGameResult;
class RMMsgGameResultDefaultTypeInternal;
extern RMMsgGameResultDefaultTypeInternal _RMMsgGameResult_default_instance_;
class RMMsgGameStartResp;
class RMMsgGameStartRespDefaultTypeInternal;
extern RMMsgGameStartRespDefaultTypeInternal _RMMsgGameStartResp_default_instance_;
class RMMsgGiveUpResp;
class RMMsgGiveUpRespDefaultTypeInternal;
extern RMMsgGiveUpRespDefaultTypeInternal _RMMsgGiveUpResp_default_instance_;
class RMMsgHandCards;
class RMMsgHandCardsDefaultTypeInternal;
extern RMMsgHandCardsDefaultTypeInternal _RMMsgHandCards_default_instance_;
class RMMsgNotifyActionResp;
class RMMsgNotifyActionRespDefaultTypeInternal;
extern RMMsgNotifyActionRespDefaultTypeInternal _RMMsgNotifyActionResp_default_instance_;
class RMMsgNotifyPlayerAct;
class RMMsgNotifyPlayerActDefaultTypeInternal;
extern RMMsgNotifyPlayerActDefaultTypeInternal _RMMsgNotifyPlayerAct_default_instance_;
class RMMsgNotifyTrusteeship;
class RMMsgNotifyTrusteeshipDefaultTypeInternal;
extern RMMsgNotifyTrusteeshipDefaultTypeInternal _RMMsgNotifyTrusteeship_default_instance_;
class RMMsgPlayerInfo;
class RMMsgPlayerInfoDefaultTypeInternal;
extern RMMsgPlayerInfoDefaultTypeInternal _RMMsgPlayerInfo_default_instance_;
class RMMsgSceneInfo;
class RMMsgSceneInfoDefaultTypeInternal;
extern RMMsgSceneInfoDefaultTypeInternal _RMMsgSceneInfo_default_instance_;
class RMMsgTableState;
class RMMsgTableStateDefaultTypeInternal;
extern RMMsgTableStateDefaultTypeInternal _RMMsgTableState_default_instance_;
}  // namespace Rummy
PROTOBUF_NAMESPACE_OPEN
template<> ::Rummy::RMColumnInfo* Arena::CreateMaybeMessage<::Rummy::RMColumnInfo>(Arena*);
template<> ::Rummy::RMMsgAction* Arena::CreateMaybeMessage<::Rummy::RMMsgAction>(Arena*);
template<> ::Rummy::RMMsgActionChoice* Arena::CreateMaybeMessage<::Rummy::RMMsgActionChoice>(Arena*);
template<> ::Rummy::RMMsgActionResp* Arena::CreateMaybeMessage<::Rummy::RMMsgActionResp>(Arena*);
template<> ::Rummy::RMMsgGameResult* Arena::CreateMaybeMessage<::Rummy::RMMsgGameResult>(Arena*);
template<> ::Rummy::RMMsgGameStartResp* Arena::CreateMaybeMessage<::Rummy::RMMsgGameStartResp>(Arena*);
template<> ::Rummy::RMMsgGiveUpResp* Arena::CreateMaybeMessage<::Rummy::RMMsgGiveUpResp>(Arena*);
template<> ::Rummy::RMMsgHandCards* Arena::CreateMaybeMessage<::Rummy::RMMsgHandCards>(Arena*);
template<> ::Rummy::RMMsgNotifyActionResp* Arena::CreateMaybeMessage<::Rummy::RMMsgNotifyActionResp>(Arena*);
template<> ::Rummy::RMMsgNotifyPlayerAct* Arena::CreateMaybeMessage<::Rummy::RMMsgNotifyPlayerAct>(Arena*);
template<> ::Rummy::RMMsgNotifyTrusteeship* Arena::CreateMaybeMessage<::Rummy::RMMsgNotifyTrusteeship>(Arena*);
template<> ::Rummy::RMMsgPlayerInfo* Arena::CreateMaybeMessage<::Rummy::RMMsgPlayerInfo>(Arena*);
template<> ::Rummy::RMMsgSceneInfo* Arena::CreateMaybeMessage<::Rummy::RMMsgSceneInfo>(Arena*);
template<> ::Rummy::RMMsgTableState* Arena::CreateMaybeMessage<::Rummy::RMMsgTableState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Rummy {

enum ERMGameState : int {
  GS_TP_READY = 0,
  GS_TP_DEAL = 1,
  GS_TP_PLAYING = 2,
  GS_TP_SHOW = 3,
  GS_TP_RESULT = 4,
  ERMGameState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ERMGameState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ERMGameState_IsValid(int value);
constexpr ERMGameState ERMGameState_MIN = GS_TP_READY;
constexpr ERMGameState ERMGameState_MAX = GS_TP_RESULT;
constexpr int ERMGameState_ARRAYSIZE = ERMGameState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERMGameState_descriptor();
template<typename T>
inline const std::string& ERMGameState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ERMGameState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ERMGameState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ERMGameState_descriptor(), enum_t_value);
}
inline bool ERMGameState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ERMGameState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ERMGameState>(
    ERMGameState_descriptor(), name, value);
}
enum PlayerState : int {
  PS_READY = 0,
  PS_PLAY = 1,
  PS_GIVE = 2,
  PS_FAIL = 3,
  PlayerState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PlayerState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PlayerState_IsValid(int value);
constexpr PlayerState PlayerState_MIN = PS_READY;
constexpr PlayerState PlayerState_MAX = PS_FAIL;
constexpr int PlayerState_ARRAYSIZE = PlayerState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PlayerState_descriptor();
template<typename T>
inline const std::string& PlayerState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PlayerState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PlayerState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PlayerState_descriptor(), enum_t_value);
}
inline bool PlayerState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PlayerState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PlayerState>(
    PlayerState_descriptor(), name, value);
}
enum ERMGameAction : int {
  InvaldAct = 0,
  DropCard = 1,
  NaCard = 2,
  ChuCard = 4,
  SortsCard = 8,
  ShowCard = 16,
  ERMGameAction_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ERMGameAction_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ERMGameAction_IsValid(int value);
constexpr ERMGameAction ERMGameAction_MIN = InvaldAct;
constexpr ERMGameAction ERMGameAction_MAX = ShowCard;
constexpr int ERMGameAction_ARRAYSIZE = ERMGameAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERMGameAction_descriptor();
template<typename T>
inline const std::string& ERMGameAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ERMGameAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ERMGameAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ERMGameAction_descriptor(), enum_t_value);
}
inline bool ERMGameAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ERMGameAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ERMGameAction>(
    ERMGameAction_descriptor(), name, value);
}
enum ERMColCardType : int {
  COL_SINGLE = 0,
  COL_BAO_ZI = 1,
  COL_SHUN_ZHI = 2,
  COL_QING_SHUN = 3,
  COL_MAX = 4,
  ERMColCardType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ERMColCardType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ERMColCardType_IsValid(int value);
constexpr ERMColCardType ERMColCardType_MIN = COL_SINGLE;
constexpr ERMColCardType ERMColCardType_MAX = COL_MAX;
constexpr int ERMColCardType_ARRAYSIZE = ERMColCardType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERMColCardType_descriptor();
template<typename T>
inline const std::string& ERMColCardType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ERMColCardType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ERMColCardType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ERMColCardType_descriptor(), enum_t_value);
}
inline bool ERMColCardType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ERMColCardType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ERMColCardType>(
    ERMColCardType_descriptor(), name, value);
}
enum ERMMsgIDSubGame : int {
  MsgIDSubGame_Null = 0,
  MsgIDSubGame_GameStartResp = 1,
  MsgIDSubGame_NotifyActionResp = 2,
  MsgIDSubGame_Action = 3,
  MsgIDSubGame_ActionResp = 4,
  MsgIDSubGame_GiveUpResp = 5,
  MsgIDSubGame_GameResultResp = 6,
  MsgIDSubGame_NotifyStateResp = 10,
  MsgIDSubGame_TimeOutResp = 11,
  MsgIDSubGame_TimeOutReady = 12,
  MsgIDSubGame_TimeOutReadyResp = 13,
  MsgIDSubGame_TimeOutKickResp = 14,
  MsgIDSubGame_NotifyTrusteeshipResp = 15,
  MsgIDSubGame_NotifySystemCheatResp = 20,
  MsgIDSubGame_NotifyCardTypeResp = 21,
  MsgIDSubGame_NotifyIsMaxResp = 22,
  MsgIDSubGame_NotifyRemainDoubleResp = 23,
  MsgIDSubGame_NotifyRoundResp = 24,
  MsgIDSubGame_NotifyLastActResp = 25,
  ERMMsgIDSubGame_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ERMMsgIDSubGame_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ERMMsgIDSubGame_IsValid(int value);
constexpr ERMMsgIDSubGame ERMMsgIDSubGame_MIN = MsgIDSubGame_Null;
constexpr ERMMsgIDSubGame ERMMsgIDSubGame_MAX = MsgIDSubGame_NotifyLastActResp;
constexpr int ERMMsgIDSubGame_ARRAYSIZE = ERMMsgIDSubGame_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERMMsgIDSubGame_descriptor();
template<typename T>
inline const std::string& ERMMsgIDSubGame_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ERMMsgIDSubGame>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ERMMsgIDSubGame_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ERMMsgIDSubGame_descriptor(), enum_t_value);
}
inline bool ERMMsgIDSubGame_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ERMMsgIDSubGame* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ERMMsgIDSubGame>(
    ERMMsgIDSubGame_descriptor(), name, value);
}
// ===================================================================

class RMColumnInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMColumnInfo) */ {
 public:
  inline RMColumnInfo() : RMColumnInfo(nullptr) {}
  virtual ~RMColumnInfo();

  RMColumnInfo(const RMColumnInfo& from);
  RMColumnInfo(RMColumnInfo&& from) noexcept
    : RMColumnInfo() {
    *this = ::std::move(from);
  }

  inline RMColumnInfo& operator=(const RMColumnInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMColumnInfo& operator=(RMColumnInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMColumnInfo& default_instance();

  static inline const RMColumnInfo* internal_default_instance() {
    return reinterpret_cast<const RMColumnInfo*>(
               &_RMColumnInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RMColumnInfo& a, RMColumnInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(RMColumnInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMColumnInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMColumnInfo* New() const final {
    return CreateMaybeMessage<RMColumnInfo>(nullptr);
  }

  RMColumnInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMColumnInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMColumnInfo& from);
  void MergeFrom(const RMColumnInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMColumnInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMColumnInfo";
  }
  protected:
  explicit RMColumnInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 3,
    kStartValueFieldNumber = 1,
    kColTypeFieldNumber = 2,
  };
  // repeated int32 cards = 3;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // int32 start_value = 1;
  void clear_start_value();
  ::PROTOBUF_NAMESPACE_ID::int32 start_value() const;
  void set_start_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start_value() const;
  void _internal_set_start_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 col_type = 2;
  void clear_col_type();
  ::PROTOBUF_NAMESPACE_ID::int32 col_type() const;
  void set_col_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_col_type() const;
  void _internal_set_col_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMColumnInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 col_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgTableState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgTableState) */ {
 public:
  inline RMMsgTableState() : RMMsgTableState(nullptr) {}
  virtual ~RMMsgTableState();

  RMMsgTableState(const RMMsgTableState& from);
  RMMsgTableState(RMMsgTableState&& from) noexcept
    : RMMsgTableState() {
    *this = ::std::move(from);
  }

  inline RMMsgTableState& operator=(const RMMsgTableState& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgTableState& operator=(RMMsgTableState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgTableState& default_instance();

  static inline const RMMsgTableState* internal_default_instance() {
    return reinterpret_cast<const RMMsgTableState*>(
               &_RMMsgTableState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RMMsgTableState& a, RMMsgTableState& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgTableState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgTableState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgTableState* New() const final {
    return CreateMaybeMessage<RMMsgTableState>(nullptr);
  }

  RMMsgTableState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgTableState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgTableState& from);
  void MergeFrom(const RMMsgTableState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgTableState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgTableState";
  }
  protected:
  explicit RMMsgTableState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
    kOutImeFieldNumber = 2,
  };
  // int32 state = 1;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_ime = 2;
  void clear_out_ime();
  ::PROTOBUF_NAMESPACE_ID::int32 out_ime() const;
  void set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_ime() const;
  void _internal_set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgTableState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_ime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgHandCards PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgHandCards) */ {
 public:
  inline RMMsgHandCards() : RMMsgHandCards(nullptr) {}
  virtual ~RMMsgHandCards();

  RMMsgHandCards(const RMMsgHandCards& from);
  RMMsgHandCards(RMMsgHandCards&& from) noexcept
    : RMMsgHandCards() {
    *this = ::std::move(from);
  }

  inline RMMsgHandCards& operator=(const RMMsgHandCards& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgHandCards& operator=(RMMsgHandCards&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgHandCards& default_instance();

  static inline const RMMsgHandCards* internal_default_instance() {
    return reinterpret_cast<const RMMsgHandCards*>(
               &_RMMsgHandCards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RMMsgHandCards& a, RMMsgHandCards& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgHandCards* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgHandCards* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgHandCards* New() const final {
    return CreateMaybeMessage<RMMsgHandCards>(nullptr);
  }

  RMMsgHandCards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgHandCards>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgHandCards& from);
  void MergeFrom(const RMMsgHandCards& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgHandCards* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgHandCards";
  }
  protected:
  explicit RMMsgHandCards(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 1,
  };
  // repeated int32 cards = 1;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgHandCards)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgPlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgPlayerInfo) */ {
 public:
  inline RMMsgPlayerInfo() : RMMsgPlayerInfo(nullptr) {}
  virtual ~RMMsgPlayerInfo();

  RMMsgPlayerInfo(const RMMsgPlayerInfo& from);
  RMMsgPlayerInfo(RMMsgPlayerInfo&& from) noexcept
    : RMMsgPlayerInfo() {
    *this = ::std::move(from);
  }

  inline RMMsgPlayerInfo& operator=(const RMMsgPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgPlayerInfo& operator=(RMMsgPlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgPlayerInfo& default_instance();

  static inline const RMMsgPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const RMMsgPlayerInfo*>(
               &_RMMsgPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RMMsgPlayerInfo& a, RMMsgPlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgPlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgPlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgPlayerInfo* New() const final {
    return CreateMaybeMessage<RMMsgPlayerInfo>(nullptr);
  }

  RMMsgPlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgPlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgPlayerInfo& from);
  void MergeFrom(const RMMsgPlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgPlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgPlayerInfo";
  }
  protected:
  explicit RMMsgPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 5,
    kHandGroupInfoFieldNumber = 6,
    kChairIdFieldNumber = 1,
    kPlayStatusFieldNumber = 2,
    kGoldFieldNumber = 3,
    kWinGoldFieldNumber = 4,
  };
  // repeated int32 cards = 5;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // repeated .Rummy.RMColumnInfo hand_group_info = 6;
  int hand_group_info_size() const;
  private:
  int _internal_hand_group_info_size() const;
  public:
  void clear_hand_group_info();
  ::Rummy::RMColumnInfo* mutable_hand_group_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >*
      mutable_hand_group_info();
  private:
  const ::Rummy::RMColumnInfo& _internal_hand_group_info(int index) const;
  ::Rummy::RMColumnInfo* _internal_add_hand_group_info();
  public:
  const ::Rummy::RMColumnInfo& hand_group_info(int index) const;
  ::Rummy::RMColumnInfo* add_hand_group_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >&
      hand_group_info() const;

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 play_status = 2;
  void clear_play_status();
  ::PROTOBUF_NAMESPACE_ID::int32 play_status() const;
  void set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_play_status() const;
  void _internal_set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 gold = 3;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 win_gold = 4;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgPlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo > hand_group_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 play_status_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgSceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgSceneInfo) */ {
 public:
  inline RMMsgSceneInfo() : RMMsgSceneInfo(nullptr) {}
  virtual ~RMMsgSceneInfo();

  RMMsgSceneInfo(const RMMsgSceneInfo& from);
  RMMsgSceneInfo(RMMsgSceneInfo&& from) noexcept
    : RMMsgSceneInfo() {
    *this = ::std::move(from);
  }

  inline RMMsgSceneInfo& operator=(const RMMsgSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgSceneInfo& operator=(RMMsgSceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgSceneInfo& default_instance();

  static inline const RMMsgSceneInfo* internal_default_instance() {
    return reinterpret_cast<const RMMsgSceneInfo*>(
               &_RMMsgSceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RMMsgSceneInfo& a, RMMsgSceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgSceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgSceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgSceneInfo* New() const final {
    return CreateMaybeMessage<RMMsgSceneInfo>(nullptr);
  }

  RMMsgSceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgSceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgSceneInfo& from);
  void MergeFrom(const RMMsgSceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgSceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgSceneInfo";
  }
  protected:
  explicit RMMsgSceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutCardsFieldNumber = 12,
    kPlayerInfosFieldNumber = 13,
    kMaxMultipleFieldNumber = 1,
    kCellScoreFieldNumber = 2,
    kTableStateFieldNumber = 3,
    kTaxFieldNumber = 4,
    kBankerChairIdFieldNumber = 5,
    kCurChairIdFieldNumber = 6,
    kCurChairActFieldNumber = 7,
    kOutTimeFieldNumber = 8,
    kTotalTimeFieldNumber = 9,
    kJokerCardFieldNumber = 10,
    kSurplusCardNumFieldNumber = 11,
  };
  // repeated int32 out_cards = 12;
  int out_cards_size() const;
  private:
  int _internal_out_cards_size() const;
  public:
  void clear_out_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_out_cards() const;
  void _internal_add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_out_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 out_cards(int index) const;
  void set_out_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      out_cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_out_cards();

  // repeated .Rummy.RMMsgPlayerInfo player_infos = 13;
  int player_infos_size() const;
  private:
  int _internal_player_infos_size() const;
  public:
  void clear_player_infos();
  ::Rummy::RMMsgPlayerInfo* mutable_player_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >*
      mutable_player_infos();
  private:
  const ::Rummy::RMMsgPlayerInfo& _internal_player_infos(int index) const;
  ::Rummy::RMMsgPlayerInfo* _internal_add_player_infos();
  public:
  const ::Rummy::RMMsgPlayerInfo& player_infos(int index) const;
  ::Rummy::RMMsgPlayerInfo* add_player_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >&
      player_infos() const;

  // int64 max_multiple = 1;
  void clear_max_multiple();
  ::PROTOBUF_NAMESPACE_ID::int64 max_multiple() const;
  void set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max_multiple() const;
  void _internal_set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 cell_score = 2;
  void clear_cell_score();
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score() const;
  void set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cell_score() const;
  void _internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 table_state = 3;
  void clear_table_state();
  ::PROTOBUF_NAMESPACE_ID::int32 table_state() const;
  void set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_state() const;
  void _internal_set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 tax = 4;
  void clear_tax();
  ::PROTOBUF_NAMESPACE_ID::int32 tax() const;
  void set_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tax() const;
  void _internal_set_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 banker_chair_id = 5;
  void clear_banker_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id() const;
  void set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_chair_id() const;
  void _internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_chair_id = 6;
  void clear_cur_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id() const;
  void set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_id() const;
  void _internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_chair_act = 7;
  void clear_cur_chair_act();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_act() const;
  void set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_act() const;
  void _internal_set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_time = 8;
  void clear_out_time();
  ::PROTOBUF_NAMESPACE_ID::int32 out_time() const;
  void set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_time() const;
  void _internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total_time = 9;
  void clear_total_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_time() const;
  void set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_time() const;
  void _internal_set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 joker_card = 10;
  void clear_joker_card();
  ::PROTOBUF_NAMESPACE_ID::int32 joker_card() const;
  void set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_joker_card() const;
  void _internal_set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 surplus_card_num = 11;
  void clear_surplus_card_num();
  ::PROTOBUF_NAMESPACE_ID::int32 surplus_card_num() const;
  void set_surplus_card_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_surplus_card_num() const;
  void _internal_set_surplus_card_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgSceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > out_cards_;
  mutable std::atomic<int> _out_cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo > player_infos_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_multiple_;
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 tax_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_act_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 joker_card_;
  ::PROTOBUF_NAMESPACE_ID::int32 surplus_card_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgGameStartResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgGameStartResp) */ {
 public:
  inline RMMsgGameStartResp() : RMMsgGameStartResp(nullptr) {}
  virtual ~RMMsgGameStartResp();

  RMMsgGameStartResp(const RMMsgGameStartResp& from);
  RMMsgGameStartResp(RMMsgGameStartResp&& from) noexcept
    : RMMsgGameStartResp() {
    *this = ::std::move(from);
  }

  inline RMMsgGameStartResp& operator=(const RMMsgGameStartResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgGameStartResp& operator=(RMMsgGameStartResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgGameStartResp& default_instance();

  static inline const RMMsgGameStartResp* internal_default_instance() {
    return reinterpret_cast<const RMMsgGameStartResp*>(
               &_RMMsgGameStartResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RMMsgGameStartResp& a, RMMsgGameStartResp& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgGameStartResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgGameStartResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgGameStartResp* New() const final {
    return CreateMaybeMessage<RMMsgGameStartResp>(nullptr);
  }

  RMMsgGameStartResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgGameStartResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgGameStartResp& from);
  void MergeFrom(const RMMsgGameStartResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgGameStartResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgGameStartResp";
  }
  protected:
  explicit RMMsgGameStartResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutCardsFieldNumber = 12,
    kPlayIndexFieldNumber = 13,
    kCardsFieldNumber = 15,
    kCurChairIdFieldNumber = 1,
    kBankerChairIdFieldNumber = 2,
    kMaxScoreFieldNumber = 3,
    kCellScoreFieldNumber = 4,
    kMaxMultipleFieldNumber = 5,
    kJokerCardFieldNumber = 10,
    kLeftCardNumFieldNumber = 11,
  };
  // repeated int32 out_cards = 12;
  int out_cards_size() const;
  private:
  int _internal_out_cards_size() const;
  public:
  void clear_out_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_out_cards() const;
  void _internal_add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_out_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 out_cards(int index) const;
  void set_out_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      out_cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_out_cards();

  // repeated int32 play_index = 13;
  int play_index_size() const;
  private:
  int _internal_play_index_size() const;
  public:
  void clear_play_index();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_play_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_play_index() const;
  void _internal_add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_play_index();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 play_index(int index) const;
  void set_play_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      play_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_play_index();

  // repeated int32 cards = 15;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // int32 cur_chair_id = 1;
  void clear_cur_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id() const;
  void set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_id() const;
  void _internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 banker_chair_id = 2;
  void clear_banker_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id() const;
  void set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_chair_id() const;
  void _internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 max_score = 3;
  void clear_max_score();
  ::PROTOBUF_NAMESPACE_ID::int64 max_score() const;
  void set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max_score() const;
  void _internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 cell_score = 4;
  void clear_cell_score();
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score() const;
  void set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cell_score() const;
  void _internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 max_multiple = 5;
  void clear_max_multiple();
  ::PROTOBUF_NAMESPACE_ID::int64 max_multiple() const;
  void set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max_multiple() const;
  void _internal_set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 joker_card = 10;
  void clear_joker_card();
  ::PROTOBUF_NAMESPACE_ID::int32 joker_card() const;
  void set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_joker_card() const;
  void _internal_set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 left_card_num = 11;
  void clear_left_card_num();
  ::PROTOBUF_NAMESPACE_ID::int32 left_card_num() const;
  void set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_card_num() const;
  void _internal_set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgGameStartResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > out_cards_;
  mutable std::atomic<int> _out_cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > play_index_;
  mutable std::atomic<int> _play_index_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_multiple_;
  ::PROTOBUF_NAMESPACE_ID::int32 joker_card_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_card_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgNotifyActionResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgNotifyActionResp) */ {
 public:
  inline RMMsgNotifyActionResp() : RMMsgNotifyActionResp(nullptr) {}
  virtual ~RMMsgNotifyActionResp();

  RMMsgNotifyActionResp(const RMMsgNotifyActionResp& from);
  RMMsgNotifyActionResp(RMMsgNotifyActionResp&& from) noexcept
    : RMMsgNotifyActionResp() {
    *this = ::std::move(from);
  }

  inline RMMsgNotifyActionResp& operator=(const RMMsgNotifyActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgNotifyActionResp& operator=(RMMsgNotifyActionResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgNotifyActionResp& default_instance();

  static inline const RMMsgNotifyActionResp* internal_default_instance() {
    return reinterpret_cast<const RMMsgNotifyActionResp*>(
               &_RMMsgNotifyActionResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RMMsgNotifyActionResp& a, RMMsgNotifyActionResp& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgNotifyActionResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgNotifyActionResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgNotifyActionResp* New() const final {
    return CreateMaybeMessage<RMMsgNotifyActionResp>(nullptr);
  }

  RMMsgNotifyActionResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgNotifyActionResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgNotifyActionResp& from);
  void MergeFrom(const RMMsgNotifyActionResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgNotifyActionResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgNotifyActionResp";
  }
  protected:
  explicit RMMsgNotifyActionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurChairIdFieldNumber = 1,
    kCurrentActFieldNumber = 3,
    kOperTimeFieldNumber = 4,
  };
  // int32 cur_chair_id = 1;
  void clear_cur_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id() const;
  void set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_id() const;
  void _internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 current_act = 3;
  void clear_current_act();
  ::PROTOBUF_NAMESPACE_ID::int32 current_act() const;
  void set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_act() const;
  void _internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 oper_time = 4;
  void clear_oper_time();
  ::PROTOBUF_NAMESPACE_ID::int32 oper_time() const;
  void set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_oper_time() const;
  void _internal_set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgNotifyActionResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_act_;
  ::PROTOBUF_NAMESPACE_ID::int32 oper_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgAction) */ {
 public:
  inline RMMsgAction() : RMMsgAction(nullptr) {}
  virtual ~RMMsgAction();

  RMMsgAction(const RMMsgAction& from);
  RMMsgAction(RMMsgAction&& from) noexcept
    : RMMsgAction() {
    *this = ::std::move(from);
  }

  inline RMMsgAction& operator=(const RMMsgAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgAction& operator=(RMMsgAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgAction& default_instance();

  static inline const RMMsgAction* internal_default_instance() {
    return reinterpret_cast<const RMMsgAction*>(
               &_RMMsgAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(RMMsgAction& a, RMMsgAction& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgAction* New() const final {
    return CreateMaybeMessage<RMMsgAction>(nullptr);
  }

  RMMsgAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgAction& from);
  void MergeFrom(const RMMsgAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgAction";
  }
  protected:
  explicit RMMsgAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandGroupInfoFieldNumber = 5,
    kChairIdFieldNumber = 1,
    kActTypeFieldNumber = 2,
    kDestCardFieldNumber = 3,
    kGetOutCardFieldNumber = 4,
  };
  // repeated .Rummy.RMColumnInfo hand_group_info = 5;
  int hand_group_info_size() const;
  private:
  int _internal_hand_group_info_size() const;
  public:
  void clear_hand_group_info();
  ::Rummy::RMColumnInfo* mutable_hand_group_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >*
      mutable_hand_group_info();
  private:
  const ::Rummy::RMColumnInfo& _internal_hand_group_info(int index) const;
  ::Rummy::RMColumnInfo* _internal_add_hand_group_info();
  public:
  const ::Rummy::RMColumnInfo& hand_group_info(int index) const;
  ::Rummy::RMColumnInfo* add_hand_group_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >&
      hand_group_info() const;

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 act_type = 2;
  void clear_act_type();
  ::PROTOBUF_NAMESPACE_ID::int32 act_type() const;
  void set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_act_type() const;
  void _internal_set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 dest_card = 3;
  void clear_dest_card();
  ::PROTOBUF_NAMESPACE_ID::int32 dest_card() const;
  void set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dest_card() const;
  void _internal_set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool get_out_card = 4;
  void clear_get_out_card();
  bool get_out_card() const;
  void set_get_out_card(bool value);
  private:
  bool _internal_get_out_card() const;
  void _internal_set_get_out_card(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo > hand_group_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 act_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 dest_card_;
  bool get_out_card_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgActionResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgActionResp) */ {
 public:
  inline RMMsgActionResp() : RMMsgActionResp(nullptr) {}
  virtual ~RMMsgActionResp();

  RMMsgActionResp(const RMMsgActionResp& from);
  RMMsgActionResp(RMMsgActionResp&& from) noexcept
    : RMMsgActionResp() {
    *this = ::std::move(from);
  }

  inline RMMsgActionResp& operator=(const RMMsgActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgActionResp& operator=(RMMsgActionResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgActionResp& default_instance();

  static inline const RMMsgActionResp* internal_default_instance() {
    return reinterpret_cast<const RMMsgActionResp*>(
               &_RMMsgActionResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RMMsgActionResp& a, RMMsgActionResp& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgActionResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgActionResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgActionResp* New() const final {
    return CreateMaybeMessage<RMMsgActionResp>(nullptr);
  }

  RMMsgActionResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgActionResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgActionResp& from);
  void MergeFrom(const RMMsgActionResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgActionResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgActionResp";
  }
  protected:
  explicit RMMsgActionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kActTypeFieldNumber = 2,
    kDestCardFieldNumber = 3,
    kGetOutCardFieldNumber = 4,
    kAutoActionFieldNumber = 7,
    kDropMultipleFieldNumber = 6,
    kLeftCardNumFieldNumber = 9,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 act_type = 2;
  void clear_act_type();
  ::PROTOBUF_NAMESPACE_ID::int32 act_type() const;
  void set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_act_type() const;
  void _internal_set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 dest_card = 3;
  void clear_dest_card();
  ::PROTOBUF_NAMESPACE_ID::int32 dest_card() const;
  void set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dest_card() const;
  void _internal_set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool get_out_card = 4;
  void clear_get_out_card();
  bool get_out_card() const;
  void set_get_out_card(bool value);
  private:
  bool _internal_get_out_card() const;
  void _internal_set_get_out_card(bool value);
  public:

  // bool auto_action = 7;
  void clear_auto_action();
  bool auto_action() const;
  void set_auto_action(bool value);
  private:
  bool _internal_auto_action() const;
  void _internal_set_auto_action(bool value);
  public:

  // uint32 drop_multiple = 6;
  void clear_drop_multiple();
  ::PROTOBUF_NAMESPACE_ID::uint32 drop_multiple() const;
  void set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_drop_multiple() const;
  void _internal_set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 left_card_num = 9;
  void clear_left_card_num();
  ::PROTOBUF_NAMESPACE_ID::int32 left_card_num() const;
  void set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_card_num() const;
  void _internal_set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgActionResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 act_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 dest_card_;
  bool get_out_card_;
  bool auto_action_;
  ::PROTOBUF_NAMESPACE_ID::uint32 drop_multiple_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_card_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgActionChoice PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgActionChoice) */ {
 public:
  inline RMMsgActionChoice() : RMMsgActionChoice(nullptr) {}
  virtual ~RMMsgActionChoice();

  RMMsgActionChoice(const RMMsgActionChoice& from);
  RMMsgActionChoice(RMMsgActionChoice&& from) noexcept
    : RMMsgActionChoice() {
    *this = ::std::move(from);
  }

  inline RMMsgActionChoice& operator=(const RMMsgActionChoice& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgActionChoice& operator=(RMMsgActionChoice&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgActionChoice& default_instance();

  static inline const RMMsgActionChoice* internal_default_instance() {
    return reinterpret_cast<const RMMsgActionChoice*>(
               &_RMMsgActionChoice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(RMMsgActionChoice& a, RMMsgActionChoice& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgActionChoice* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgActionChoice* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgActionChoice* New() const final {
    return CreateMaybeMessage<RMMsgActionChoice>(nullptr);
  }

  RMMsgActionChoice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgActionChoice>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgActionChoice& from);
  void MergeFrom(const RMMsgActionChoice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgActionChoice* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgActionChoice";
  }
  protected:
  explicit RMMsgActionChoice(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChoicesFieldNumber = 3,
    kDeterminedActionFieldNumber = 4,
    kDeterminedLevelFieldNumber = 1,
    kIsDetermineFieldNumber = 2,
  };
  // repeated .Rummy.RMMsgAction choices = 3;
  int choices_size() const;
  private:
  int _internal_choices_size() const;
  public:
  void clear_choices();
  ::Rummy::RMMsgAction* mutable_choices(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgAction >*
      mutable_choices();
  private:
  const ::Rummy::RMMsgAction& _internal_choices(int index) const;
  ::Rummy::RMMsgAction* _internal_add_choices();
  public:
  const ::Rummy::RMMsgAction& choices(int index) const;
  ::Rummy::RMMsgAction* add_choices();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgAction >&
      choices() const;

  // .Rummy.RMMsgAction determined_action = 4;
  bool has_determined_action() const;
  private:
  bool _internal_has_determined_action() const;
  public:
  void clear_determined_action();
  const ::Rummy::RMMsgAction& determined_action() const;
  ::Rummy::RMMsgAction* release_determined_action();
  ::Rummy::RMMsgAction* mutable_determined_action();
  void set_allocated_determined_action(::Rummy::RMMsgAction* determined_action);
  private:
  const ::Rummy::RMMsgAction& _internal_determined_action() const;
  ::Rummy::RMMsgAction* _internal_mutable_determined_action();
  public:
  void unsafe_arena_set_allocated_determined_action(
      ::Rummy::RMMsgAction* determined_action);
  ::Rummy::RMMsgAction* unsafe_arena_release_determined_action();

  // int32 determined_level = 1;
  void clear_determined_level();
  ::PROTOBUF_NAMESPACE_ID::int32 determined_level() const;
  void set_determined_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_determined_level() const;
  void _internal_set_determined_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_determine = 2;
  void clear_is_determine();
  bool is_determine() const;
  void set_is_determine(bool value);
  private:
  bool _internal_is_determine() const;
  void _internal_set_is_determine(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgActionChoice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgAction > choices_;
  ::Rummy::RMMsgAction* determined_action_;
  ::PROTOBUF_NAMESPACE_ID::int32 determined_level_;
  bool is_determine_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgGiveUpResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgGiveUpResp) */ {
 public:
  inline RMMsgGiveUpResp() : RMMsgGiveUpResp(nullptr) {}
  virtual ~RMMsgGiveUpResp();

  RMMsgGiveUpResp(const RMMsgGiveUpResp& from);
  RMMsgGiveUpResp(RMMsgGiveUpResp&& from) noexcept
    : RMMsgGiveUpResp() {
    *this = ::std::move(from);
  }

  inline RMMsgGiveUpResp& operator=(const RMMsgGiveUpResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgGiveUpResp& operator=(RMMsgGiveUpResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgGiveUpResp& default_instance();

  static inline const RMMsgGiveUpResp* internal_default_instance() {
    return reinterpret_cast<const RMMsgGiveUpResp*>(
               &_RMMsgGiveUpResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(RMMsgGiveUpResp& a, RMMsgGiveUpResp& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgGiveUpResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgGiveUpResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgGiveUpResp* New() const final {
    return CreateMaybeMessage<RMMsgGiveUpResp>(nullptr);
  }

  RMMsgGiveUpResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgGiveUpResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgGiveUpResp& from);
  void MergeFrom(const RMMsgGiveUpResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgGiveUpResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgGiveUpResp";
  }
  protected:
  explicit RMMsgGiveUpResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kLossGoldFieldNumber = 2,
    kDropMultipleFieldNumber = 3,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 loss_gold = 2;
  void clear_loss_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 loss_gold() const;
  void set_loss_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_loss_gold() const;
  void _internal_set_loss_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 drop_multiple = 3;
  void clear_drop_multiple();
  ::PROTOBUF_NAMESPACE_ID::uint32 drop_multiple() const;
  void set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_drop_multiple() const;
  void _internal_set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgGiveUpResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 loss_gold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 drop_multiple_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgGameResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgGameResult) */ {
 public:
  inline RMMsgGameResult() : RMMsgGameResult(nullptr) {}
  virtual ~RMMsgGameResult();

  RMMsgGameResult(const RMMsgGameResult& from);
  RMMsgGameResult(RMMsgGameResult&& from) noexcept
    : RMMsgGameResult() {
    *this = ::std::move(from);
  }

  inline RMMsgGameResult& operator=(const RMMsgGameResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgGameResult& operator=(RMMsgGameResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgGameResult& default_instance();

  static inline const RMMsgGameResult* internal_default_instance() {
    return reinterpret_cast<const RMMsgGameResult*>(
               &_RMMsgGameResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(RMMsgGameResult& a, RMMsgGameResult& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgGameResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgGameResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgGameResult* New() const final {
    return CreateMaybeMessage<RMMsgGameResult>(nullptr);
  }

  RMMsgGameResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgGameResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgGameResult& from);
  void MergeFrom(const RMMsgGameResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgGameResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgGameResult";
  }
  protected:
  explicit RMMsgGameResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerInfoFieldNumber = 2,
    kGameTaxFieldNumber = 1,
    kEndStateFieldNumber = 3,
  };
  // repeated .Rummy.RMMsgPlayerInfo player_info = 2;
  int player_info_size() const;
  private:
  int _internal_player_info_size() const;
  public:
  void clear_player_info();
  ::Rummy::RMMsgPlayerInfo* mutable_player_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >*
      mutable_player_info();
  private:
  const ::Rummy::RMMsgPlayerInfo& _internal_player_info(int index) const;
  ::Rummy::RMMsgPlayerInfo* _internal_add_player_info();
  public:
  const ::Rummy::RMMsgPlayerInfo& player_info(int index) const;
  ::Rummy::RMMsgPlayerInfo* add_player_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >&
      player_info() const;

  // int32 game_tax = 1;
  void clear_game_tax();
  ::PROTOBUF_NAMESPACE_ID::int32 game_tax() const;
  void set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_tax() const;
  void _internal_set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 end_state = 3;
  void clear_end_state();
  ::PROTOBUF_NAMESPACE_ID::int32 end_state() const;
  void set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_end_state() const;
  void _internal_set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgGameResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo > player_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_tax_;
  ::PROTOBUF_NAMESPACE_ID::int32 end_state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgNotifyTrusteeship PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgNotifyTrusteeship) */ {
 public:
  inline RMMsgNotifyTrusteeship() : RMMsgNotifyTrusteeship(nullptr) {}
  virtual ~RMMsgNotifyTrusteeship();

  RMMsgNotifyTrusteeship(const RMMsgNotifyTrusteeship& from);
  RMMsgNotifyTrusteeship(RMMsgNotifyTrusteeship&& from) noexcept
    : RMMsgNotifyTrusteeship() {
    *this = ::std::move(from);
  }

  inline RMMsgNotifyTrusteeship& operator=(const RMMsgNotifyTrusteeship& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgNotifyTrusteeship& operator=(RMMsgNotifyTrusteeship&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgNotifyTrusteeship& default_instance();

  static inline const RMMsgNotifyTrusteeship* internal_default_instance() {
    return reinterpret_cast<const RMMsgNotifyTrusteeship*>(
               &_RMMsgNotifyTrusteeship_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(RMMsgNotifyTrusteeship& a, RMMsgNotifyTrusteeship& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgNotifyTrusteeship* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgNotifyTrusteeship* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgNotifyTrusteeship* New() const final {
    return CreateMaybeMessage<RMMsgNotifyTrusteeship>(nullptr);
  }

  RMMsgNotifyTrusteeship* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgNotifyTrusteeship>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgNotifyTrusteeship& from);
  void MergeFrom(const RMMsgNotifyTrusteeship& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgNotifyTrusteeship* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgNotifyTrusteeship";
  }
  protected:
  explicit RMMsgNotifyTrusteeship(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeatIndexFieldNumber = 1,
    kIsTrusteeshipFieldNumber = 2,
  };
  // int32 seat_index = 1;
  void clear_seat_index();
  ::PROTOBUF_NAMESPACE_ID::int32 seat_index() const;
  void set_seat_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seat_index() const;
  void _internal_set_seat_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_trusteeship = 2;
  void clear_is_trusteeship();
  bool is_trusteeship() const;
  void set_is_trusteeship(bool value);
  private:
  bool _internal_is_trusteeship() const;
  void _internal_set_is_trusteeship(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgNotifyTrusteeship)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 seat_index_;
  bool is_trusteeship_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// -------------------------------------------------------------------

class RMMsgNotifyPlayerAct PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Rummy.RMMsgNotifyPlayerAct) */ {
 public:
  inline RMMsgNotifyPlayerAct() : RMMsgNotifyPlayerAct(nullptr) {}
  virtual ~RMMsgNotifyPlayerAct();

  RMMsgNotifyPlayerAct(const RMMsgNotifyPlayerAct& from);
  RMMsgNotifyPlayerAct(RMMsgNotifyPlayerAct&& from) noexcept
    : RMMsgNotifyPlayerAct() {
    *this = ::std::move(from);
  }

  inline RMMsgNotifyPlayerAct& operator=(const RMMsgNotifyPlayerAct& from) {
    CopyFrom(from);
    return *this;
  }
  inline RMMsgNotifyPlayerAct& operator=(RMMsgNotifyPlayerAct&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RMMsgNotifyPlayerAct& default_instance();

  static inline const RMMsgNotifyPlayerAct* internal_default_instance() {
    return reinterpret_cast<const RMMsgNotifyPlayerAct*>(
               &_RMMsgNotifyPlayerAct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(RMMsgNotifyPlayerAct& a, RMMsgNotifyPlayerAct& b) {
    a.Swap(&b);
  }
  inline void Swap(RMMsgNotifyPlayerAct* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RMMsgNotifyPlayerAct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RMMsgNotifyPlayerAct* New() const final {
    return CreateMaybeMessage<RMMsgNotifyPlayerAct>(nullptr);
  }

  RMMsgNotifyPlayerAct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RMMsgNotifyPlayerAct>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RMMsgNotifyPlayerAct& from);
  void MergeFrom(const RMMsgNotifyPlayerAct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RMMsgNotifyPlayerAct* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Rummy.RMMsgNotifyPlayerAct";
  }
  protected:
  explicit RMMsgNotifyPlayerAct(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Rummy_2eproto);
    return ::descriptor_table_Rummy_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kActFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 act = 2;
  void clear_act();
  ::PROTOBUF_NAMESPACE_ID::int32 act() const;
  void set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_act() const;
  void _internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Rummy.RMMsgNotifyPlayerAct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 act_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Rummy_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RMColumnInfo

// int32 start_value = 1;
inline void RMColumnInfo::clear_start_value() {
  start_value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMColumnInfo::_internal_start_value() const {
  return start_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMColumnInfo::start_value() const {
  // @@protoc_insertion_point(field_get:Rummy.RMColumnInfo.start_value)
  return _internal_start_value();
}
inline void RMColumnInfo::_internal_set_start_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  start_value_ = value;
}
inline void RMColumnInfo::set_start_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start_value(value);
  // @@protoc_insertion_point(field_set:Rummy.RMColumnInfo.start_value)
}

// int32 col_type = 2;
inline void RMColumnInfo::clear_col_type() {
  col_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMColumnInfo::_internal_col_type() const {
  return col_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMColumnInfo::col_type() const {
  // @@protoc_insertion_point(field_get:Rummy.RMColumnInfo.col_type)
  return _internal_col_type();
}
inline void RMColumnInfo::_internal_set_col_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  col_type_ = value;
}
inline void RMColumnInfo::set_col_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_col_type(value);
  // @@protoc_insertion_point(field_set:Rummy.RMColumnInfo.col_type)
}

// repeated int32 cards = 3;
inline int RMColumnInfo::_internal_cards_size() const {
  return cards_.size();
}
inline int RMColumnInfo::cards_size() const {
  return _internal_cards_size();
}
inline void RMColumnInfo::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMColumnInfo::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMColumnInfo::cards(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMColumnInfo.cards)
  return _internal_cards(index);
}
inline void RMColumnInfo::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rummy.RMColumnInfo.cards)
}
inline void RMColumnInfo::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void RMColumnInfo::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:Rummy.RMColumnInfo.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMColumnInfo::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMColumnInfo::cards() const {
  // @@protoc_insertion_point(field_list:Rummy.RMColumnInfo.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMColumnInfo::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMColumnInfo::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMColumnInfo.cards)
  return _internal_mutable_cards();
}

// -------------------------------------------------------------------

// RMMsgTableState

// int32 state = 1;
inline void RMMsgTableState::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgTableState::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgTableState::state() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgTableState.state)
  return _internal_state();
}
inline void RMMsgTableState::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void RMMsgTableState::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgTableState.state)
}

// int32 out_ime = 2;
inline void RMMsgTableState::clear_out_ime() {
  out_ime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgTableState::_internal_out_ime() const {
  return out_ime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgTableState::out_ime() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgTableState.out_ime)
  return _internal_out_ime();
}
inline void RMMsgTableState::_internal_set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_ime_ = value;
}
inline void RMMsgTableState::set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_ime(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgTableState.out_ime)
}

// -------------------------------------------------------------------

// RMMsgHandCards

// repeated int32 cards = 1;
inline int RMMsgHandCards::_internal_cards_size() const {
  return cards_.size();
}
inline int RMMsgHandCards::cards_size() const {
  return _internal_cards_size();
}
inline void RMMsgHandCards::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgHandCards::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgHandCards::cards(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgHandCards.cards)
  return _internal_cards(index);
}
inline void RMMsgHandCards::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgHandCards.cards)
}
inline void RMMsgHandCards::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void RMMsgHandCards::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:Rummy.RMMsgHandCards.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgHandCards::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgHandCards::cards() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgHandCards.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgHandCards::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgHandCards::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgHandCards.cards)
  return _internal_mutable_cards();
}

// -------------------------------------------------------------------

// RMMsgPlayerInfo

// int32 chair_id = 1;
inline void RMMsgPlayerInfo::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgPlayerInfo::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgPlayerInfo::chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgPlayerInfo.chair_id)
  return _internal_chair_id();
}
inline void RMMsgPlayerInfo::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void RMMsgPlayerInfo::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgPlayerInfo.chair_id)
}

// int32 play_status = 2;
inline void RMMsgPlayerInfo::clear_play_status() {
  play_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgPlayerInfo::_internal_play_status() const {
  return play_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgPlayerInfo::play_status() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgPlayerInfo.play_status)
  return _internal_play_status();
}
inline void RMMsgPlayerInfo::_internal_set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  play_status_ = value;
}
inline void RMMsgPlayerInfo::set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_play_status(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgPlayerInfo.play_status)
}

// int64 gold = 3;
inline void RMMsgPlayerInfo::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgPlayerInfo::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgPlayerInfo::gold() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgPlayerInfo.gold)
  return _internal_gold();
}
inline void RMMsgPlayerInfo::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void RMMsgPlayerInfo::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgPlayerInfo.gold)
}

// int64 win_gold = 4;
inline void RMMsgPlayerInfo::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgPlayerInfo::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgPlayerInfo::win_gold() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgPlayerInfo.win_gold)
  return _internal_win_gold();
}
inline void RMMsgPlayerInfo::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void RMMsgPlayerInfo::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgPlayerInfo.win_gold)
}

// repeated int32 cards = 5;
inline int RMMsgPlayerInfo::_internal_cards_size() const {
  return cards_.size();
}
inline int RMMsgPlayerInfo::cards_size() const {
  return _internal_cards_size();
}
inline void RMMsgPlayerInfo::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgPlayerInfo::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgPlayerInfo::cards(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgPlayerInfo.cards)
  return _internal_cards(index);
}
inline void RMMsgPlayerInfo::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgPlayerInfo.cards)
}
inline void RMMsgPlayerInfo::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void RMMsgPlayerInfo::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:Rummy.RMMsgPlayerInfo.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgPlayerInfo::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgPlayerInfo::cards() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgPlayerInfo.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgPlayerInfo::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgPlayerInfo::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgPlayerInfo.cards)
  return _internal_mutable_cards();
}

// repeated .Rummy.RMColumnInfo hand_group_info = 6;
inline int RMMsgPlayerInfo::_internal_hand_group_info_size() const {
  return hand_group_info_.size();
}
inline int RMMsgPlayerInfo::hand_group_info_size() const {
  return _internal_hand_group_info_size();
}
inline void RMMsgPlayerInfo::clear_hand_group_info() {
  hand_group_info_.Clear();
}
inline ::Rummy::RMColumnInfo* RMMsgPlayerInfo::mutable_hand_group_info(int index) {
  // @@protoc_insertion_point(field_mutable:Rummy.RMMsgPlayerInfo.hand_group_info)
  return hand_group_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >*
RMMsgPlayerInfo::mutable_hand_group_info() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgPlayerInfo.hand_group_info)
  return &hand_group_info_;
}
inline const ::Rummy::RMColumnInfo& RMMsgPlayerInfo::_internal_hand_group_info(int index) const {
  return hand_group_info_.Get(index);
}
inline const ::Rummy::RMColumnInfo& RMMsgPlayerInfo::hand_group_info(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgPlayerInfo.hand_group_info)
  return _internal_hand_group_info(index);
}
inline ::Rummy::RMColumnInfo* RMMsgPlayerInfo::_internal_add_hand_group_info() {
  return hand_group_info_.Add();
}
inline ::Rummy::RMColumnInfo* RMMsgPlayerInfo::add_hand_group_info() {
  // @@protoc_insertion_point(field_add:Rummy.RMMsgPlayerInfo.hand_group_info)
  return _internal_add_hand_group_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >&
RMMsgPlayerInfo::hand_group_info() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgPlayerInfo.hand_group_info)
  return hand_group_info_;
}

// -------------------------------------------------------------------

// RMMsgSceneInfo

// int64 max_multiple = 1;
inline void RMMsgSceneInfo::clear_max_multiple() {
  max_multiple_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgSceneInfo::_internal_max_multiple() const {
  return max_multiple_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgSceneInfo::max_multiple() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.max_multiple)
  return _internal_max_multiple();
}
inline void RMMsgSceneInfo::_internal_set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  max_multiple_ = value;
}
inline void RMMsgSceneInfo::set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max_multiple(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.max_multiple)
}

// int64 cell_score = 2;
inline void RMMsgSceneInfo::clear_cell_score() {
  cell_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgSceneInfo::_internal_cell_score() const {
  return cell_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgSceneInfo::cell_score() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.cell_score)
  return _internal_cell_score();
}
inline void RMMsgSceneInfo::_internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cell_score_ = value;
}
inline void RMMsgSceneInfo::set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cell_score(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.cell_score)
}

// int32 table_state = 3;
inline void RMMsgSceneInfo::clear_table_state() {
  table_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_table_state() const {
  return table_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::table_state() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.table_state)
  return _internal_table_state();
}
inline void RMMsgSceneInfo::_internal_set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_state_ = value;
}
inline void RMMsgSceneInfo::set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_state(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.table_state)
}

// int32 tax = 4;
inline void RMMsgSceneInfo::clear_tax() {
  tax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_tax() const {
  return tax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::tax() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.tax)
  return _internal_tax();
}
inline void RMMsgSceneInfo::_internal_set_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tax_ = value;
}
inline void RMMsgSceneInfo::set_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tax(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.tax)
}

// int32 banker_chair_id = 5;
inline void RMMsgSceneInfo::clear_banker_chair_id() {
  banker_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_banker_chair_id() const {
  return banker_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.banker_chair_id)
  return _internal_banker_chair_id();
}
inline void RMMsgSceneInfo::_internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_chair_id_ = value;
}
inline void RMMsgSceneInfo::set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.banker_chair_id)
}

// int32 cur_chair_id = 6;
inline void RMMsgSceneInfo::clear_cur_chair_id() {
  cur_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_cur_chair_id() const {
  return cur_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.cur_chair_id)
  return _internal_cur_chair_id();
}
inline void RMMsgSceneInfo::_internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_id_ = value;
}
inline void RMMsgSceneInfo::set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.cur_chair_id)
}

// int32 cur_chair_act = 7;
inline void RMMsgSceneInfo::clear_cur_chair_act() {
  cur_chair_act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_cur_chair_act() const {
  return cur_chair_act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::cur_chair_act() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.cur_chair_act)
  return _internal_cur_chair_act();
}
inline void RMMsgSceneInfo::_internal_set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_act_ = value;
}
inline void RMMsgSceneInfo::set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_act(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.cur_chair_act)
}

// int32 out_time = 8;
inline void RMMsgSceneInfo::clear_out_time() {
  out_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_out_time() const {
  return out_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::out_time() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.out_time)
  return _internal_out_time();
}
inline void RMMsgSceneInfo::_internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_time_ = value;
}
inline void RMMsgSceneInfo::set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_time(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.out_time)
}

// int32 total_time = 9;
inline void RMMsgSceneInfo::clear_total_time() {
  total_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_total_time() const {
  return total_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::total_time() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.total_time)
  return _internal_total_time();
}
inline void RMMsgSceneInfo::_internal_set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_time_ = value;
}
inline void RMMsgSceneInfo::set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_time(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.total_time)
}

// int32 joker_card = 10;
inline void RMMsgSceneInfo::clear_joker_card() {
  joker_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_joker_card() const {
  return joker_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::joker_card() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.joker_card)
  return _internal_joker_card();
}
inline void RMMsgSceneInfo::_internal_set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  joker_card_ = value;
}
inline void RMMsgSceneInfo::set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_joker_card(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.joker_card)
}

// int32 surplus_card_num = 11;
inline void RMMsgSceneInfo::clear_surplus_card_num() {
  surplus_card_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_surplus_card_num() const {
  return surplus_card_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::surplus_card_num() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.surplus_card_num)
  return _internal_surplus_card_num();
}
inline void RMMsgSceneInfo::_internal_set_surplus_card_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  surplus_card_num_ = value;
}
inline void RMMsgSceneInfo::set_surplus_card_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_surplus_card_num(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.surplus_card_num)
}

// repeated int32 out_cards = 12;
inline int RMMsgSceneInfo::_internal_out_cards_size() const {
  return out_cards_.size();
}
inline int RMMsgSceneInfo::out_cards_size() const {
  return _internal_out_cards_size();
}
inline void RMMsgSceneInfo::clear_out_cards() {
  out_cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::_internal_out_cards(int index) const {
  return out_cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgSceneInfo::out_cards(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.out_cards)
  return _internal_out_cards(index);
}
inline void RMMsgSceneInfo::set_out_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  out_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgSceneInfo.out_cards)
}
inline void RMMsgSceneInfo::_internal_add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  out_cards_.Add(value);
}
inline void RMMsgSceneInfo::add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_out_cards(value);
  // @@protoc_insertion_point(field_add:Rummy.RMMsgSceneInfo.out_cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgSceneInfo::_internal_out_cards() const {
  return out_cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgSceneInfo::out_cards() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgSceneInfo.out_cards)
  return _internal_out_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgSceneInfo::_internal_mutable_out_cards() {
  return &out_cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgSceneInfo::mutable_out_cards() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgSceneInfo.out_cards)
  return _internal_mutable_out_cards();
}

// repeated .Rummy.RMMsgPlayerInfo player_infos = 13;
inline int RMMsgSceneInfo::_internal_player_infos_size() const {
  return player_infos_.size();
}
inline int RMMsgSceneInfo::player_infos_size() const {
  return _internal_player_infos_size();
}
inline void RMMsgSceneInfo::clear_player_infos() {
  player_infos_.Clear();
}
inline ::Rummy::RMMsgPlayerInfo* RMMsgSceneInfo::mutable_player_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Rummy.RMMsgSceneInfo.player_infos)
  return player_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >*
RMMsgSceneInfo::mutable_player_infos() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgSceneInfo.player_infos)
  return &player_infos_;
}
inline const ::Rummy::RMMsgPlayerInfo& RMMsgSceneInfo::_internal_player_infos(int index) const {
  return player_infos_.Get(index);
}
inline const ::Rummy::RMMsgPlayerInfo& RMMsgSceneInfo::player_infos(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgSceneInfo.player_infos)
  return _internal_player_infos(index);
}
inline ::Rummy::RMMsgPlayerInfo* RMMsgSceneInfo::_internal_add_player_infos() {
  return player_infos_.Add();
}
inline ::Rummy::RMMsgPlayerInfo* RMMsgSceneInfo::add_player_infos() {
  // @@protoc_insertion_point(field_add:Rummy.RMMsgSceneInfo.player_infos)
  return _internal_add_player_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >&
RMMsgSceneInfo::player_infos() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgSceneInfo.player_infos)
  return player_infos_;
}

// -------------------------------------------------------------------

// RMMsgGameStartResp

// int32 cur_chair_id = 1;
inline void RMMsgGameStartResp::clear_cur_chair_id() {
  cur_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::_internal_cur_chair_id() const {
  return cur_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.cur_chair_id)
  return _internal_cur_chair_id();
}
inline void RMMsgGameStartResp::_internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_id_ = value;
}
inline void RMMsgGameStartResp::set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.cur_chair_id)
}

// int32 banker_chair_id = 2;
inline void RMMsgGameStartResp::clear_banker_chair_id() {
  banker_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::_internal_banker_chair_id() const {
  return banker_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.banker_chair_id)
  return _internal_banker_chair_id();
}
inline void RMMsgGameStartResp::_internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_chair_id_ = value;
}
inline void RMMsgGameStartResp::set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.banker_chair_id)
}

// int64 max_score = 3;
inline void RMMsgGameStartResp::clear_max_score() {
  max_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgGameStartResp::_internal_max_score() const {
  return max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgGameStartResp::max_score() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.max_score)
  return _internal_max_score();
}
inline void RMMsgGameStartResp::_internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  max_score_ = value;
}
inline void RMMsgGameStartResp::set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max_score(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.max_score)
}

// int64 cell_score = 4;
inline void RMMsgGameStartResp::clear_cell_score() {
  cell_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgGameStartResp::_internal_cell_score() const {
  return cell_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgGameStartResp::cell_score() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.cell_score)
  return _internal_cell_score();
}
inline void RMMsgGameStartResp::_internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cell_score_ = value;
}
inline void RMMsgGameStartResp::set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cell_score(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.cell_score)
}

// int64 max_multiple = 5;
inline void RMMsgGameStartResp::clear_max_multiple() {
  max_multiple_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgGameStartResp::_internal_max_multiple() const {
  return max_multiple_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 RMMsgGameStartResp::max_multiple() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.max_multiple)
  return _internal_max_multiple();
}
inline void RMMsgGameStartResp::_internal_set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  max_multiple_ = value;
}
inline void RMMsgGameStartResp::set_max_multiple(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max_multiple(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.max_multiple)
}

// int32 joker_card = 10;
inline void RMMsgGameStartResp::clear_joker_card() {
  joker_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::_internal_joker_card() const {
  return joker_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::joker_card() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.joker_card)
  return _internal_joker_card();
}
inline void RMMsgGameStartResp::_internal_set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  joker_card_ = value;
}
inline void RMMsgGameStartResp::set_joker_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_joker_card(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.joker_card)
}

// int32 left_card_num = 11;
inline void RMMsgGameStartResp::clear_left_card_num() {
  left_card_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::_internal_left_card_num() const {
  return left_card_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::left_card_num() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.left_card_num)
  return _internal_left_card_num();
}
inline void RMMsgGameStartResp::_internal_set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  left_card_num_ = value;
}
inline void RMMsgGameStartResp::set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_card_num(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.left_card_num)
}

// repeated int32 out_cards = 12;
inline int RMMsgGameStartResp::_internal_out_cards_size() const {
  return out_cards_.size();
}
inline int RMMsgGameStartResp::out_cards_size() const {
  return _internal_out_cards_size();
}
inline void RMMsgGameStartResp::clear_out_cards() {
  out_cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::_internal_out_cards(int index) const {
  return out_cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::out_cards(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.out_cards)
  return _internal_out_cards(index);
}
inline void RMMsgGameStartResp::set_out_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  out_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.out_cards)
}
inline void RMMsgGameStartResp::_internal_add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  out_cards_.Add(value);
}
inline void RMMsgGameStartResp::add_out_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_out_cards(value);
  // @@protoc_insertion_point(field_add:Rummy.RMMsgGameStartResp.out_cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgGameStartResp::_internal_out_cards() const {
  return out_cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgGameStartResp::out_cards() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgGameStartResp.out_cards)
  return _internal_out_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgGameStartResp::_internal_mutable_out_cards() {
  return &out_cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgGameStartResp::mutable_out_cards() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgGameStartResp.out_cards)
  return _internal_mutable_out_cards();
}

// repeated int32 play_index = 13;
inline int RMMsgGameStartResp::_internal_play_index_size() const {
  return play_index_.size();
}
inline int RMMsgGameStartResp::play_index_size() const {
  return _internal_play_index_size();
}
inline void RMMsgGameStartResp::clear_play_index() {
  play_index_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::_internal_play_index(int index) const {
  return play_index_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::play_index(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.play_index)
  return _internal_play_index(index);
}
inline void RMMsgGameStartResp::set_play_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  play_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.play_index)
}
inline void RMMsgGameStartResp::_internal_add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  play_index_.Add(value);
}
inline void RMMsgGameStartResp::add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_play_index(value);
  // @@protoc_insertion_point(field_add:Rummy.RMMsgGameStartResp.play_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgGameStartResp::_internal_play_index() const {
  return play_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgGameStartResp::play_index() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgGameStartResp.play_index)
  return _internal_play_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgGameStartResp::_internal_mutable_play_index() {
  return &play_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgGameStartResp::mutable_play_index() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgGameStartResp.play_index)
  return _internal_mutable_play_index();
}

// repeated int32 cards = 15;
inline int RMMsgGameStartResp::_internal_cards_size() const {
  return cards_.size();
}
inline int RMMsgGameStartResp::cards_size() const {
  return _internal_cards_size();
}
inline void RMMsgGameStartResp::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameStartResp::cards(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameStartResp.cards)
  return _internal_cards(index);
}
inline void RMMsgGameStartResp::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameStartResp.cards)
}
inline void RMMsgGameStartResp::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void RMMsgGameStartResp::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:Rummy.RMMsgGameStartResp.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgGameStartResp::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
RMMsgGameStartResp::cards() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgGameStartResp.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgGameStartResp::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
RMMsgGameStartResp::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgGameStartResp.cards)
  return _internal_mutable_cards();
}

// -------------------------------------------------------------------

// RMMsgNotifyActionResp

// int32 cur_chair_id = 1;
inline void RMMsgNotifyActionResp::clear_cur_chair_id() {
  cur_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyActionResp::_internal_cur_chair_id() const {
  return cur_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyActionResp::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgNotifyActionResp.cur_chair_id)
  return _internal_cur_chair_id();
}
inline void RMMsgNotifyActionResp::_internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_id_ = value;
}
inline void RMMsgNotifyActionResp::set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgNotifyActionResp.cur_chair_id)
}

// int32 current_act = 3;
inline void RMMsgNotifyActionResp::clear_current_act() {
  current_act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyActionResp::_internal_current_act() const {
  return current_act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyActionResp::current_act() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgNotifyActionResp.current_act)
  return _internal_current_act();
}
inline void RMMsgNotifyActionResp::_internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_act_ = value;
}
inline void RMMsgNotifyActionResp::set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_act(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgNotifyActionResp.current_act)
}

// int32 oper_time = 4;
inline void RMMsgNotifyActionResp::clear_oper_time() {
  oper_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyActionResp::_internal_oper_time() const {
  return oper_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyActionResp::oper_time() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgNotifyActionResp.oper_time)
  return _internal_oper_time();
}
inline void RMMsgNotifyActionResp::_internal_set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  oper_time_ = value;
}
inline void RMMsgNotifyActionResp::set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_oper_time(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgNotifyActionResp.oper_time)
}

// -------------------------------------------------------------------

// RMMsgAction

// int32 chair_id = 1;
inline void RMMsgAction::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgAction::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgAction::chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgAction.chair_id)
  return _internal_chair_id();
}
inline void RMMsgAction::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void RMMsgAction::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgAction.chair_id)
}

// int32 act_type = 2;
inline void RMMsgAction::clear_act_type() {
  act_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgAction::_internal_act_type() const {
  return act_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgAction::act_type() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgAction.act_type)
  return _internal_act_type();
}
inline void RMMsgAction::_internal_set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  act_type_ = value;
}
inline void RMMsgAction::set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_act_type(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgAction.act_type)
}

// int32 dest_card = 3;
inline void RMMsgAction::clear_dest_card() {
  dest_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgAction::_internal_dest_card() const {
  return dest_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgAction::dest_card() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgAction.dest_card)
  return _internal_dest_card();
}
inline void RMMsgAction::_internal_set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dest_card_ = value;
}
inline void RMMsgAction::set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dest_card(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgAction.dest_card)
}

// bool get_out_card = 4;
inline void RMMsgAction::clear_get_out_card() {
  get_out_card_ = false;
}
inline bool RMMsgAction::_internal_get_out_card() const {
  return get_out_card_;
}
inline bool RMMsgAction::get_out_card() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgAction.get_out_card)
  return _internal_get_out_card();
}
inline void RMMsgAction::_internal_set_get_out_card(bool value) {
  
  get_out_card_ = value;
}
inline void RMMsgAction::set_get_out_card(bool value) {
  _internal_set_get_out_card(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgAction.get_out_card)
}

// repeated .Rummy.RMColumnInfo hand_group_info = 5;
inline int RMMsgAction::_internal_hand_group_info_size() const {
  return hand_group_info_.size();
}
inline int RMMsgAction::hand_group_info_size() const {
  return _internal_hand_group_info_size();
}
inline void RMMsgAction::clear_hand_group_info() {
  hand_group_info_.Clear();
}
inline ::Rummy::RMColumnInfo* RMMsgAction::mutable_hand_group_info(int index) {
  // @@protoc_insertion_point(field_mutable:Rummy.RMMsgAction.hand_group_info)
  return hand_group_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >*
RMMsgAction::mutable_hand_group_info() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgAction.hand_group_info)
  return &hand_group_info_;
}
inline const ::Rummy::RMColumnInfo& RMMsgAction::_internal_hand_group_info(int index) const {
  return hand_group_info_.Get(index);
}
inline const ::Rummy::RMColumnInfo& RMMsgAction::hand_group_info(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgAction.hand_group_info)
  return _internal_hand_group_info(index);
}
inline ::Rummy::RMColumnInfo* RMMsgAction::_internal_add_hand_group_info() {
  return hand_group_info_.Add();
}
inline ::Rummy::RMColumnInfo* RMMsgAction::add_hand_group_info() {
  // @@protoc_insertion_point(field_add:Rummy.RMMsgAction.hand_group_info)
  return _internal_add_hand_group_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMColumnInfo >&
RMMsgAction::hand_group_info() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgAction.hand_group_info)
  return hand_group_info_;
}

// -------------------------------------------------------------------

// RMMsgActionResp

// int32 chair_id = 1;
inline void RMMsgActionResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionResp.chair_id)
  return _internal_chair_id();
}
inline void RMMsgActionResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void RMMsgActionResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionResp.chair_id)
}

// int32 act_type = 2;
inline void RMMsgActionResp::clear_act_type() {
  act_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::_internal_act_type() const {
  return act_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::act_type() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionResp.act_type)
  return _internal_act_type();
}
inline void RMMsgActionResp::_internal_set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  act_type_ = value;
}
inline void RMMsgActionResp::set_act_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_act_type(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionResp.act_type)
}

// int32 dest_card = 3;
inline void RMMsgActionResp::clear_dest_card() {
  dest_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::_internal_dest_card() const {
  return dest_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::dest_card() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionResp.dest_card)
  return _internal_dest_card();
}
inline void RMMsgActionResp::_internal_set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dest_card_ = value;
}
inline void RMMsgActionResp::set_dest_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dest_card(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionResp.dest_card)
}

// bool get_out_card = 4;
inline void RMMsgActionResp::clear_get_out_card() {
  get_out_card_ = false;
}
inline bool RMMsgActionResp::_internal_get_out_card() const {
  return get_out_card_;
}
inline bool RMMsgActionResp::get_out_card() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionResp.get_out_card)
  return _internal_get_out_card();
}
inline void RMMsgActionResp::_internal_set_get_out_card(bool value) {
  
  get_out_card_ = value;
}
inline void RMMsgActionResp::set_get_out_card(bool value) {
  _internal_set_get_out_card(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionResp.get_out_card)
}

// uint32 drop_multiple = 6;
inline void RMMsgActionResp::clear_drop_multiple() {
  drop_multiple_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RMMsgActionResp::_internal_drop_multiple() const {
  return drop_multiple_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RMMsgActionResp::drop_multiple() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionResp.drop_multiple)
  return _internal_drop_multiple();
}
inline void RMMsgActionResp::_internal_set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  drop_multiple_ = value;
}
inline void RMMsgActionResp::set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_drop_multiple(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionResp.drop_multiple)
}

// bool auto_action = 7;
inline void RMMsgActionResp::clear_auto_action() {
  auto_action_ = false;
}
inline bool RMMsgActionResp::_internal_auto_action() const {
  return auto_action_;
}
inline bool RMMsgActionResp::auto_action() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionResp.auto_action)
  return _internal_auto_action();
}
inline void RMMsgActionResp::_internal_set_auto_action(bool value) {
  
  auto_action_ = value;
}
inline void RMMsgActionResp::set_auto_action(bool value) {
  _internal_set_auto_action(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionResp.auto_action)
}

// int32 left_card_num = 9;
inline void RMMsgActionResp::clear_left_card_num() {
  left_card_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::_internal_left_card_num() const {
  return left_card_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionResp::left_card_num() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionResp.left_card_num)
  return _internal_left_card_num();
}
inline void RMMsgActionResp::_internal_set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  left_card_num_ = value;
}
inline void RMMsgActionResp::set_left_card_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_card_num(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionResp.left_card_num)
}

// -------------------------------------------------------------------

// RMMsgActionChoice

// int32 determined_level = 1;
inline void RMMsgActionChoice::clear_determined_level() {
  determined_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionChoice::_internal_determined_level() const {
  return determined_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgActionChoice::determined_level() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionChoice.determined_level)
  return _internal_determined_level();
}
inline void RMMsgActionChoice::_internal_set_determined_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  determined_level_ = value;
}
inline void RMMsgActionChoice::set_determined_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_determined_level(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionChoice.determined_level)
}

// bool is_determine = 2;
inline void RMMsgActionChoice::clear_is_determine() {
  is_determine_ = false;
}
inline bool RMMsgActionChoice::_internal_is_determine() const {
  return is_determine_;
}
inline bool RMMsgActionChoice::is_determine() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionChoice.is_determine)
  return _internal_is_determine();
}
inline void RMMsgActionChoice::_internal_set_is_determine(bool value) {
  
  is_determine_ = value;
}
inline void RMMsgActionChoice::set_is_determine(bool value) {
  _internal_set_is_determine(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgActionChoice.is_determine)
}

// repeated .Rummy.RMMsgAction choices = 3;
inline int RMMsgActionChoice::_internal_choices_size() const {
  return choices_.size();
}
inline int RMMsgActionChoice::choices_size() const {
  return _internal_choices_size();
}
inline void RMMsgActionChoice::clear_choices() {
  choices_.Clear();
}
inline ::Rummy::RMMsgAction* RMMsgActionChoice::mutable_choices(int index) {
  // @@protoc_insertion_point(field_mutable:Rummy.RMMsgActionChoice.choices)
  return choices_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgAction >*
RMMsgActionChoice::mutable_choices() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgActionChoice.choices)
  return &choices_;
}
inline const ::Rummy::RMMsgAction& RMMsgActionChoice::_internal_choices(int index) const {
  return choices_.Get(index);
}
inline const ::Rummy::RMMsgAction& RMMsgActionChoice::choices(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionChoice.choices)
  return _internal_choices(index);
}
inline ::Rummy::RMMsgAction* RMMsgActionChoice::_internal_add_choices() {
  return choices_.Add();
}
inline ::Rummy::RMMsgAction* RMMsgActionChoice::add_choices() {
  // @@protoc_insertion_point(field_add:Rummy.RMMsgActionChoice.choices)
  return _internal_add_choices();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgAction >&
RMMsgActionChoice::choices() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgActionChoice.choices)
  return choices_;
}

// .Rummy.RMMsgAction determined_action = 4;
inline bool RMMsgActionChoice::_internal_has_determined_action() const {
  return this != internal_default_instance() && determined_action_ != nullptr;
}
inline bool RMMsgActionChoice::has_determined_action() const {
  return _internal_has_determined_action();
}
inline void RMMsgActionChoice::clear_determined_action() {
  if (GetArena() == nullptr && determined_action_ != nullptr) {
    delete determined_action_;
  }
  determined_action_ = nullptr;
}
inline const ::Rummy::RMMsgAction& RMMsgActionChoice::_internal_determined_action() const {
  const ::Rummy::RMMsgAction* p = determined_action_;
  return p != nullptr ? *p : reinterpret_cast<const ::Rummy::RMMsgAction&>(
      ::Rummy::_RMMsgAction_default_instance_);
}
inline const ::Rummy::RMMsgAction& RMMsgActionChoice::determined_action() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgActionChoice.determined_action)
  return _internal_determined_action();
}
inline void RMMsgActionChoice::unsafe_arena_set_allocated_determined_action(
    ::Rummy::RMMsgAction* determined_action) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(determined_action_);
  }
  determined_action_ = determined_action;
  if (determined_action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Rummy.RMMsgActionChoice.determined_action)
}
inline ::Rummy::RMMsgAction* RMMsgActionChoice::release_determined_action() {
  
  ::Rummy::RMMsgAction* temp = determined_action_;
  determined_action_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Rummy::RMMsgAction* RMMsgActionChoice::unsafe_arena_release_determined_action() {
  // @@protoc_insertion_point(field_release:Rummy.RMMsgActionChoice.determined_action)
  
  ::Rummy::RMMsgAction* temp = determined_action_;
  determined_action_ = nullptr;
  return temp;
}
inline ::Rummy::RMMsgAction* RMMsgActionChoice::_internal_mutable_determined_action() {
  
  if (determined_action_ == nullptr) {
    auto* p = CreateMaybeMessage<::Rummy::RMMsgAction>(GetArena());
    determined_action_ = p;
  }
  return determined_action_;
}
inline ::Rummy::RMMsgAction* RMMsgActionChoice::mutable_determined_action() {
  // @@protoc_insertion_point(field_mutable:Rummy.RMMsgActionChoice.determined_action)
  return _internal_mutable_determined_action();
}
inline void RMMsgActionChoice::set_allocated_determined_action(::Rummy::RMMsgAction* determined_action) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete determined_action_;
  }
  if (determined_action) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(determined_action);
    if (message_arena != submessage_arena) {
      determined_action = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, determined_action, submessage_arena);
    }
    
  } else {
    
  }
  determined_action_ = determined_action;
  // @@protoc_insertion_point(field_set_allocated:Rummy.RMMsgActionChoice.determined_action)
}

// -------------------------------------------------------------------

// RMMsgGiveUpResp

// int32 chair_id = 1;
inline void RMMsgGiveUpResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGiveUpResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGiveUpResp::chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGiveUpResp.chair_id)
  return _internal_chair_id();
}
inline void RMMsgGiveUpResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void RMMsgGiveUpResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGiveUpResp.chair_id)
}

// int32 loss_gold = 2;
inline void RMMsgGiveUpResp::clear_loss_gold() {
  loss_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGiveUpResp::_internal_loss_gold() const {
  return loss_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGiveUpResp::loss_gold() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGiveUpResp.loss_gold)
  return _internal_loss_gold();
}
inline void RMMsgGiveUpResp::_internal_set_loss_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  loss_gold_ = value;
}
inline void RMMsgGiveUpResp::set_loss_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_loss_gold(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGiveUpResp.loss_gold)
}

// uint32 drop_multiple = 3;
inline void RMMsgGiveUpResp::clear_drop_multiple() {
  drop_multiple_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RMMsgGiveUpResp::_internal_drop_multiple() const {
  return drop_multiple_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RMMsgGiveUpResp::drop_multiple() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGiveUpResp.drop_multiple)
  return _internal_drop_multiple();
}
inline void RMMsgGiveUpResp::_internal_set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  drop_multiple_ = value;
}
inline void RMMsgGiveUpResp::set_drop_multiple(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_drop_multiple(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGiveUpResp.drop_multiple)
}

// -------------------------------------------------------------------

// RMMsgGameResult

// int32 game_tax = 1;
inline void RMMsgGameResult::clear_game_tax() {
  game_tax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameResult::_internal_game_tax() const {
  return game_tax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameResult::game_tax() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameResult.game_tax)
  return _internal_game_tax();
}
inline void RMMsgGameResult::_internal_set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_tax_ = value;
}
inline void RMMsgGameResult::set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_tax(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameResult.game_tax)
}

// repeated .Rummy.RMMsgPlayerInfo player_info = 2;
inline int RMMsgGameResult::_internal_player_info_size() const {
  return player_info_.size();
}
inline int RMMsgGameResult::player_info_size() const {
  return _internal_player_info_size();
}
inline void RMMsgGameResult::clear_player_info() {
  player_info_.Clear();
}
inline ::Rummy::RMMsgPlayerInfo* RMMsgGameResult::mutable_player_info(int index) {
  // @@protoc_insertion_point(field_mutable:Rummy.RMMsgGameResult.player_info)
  return player_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >*
RMMsgGameResult::mutable_player_info() {
  // @@protoc_insertion_point(field_mutable_list:Rummy.RMMsgGameResult.player_info)
  return &player_info_;
}
inline const ::Rummy::RMMsgPlayerInfo& RMMsgGameResult::_internal_player_info(int index) const {
  return player_info_.Get(index);
}
inline const ::Rummy::RMMsgPlayerInfo& RMMsgGameResult::player_info(int index) const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameResult.player_info)
  return _internal_player_info(index);
}
inline ::Rummy::RMMsgPlayerInfo* RMMsgGameResult::_internal_add_player_info() {
  return player_info_.Add();
}
inline ::Rummy::RMMsgPlayerInfo* RMMsgGameResult::add_player_info() {
  // @@protoc_insertion_point(field_add:Rummy.RMMsgGameResult.player_info)
  return _internal_add_player_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Rummy::RMMsgPlayerInfo >&
RMMsgGameResult::player_info() const {
  // @@protoc_insertion_point(field_list:Rummy.RMMsgGameResult.player_info)
  return player_info_;
}

// int32 end_state = 3;
inline void RMMsgGameResult::clear_end_state() {
  end_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameResult::_internal_end_state() const {
  return end_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgGameResult::end_state() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgGameResult.end_state)
  return _internal_end_state();
}
inline void RMMsgGameResult::_internal_set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  end_state_ = value;
}
inline void RMMsgGameResult::set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_end_state(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgGameResult.end_state)
}

// -------------------------------------------------------------------

// RMMsgNotifyTrusteeship

// int32 seat_index = 1;
inline void RMMsgNotifyTrusteeship::clear_seat_index() {
  seat_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyTrusteeship::_internal_seat_index() const {
  return seat_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyTrusteeship::seat_index() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgNotifyTrusteeship.seat_index)
  return _internal_seat_index();
}
inline void RMMsgNotifyTrusteeship::_internal_set_seat_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  seat_index_ = value;
}
inline void RMMsgNotifyTrusteeship::set_seat_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_seat_index(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgNotifyTrusteeship.seat_index)
}

// bool is_trusteeship = 2;
inline void RMMsgNotifyTrusteeship::clear_is_trusteeship() {
  is_trusteeship_ = false;
}
inline bool RMMsgNotifyTrusteeship::_internal_is_trusteeship() const {
  return is_trusteeship_;
}
inline bool RMMsgNotifyTrusteeship::is_trusteeship() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgNotifyTrusteeship.is_trusteeship)
  return _internal_is_trusteeship();
}
inline void RMMsgNotifyTrusteeship::_internal_set_is_trusteeship(bool value) {
  
  is_trusteeship_ = value;
}
inline void RMMsgNotifyTrusteeship::set_is_trusteeship(bool value) {
  _internal_set_is_trusteeship(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgNotifyTrusteeship.is_trusteeship)
}

// -------------------------------------------------------------------

// RMMsgNotifyPlayerAct

// int32 chair_id = 1;
inline void RMMsgNotifyPlayerAct::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyPlayerAct::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyPlayerAct::chair_id() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgNotifyPlayerAct.chair_id)
  return _internal_chair_id();
}
inline void RMMsgNotifyPlayerAct::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void RMMsgNotifyPlayerAct::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgNotifyPlayerAct.chair_id)
}

// int32 act = 2;
inline void RMMsgNotifyPlayerAct::clear_act() {
  act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyPlayerAct::_internal_act() const {
  return act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RMMsgNotifyPlayerAct::act() const {
  // @@protoc_insertion_point(field_get:Rummy.RMMsgNotifyPlayerAct.act)
  return _internal_act();
}
inline void RMMsgNotifyPlayerAct::_internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  act_ = value;
}
inline void RMMsgNotifyPlayerAct::set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_act(value);
  // @@protoc_insertion_point(field_set:Rummy.RMMsgNotifyPlayerAct.act)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Rummy

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Rummy::ERMGameState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Rummy::ERMGameState>() {
  return ::Rummy::ERMGameState_descriptor();
}
template <> struct is_proto_enum< ::Rummy::PlayerState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Rummy::PlayerState>() {
  return ::Rummy::PlayerState_descriptor();
}
template <> struct is_proto_enum< ::Rummy::ERMGameAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Rummy::ERMGameAction>() {
  return ::Rummy::ERMGameAction_descriptor();
}
template <> struct is_proto_enum< ::Rummy::ERMColCardType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Rummy::ERMColCardType>() {
  return ::Rummy::ERMColCardType_descriptor();
}
template <> struct is_proto_enum< ::Rummy::ERMMsgIDSubGame> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Rummy::ERMMsgIDSubGame>() {
  return ::Rummy::ERMMsgIDSubGame_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Rummy_2eproto
