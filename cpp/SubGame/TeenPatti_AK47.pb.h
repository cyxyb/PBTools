// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeenPatti_AK47.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TeenPatti_5fAK47_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TeenPatti_5fAK47_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TeenPatti_5fAK47_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TeenPatti_5fAK47_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[14]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TeenPatti_5fAK47_2eproto;
namespace TeenPatti_AK47 {
class AKMsgAction;
class AKMsgActionDefaultTypeInternal;
extern AKMsgActionDefaultTypeInternal _AKMsgAction_default_instance_;
class AKMsgAddBetResp;
class AKMsgAddBetRespDefaultTypeInternal;
extern AKMsgAddBetRespDefaultTypeInternal _AKMsgAddBetResp_default_instance_;
class AKMsgCompareCardResp;
class AKMsgCompareCardRespDefaultTypeInternal;
extern AKMsgCompareCardRespDefaultTypeInternal _AKMsgCompareCardResp_default_instance_;
class AKMsgCompareCardRetResp;
class AKMsgCompareCardRetRespDefaultTypeInternal;
extern AKMsgCompareCardRetRespDefaultTypeInternal _AKMsgCompareCardRetResp_default_instance_;
class AKMsgGameResult;
class AKMsgGameResultDefaultTypeInternal;
extern AKMsgGameResultDefaultTypeInternal _AKMsgGameResult_default_instance_;
class AKMsgGameStartResp;
class AKMsgGameStartRespDefaultTypeInternal;
extern AKMsgGameStartRespDefaultTypeInternal _AKMsgGameStartResp_default_instance_;
class AKMsgGiveUpResp;
class AKMsgGiveUpRespDefaultTypeInternal;
extern AKMsgGiveUpRespDefaultTypeInternal _AKMsgGiveUpResp_default_instance_;
class AKMsgHandCards;
class AKMsgHandCardsDefaultTypeInternal;
extern AKMsgHandCardsDefaultTypeInternal _AKMsgHandCards_default_instance_;
class AKMsgLookCardResp;
class AKMsgLookCardRespDefaultTypeInternal;
extern AKMsgLookCardRespDefaultTypeInternal _AKMsgLookCardResp_default_instance_;
class AKMsgNotifyActionResp;
class AKMsgNotifyActionRespDefaultTypeInternal;
extern AKMsgNotifyActionRespDefaultTypeInternal _AKMsgNotifyActionResp_default_instance_;
class AKMsgNotifyPlayerAct;
class AKMsgNotifyPlayerActDefaultTypeInternal;
extern AKMsgNotifyPlayerActDefaultTypeInternal _AKMsgNotifyPlayerAct_default_instance_;
class AKMsgPlayerInfo;
class AKMsgPlayerInfoDefaultTypeInternal;
extern AKMsgPlayerInfoDefaultTypeInternal _AKMsgPlayerInfo_default_instance_;
class AKMsgSceneInfo;
class AKMsgSceneInfoDefaultTypeInternal;
extern AKMsgSceneInfoDefaultTypeInternal _AKMsgSceneInfo_default_instance_;
class AKMsgTableState;
class AKMsgTableStateDefaultTypeInternal;
extern AKMsgTableStateDefaultTypeInternal _AKMsgTableState_default_instance_;
}  // namespace TeenPatti_AK47
PROTOBUF_NAMESPACE_OPEN
template<> ::TeenPatti_AK47::AKMsgAction* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgAction>(Arena*);
template<> ::TeenPatti_AK47::AKMsgAddBetResp* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgAddBetResp>(Arena*);
template<> ::TeenPatti_AK47::AKMsgCompareCardResp* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgCompareCardResp>(Arena*);
template<> ::TeenPatti_AK47::AKMsgCompareCardRetResp* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgCompareCardRetResp>(Arena*);
template<> ::TeenPatti_AK47::AKMsgGameResult* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgGameResult>(Arena*);
template<> ::TeenPatti_AK47::AKMsgGameStartResp* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgGameStartResp>(Arena*);
template<> ::TeenPatti_AK47::AKMsgGiveUpResp* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgGiveUpResp>(Arena*);
template<> ::TeenPatti_AK47::AKMsgHandCards* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgHandCards>(Arena*);
template<> ::TeenPatti_AK47::AKMsgLookCardResp* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgLookCardResp>(Arena*);
template<> ::TeenPatti_AK47::AKMsgNotifyActionResp* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgNotifyActionResp>(Arena*);
template<> ::TeenPatti_AK47::AKMsgNotifyPlayerAct* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgNotifyPlayerAct>(Arena*);
template<> ::TeenPatti_AK47::AKMsgPlayerInfo* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgPlayerInfo>(Arena*);
template<> ::TeenPatti_AK47::AKMsgSceneInfo* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgSceneInfo>(Arena*);
template<> ::TeenPatti_AK47::AKMsgTableState* Arena::CreateMaybeMessage<::TeenPatti_AK47::AKMsgTableState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TeenPatti_AK47 {

enum EAKGameState : int {
  GS_TP_READY = 0,
  GS_TP_DEAL = 1,
  GS_TP_PLAYING = 2,
  GS_TP_COMPARE = 3,
  GS_TP_RESULT = 4,
  EAKGameState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EAKGameState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EAKGameState_IsValid(int value);
constexpr EAKGameState EAKGameState_MIN = GS_TP_READY;
constexpr EAKGameState EAKGameState_MAX = GS_TP_RESULT;
constexpr int EAKGameState_ARRAYSIZE = EAKGameState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EAKGameState_descriptor();
template<typename T>
inline const std::string& EAKGameState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EAKGameState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EAKGameState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EAKGameState_descriptor(), enum_t_value);
}
inline bool EAKGameState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EAKGameState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EAKGameState>(
    EAKGameState_descriptor(), name, value);
}
enum EAKPlayerState : int {
  PS_READY = 0,
  PS_PLAY = 1,
  PS_GIVE = 2,
  PS_FAIL = 3,
  PS_TIMEOUT = 4,
  EAKPlayerState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EAKPlayerState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EAKPlayerState_IsValid(int value);
constexpr EAKPlayerState EAKPlayerState_MIN = PS_READY;
constexpr EAKPlayerState EAKPlayerState_MAX = PS_TIMEOUT;
constexpr int EAKPlayerState_ARRAYSIZE = EAKPlayerState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EAKPlayerState_descriptor();
template<typename T>
inline const std::string& EAKPlayerState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EAKPlayerState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EAKPlayerState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EAKPlayerState_descriptor(), enum_t_value);
}
inline bool EAKPlayerState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EAKPlayerState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EAKPlayerState>(
    EAKPlayerState_descriptor(), name, value);
}
enum EAKCardType : int {
  CT_SINGLE = 0,
  CT_DOUBLE = 1,
  CT_JIN_HUA = 2,
  CT_SHUN_ZI = 3,
  CT_SHUN_JIN = 4,
  CT_BAO_ZI = 5,
  CT_SPECIAL = 6,
  CT_MAX = 7,
  EAKCardType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EAKCardType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EAKCardType_IsValid(int value);
constexpr EAKCardType EAKCardType_MIN = CT_SINGLE;
constexpr EAKCardType EAKCardType_MAX = CT_MAX;
constexpr int EAKCardType_ARRAYSIZE = EAKCardType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EAKCardType_descriptor();
template<typename T>
inline const std::string& EAKCardType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EAKCardType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EAKCardType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EAKCardType_descriptor(), enum_t_value);
}
inline bool EAKCardType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EAKCardType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EAKCardType>(
    EAKCardType_descriptor(), name, value);
}
enum EAKGameAction : int {
  InvaldAct = 0,
  GiveUp = 1,
  LookCard = 2,
  CallBet = 4,
  AddBet = 8,
  CompareCard = 16,
  CompareReply = 32,
  AllCompare = 64,
  EAKGameAction_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EAKGameAction_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EAKGameAction_IsValid(int value);
constexpr EAKGameAction EAKGameAction_MIN = InvaldAct;
constexpr EAKGameAction EAKGameAction_MAX = AllCompare;
constexpr int EAKGameAction_ARRAYSIZE = EAKGameAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EAKGameAction_descriptor();
template<typename T>
inline const std::string& EAKGameAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EAKGameAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EAKGameAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EAKGameAction_descriptor(), enum_t_value);
}
inline bool EAKGameAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EAKGameAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EAKGameAction>(
    EAKGameAction_descriptor(), name, value);
}
enum EAKMsgIDSubGame : int {
  MsgIDSubGame_Null = 0,
  MsgIDSubGame_GameStartResp = 1,
  MsgIDSubGame_NotifyActionResp = 2,
  MsgIDSubGame_Action = 3,
  MsgIDSubGame_GiveUpResp = 4,
  MsgIDSubGame_LookCard = 5,
  MsgIDSubGame_AddBetResp = 6,
  MsgIDSubGame_CompareCardResp = 7,
  MsgIDSubGame_CompareRetResp = 8,
  MsgIDSubGame_GameResultResp = 9,
  MsgIDSubGame_NotifyStateResp = 10,
  MsgIDSubGame_TimeOutResp = 11,
  MsgIDSubGame_TimeOutReady = 12,
  MsgIDSubGame_TimeOutReadyResp = 13,
  MsgIDSubGame_TimeOutKickResp = 14,
  MsgIDSubGame_NotifySystemCheatResp = 20,
  MsgIDSubGame_NotifyCardTypeResp = 21,
  MsgIDSubGame_NotifyIsMaxResp = 22,
  MsgIDSubGame_NotifyRemainDoubleResp = 23,
  MsgIDSubGame_NotifyRoundResp = 24,
  MsgIDSubGame_NotifyLastActResp = 25,
  EAKMsgIDSubGame_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EAKMsgIDSubGame_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EAKMsgIDSubGame_IsValid(int value);
constexpr EAKMsgIDSubGame EAKMsgIDSubGame_MIN = MsgIDSubGame_Null;
constexpr EAKMsgIDSubGame EAKMsgIDSubGame_MAX = MsgIDSubGame_NotifyLastActResp;
constexpr int EAKMsgIDSubGame_ARRAYSIZE = EAKMsgIDSubGame_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EAKMsgIDSubGame_descriptor();
template<typename T>
inline const std::string& EAKMsgIDSubGame_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EAKMsgIDSubGame>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EAKMsgIDSubGame_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EAKMsgIDSubGame_descriptor(), enum_t_value);
}
inline bool EAKMsgIDSubGame_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EAKMsgIDSubGame* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EAKMsgIDSubGame>(
    EAKMsgIDSubGame_descriptor(), name, value);
}
// ===================================================================

class AKMsgTableState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgTableState) */ {
 public:
  inline AKMsgTableState() : AKMsgTableState(nullptr) {}
  virtual ~AKMsgTableState();

  AKMsgTableState(const AKMsgTableState& from);
  AKMsgTableState(AKMsgTableState&& from) noexcept
    : AKMsgTableState() {
    *this = ::std::move(from);
  }

  inline AKMsgTableState& operator=(const AKMsgTableState& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgTableState& operator=(AKMsgTableState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgTableState& default_instance();

  static inline const AKMsgTableState* internal_default_instance() {
    return reinterpret_cast<const AKMsgTableState*>(
               &_AKMsgTableState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AKMsgTableState& a, AKMsgTableState& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgTableState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgTableState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgTableState* New() const final {
    return CreateMaybeMessage<AKMsgTableState>(nullptr);
  }

  AKMsgTableState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgTableState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgTableState& from);
  void MergeFrom(const AKMsgTableState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgTableState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgTableState";
  }
  protected:
  explicit AKMsgTableState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
    kOutImeFieldNumber = 2,
  };
  // int32 state = 1;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_ime = 2;
  void clear_out_ime();
  ::PROTOBUF_NAMESPACE_ID::int32 out_ime() const;
  void set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_ime() const;
  void _internal_set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgTableState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_ime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgHandCards PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgHandCards) */ {
 public:
  inline AKMsgHandCards() : AKMsgHandCards(nullptr) {}
  virtual ~AKMsgHandCards();

  AKMsgHandCards(const AKMsgHandCards& from);
  AKMsgHandCards(AKMsgHandCards&& from) noexcept
    : AKMsgHandCards() {
    *this = ::std::move(from);
  }

  inline AKMsgHandCards& operator=(const AKMsgHandCards& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgHandCards& operator=(AKMsgHandCards&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgHandCards& default_instance();

  static inline const AKMsgHandCards* internal_default_instance() {
    return reinterpret_cast<const AKMsgHandCards*>(
               &_AKMsgHandCards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AKMsgHandCards& a, AKMsgHandCards& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgHandCards* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgHandCards* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgHandCards* New() const final {
    return CreateMaybeMessage<AKMsgHandCards>(nullptr);
  }

  AKMsgHandCards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgHandCards>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgHandCards& from);
  void MergeFrom(const AKMsgHandCards& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgHandCards* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgHandCards";
  }
  protected:
  explicit AKMsgHandCards(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 1,
    kChangeCardsFieldNumber = 2,
  };
  // repeated int32 cards = 1;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // repeated int32 change_cards = 2;
  int change_cards_size() const;
  private:
  int _internal_change_cards_size() const;
  public:
  void clear_change_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_change_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_change_cards() const;
  void _internal_add_change_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_change_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 change_cards(int index) const;
  void set_change_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_change_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      change_cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_change_cards();

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgHandCards)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > change_cards_;
  mutable std::atomic<int> _change_cards_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgPlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgPlayerInfo) */ {
 public:
  inline AKMsgPlayerInfo() : AKMsgPlayerInfo(nullptr) {}
  virtual ~AKMsgPlayerInfo();

  AKMsgPlayerInfo(const AKMsgPlayerInfo& from);
  AKMsgPlayerInfo(AKMsgPlayerInfo&& from) noexcept
    : AKMsgPlayerInfo() {
    *this = ::std::move(from);
  }

  inline AKMsgPlayerInfo& operator=(const AKMsgPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgPlayerInfo& operator=(AKMsgPlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgPlayerInfo& default_instance();

  static inline const AKMsgPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const AKMsgPlayerInfo*>(
               &_AKMsgPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AKMsgPlayerInfo& a, AKMsgPlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgPlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgPlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgPlayerInfo* New() const final {
    return CreateMaybeMessage<AKMsgPlayerInfo>(nullptr);
  }

  AKMsgPlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgPlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgPlayerInfo& from);
  void MergeFrom(const AKMsgPlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgPlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgPlayerInfo";
  }
  protected:
  explicit AKMsgPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandlsFieldNumber = 9,
    kChairIdFieldNumber = 1,
    kMingZhuFieldNumber = 2,
    kPlayerBetFieldNumber = 4,
    kPlayStatusFieldNumber = 3,
    kCardTypeFieldNumber = 6,
    kLastBetFieldNumber = 5,
    kGoldFieldNumber = 7,
    kWinGoldFieldNumber = 8,
  };
  // .TeenPatti_AK47.AKMsgHandCards handls = 9;
  bool has_handls() const;
  private:
  bool _internal_has_handls() const;
  public:
  void clear_handls();
  const ::TeenPatti_AK47::AKMsgHandCards& handls() const;
  ::TeenPatti_AK47::AKMsgHandCards* release_handls();
  ::TeenPatti_AK47::AKMsgHandCards* mutable_handls();
  void set_allocated_handls(::TeenPatti_AK47::AKMsgHandCards* handls);
  private:
  const ::TeenPatti_AK47::AKMsgHandCards& _internal_handls() const;
  ::TeenPatti_AK47::AKMsgHandCards* _internal_mutable_handls();
  public:
  void unsafe_arena_set_allocated_handls(
      ::TeenPatti_AK47::AKMsgHandCards* handls);
  ::TeenPatti_AK47::AKMsgHandCards* unsafe_arena_release_handls();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool ming_zhu = 2;
  void clear_ming_zhu();
  bool ming_zhu() const;
  void set_ming_zhu(bool value);
  private:
  bool _internal_ming_zhu() const;
  void _internal_set_ming_zhu(bool value);
  public:

  // int64 player_bet = 4;
  void clear_player_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 player_bet() const;
  void set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_bet() const;
  void _internal_set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 play_status = 3;
  void clear_play_status();
  ::PROTOBUF_NAMESPACE_ID::int32 play_status() const;
  void set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_play_status() const;
  void _internal_set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 card_type = 6;
  void clear_card_type();
  ::PROTOBUF_NAMESPACE_ID::int32 card_type() const;
  void set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card_type() const;
  void _internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 last_bet = 5;
  void clear_last_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 last_bet() const;
  void set_last_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_bet() const;
  void _internal_set_last_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 gold = 7;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 win_gold = 8;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgPlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::TeenPatti_AK47::AKMsgHandCards* handls_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  bool ming_zhu_;
  ::PROTOBUF_NAMESPACE_ID::int64 player_bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 play_status_;
  ::PROTOBUF_NAMESPACE_ID::int32 card_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_bet_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgSceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgSceneInfo) */ {
 public:
  inline AKMsgSceneInfo() : AKMsgSceneInfo(nullptr) {}
  virtual ~AKMsgSceneInfo();

  AKMsgSceneInfo(const AKMsgSceneInfo& from);
  AKMsgSceneInfo(AKMsgSceneInfo&& from) noexcept
    : AKMsgSceneInfo() {
    *this = ::std::move(from);
  }

  inline AKMsgSceneInfo& operator=(const AKMsgSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgSceneInfo& operator=(AKMsgSceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgSceneInfo& default_instance();

  static inline const AKMsgSceneInfo* internal_default_instance() {
    return reinterpret_cast<const AKMsgSceneInfo*>(
               &_AKMsgSceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AKMsgSceneInfo& a, AKMsgSceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgSceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgSceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgSceneInfo* New() const final {
    return CreateMaybeMessage<AKMsgSceneInfo>(nullptr);
  }

  AKMsgSceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgSceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgSceneInfo& from);
  void MergeFrom(const AKMsgSceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgSceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgSceneInfo";
  }
  protected:
  explicit AKMsgSceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerInfosFieldNumber = 15,
    kMaxScoreFieldNumber = 1,
    kTableMaxScoreFieldNumber = 2,
    kCellScoreFieldNumber = 3,
    kCurTimesFieldNumber = 4,
    kTableStateFieldNumber = 5,
    kTotalBetScoreFieldNumber = 6,
    kTaxFieldNumber = 7,
    kBankerChairIdFieldNumber = 8,
    kCurChairIdFieldNumber = 9,
    kCurChairActFieldNumber = 10,
    kOutTimeFieldNumber = 11,
    kTotalTimeFieldNumber = 12,
    kCompareUserFieldNumber = 13,
    kCompareWinFieldNumber = 14,
  };
  // repeated .TeenPatti_AK47.AKMsgPlayerInfo player_infos = 15;
  int player_infos_size() const;
  private:
  int _internal_player_infos_size() const;
  public:
  void clear_player_infos();
  ::TeenPatti_AK47::AKMsgPlayerInfo* mutable_player_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgPlayerInfo >*
      mutable_player_infos();
  private:
  const ::TeenPatti_AK47::AKMsgPlayerInfo& _internal_player_infos(int index) const;
  ::TeenPatti_AK47::AKMsgPlayerInfo* _internal_add_player_infos();
  public:
  const ::TeenPatti_AK47::AKMsgPlayerInfo& player_infos(int index) const;
  ::TeenPatti_AK47::AKMsgPlayerInfo* add_player_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgPlayerInfo >&
      player_infos() const;

  // int64 max_score = 1;
  void clear_max_score();
  ::PROTOBUF_NAMESPACE_ID::int64 max_score() const;
  void set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max_score() const;
  void _internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 table_max_score = 2;
  void clear_table_max_score();
  ::PROTOBUF_NAMESPACE_ID::int64 table_max_score() const;
  void set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_table_max_score() const;
  void _internal_set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 cell_score = 3;
  void clear_cell_score();
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score() const;
  void set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cell_score() const;
  void _internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 cur_times = 4;
  void clear_cur_times();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_times() const;
  void set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_times() const;
  void _internal_set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 table_state = 5;
  void clear_table_state();
  ::PROTOBUF_NAMESPACE_ID::int32 table_state() const;
  void set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_state() const;
  void _internal_set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 total_bet_score = 6;
  void clear_total_bet_score();
  ::PROTOBUF_NAMESPACE_ID::int64 total_bet_score() const;
  void set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_bet_score() const;
  void _internal_set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 tax = 7;
  void clear_tax();
  ::PROTOBUF_NAMESPACE_ID::int32 tax() const;
  void set_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tax() const;
  void _internal_set_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 banker_chair_id = 8;
  void clear_banker_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id() const;
  void set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_chair_id() const;
  void _internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_chair_id = 9;
  void clear_cur_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id() const;
  void set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_id() const;
  void _internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_chair_act = 10;
  void clear_cur_chair_act();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_act() const;
  void set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_act() const;
  void _internal_set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_time = 11;
  void clear_out_time();
  ::PROTOBUF_NAMESPACE_ID::int32 out_time() const;
  void set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_time() const;
  void _internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total_time = 12;
  void clear_total_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_time() const;
  void set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_time() const;
  void _internal_set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 compare_user = 13;
  void clear_compare_user();
  ::PROTOBUF_NAMESPACE_ID::int32 compare_user() const;
  void set_compare_user(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_compare_user() const;
  void _internal_set_compare_user(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 compare_win = 14;
  void clear_compare_win();
  ::PROTOBUF_NAMESPACE_ID::int32 compare_win() const;
  void set_compare_win(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_compare_win() const;
  void _internal_set_compare_win(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgSceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgPlayerInfo > player_infos_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 table_max_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_times_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_state_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_bet_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 tax_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_act_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 compare_user_;
  ::PROTOBUF_NAMESPACE_ID::int32 compare_win_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgGameStartResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgGameStartResp) */ {
 public:
  inline AKMsgGameStartResp() : AKMsgGameStartResp(nullptr) {}
  virtual ~AKMsgGameStartResp();

  AKMsgGameStartResp(const AKMsgGameStartResp& from);
  AKMsgGameStartResp(AKMsgGameStartResp&& from) noexcept
    : AKMsgGameStartResp() {
    *this = ::std::move(from);
  }

  inline AKMsgGameStartResp& operator=(const AKMsgGameStartResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgGameStartResp& operator=(AKMsgGameStartResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgGameStartResp& default_instance();

  static inline const AKMsgGameStartResp* internal_default_instance() {
    return reinterpret_cast<const AKMsgGameStartResp*>(
               &_AKMsgGameStartResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AKMsgGameStartResp& a, AKMsgGameStartResp& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgGameStartResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgGameStartResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgGameStartResp* New() const final {
    return CreateMaybeMessage<AKMsgGameStartResp>(nullptr);
  }

  AKMsgGameStartResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgGameStartResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgGameStartResp& from);
  void MergeFrom(const AKMsgGameStartResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgGameStartResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgGameStartResp";
  }
  protected:
  explicit AKMsgGameStartResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayIndexFieldNumber = 8,
    kCurChairIdFieldNumber = 1,
    kCurTimesFieldNumber = 2,
    kMaxScoreFieldNumber = 4,
    kMaxBlindFieldNumber = 5,
    kCellScoreFieldNumber = 6,
    kTableMaxScoreFieldNumber = 7,
    kBankerChairIdFieldNumber = 3,
  };
  // repeated int32 play_index = 8;
  int play_index_size() const;
  private:
  int _internal_play_index_size() const;
  public:
  void clear_play_index();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_play_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_play_index() const;
  void _internal_add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_play_index();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 play_index(int index) const;
  void set_play_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      play_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_play_index();

  // int32 cur_chair_id = 1;
  void clear_cur_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id() const;
  void set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_id() const;
  void _internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_times = 2;
  void clear_cur_times();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_times() const;
  void set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_times() const;
  void _internal_set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 max_score = 4;
  void clear_max_score();
  ::PROTOBUF_NAMESPACE_ID::int64 max_score() const;
  void set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max_score() const;
  void _internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 max_blind = 5;
  void clear_max_blind();
  ::PROTOBUF_NAMESPACE_ID::int64 max_blind() const;
  void set_max_blind(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max_blind() const;
  void _internal_set_max_blind(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 cell_score = 6;
  void clear_cell_score();
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score() const;
  void set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cell_score() const;
  void _internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 table_max_score = 7;
  void clear_table_max_score();
  ::PROTOBUF_NAMESPACE_ID::int64 table_max_score() const;
  void set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_table_max_score() const;
  void _internal_set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 banker_chair_id = 3;
  void clear_banker_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id() const;
  void set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_chair_id() const;
  void _internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgGameStartResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > play_index_;
  mutable std::atomic<int> _play_index_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_times_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_blind_;
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 table_max_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgNotifyActionResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgNotifyActionResp) */ {
 public:
  inline AKMsgNotifyActionResp() : AKMsgNotifyActionResp(nullptr) {}
  virtual ~AKMsgNotifyActionResp();

  AKMsgNotifyActionResp(const AKMsgNotifyActionResp& from);
  AKMsgNotifyActionResp(AKMsgNotifyActionResp&& from) noexcept
    : AKMsgNotifyActionResp() {
    *this = ::std::move(from);
  }

  inline AKMsgNotifyActionResp& operator=(const AKMsgNotifyActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgNotifyActionResp& operator=(AKMsgNotifyActionResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgNotifyActionResp& default_instance();

  static inline const AKMsgNotifyActionResp* internal_default_instance() {
    return reinterpret_cast<const AKMsgNotifyActionResp*>(
               &_AKMsgNotifyActionResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AKMsgNotifyActionResp& a, AKMsgNotifyActionResp& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgNotifyActionResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgNotifyActionResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgNotifyActionResp* New() const final {
    return CreateMaybeMessage<AKMsgNotifyActionResp>(nullptr);
  }

  AKMsgNotifyActionResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgNotifyActionResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgNotifyActionResp& from);
  void MergeFrom(const AKMsgNotifyActionResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgNotifyActionResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgNotifyActionResp";
  }
  protected:
  explicit AKMsgNotifyActionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurChairIdFieldNumber = 1,
    kCurTimesFieldNumber = 2,
    kCurrentActFieldNumber = 3,
    kOperTimeFieldNumber = 4,
  };
  // int32 cur_chair_id = 1;
  void clear_cur_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id() const;
  void set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_id() const;
  void _internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_times = 2;
  void clear_cur_times();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_times() const;
  void set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_times() const;
  void _internal_set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 current_act = 3;
  void clear_current_act();
  ::PROTOBUF_NAMESPACE_ID::int32 current_act() const;
  void set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_act() const;
  void _internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 oper_time = 4;
  void clear_oper_time();
  ::PROTOBUF_NAMESPACE_ID::int32 oper_time() const;
  void set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_oper_time() const;
  void _internal_set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgNotifyActionResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_times_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_act_;
  ::PROTOBUF_NAMESPACE_ID::int32 oper_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgAction) */ {
 public:
  inline AKMsgAction() : AKMsgAction(nullptr) {}
  virtual ~AKMsgAction();

  AKMsgAction(const AKMsgAction& from);
  AKMsgAction(AKMsgAction&& from) noexcept
    : AKMsgAction() {
    *this = ::std::move(from);
  }

  inline AKMsgAction& operator=(const AKMsgAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgAction& operator=(AKMsgAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgAction& default_instance();

  static inline const AKMsgAction* internal_default_instance() {
    return reinterpret_cast<const AKMsgAction*>(
               &_AKMsgAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AKMsgAction& a, AKMsgAction& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgAction* New() const final {
    return CreateMaybeMessage<AKMsgAction>(nullptr);
  }

  AKMsgAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgAction& from);
  void MergeFrom(const AKMsgAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgAction";
  }
  protected:
  explicit AKMsgAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetScoreFieldNumber = 2,
    kActFieldNumber = 1,
    kIsOkFieldNumber = 4,
    kCompareUserFieldNumber = 3,
  };
  // int64 bet_score = 2;
  void clear_bet_score();
  ::PROTOBUF_NAMESPACE_ID::int64 bet_score() const;
  void set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet_score() const;
  void _internal_set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 act = 1;
  void clear_act();
  ::PROTOBUF_NAMESPACE_ID::int32 act() const;
  void set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_act() const;
  void _internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_ok = 4;
  void clear_is_ok();
  bool is_ok() const;
  void set_is_ok(bool value);
  private:
  bool _internal_is_ok() const;
  void _internal_set_is_ok(bool value);
  public:

  // int64 compare_user = 3;
  void clear_compare_user();
  ::PROTOBUF_NAMESPACE_ID::int64 compare_user() const;
  void set_compare_user(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_compare_user() const;
  void _internal_set_compare_user(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 act_;
  bool is_ok_;
  ::PROTOBUF_NAMESPACE_ID::int64 compare_user_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgGiveUpResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgGiveUpResp) */ {
 public:
  inline AKMsgGiveUpResp() : AKMsgGiveUpResp(nullptr) {}
  virtual ~AKMsgGiveUpResp();

  AKMsgGiveUpResp(const AKMsgGiveUpResp& from);
  AKMsgGiveUpResp(AKMsgGiveUpResp&& from) noexcept
    : AKMsgGiveUpResp() {
    *this = ::std::move(from);
  }

  inline AKMsgGiveUpResp& operator=(const AKMsgGiveUpResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgGiveUpResp& operator=(AKMsgGiveUpResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgGiveUpResp& default_instance();

  static inline const AKMsgGiveUpResp* internal_default_instance() {
    return reinterpret_cast<const AKMsgGiveUpResp*>(
               &_AKMsgGiveUpResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AKMsgGiveUpResp& a, AKMsgGiveUpResp& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgGiveUpResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgGiveUpResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgGiveUpResp* New() const final {
    return CreateMaybeMessage<AKMsgGiveUpResp>(nullptr);
  }

  AKMsgGiveUpResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgGiveUpResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgGiveUpResp& from);
  void MergeFrom(const AKMsgGiveUpResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgGiveUpResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgGiveUpResp";
  }
  protected:
  explicit AKMsgGiveUpResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgGiveUpResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgLookCardResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgLookCardResp) */ {
 public:
  inline AKMsgLookCardResp() : AKMsgLookCardResp(nullptr) {}
  virtual ~AKMsgLookCardResp();

  AKMsgLookCardResp(const AKMsgLookCardResp& from);
  AKMsgLookCardResp(AKMsgLookCardResp&& from) noexcept
    : AKMsgLookCardResp() {
    *this = ::std::move(from);
  }

  inline AKMsgLookCardResp& operator=(const AKMsgLookCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgLookCardResp& operator=(AKMsgLookCardResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgLookCardResp& default_instance();

  static inline const AKMsgLookCardResp* internal_default_instance() {
    return reinterpret_cast<const AKMsgLookCardResp*>(
               &_AKMsgLookCardResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AKMsgLookCardResp& a, AKMsgLookCardResp& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgLookCardResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgLookCardResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgLookCardResp* New() const final {
    return CreateMaybeMessage<AKMsgLookCardResp>(nullptr);
  }

  AKMsgLookCardResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgLookCardResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgLookCardResp& from);
  void MergeFrom(const AKMsgLookCardResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgLookCardResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgLookCardResp";
  }
  protected:
  explicit AKMsgLookCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 5,
    kChairIdFieldNumber = 1,
    kCardTypeFieldNumber = 2,
    kCurChairIdFieldNumber = 3,
    kNewActFieldNumber = 4,
  };
  // repeated int32 cards = 5;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 card_type = 2;
  void clear_card_type();
  ::PROTOBUF_NAMESPACE_ID::int32 card_type() const;
  void set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card_type() const;
  void _internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_chair_id = 3;
  void clear_cur_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id() const;
  void set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chair_id() const;
  void _internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 new_act = 4;
  void clear_new_act();
  ::PROTOBUF_NAMESPACE_ID::int32 new_act() const;
  void set_new_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_new_act() const;
  void _internal_set_new_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgLookCardResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 card_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 new_act_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgAddBetResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgAddBetResp) */ {
 public:
  inline AKMsgAddBetResp() : AKMsgAddBetResp(nullptr) {}
  virtual ~AKMsgAddBetResp();

  AKMsgAddBetResp(const AKMsgAddBetResp& from);
  AKMsgAddBetResp(AKMsgAddBetResp&& from) noexcept
    : AKMsgAddBetResp() {
    *this = ::std::move(from);
  }

  inline AKMsgAddBetResp& operator=(const AKMsgAddBetResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgAddBetResp& operator=(AKMsgAddBetResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgAddBetResp& default_instance();

  static inline const AKMsgAddBetResp* internal_default_instance() {
    return reinterpret_cast<const AKMsgAddBetResp*>(
               &_AKMsgAddBetResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AKMsgAddBetResp& a, AKMsgAddBetResp& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgAddBetResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgAddBetResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgAddBetResp* New() const final {
    return CreateMaybeMessage<AKMsgAddBetResp>(nullptr);
  }

  AKMsgAddBetResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgAddBetResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgAddBetResp& from);
  void MergeFrom(const AKMsgAddBetResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgAddBetResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgAddBetResp";
  }
  protected:
  explicit AKMsgAddBetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddScoreFieldNumber = 2,
    kBetTypeFieldNumber = 3,
    kAddChairIdFieldNumber = 1,
  };
  // int64 add_score = 2;
  void clear_add_score();
  ::PROTOBUF_NAMESPACE_ID::int64 add_score() const;
  void set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_add_score() const;
  void _internal_set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 bet_type = 3;
  void clear_bet_type();
  ::PROTOBUF_NAMESPACE_ID::int64 bet_type() const;
  void set_bet_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet_type() const;
  void _internal_set_bet_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 add_chair_id = 1;
  void clear_add_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 add_chair_id() const;
  void set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_add_chair_id() const;
  void _internal_set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgAddBetResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 add_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 add_chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgCompareCardResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgCompareCardResp) */ {
 public:
  inline AKMsgCompareCardResp() : AKMsgCompareCardResp(nullptr) {}
  virtual ~AKMsgCompareCardResp();

  AKMsgCompareCardResp(const AKMsgCompareCardResp& from);
  AKMsgCompareCardResp(AKMsgCompareCardResp&& from) noexcept
    : AKMsgCompareCardResp() {
    *this = ::std::move(from);
  }

  inline AKMsgCompareCardResp& operator=(const AKMsgCompareCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgCompareCardResp& operator=(AKMsgCompareCardResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgCompareCardResp& default_instance();

  static inline const AKMsgCompareCardResp* internal_default_instance() {
    return reinterpret_cast<const AKMsgCompareCardResp*>(
               &_AKMsgCompareCardResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(AKMsgCompareCardResp& a, AKMsgCompareCardResp& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgCompareCardResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgCompareCardResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgCompareCardResp* New() const final {
    return CreateMaybeMessage<AKMsgCompareCardResp>(nullptr);
  }

  AKMsgCompareCardResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgCompareCardResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgCompareCardResp& from);
  void MergeFrom(const AKMsgCompareCardResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgCompareCardResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgCompareCardResp";
  }
  protected:
  explicit AKMsgCompareCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kCompareIdFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 compare_id = 2;
  void clear_compare_id();
  ::PROTOBUF_NAMESPACE_ID::int32 compare_id() const;
  void set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_compare_id() const;
  void _internal_set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgCompareCardResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 compare_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgCompareCardRetResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgCompareCardRetResp) */ {
 public:
  inline AKMsgCompareCardRetResp() : AKMsgCompareCardRetResp(nullptr) {}
  virtual ~AKMsgCompareCardRetResp();

  AKMsgCompareCardRetResp(const AKMsgCompareCardRetResp& from);
  AKMsgCompareCardRetResp(AKMsgCompareCardRetResp&& from) noexcept
    : AKMsgCompareCardRetResp() {
    *this = ::std::move(from);
  }

  inline AKMsgCompareCardRetResp& operator=(const AKMsgCompareCardRetResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgCompareCardRetResp& operator=(AKMsgCompareCardRetResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgCompareCardRetResp& default_instance();

  static inline const AKMsgCompareCardRetResp* internal_default_instance() {
    return reinterpret_cast<const AKMsgCompareCardRetResp*>(
               &_AKMsgCompareCardRetResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(AKMsgCompareCardRetResp& a, AKMsgCompareCardRetResp& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgCompareCardRetResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgCompareCardRetResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgCompareCardRetResp* New() const final {
    return CreateMaybeMessage<AKMsgCompareCardRetResp>(nullptr);
  }

  AKMsgCompareCardRetResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgCompareCardRetResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgCompareCardRetResp& from);
  void MergeFrom(const AKMsgCompareCardRetResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgCompareCardRetResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgCompareCardRetResp";
  }
  protected:
  explicit AKMsgCompareCardRetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCompareCardsFieldNumber = 8,
    kPassiveCardsFieldNumber = 9,
    kCurrentChairIdFieldNumber = 1,
    kCurrentActFieldNumber = 2,
    kLostIdFieldNumber = 3,
    kCompareIdFieldNumber = 4,
    kPassiveIdFieldNumber = 5,
    kCompareTypeFieldNumber = 6,
    kPassiveTypeFieldNumber = 7,
    kIsAgreeFieldNumber = 10,
  };
  // repeated int32 compare_cards = 8;
  int compare_cards_size() const;
  private:
  int _internal_compare_cards_size() const;
  public:
  void clear_compare_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_compare_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_compare_cards() const;
  void _internal_add_compare_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_compare_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 compare_cards(int index) const;
  void set_compare_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_compare_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      compare_cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_compare_cards();

  // repeated int32 passive_cards = 9;
  int passive_cards_size() const;
  private:
  int _internal_passive_cards_size() const;
  public:
  void clear_passive_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_passive_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_passive_cards() const;
  void _internal_add_passive_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_passive_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 passive_cards(int index) const;
  void set_passive_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_passive_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      passive_cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_passive_cards();

  // int32 current_chair_id = 1;
  void clear_current_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 current_chair_id() const;
  void set_current_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_chair_id() const;
  void _internal_set_current_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 current_act = 2;
  void clear_current_act();
  ::PROTOBUF_NAMESPACE_ID::int32 current_act() const;
  void set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_act() const;
  void _internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 lost_id = 3;
  void clear_lost_id();
  ::PROTOBUF_NAMESPACE_ID::int32 lost_id() const;
  void set_lost_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lost_id() const;
  void _internal_set_lost_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 compare_id = 4;
  void clear_compare_id();
  ::PROTOBUF_NAMESPACE_ID::int32 compare_id() const;
  void set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_compare_id() const;
  void _internal_set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 passive_id = 5;
  void clear_passive_id();
  ::PROTOBUF_NAMESPACE_ID::int32 passive_id() const;
  void set_passive_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_passive_id() const;
  void _internal_set_passive_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 compare_type = 6;
  void clear_compare_type();
  ::PROTOBUF_NAMESPACE_ID::int32 compare_type() const;
  void set_compare_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_compare_type() const;
  void _internal_set_compare_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 passive_type = 7;
  void clear_passive_type();
  ::PROTOBUF_NAMESPACE_ID::int32 passive_type() const;
  void set_passive_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_passive_type() const;
  void _internal_set_passive_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_agree = 10;
  void clear_is_agree();
  bool is_agree() const;
  void set_is_agree(bool value);
  private:
  bool _internal_is_agree() const;
  void _internal_set_is_agree(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgCompareCardRetResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > compare_cards_;
  mutable std::atomic<int> _compare_cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > passive_cards_;
  mutable std::atomic<int> _passive_cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_act_;
  ::PROTOBUF_NAMESPACE_ID::int32 lost_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 compare_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 passive_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 compare_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 passive_type_;
  bool is_agree_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgGameResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgGameResult) */ {
 public:
  inline AKMsgGameResult() : AKMsgGameResult(nullptr) {}
  virtual ~AKMsgGameResult();

  AKMsgGameResult(const AKMsgGameResult& from);
  AKMsgGameResult(AKMsgGameResult&& from) noexcept
    : AKMsgGameResult() {
    *this = ::std::move(from);
  }

  inline AKMsgGameResult& operator=(const AKMsgGameResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgGameResult& operator=(AKMsgGameResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgGameResult& default_instance();

  static inline const AKMsgGameResult* internal_default_instance() {
    return reinterpret_cast<const AKMsgGameResult*>(
               &_AKMsgGameResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(AKMsgGameResult& a, AKMsgGameResult& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgGameResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgGameResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgGameResult* New() const final {
    return CreateMaybeMessage<AKMsgGameResult>(nullptr);
  }

  AKMsgGameResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgGameResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgGameResult& from);
  void MergeFrom(const AKMsgGameResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgGameResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgGameResult";
  }
  protected:
  explicit AKMsgGameResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameScoreFieldNumber = 2,
    kCardTypeFieldNumber = 3,
    kPlayerHandsFieldNumber = 4,
    kGameTaxFieldNumber = 1,
    kEndStateFieldNumber = 5,
  };
  // repeated int64 game_score = 2;
  int game_score_size() const;
  private:
  int _internal_game_score_size() const;
  public:
  void clear_game_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_game_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_game_score() const;
  void _internal_add_game_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_game_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 game_score(int index) const;
  void set_game_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_game_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      game_score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_game_score();

  // repeated int32 card_type = 3;
  int card_type_size() const;
  private:
  int _internal_card_type_size() const;
  public:
  void clear_card_type();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card_type(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_card_type() const;
  void _internal_add_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_card_type();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 card_type(int index) const;
  void set_card_type(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      card_type() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_card_type();

  // repeated .TeenPatti_AK47.AKMsgHandCards player_hands = 4;
  int player_hands_size() const;
  private:
  int _internal_player_hands_size() const;
  public:
  void clear_player_hands();
  ::TeenPatti_AK47::AKMsgHandCards* mutable_player_hands(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgHandCards >*
      mutable_player_hands();
  private:
  const ::TeenPatti_AK47::AKMsgHandCards& _internal_player_hands(int index) const;
  ::TeenPatti_AK47::AKMsgHandCards* _internal_add_player_hands();
  public:
  const ::TeenPatti_AK47::AKMsgHandCards& player_hands(int index) const;
  ::TeenPatti_AK47::AKMsgHandCards* add_player_hands();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgHandCards >&
      player_hands() const;

  // int32 game_tax = 1;
  void clear_game_tax();
  ::PROTOBUF_NAMESPACE_ID::int32 game_tax() const;
  void set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_tax() const;
  void _internal_set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 end_state = 5;
  void clear_end_state();
  ::PROTOBUF_NAMESPACE_ID::int32 end_state() const;
  void set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_end_state() const;
  void _internal_set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgGameResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > game_score_;
  mutable std::atomic<int> _game_score_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > card_type_;
  mutable std::atomic<int> _card_type_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgHandCards > player_hands_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_tax_;
  ::PROTOBUF_NAMESPACE_ID::int32 end_state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// -------------------------------------------------------------------

class AKMsgNotifyPlayerAct PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TeenPatti_AK47.AKMsgNotifyPlayerAct) */ {
 public:
  inline AKMsgNotifyPlayerAct() : AKMsgNotifyPlayerAct(nullptr) {}
  virtual ~AKMsgNotifyPlayerAct();

  AKMsgNotifyPlayerAct(const AKMsgNotifyPlayerAct& from);
  AKMsgNotifyPlayerAct(AKMsgNotifyPlayerAct&& from) noexcept
    : AKMsgNotifyPlayerAct() {
    *this = ::std::move(from);
  }

  inline AKMsgNotifyPlayerAct& operator=(const AKMsgNotifyPlayerAct& from) {
    CopyFrom(from);
    return *this;
  }
  inline AKMsgNotifyPlayerAct& operator=(AKMsgNotifyPlayerAct&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AKMsgNotifyPlayerAct& default_instance();

  static inline const AKMsgNotifyPlayerAct* internal_default_instance() {
    return reinterpret_cast<const AKMsgNotifyPlayerAct*>(
               &_AKMsgNotifyPlayerAct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(AKMsgNotifyPlayerAct& a, AKMsgNotifyPlayerAct& b) {
    a.Swap(&b);
  }
  inline void Swap(AKMsgNotifyPlayerAct* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AKMsgNotifyPlayerAct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AKMsgNotifyPlayerAct* New() const final {
    return CreateMaybeMessage<AKMsgNotifyPlayerAct>(nullptr);
  }

  AKMsgNotifyPlayerAct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AKMsgNotifyPlayerAct>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AKMsgNotifyPlayerAct& from);
  void MergeFrom(const AKMsgNotifyPlayerAct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AKMsgNotifyPlayerAct* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TeenPatti_AK47.AKMsgNotifyPlayerAct";
  }
  protected:
  explicit AKMsgNotifyPlayerAct(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TeenPatti_5fAK47_2eproto);
    return ::descriptor_table_TeenPatti_5fAK47_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kActFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 act = 2;
  void clear_act();
  ::PROTOBUF_NAMESPACE_ID::int32 act() const;
  void set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_act() const;
  void _internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:TeenPatti_AK47.AKMsgNotifyPlayerAct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 act_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TeenPatti_5fAK47_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AKMsgTableState

// int32 state = 1;
inline void AKMsgTableState::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgTableState::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgTableState::state() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgTableState.state)
  return _internal_state();
}
inline void AKMsgTableState::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void AKMsgTableState::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgTableState.state)
}

// int32 out_ime = 2;
inline void AKMsgTableState::clear_out_ime() {
  out_ime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgTableState::_internal_out_ime() const {
  return out_ime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgTableState::out_ime() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgTableState.out_ime)
  return _internal_out_ime();
}
inline void AKMsgTableState::_internal_set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_ime_ = value;
}
inline void AKMsgTableState::set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_ime(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgTableState.out_ime)
}

// -------------------------------------------------------------------

// AKMsgHandCards

// repeated int32 cards = 1;
inline int AKMsgHandCards::_internal_cards_size() const {
  return cards_.size();
}
inline int AKMsgHandCards::cards_size() const {
  return _internal_cards_size();
}
inline void AKMsgHandCards::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgHandCards::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgHandCards::cards(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgHandCards.cards)
  return _internal_cards(index);
}
inline void AKMsgHandCards::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgHandCards.cards)
}
inline void AKMsgHandCards::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void AKMsgHandCards::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgHandCards.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgHandCards::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgHandCards::cards() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgHandCards.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgHandCards::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgHandCards::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgHandCards.cards)
  return _internal_mutable_cards();
}

// repeated int32 change_cards = 2;
inline int AKMsgHandCards::_internal_change_cards_size() const {
  return change_cards_.size();
}
inline int AKMsgHandCards::change_cards_size() const {
  return _internal_change_cards_size();
}
inline void AKMsgHandCards::clear_change_cards() {
  change_cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgHandCards::_internal_change_cards(int index) const {
  return change_cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgHandCards::change_cards(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgHandCards.change_cards)
  return _internal_change_cards(index);
}
inline void AKMsgHandCards::set_change_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  change_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgHandCards.change_cards)
}
inline void AKMsgHandCards::_internal_add_change_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  change_cards_.Add(value);
}
inline void AKMsgHandCards::add_change_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_change_cards(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgHandCards.change_cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgHandCards::_internal_change_cards() const {
  return change_cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgHandCards::change_cards() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgHandCards.change_cards)
  return _internal_change_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgHandCards::_internal_mutable_change_cards() {
  return &change_cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgHandCards::mutable_change_cards() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgHandCards.change_cards)
  return _internal_mutable_change_cards();
}

// -------------------------------------------------------------------

// AKMsgPlayerInfo

// int32 chair_id = 1;
inline void AKMsgPlayerInfo::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgPlayerInfo::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgPlayerInfo::chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.chair_id)
  return _internal_chair_id();
}
inline void AKMsgPlayerInfo::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void AKMsgPlayerInfo::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.chair_id)
}

// bool ming_zhu = 2;
inline void AKMsgPlayerInfo::clear_ming_zhu() {
  ming_zhu_ = false;
}
inline bool AKMsgPlayerInfo::_internal_ming_zhu() const {
  return ming_zhu_;
}
inline bool AKMsgPlayerInfo::ming_zhu() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.ming_zhu)
  return _internal_ming_zhu();
}
inline void AKMsgPlayerInfo::_internal_set_ming_zhu(bool value) {
  
  ming_zhu_ = value;
}
inline void AKMsgPlayerInfo::set_ming_zhu(bool value) {
  _internal_set_ming_zhu(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.ming_zhu)
}

// int32 play_status = 3;
inline void AKMsgPlayerInfo::clear_play_status() {
  play_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgPlayerInfo::_internal_play_status() const {
  return play_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgPlayerInfo::play_status() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.play_status)
  return _internal_play_status();
}
inline void AKMsgPlayerInfo::_internal_set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  play_status_ = value;
}
inline void AKMsgPlayerInfo::set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_play_status(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.play_status)
}

// int64 player_bet = 4;
inline void AKMsgPlayerInfo::clear_player_bet() {
  player_bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::_internal_player_bet() const {
  return player_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::player_bet() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.player_bet)
  return _internal_player_bet();
}
inline void AKMsgPlayerInfo::_internal_set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  player_bet_ = value;
}
inline void AKMsgPlayerInfo::set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_player_bet(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.player_bet)
}

// int64 last_bet = 5;
inline void AKMsgPlayerInfo::clear_last_bet() {
  last_bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::_internal_last_bet() const {
  return last_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::last_bet() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.last_bet)
  return _internal_last_bet();
}
inline void AKMsgPlayerInfo::_internal_set_last_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_bet_ = value;
}
inline void AKMsgPlayerInfo::set_last_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_bet(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.last_bet)
}

// int32 card_type = 6;
inline void AKMsgPlayerInfo::clear_card_type() {
  card_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgPlayerInfo::_internal_card_type() const {
  return card_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgPlayerInfo::card_type() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.card_type)
  return _internal_card_type();
}
inline void AKMsgPlayerInfo::_internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  card_type_ = value;
}
inline void AKMsgPlayerInfo::set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_card_type(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.card_type)
}

// int64 gold = 7;
inline void AKMsgPlayerInfo::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::gold() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.gold)
  return _internal_gold();
}
inline void AKMsgPlayerInfo::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void AKMsgPlayerInfo::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.gold)
}

// int64 win_gold = 8;
inline void AKMsgPlayerInfo::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgPlayerInfo::win_gold() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.win_gold)
  return _internal_win_gold();
}
inline void AKMsgPlayerInfo::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void AKMsgPlayerInfo::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgPlayerInfo.win_gold)
}

// .TeenPatti_AK47.AKMsgHandCards handls = 9;
inline bool AKMsgPlayerInfo::_internal_has_handls() const {
  return this != internal_default_instance() && handls_ != nullptr;
}
inline bool AKMsgPlayerInfo::has_handls() const {
  return _internal_has_handls();
}
inline void AKMsgPlayerInfo::clear_handls() {
  if (GetArena() == nullptr && handls_ != nullptr) {
    delete handls_;
  }
  handls_ = nullptr;
}
inline const ::TeenPatti_AK47::AKMsgHandCards& AKMsgPlayerInfo::_internal_handls() const {
  const ::TeenPatti_AK47::AKMsgHandCards* p = handls_;
  return p != nullptr ? *p : reinterpret_cast<const ::TeenPatti_AK47::AKMsgHandCards&>(
      ::TeenPatti_AK47::_AKMsgHandCards_default_instance_);
}
inline const ::TeenPatti_AK47::AKMsgHandCards& AKMsgPlayerInfo::handls() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgPlayerInfo.handls)
  return _internal_handls();
}
inline void AKMsgPlayerInfo::unsafe_arena_set_allocated_handls(
    ::TeenPatti_AK47::AKMsgHandCards* handls) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handls_);
  }
  handls_ = handls;
  if (handls) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TeenPatti_AK47.AKMsgPlayerInfo.handls)
}
inline ::TeenPatti_AK47::AKMsgHandCards* AKMsgPlayerInfo::release_handls() {
  
  ::TeenPatti_AK47::AKMsgHandCards* temp = handls_;
  handls_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::TeenPatti_AK47::AKMsgHandCards* AKMsgPlayerInfo::unsafe_arena_release_handls() {
  // @@protoc_insertion_point(field_release:TeenPatti_AK47.AKMsgPlayerInfo.handls)
  
  ::TeenPatti_AK47::AKMsgHandCards* temp = handls_;
  handls_ = nullptr;
  return temp;
}
inline ::TeenPatti_AK47::AKMsgHandCards* AKMsgPlayerInfo::_internal_mutable_handls() {
  
  if (handls_ == nullptr) {
    auto* p = CreateMaybeMessage<::TeenPatti_AK47::AKMsgHandCards>(GetArena());
    handls_ = p;
  }
  return handls_;
}
inline ::TeenPatti_AK47::AKMsgHandCards* AKMsgPlayerInfo::mutable_handls() {
  // @@protoc_insertion_point(field_mutable:TeenPatti_AK47.AKMsgPlayerInfo.handls)
  return _internal_mutable_handls();
}
inline void AKMsgPlayerInfo::set_allocated_handls(::TeenPatti_AK47::AKMsgHandCards* handls) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete handls_;
  }
  if (handls) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(handls);
    if (message_arena != submessage_arena) {
      handls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handls, submessage_arena);
    }
    
  } else {
    
  }
  handls_ = handls;
  // @@protoc_insertion_point(field_set_allocated:TeenPatti_AK47.AKMsgPlayerInfo.handls)
}

// -------------------------------------------------------------------

// AKMsgSceneInfo

// int64 max_score = 1;
inline void AKMsgSceneInfo::clear_max_score() {
  max_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::_internal_max_score() const {
  return max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::max_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.max_score)
  return _internal_max_score();
}
inline void AKMsgSceneInfo::_internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  max_score_ = value;
}
inline void AKMsgSceneInfo::set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.max_score)
}

// int64 table_max_score = 2;
inline void AKMsgSceneInfo::clear_table_max_score() {
  table_max_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::_internal_table_max_score() const {
  return table_max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::table_max_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.table_max_score)
  return _internal_table_max_score();
}
inline void AKMsgSceneInfo::_internal_set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  table_max_score_ = value;
}
inline void AKMsgSceneInfo::set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_table_max_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.table_max_score)
}

// int64 cell_score = 3;
inline void AKMsgSceneInfo::clear_cell_score() {
  cell_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::_internal_cell_score() const {
  return cell_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::cell_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.cell_score)
  return _internal_cell_score();
}
inline void AKMsgSceneInfo::_internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cell_score_ = value;
}
inline void AKMsgSceneInfo::set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cell_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.cell_score)
}

// int32 cur_times = 4;
inline void AKMsgSceneInfo::clear_cur_times() {
  cur_times_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_cur_times() const {
  return cur_times_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::cur_times() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.cur_times)
  return _internal_cur_times();
}
inline void AKMsgSceneInfo::_internal_set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_times_ = value;
}
inline void AKMsgSceneInfo::set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_times(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.cur_times)
}

// int32 table_state = 5;
inline void AKMsgSceneInfo::clear_table_state() {
  table_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_table_state() const {
  return table_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::table_state() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.table_state)
  return _internal_table_state();
}
inline void AKMsgSceneInfo::_internal_set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_state_ = value;
}
inline void AKMsgSceneInfo::set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_state(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.table_state)
}

// int64 total_bet_score = 6;
inline void AKMsgSceneInfo::clear_total_bet_score() {
  total_bet_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::_internal_total_bet_score() const {
  return total_bet_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgSceneInfo::total_bet_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.total_bet_score)
  return _internal_total_bet_score();
}
inline void AKMsgSceneInfo::_internal_set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_bet_score_ = value;
}
inline void AKMsgSceneInfo::set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_bet_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.total_bet_score)
}

// int32 tax = 7;
inline void AKMsgSceneInfo::clear_tax() {
  tax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_tax() const {
  return tax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::tax() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.tax)
  return _internal_tax();
}
inline void AKMsgSceneInfo::_internal_set_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tax_ = value;
}
inline void AKMsgSceneInfo::set_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tax(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.tax)
}

// int32 banker_chair_id = 8;
inline void AKMsgSceneInfo::clear_banker_chair_id() {
  banker_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_banker_chair_id() const {
  return banker_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.banker_chair_id)
  return _internal_banker_chair_id();
}
inline void AKMsgSceneInfo::_internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_chair_id_ = value;
}
inline void AKMsgSceneInfo::set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.banker_chair_id)
}

// int32 cur_chair_id = 9;
inline void AKMsgSceneInfo::clear_cur_chair_id() {
  cur_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_cur_chair_id() const {
  return cur_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.cur_chair_id)
  return _internal_cur_chair_id();
}
inline void AKMsgSceneInfo::_internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_id_ = value;
}
inline void AKMsgSceneInfo::set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.cur_chair_id)
}

// int32 cur_chair_act = 10;
inline void AKMsgSceneInfo::clear_cur_chair_act() {
  cur_chair_act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_cur_chair_act() const {
  return cur_chair_act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::cur_chair_act() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.cur_chair_act)
  return _internal_cur_chair_act();
}
inline void AKMsgSceneInfo::_internal_set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_act_ = value;
}
inline void AKMsgSceneInfo::set_cur_chair_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_act(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.cur_chair_act)
}

// int32 out_time = 11;
inline void AKMsgSceneInfo::clear_out_time() {
  out_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_out_time() const {
  return out_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::out_time() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.out_time)
  return _internal_out_time();
}
inline void AKMsgSceneInfo::_internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_time_ = value;
}
inline void AKMsgSceneInfo::set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_time(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.out_time)
}

// int32 total_time = 12;
inline void AKMsgSceneInfo::clear_total_time() {
  total_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_total_time() const {
  return total_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::total_time() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.total_time)
  return _internal_total_time();
}
inline void AKMsgSceneInfo::_internal_set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_time_ = value;
}
inline void AKMsgSceneInfo::set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_time(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.total_time)
}

// int32 compare_user = 13;
inline void AKMsgSceneInfo::clear_compare_user() {
  compare_user_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_compare_user() const {
  return compare_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::compare_user() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.compare_user)
  return _internal_compare_user();
}
inline void AKMsgSceneInfo::_internal_set_compare_user(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  compare_user_ = value;
}
inline void AKMsgSceneInfo::set_compare_user(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_compare_user(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.compare_user)
}

// int32 compare_win = 14;
inline void AKMsgSceneInfo::clear_compare_win() {
  compare_win_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::_internal_compare_win() const {
  return compare_win_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgSceneInfo::compare_win() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.compare_win)
  return _internal_compare_win();
}
inline void AKMsgSceneInfo::_internal_set_compare_win(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  compare_win_ = value;
}
inline void AKMsgSceneInfo::set_compare_win(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_compare_win(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgSceneInfo.compare_win)
}

// repeated .TeenPatti_AK47.AKMsgPlayerInfo player_infos = 15;
inline int AKMsgSceneInfo::_internal_player_infos_size() const {
  return player_infos_.size();
}
inline int AKMsgSceneInfo::player_infos_size() const {
  return _internal_player_infos_size();
}
inline void AKMsgSceneInfo::clear_player_infos() {
  player_infos_.Clear();
}
inline ::TeenPatti_AK47::AKMsgPlayerInfo* AKMsgSceneInfo::mutable_player_infos(int index) {
  // @@protoc_insertion_point(field_mutable:TeenPatti_AK47.AKMsgSceneInfo.player_infos)
  return player_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgPlayerInfo >*
AKMsgSceneInfo::mutable_player_infos() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgSceneInfo.player_infos)
  return &player_infos_;
}
inline const ::TeenPatti_AK47::AKMsgPlayerInfo& AKMsgSceneInfo::_internal_player_infos(int index) const {
  return player_infos_.Get(index);
}
inline const ::TeenPatti_AK47::AKMsgPlayerInfo& AKMsgSceneInfo::player_infos(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgSceneInfo.player_infos)
  return _internal_player_infos(index);
}
inline ::TeenPatti_AK47::AKMsgPlayerInfo* AKMsgSceneInfo::_internal_add_player_infos() {
  return player_infos_.Add();
}
inline ::TeenPatti_AK47::AKMsgPlayerInfo* AKMsgSceneInfo::add_player_infos() {
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgSceneInfo.player_infos)
  return _internal_add_player_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgPlayerInfo >&
AKMsgSceneInfo::player_infos() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgSceneInfo.player_infos)
  return player_infos_;
}

// -------------------------------------------------------------------

// AKMsgGameStartResp

// int32 cur_chair_id = 1;
inline void AKMsgGameStartResp::clear_cur_chair_id() {
  cur_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::_internal_cur_chair_id() const {
  return cur_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.cur_chair_id)
  return _internal_cur_chair_id();
}
inline void AKMsgGameStartResp::_internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_id_ = value;
}
inline void AKMsgGameStartResp::set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.cur_chair_id)
}

// int32 cur_times = 2;
inline void AKMsgGameStartResp::clear_cur_times() {
  cur_times_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::_internal_cur_times() const {
  return cur_times_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::cur_times() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.cur_times)
  return _internal_cur_times();
}
inline void AKMsgGameStartResp::_internal_set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_times_ = value;
}
inline void AKMsgGameStartResp::set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_times(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.cur_times)
}

// int32 banker_chair_id = 3;
inline void AKMsgGameStartResp::clear_banker_chair_id() {
  banker_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::_internal_banker_chair_id() const {
  return banker_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.banker_chair_id)
  return _internal_banker_chair_id();
}
inline void AKMsgGameStartResp::_internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_chair_id_ = value;
}
inline void AKMsgGameStartResp::set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.banker_chair_id)
}

// int64 max_score = 4;
inline void AKMsgGameStartResp::clear_max_score() {
  max_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::_internal_max_score() const {
  return max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::max_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.max_score)
  return _internal_max_score();
}
inline void AKMsgGameStartResp::_internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  max_score_ = value;
}
inline void AKMsgGameStartResp::set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.max_score)
}

// int64 max_blind = 5;
inline void AKMsgGameStartResp::clear_max_blind() {
  max_blind_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::_internal_max_blind() const {
  return max_blind_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::max_blind() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.max_blind)
  return _internal_max_blind();
}
inline void AKMsgGameStartResp::_internal_set_max_blind(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  max_blind_ = value;
}
inline void AKMsgGameStartResp::set_max_blind(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max_blind(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.max_blind)
}

// int64 cell_score = 6;
inline void AKMsgGameStartResp::clear_cell_score() {
  cell_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::_internal_cell_score() const {
  return cell_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::cell_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.cell_score)
  return _internal_cell_score();
}
inline void AKMsgGameStartResp::_internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cell_score_ = value;
}
inline void AKMsgGameStartResp::set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cell_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.cell_score)
}

// int64 table_max_score = 7;
inline void AKMsgGameStartResp::clear_table_max_score() {
  table_max_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::_internal_table_max_score() const {
  return table_max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameStartResp::table_max_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.table_max_score)
  return _internal_table_max_score();
}
inline void AKMsgGameStartResp::_internal_set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  table_max_score_ = value;
}
inline void AKMsgGameStartResp::set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_table_max_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.table_max_score)
}

// repeated int32 play_index = 8;
inline int AKMsgGameStartResp::_internal_play_index_size() const {
  return play_index_.size();
}
inline int AKMsgGameStartResp::play_index_size() const {
  return _internal_play_index_size();
}
inline void AKMsgGameStartResp::clear_play_index() {
  play_index_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::_internal_play_index(int index) const {
  return play_index_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameStartResp::play_index(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameStartResp.play_index)
  return _internal_play_index(index);
}
inline void AKMsgGameStartResp::set_play_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  play_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameStartResp.play_index)
}
inline void AKMsgGameStartResp::_internal_add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  play_index_.Add(value);
}
inline void AKMsgGameStartResp::add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_play_index(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgGameStartResp.play_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgGameStartResp::_internal_play_index() const {
  return play_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgGameStartResp::play_index() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgGameStartResp.play_index)
  return _internal_play_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgGameStartResp::_internal_mutable_play_index() {
  return &play_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgGameStartResp::mutable_play_index() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgGameStartResp.play_index)
  return _internal_mutable_play_index();
}

// -------------------------------------------------------------------

// AKMsgNotifyActionResp

// int32 cur_chair_id = 1;
inline void AKMsgNotifyActionResp::clear_cur_chair_id() {
  cur_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::_internal_cur_chair_id() const {
  return cur_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgNotifyActionResp.cur_chair_id)
  return _internal_cur_chair_id();
}
inline void AKMsgNotifyActionResp::_internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_id_ = value;
}
inline void AKMsgNotifyActionResp::set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgNotifyActionResp.cur_chair_id)
}

// int32 cur_times = 2;
inline void AKMsgNotifyActionResp::clear_cur_times() {
  cur_times_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::_internal_cur_times() const {
  return cur_times_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::cur_times() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgNotifyActionResp.cur_times)
  return _internal_cur_times();
}
inline void AKMsgNotifyActionResp::_internal_set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_times_ = value;
}
inline void AKMsgNotifyActionResp::set_cur_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_times(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgNotifyActionResp.cur_times)
}

// int32 current_act = 3;
inline void AKMsgNotifyActionResp::clear_current_act() {
  current_act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::_internal_current_act() const {
  return current_act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::current_act() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgNotifyActionResp.current_act)
  return _internal_current_act();
}
inline void AKMsgNotifyActionResp::_internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_act_ = value;
}
inline void AKMsgNotifyActionResp::set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_act(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgNotifyActionResp.current_act)
}

// int32 oper_time = 4;
inline void AKMsgNotifyActionResp::clear_oper_time() {
  oper_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::_internal_oper_time() const {
  return oper_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyActionResp::oper_time() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgNotifyActionResp.oper_time)
  return _internal_oper_time();
}
inline void AKMsgNotifyActionResp::_internal_set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  oper_time_ = value;
}
inline void AKMsgNotifyActionResp::set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_oper_time(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgNotifyActionResp.oper_time)
}

// -------------------------------------------------------------------

// AKMsgAction

// int32 act = 1;
inline void AKMsgAction::clear_act() {
  act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgAction::_internal_act() const {
  return act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgAction::act() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgAction.act)
  return _internal_act();
}
inline void AKMsgAction::_internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  act_ = value;
}
inline void AKMsgAction::set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_act(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgAction.act)
}

// int64 bet_score = 2;
inline void AKMsgAction::clear_bet_score() {
  bet_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAction::_internal_bet_score() const {
  return bet_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAction::bet_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgAction.bet_score)
  return _internal_bet_score();
}
inline void AKMsgAction::_internal_set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_score_ = value;
}
inline void AKMsgAction::set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgAction.bet_score)
}

// int64 compare_user = 3;
inline void AKMsgAction::clear_compare_user() {
  compare_user_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAction::_internal_compare_user() const {
  return compare_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAction::compare_user() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgAction.compare_user)
  return _internal_compare_user();
}
inline void AKMsgAction::_internal_set_compare_user(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  compare_user_ = value;
}
inline void AKMsgAction::set_compare_user(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_compare_user(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgAction.compare_user)
}

// bool is_ok = 4;
inline void AKMsgAction::clear_is_ok() {
  is_ok_ = false;
}
inline bool AKMsgAction::_internal_is_ok() const {
  return is_ok_;
}
inline bool AKMsgAction::is_ok() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgAction.is_ok)
  return _internal_is_ok();
}
inline void AKMsgAction::_internal_set_is_ok(bool value) {
  
  is_ok_ = value;
}
inline void AKMsgAction::set_is_ok(bool value) {
  _internal_set_is_ok(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgAction.is_ok)
}

// -------------------------------------------------------------------

// AKMsgGiveUpResp

// int32 chair_id = 1;
inline void AKMsgGiveUpResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGiveUpResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGiveUpResp::chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGiveUpResp.chair_id)
  return _internal_chair_id();
}
inline void AKMsgGiveUpResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void AKMsgGiveUpResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGiveUpResp.chair_id)
}

// -------------------------------------------------------------------

// AKMsgLookCardResp

// int32 chair_id = 1;
inline void AKMsgLookCardResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgLookCardResp.chair_id)
  return _internal_chair_id();
}
inline void AKMsgLookCardResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void AKMsgLookCardResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgLookCardResp.chair_id)
}

// int32 card_type = 2;
inline void AKMsgLookCardResp::clear_card_type() {
  card_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::_internal_card_type() const {
  return card_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::card_type() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgLookCardResp.card_type)
  return _internal_card_type();
}
inline void AKMsgLookCardResp::_internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  card_type_ = value;
}
inline void AKMsgLookCardResp::set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_card_type(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgLookCardResp.card_type)
}

// int32 cur_chair_id = 3;
inline void AKMsgLookCardResp::clear_cur_chair_id() {
  cur_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::_internal_cur_chair_id() const {
  return cur_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::cur_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgLookCardResp.cur_chair_id)
  return _internal_cur_chair_id();
}
inline void AKMsgLookCardResp::_internal_set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chair_id_ = value;
}
inline void AKMsgLookCardResp::set_cur_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgLookCardResp.cur_chair_id)
}

// int32 new_act = 4;
inline void AKMsgLookCardResp::clear_new_act() {
  new_act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::_internal_new_act() const {
  return new_act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::new_act() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgLookCardResp.new_act)
  return _internal_new_act();
}
inline void AKMsgLookCardResp::_internal_set_new_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  new_act_ = value;
}
inline void AKMsgLookCardResp::set_new_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_new_act(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgLookCardResp.new_act)
}

// repeated int32 cards = 5;
inline int AKMsgLookCardResp::_internal_cards_size() const {
  return cards_.size();
}
inline int AKMsgLookCardResp::cards_size() const {
  return _internal_cards_size();
}
inline void AKMsgLookCardResp::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgLookCardResp::cards(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgLookCardResp.cards)
  return _internal_cards(index);
}
inline void AKMsgLookCardResp::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgLookCardResp.cards)
}
inline void AKMsgLookCardResp::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void AKMsgLookCardResp::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgLookCardResp.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgLookCardResp::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgLookCardResp::cards() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgLookCardResp.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgLookCardResp::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgLookCardResp::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgLookCardResp.cards)
  return _internal_mutable_cards();
}

// -------------------------------------------------------------------

// AKMsgAddBetResp

// int32 add_chair_id = 1;
inline void AKMsgAddBetResp::clear_add_chair_id() {
  add_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgAddBetResp::_internal_add_chair_id() const {
  return add_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgAddBetResp::add_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgAddBetResp.add_chair_id)
  return _internal_add_chair_id();
}
inline void AKMsgAddBetResp::_internal_set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  add_chair_id_ = value;
}
inline void AKMsgAddBetResp::set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_add_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgAddBetResp.add_chair_id)
}

// int64 add_score = 2;
inline void AKMsgAddBetResp::clear_add_score() {
  add_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAddBetResp::_internal_add_score() const {
  return add_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAddBetResp::add_score() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgAddBetResp.add_score)
  return _internal_add_score();
}
inline void AKMsgAddBetResp::_internal_set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  add_score_ = value;
}
inline void AKMsgAddBetResp::set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_add_score(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgAddBetResp.add_score)
}

// int64 bet_type = 3;
inline void AKMsgAddBetResp::clear_bet_type() {
  bet_type_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAddBetResp::_internal_bet_type() const {
  return bet_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgAddBetResp::bet_type() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgAddBetResp.bet_type)
  return _internal_bet_type();
}
inline void AKMsgAddBetResp::_internal_set_bet_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_type_ = value;
}
inline void AKMsgAddBetResp::set_bet_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet_type(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgAddBetResp.bet_type)
}

// -------------------------------------------------------------------

// AKMsgCompareCardResp

// int32 chair_id = 1;
inline void AKMsgCompareCardResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardResp::chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardResp.chair_id)
  return _internal_chair_id();
}
inline void AKMsgCompareCardResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void AKMsgCompareCardResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardResp.chair_id)
}

// int32 compare_id = 2;
inline void AKMsgCompareCardResp::clear_compare_id() {
  compare_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardResp::_internal_compare_id() const {
  return compare_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardResp::compare_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardResp.compare_id)
  return _internal_compare_id();
}
inline void AKMsgCompareCardResp::_internal_set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  compare_id_ = value;
}
inline void AKMsgCompareCardResp::set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_compare_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardResp.compare_id)
}

// -------------------------------------------------------------------

// AKMsgCompareCardRetResp

// int32 current_chair_id = 1;
inline void AKMsgCompareCardRetResp::clear_current_chair_id() {
  current_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_current_chair_id() const {
  return current_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::current_chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.current_chair_id)
  return _internal_current_chair_id();
}
inline void AKMsgCompareCardRetResp::_internal_set_current_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_chair_id_ = value;
}
inline void AKMsgCompareCardRetResp::set_current_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.current_chair_id)
}

// int32 current_act = 2;
inline void AKMsgCompareCardRetResp::clear_current_act() {
  current_act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_current_act() const {
  return current_act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::current_act() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.current_act)
  return _internal_current_act();
}
inline void AKMsgCompareCardRetResp::_internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_act_ = value;
}
inline void AKMsgCompareCardRetResp::set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_act(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.current_act)
}

// int32 lost_id = 3;
inline void AKMsgCompareCardRetResp::clear_lost_id() {
  lost_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_lost_id() const {
  return lost_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::lost_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.lost_id)
  return _internal_lost_id();
}
inline void AKMsgCompareCardRetResp::_internal_set_lost_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lost_id_ = value;
}
inline void AKMsgCompareCardRetResp::set_lost_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lost_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.lost_id)
}

// int32 compare_id = 4;
inline void AKMsgCompareCardRetResp::clear_compare_id() {
  compare_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_compare_id() const {
  return compare_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::compare_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_id)
  return _internal_compare_id();
}
inline void AKMsgCompareCardRetResp::_internal_set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  compare_id_ = value;
}
inline void AKMsgCompareCardRetResp::set_compare_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_compare_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_id)
}

// int32 passive_id = 5;
inline void AKMsgCompareCardRetResp::clear_passive_id() {
  passive_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_passive_id() const {
  return passive_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::passive_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_id)
  return _internal_passive_id();
}
inline void AKMsgCompareCardRetResp::_internal_set_passive_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  passive_id_ = value;
}
inline void AKMsgCompareCardRetResp::set_passive_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_passive_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_id)
}

// int32 compare_type = 6;
inline void AKMsgCompareCardRetResp::clear_compare_type() {
  compare_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_compare_type() const {
  return compare_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::compare_type() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_type)
  return _internal_compare_type();
}
inline void AKMsgCompareCardRetResp::_internal_set_compare_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  compare_type_ = value;
}
inline void AKMsgCompareCardRetResp::set_compare_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_compare_type(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_type)
}

// int32 passive_type = 7;
inline void AKMsgCompareCardRetResp::clear_passive_type() {
  passive_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_passive_type() const {
  return passive_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::passive_type() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_type)
  return _internal_passive_type();
}
inline void AKMsgCompareCardRetResp::_internal_set_passive_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  passive_type_ = value;
}
inline void AKMsgCompareCardRetResp::set_passive_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_passive_type(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_type)
}

// repeated int32 compare_cards = 8;
inline int AKMsgCompareCardRetResp::_internal_compare_cards_size() const {
  return compare_cards_.size();
}
inline int AKMsgCompareCardRetResp::compare_cards_size() const {
  return _internal_compare_cards_size();
}
inline void AKMsgCompareCardRetResp::clear_compare_cards() {
  compare_cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_compare_cards(int index) const {
  return compare_cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::compare_cards(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_cards)
  return _internal_compare_cards(index);
}
inline void AKMsgCompareCardRetResp::set_compare_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  compare_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_cards)
}
inline void AKMsgCompareCardRetResp::_internal_add_compare_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  compare_cards_.Add(value);
}
inline void AKMsgCompareCardRetResp::add_compare_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_compare_cards(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgCompareCardRetResp::_internal_compare_cards() const {
  return compare_cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgCompareCardRetResp::compare_cards() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_cards)
  return _internal_compare_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgCompareCardRetResp::_internal_mutable_compare_cards() {
  return &compare_cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgCompareCardRetResp::mutable_compare_cards() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgCompareCardRetResp.compare_cards)
  return _internal_mutable_compare_cards();
}

// repeated int32 passive_cards = 9;
inline int AKMsgCompareCardRetResp::_internal_passive_cards_size() const {
  return passive_cards_.size();
}
inline int AKMsgCompareCardRetResp::passive_cards_size() const {
  return _internal_passive_cards_size();
}
inline void AKMsgCompareCardRetResp::clear_passive_cards() {
  passive_cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::_internal_passive_cards(int index) const {
  return passive_cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgCompareCardRetResp::passive_cards(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_cards)
  return _internal_passive_cards(index);
}
inline void AKMsgCompareCardRetResp::set_passive_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  passive_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_cards)
}
inline void AKMsgCompareCardRetResp::_internal_add_passive_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  passive_cards_.Add(value);
}
inline void AKMsgCompareCardRetResp::add_passive_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_passive_cards(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgCompareCardRetResp::_internal_passive_cards() const {
  return passive_cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgCompareCardRetResp::passive_cards() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_cards)
  return _internal_passive_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgCompareCardRetResp::_internal_mutable_passive_cards() {
  return &passive_cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgCompareCardRetResp::mutable_passive_cards() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgCompareCardRetResp.passive_cards)
  return _internal_mutable_passive_cards();
}

// bool is_agree = 10;
inline void AKMsgCompareCardRetResp::clear_is_agree() {
  is_agree_ = false;
}
inline bool AKMsgCompareCardRetResp::_internal_is_agree() const {
  return is_agree_;
}
inline bool AKMsgCompareCardRetResp::is_agree() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgCompareCardRetResp.is_agree)
  return _internal_is_agree();
}
inline void AKMsgCompareCardRetResp::_internal_set_is_agree(bool value) {
  
  is_agree_ = value;
}
inline void AKMsgCompareCardRetResp::set_is_agree(bool value) {
  _internal_set_is_agree(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgCompareCardRetResp.is_agree)
}

// -------------------------------------------------------------------

// AKMsgGameResult

// int32 game_tax = 1;
inline void AKMsgGameResult::clear_game_tax() {
  game_tax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameResult::_internal_game_tax() const {
  return game_tax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameResult::game_tax() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameResult.game_tax)
  return _internal_game_tax();
}
inline void AKMsgGameResult::_internal_set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_tax_ = value;
}
inline void AKMsgGameResult::set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_tax(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameResult.game_tax)
}

// repeated int64 game_score = 2;
inline int AKMsgGameResult::_internal_game_score_size() const {
  return game_score_.size();
}
inline int AKMsgGameResult::game_score_size() const {
  return _internal_game_score_size();
}
inline void AKMsgGameResult::clear_game_score() {
  game_score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameResult::_internal_game_score(int index) const {
  return game_score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AKMsgGameResult::game_score(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameResult.game_score)
  return _internal_game_score(index);
}
inline void AKMsgGameResult::set_game_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  game_score_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameResult.game_score)
}
inline void AKMsgGameResult::_internal_add_game_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  game_score_.Add(value);
}
inline void AKMsgGameResult::add_game_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_game_score(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgGameResult.game_score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AKMsgGameResult::_internal_game_score() const {
  return game_score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AKMsgGameResult::game_score() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgGameResult.game_score)
  return _internal_game_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AKMsgGameResult::_internal_mutable_game_score() {
  return &game_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AKMsgGameResult::mutable_game_score() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgGameResult.game_score)
  return _internal_mutable_game_score();
}

// repeated int32 card_type = 3;
inline int AKMsgGameResult::_internal_card_type_size() const {
  return card_type_.size();
}
inline int AKMsgGameResult::card_type_size() const {
  return _internal_card_type_size();
}
inline void AKMsgGameResult::clear_card_type() {
  card_type_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameResult::_internal_card_type(int index) const {
  return card_type_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameResult::card_type(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameResult.card_type)
  return _internal_card_type(index);
}
inline void AKMsgGameResult::set_card_type(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  card_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameResult.card_type)
}
inline void AKMsgGameResult::_internal_add_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  card_type_.Add(value);
}
inline void AKMsgGameResult::add_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_card_type(value);
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgGameResult.card_type)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgGameResult::_internal_card_type() const {
  return card_type_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
AKMsgGameResult::card_type() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgGameResult.card_type)
  return _internal_card_type();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgGameResult::_internal_mutable_card_type() {
  return &card_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
AKMsgGameResult::mutable_card_type() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgGameResult.card_type)
  return _internal_mutable_card_type();
}

// repeated .TeenPatti_AK47.AKMsgHandCards player_hands = 4;
inline int AKMsgGameResult::_internal_player_hands_size() const {
  return player_hands_.size();
}
inline int AKMsgGameResult::player_hands_size() const {
  return _internal_player_hands_size();
}
inline void AKMsgGameResult::clear_player_hands() {
  player_hands_.Clear();
}
inline ::TeenPatti_AK47::AKMsgHandCards* AKMsgGameResult::mutable_player_hands(int index) {
  // @@protoc_insertion_point(field_mutable:TeenPatti_AK47.AKMsgGameResult.player_hands)
  return player_hands_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgHandCards >*
AKMsgGameResult::mutable_player_hands() {
  // @@protoc_insertion_point(field_mutable_list:TeenPatti_AK47.AKMsgGameResult.player_hands)
  return &player_hands_;
}
inline const ::TeenPatti_AK47::AKMsgHandCards& AKMsgGameResult::_internal_player_hands(int index) const {
  return player_hands_.Get(index);
}
inline const ::TeenPatti_AK47::AKMsgHandCards& AKMsgGameResult::player_hands(int index) const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameResult.player_hands)
  return _internal_player_hands(index);
}
inline ::TeenPatti_AK47::AKMsgHandCards* AKMsgGameResult::_internal_add_player_hands() {
  return player_hands_.Add();
}
inline ::TeenPatti_AK47::AKMsgHandCards* AKMsgGameResult::add_player_hands() {
  // @@protoc_insertion_point(field_add:TeenPatti_AK47.AKMsgGameResult.player_hands)
  return _internal_add_player_hands();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeenPatti_AK47::AKMsgHandCards >&
AKMsgGameResult::player_hands() const {
  // @@protoc_insertion_point(field_list:TeenPatti_AK47.AKMsgGameResult.player_hands)
  return player_hands_;
}

// int32 end_state = 5;
inline void AKMsgGameResult::clear_end_state() {
  end_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameResult::_internal_end_state() const {
  return end_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgGameResult::end_state() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgGameResult.end_state)
  return _internal_end_state();
}
inline void AKMsgGameResult::_internal_set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  end_state_ = value;
}
inline void AKMsgGameResult::set_end_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_end_state(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgGameResult.end_state)
}

// -------------------------------------------------------------------

// AKMsgNotifyPlayerAct

// int32 chair_id = 1;
inline void AKMsgNotifyPlayerAct::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyPlayerAct::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyPlayerAct::chair_id() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgNotifyPlayerAct.chair_id)
  return _internal_chair_id();
}
inline void AKMsgNotifyPlayerAct::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void AKMsgNotifyPlayerAct::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgNotifyPlayerAct.chair_id)
}

// int32 act = 2;
inline void AKMsgNotifyPlayerAct::clear_act() {
  act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyPlayerAct::_internal_act() const {
  return act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AKMsgNotifyPlayerAct::act() const {
  // @@protoc_insertion_point(field_get:TeenPatti_AK47.AKMsgNotifyPlayerAct.act)
  return _internal_act();
}
inline void AKMsgNotifyPlayerAct::_internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  act_ = value;
}
inline void AKMsgNotifyPlayerAct::set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_act(value);
  // @@protoc_insertion_point(field_set:TeenPatti_AK47.AKMsgNotifyPlayerAct.act)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TeenPatti_AK47

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::TeenPatti_AK47::EAKGameState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TeenPatti_AK47::EAKGameState>() {
  return ::TeenPatti_AK47::EAKGameState_descriptor();
}
template <> struct is_proto_enum< ::TeenPatti_AK47::EAKPlayerState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TeenPatti_AK47::EAKPlayerState>() {
  return ::TeenPatti_AK47::EAKPlayerState_descriptor();
}
template <> struct is_proto_enum< ::TeenPatti_AK47::EAKCardType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TeenPatti_AK47::EAKCardType>() {
  return ::TeenPatti_AK47::EAKCardType_descriptor();
}
template <> struct is_proto_enum< ::TeenPatti_AK47::EAKGameAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TeenPatti_AK47::EAKGameAction>() {
  return ::TeenPatti_AK47::EAKGameAction_descriptor();
}
template <> struct is_proto_enum< ::TeenPatti_AK47::EAKMsgIDSubGame> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TeenPatti_AK47::EAKMsgIDSubGame>() {
  return ::TeenPatti_AK47::EAKMsgIDSubGame_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TeenPatti_5fAK47_2eproto
