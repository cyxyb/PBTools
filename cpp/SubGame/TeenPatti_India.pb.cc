// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeenPatti_India.proto

#include "TeenPatti_India.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_TeenPatti_5fIndia_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_TeenPatti_5fIndia_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto;
namespace TeenPatti_India {
class TPMsgTableStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgTableState> _instance;
} _TPMsgTableState_default_instance_;
class TPMsgHandCardsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgHandCards> _instance;
} _TPMsgHandCards_default_instance_;
class TPMsgPlayerInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgPlayerInfo> _instance;
} _TPMsgPlayerInfo_default_instance_;
class TPMsgSceneInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgSceneInfo> _instance;
} _TPMsgSceneInfo_default_instance_;
class TPMsgGameStartRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgGameStartResp> _instance;
} _TPMsgGameStartResp_default_instance_;
class TPMsgNotifyActionRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgNotifyActionResp> _instance;
} _TPMsgNotifyActionResp_default_instance_;
class TPMsgActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgAction> _instance;
} _TPMsgAction_default_instance_;
class TPMsgGiveUpRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgGiveUpResp> _instance;
} _TPMsgGiveUpResp_default_instance_;
class TPMsgLookCardRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgLookCardResp> _instance;
} _TPMsgLookCardResp_default_instance_;
class TPMsgAddBetRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgAddBetResp> _instance;
} _TPMsgAddBetResp_default_instance_;
class TPMsgCompareCardRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgCompareCardResp> _instance;
} _TPMsgCompareCardResp_default_instance_;
class TPMsgCompareCardRetRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgCompareCardRetResp> _instance;
} _TPMsgCompareCardRetResp_default_instance_;
class TPMsgGameResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMsgGameResult> _instance;
} _TPMsgGameResult_default_instance_;
class TPMSgNotifyPlayerActDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TPMSgNotifyPlayerAct> _instance;
} _TPMSgNotifyPlayerAct_default_instance_;
}  // namespace TeenPatti_India
static void InitDefaultsscc_info_TPMSgNotifyPlayerAct_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMSgNotifyPlayerAct_default_instance_;
    new (ptr) ::TeenPatti_India::TPMSgNotifyPlayerAct();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMSgNotifyPlayerAct_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMSgNotifyPlayerAct_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgAction_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgAction_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgAction_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgAction_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgAddBetResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgAddBetResp_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgAddBetResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgAddBetResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgAddBetResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgCompareCardResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgCompareCardResp_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgCompareCardResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgCompareCardResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgCompareCardResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgCompareCardRetResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgCompareCardRetResp_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgCompareCardRetResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgCompareCardRetResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgCompareCardRetResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgGameResult_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgGameResult_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgGameResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TPMsgGameResult_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TPMsgGameResult_TeenPatti_5fIndia_2eproto}, {
      &scc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto.base,}};

static void InitDefaultsscc_info_TPMsgGameStartResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgGameStartResp_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgGameStartResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgGameStartResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgGameStartResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgGiveUpResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgGiveUpResp_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgGiveUpResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgGiveUpResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgGiveUpResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgHandCards_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgHandCards();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgLookCardResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgLookCardResp_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgLookCardResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgLookCardResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgLookCardResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgNotifyActionResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgNotifyActionResp_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgNotifyActionResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgNotifyActionResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgNotifyActionResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgPlayerInfo_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgPlayerInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto}, {
      &scc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto.base,}};

static void InitDefaultsscc_info_TPMsgSceneInfo_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgSceneInfo_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgSceneInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TPMsgSceneInfo_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TPMsgSceneInfo_TeenPatti_5fIndia_2eproto}, {
      &scc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto.base,}};

static void InitDefaultsscc_info_TPMsgTableState_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_TPMsgTableState_default_instance_;
    new (ptr) ::TeenPatti_India::TPMsgTableState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TPMsgTableState_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TPMsgTableState_TeenPatti_5fIndia_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_TeenPatti_5fIndia_2eproto[14];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_TeenPatti_5fIndia_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_TeenPatti_5fIndia_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgTableState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgTableState, state_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgTableState, out_ime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgHandCards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgHandCards, cards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, ming_zhu_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, play_status_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, player_bet_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, last_bet_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, card_type_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, gold_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, win_gold_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgPlayerInfo, handls_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, max_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, table_max_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, cell_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, cur_times_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, table_state_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, total_bet_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, tax_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, banker_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, cur_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, cur_chair_act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, out_time_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, compare_user_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, compare_win_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgSceneInfo, player_infos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, cur_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, cur_times_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, banker_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, max_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, max_blind_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, cell_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, table_max_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameStartResp, play_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgNotifyActionResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgNotifyActionResp, cur_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgNotifyActionResp, cur_times_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgNotifyActionResp, current_act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgNotifyActionResp, oper_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAction, act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAction, bet_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAction, compare_user_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAction, is_ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGiveUpResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGiveUpResp, chair_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgLookCardResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgLookCardResp, chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgLookCardResp, card_type_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgLookCardResp, cur_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgLookCardResp, new_act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgLookCardResp, cards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAddBetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAddBetResp, add_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAddBetResp, add_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgAddBetResp, bet_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardResp, chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardResp, compare_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, current_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, current_act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, lost_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, compare_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, passive_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, compare_type_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, passive_type_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, compare_cards_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, passive_cards_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgCompareCardRetResp, is_agree_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameResult, game_tax_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameResult, game_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameResult, card_type_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameResult, player_hands_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMsgGameResult, end_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMSgNotifyPlayerAct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMSgNotifyPlayerAct, chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::TPMSgNotifyPlayerAct, act_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TeenPatti_India::TPMsgTableState)},
  { 7, -1, sizeof(::TeenPatti_India::TPMsgHandCards)},
  { 13, -1, sizeof(::TeenPatti_India::TPMsgPlayerInfo)},
  { 27, -1, sizeof(::TeenPatti_India::TPMsgSceneInfo)},
  { 46, -1, sizeof(::TeenPatti_India::TPMsgGameStartResp)},
  { 59, -1, sizeof(::TeenPatti_India::TPMsgNotifyActionResp)},
  { 68, -1, sizeof(::TeenPatti_India::TPMsgAction)},
  { 77, -1, sizeof(::TeenPatti_India::TPMsgGiveUpResp)},
  { 83, -1, sizeof(::TeenPatti_India::TPMsgLookCardResp)},
  { 93, -1, sizeof(::TeenPatti_India::TPMsgAddBetResp)},
  { 101, -1, sizeof(::TeenPatti_India::TPMsgCompareCardResp)},
  { 108, -1, sizeof(::TeenPatti_India::TPMsgCompareCardRetResp)},
  { 123, -1, sizeof(::TeenPatti_India::TPMsgGameResult)},
  { 133, -1, sizeof(::TeenPatti_India::TPMSgNotifyPlayerAct)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgTableState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgHandCards_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgPlayerInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgSceneInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgGameStartResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgNotifyActionResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgGiveUpResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgLookCardResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgAddBetResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgCompareCardResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgCompareCardRetResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMsgGameResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_TPMSgNotifyPlayerAct_default_instance_),
};

const char descriptor_table_protodef_TeenPatti_5fIndia_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025TeenPatti_India.proto\022\017TeenPatti_India"
  "\"1\n\017TPMsgTableState\022\r\n\005state\030\001 \001(\005\022\017\n\007ou"
  "t_ime\030\002 \001(\005\"\037\n\016TPMsgHandCards\022\r\n\005cards\030\001"
  " \003(\005\"\324\001\n\017TPMsgPlayerInfo\022\020\n\010chair_id\030\001 \001"
  "(\005\022\020\n\010ming_zhu\030\002 \001(\010\022\023\n\013play_status\030\003 \001("
  "\005\022\022\n\nplayer_bet\030\004 \001(\003\022\020\n\010last_bet\030\005 \001(\003\022"
  "\021\n\tcard_type\030\006 \001(\005\022\014\n\004gold\030\007 \001(\003\022\020\n\010win_"
  "gold\030\010 \001(\003\022/\n\006handls\030\t \001(\0132\037.TeenPatti_I"
  "ndia.TPMsgHandCards\"\331\002\n\016TPMsgSceneInfo\022\021"
  "\n\tmax_score\030\001 \001(\003\022\027\n\017table_max_score\030\002 \001"
  "(\003\022\022\n\ncell_score\030\003 \001(\003\022\021\n\tcur_times\030\004 \001("
  "\005\022\023\n\013table_state\030\005 \001(\005\022\027\n\017total_bet_scor"
  "e\030\006 \001(\003\022\013\n\003tax\030\007 \001(\005\022\027\n\017banker_chair_id\030"
  "\010 \001(\005\022\024\n\014cur_chair_id\030\t \001(\005\022\025\n\rcur_chair"
  "_act\030\n \001(\005\022\020\n\010out_time\030\013 \001(\005\022\024\n\014compare_"
  "user\030\014 \001(\005\022\023\n\013compare_win\030\r \001(\005\0226\n\014playe"
  "r_infos\030\016 \003(\0132 .TeenPatti_India.TPMsgPla"
  "yerInfo\"\275\001\n\022TPMsgGameStartResp\022\024\n\014cur_ch"
  "air_id\030\001 \001(\005\022\021\n\tcur_times\030\002 \001(\005\022\027\n\017banke"
  "r_chair_id\030\003 \001(\005\022\021\n\tmax_score\030\004 \001(\003\022\021\n\tm"
  "ax_blind\030\005 \001(\003\022\022\n\ncell_score\030\006 \001(\003\022\027\n\017ta"
  "ble_max_score\030\007 \001(\003\022\022\n\nplay_index\030\010 \003(\005\""
  "h\n\025TPMsgNotifyActionResp\022\024\n\014cur_chair_id"
  "\030\001 \001(\005\022\021\n\tcur_times\030\002 \001(\005\022\023\n\013current_act"
  "\030\003 \001(\005\022\021\n\toper_time\030\004 \001(\005\"R\n\013TPMsgAction"
  "\022\013\n\003act\030\001 \001(\005\022\021\n\tbet_score\030\002 \001(\003\022\024\n\014comp"
  "are_user\030\003 \001(\003\022\r\n\005is_ok\030\004 \001(\010\"#\n\017TPMsgGi"
  "veUpResp\022\020\n\010chair_id\030\001 \001(\005\"n\n\021TPMsgLookC"
  "ardResp\022\020\n\010chair_id\030\001 \001(\005\022\021\n\tcard_type\030\002"
  " \001(\005\022\024\n\014cur_chair_id\030\003 \001(\005\022\017\n\007new_act\030\004 "
  "\001(\005\022\r\n\005cards\030\005 \003(\005\"L\n\017TPMsgAddBetResp\022\024\n"
  "\014add_chair_id\030\001 \001(\005\022\021\n\tadd_score\030\002 \001(\003\022\020"
  "\n\010bet_type\030\003 \001(\003\"<\n\024TPMsgCompareCardResp"
  "\022\020\n\010chair_id\030\001 \001(\005\022\022\n\ncompare_id\030\002 \001(\005\"\355"
  "\001\n\027TPMsgCompareCardRetResp\022\030\n\020current_ch"
  "air_id\030\001 \001(\005\022\023\n\013current_act\030\002 \001(\005\022\017\n\007los"
  "t_id\030\003 \001(\005\022\022\n\ncompare_id\030\004 \001(\005\022\022\n\npassiv"
  "e_id\030\005 \001(\005\022\024\n\014compare_type\030\006 \001(\005\022\024\n\014pass"
  "ive_type\030\007 \001(\005\022\025\n\rcompare_cards\030\010 \003(\005\022\025\n"
  "\rpassive_cards\030\t \003(\005\022\020\n\010is_agree\030\n \001(\010\"\224"
  "\001\n\017TPMsgGameResult\022\020\n\010game_tax\030\001 \001(\005\022\022\n\n"
  "game_score\030\002 \003(\003\022\021\n\tcard_type\030\003 \003(\005\0225\n\014p"
  "layer_hands\030\004 \003(\0132\037.TeenPatti_India.TPMs"
  "gHandCards\022\021\n\tend_state\030\005 \001(\005\"5\n\024TPMSgNo"
  "tifyPlayerAct\022\020\n\010chair_id\030\001 \001(\005\022\013\n\003act\030\002"
  " \001(\005*g\n\014ETPGameState\022\017\n\013GS_TP_READY\020\000\022\016\n"
  "\nGS_TP_DEAL\020\001\022\021\n\rGS_TP_PLAYING\020\002\022\021\n\rGS_T"
  "P_COMPARE\020\003\022\020\n\014GS_TP_RESULT\020\004*E\n\016ETPPlay"
  "erState\022\014\n\010PS_READY\020\000\022\013\n\007PS_PLAY\020\001\022\013\n\007PS"
  "_GIVE\020\002\022\013\n\007PS_FAIL\020\003*\207\001\n\013ETPCardType\022\r\n\t"
  "CT_SINGLE\020\000\022\r\n\tCT_DOUBLE\020\001\022\016\n\nCT_JIN_HUA"
  "\020\002\022\016\n\nCT_SHUN_ZI\020\003\022\017\n\013CT_SHUN_JIN\020\004\022\r\n\tC"
  "T_BAO_ZI\020\005\022\016\n\nCT_SPECIAL\020\006\022\n\n\006CT_MAX\020\007*\204"
  "\001\n\rETPGameAction\022\r\n\tInvaldAct\020\000\022\n\n\006GiveU"
  "p\020\001\022\014\n\010LookCard\020\002\022\013\n\007CallBet\020\004\022\n\n\006AddBet"
  "\020\010\022\017\n\013CompareCard\020\020\022\020\n\014CompareReply\020 \022\016\n"
  "\nAllCompare\020@*\275\004\n\017ETPMsgIDSubGame\022\025\n\021Msg"
  "IDSubGame_Null\020\000\022\036\n\032MsgIDSubGame_GameSta"
  "rtResp\020\001\022!\n\035MsgIDSubGame_NotifyActionRes"
  "p\020\002\022\027\n\023MsgIDSubGame_Action\020\003\022\033\n\027MsgIDSub"
  "Game_GiveUpResp\020\004\022\031\n\025MsgIDSubGame_LookCa"
  "rd\020\005\022\033\n\027MsgIDSubGame_AddBetResp\020\006\022 \n\034Msg"
  "IDSubGame_CompareCardResp\020\007\022\037\n\033MsgIDSubG"
  "ame_CompareRetResp\020\010\022\037\n\033MsgIDSubGame_Gam"
  "eResultResp\020\t\022 \n\034MsgIDSubGame_NotifyStat"
  "eResp\020\n\022&\n\"MsgIDSubGame_NotifySystemChea"
  "tResp\020\024\022#\n\037MsgIDSubGame_NotifyCardTypeRe"
  "sp\020\025\022 \n\034MsgIDSubGame_NotifyIsMaxResp\020\026\022\'"
  "\n#MsgIDSubGame_NotifyRemainDoubleResp\020\027\022"
  " \n\034MsgIDSubGame_NotifyRoundResp\020\030\022\"\n\036Msg"
  "IDSubGame_NotifyLastActResp\020\031b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_TeenPatti_5fIndia_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_TeenPatti_5fIndia_2eproto_sccs[14] = {
  &scc_info_TPMSgNotifyPlayerAct_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgAction_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgAddBetResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgCompareCardResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgCompareCardRetResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgGameResult_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgGameStartResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgGiveUpResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgLookCardResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgNotifyActionResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgSceneInfo_TeenPatti_5fIndia_2eproto.base,
  &scc_info_TPMsgTableState_TeenPatti_5fIndia_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_TeenPatti_5fIndia_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TeenPatti_5fIndia_2eproto = {
  false, false, descriptor_table_protodef_TeenPatti_5fIndia_2eproto, "TeenPatti_India.proto", 2837,
  &descriptor_table_TeenPatti_5fIndia_2eproto_once, descriptor_table_TeenPatti_5fIndia_2eproto_sccs, descriptor_table_TeenPatti_5fIndia_2eproto_deps, 14, 0,
  schemas, file_default_instances, TableStruct_TeenPatti_5fIndia_2eproto::offsets,
  file_level_metadata_TeenPatti_5fIndia_2eproto, 14, file_level_enum_descriptors_TeenPatti_5fIndia_2eproto, file_level_service_descriptors_TeenPatti_5fIndia_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_TeenPatti_5fIndia_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto)), true);
namespace TeenPatti_India {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETPGameState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto);
  return file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[0];
}
bool ETPGameState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETPPlayerState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto);
  return file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[1];
}
bool ETPPlayerState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETPCardType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto);
  return file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[2];
}
bool ETPCardType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETPGameAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto);
  return file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[3];
}
bool ETPGameAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETPMsgIDSubGame_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto);
  return file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[4];
}
bool ETPMsgIDSubGame_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class TPMsgTableState::_Internal {
 public:
};

TPMsgTableState::TPMsgTableState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgTableState)
}
TPMsgTableState::TPMsgTableState(const TPMsgTableState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&out_ime_) -
    reinterpret_cast<char*>(&state_)) + sizeof(out_ime_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgTableState)
}

void TPMsgTableState::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&state_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&out_ime_) -
      reinterpret_cast<char*>(&state_)) + sizeof(out_ime_));
}

TPMsgTableState::~TPMsgTableState() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgTableState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgTableState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgTableState::ArenaDtor(void* object) {
  TPMsgTableState* _this = reinterpret_cast< TPMsgTableState* >(object);
  (void)_this;
}
void TPMsgTableState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgTableState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgTableState& TPMsgTableState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgTableState_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgTableState::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgTableState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&out_ime_) -
      reinterpret_cast<char*>(&state_)) + sizeof(out_ime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgTableState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 out_ime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          out_ime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgTableState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgTableState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 state = 1;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_state(), target);
  }

  // int32 out_ime = 2;
  if (this->out_ime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_out_ime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgTableState)
  return target;
}

size_t TPMsgTableState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgTableState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_state());
  }

  // int32 out_ime = 2;
  if (this->out_ime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_out_ime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgTableState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgTableState)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgTableState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgTableState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgTableState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgTableState)
    MergeFrom(*source);
  }
}

void TPMsgTableState::MergeFrom(const TPMsgTableState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgTableState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
  if (from.out_ime() != 0) {
    _internal_set_out_ime(from._internal_out_ime());
  }
}

void TPMsgTableState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgTableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgTableState::CopyFrom(const TPMsgTableState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgTableState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgTableState::IsInitialized() const {
  return true;
}

void TPMsgTableState::InternalSwap(TPMsgTableState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgTableState, out_ime_)
      + sizeof(TPMsgTableState::out_ime_)
      - PROTOBUF_FIELD_OFFSET(TPMsgTableState, state_)>(
          reinterpret_cast<char*>(&state_),
          reinterpret_cast<char*>(&other->state_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgTableState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgHandCards::_Internal {
 public:
};

TPMsgHandCards::TPMsgHandCards(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgHandCards)
}
TPMsgHandCards::TPMsgHandCards(const TPMsgHandCards& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgHandCards)
}

void TPMsgHandCards::SharedCtor() {
}

TPMsgHandCards::~TPMsgHandCards() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgHandCards)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgHandCards::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgHandCards::ArenaDtor(void* object) {
  TPMsgHandCards* _this = reinterpret_cast< TPMsgHandCards* >(object);
  (void)_this;
}
void TPMsgHandCards::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgHandCards::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgHandCards& TPMsgHandCards::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgHandCards_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgHandCards::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgHandCards)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgHandCards::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 cards = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_cards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_cards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgHandCards::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgHandCards)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 cards = 1;
  {
    int byte_size = _cards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_cards(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgHandCards)
  return target;
}

size_t TPMsgHandCards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgHandCards)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 cards = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _cards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgHandCards::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgHandCards)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgHandCards* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgHandCards>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgHandCards)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgHandCards)
    MergeFrom(*source);
  }
}

void TPMsgHandCards::MergeFrom(const TPMsgHandCards& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgHandCards)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
}

void TPMsgHandCards::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgHandCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgHandCards::CopyFrom(const TPMsgHandCards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgHandCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgHandCards::IsInitialized() const {
  return true;
}

void TPMsgHandCards::InternalSwap(TPMsgHandCards* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cards_.InternalSwap(&other->cards_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgHandCards::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgPlayerInfo::_Internal {
 public:
  static const ::TeenPatti_India::TPMsgHandCards& handls(const TPMsgPlayerInfo* msg);
};

const ::TeenPatti_India::TPMsgHandCards&
TPMsgPlayerInfo::_Internal::handls(const TPMsgPlayerInfo* msg) {
  return *msg->handls_;
}
TPMsgPlayerInfo::TPMsgPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgPlayerInfo)
}
TPMsgPlayerInfo::TPMsgPlayerInfo(const TPMsgPlayerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_handls()) {
    handls_ = new ::TeenPatti_India::TPMsgHandCards(*from.handls_);
  } else {
    handls_ = nullptr;
  }
  ::memcpy(&chair_id_, &from.chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&win_gold_) -
    reinterpret_cast<char*>(&chair_id_)) + sizeof(win_gold_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgPlayerInfo)
}

void TPMsgPlayerInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&handls_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&win_gold_) -
      reinterpret_cast<char*>(&handls_)) + sizeof(win_gold_));
}

TPMsgPlayerInfo::~TPMsgPlayerInfo() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgPlayerInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgPlayerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete handls_;
}

void TPMsgPlayerInfo::ArenaDtor(void* object) {
  TPMsgPlayerInfo* _this = reinterpret_cast< TPMsgPlayerInfo* >(object);
  (void)_this;
}
void TPMsgPlayerInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgPlayerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgPlayerInfo& TPMsgPlayerInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgPlayerInfo_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgPlayerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && handls_ != nullptr) {
    delete handls_;
  }
  handls_ = nullptr;
  ::memset(&chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&win_gold_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(win_gold_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgPlayerInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool ming_zhu = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ming_zhu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 play_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          play_status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 player_bet = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          player_bet_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 last_bet = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          last_bet_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          card_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 gold = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          gold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 win_gold = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          win_gold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .TeenPatti_India.TPMsgHandCards handls = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_handls(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgPlayerInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgPlayerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  // bool ming_zhu = 2;
  if (this->ming_zhu() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_ming_zhu(), target);
  }

  // int32 play_status = 3;
  if (this->play_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_play_status(), target);
  }

  // int64 player_bet = 4;
  if (this->player_bet() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_player_bet(), target);
  }

  // int64 last_bet = 5;
  if (this->last_bet() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_last_bet(), target);
  }

  // int32 card_type = 6;
  if (this->card_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_card_type(), target);
  }

  // int64 gold = 7;
  if (this->gold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_gold(), target);
  }

  // int64 win_gold = 8;
  if (this->win_gold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_win_gold(), target);
  }

  // .TeenPatti_India.TPMsgHandCards handls = 9;
  if (this->has_handls()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::handls(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgPlayerInfo)
  return target;
}

size_t TPMsgPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgPlayerInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .TeenPatti_India.TPMsgHandCards handls = 9;
  if (this->has_handls()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *handls_);
  }

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  // bool ming_zhu = 2;
  if (this->ming_zhu() != 0) {
    total_size += 1 + 1;
  }

  // int64 player_bet = 4;
  if (this->player_bet() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_player_bet());
  }

  // int32 play_status = 3;
  if (this->play_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_play_status());
  }

  // int32 card_type = 6;
  if (this->card_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_type());
  }

  // int64 last_bet = 5;
  if (this->last_bet() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_last_bet());
  }

  // int64 gold = 7;
  if (this->gold() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_gold());
  }

  // int64 win_gold = 8;
  if (this->win_gold() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_win_gold());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgPlayerInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgPlayerInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgPlayerInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgPlayerInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgPlayerInfo)
    MergeFrom(*source);
  }
}

void TPMsgPlayerInfo::MergeFrom(const TPMsgPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgPlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_handls()) {
    _internal_mutable_handls()->::TeenPatti_India::TPMsgHandCards::MergeFrom(from._internal_handls());
  }
  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
  if (from.ming_zhu() != 0) {
    _internal_set_ming_zhu(from._internal_ming_zhu());
  }
  if (from.player_bet() != 0) {
    _internal_set_player_bet(from._internal_player_bet());
  }
  if (from.play_status() != 0) {
    _internal_set_play_status(from._internal_play_status());
  }
  if (from.card_type() != 0) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from.last_bet() != 0) {
    _internal_set_last_bet(from._internal_last_bet());
  }
  if (from.gold() != 0) {
    _internal_set_gold(from._internal_gold());
  }
  if (from.win_gold() != 0) {
    _internal_set_win_gold(from._internal_win_gold());
  }
}

void TPMsgPlayerInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgPlayerInfo::CopyFrom(const TPMsgPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgPlayerInfo::IsInitialized() const {
  return true;
}

void TPMsgPlayerInfo::InternalSwap(TPMsgPlayerInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgPlayerInfo, win_gold_)
      + sizeof(TPMsgPlayerInfo::win_gold_)
      - PROTOBUF_FIELD_OFFSET(TPMsgPlayerInfo, handls_)>(
          reinterpret_cast<char*>(&handls_),
          reinterpret_cast<char*>(&other->handls_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgPlayerInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgSceneInfo::_Internal {
 public:
};

TPMsgSceneInfo::TPMsgSceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  player_infos_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgSceneInfo)
}
TPMsgSceneInfo::TPMsgSceneInfo(const TPMsgSceneInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      player_infos_(from.player_infos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&max_score_, &from.max_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&compare_win_) -
    reinterpret_cast<char*>(&max_score_)) + sizeof(compare_win_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgSceneInfo)
}

void TPMsgSceneInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TPMsgSceneInfo_TeenPatti_5fIndia_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&max_score_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&compare_win_) -
      reinterpret_cast<char*>(&max_score_)) + sizeof(compare_win_));
}

TPMsgSceneInfo::~TPMsgSceneInfo() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgSceneInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgSceneInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgSceneInfo::ArenaDtor(void* object) {
  TPMsgSceneInfo* _this = reinterpret_cast< TPMsgSceneInfo* >(object);
  (void)_this;
}
void TPMsgSceneInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgSceneInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgSceneInfo& TPMsgSceneInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgSceneInfo_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgSceneInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_infos_.Clear();
  ::memset(&max_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compare_win_) -
      reinterpret_cast<char*>(&max_score_)) + sizeof(compare_win_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgSceneInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 max_score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 table_max_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          table_max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 cell_score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cell_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_times = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          cur_times_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 table_state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          table_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 total_bet_score = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          total_bet_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 tax = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          tax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 banker_chair_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          banker_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_chair_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          cur_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_chair_act = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          cur_chair_act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 out_time = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          out_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_user = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          compare_user_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_win = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          compare_win_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .TeenPatti_India.TPMsgPlayerInfo player_infos = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_player_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgSceneInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgSceneInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_score = 1;
  if (this->max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_max_score(), target);
  }

  // int64 table_max_score = 2;
  if (this->table_max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_table_max_score(), target);
  }

  // int64 cell_score = 3;
  if (this->cell_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_cell_score(), target);
  }

  // int32 cur_times = 4;
  if (this->cur_times() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_cur_times(), target);
  }

  // int32 table_state = 5;
  if (this->table_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_table_state(), target);
  }

  // int64 total_bet_score = 6;
  if (this->total_bet_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_total_bet_score(), target);
  }

  // int32 tax = 7;
  if (this->tax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_tax(), target);
  }

  // int32 banker_chair_id = 8;
  if (this->banker_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_banker_chair_id(), target);
  }

  // int32 cur_chair_id = 9;
  if (this->cur_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_cur_chair_id(), target);
  }

  // int32 cur_chair_act = 10;
  if (this->cur_chair_act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_cur_chair_act(), target);
  }

  // int32 out_time = 11;
  if (this->out_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_out_time(), target);
  }

  // int32 compare_user = 12;
  if (this->compare_user() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(12, this->_internal_compare_user(), target);
  }

  // int32 compare_win = 13;
  if (this->compare_win() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_compare_win(), target);
  }

  // repeated .TeenPatti_India.TPMsgPlayerInfo player_infos = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_player_infos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, this->_internal_player_infos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgSceneInfo)
  return target;
}

size_t TPMsgSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgSceneInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TeenPatti_India.TPMsgPlayerInfo player_infos = 14;
  total_size += 1UL * this->_internal_player_infos_size();
  for (const auto& msg : this->player_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 max_score = 1;
  if (this->max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_score());
  }

  // int64 table_max_score = 2;
  if (this->table_max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_table_max_score());
  }

  // int64 cell_score = 3;
  if (this->cell_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_cell_score());
  }

  // int32 cur_times = 4;
  if (this->cur_times() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_times());
  }

  // int32 table_state = 5;
  if (this->table_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_table_state());
  }

  // int64 total_bet_score = 6;
  if (this->total_bet_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_total_bet_score());
  }

  // int32 tax = 7;
  if (this->tax() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tax());
  }

  // int32 banker_chair_id = 8;
  if (this->banker_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_banker_chair_id());
  }

  // int32 cur_chair_id = 9;
  if (this->cur_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_id());
  }

  // int32 cur_chair_act = 10;
  if (this->cur_chair_act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_act());
  }

  // int32 out_time = 11;
  if (this->out_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_out_time());
  }

  // int32 compare_user = 12;
  if (this->compare_user() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_user());
  }

  // int32 compare_win = 13;
  if (this->compare_win() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_win());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgSceneInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgSceneInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgSceneInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgSceneInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgSceneInfo)
    MergeFrom(*source);
  }
}

void TPMsgSceneInfo::MergeFrom(const TPMsgSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_infos_.MergeFrom(from.player_infos_);
  if (from.max_score() != 0) {
    _internal_set_max_score(from._internal_max_score());
  }
  if (from.table_max_score() != 0) {
    _internal_set_table_max_score(from._internal_table_max_score());
  }
  if (from.cell_score() != 0) {
    _internal_set_cell_score(from._internal_cell_score());
  }
  if (from.cur_times() != 0) {
    _internal_set_cur_times(from._internal_cur_times());
  }
  if (from.table_state() != 0) {
    _internal_set_table_state(from._internal_table_state());
  }
  if (from.total_bet_score() != 0) {
    _internal_set_total_bet_score(from._internal_total_bet_score());
  }
  if (from.tax() != 0) {
    _internal_set_tax(from._internal_tax());
  }
  if (from.banker_chair_id() != 0) {
    _internal_set_banker_chair_id(from._internal_banker_chair_id());
  }
  if (from.cur_chair_id() != 0) {
    _internal_set_cur_chair_id(from._internal_cur_chair_id());
  }
  if (from.cur_chair_act() != 0) {
    _internal_set_cur_chair_act(from._internal_cur_chair_act());
  }
  if (from.out_time() != 0) {
    _internal_set_out_time(from._internal_out_time());
  }
  if (from.compare_user() != 0) {
    _internal_set_compare_user(from._internal_compare_user());
  }
  if (from.compare_win() != 0) {
    _internal_set_compare_win(from._internal_compare_win());
  }
}

void TPMsgSceneInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgSceneInfo::CopyFrom(const TPMsgSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgSceneInfo::IsInitialized() const {
  return true;
}

void TPMsgSceneInfo::InternalSwap(TPMsgSceneInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  player_infos_.InternalSwap(&other->player_infos_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgSceneInfo, compare_win_)
      + sizeof(TPMsgSceneInfo::compare_win_)
      - PROTOBUF_FIELD_OFFSET(TPMsgSceneInfo, max_score_)>(
          reinterpret_cast<char*>(&max_score_),
          reinterpret_cast<char*>(&other->max_score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgSceneInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgGameStartResp::_Internal {
 public:
};

TPMsgGameStartResp::TPMsgGameStartResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  play_index_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgGameStartResp)
}
TPMsgGameStartResp::TPMsgGameStartResp(const TPMsgGameStartResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      play_index_(from.play_index_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cur_chair_id_, &from.cur_chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&banker_chair_id_) -
    reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(banker_chair_id_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgGameStartResp)
}

void TPMsgGameStartResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&cur_chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&banker_chair_id_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(banker_chair_id_));
}

TPMsgGameStartResp::~TPMsgGameStartResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgGameStartResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgGameStartResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgGameStartResp::ArenaDtor(void* object) {
  TPMsgGameStartResp* _this = reinterpret_cast< TPMsgGameStartResp* >(object);
  (void)_this;
}
void TPMsgGameStartResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgGameStartResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgGameStartResp& TPMsgGameStartResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgGameStartResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgGameStartResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgGameStartResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  play_index_.Clear();
  ::memset(&cur_chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&banker_chair_id_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(banker_chair_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgGameStartResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cur_chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cur_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_times = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cur_times_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 banker_chair_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          banker_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_blind = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          max_blind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 cell_score = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          cell_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 table_max_score = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          table_max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 play_index = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_play_index(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64) {
          _internal_add_play_index(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgGameStartResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgGameStartResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cur_chair_id(), target);
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cur_times(), target);
  }

  // int32 banker_chair_id = 3;
  if (this->banker_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_banker_chair_id(), target);
  }

  // int64 max_score = 4;
  if (this->max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_max_score(), target);
  }

  // int64 max_blind = 5;
  if (this->max_blind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_max_blind(), target);
  }

  // int64 cell_score = 6;
  if (this->cell_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_cell_score(), target);
  }

  // int64 table_max_score = 7;
  if (this->table_max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_table_max_score(), target);
  }

  // repeated int32 play_index = 8;
  {
    int byte_size = _play_index_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          8, _internal_play_index(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgGameStartResp)
  return target;
}

size_t TPMsgGameStartResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgGameStartResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 play_index = 8;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->play_index_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _play_index_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_id());
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_times());
  }

  // int64 max_score = 4;
  if (this->max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_score());
  }

  // int64 max_blind = 5;
  if (this->max_blind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_blind());
  }

  // int64 cell_score = 6;
  if (this->cell_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_cell_score());
  }

  // int64 table_max_score = 7;
  if (this->table_max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_table_max_score());
  }

  // int32 banker_chair_id = 3;
  if (this->banker_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_banker_chair_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgGameStartResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgGameStartResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgGameStartResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgGameStartResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgGameStartResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgGameStartResp)
    MergeFrom(*source);
  }
}

void TPMsgGameStartResp::MergeFrom(const TPMsgGameStartResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgGameStartResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  play_index_.MergeFrom(from.play_index_);
  if (from.cur_chair_id() != 0) {
    _internal_set_cur_chair_id(from._internal_cur_chair_id());
  }
  if (from.cur_times() != 0) {
    _internal_set_cur_times(from._internal_cur_times());
  }
  if (from.max_score() != 0) {
    _internal_set_max_score(from._internal_max_score());
  }
  if (from.max_blind() != 0) {
    _internal_set_max_blind(from._internal_max_blind());
  }
  if (from.cell_score() != 0) {
    _internal_set_cell_score(from._internal_cell_score());
  }
  if (from.table_max_score() != 0) {
    _internal_set_table_max_score(from._internal_table_max_score());
  }
  if (from.banker_chair_id() != 0) {
    _internal_set_banker_chair_id(from._internal_banker_chair_id());
  }
}

void TPMsgGameStartResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgGameStartResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgGameStartResp::CopyFrom(const TPMsgGameStartResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgGameStartResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgGameStartResp::IsInitialized() const {
  return true;
}

void TPMsgGameStartResp::InternalSwap(TPMsgGameStartResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  play_index_.InternalSwap(&other->play_index_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgGameStartResp, banker_chair_id_)
      + sizeof(TPMsgGameStartResp::banker_chair_id_)
      - PROTOBUF_FIELD_OFFSET(TPMsgGameStartResp, cur_chair_id_)>(
          reinterpret_cast<char*>(&cur_chair_id_),
          reinterpret_cast<char*>(&other->cur_chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgGameStartResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgNotifyActionResp::_Internal {
 public:
};

TPMsgNotifyActionResp::TPMsgNotifyActionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgNotifyActionResp)
}
TPMsgNotifyActionResp::TPMsgNotifyActionResp(const TPMsgNotifyActionResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cur_chair_id_, &from.cur_chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&oper_time_) -
    reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(oper_time_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgNotifyActionResp)
}

void TPMsgNotifyActionResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&cur_chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&oper_time_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(oper_time_));
}

TPMsgNotifyActionResp::~TPMsgNotifyActionResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgNotifyActionResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgNotifyActionResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgNotifyActionResp::ArenaDtor(void* object) {
  TPMsgNotifyActionResp* _this = reinterpret_cast< TPMsgNotifyActionResp* >(object);
  (void)_this;
}
void TPMsgNotifyActionResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgNotifyActionResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgNotifyActionResp& TPMsgNotifyActionResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgNotifyActionResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgNotifyActionResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgNotifyActionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cur_chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_time_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(oper_time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgNotifyActionResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cur_chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cur_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_times = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cur_times_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 current_act = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          current_act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 oper_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          oper_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgNotifyActionResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgNotifyActionResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cur_chair_id(), target);
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cur_times(), target);
  }

  // int32 current_act = 3;
  if (this->current_act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_current_act(), target);
  }

  // int32 oper_time = 4;
  if (this->oper_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_oper_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgNotifyActionResp)
  return target;
}

size_t TPMsgNotifyActionResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgNotifyActionResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_id());
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_times());
  }

  // int32 current_act = 3;
  if (this->current_act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current_act());
  }

  // int32 oper_time = 4;
  if (this->oper_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_oper_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgNotifyActionResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgNotifyActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgNotifyActionResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgNotifyActionResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgNotifyActionResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgNotifyActionResp)
    MergeFrom(*source);
  }
}

void TPMsgNotifyActionResp::MergeFrom(const TPMsgNotifyActionResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgNotifyActionResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cur_chair_id() != 0) {
    _internal_set_cur_chair_id(from._internal_cur_chair_id());
  }
  if (from.cur_times() != 0) {
    _internal_set_cur_times(from._internal_cur_times());
  }
  if (from.current_act() != 0) {
    _internal_set_current_act(from._internal_current_act());
  }
  if (from.oper_time() != 0) {
    _internal_set_oper_time(from._internal_oper_time());
  }
}

void TPMsgNotifyActionResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgNotifyActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgNotifyActionResp::CopyFrom(const TPMsgNotifyActionResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgNotifyActionResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgNotifyActionResp::IsInitialized() const {
  return true;
}

void TPMsgNotifyActionResp::InternalSwap(TPMsgNotifyActionResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgNotifyActionResp, oper_time_)
      + sizeof(TPMsgNotifyActionResp::oper_time_)
      - PROTOBUF_FIELD_OFFSET(TPMsgNotifyActionResp, cur_chair_id_)>(
          reinterpret_cast<char*>(&cur_chair_id_),
          reinterpret_cast<char*>(&other->cur_chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgNotifyActionResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgAction::_Internal {
 public:
};

TPMsgAction::TPMsgAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgAction)
}
TPMsgAction::TPMsgAction(const TPMsgAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&bet_score_, &from.bet_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&compare_user_) -
    reinterpret_cast<char*>(&bet_score_)) + sizeof(compare_user_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgAction)
}

void TPMsgAction::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&bet_score_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&compare_user_) -
      reinterpret_cast<char*>(&bet_score_)) + sizeof(compare_user_));
}

TPMsgAction::~TPMsgAction() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgAction::ArenaDtor(void* object) {
  TPMsgAction* _this = reinterpret_cast< TPMsgAction* >(object);
  (void)_this;
}
void TPMsgAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgAction& TPMsgAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgAction_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgAction::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bet_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compare_user_) -
      reinterpret_cast<char*>(&bet_score_)) + sizeof(compare_user_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 act = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 bet_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          bet_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 compare_user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          compare_user_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_ok = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          is_ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 act = 1;
  if (this->act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_act(), target);
  }

  // int64 bet_score = 2;
  if (this->bet_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_bet_score(), target);
  }

  // int64 compare_user = 3;
  if (this->compare_user() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_compare_user(), target);
  }

  // bool is_ok = 4;
  if (this->is_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgAction)
  return target;
}

size_t TPMsgAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 bet_score = 2;
  if (this->bet_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_bet_score());
  }

  // int32 act = 1;
  if (this->act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_act());
  }

  // bool is_ok = 4;
  if (this->is_ok() != 0) {
    total_size += 1 + 1;
  }

  // int64 compare_user = 3;
  if (this->compare_user() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_compare_user());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgAction)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgAction)
    MergeFrom(*source);
  }
}

void TPMsgAction::MergeFrom(const TPMsgAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bet_score() != 0) {
    _internal_set_bet_score(from._internal_bet_score());
  }
  if (from.act() != 0) {
    _internal_set_act(from._internal_act());
  }
  if (from.is_ok() != 0) {
    _internal_set_is_ok(from._internal_is_ok());
  }
  if (from.compare_user() != 0) {
    _internal_set_compare_user(from._internal_compare_user());
  }
}

void TPMsgAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgAction::CopyFrom(const TPMsgAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgAction::IsInitialized() const {
  return true;
}

void TPMsgAction::InternalSwap(TPMsgAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgAction, compare_user_)
      + sizeof(TPMsgAction::compare_user_)
      - PROTOBUF_FIELD_OFFSET(TPMsgAction, bet_score_)>(
          reinterpret_cast<char*>(&bet_score_),
          reinterpret_cast<char*>(&other->bet_score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgGiveUpResp::_Internal {
 public:
};

TPMsgGiveUpResp::TPMsgGiveUpResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgGiveUpResp)
}
TPMsgGiveUpResp::TPMsgGiveUpResp(const TPMsgGiveUpResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chair_id_ = from.chair_id_;
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgGiveUpResp)
}

void TPMsgGiveUpResp::SharedCtor() {
  chair_id_ = 0;
}

TPMsgGiveUpResp::~TPMsgGiveUpResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgGiveUpResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgGiveUpResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgGiveUpResp::ArenaDtor(void* object) {
  TPMsgGiveUpResp* _this = reinterpret_cast< TPMsgGiveUpResp* >(object);
  (void)_this;
}
void TPMsgGiveUpResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgGiveUpResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgGiveUpResp& TPMsgGiveUpResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgGiveUpResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgGiveUpResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgGiveUpResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chair_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgGiveUpResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgGiveUpResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgGiveUpResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgGiveUpResp)
  return target;
}

size_t TPMsgGiveUpResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgGiveUpResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgGiveUpResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgGiveUpResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgGiveUpResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgGiveUpResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgGiveUpResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgGiveUpResp)
    MergeFrom(*source);
  }
}

void TPMsgGiveUpResp::MergeFrom(const TPMsgGiveUpResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgGiveUpResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
}

void TPMsgGiveUpResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgGiveUpResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgGiveUpResp::CopyFrom(const TPMsgGiveUpResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgGiveUpResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgGiveUpResp::IsInitialized() const {
  return true;
}

void TPMsgGiveUpResp::InternalSwap(TPMsgGiveUpResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(chair_id_, other->chair_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgGiveUpResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgLookCardResp::_Internal {
 public:
};

TPMsgLookCardResp::TPMsgLookCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgLookCardResp)
}
TPMsgLookCardResp::TPMsgLookCardResp(const TPMsgLookCardResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_act_) -
    reinterpret_cast<char*>(&chair_id_)) + sizeof(new_act_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgLookCardResp)
}

void TPMsgLookCardResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&new_act_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(new_act_));
}

TPMsgLookCardResp::~TPMsgLookCardResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgLookCardResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgLookCardResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgLookCardResp::ArenaDtor(void* object) {
  TPMsgLookCardResp* _this = reinterpret_cast< TPMsgLookCardResp* >(object);
  (void)_this;
}
void TPMsgLookCardResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgLookCardResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgLookCardResp& TPMsgLookCardResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgLookCardResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgLookCardResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgLookCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  ::memset(&chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_act_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(new_act_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgLookCardResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 card_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          card_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_chair_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cur_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 new_act = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          new_act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 cards = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_cards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_cards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgLookCardResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgLookCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  // int32 card_type = 2;
  if (this->card_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_card_type(), target);
  }

  // int32 cur_chair_id = 3;
  if (this->cur_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_cur_chair_id(), target);
  }

  // int32 new_act = 4;
  if (this->new_act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_new_act(), target);
  }

  // repeated int32 cards = 5;
  {
    int byte_size = _cards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_cards(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgLookCardResp)
  return target;
}

size_t TPMsgLookCardResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgLookCardResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 cards = 5;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _cards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  // int32 card_type = 2;
  if (this->card_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_card_type());
  }

  // int32 cur_chair_id = 3;
  if (this->cur_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_id());
  }

  // int32 new_act = 4;
  if (this->new_act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_new_act());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgLookCardResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgLookCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgLookCardResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgLookCardResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgLookCardResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgLookCardResp)
    MergeFrom(*source);
  }
}

void TPMsgLookCardResp::MergeFrom(const TPMsgLookCardResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgLookCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
  if (from.card_type() != 0) {
    _internal_set_card_type(from._internal_card_type());
  }
  if (from.cur_chair_id() != 0) {
    _internal_set_cur_chair_id(from._internal_cur_chair_id());
  }
  if (from.new_act() != 0) {
    _internal_set_new_act(from._internal_new_act());
  }
}

void TPMsgLookCardResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgLookCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgLookCardResp::CopyFrom(const TPMsgLookCardResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgLookCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgLookCardResp::IsInitialized() const {
  return true;
}

void TPMsgLookCardResp::InternalSwap(TPMsgLookCardResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cards_.InternalSwap(&other->cards_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgLookCardResp, new_act_)
      + sizeof(TPMsgLookCardResp::new_act_)
      - PROTOBUF_FIELD_OFFSET(TPMsgLookCardResp, chair_id_)>(
          reinterpret_cast<char*>(&chair_id_),
          reinterpret_cast<char*>(&other->chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgLookCardResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgAddBetResp::_Internal {
 public:
};

TPMsgAddBetResp::TPMsgAddBetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgAddBetResp)
}
TPMsgAddBetResp::TPMsgAddBetResp(const TPMsgAddBetResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&add_score_, &from.add_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&add_chair_id_) -
    reinterpret_cast<char*>(&add_score_)) + sizeof(add_chair_id_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgAddBetResp)
}

void TPMsgAddBetResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&add_score_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&add_chair_id_) -
      reinterpret_cast<char*>(&add_score_)) + sizeof(add_chair_id_));
}

TPMsgAddBetResp::~TPMsgAddBetResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgAddBetResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgAddBetResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgAddBetResp::ArenaDtor(void* object) {
  TPMsgAddBetResp* _this = reinterpret_cast< TPMsgAddBetResp* >(object);
  (void)_this;
}
void TPMsgAddBetResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgAddBetResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgAddBetResp& TPMsgAddBetResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgAddBetResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgAddBetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgAddBetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&add_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_chair_id_) -
      reinterpret_cast<char*>(&add_score_)) + sizeof(add_chair_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgAddBetResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 add_chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          add_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 add_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          add_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 bet_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          bet_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgAddBetResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgAddBetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 add_chair_id = 1;
  if (this->add_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_add_chair_id(), target);
  }

  // int64 add_score = 2;
  if (this->add_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_add_score(), target);
  }

  // int64 bet_type = 3;
  if (this->bet_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_bet_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgAddBetResp)
  return target;
}

size_t TPMsgAddBetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgAddBetResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 add_score = 2;
  if (this->add_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_add_score());
  }

  // int64 bet_type = 3;
  if (this->bet_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_bet_type());
  }

  // int32 add_chair_id = 1;
  if (this->add_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_add_chair_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgAddBetResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgAddBetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgAddBetResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgAddBetResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgAddBetResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgAddBetResp)
    MergeFrom(*source);
  }
}

void TPMsgAddBetResp::MergeFrom(const TPMsgAddBetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgAddBetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.add_score() != 0) {
    _internal_set_add_score(from._internal_add_score());
  }
  if (from.bet_type() != 0) {
    _internal_set_bet_type(from._internal_bet_type());
  }
  if (from.add_chair_id() != 0) {
    _internal_set_add_chair_id(from._internal_add_chair_id());
  }
}

void TPMsgAddBetResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgAddBetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgAddBetResp::CopyFrom(const TPMsgAddBetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgAddBetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgAddBetResp::IsInitialized() const {
  return true;
}

void TPMsgAddBetResp::InternalSwap(TPMsgAddBetResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgAddBetResp, add_chair_id_)
      + sizeof(TPMsgAddBetResp::add_chair_id_)
      - PROTOBUF_FIELD_OFFSET(TPMsgAddBetResp, add_score_)>(
          reinterpret_cast<char*>(&add_score_),
          reinterpret_cast<char*>(&other->add_score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgAddBetResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgCompareCardResp::_Internal {
 public:
};

TPMsgCompareCardResp::TPMsgCompareCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgCompareCardResp)
}
TPMsgCompareCardResp::TPMsgCompareCardResp(const TPMsgCompareCardResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&compare_id_) -
    reinterpret_cast<char*>(&chair_id_)) + sizeof(compare_id_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgCompareCardResp)
}

void TPMsgCompareCardResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&compare_id_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(compare_id_));
}

TPMsgCompareCardResp::~TPMsgCompareCardResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgCompareCardResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgCompareCardResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgCompareCardResp::ArenaDtor(void* object) {
  TPMsgCompareCardResp* _this = reinterpret_cast< TPMsgCompareCardResp* >(object);
  (void)_this;
}
void TPMsgCompareCardResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgCompareCardResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgCompareCardResp& TPMsgCompareCardResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgCompareCardResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgCompareCardResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgCompareCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compare_id_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(compare_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgCompareCardResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          compare_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgCompareCardResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgCompareCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  // int32 compare_id = 2;
  if (this->compare_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_compare_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgCompareCardResp)
  return target;
}

size_t TPMsgCompareCardResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgCompareCardResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  // int32 compare_id = 2;
  if (this->compare_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgCompareCardResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgCompareCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgCompareCardResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgCompareCardResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgCompareCardResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgCompareCardResp)
    MergeFrom(*source);
  }
}

void TPMsgCompareCardResp::MergeFrom(const TPMsgCompareCardResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgCompareCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
  if (from.compare_id() != 0) {
    _internal_set_compare_id(from._internal_compare_id());
  }
}

void TPMsgCompareCardResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgCompareCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgCompareCardResp::CopyFrom(const TPMsgCompareCardResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgCompareCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgCompareCardResp::IsInitialized() const {
  return true;
}

void TPMsgCompareCardResp::InternalSwap(TPMsgCompareCardResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgCompareCardResp, compare_id_)
      + sizeof(TPMsgCompareCardResp::compare_id_)
      - PROTOBUF_FIELD_OFFSET(TPMsgCompareCardResp, chair_id_)>(
          reinterpret_cast<char*>(&chair_id_),
          reinterpret_cast<char*>(&other->chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgCompareCardResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgCompareCardRetResp::_Internal {
 public:
};

TPMsgCompareCardRetResp::TPMsgCompareCardRetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  compare_cards_(arena),
  passive_cards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgCompareCardRetResp)
}
TPMsgCompareCardRetResp::TPMsgCompareCardRetResp(const TPMsgCompareCardRetResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      compare_cards_(from.compare_cards_),
      passive_cards_(from.passive_cards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&current_chair_id_, &from.current_chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_agree_) -
    reinterpret_cast<char*>(&current_chair_id_)) + sizeof(is_agree_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgCompareCardRetResp)
}

void TPMsgCompareCardRetResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&current_chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&is_agree_) -
      reinterpret_cast<char*>(&current_chair_id_)) + sizeof(is_agree_));
}

TPMsgCompareCardRetResp::~TPMsgCompareCardRetResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgCompareCardRetResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgCompareCardRetResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgCompareCardRetResp::ArenaDtor(void* object) {
  TPMsgCompareCardRetResp* _this = reinterpret_cast< TPMsgCompareCardRetResp* >(object);
  (void)_this;
}
void TPMsgCompareCardRetResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgCompareCardRetResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgCompareCardRetResp& TPMsgCompareCardRetResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgCompareCardRetResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgCompareCardRetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgCompareCardRetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compare_cards_.Clear();
  passive_cards_.Clear();
  ::memset(&current_chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agree_) -
      reinterpret_cast<char*>(&current_chair_id_)) + sizeof(is_agree_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgCompareCardRetResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 current_chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          current_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 current_act = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          current_act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 lost_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lost_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          compare_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 passive_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          passive_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          compare_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 passive_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          passive_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 compare_cards = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_compare_cards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64) {
          _internal_add_compare_cards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 passive_cards = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_passive_cards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72) {
          _internal_add_passive_cards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_agree = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          is_agree_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgCompareCardRetResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgCompareCardRetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 current_chair_id = 1;
  if (this->current_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_current_chair_id(), target);
  }

  // int32 current_act = 2;
  if (this->current_act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_current_act(), target);
  }

  // int32 lost_id = 3;
  if (this->lost_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_lost_id(), target);
  }

  // int32 compare_id = 4;
  if (this->compare_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_compare_id(), target);
  }

  // int32 passive_id = 5;
  if (this->passive_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_passive_id(), target);
  }

  // int32 compare_type = 6;
  if (this->compare_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_compare_type(), target);
  }

  // int32 passive_type = 7;
  if (this->passive_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_passive_type(), target);
  }

  // repeated int32 compare_cards = 8;
  {
    int byte_size = _compare_cards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          8, _internal_compare_cards(), byte_size, target);
    }
  }

  // repeated int32 passive_cards = 9;
  {
    int byte_size = _passive_cards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          9, _internal_passive_cards(), byte_size, target);
    }
  }

  // bool is_agree = 10;
  if (this->is_agree() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_is_agree(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgCompareCardRetResp)
  return target;
}

size_t TPMsgCompareCardRetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgCompareCardRetResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 compare_cards = 8;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->compare_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _compare_cards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 passive_cards = 9;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->passive_cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _passive_cards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 current_chair_id = 1;
  if (this->current_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current_chair_id());
  }

  // int32 current_act = 2;
  if (this->current_act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current_act());
  }

  // int32 lost_id = 3;
  if (this->lost_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lost_id());
  }

  // int32 compare_id = 4;
  if (this->compare_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_id());
  }

  // int32 passive_id = 5;
  if (this->passive_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_passive_id());
  }

  // int32 compare_type = 6;
  if (this->compare_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_type());
  }

  // int32 passive_type = 7;
  if (this->passive_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_passive_type());
  }

  // bool is_agree = 10;
  if (this->is_agree() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgCompareCardRetResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgCompareCardRetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgCompareCardRetResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgCompareCardRetResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgCompareCardRetResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgCompareCardRetResp)
    MergeFrom(*source);
  }
}

void TPMsgCompareCardRetResp::MergeFrom(const TPMsgCompareCardRetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgCompareCardRetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  compare_cards_.MergeFrom(from.compare_cards_);
  passive_cards_.MergeFrom(from.passive_cards_);
  if (from.current_chair_id() != 0) {
    _internal_set_current_chair_id(from._internal_current_chair_id());
  }
  if (from.current_act() != 0) {
    _internal_set_current_act(from._internal_current_act());
  }
  if (from.lost_id() != 0) {
    _internal_set_lost_id(from._internal_lost_id());
  }
  if (from.compare_id() != 0) {
    _internal_set_compare_id(from._internal_compare_id());
  }
  if (from.passive_id() != 0) {
    _internal_set_passive_id(from._internal_passive_id());
  }
  if (from.compare_type() != 0) {
    _internal_set_compare_type(from._internal_compare_type());
  }
  if (from.passive_type() != 0) {
    _internal_set_passive_type(from._internal_passive_type());
  }
  if (from.is_agree() != 0) {
    _internal_set_is_agree(from._internal_is_agree());
  }
}

void TPMsgCompareCardRetResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgCompareCardRetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgCompareCardRetResp::CopyFrom(const TPMsgCompareCardRetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgCompareCardRetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgCompareCardRetResp::IsInitialized() const {
  return true;
}

void TPMsgCompareCardRetResp::InternalSwap(TPMsgCompareCardRetResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  compare_cards_.InternalSwap(&other->compare_cards_);
  passive_cards_.InternalSwap(&other->passive_cards_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgCompareCardRetResp, is_agree_)
      + sizeof(TPMsgCompareCardRetResp::is_agree_)
      - PROTOBUF_FIELD_OFFSET(TPMsgCompareCardRetResp, current_chair_id_)>(
          reinterpret_cast<char*>(&current_chair_id_),
          reinterpret_cast<char*>(&other->current_chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgCompareCardRetResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMsgGameResult::_Internal {
 public:
};

TPMsgGameResult::TPMsgGameResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  game_score_(arena),
  card_type_(arena),
  player_hands_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMsgGameResult)
}
TPMsgGameResult::TPMsgGameResult(const TPMsgGameResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      game_score_(from.game_score_),
      card_type_(from.card_type_),
      player_hands_(from.player_hands_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&game_tax_, &from.game_tax_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_state_) -
    reinterpret_cast<char*>(&game_tax_)) + sizeof(end_state_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMsgGameResult)
}

void TPMsgGameResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TPMsgGameResult_TeenPatti_5fIndia_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&game_tax_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&end_state_) -
      reinterpret_cast<char*>(&game_tax_)) + sizeof(end_state_));
}

TPMsgGameResult::~TPMsgGameResult() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMsgGameResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMsgGameResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMsgGameResult::ArenaDtor(void* object) {
  TPMsgGameResult* _this = reinterpret_cast< TPMsgGameResult* >(object);
  (void)_this;
}
void TPMsgGameResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMsgGameResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMsgGameResult& TPMsgGameResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMsgGameResult_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMsgGameResult::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMsgGameResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  game_score_.Clear();
  card_type_.Clear();
  player_hands_.Clear();
  ::memset(&game_tax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_state_) -
      reinterpret_cast<char*>(&game_tax_)) + sizeof(end_state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMsgGameResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 game_tax = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          game_tax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 game_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_game_score(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_game_score(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 card_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_card_type(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_card_type(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .TeenPatti_India.TPMsgHandCards player_hands = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_player_hands(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 end_state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          end_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMsgGameResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMsgGameResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 game_tax = 1;
  if (this->game_tax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_game_tax(), target);
  }

  // repeated int64 game_score = 2;
  {
    int byte_size = _game_score_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_game_score(), byte_size, target);
    }
  }

  // repeated int32 card_type = 3;
  {
    int byte_size = _card_type_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_card_type(), byte_size, target);
    }
  }

  // repeated .TeenPatti_India.TPMsgHandCards player_hands = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_player_hands_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_player_hands(i), target, stream);
  }

  // int32 end_state = 5;
  if (this->end_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_end_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMsgGameResult)
  return target;
}

size_t TPMsgGameResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMsgGameResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 game_score = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->game_score_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _game_score_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 card_type = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->card_type_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _card_type_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .TeenPatti_India.TPMsgHandCards player_hands = 4;
  total_size += 1UL * this->_internal_player_hands_size();
  for (const auto& msg : this->player_hands_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 game_tax = 1;
  if (this->game_tax() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_game_tax());
  }

  // int32 end_state = 5;
  if (this->end_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_end_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMsgGameResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMsgGameResult)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMsgGameResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMsgGameResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMsgGameResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMsgGameResult)
    MergeFrom(*source);
  }
}

void TPMsgGameResult::MergeFrom(const TPMsgGameResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMsgGameResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  game_score_.MergeFrom(from.game_score_);
  card_type_.MergeFrom(from.card_type_);
  player_hands_.MergeFrom(from.player_hands_);
  if (from.game_tax() != 0) {
    _internal_set_game_tax(from._internal_game_tax());
  }
  if (from.end_state() != 0) {
    _internal_set_end_state(from._internal_end_state());
  }
}

void TPMsgGameResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMsgGameResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMsgGameResult::CopyFrom(const TPMsgGameResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMsgGameResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMsgGameResult::IsInitialized() const {
  return true;
}

void TPMsgGameResult::InternalSwap(TPMsgGameResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  game_score_.InternalSwap(&other->game_score_);
  card_type_.InternalSwap(&other->card_type_);
  player_hands_.InternalSwap(&other->player_hands_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMsgGameResult, end_state_)
      + sizeof(TPMsgGameResult::end_state_)
      - PROTOBUF_FIELD_OFFSET(TPMsgGameResult, game_tax_)>(
          reinterpret_cast<char*>(&game_tax_),
          reinterpret_cast<char*>(&other->game_tax_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMsgGameResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TPMSgNotifyPlayerAct::_Internal {
 public:
};

TPMSgNotifyPlayerAct::TPMSgNotifyPlayerAct(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.TPMSgNotifyPlayerAct)
}
TPMSgNotifyPlayerAct::TPMSgNotifyPlayerAct(const TPMSgNotifyPlayerAct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&act_) -
    reinterpret_cast<char*>(&chair_id_)) + sizeof(act_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.TPMSgNotifyPlayerAct)
}

void TPMSgNotifyPlayerAct::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&act_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(act_));
}

TPMSgNotifyPlayerAct::~TPMSgNotifyPlayerAct() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.TPMSgNotifyPlayerAct)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TPMSgNotifyPlayerAct::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TPMSgNotifyPlayerAct::ArenaDtor(void* object) {
  TPMSgNotifyPlayerAct* _this = reinterpret_cast< TPMSgNotifyPlayerAct* >(object);
  (void)_this;
}
void TPMSgNotifyPlayerAct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TPMSgNotifyPlayerAct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TPMSgNotifyPlayerAct& TPMSgNotifyPlayerAct::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TPMSgNotifyPlayerAct_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void TPMSgNotifyPlayerAct::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.TPMSgNotifyPlayerAct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&act_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(act_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPMSgNotifyPlayerAct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 act = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TPMSgNotifyPlayerAct::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.TPMSgNotifyPlayerAct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  // int32 act = 2;
  if (this->act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_act(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.TPMSgNotifyPlayerAct)
  return target;
}

size_t TPMSgNotifyPlayerAct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.TPMSgNotifyPlayerAct)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  // int32 act = 2;
  if (this->act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_act());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TPMSgNotifyPlayerAct::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.TPMSgNotifyPlayerAct)
  GOOGLE_DCHECK_NE(&from, this);
  const TPMSgNotifyPlayerAct* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TPMSgNotifyPlayerAct>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.TPMSgNotifyPlayerAct)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.TPMSgNotifyPlayerAct)
    MergeFrom(*source);
  }
}

void TPMSgNotifyPlayerAct::MergeFrom(const TPMSgNotifyPlayerAct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.TPMSgNotifyPlayerAct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
  if (from.act() != 0) {
    _internal_set_act(from._internal_act());
  }
}

void TPMSgNotifyPlayerAct::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.TPMSgNotifyPlayerAct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPMSgNotifyPlayerAct::CopyFrom(const TPMSgNotifyPlayerAct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.TPMSgNotifyPlayerAct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPMSgNotifyPlayerAct::IsInitialized() const {
  return true;
}

void TPMSgNotifyPlayerAct::InternalSwap(TPMSgNotifyPlayerAct* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPMSgNotifyPlayerAct, act_)
      + sizeof(TPMSgNotifyPlayerAct::act_)
      - PROTOBUF_FIELD_OFFSET(TPMSgNotifyPlayerAct, chair_id_)>(
          reinterpret_cast<char*>(&chair_id_),
          reinterpret_cast<char*>(&other->chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPMSgNotifyPlayerAct::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TeenPatti_India
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgTableState* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgTableState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgTableState >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgHandCards* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgHandCards >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgHandCards >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgPlayerInfo* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgPlayerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgPlayerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgSceneInfo* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgSceneInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgSceneInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgGameStartResp* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgGameStartResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgGameStartResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgNotifyActionResp* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgNotifyActionResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgNotifyActionResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgAction* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgAction >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgGiveUpResp* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgGiveUpResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgGiveUpResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgLookCardResp* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgLookCardResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgLookCardResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgAddBetResp* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgAddBetResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgAddBetResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgCompareCardResp* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgCompareCardResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgCompareCardResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgCompareCardRetResp* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgCompareCardRetResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgCompareCardRetResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMsgGameResult* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMsgGameResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMsgGameResult >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::TPMSgNotifyPlayerAct* Arena::CreateMaybeMessage< ::TeenPatti_India::TPMSgNotifyPlayerAct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::TPMSgNotifyPlayerAct >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
