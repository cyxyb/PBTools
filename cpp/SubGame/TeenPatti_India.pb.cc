// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeenPatti_India.proto

#include "TeenPatti_India.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_TeenPatti_5fIndia_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgHandCards_TeenPatti_5fIndia_2eproto;
namespace TeenPatti_India {
class MsgHandCardsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgHandCards> _instance;
} _MsgHandCards_default_instance_;
class MsgSceneInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgSceneInfo> _instance;
} _MsgSceneInfo_default_instance_;
class MsgGameStartRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgGameStartResp> _instance;
} _MsgGameStartResp_default_instance_;
class MsgActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgAction> _instance;
} _MsgAction_default_instance_;
class MsgGiveUpRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgGiveUpResp> _instance;
} _MsgGiveUpResp_default_instance_;
class MsgLookCardRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgLookCardResp> _instance;
} _MsgLookCardResp_default_instance_;
class MsgAddBetRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgAddBetResp> _instance;
} _MsgAddBetResp_default_instance_;
class MsgCompareCardRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgCompareCardResp> _instance;
} _MsgCompareCardResp_default_instance_;
class MsgCompareCardRetRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgCompareCardRetResp> _instance;
} _MsgCompareCardRetResp_default_instance_;
class MsgGameResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgGameResult> _instance;
} _MsgGameResult_default_instance_;
}  // namespace TeenPatti_India
static void InitDefaultsscc_info_MsgAction_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgAction_default_instance_;
    new (ptr) ::TeenPatti_India::MsgAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgAction_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgAction_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgAddBetResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgAddBetResp_default_instance_;
    new (ptr) ::TeenPatti_India::MsgAddBetResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgAddBetResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgAddBetResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgCompareCardResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgCompareCardResp_default_instance_;
    new (ptr) ::TeenPatti_India::MsgCompareCardResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgCompareCardResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgCompareCardResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgCompareCardRetResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgCompareCardRetResp_default_instance_;
    new (ptr) ::TeenPatti_India::MsgCompareCardRetResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgCompareCardRetResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgCompareCardRetResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgGameResult_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgGameResult_default_instance_;
    new (ptr) ::TeenPatti_India::MsgGameResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MsgGameResult_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MsgGameResult_TeenPatti_5fIndia_2eproto}, {
      &scc_info_MsgHandCards_TeenPatti_5fIndia_2eproto.base,}};

static void InitDefaultsscc_info_MsgGameStartResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgGameStartResp_default_instance_;
    new (ptr) ::TeenPatti_India::MsgGameStartResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgGameStartResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgGameStartResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgGiveUpResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgGiveUpResp_default_instance_;
    new (ptr) ::TeenPatti_India::MsgGiveUpResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgGiveUpResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgGiveUpResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgHandCards_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgHandCards_default_instance_;
    new (ptr) ::TeenPatti_India::MsgHandCards();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgHandCards_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgHandCards_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgLookCardResp_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgLookCardResp_default_instance_;
    new (ptr) ::TeenPatti_India::MsgLookCardResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgLookCardResp_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgLookCardResp_TeenPatti_5fIndia_2eproto}, {}};

static void InitDefaultsscc_info_MsgSceneInfo_TeenPatti_5fIndia_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TeenPatti_India::_MsgSceneInfo_default_instance_;
    new (ptr) ::TeenPatti_India::MsgSceneInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MsgSceneInfo_TeenPatti_5fIndia_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MsgSceneInfo_TeenPatti_5fIndia_2eproto}, {
      &scc_info_MsgHandCards_TeenPatti_5fIndia_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_TeenPatti_5fIndia_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_TeenPatti_5fIndia_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_TeenPatti_5fIndia_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgHandCards, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgHandCards, cards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, max_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, table_max_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, cell_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, cur_times_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, table_state_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, total_bet_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, banker_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, cur_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, ming_zhu_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, hand_cards_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, play_status_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, player_bet_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, cur_chair_act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, out_time_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgSceneInfo, compare_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, cur_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, cur_times_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, banker_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, max_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, max_blind_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, cell_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameStartResp, table_max_score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAction, act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAction, bet_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAction, compare_user_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAction, is_ok_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGiveUpResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGiveUpResp, chair_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgLookCardResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgLookCardResp, chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgLookCardResp, cards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAddBetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAddBetResp, cur_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAddBetResp, cur_times_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAddBetResp, current_act_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAddBetResp, add_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgAddBetResp, add_score_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardResp, chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardResp, compare_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardRetResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardRetResp, current_chair_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardRetResp, lost_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardRetResp, compare_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardRetResp, passive_id_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardRetResp, compare_cards_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgCompareCardRetResp, passive_cards_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameResult, game_tax_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameResult, game_score_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameResult, player_hands_),
  PROTOBUF_FIELD_OFFSET(::TeenPatti_India::MsgGameResult, end_state_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TeenPatti_India::MsgHandCards)},
  { 6, -1, sizeof(::TeenPatti_India::MsgSceneInfo)},
  { 26, -1, sizeof(::TeenPatti_India::MsgGameStartResp)},
  { 38, -1, sizeof(::TeenPatti_India::MsgAction)},
  { 47, -1, sizeof(::TeenPatti_India::MsgGiveUpResp)},
  { 53, -1, sizeof(::TeenPatti_India::MsgLookCardResp)},
  { 60, -1, sizeof(::TeenPatti_India::MsgAddBetResp)},
  { 70, -1, sizeof(::TeenPatti_India::MsgCompareCardResp)},
  { 77, -1, sizeof(::TeenPatti_India::MsgCompareCardRetResp)},
  { 88, -1, sizeof(::TeenPatti_India::MsgGameResult)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgHandCards_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgSceneInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgGameStartResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgGiveUpResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgLookCardResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgAddBetResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgCompareCardResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgCompareCardRetResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::TeenPatti_India::_MsgGameResult_default_instance_),
};

const char descriptor_table_protodef_TeenPatti_5fIndia_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025TeenPatti_India.proto\022\017TeenPatti_India"
  "\"\035\n\014MsgHandCards\022\r\n\005cards\030\001 \003(\005\"\354\002\n\014MsgS"
  "ceneInfo\022\021\n\tmax_score\030\001 \001(\003\022\027\n\017table_max"
  "_score\030\002 \001(\003\022\022\n\ncell_score\030\003 \001(\005\022\021\n\tcur_"
  "times\030\004 \001(\005\022\023\n\013table_state\030\005 \001(\005\022\027\n\017tota"
  "l_bet_score\030\006 \001(\005\022\027\n\017banker_chair_id\030\007 \001"
  "(\005\022\024\n\014cur_chair_id\030\010 \001(\005\022\020\n\010ming_zhu\030\t \003"
  "(\005\0221\n\nhand_cards\030\n \001(\0132\035.TeenPatti_India"
  ".MsgHandCards\022\023\n\013play_status\030\013 \003(\005\022\022\n\npl"
  "ayer_bet\030\014 \003(\005\022\025\n\rcur_chair_act\030\r \001(\005\022\020\n"
  "\010out_time\030\016 \001(\005\022\025\n\rcompare_state\030\017 \001(\010\"\247"
  "\001\n\020MsgGameStartResp\022\024\n\014cur_chair_id\030\001 \001("
  "\005\022\021\n\tcur_times\030\002 \001(\005\022\027\n\017banker_chair_id\030"
  "\003 \001(\005\022\021\n\tmax_score\030\004 \001(\003\022\021\n\tmax_blind\030\005 "
  "\001(\003\022\022\n\ncell_score\030\006 \001(\005\022\027\n\017table_max_sco"
  "re\030\007 \001(\003\"P\n\tMsgAction\022\013\n\003act\030\001 \001(\005\022\021\n\tbe"
  "t_score\030\002 \001(\003\022\024\n\014compare_user\030\003 \001(\003\022\r\n\005i"
  "s_ok\030\004 \001(\010\"!\n\rMsgGiveUpResp\022\020\n\010chair_id\030"
  "\001 \001(\005\"2\n\017MsgLookCardResp\022\020\n\010chair_id\030\001 \001"
  "(\005\022\r\n\005cards\030\002 \003(\005\"v\n\rMsgAddBetResp\022\024\n\014cu"
  "r_chair_id\030\001 \001(\005\022\021\n\tcur_times\030\002 \001(\005\022\023\n\013c"
  "urrent_act\030\003 \001(\005\022\024\n\014add_chair_id\030\004 \001(\005\022\021"
  "\n\tadd_score\030\005 \001(\005\":\n\022MsgCompareCardResp\022"
  "\020\n\010chair_id\030\001 \001(\005\022\022\n\ncompare_id\030\002 \001(\005\"\230\001"
  "\n\025MsgCompareCardRetResp\022\030\n\020current_chair"
  "_id\030\001 \001(\005\022\017\n\007lost_id\030\002 \001(\005\022\022\n\ncompare_id"
  "\030\003 \001(\005\022\022\n\npassive_id\030\004 \001(\005\022\025\n\rcompare_ca"
  "rds\030\005 \001(\005\022\025\n\rpassive_cards\030\006 \001(\005\"}\n\rMsgG"
  "ameResult\022\020\n\010game_tax\030\001 \001(\005\022\022\n\ngame_scor"
  "e\030\002 \003(\003\0223\n\014player_hands\030\003 \003(\0132\035.TeenPatt"
  "i_India.MsgHandCards\022\021\n\tend_state\030\004 \001(\005*"
  "\230\002\n\rEMsgIDSubGame\022\025\n\021MsgIDSubGame_Null\020\000"
  "\022\036\n\032MsgIDSubGame_GameStartResp\020\001\022\027\n\023MsgI"
  "DSubGame_Action\020\002\022\033\n\027MsgIDSubGame_GiveUp"
  "Resp\020\003\022\031\n\025MsgIDSubGame_LookCard\020\004\022\033\n\027Msg"
  "IDSubGame_AddBetResp\020\005\022 \n\034MsgIDSubGame_C"
  "ompareCardResp\020\006\022\037\n\033MsgIDSubGame_Compare"
  "RetResp\020\007\022\037\n\033MsgIDSubGame_GameResultResp"
  "\020\010b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_TeenPatti_5fIndia_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_TeenPatti_5fIndia_2eproto_sccs[10] = {
  &scc_info_MsgAction_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgAddBetResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgCompareCardResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgCompareCardRetResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgGameResult_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgGameStartResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgGiveUpResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgHandCards_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgLookCardResp_TeenPatti_5fIndia_2eproto.base,
  &scc_info_MsgSceneInfo_TeenPatti_5fIndia_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_TeenPatti_5fIndia_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TeenPatti_5fIndia_2eproto = {
  false, false, descriptor_table_protodef_TeenPatti_5fIndia_2eproto, "TeenPatti_India.proto", 1530,
  &descriptor_table_TeenPatti_5fIndia_2eproto_once, descriptor_table_TeenPatti_5fIndia_2eproto_sccs, descriptor_table_TeenPatti_5fIndia_2eproto_deps, 10, 0,
  schemas, file_default_instances, TableStruct_TeenPatti_5fIndia_2eproto::offsets,
  file_level_metadata_TeenPatti_5fIndia_2eproto, 10, file_level_enum_descriptors_TeenPatti_5fIndia_2eproto, file_level_service_descriptors_TeenPatti_5fIndia_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_TeenPatti_5fIndia_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto)), true);
namespace TeenPatti_India {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDSubGame_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_TeenPatti_5fIndia_2eproto);
  return file_level_enum_descriptors_TeenPatti_5fIndia_2eproto[0];
}
bool EMsgIDSubGame_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class MsgHandCards::_Internal {
 public:
};

MsgHandCards::MsgHandCards(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgHandCards)
}
MsgHandCards::MsgHandCards(const MsgHandCards& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgHandCards)
}

void MsgHandCards::SharedCtor() {
}

MsgHandCards::~MsgHandCards() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgHandCards)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgHandCards::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgHandCards::ArenaDtor(void* object) {
  MsgHandCards* _this = reinterpret_cast< MsgHandCards* >(object);
  (void)_this;
}
void MsgHandCards::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgHandCards::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgHandCards& MsgHandCards::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgHandCards_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgHandCards::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgHandCards)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgHandCards::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 cards = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_cards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_cards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgHandCards::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgHandCards)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 cards = 1;
  {
    int byte_size = _cards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_cards(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgHandCards)
  return target;
}

size_t MsgHandCards::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgHandCards)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 cards = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _cards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgHandCards::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgHandCards)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHandCards* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgHandCards>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgHandCards)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgHandCards)
    MergeFrom(*source);
  }
}

void MsgHandCards::MergeFrom(const MsgHandCards& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgHandCards)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
}

void MsgHandCards::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgHandCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHandCards::CopyFrom(const MsgHandCards& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgHandCards)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHandCards::IsInitialized() const {
  return true;
}

void MsgHandCards::InternalSwap(MsgHandCards* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cards_.InternalSwap(&other->cards_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgHandCards::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgSceneInfo::_Internal {
 public:
  static const ::TeenPatti_India::MsgHandCards& hand_cards(const MsgSceneInfo* msg);
};

const ::TeenPatti_India::MsgHandCards&
MsgSceneInfo::_Internal::hand_cards(const MsgSceneInfo* msg) {
  return *msg->hand_cards_;
}
MsgSceneInfo::MsgSceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ming_zhu_(arena),
  play_status_(arena),
  player_bet_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgSceneInfo)
}
MsgSceneInfo::MsgSceneInfo(const MsgSceneInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ming_zhu_(from.ming_zhu_),
      play_status_(from.play_status_),
      player_bet_(from.player_bet_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_hand_cards()) {
    hand_cards_ = new ::TeenPatti_India::MsgHandCards(*from.hand_cards_);
  } else {
    hand_cards_ = nullptr;
  }
  ::memcpy(&max_score_, &from.max_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&compare_state_) -
    reinterpret_cast<char*>(&max_score_)) + sizeof(compare_state_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgSceneInfo)
}

void MsgSceneInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgSceneInfo_TeenPatti_5fIndia_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&hand_cards_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&compare_state_) -
      reinterpret_cast<char*>(&hand_cards_)) + sizeof(compare_state_));
}

MsgSceneInfo::~MsgSceneInfo() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgSceneInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgSceneInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete hand_cards_;
}

void MsgSceneInfo::ArenaDtor(void* object) {
  MsgSceneInfo* _this = reinterpret_cast< MsgSceneInfo* >(object);
  (void)_this;
}
void MsgSceneInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgSceneInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgSceneInfo& MsgSceneInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgSceneInfo_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgSceneInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ming_zhu_.Clear();
  play_status_.Clear();
  player_bet_.Clear();
  if (GetArena() == nullptr && hand_cards_ != nullptr) {
    delete hand_cards_;
  }
  hand_cards_ = nullptr;
  ::memset(&max_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compare_state_) -
      reinterpret_cast<char*>(&max_score_)) + sizeof(compare_state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSceneInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 max_score = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 table_max_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          table_max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cell_score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cell_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_times = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          cur_times_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 table_state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          table_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total_bet_score = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          total_bet_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 banker_chair_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          banker_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_chair_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          cur_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 ming_zhu = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_ming_zhu(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72) {
          _internal_add_ming_zhu(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .TeenPatti_India.MsgHandCards hand_cards = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_hand_cards(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 play_status = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_play_status(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88) {
          _internal_add_play_status(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 player_bet = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_player_bet(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96) {
          _internal_add_player_bet(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_chair_act = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          cur_chair_act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 out_time = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          out_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool compare_state = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          compare_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgSceneInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgSceneInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 max_score = 1;
  if (this->max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_max_score(), target);
  }

  // int64 table_max_score = 2;
  if (this->table_max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_table_max_score(), target);
  }

  // int32 cell_score = 3;
  if (this->cell_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_cell_score(), target);
  }

  // int32 cur_times = 4;
  if (this->cur_times() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_cur_times(), target);
  }

  // int32 table_state = 5;
  if (this->table_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_table_state(), target);
  }

  // int32 total_bet_score = 6;
  if (this->total_bet_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_total_bet_score(), target);
  }

  // int32 banker_chair_id = 7;
  if (this->banker_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_banker_chair_id(), target);
  }

  // int32 cur_chair_id = 8;
  if (this->cur_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_cur_chair_id(), target);
  }

  // repeated int32 ming_zhu = 9;
  {
    int byte_size = _ming_zhu_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          9, _internal_ming_zhu(), byte_size, target);
    }
  }

  // .TeenPatti_India.MsgHandCards hand_cards = 10;
  if (this->has_hand_cards()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::hand_cards(this), target, stream);
  }

  // repeated int32 play_status = 11;
  {
    int byte_size = _play_status_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          11, _internal_play_status(), byte_size, target);
    }
  }

  // repeated int32 player_bet = 12;
  {
    int byte_size = _player_bet_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          12, _internal_player_bet(), byte_size, target);
    }
  }

  // int32 cur_chair_act = 13;
  if (this->cur_chair_act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(13, this->_internal_cur_chair_act(), target);
  }

  // int32 out_time = 14;
  if (this->out_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(14, this->_internal_out_time(), target);
  }

  // bool compare_state = 15;
  if (this->compare_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_compare_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgSceneInfo)
  return target;
}

size_t MsgSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgSceneInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 ming_zhu = 9;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->ming_zhu_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _ming_zhu_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 play_status = 11;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->play_status_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _play_status_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 player_bet = 12;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->player_bet_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _player_bet_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .TeenPatti_India.MsgHandCards hand_cards = 10;
  if (this->has_hand_cards()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hand_cards_);
  }

  // int64 max_score = 1;
  if (this->max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_score());
  }

  // int64 table_max_score = 2;
  if (this->table_max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_table_max_score());
  }

  // int32 cell_score = 3;
  if (this->cell_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cell_score());
  }

  // int32 cur_times = 4;
  if (this->cur_times() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_times());
  }

  // int32 table_state = 5;
  if (this->table_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_table_state());
  }

  // int32 total_bet_score = 6;
  if (this->total_bet_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_bet_score());
  }

  // int32 banker_chair_id = 7;
  if (this->banker_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_banker_chair_id());
  }

  // int32 cur_chair_id = 8;
  if (this->cur_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_id());
  }

  // int32 cur_chair_act = 13;
  if (this->cur_chair_act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_act());
  }

  // int32 out_time = 14;
  if (this->out_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_out_time());
  }

  // bool compare_state = 15;
  if (this->compare_state() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgSceneInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgSceneInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgSceneInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgSceneInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgSceneInfo)
    MergeFrom(*source);
  }
}

void MsgSceneInfo::MergeFrom(const MsgSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ming_zhu_.MergeFrom(from.ming_zhu_);
  play_status_.MergeFrom(from.play_status_);
  player_bet_.MergeFrom(from.player_bet_);
  if (from.has_hand_cards()) {
    _internal_mutable_hand_cards()->::TeenPatti_India::MsgHandCards::MergeFrom(from._internal_hand_cards());
  }
  if (from.max_score() != 0) {
    _internal_set_max_score(from._internal_max_score());
  }
  if (from.table_max_score() != 0) {
    _internal_set_table_max_score(from._internal_table_max_score());
  }
  if (from.cell_score() != 0) {
    _internal_set_cell_score(from._internal_cell_score());
  }
  if (from.cur_times() != 0) {
    _internal_set_cur_times(from._internal_cur_times());
  }
  if (from.table_state() != 0) {
    _internal_set_table_state(from._internal_table_state());
  }
  if (from.total_bet_score() != 0) {
    _internal_set_total_bet_score(from._internal_total_bet_score());
  }
  if (from.banker_chair_id() != 0) {
    _internal_set_banker_chair_id(from._internal_banker_chair_id());
  }
  if (from.cur_chair_id() != 0) {
    _internal_set_cur_chair_id(from._internal_cur_chair_id());
  }
  if (from.cur_chair_act() != 0) {
    _internal_set_cur_chair_act(from._internal_cur_chair_act());
  }
  if (from.out_time() != 0) {
    _internal_set_out_time(from._internal_out_time());
  }
  if (from.compare_state() != 0) {
    _internal_set_compare_state(from._internal_compare_state());
  }
}

void MsgSceneInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSceneInfo::CopyFrom(const MsgSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSceneInfo::IsInitialized() const {
  return true;
}

void MsgSceneInfo::InternalSwap(MsgSceneInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ming_zhu_.InternalSwap(&other->ming_zhu_);
  play_status_.InternalSwap(&other->play_status_);
  player_bet_.InternalSwap(&other->player_bet_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgSceneInfo, compare_state_)
      + sizeof(MsgSceneInfo::compare_state_)
      - PROTOBUF_FIELD_OFFSET(MsgSceneInfo, hand_cards_)>(
          reinterpret_cast<char*>(&hand_cards_),
          reinterpret_cast<char*>(&other->hand_cards_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSceneInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgGameStartResp::_Internal {
 public:
};

MsgGameStartResp::MsgGameStartResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgGameStartResp)
}
MsgGameStartResp::MsgGameStartResp(const MsgGameStartResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cur_chair_id_, &from.cur_chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&table_max_score_) -
    reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(table_max_score_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgGameStartResp)
}

void MsgGameStartResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&cur_chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&table_max_score_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(table_max_score_));
}

MsgGameStartResp::~MsgGameStartResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgGameStartResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgGameStartResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgGameStartResp::ArenaDtor(void* object) {
  MsgGameStartResp* _this = reinterpret_cast< MsgGameStartResp* >(object);
  (void)_this;
}
void MsgGameStartResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgGameStartResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGameStartResp& MsgGameStartResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgGameStartResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgGameStartResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgGameStartResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cur_chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&table_max_score_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(table_max_score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgGameStartResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cur_chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cur_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_times = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cur_times_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 banker_chair_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          banker_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_score = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 max_blind = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          max_blind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cell_score = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          cell_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 table_max_score = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          table_max_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgGameStartResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgGameStartResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cur_chair_id(), target);
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cur_times(), target);
  }

  // int32 banker_chair_id = 3;
  if (this->banker_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_banker_chair_id(), target);
  }

  // int64 max_score = 4;
  if (this->max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_max_score(), target);
  }

  // int64 max_blind = 5;
  if (this->max_blind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_max_blind(), target);
  }

  // int32 cell_score = 6;
  if (this->cell_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_cell_score(), target);
  }

  // int64 table_max_score = 7;
  if (this->table_max_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_table_max_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgGameStartResp)
  return target;
}

size_t MsgGameStartResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgGameStartResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_id());
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_times());
  }

  // int64 max_score = 4;
  if (this->max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_score());
  }

  // int32 banker_chair_id = 3;
  if (this->banker_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_banker_chair_id());
  }

  // int32 cell_score = 6;
  if (this->cell_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cell_score());
  }

  // int64 max_blind = 5;
  if (this->max_blind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_max_blind());
  }

  // int64 table_max_score = 7;
  if (this->table_max_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_table_max_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGameStartResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgGameStartResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGameStartResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgGameStartResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgGameStartResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgGameStartResp)
    MergeFrom(*source);
  }
}

void MsgGameStartResp::MergeFrom(const MsgGameStartResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgGameStartResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cur_chair_id() != 0) {
    _internal_set_cur_chair_id(from._internal_cur_chair_id());
  }
  if (from.cur_times() != 0) {
    _internal_set_cur_times(from._internal_cur_times());
  }
  if (from.max_score() != 0) {
    _internal_set_max_score(from._internal_max_score());
  }
  if (from.banker_chair_id() != 0) {
    _internal_set_banker_chair_id(from._internal_banker_chair_id());
  }
  if (from.cell_score() != 0) {
    _internal_set_cell_score(from._internal_cell_score());
  }
  if (from.max_blind() != 0) {
    _internal_set_max_blind(from._internal_max_blind());
  }
  if (from.table_max_score() != 0) {
    _internal_set_table_max_score(from._internal_table_max_score());
  }
}

void MsgGameStartResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgGameStartResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGameStartResp::CopyFrom(const MsgGameStartResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgGameStartResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGameStartResp::IsInitialized() const {
  return true;
}

void MsgGameStartResp::InternalSwap(MsgGameStartResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgGameStartResp, table_max_score_)
      + sizeof(MsgGameStartResp::table_max_score_)
      - PROTOBUF_FIELD_OFFSET(MsgGameStartResp, cur_chair_id_)>(
          reinterpret_cast<char*>(&cur_chair_id_),
          reinterpret_cast<char*>(&other->cur_chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgGameStartResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgAction::_Internal {
 public:
};

MsgAction::MsgAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgAction)
}
MsgAction::MsgAction(const MsgAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&bet_score_, &from.bet_score_,
    static_cast<size_t>(reinterpret_cast<char*>(&compare_user_) -
    reinterpret_cast<char*>(&bet_score_)) + sizeof(compare_user_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgAction)
}

void MsgAction::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&bet_score_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&compare_user_) -
      reinterpret_cast<char*>(&bet_score_)) + sizeof(compare_user_));
}

MsgAction::~MsgAction() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgAction::ArenaDtor(void* object) {
  MsgAction* _this = reinterpret_cast< MsgAction* >(object);
  (void)_this;
}
void MsgAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgAction& MsgAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgAction_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgAction::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bet_score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compare_user_) -
      reinterpret_cast<char*>(&bet_score_)) + sizeof(compare_user_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 act = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 bet_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          bet_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 compare_user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          compare_user_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_ok = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          is_ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 act = 1;
  if (this->act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_act(), target);
  }

  // int64 bet_score = 2;
  if (this->bet_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_bet_score(), target);
  }

  // int64 compare_user = 3;
  if (this->compare_user() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_compare_user(), target);
  }

  // bool is_ok = 4;
  if (this->is_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_ok(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgAction)
  return target;
}

size_t MsgAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 bet_score = 2;
  if (this->bet_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_bet_score());
  }

  // int32 act = 1;
  if (this->act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_act());
  }

  // bool is_ok = 4;
  if (this->is_ok() != 0) {
    total_size += 1 + 1;
  }

  // int64 compare_user = 3;
  if (this->compare_user() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_compare_user());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgAction)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgAction)
    MergeFrom(*source);
  }
}

void MsgAction::MergeFrom(const MsgAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bet_score() != 0) {
    _internal_set_bet_score(from._internal_bet_score());
  }
  if (from.act() != 0) {
    _internal_set_act(from._internal_act());
  }
  if (from.is_ok() != 0) {
    _internal_set_is_ok(from._internal_is_ok());
  }
  if (from.compare_user() != 0) {
    _internal_set_compare_user(from._internal_compare_user());
  }
}

void MsgAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAction::CopyFrom(const MsgAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAction::IsInitialized() const {
  return true;
}

void MsgAction::InternalSwap(MsgAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgAction, compare_user_)
      + sizeof(MsgAction::compare_user_)
      - PROTOBUF_FIELD_OFFSET(MsgAction, bet_score_)>(
          reinterpret_cast<char*>(&bet_score_),
          reinterpret_cast<char*>(&other->bet_score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgGiveUpResp::_Internal {
 public:
};

MsgGiveUpResp::MsgGiveUpResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgGiveUpResp)
}
MsgGiveUpResp::MsgGiveUpResp(const MsgGiveUpResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chair_id_ = from.chair_id_;
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgGiveUpResp)
}

void MsgGiveUpResp::SharedCtor() {
  chair_id_ = 0;
}

MsgGiveUpResp::~MsgGiveUpResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgGiveUpResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgGiveUpResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgGiveUpResp::ArenaDtor(void* object) {
  MsgGiveUpResp* _this = reinterpret_cast< MsgGiveUpResp* >(object);
  (void)_this;
}
void MsgGiveUpResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgGiveUpResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGiveUpResp& MsgGiveUpResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgGiveUpResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgGiveUpResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgGiveUpResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chair_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgGiveUpResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgGiveUpResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgGiveUpResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgGiveUpResp)
  return target;
}

size_t MsgGiveUpResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgGiveUpResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGiveUpResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgGiveUpResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGiveUpResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgGiveUpResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgGiveUpResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgGiveUpResp)
    MergeFrom(*source);
  }
}

void MsgGiveUpResp::MergeFrom(const MsgGiveUpResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgGiveUpResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
}

void MsgGiveUpResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgGiveUpResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGiveUpResp::CopyFrom(const MsgGiveUpResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgGiveUpResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGiveUpResp::IsInitialized() const {
  return true;
}

void MsgGiveUpResp::InternalSwap(MsgGiveUpResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(chair_id_, other->chair_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgGiveUpResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgLookCardResp::_Internal {
 public:
};

MsgLookCardResp::MsgLookCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  cards_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgLookCardResp)
}
MsgLookCardResp::MsgLookCardResp(const MsgLookCardResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cards_(from.cards_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chair_id_ = from.chair_id_;
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgLookCardResp)
}

void MsgLookCardResp::SharedCtor() {
  chair_id_ = 0;
}

MsgLookCardResp::~MsgLookCardResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgLookCardResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgLookCardResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgLookCardResp::ArenaDtor(void* object) {
  MsgLookCardResp* _this = reinterpret_cast< MsgLookCardResp* >(object);
  (void)_this;
}
void MsgLookCardResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgLookCardResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgLookCardResp& MsgLookCardResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgLookCardResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgLookCardResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgLookCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cards_.Clear();
  chair_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgLookCardResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 cards = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_cards(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_cards(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgLookCardResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgLookCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  // repeated int32 cards = 2;
  {
    int byte_size = _cards_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_cards(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgLookCardResp)
  return target;
}

size_t MsgLookCardResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgLookCardResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 cards = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->cards_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _cards_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgLookCardResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgLookCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLookCardResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgLookCardResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgLookCardResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgLookCardResp)
    MergeFrom(*source);
  }
}

void MsgLookCardResp::MergeFrom(const MsgLookCardResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgLookCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cards_.MergeFrom(from.cards_);
  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
}

void MsgLookCardResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgLookCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLookCardResp::CopyFrom(const MsgLookCardResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgLookCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLookCardResp::IsInitialized() const {
  return true;
}

void MsgLookCardResp::InternalSwap(MsgLookCardResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cards_.InternalSwap(&other->cards_);
  swap(chair_id_, other->chair_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgLookCardResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgAddBetResp::_Internal {
 public:
};

MsgAddBetResp::MsgAddBetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgAddBetResp)
}
MsgAddBetResp::MsgAddBetResp(const MsgAddBetResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cur_chair_id_, &from.cur_chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&add_score_) -
    reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(add_score_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgAddBetResp)
}

void MsgAddBetResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&cur_chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&add_score_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(add_score_));
}

MsgAddBetResp::~MsgAddBetResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgAddBetResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgAddBetResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgAddBetResp::ArenaDtor(void* object) {
  MsgAddBetResp* _this = reinterpret_cast< MsgAddBetResp* >(object);
  (void)_this;
}
void MsgAddBetResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgAddBetResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgAddBetResp& MsgAddBetResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgAddBetResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgAddBetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgAddBetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cur_chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&add_score_) -
      reinterpret_cast<char*>(&cur_chair_id_)) + sizeof(add_score_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgAddBetResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 cur_chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cur_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cur_times = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          cur_times_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 current_act = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          current_act_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 add_chair_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          add_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 add_score = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          add_score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgAddBetResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgAddBetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cur_chair_id(), target);
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_cur_times(), target);
  }

  // int32 current_act = 3;
  if (this->current_act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_current_act(), target);
  }

  // int32 add_chair_id = 4;
  if (this->add_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_add_chair_id(), target);
  }

  // int32 add_score = 5;
  if (this->add_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_add_score(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgAddBetResp)
  return target;
}

size_t MsgAddBetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgAddBetResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 cur_chair_id = 1;
  if (this->cur_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_chair_id());
  }

  // int32 cur_times = 2;
  if (this->cur_times() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cur_times());
  }

  // int32 current_act = 3;
  if (this->current_act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current_act());
  }

  // int32 add_chair_id = 4;
  if (this->add_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_add_chair_id());
  }

  // int32 add_score = 5;
  if (this->add_score() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_add_score());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgAddBetResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgAddBetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgAddBetResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgAddBetResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgAddBetResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgAddBetResp)
    MergeFrom(*source);
  }
}

void MsgAddBetResp::MergeFrom(const MsgAddBetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgAddBetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cur_chair_id() != 0) {
    _internal_set_cur_chair_id(from._internal_cur_chair_id());
  }
  if (from.cur_times() != 0) {
    _internal_set_cur_times(from._internal_cur_times());
  }
  if (from.current_act() != 0) {
    _internal_set_current_act(from._internal_current_act());
  }
  if (from.add_chair_id() != 0) {
    _internal_set_add_chair_id(from._internal_add_chair_id());
  }
  if (from.add_score() != 0) {
    _internal_set_add_score(from._internal_add_score());
  }
}

void MsgAddBetResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgAddBetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAddBetResp::CopyFrom(const MsgAddBetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgAddBetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAddBetResp::IsInitialized() const {
  return true;
}

void MsgAddBetResp::InternalSwap(MsgAddBetResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgAddBetResp, add_score_)
      + sizeof(MsgAddBetResp::add_score_)
      - PROTOBUF_FIELD_OFFSET(MsgAddBetResp, cur_chair_id_)>(
          reinterpret_cast<char*>(&cur_chair_id_),
          reinterpret_cast<char*>(&other->cur_chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgAddBetResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgCompareCardResp::_Internal {
 public:
};

MsgCompareCardResp::MsgCompareCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgCompareCardResp)
}
MsgCompareCardResp::MsgCompareCardResp(const MsgCompareCardResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&chair_id_, &from.chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&compare_id_) -
    reinterpret_cast<char*>(&chair_id_)) + sizeof(compare_id_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgCompareCardResp)
}

void MsgCompareCardResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&compare_id_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(compare_id_));
}

MsgCompareCardResp::~MsgCompareCardResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgCompareCardResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgCompareCardResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgCompareCardResp::ArenaDtor(void* object) {
  MsgCompareCardResp* _this = reinterpret_cast< MsgCompareCardResp* >(object);
  (void)_this;
}
void MsgCompareCardResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgCompareCardResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgCompareCardResp& MsgCompareCardResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgCompareCardResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgCompareCardResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgCompareCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&compare_id_) -
      reinterpret_cast<char*>(&chair_id_)) + sizeof(compare_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCompareCardResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          compare_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgCompareCardResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgCompareCardResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_chair_id(), target);
  }

  // int32 compare_id = 2;
  if (this->compare_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_compare_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgCompareCardResp)
  return target;
}

size_t MsgCompareCardResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgCompareCardResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 chair_id = 1;
  if (this->chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_chair_id());
  }

  // int32 compare_id = 2;
  if (this->compare_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgCompareCardResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgCompareCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCompareCardResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgCompareCardResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgCompareCardResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgCompareCardResp)
    MergeFrom(*source);
  }
}

void MsgCompareCardResp::MergeFrom(const MsgCompareCardResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgCompareCardResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chair_id() != 0) {
    _internal_set_chair_id(from._internal_chair_id());
  }
  if (from.compare_id() != 0) {
    _internal_set_compare_id(from._internal_compare_id());
  }
}

void MsgCompareCardResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgCompareCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCompareCardResp::CopyFrom(const MsgCompareCardResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgCompareCardResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCompareCardResp::IsInitialized() const {
  return true;
}

void MsgCompareCardResp::InternalSwap(MsgCompareCardResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCompareCardResp, compare_id_)
      + sizeof(MsgCompareCardResp::compare_id_)
      - PROTOBUF_FIELD_OFFSET(MsgCompareCardResp, chair_id_)>(
          reinterpret_cast<char*>(&chair_id_),
          reinterpret_cast<char*>(&other->chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCompareCardResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgCompareCardRetResp::_Internal {
 public:
};

MsgCompareCardRetResp::MsgCompareCardRetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgCompareCardRetResp)
}
MsgCompareCardRetResp::MsgCompareCardRetResp(const MsgCompareCardRetResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&current_chair_id_, &from.current_chair_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&passive_cards_) -
    reinterpret_cast<char*>(&current_chair_id_)) + sizeof(passive_cards_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgCompareCardRetResp)
}

void MsgCompareCardRetResp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&current_chair_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&passive_cards_) -
      reinterpret_cast<char*>(&current_chair_id_)) + sizeof(passive_cards_));
}

MsgCompareCardRetResp::~MsgCompareCardRetResp() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgCompareCardRetResp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgCompareCardRetResp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgCompareCardRetResp::ArenaDtor(void* object) {
  MsgCompareCardRetResp* _this = reinterpret_cast< MsgCompareCardRetResp* >(object);
  (void)_this;
}
void MsgCompareCardRetResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgCompareCardRetResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgCompareCardRetResp& MsgCompareCardRetResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgCompareCardRetResp_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgCompareCardRetResp::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgCompareCardRetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&current_chair_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&passive_cards_) -
      reinterpret_cast<char*>(&current_chair_id_)) + sizeof(passive_cards_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgCompareCardRetResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 current_chair_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          current_chair_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 lost_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          lost_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          compare_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 passive_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          passive_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 compare_cards = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          compare_cards_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 passive_cards = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          passive_cards_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgCompareCardRetResp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgCompareCardRetResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 current_chair_id = 1;
  if (this->current_chair_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_current_chair_id(), target);
  }

  // int32 lost_id = 2;
  if (this->lost_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_lost_id(), target);
  }

  // int32 compare_id = 3;
  if (this->compare_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_compare_id(), target);
  }

  // int32 passive_id = 4;
  if (this->passive_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_passive_id(), target);
  }

  // int32 compare_cards = 5;
  if (this->compare_cards() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_compare_cards(), target);
  }

  // int32 passive_cards = 6;
  if (this->passive_cards() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_passive_cards(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgCompareCardRetResp)
  return target;
}

size_t MsgCompareCardRetResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgCompareCardRetResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 current_chair_id = 1;
  if (this->current_chair_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current_chair_id());
  }

  // int32 lost_id = 2;
  if (this->lost_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lost_id());
  }

  // int32 compare_id = 3;
  if (this->compare_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_id());
  }

  // int32 passive_id = 4;
  if (this->passive_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_passive_id());
  }

  // int32 compare_cards = 5;
  if (this->compare_cards() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_compare_cards());
  }

  // int32 passive_cards = 6;
  if (this->passive_cards() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_passive_cards());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgCompareCardRetResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgCompareCardRetResp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCompareCardRetResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgCompareCardRetResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgCompareCardRetResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgCompareCardRetResp)
    MergeFrom(*source);
  }
}

void MsgCompareCardRetResp::MergeFrom(const MsgCompareCardRetResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgCompareCardRetResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current_chair_id() != 0) {
    _internal_set_current_chair_id(from._internal_current_chair_id());
  }
  if (from.lost_id() != 0) {
    _internal_set_lost_id(from._internal_lost_id());
  }
  if (from.compare_id() != 0) {
    _internal_set_compare_id(from._internal_compare_id());
  }
  if (from.passive_id() != 0) {
    _internal_set_passive_id(from._internal_passive_id());
  }
  if (from.compare_cards() != 0) {
    _internal_set_compare_cards(from._internal_compare_cards());
  }
  if (from.passive_cards() != 0) {
    _internal_set_passive_cards(from._internal_passive_cards());
  }
}

void MsgCompareCardRetResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgCompareCardRetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCompareCardRetResp::CopyFrom(const MsgCompareCardRetResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgCompareCardRetResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCompareCardRetResp::IsInitialized() const {
  return true;
}

void MsgCompareCardRetResp::InternalSwap(MsgCompareCardRetResp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgCompareCardRetResp, passive_cards_)
      + sizeof(MsgCompareCardRetResp::passive_cards_)
      - PROTOBUF_FIELD_OFFSET(MsgCompareCardRetResp, current_chair_id_)>(
          reinterpret_cast<char*>(&current_chair_id_),
          reinterpret_cast<char*>(&other->current_chair_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgCompareCardRetResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgGameResult::_Internal {
 public:
};

MsgGameResult::MsgGameResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  game_score_(arena),
  player_hands_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:TeenPatti_India.MsgGameResult)
}
MsgGameResult::MsgGameResult(const MsgGameResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      game_score_(from.game_score_),
      player_hands_(from.player_hands_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&game_tax_, &from.game_tax_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_state_) -
    reinterpret_cast<char*>(&game_tax_)) + sizeof(end_state_));
  // @@protoc_insertion_point(copy_constructor:TeenPatti_India.MsgGameResult)
}

void MsgGameResult::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgGameResult_TeenPatti_5fIndia_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&game_tax_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&end_state_) -
      reinterpret_cast<char*>(&game_tax_)) + sizeof(end_state_));
}

MsgGameResult::~MsgGameResult() {
  // @@protoc_insertion_point(destructor:TeenPatti_India.MsgGameResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgGameResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MsgGameResult::ArenaDtor(void* object) {
  MsgGameResult* _this = reinterpret_cast< MsgGameResult* >(object);
  (void)_this;
}
void MsgGameResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgGameResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGameResult& MsgGameResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgGameResult_TeenPatti_5fIndia_2eproto.base);
  return *internal_default_instance();
}


void MsgGameResult::Clear() {
// @@protoc_insertion_point(message_clear_start:TeenPatti_India.MsgGameResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  game_score_.Clear();
  player_hands_.Clear();
  ::memset(&game_tax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_state_) -
      reinterpret_cast<char*>(&game_tax_)) + sizeof(end_state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgGameResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 game_tax = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          game_tax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 game_score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_game_score(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_game_score(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .TeenPatti_India.MsgHandCards player_hands = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_player_hands(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 end_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          end_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgGameResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TeenPatti_India.MsgGameResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 game_tax = 1;
  if (this->game_tax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_game_tax(), target);
  }

  // repeated int64 game_score = 2;
  {
    int byte_size = _game_score_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_game_score(), byte_size, target);
    }
  }

  // repeated .TeenPatti_India.MsgHandCards player_hands = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_player_hands_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_player_hands(i), target, stream);
  }

  // int32 end_state = 4;
  if (this->end_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_end_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TeenPatti_India.MsgGameResult)
  return target;
}

size_t MsgGameResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TeenPatti_India.MsgGameResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 game_score = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->game_score_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _game_score_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .TeenPatti_India.MsgHandCards player_hands = 3;
  total_size += 1UL * this->_internal_player_hands_size();
  for (const auto& msg : this->player_hands_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 game_tax = 1;
  if (this->game_tax() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_game_tax());
  }

  // int32 end_state = 4;
  if (this->end_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_end_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGameResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TeenPatti_India.MsgGameResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGameResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgGameResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TeenPatti_India.MsgGameResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TeenPatti_India.MsgGameResult)
    MergeFrom(*source);
  }
}

void MsgGameResult::MergeFrom(const MsgGameResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TeenPatti_India.MsgGameResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  game_score_.MergeFrom(from.game_score_);
  player_hands_.MergeFrom(from.player_hands_);
  if (from.game_tax() != 0) {
    _internal_set_game_tax(from._internal_game_tax());
  }
  if (from.end_state() != 0) {
    _internal_set_end_state(from._internal_end_state());
  }
}

void MsgGameResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TeenPatti_India.MsgGameResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGameResult::CopyFrom(const MsgGameResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TeenPatti_India.MsgGameResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGameResult::IsInitialized() const {
  return true;
}

void MsgGameResult::InternalSwap(MsgGameResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  game_score_.InternalSwap(&other->game_score_);
  player_hands_.InternalSwap(&other->player_hands_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgGameResult, end_state_)
      + sizeof(MsgGameResult::end_state_)
      - PROTOBUF_FIELD_OFFSET(MsgGameResult, game_tax_)>(
          reinterpret_cast<char*>(&game_tax_),
          reinterpret_cast<char*>(&other->game_tax_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgGameResult::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TeenPatti_India
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgHandCards* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgHandCards >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgHandCards >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgSceneInfo* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgSceneInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgSceneInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgGameStartResp* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgGameStartResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgGameStartResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgAction* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgAction >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgGiveUpResp* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgGiveUpResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgGiveUpResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgLookCardResp* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgLookCardResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgLookCardResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgAddBetResp* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgAddBetResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgAddBetResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgCompareCardResp* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgCompareCardResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgCompareCardResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgCompareCardRetResp* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgCompareCardRetResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgCompareCardRetResp >(arena);
}
template<> PROTOBUF_NOINLINE ::TeenPatti_India::MsgGameResult* Arena::CreateMaybeMessage< ::TeenPatti_India::MsgGameResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TeenPatti_India::MsgGameResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
