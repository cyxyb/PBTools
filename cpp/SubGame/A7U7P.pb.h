// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: A7U7P.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_A7U7P_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_A7U7P_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_A7U7P_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_A7U7P_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_A7U7P_2eproto;
namespace A7U7P {
class A7BetInfo;
class A7BetInfoDefaultTypeInternal;
extern A7BetInfoDefaultTypeInternal _A7BetInfo_default_instance_;
class A7PlayerData;
class A7PlayerDataDefaultTypeInternal;
extern A7PlayerDataDefaultTypeInternal _A7PlayerData_default_instance_;
class MsgA7Bet;
class MsgA7BetDefaultTypeInternal;
extern MsgA7BetDefaultTypeInternal _MsgA7Bet_default_instance_;
class MsgA7BetResp;
class MsgA7BetRespDefaultTypeInternal;
extern MsgA7BetRespDefaultTypeInternal _MsgA7BetResp_default_instance_;
class MsgA7NotifyState;
class MsgA7NotifyStateDefaultTypeInternal;
extern MsgA7NotifyStateDefaultTypeInternal _MsgA7NotifyState_default_instance_;
class MsgA7Record;
class MsgA7RecordDefaultTypeInternal;
extern MsgA7RecordDefaultTypeInternal _MsgA7Record_default_instance_;
class MsgA7Result;
class MsgA7ResultDefaultTypeInternal;
extern MsgA7ResultDefaultTypeInternal _MsgA7Result_default_instance_;
class MsgA7SceneInfo;
class MsgA7SceneInfoDefaultTypeInternal;
extern MsgA7SceneInfoDefaultTypeInternal _MsgA7SceneInfo_default_instance_;
class MsgA7WinMsg;
class MsgA7WinMsgDefaultTypeInternal;
extern MsgA7WinMsgDefaultTypeInternal _MsgA7WinMsg_default_instance_;
}  // namespace A7U7P
PROTOBUF_NAMESPACE_OPEN
template<> ::A7U7P::A7BetInfo* Arena::CreateMaybeMessage<::A7U7P::A7BetInfo>(Arena*);
template<> ::A7U7P::A7PlayerData* Arena::CreateMaybeMessage<::A7U7P::A7PlayerData>(Arena*);
template<> ::A7U7P::MsgA7Bet* Arena::CreateMaybeMessage<::A7U7P::MsgA7Bet>(Arena*);
template<> ::A7U7P::MsgA7BetResp* Arena::CreateMaybeMessage<::A7U7P::MsgA7BetResp>(Arena*);
template<> ::A7U7P::MsgA7NotifyState* Arena::CreateMaybeMessage<::A7U7P::MsgA7NotifyState>(Arena*);
template<> ::A7U7P::MsgA7Record* Arena::CreateMaybeMessage<::A7U7P::MsgA7Record>(Arena*);
template<> ::A7U7P::MsgA7Result* Arena::CreateMaybeMessage<::A7U7P::MsgA7Result>(Arena*);
template<> ::A7U7P::MsgA7SceneInfo* Arena::CreateMaybeMessage<::A7U7P::MsgA7SceneInfo>(Arena*);
template<> ::A7U7P::MsgA7WinMsg* Arena::CreateMaybeMessage<::A7U7P::MsgA7WinMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace A7U7P {

enum EGameState : int {
  GS_Ready = 0,
  GS_Start = 1,
  GS_Bet = 2,
  GS_Result = 3,
  EGameState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EGameState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EGameState_IsValid(int value);
constexpr EGameState EGameState_MIN = GS_Ready;
constexpr EGameState EGameState_MAX = GS_Result;
constexpr int EGameState_ARRAYSIZE = EGameState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGameState_descriptor();
template<typename T>
inline const std::string& EGameState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGameState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGameState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGameState_descriptor(), enum_t_value);
}
inline bool EGameState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGameState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGameState>(
    EGameState_descriptor(), name, value);
}
enum EMsgIDSubGame : int {
  MsgIDSubGame_Null = 0,
  MsgIDSubGame_Bet = 1,
  MsgIDSubGame_BetResp = 2,
  MsgIDSubGame_GameResultResp = 7,
  MsgIDSubGame_NotifyStateResp = 8,
  EMsgIDSubGame_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EMsgIDSubGame_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EMsgIDSubGame_IsValid(int value);
constexpr EMsgIDSubGame EMsgIDSubGame_MIN = MsgIDSubGame_Null;
constexpr EMsgIDSubGame EMsgIDSubGame_MAX = MsgIDSubGame_NotifyStateResp;
constexpr int EMsgIDSubGame_ARRAYSIZE = EMsgIDSubGame_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDSubGame_descriptor();
template<typename T>
inline const std::string& EMsgIDSubGame_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMsgIDSubGame>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMsgIDSubGame_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMsgIDSubGame_descriptor(), enum_t_value);
}
inline bool EMsgIDSubGame_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMsgIDSubGame* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMsgIDSubGame>(
    EMsgIDSubGame_descriptor(), name, value);
}
// ===================================================================

class MsgA7NotifyState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.MsgA7NotifyState) */ {
 public:
  inline MsgA7NotifyState() : MsgA7NotifyState(nullptr) {}
  virtual ~MsgA7NotifyState();

  MsgA7NotifyState(const MsgA7NotifyState& from);
  MsgA7NotifyState(MsgA7NotifyState&& from) noexcept
    : MsgA7NotifyState() {
    *this = ::std::move(from);
  }

  inline MsgA7NotifyState& operator=(const MsgA7NotifyState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgA7NotifyState& operator=(MsgA7NotifyState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgA7NotifyState& default_instance();

  static inline const MsgA7NotifyState* internal_default_instance() {
    return reinterpret_cast<const MsgA7NotifyState*>(
               &_MsgA7NotifyState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgA7NotifyState& a, MsgA7NotifyState& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgA7NotifyState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgA7NotifyState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgA7NotifyState* New() const final {
    return CreateMaybeMessage<MsgA7NotifyState>(nullptr);
  }

  MsgA7NotifyState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgA7NotifyState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgA7NotifyState& from);
  void MergeFrom(const MsgA7NotifyState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgA7NotifyState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.MsgA7NotifyState";
  }
  protected:
  explicit MsgA7NotifyState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameStateFieldNumber = 1,
    kTimeFieldNumber = 2,
  };
  // int32 game_state = 1;
  void clear_game_state();
  ::PROTOBUF_NAMESPACE_ID::int32 game_state() const;
  void set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_state() const;
  void _internal_set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 time = 2;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::int32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:A7U7P.MsgA7NotifyState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class A7BetInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.A7BetInfo) */ {
 public:
  inline A7BetInfo() : A7BetInfo(nullptr) {}
  virtual ~A7BetInfo();

  A7BetInfo(const A7BetInfo& from);
  A7BetInfo(A7BetInfo&& from) noexcept
    : A7BetInfo() {
    *this = ::std::move(from);
  }

  inline A7BetInfo& operator=(const A7BetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline A7BetInfo& operator=(A7BetInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const A7BetInfo& default_instance();

  static inline const A7BetInfo* internal_default_instance() {
    return reinterpret_cast<const A7BetInfo*>(
               &_A7BetInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(A7BetInfo& a, A7BetInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(A7BetInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(A7BetInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline A7BetInfo* New() const final {
    return CreateMaybeMessage<A7BetInfo>(nullptr);
  }

  A7BetInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<A7BetInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const A7BetInfo& from);
  void MergeFrom(const A7BetInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(A7BetInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.A7BetInfo";
  }
  protected:
  explicit A7BetInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 1,
    kAreaFieldNumber = 2,
  };
  // int64 bet = 1;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 area = 2;
  void clear_area();
  ::PROTOBUF_NAMESPACE_ID::int32 area() const;
  void set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area() const;
  void _internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:A7U7P.A7BetInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class A7PlayerData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.A7PlayerData) */ {
 public:
  inline A7PlayerData() : A7PlayerData(nullptr) {}
  virtual ~A7PlayerData();

  A7PlayerData(const A7PlayerData& from);
  A7PlayerData(A7PlayerData&& from) noexcept
    : A7PlayerData() {
    *this = ::std::move(from);
  }

  inline A7PlayerData& operator=(const A7PlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  inline A7PlayerData& operator=(A7PlayerData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const A7PlayerData& default_instance();

  static inline const A7PlayerData* internal_default_instance() {
    return reinterpret_cast<const A7PlayerData*>(
               &_A7PlayerData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(A7PlayerData& a, A7PlayerData& b) {
    a.Swap(&b);
  }
  inline void Swap(A7PlayerData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(A7PlayerData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline A7PlayerData* New() const final {
    return CreateMaybeMessage<A7PlayerData>(nullptr);
  }

  A7PlayerData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<A7PlayerData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const A7PlayerData& from);
  void MergeFrom(const A7PlayerData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(A7PlayerData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.A7PlayerData";
  }
  protected:
  explicit A7PlayerData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetInfosFieldNumber = 7,
    kUserIdFieldNumber = 1,
    kChairIdFieldNumber = 2,
    kWinGoldFieldNumber = 3,
    kTotalPlayFieldNumber = 4,
    kWinPlayFieldNumber = 5,
    kGameBetFieldNumber = 6,
  };
  // repeated .A7U7P.A7BetInfo bet_infos = 7;
  int bet_infos_size() const;
  private:
  int _internal_bet_infos_size() const;
  public:
  void clear_bet_infos();
  ::A7U7P::A7BetInfo* mutable_bet_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7BetInfo >*
      mutable_bet_infos();
  private:
  const ::A7U7P::A7BetInfo& _internal_bet_infos(int index) const;
  ::A7U7P::A7BetInfo* _internal_add_bet_infos();
  public:
  const ::A7U7P::A7BetInfo& bet_infos(int index) const;
  ::A7U7P::A7BetInfo* add_bet_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7BetInfo >&
      bet_infos() const;

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 2;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 win_gold = 3;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 total_play = 4;
  void clear_total_play();
  ::PROTOBUF_NAMESPACE_ID::int32 total_play() const;
  void set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_play() const;
  void _internal_set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 win_play = 5;
  void clear_win_play();
  ::PROTOBUF_NAMESPACE_ID::int32 win_play() const;
  void set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_win_play() const;
  void _internal_set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 game_bet = 6;
  void clear_game_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 game_bet() const;
  void set_game_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_game_bet() const;
  void _internal_set_game_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:A7U7P.A7PlayerData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7BetInfo > bet_infos_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_play_;
  ::PROTOBUF_NAMESPACE_ID::int32 win_play_;
  ::PROTOBUF_NAMESPACE_ID::int64 game_bet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class MsgA7Record PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.MsgA7Record) */ {
 public:
  inline MsgA7Record() : MsgA7Record(nullptr) {}
  virtual ~MsgA7Record();

  MsgA7Record(const MsgA7Record& from);
  MsgA7Record(MsgA7Record&& from) noexcept
    : MsgA7Record() {
    *this = ::std::move(from);
  }

  inline MsgA7Record& operator=(const MsgA7Record& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgA7Record& operator=(MsgA7Record&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgA7Record& default_instance();

  static inline const MsgA7Record* internal_default_instance() {
    return reinterpret_cast<const MsgA7Record*>(
               &_MsgA7Record_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgA7Record& a, MsgA7Record& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgA7Record* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgA7Record* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgA7Record* New() const final {
    return CreateMaybeMessage<MsgA7Record>(nullptr);
  }

  MsgA7Record* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgA7Record>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgA7Record& from);
  void MergeFrom(const MsgA7Record& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgA7Record* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.MsgA7Record";
  }
  protected:
  explicit MsgA7Record(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSievesFieldNumber = 2,
  };
  // repeated int32 sieves = 2;
  int sieves_size() const;
  private:
  int _internal_sieves_size() const;
  public:
  void clear_sieves();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sieves(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_sieves() const;
  void _internal_add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_sieves();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 sieves(int index) const;
  void set_sieves(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      sieves() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_sieves();

  // @@protoc_insertion_point(class_scope:A7U7P.MsgA7Record)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > sieves_;
  mutable std::atomic<int> _sieves_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class MsgA7SceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.MsgA7SceneInfo) */ {
 public:
  inline MsgA7SceneInfo() : MsgA7SceneInfo(nullptr) {}
  virtual ~MsgA7SceneInfo();

  MsgA7SceneInfo(const MsgA7SceneInfo& from);
  MsgA7SceneInfo(MsgA7SceneInfo&& from) noexcept
    : MsgA7SceneInfo() {
    *this = ::std::move(from);
  }

  inline MsgA7SceneInfo& operator=(const MsgA7SceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgA7SceneInfo& operator=(MsgA7SceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgA7SceneInfo& default_instance();

  static inline const MsgA7SceneInfo* internal_default_instance() {
    return reinterpret_cast<const MsgA7SceneInfo*>(
               &_MsgA7SceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgA7SceneInfo& a, MsgA7SceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgA7SceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgA7SceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgA7SceneInfo* New() const final {
    return CreateMaybeMessage<MsgA7SceneInfo>(nullptr);
  }

  MsgA7SceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgA7SceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgA7SceneInfo& from);
  void MergeFrom(const MsgA7SceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgA7SceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.MsgA7SceneInfo";
  }
  protected:
  explicit MsgA7SceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetListFieldNumber = 1,
    kAreaMupFieldNumber = 2,
    kRecordsFieldNumber = 3,
    kBetLimitFieldNumber = 4,
    kAreaBetFieldNumber = 19,
    kSievesFieldNumber = 20,
    kPlayerListFieldNumber = 22,
    kPlayerLimitFieldNumber = 5,
    kBetTimeFieldNumber = 6,
    kOutTimeFieldNumber = 7,
    kStateFieldNumber = 8,
    kGameTaxFieldNumber = 9,
  };
  // repeated int64 bet_list = 1;
  int bet_list_size() const;
  private:
  int _internal_bet_list_size() const;
  public:
  void clear_bet_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_bet_list() const;
  void _internal_add_bet_list(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_bet_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 bet_list(int index) const;
  void set_bet_list(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_bet_list(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      bet_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_bet_list();

  // repeated int32 area_mup = 2;
  int area_mup_size() const;
  private:
  int _internal_area_mup_size() const;
  public:
  void clear_area_mup();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area_mup(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_area_mup() const;
  void _internal_add_area_mup(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_area_mup();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 area_mup(int index) const;
  void set_area_mup(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_area_mup(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      area_mup() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_area_mup();

  // repeated .A7U7P.MsgA7Record records = 3;
  int records_size() const;
  private:
  int _internal_records_size() const;
  public:
  void clear_records();
  ::A7U7P::MsgA7Record* mutable_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7Record >*
      mutable_records();
  private:
  const ::A7U7P::MsgA7Record& _internal_records(int index) const;
  ::A7U7P::MsgA7Record* _internal_add_records();
  public:
  const ::A7U7P::MsgA7Record& records(int index) const;
  ::A7U7P::MsgA7Record* add_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7Record >&
      records() const;

  // repeated int32 bet_limit = 4;
  int bet_limit_size() const;
  private:
  int _internal_bet_limit_size() const;
  public:
  void clear_bet_limit();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_limit(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bet_limit() const;
  void _internal_add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bet_limit();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bet_limit(int index) const;
  void set_bet_limit(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bet_limit() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bet_limit();

  // repeated int32 area_bet = 19;
  int area_bet_size() const;
  private:
  int _internal_area_bet_size() const;
  public:
  void clear_area_bet();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area_bet(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_area_bet() const;
  void _internal_add_area_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_area_bet();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 area_bet(int index) const;
  void set_area_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_area_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      area_bet() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_area_bet();

  // repeated int32 sieves = 20;
  int sieves_size() const;
  private:
  int _internal_sieves_size() const;
  public:
  void clear_sieves();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sieves(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_sieves() const;
  void _internal_add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_sieves();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 sieves(int index) const;
  void set_sieves(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      sieves() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_sieves();

  // repeated .A7U7P.A7PlayerData player_list = 22;
  int player_list_size() const;
  private:
  int _internal_player_list_size() const;
  public:
  void clear_player_list();
  ::A7U7P::A7PlayerData* mutable_player_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7PlayerData >*
      mutable_player_list();
  private:
  const ::A7U7P::A7PlayerData& _internal_player_list(int index) const;
  ::A7U7P::A7PlayerData* _internal_add_player_list();
  public:
  const ::A7U7P::A7PlayerData& player_list(int index) const;
  ::A7U7P::A7PlayerData* add_player_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7PlayerData >&
      player_list() const;

  // int32 player_limit = 5;
  void clear_player_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 player_limit() const;
  void set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_limit() const;
  void _internal_set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet_time = 6;
  void clear_bet_time();
  ::PROTOBUF_NAMESPACE_ID::int32 bet_time() const;
  void set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_time() const;
  void _internal_set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_time = 7;
  void clear_out_time();
  ::PROTOBUF_NAMESPACE_ID::int32 out_time() const;
  void set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_time() const;
  void _internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 state = 8;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 game_tax = 9;
  void clear_game_tax();
  ::PROTOBUF_NAMESPACE_ID::int32 game_tax() const;
  void set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_tax() const;
  void _internal_set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:A7U7P.MsgA7SceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > bet_list_;
  mutable std::atomic<int> _bet_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > area_mup_;
  mutable std::atomic<int> _area_mup_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7Record > records_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bet_limit_;
  mutable std::atomic<int> _bet_limit_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > area_bet_;
  mutable std::atomic<int> _area_bet_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > sieves_;
  mutable std::atomic<int> _sieves_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7PlayerData > player_list_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_limit_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_tax_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class MsgA7Bet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.MsgA7Bet) */ {
 public:
  inline MsgA7Bet() : MsgA7Bet(nullptr) {}
  virtual ~MsgA7Bet();

  MsgA7Bet(const MsgA7Bet& from);
  MsgA7Bet(MsgA7Bet&& from) noexcept
    : MsgA7Bet() {
    *this = ::std::move(from);
  }

  inline MsgA7Bet& operator=(const MsgA7Bet& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgA7Bet& operator=(MsgA7Bet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgA7Bet& default_instance();

  static inline const MsgA7Bet* internal_default_instance() {
    return reinterpret_cast<const MsgA7Bet*>(
               &_MsgA7Bet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgA7Bet& a, MsgA7Bet& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgA7Bet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgA7Bet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgA7Bet* New() const final {
    return CreateMaybeMessage<MsgA7Bet>(nullptr);
  }

  MsgA7Bet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgA7Bet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgA7Bet& from);
  void MergeFrom(const MsgA7Bet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgA7Bet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.MsgA7Bet";
  }
  protected:
  explicit MsgA7Bet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 1,
    kAreaFieldNumber = 2,
  };
  // int64 bet = 1;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 area = 2;
  void clear_area();
  ::PROTOBUF_NAMESPACE_ID::int32 area() const;
  void set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area() const;
  void _internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:A7U7P.MsgA7Bet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class MsgA7BetResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.MsgA7BetResp) */ {
 public:
  inline MsgA7BetResp() : MsgA7BetResp(nullptr) {}
  virtual ~MsgA7BetResp();

  MsgA7BetResp(const MsgA7BetResp& from);
  MsgA7BetResp(MsgA7BetResp&& from) noexcept
    : MsgA7BetResp() {
    *this = ::std::move(from);
  }

  inline MsgA7BetResp& operator=(const MsgA7BetResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgA7BetResp& operator=(MsgA7BetResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgA7BetResp& default_instance();

  static inline const MsgA7BetResp* internal_default_instance() {
    return reinterpret_cast<const MsgA7BetResp*>(
               &_MsgA7BetResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgA7BetResp& a, MsgA7BetResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgA7BetResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgA7BetResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgA7BetResp* New() const final {
    return CreateMaybeMessage<MsgA7BetResp>(nullptr);
  }

  MsgA7BetResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgA7BetResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgA7BetResp& from);
  void MergeFrom(const MsgA7BetResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgA7BetResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.MsgA7BetResp";
  }
  protected:
  explicit MsgA7BetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetInfoFieldNumber = 4,
    kRetCodeFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kChairIdFieldNumber = 3,
  };
  // .A7U7P.A7BetInfo bet_info = 4;
  bool has_bet_info() const;
  private:
  bool _internal_has_bet_info() const;
  public:
  void clear_bet_info();
  const ::A7U7P::A7BetInfo& bet_info() const;
  ::A7U7P::A7BetInfo* release_bet_info();
  ::A7U7P::A7BetInfo* mutable_bet_info();
  void set_allocated_bet_info(::A7U7P::A7BetInfo* bet_info);
  private:
  const ::A7U7P::A7BetInfo& _internal_bet_info() const;
  ::A7U7P::A7BetInfo* _internal_mutable_bet_info();
  public:
  void unsafe_arena_set_allocated_bet_info(
      ::A7U7P::A7BetInfo* bet_info);
  ::A7U7P::A7BetInfo* unsafe_arena_release_bet_info();

  // int32 ret_code = 1;
  void clear_ret_code();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code() const;
  void set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_code() const;
  void _internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 3;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:A7U7P.MsgA7BetResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::A7U7P::A7BetInfo* bet_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class MsgA7WinMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.MsgA7WinMsg) */ {
 public:
  inline MsgA7WinMsg() : MsgA7WinMsg(nullptr) {}
  virtual ~MsgA7WinMsg();

  MsgA7WinMsg(const MsgA7WinMsg& from);
  MsgA7WinMsg(MsgA7WinMsg&& from) noexcept
    : MsgA7WinMsg() {
    *this = ::std::move(from);
  }

  inline MsgA7WinMsg& operator=(const MsgA7WinMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgA7WinMsg& operator=(MsgA7WinMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgA7WinMsg& default_instance();

  static inline const MsgA7WinMsg* internal_default_instance() {
    return reinterpret_cast<const MsgA7WinMsg*>(
               &_MsgA7WinMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgA7WinMsg& a, MsgA7WinMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgA7WinMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgA7WinMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgA7WinMsg* New() const final {
    return CreateMaybeMessage<MsgA7WinMsg>(nullptr);
  }

  MsgA7WinMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgA7WinMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgA7WinMsg& from);
  void MergeFrom(const MsgA7WinMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgA7WinMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.MsgA7WinMsg";
  }
  protected:
  explicit MsgA7WinMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kChairIdFieldNumber = 2,
    kWinGoldFieldNumber = 3,
    kNewGoldFieldNumber = 4,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 2;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 win_gold = 3;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 new_gold = 4;
  void clear_new_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 new_gold() const;
  void set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_new_gold() const;
  void _internal_set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:A7U7P.MsgA7WinMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 new_gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// -------------------------------------------------------------------

class MsgA7Result PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:A7U7P.MsgA7Result) */ {
 public:
  inline MsgA7Result() : MsgA7Result(nullptr) {}
  virtual ~MsgA7Result();

  MsgA7Result(const MsgA7Result& from);
  MsgA7Result(MsgA7Result&& from) noexcept
    : MsgA7Result() {
    *this = ::std::move(from);
  }

  inline MsgA7Result& operator=(const MsgA7Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgA7Result& operator=(MsgA7Result&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgA7Result& default_instance();

  static inline const MsgA7Result* internal_default_instance() {
    return reinterpret_cast<const MsgA7Result*>(
               &_MsgA7Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgA7Result& a, MsgA7Result& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgA7Result* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgA7Result* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgA7Result* New() const final {
    return CreateMaybeMessage<MsgA7Result>(nullptr);
  }

  MsgA7Result* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgA7Result>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgA7Result& from);
  void MergeFrom(const MsgA7Result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgA7Result* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "A7U7P.MsgA7Result";
  }
  protected:
  explicit MsgA7Result(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_A7U7P_2eproto);
    return ::descriptor_table_A7U7P_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinIndexFieldNumber = 1,
    kSievesFieldNumber = 2,
    kWinMsgFieldNumber = 3,
  };
  // repeated int32 win_index = 1;
  int win_index_size() const;
  private:
  int _internal_win_index_size() const;
  public:
  void clear_win_index();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_win_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_win_index() const;
  void _internal_add_win_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_win_index();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 win_index(int index) const;
  void set_win_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_win_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      win_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_win_index();

  // repeated int32 sieves = 2;
  int sieves_size() const;
  private:
  int _internal_sieves_size() const;
  public:
  void clear_sieves();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sieves(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_sieves() const;
  void _internal_add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_sieves();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 sieves(int index) const;
  void set_sieves(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      sieves() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_sieves();

  // repeated .A7U7P.MsgA7WinMsg win_msg = 3;
  int win_msg_size() const;
  private:
  int _internal_win_msg_size() const;
  public:
  void clear_win_msg();
  ::A7U7P::MsgA7WinMsg* mutable_win_msg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7WinMsg >*
      mutable_win_msg();
  private:
  const ::A7U7P::MsgA7WinMsg& _internal_win_msg(int index) const;
  ::A7U7P::MsgA7WinMsg* _internal_add_win_msg();
  public:
  const ::A7U7P::MsgA7WinMsg& win_msg(int index) const;
  ::A7U7P::MsgA7WinMsg* add_win_msg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7WinMsg >&
      win_msg() const;

  // @@protoc_insertion_point(class_scope:A7U7P.MsgA7Result)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > win_index_;
  mutable std::atomic<int> _win_index_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > sieves_;
  mutable std::atomic<int> _sieves_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7WinMsg > win_msg_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_A7U7P_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgA7NotifyState

// int32 game_state = 1;
inline void MsgA7NotifyState::clear_game_state() {
  game_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7NotifyState::_internal_game_state() const {
  return game_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7NotifyState::game_state() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7NotifyState.game_state)
  return _internal_game_state();
}
inline void MsgA7NotifyState::_internal_set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_state_ = value;
}
inline void MsgA7NotifyState::set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_state(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7NotifyState.game_state)
}

// int32 time = 2;
inline void MsgA7NotifyState::clear_time() {
  time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7NotifyState::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7NotifyState::time() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7NotifyState.time)
  return _internal_time();
}
inline void MsgA7NotifyState::_internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  time_ = value;
}
inline void MsgA7NotifyState::set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7NotifyState.time)
}

// -------------------------------------------------------------------

// A7BetInfo

// int64 bet = 1;
inline void A7BetInfo::clear_bet() {
  bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 A7BetInfo::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 A7BetInfo::bet() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7BetInfo.bet)
  return _internal_bet();
}
inline void A7BetInfo::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_ = value;
}
inline void A7BetInfo::set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7BetInfo.bet)
}

// int32 area = 2;
inline void A7BetInfo::clear_area() {
  area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7BetInfo::_internal_area() const {
  return area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7BetInfo::area() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7BetInfo.area)
  return _internal_area();
}
inline void A7BetInfo::_internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_ = value;
}
inline void A7BetInfo::set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7BetInfo.area)
}

// -------------------------------------------------------------------

// A7PlayerData

// int32 user_id = 1;
inline void A7PlayerData::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::user_id() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7PlayerData.user_id)
  return _internal_user_id();
}
inline void A7PlayerData::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void A7PlayerData::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7PlayerData.user_id)
}

// int32 chair_id = 2;
inline void A7PlayerData::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::chair_id() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7PlayerData.chair_id)
  return _internal_chair_id();
}
inline void A7PlayerData::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void A7PlayerData::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7PlayerData.chair_id)
}

// int64 win_gold = 3;
inline void A7PlayerData::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 A7PlayerData::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 A7PlayerData::win_gold() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7PlayerData.win_gold)
  return _internal_win_gold();
}
inline void A7PlayerData::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void A7PlayerData::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7PlayerData.win_gold)
}

// int32 total_play = 4;
inline void A7PlayerData::clear_total_play() {
  total_play_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::_internal_total_play() const {
  return total_play_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::total_play() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7PlayerData.total_play)
  return _internal_total_play();
}
inline void A7PlayerData::_internal_set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_play_ = value;
}
inline void A7PlayerData::set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_play(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7PlayerData.total_play)
}

// int32 win_play = 5;
inline void A7PlayerData::clear_win_play() {
  win_play_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::_internal_win_play() const {
  return win_play_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 A7PlayerData::win_play() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7PlayerData.win_play)
  return _internal_win_play();
}
inline void A7PlayerData::_internal_set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  win_play_ = value;
}
inline void A7PlayerData::set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_win_play(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7PlayerData.win_play)
}

// int64 game_bet = 6;
inline void A7PlayerData::clear_game_bet() {
  game_bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 A7PlayerData::_internal_game_bet() const {
  return game_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 A7PlayerData::game_bet() const {
  // @@protoc_insertion_point(field_get:A7U7P.A7PlayerData.game_bet)
  return _internal_game_bet();
}
inline void A7PlayerData::_internal_set_game_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  game_bet_ = value;
}
inline void A7PlayerData::set_game_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_game_bet(value);
  // @@protoc_insertion_point(field_set:A7U7P.A7PlayerData.game_bet)
}

// repeated .A7U7P.A7BetInfo bet_infos = 7;
inline int A7PlayerData::_internal_bet_infos_size() const {
  return bet_infos_.size();
}
inline int A7PlayerData::bet_infos_size() const {
  return _internal_bet_infos_size();
}
inline void A7PlayerData::clear_bet_infos() {
  bet_infos_.Clear();
}
inline ::A7U7P::A7BetInfo* A7PlayerData::mutable_bet_infos(int index) {
  // @@protoc_insertion_point(field_mutable:A7U7P.A7PlayerData.bet_infos)
  return bet_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7BetInfo >*
A7PlayerData::mutable_bet_infos() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.A7PlayerData.bet_infos)
  return &bet_infos_;
}
inline const ::A7U7P::A7BetInfo& A7PlayerData::_internal_bet_infos(int index) const {
  return bet_infos_.Get(index);
}
inline const ::A7U7P::A7BetInfo& A7PlayerData::bet_infos(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.A7PlayerData.bet_infos)
  return _internal_bet_infos(index);
}
inline ::A7U7P::A7BetInfo* A7PlayerData::_internal_add_bet_infos() {
  return bet_infos_.Add();
}
inline ::A7U7P::A7BetInfo* A7PlayerData::add_bet_infos() {
  // @@protoc_insertion_point(field_add:A7U7P.A7PlayerData.bet_infos)
  return _internal_add_bet_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7BetInfo >&
A7PlayerData::bet_infos() const {
  // @@protoc_insertion_point(field_list:A7U7P.A7PlayerData.bet_infos)
  return bet_infos_;
}

// -------------------------------------------------------------------

// MsgA7Record

// repeated int32 sieves = 2;
inline int MsgA7Record::_internal_sieves_size() const {
  return sieves_.size();
}
inline int MsgA7Record::sieves_size() const {
  return _internal_sieves_size();
}
inline void MsgA7Record::clear_sieves() {
  sieves_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Record::_internal_sieves(int index) const {
  return sieves_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Record::sieves(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7Record.sieves)
  return _internal_sieves(index);
}
inline void MsgA7Record::set_sieves(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  sieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7Record.sieves)
}
inline void MsgA7Record::_internal_add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value) {
  sieves_.Add(value);
}
inline void MsgA7Record::add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_sieves(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7Record.sieves)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7Record::_internal_sieves() const {
  return sieves_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7Record::sieves() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7Record.sieves)
  return _internal_sieves();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7Record::_internal_mutable_sieves() {
  return &sieves_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7Record::mutable_sieves() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7Record.sieves)
  return _internal_mutable_sieves();
}

// -------------------------------------------------------------------

// MsgA7SceneInfo

// repeated int64 bet_list = 1;
inline int MsgA7SceneInfo::_internal_bet_list_size() const {
  return bet_list_.size();
}
inline int MsgA7SceneInfo::bet_list_size() const {
  return _internal_bet_list_size();
}
inline void MsgA7SceneInfo::clear_bet_list() {
  bet_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7SceneInfo::_internal_bet_list(int index) const {
  return bet_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7SceneInfo::bet_list(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.bet_list)
  return _internal_bet_list(index);
}
inline void MsgA7SceneInfo::set_bet_list(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  bet_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.bet_list)
}
inline void MsgA7SceneInfo::_internal_add_bet_list(::PROTOBUF_NAMESPACE_ID::int64 value) {
  bet_list_.Add(value);
}
inline void MsgA7SceneInfo::add_bet_list(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_bet_list(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7SceneInfo.bet_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MsgA7SceneInfo::_internal_bet_list() const {
  return bet_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MsgA7SceneInfo::bet_list() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7SceneInfo.bet_list)
  return _internal_bet_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MsgA7SceneInfo::_internal_mutable_bet_list() {
  return &bet_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MsgA7SceneInfo::mutable_bet_list() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7SceneInfo.bet_list)
  return _internal_mutable_bet_list();
}

// repeated int32 area_mup = 2;
inline int MsgA7SceneInfo::_internal_area_mup_size() const {
  return area_mup_.size();
}
inline int MsgA7SceneInfo::area_mup_size() const {
  return _internal_area_mup_size();
}
inline void MsgA7SceneInfo::clear_area_mup() {
  area_mup_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_area_mup(int index) const {
  return area_mup_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::area_mup(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.area_mup)
  return _internal_area_mup(index);
}
inline void MsgA7SceneInfo::set_area_mup(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  area_mup_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.area_mup)
}
inline void MsgA7SceneInfo::_internal_add_area_mup(::PROTOBUF_NAMESPACE_ID::int32 value) {
  area_mup_.Add(value);
}
inline void MsgA7SceneInfo::add_area_mup(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_area_mup(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7SceneInfo.area_mup)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::_internal_area_mup() const {
  return area_mup_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::area_mup() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7SceneInfo.area_mup)
  return _internal_area_mup();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::_internal_mutable_area_mup() {
  return &area_mup_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::mutable_area_mup() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7SceneInfo.area_mup)
  return _internal_mutable_area_mup();
}

// repeated .A7U7P.MsgA7Record records = 3;
inline int MsgA7SceneInfo::_internal_records_size() const {
  return records_.size();
}
inline int MsgA7SceneInfo::records_size() const {
  return _internal_records_size();
}
inline void MsgA7SceneInfo::clear_records() {
  records_.Clear();
}
inline ::A7U7P::MsgA7Record* MsgA7SceneInfo::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:A7U7P.MsgA7SceneInfo.records)
  return records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7Record >*
MsgA7SceneInfo::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7SceneInfo.records)
  return &records_;
}
inline const ::A7U7P::MsgA7Record& MsgA7SceneInfo::_internal_records(int index) const {
  return records_.Get(index);
}
inline const ::A7U7P::MsgA7Record& MsgA7SceneInfo::records(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.records)
  return _internal_records(index);
}
inline ::A7U7P::MsgA7Record* MsgA7SceneInfo::_internal_add_records() {
  return records_.Add();
}
inline ::A7U7P::MsgA7Record* MsgA7SceneInfo::add_records() {
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7SceneInfo.records)
  return _internal_add_records();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7Record >&
MsgA7SceneInfo::records() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7SceneInfo.records)
  return records_;
}

// repeated int32 bet_limit = 4;
inline int MsgA7SceneInfo::_internal_bet_limit_size() const {
  return bet_limit_.size();
}
inline int MsgA7SceneInfo::bet_limit_size() const {
  return _internal_bet_limit_size();
}
inline void MsgA7SceneInfo::clear_bet_limit() {
  bet_limit_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_bet_limit(int index) const {
  return bet_limit_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::bet_limit(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.bet_limit)
  return _internal_bet_limit(index);
}
inline void MsgA7SceneInfo::set_bet_limit(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.bet_limit)
}
inline void MsgA7SceneInfo::_internal_add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_.Add(value);
}
inline void MsgA7SceneInfo::add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bet_limit(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7SceneInfo.bet_limit)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::_internal_bet_limit() const {
  return bet_limit_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::bet_limit() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7SceneInfo.bet_limit)
  return _internal_bet_limit();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::_internal_mutable_bet_limit() {
  return &bet_limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::mutable_bet_limit() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7SceneInfo.bet_limit)
  return _internal_mutable_bet_limit();
}

// int32 player_limit = 5;
inline void MsgA7SceneInfo::clear_player_limit() {
  player_limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_player_limit() const {
  return player_limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::player_limit() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.player_limit)
  return _internal_player_limit();
}
inline void MsgA7SceneInfo::_internal_set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  player_limit_ = value;
}
inline void MsgA7SceneInfo::set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_limit(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.player_limit)
}

// int32 bet_time = 6;
inline void MsgA7SceneInfo::clear_bet_time() {
  bet_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_bet_time() const {
  return bet_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::bet_time() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.bet_time)
  return _internal_bet_time();
}
inline void MsgA7SceneInfo::_internal_set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_time_ = value;
}
inline void MsgA7SceneInfo::set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet_time(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.bet_time)
}

// int32 out_time = 7;
inline void MsgA7SceneInfo::clear_out_time() {
  out_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_out_time() const {
  return out_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::out_time() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.out_time)
  return _internal_out_time();
}
inline void MsgA7SceneInfo::_internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_time_ = value;
}
inline void MsgA7SceneInfo::set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_time(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.out_time)
}

// int32 state = 8;
inline void MsgA7SceneInfo::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::state() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.state)
  return _internal_state();
}
inline void MsgA7SceneInfo::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void MsgA7SceneInfo::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.state)
}

// int32 game_tax = 9;
inline void MsgA7SceneInfo::clear_game_tax() {
  game_tax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_game_tax() const {
  return game_tax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::game_tax() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.game_tax)
  return _internal_game_tax();
}
inline void MsgA7SceneInfo::_internal_set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_tax_ = value;
}
inline void MsgA7SceneInfo::set_game_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_tax(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.game_tax)
}

// repeated int32 area_bet = 19;
inline int MsgA7SceneInfo::_internal_area_bet_size() const {
  return area_bet_.size();
}
inline int MsgA7SceneInfo::area_bet_size() const {
  return _internal_area_bet_size();
}
inline void MsgA7SceneInfo::clear_area_bet() {
  area_bet_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_area_bet(int index) const {
  return area_bet_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::area_bet(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.area_bet)
  return _internal_area_bet(index);
}
inline void MsgA7SceneInfo::set_area_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  area_bet_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.area_bet)
}
inline void MsgA7SceneInfo::_internal_add_area_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  area_bet_.Add(value);
}
inline void MsgA7SceneInfo::add_area_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_area_bet(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7SceneInfo.area_bet)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::_internal_area_bet() const {
  return area_bet_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::area_bet() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7SceneInfo.area_bet)
  return _internal_area_bet();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::_internal_mutable_area_bet() {
  return &area_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::mutable_area_bet() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7SceneInfo.area_bet)
  return _internal_mutable_area_bet();
}

// repeated int32 sieves = 20;
inline int MsgA7SceneInfo::_internal_sieves_size() const {
  return sieves_.size();
}
inline int MsgA7SceneInfo::sieves_size() const {
  return _internal_sieves_size();
}
inline void MsgA7SceneInfo::clear_sieves() {
  sieves_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::_internal_sieves(int index) const {
  return sieves_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7SceneInfo::sieves(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.sieves)
  return _internal_sieves(index);
}
inline void MsgA7SceneInfo::set_sieves(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  sieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7SceneInfo.sieves)
}
inline void MsgA7SceneInfo::_internal_add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value) {
  sieves_.Add(value);
}
inline void MsgA7SceneInfo::add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_sieves(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7SceneInfo.sieves)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::_internal_sieves() const {
  return sieves_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7SceneInfo::sieves() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7SceneInfo.sieves)
  return _internal_sieves();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::_internal_mutable_sieves() {
  return &sieves_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7SceneInfo::mutable_sieves() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7SceneInfo.sieves)
  return _internal_mutable_sieves();
}

// repeated .A7U7P.A7PlayerData player_list = 22;
inline int MsgA7SceneInfo::_internal_player_list_size() const {
  return player_list_.size();
}
inline int MsgA7SceneInfo::player_list_size() const {
  return _internal_player_list_size();
}
inline void MsgA7SceneInfo::clear_player_list() {
  player_list_.Clear();
}
inline ::A7U7P::A7PlayerData* MsgA7SceneInfo::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:A7U7P.MsgA7SceneInfo.player_list)
  return player_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7PlayerData >*
MsgA7SceneInfo::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7SceneInfo.player_list)
  return &player_list_;
}
inline const ::A7U7P::A7PlayerData& MsgA7SceneInfo::_internal_player_list(int index) const {
  return player_list_.Get(index);
}
inline const ::A7U7P::A7PlayerData& MsgA7SceneInfo::player_list(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7SceneInfo.player_list)
  return _internal_player_list(index);
}
inline ::A7U7P::A7PlayerData* MsgA7SceneInfo::_internal_add_player_list() {
  return player_list_.Add();
}
inline ::A7U7P::A7PlayerData* MsgA7SceneInfo::add_player_list() {
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7SceneInfo.player_list)
  return _internal_add_player_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::A7PlayerData >&
MsgA7SceneInfo::player_list() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7SceneInfo.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// MsgA7Bet

// int64 bet = 1;
inline void MsgA7Bet::clear_bet() {
  bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7Bet::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7Bet::bet() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7Bet.bet)
  return _internal_bet();
}
inline void MsgA7Bet::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_ = value;
}
inline void MsgA7Bet::set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7Bet.bet)
}

// int32 area = 2;
inline void MsgA7Bet::clear_area() {
  area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Bet::_internal_area() const {
  return area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Bet::area() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7Bet.area)
  return _internal_area();
}
inline void MsgA7Bet::_internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_ = value;
}
inline void MsgA7Bet::set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7Bet.area)
}

// -------------------------------------------------------------------

// MsgA7BetResp

// int32 ret_code = 1;
inline void MsgA7BetResp::clear_ret_code() {
  ret_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7BetResp::_internal_ret_code() const {
  return ret_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7BetResp::ret_code() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7BetResp.ret_code)
  return _internal_ret_code();
}
inline void MsgA7BetResp::_internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_code_ = value;
}
inline void MsgA7BetResp::set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7BetResp.ret_code)
}

// int32 user_id = 2;
inline void MsgA7BetResp::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7BetResp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7BetResp::user_id() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7BetResp.user_id)
  return _internal_user_id();
}
inline void MsgA7BetResp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgA7BetResp::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7BetResp.user_id)
}

// int32 chair_id = 3;
inline void MsgA7BetResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7BetResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7BetResp::chair_id() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7BetResp.chair_id)
  return _internal_chair_id();
}
inline void MsgA7BetResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void MsgA7BetResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7BetResp.chair_id)
}

// .A7U7P.A7BetInfo bet_info = 4;
inline bool MsgA7BetResp::_internal_has_bet_info() const {
  return this != internal_default_instance() && bet_info_ != nullptr;
}
inline bool MsgA7BetResp::has_bet_info() const {
  return _internal_has_bet_info();
}
inline void MsgA7BetResp::clear_bet_info() {
  if (GetArena() == nullptr && bet_info_ != nullptr) {
    delete bet_info_;
  }
  bet_info_ = nullptr;
}
inline const ::A7U7P::A7BetInfo& MsgA7BetResp::_internal_bet_info() const {
  const ::A7U7P::A7BetInfo* p = bet_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::A7U7P::A7BetInfo&>(
      ::A7U7P::_A7BetInfo_default_instance_);
}
inline const ::A7U7P::A7BetInfo& MsgA7BetResp::bet_info() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7BetResp.bet_info)
  return _internal_bet_info();
}
inline void MsgA7BetResp::unsafe_arena_set_allocated_bet_info(
    ::A7U7P::A7BetInfo* bet_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bet_info_);
  }
  bet_info_ = bet_info;
  if (bet_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:A7U7P.MsgA7BetResp.bet_info)
}
inline ::A7U7P::A7BetInfo* MsgA7BetResp::release_bet_info() {
  
  ::A7U7P::A7BetInfo* temp = bet_info_;
  bet_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::A7U7P::A7BetInfo* MsgA7BetResp::unsafe_arena_release_bet_info() {
  // @@protoc_insertion_point(field_release:A7U7P.MsgA7BetResp.bet_info)
  
  ::A7U7P::A7BetInfo* temp = bet_info_;
  bet_info_ = nullptr;
  return temp;
}
inline ::A7U7P::A7BetInfo* MsgA7BetResp::_internal_mutable_bet_info() {
  
  if (bet_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::A7U7P::A7BetInfo>(GetArena());
    bet_info_ = p;
  }
  return bet_info_;
}
inline ::A7U7P::A7BetInfo* MsgA7BetResp::mutable_bet_info() {
  // @@protoc_insertion_point(field_mutable:A7U7P.MsgA7BetResp.bet_info)
  return _internal_mutable_bet_info();
}
inline void MsgA7BetResp::set_allocated_bet_info(::A7U7P::A7BetInfo* bet_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bet_info_;
  }
  if (bet_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bet_info);
    if (message_arena != submessage_arena) {
      bet_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bet_info, submessage_arena);
    }
    
  } else {
    
  }
  bet_info_ = bet_info;
  // @@protoc_insertion_point(field_set_allocated:A7U7P.MsgA7BetResp.bet_info)
}

// -------------------------------------------------------------------

// MsgA7WinMsg

// int32 user_id = 1;
inline void MsgA7WinMsg::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7WinMsg::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7WinMsg::user_id() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7WinMsg.user_id)
  return _internal_user_id();
}
inline void MsgA7WinMsg::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgA7WinMsg::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7WinMsg.user_id)
}

// int32 chair_id = 2;
inline void MsgA7WinMsg::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7WinMsg::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7WinMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7WinMsg.chair_id)
  return _internal_chair_id();
}
inline void MsgA7WinMsg::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void MsgA7WinMsg::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7WinMsg.chair_id)
}

// int64 win_gold = 3;
inline void MsgA7WinMsg::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7WinMsg::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7WinMsg::win_gold() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7WinMsg.win_gold)
  return _internal_win_gold();
}
inline void MsgA7WinMsg::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void MsgA7WinMsg::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7WinMsg.win_gold)
}

// int64 new_gold = 4;
inline void MsgA7WinMsg::clear_new_gold() {
  new_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7WinMsg::_internal_new_gold() const {
  return new_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgA7WinMsg::new_gold() const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7WinMsg.new_gold)
  return _internal_new_gold();
}
inline void MsgA7WinMsg::_internal_set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  new_gold_ = value;
}
inline void MsgA7WinMsg::set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_new_gold(value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7WinMsg.new_gold)
}

// -------------------------------------------------------------------

// MsgA7Result

// repeated int32 sieves = 2;
inline int MsgA7Result::_internal_sieves_size() const {
  return sieves_.size();
}
inline int MsgA7Result::sieves_size() const {
  return _internal_sieves_size();
}
inline void MsgA7Result::clear_sieves() {
  sieves_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Result::_internal_sieves(int index) const {
  return sieves_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Result::sieves(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7Result.sieves)
  return _internal_sieves(index);
}
inline void MsgA7Result::set_sieves(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  sieves_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7Result.sieves)
}
inline void MsgA7Result::_internal_add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value) {
  sieves_.Add(value);
}
inline void MsgA7Result::add_sieves(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_sieves(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7Result.sieves)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7Result::_internal_sieves() const {
  return sieves_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7Result::sieves() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7Result.sieves)
  return _internal_sieves();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7Result::_internal_mutable_sieves() {
  return &sieves_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7Result::mutable_sieves() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7Result.sieves)
  return _internal_mutable_sieves();
}

// repeated int32 win_index = 1;
inline int MsgA7Result::_internal_win_index_size() const {
  return win_index_.size();
}
inline int MsgA7Result::win_index_size() const {
  return _internal_win_index_size();
}
inline void MsgA7Result::clear_win_index() {
  win_index_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Result::_internal_win_index(int index) const {
  return win_index_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgA7Result::win_index(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7Result.win_index)
  return _internal_win_index(index);
}
inline void MsgA7Result::set_win_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  win_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:A7U7P.MsgA7Result.win_index)
}
inline void MsgA7Result::_internal_add_win_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  win_index_.Add(value);
}
inline void MsgA7Result::add_win_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_win_index(value);
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7Result.win_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7Result::_internal_win_index() const {
  return win_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgA7Result::win_index() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7Result.win_index)
  return _internal_win_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7Result::_internal_mutable_win_index() {
  return &win_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgA7Result::mutable_win_index() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7Result.win_index)
  return _internal_mutable_win_index();
}

// repeated .A7U7P.MsgA7WinMsg win_msg = 3;
inline int MsgA7Result::_internal_win_msg_size() const {
  return win_msg_.size();
}
inline int MsgA7Result::win_msg_size() const {
  return _internal_win_msg_size();
}
inline void MsgA7Result::clear_win_msg() {
  win_msg_.Clear();
}
inline ::A7U7P::MsgA7WinMsg* MsgA7Result::mutable_win_msg(int index) {
  // @@protoc_insertion_point(field_mutable:A7U7P.MsgA7Result.win_msg)
  return win_msg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7WinMsg >*
MsgA7Result::mutable_win_msg() {
  // @@protoc_insertion_point(field_mutable_list:A7U7P.MsgA7Result.win_msg)
  return &win_msg_;
}
inline const ::A7U7P::MsgA7WinMsg& MsgA7Result::_internal_win_msg(int index) const {
  return win_msg_.Get(index);
}
inline const ::A7U7P::MsgA7WinMsg& MsgA7Result::win_msg(int index) const {
  // @@protoc_insertion_point(field_get:A7U7P.MsgA7Result.win_msg)
  return _internal_win_msg(index);
}
inline ::A7U7P::MsgA7WinMsg* MsgA7Result::_internal_add_win_msg() {
  return win_msg_.Add();
}
inline ::A7U7P::MsgA7WinMsg* MsgA7Result::add_win_msg() {
  // @@protoc_insertion_point(field_add:A7U7P.MsgA7Result.win_msg)
  return _internal_add_win_msg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::A7U7P::MsgA7WinMsg >&
MsgA7Result::win_msg() const {
  // @@protoc_insertion_point(field_list:A7U7P.MsgA7Result.win_msg)
  return win_msg_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace A7U7P

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::A7U7P::EGameState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::A7U7P::EGameState>() {
  return ::A7U7P::EGameState_descriptor();
}
template <> struct is_proto_enum< ::A7U7P::EMsgIDSubGame> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::A7U7P::EMsgIDSubGame>() {
  return ::A7U7P::EMsgIDSubGame_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_A7U7P_2eproto
