// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Lucky9.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Lucky9_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Lucky9_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Lucky9_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Lucky9_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Lucky9_2eproto;
namespace Lucky9 {
class LCMsgAction;
class LCMsgActionDefaultTypeInternal;
extern LCMsgActionDefaultTypeInternal _LCMsgAction_default_instance_;
class LCMsgAddBetResp;
class LCMsgAddBetRespDefaultTypeInternal;
extern LCMsgAddBetRespDefaultTypeInternal _LCMsgAddBetResp_default_instance_;
class LCMsgEndPlayerInfo;
class LCMsgEndPlayerInfoDefaultTypeInternal;
extern LCMsgEndPlayerInfoDefaultTypeInternal _LCMsgEndPlayerInfo_default_instance_;
class LCMsgGameResult;
class LCMsgGameResultDefaultTypeInternal;
extern LCMsgGameResultDefaultTypeInternal _LCMsgGameResult_default_instance_;
class LCMsgGameStartResp;
class LCMsgGameStartRespDefaultTypeInternal;
extern LCMsgGameStartRespDefaultTypeInternal _LCMsgGameStartResp_default_instance_;
class LCMsgGetCardResp;
class LCMsgGetCardRespDefaultTypeInternal;
extern LCMsgGetCardRespDefaultTypeInternal _LCMsgGetCardResp_default_instance_;
class LCMsgHandCards;
class LCMsgHandCardsDefaultTypeInternal;
extern LCMsgHandCardsDefaultTypeInternal _LCMsgHandCards_default_instance_;
class LCMsgNotifyActionResp;
class LCMsgNotifyActionRespDefaultTypeInternal;
extern LCMsgNotifyActionRespDefaultTypeInternal _LCMsgNotifyActionResp_default_instance_;
class LCMsgNotifyPlayerAct;
class LCMsgNotifyPlayerActDefaultTypeInternal;
extern LCMsgNotifyPlayerActDefaultTypeInternal _LCMsgNotifyPlayerAct_default_instance_;
class LCMsgPlayerInfo;
class LCMsgPlayerInfoDefaultTypeInternal;
extern LCMsgPlayerInfoDefaultTypeInternal _LCMsgPlayerInfo_default_instance_;
class LCMsgSceneInfo;
class LCMsgSceneInfoDefaultTypeInternal;
extern LCMsgSceneInfoDefaultTypeInternal _LCMsgSceneInfo_default_instance_;
class LCMsgTableState;
class LCMsgTableStateDefaultTypeInternal;
extern LCMsgTableStateDefaultTypeInternal _LCMsgTableState_default_instance_;
}  // namespace Lucky9
PROTOBUF_NAMESPACE_OPEN
template<> ::Lucky9::LCMsgAction* Arena::CreateMaybeMessage<::Lucky9::LCMsgAction>(Arena*);
template<> ::Lucky9::LCMsgAddBetResp* Arena::CreateMaybeMessage<::Lucky9::LCMsgAddBetResp>(Arena*);
template<> ::Lucky9::LCMsgEndPlayerInfo* Arena::CreateMaybeMessage<::Lucky9::LCMsgEndPlayerInfo>(Arena*);
template<> ::Lucky9::LCMsgGameResult* Arena::CreateMaybeMessage<::Lucky9::LCMsgGameResult>(Arena*);
template<> ::Lucky9::LCMsgGameStartResp* Arena::CreateMaybeMessage<::Lucky9::LCMsgGameStartResp>(Arena*);
template<> ::Lucky9::LCMsgGetCardResp* Arena::CreateMaybeMessage<::Lucky9::LCMsgGetCardResp>(Arena*);
template<> ::Lucky9::LCMsgHandCards* Arena::CreateMaybeMessage<::Lucky9::LCMsgHandCards>(Arena*);
template<> ::Lucky9::LCMsgNotifyActionResp* Arena::CreateMaybeMessage<::Lucky9::LCMsgNotifyActionResp>(Arena*);
template<> ::Lucky9::LCMsgNotifyPlayerAct* Arena::CreateMaybeMessage<::Lucky9::LCMsgNotifyPlayerAct>(Arena*);
template<> ::Lucky9::LCMsgPlayerInfo* Arena::CreateMaybeMessage<::Lucky9::LCMsgPlayerInfo>(Arena*);
template<> ::Lucky9::LCMsgSceneInfo* Arena::CreateMaybeMessage<::Lucky9::LCMsgSceneInfo>(Arena*);
template<> ::Lucky9::LCMsgTableState* Arena::CreateMaybeMessage<::Lucky9::LCMsgTableState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Lucky9 {

enum ELCMsgGameState : int {
  GS_TP_READY = 0,
  GS_TP_DEAL = 1,
  GS_TP_PLAYING = 2,
  GS_TP_COMPARE = 3,
  GS_TP_RESULT = 4,
  ELCMsgGameState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ELCMsgGameState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ELCMsgGameState_IsValid(int value);
constexpr ELCMsgGameState ELCMsgGameState_MIN = GS_TP_READY;
constexpr ELCMsgGameState ELCMsgGameState_MAX = GS_TP_RESULT;
constexpr int ELCMsgGameState_ARRAYSIZE = ELCMsgGameState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELCMsgGameState_descriptor();
template<typename T>
inline const std::string& ELCMsgGameState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ELCMsgGameState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ELCMsgGameState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ELCMsgGameState_descriptor(), enum_t_value);
}
inline bool ELCMsgGameState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ELCMsgGameState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ELCMsgGameState>(
    ELCMsgGameState_descriptor(), name, value);
}
enum ELCMsgPlayerState : int {
  PS_READY = 0,
  PS_PLAY = 1,
  PS_GIVE = 2,
  PS_FAIL = 3,
  PS_TIMEOUT = 4,
  ELCMsgPlayerState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ELCMsgPlayerState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ELCMsgPlayerState_IsValid(int value);
constexpr ELCMsgPlayerState ELCMsgPlayerState_MIN = PS_READY;
constexpr ELCMsgPlayerState ELCMsgPlayerState_MAX = PS_TIMEOUT;
constexpr int ELCMsgPlayerState_ARRAYSIZE = ELCMsgPlayerState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELCMsgPlayerState_descriptor();
template<typename T>
inline const std::string& ELCMsgPlayerState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ELCMsgPlayerState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ELCMsgPlayerState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ELCMsgPlayerState_descriptor(), enum_t_value);
}
inline bool ELCMsgPlayerState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ELCMsgPlayerState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ELCMsgPlayerState>(
    ELCMsgPlayerState_descriptor(), name, value);
}
enum ELCMsgCardType : int {
  CT_SINGLE = 0,
  CT_9 = 1,
  CT_MAX = 2,
  ELCMsgCardType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ELCMsgCardType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ELCMsgCardType_IsValid(int value);
constexpr ELCMsgCardType ELCMsgCardType_MIN = CT_SINGLE;
constexpr ELCMsgCardType ELCMsgCardType_MAX = CT_MAX;
constexpr int ELCMsgCardType_ARRAYSIZE = ELCMsgCardType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELCMsgCardType_descriptor();
template<typename T>
inline const std::string& ELCMsgCardType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ELCMsgCardType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ELCMsgCardType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ELCMsgCardType_descriptor(), enum_t_value);
}
inline bool ELCMsgCardType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ELCMsgCardType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ELCMsgCardType>(
    ELCMsgCardType_descriptor(), name, value);
}
enum ELCMsgGameAction : int {
  InvaldAct = 0,
  AddBet = 1,
  GetCard = 2,
  NotCard = 4,
  ELCMsgGameAction_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ELCMsgGameAction_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ELCMsgGameAction_IsValid(int value);
constexpr ELCMsgGameAction ELCMsgGameAction_MIN = InvaldAct;
constexpr ELCMsgGameAction ELCMsgGameAction_MAX = NotCard;
constexpr int ELCMsgGameAction_ARRAYSIZE = ELCMsgGameAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELCMsgGameAction_descriptor();
template<typename T>
inline const std::string& ELCMsgGameAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ELCMsgGameAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ELCMsgGameAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ELCMsgGameAction_descriptor(), enum_t_value);
}
inline bool ELCMsgGameAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ELCMsgGameAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ELCMsgGameAction>(
    ELCMsgGameAction_descriptor(), name, value);
}
enum ELCMsgIDSubGame : int {
  MsgIDSubGame_Null = 0,
  MsgIDSubGame_GameStartResp = 1,
  MsgIDSubGame_NotifyActionResp = 2,
  MsgIDSubGame_Action = 3,
  MsgIDSubGame_AddBetResp = 4,
  MsgIDSubGame_GetCardResp = 5,
  MsgIDSubGame_GameResultResp = 9,
  MsgIDSubGame_NotifyStateResp = 10,
  MsgIDSubGame_TimeOutResp = 11,
  MsgIDSubGame_TimeOutReady = 12,
  MsgIDSubGame_TimeOutReadyResp = 13,
  MsgIDSubGame_TimeOutKickResp = 14,
  MsgIDSubGame_NotifySystemCheatResp = 20,
  MsgIDSubGame_NotifyCardTypeResp = 21,
  MsgIDSubGame_NotifyIsMaxResp = 22,
  MsgIDSubGame_NotifyLastActResp = 23,
  ELCMsgIDSubGame_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ELCMsgIDSubGame_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ELCMsgIDSubGame_IsValid(int value);
constexpr ELCMsgIDSubGame ELCMsgIDSubGame_MIN = MsgIDSubGame_Null;
constexpr ELCMsgIDSubGame ELCMsgIDSubGame_MAX = MsgIDSubGame_NotifyLastActResp;
constexpr int ELCMsgIDSubGame_ARRAYSIZE = ELCMsgIDSubGame_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ELCMsgIDSubGame_descriptor();
template<typename T>
inline const std::string& ELCMsgIDSubGame_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ELCMsgIDSubGame>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ELCMsgIDSubGame_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ELCMsgIDSubGame_descriptor(), enum_t_value);
}
inline bool ELCMsgIDSubGame_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ELCMsgIDSubGame* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ELCMsgIDSubGame>(
    ELCMsgIDSubGame_descriptor(), name, value);
}
// ===================================================================

class LCMsgTableState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgTableState) */ {
 public:
  inline LCMsgTableState() : LCMsgTableState(nullptr) {}
  virtual ~LCMsgTableState();

  LCMsgTableState(const LCMsgTableState& from);
  LCMsgTableState(LCMsgTableState&& from) noexcept
    : LCMsgTableState() {
    *this = ::std::move(from);
  }

  inline LCMsgTableState& operator=(const LCMsgTableState& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgTableState& operator=(LCMsgTableState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgTableState& default_instance();

  static inline const LCMsgTableState* internal_default_instance() {
    return reinterpret_cast<const LCMsgTableState*>(
               &_LCMsgTableState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LCMsgTableState& a, LCMsgTableState& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgTableState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgTableState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgTableState* New() const final {
    return CreateMaybeMessage<LCMsgTableState>(nullptr);
  }

  LCMsgTableState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgTableState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgTableState& from);
  void MergeFrom(const LCMsgTableState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgTableState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgTableState";
  }
  protected:
  explicit LCMsgTableState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
    kOutImeFieldNumber = 2,
  };
  // int32 state = 1;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_ime = 2;
  void clear_out_ime();
  ::PROTOBUF_NAMESPACE_ID::int32 out_ime() const;
  void set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_ime() const;
  void _internal_set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgTableState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_ime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgHandCards PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgHandCards) */ {
 public:
  inline LCMsgHandCards() : LCMsgHandCards(nullptr) {}
  virtual ~LCMsgHandCards();

  LCMsgHandCards(const LCMsgHandCards& from);
  LCMsgHandCards(LCMsgHandCards&& from) noexcept
    : LCMsgHandCards() {
    *this = ::std::move(from);
  }

  inline LCMsgHandCards& operator=(const LCMsgHandCards& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgHandCards& operator=(LCMsgHandCards&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgHandCards& default_instance();

  static inline const LCMsgHandCards* internal_default_instance() {
    return reinterpret_cast<const LCMsgHandCards*>(
               &_LCMsgHandCards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LCMsgHandCards& a, LCMsgHandCards& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgHandCards* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgHandCards* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgHandCards* New() const final {
    return CreateMaybeMessage<LCMsgHandCards>(nullptr);
  }

  LCMsgHandCards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgHandCards>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgHandCards& from);
  void MergeFrom(const LCMsgHandCards& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgHandCards* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgHandCards";
  }
  protected:
  explicit LCMsgHandCards(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 3,
    kTypeFieldNumber = 1,
    kNumberFieldNumber = 2,
  };
  // repeated int32 cards = 3;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // int32 type = 1;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 number = 2;
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::int32 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgHandCards)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgPlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgPlayerInfo) */ {
 public:
  inline LCMsgPlayerInfo() : LCMsgPlayerInfo(nullptr) {}
  virtual ~LCMsgPlayerInfo();

  LCMsgPlayerInfo(const LCMsgPlayerInfo& from);
  LCMsgPlayerInfo(LCMsgPlayerInfo&& from) noexcept
    : LCMsgPlayerInfo() {
    *this = ::std::move(from);
  }

  inline LCMsgPlayerInfo& operator=(const LCMsgPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgPlayerInfo& operator=(LCMsgPlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgPlayerInfo& default_instance();

  static inline const LCMsgPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const LCMsgPlayerInfo*>(
               &_LCMsgPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(LCMsgPlayerInfo& a, LCMsgPlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgPlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgPlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgPlayerInfo* New() const final {
    return CreateMaybeMessage<LCMsgPlayerInfo>(nullptr);
  }

  LCMsgPlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgPlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgPlayerInfo& from);
  void MergeFrom(const LCMsgPlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgPlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgPlayerInfo";
  }
  protected:
  explicit LCMsgPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandlsFieldNumber = 9,
    kChairIdFieldNumber = 1,
    kPlayStatusFieldNumber = 2,
    kPlayerBetFieldNumber = 3,
    kCardTypeFieldNumber = 4,
    kGetCardFieldNumber = 5,
    kGoldFieldNumber = 6,
    kWinGoldFieldNumber = 7,
    kWinConutFieldNumber = 8,
  };
  // .Lucky9.LCMsgHandCards handls = 9;
  bool has_handls() const;
  private:
  bool _internal_has_handls() const;
  public:
  void clear_handls();
  const ::Lucky9::LCMsgHandCards& handls() const;
  ::Lucky9::LCMsgHandCards* release_handls();
  ::Lucky9::LCMsgHandCards* mutable_handls();
  void set_allocated_handls(::Lucky9::LCMsgHandCards* handls);
  private:
  const ::Lucky9::LCMsgHandCards& _internal_handls() const;
  ::Lucky9::LCMsgHandCards* _internal_mutable_handls();
  public:
  void unsafe_arena_set_allocated_handls(
      ::Lucky9::LCMsgHandCards* handls);
  ::Lucky9::LCMsgHandCards* unsafe_arena_release_handls();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 play_status = 2;
  void clear_play_status();
  ::PROTOBUF_NAMESPACE_ID::int32 play_status() const;
  void set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_play_status() const;
  void _internal_set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 player_bet = 3;
  void clear_player_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 player_bet() const;
  void set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_bet() const;
  void _internal_set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 card_type = 4;
  void clear_card_type();
  ::PROTOBUF_NAMESPACE_ID::int32 card_type() const;
  void set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card_type() const;
  void _internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 get_card = 5;
  void clear_get_card();
  ::PROTOBUF_NAMESPACE_ID::int32 get_card() const;
  void set_get_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_get_card() const;
  void _internal_set_get_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 gold = 6;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 win_gold = 7;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 win_conut = 8;
  void clear_win_conut();
  ::PROTOBUF_NAMESPACE_ID::int64 win_conut() const;
  void set_win_conut(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_conut() const;
  void _internal_set_win_conut(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgPlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Lucky9::LCMsgHandCards* handls_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 play_status_;
  ::PROTOBUF_NAMESPACE_ID::int64 player_bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 card_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 get_card_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_conut_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgSceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgSceneInfo) */ {
 public:
  inline LCMsgSceneInfo() : LCMsgSceneInfo(nullptr) {}
  virtual ~LCMsgSceneInfo();

  LCMsgSceneInfo(const LCMsgSceneInfo& from);
  LCMsgSceneInfo(LCMsgSceneInfo&& from) noexcept
    : LCMsgSceneInfo() {
    *this = ::std::move(from);
  }

  inline LCMsgSceneInfo& operator=(const LCMsgSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgSceneInfo& operator=(LCMsgSceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgSceneInfo& default_instance();

  static inline const LCMsgSceneInfo* internal_default_instance() {
    return reinterpret_cast<const LCMsgSceneInfo*>(
               &_LCMsgSceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(LCMsgSceneInfo& a, LCMsgSceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgSceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgSceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgSceneInfo* New() const final {
    return CreateMaybeMessage<LCMsgSceneInfo>(nullptr);
  }

  LCMsgSceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgSceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgSceneInfo& from);
  void MergeFrom(const LCMsgSceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgSceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgSceneInfo";
  }
  protected:
  explicit LCMsgSceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerInfosFieldNumber = 15,
    kMaxScoreFieldNumber = 1,
    kTableMaxScoreFieldNumber = 2,
    kCellScoreFieldNumber = 3,
    kTableStateFieldNumber = 4,
    kTableRonudFieldNumber = 5,
    kTotalBetScoreFieldNumber = 6,
    kBankerChairIdFieldNumber = 8,
    kOutTimeFieldNumber = 11,
    kTotalTimeFieldNumber = 12,
  };
  // repeated .Lucky9.LCMsgPlayerInfo player_infos = 15;
  int player_infos_size() const;
  private:
  int _internal_player_infos_size() const;
  public:
  void clear_player_infos();
  ::Lucky9::LCMsgPlayerInfo* mutable_player_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgPlayerInfo >*
      mutable_player_infos();
  private:
  const ::Lucky9::LCMsgPlayerInfo& _internal_player_infos(int index) const;
  ::Lucky9::LCMsgPlayerInfo* _internal_add_player_infos();
  public:
  const ::Lucky9::LCMsgPlayerInfo& player_infos(int index) const;
  ::Lucky9::LCMsgPlayerInfo* add_player_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgPlayerInfo >&
      player_infos() const;

  // int64 max_score = 1;
  void clear_max_score();
  ::PROTOBUF_NAMESPACE_ID::int64 max_score() const;
  void set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_max_score() const;
  void _internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 table_max_score = 2;
  void clear_table_max_score();
  ::PROTOBUF_NAMESPACE_ID::int64 table_max_score() const;
  void set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_table_max_score() const;
  void _internal_set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 cell_score = 3;
  void clear_cell_score();
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score() const;
  void set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cell_score() const;
  void _internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 table_state = 4;
  void clear_table_state();
  ::PROTOBUF_NAMESPACE_ID::int32 table_state() const;
  void set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_state() const;
  void _internal_set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 table_ronud = 5;
  void clear_table_ronud();
  ::PROTOBUF_NAMESPACE_ID::int32 table_ronud() const;
  void set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_ronud() const;
  void _internal_set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 total_bet_score = 6;
  void clear_total_bet_score();
  ::PROTOBUF_NAMESPACE_ID::int64 total_bet_score() const;
  void set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_bet_score() const;
  void _internal_set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 banker_chair_id = 8;
  void clear_banker_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id() const;
  void set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_chair_id() const;
  void _internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_time = 11;
  void clear_out_time();
  ::PROTOBUF_NAMESPACE_ID::int32 out_time() const;
  void set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_time() const;
  void _internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total_time = 12;
  void clear_total_time();
  ::PROTOBUF_NAMESPACE_ID::int32 total_time() const;
  void set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_time() const;
  void _internal_set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgSceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgPlayerInfo > player_infos_;
  ::PROTOBUF_NAMESPACE_ID::int64 max_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 table_max_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 cell_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_ronud_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_bet_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgGameStartResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgGameStartResp) */ {
 public:
  inline LCMsgGameStartResp() : LCMsgGameStartResp(nullptr) {}
  virtual ~LCMsgGameStartResp();

  LCMsgGameStartResp(const LCMsgGameStartResp& from);
  LCMsgGameStartResp(LCMsgGameStartResp&& from) noexcept
    : LCMsgGameStartResp() {
    *this = ::std::move(from);
  }

  inline LCMsgGameStartResp& operator=(const LCMsgGameStartResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgGameStartResp& operator=(LCMsgGameStartResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgGameStartResp& default_instance();

  static inline const LCMsgGameStartResp* internal_default_instance() {
    return reinterpret_cast<const LCMsgGameStartResp*>(
               &_LCMsgGameStartResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(LCMsgGameStartResp& a, LCMsgGameStartResp& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgGameStartResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgGameStartResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgGameStartResp* New() const final {
    return CreateMaybeMessage<LCMsgGameStartResp>(nullptr);
  }

  LCMsgGameStartResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgGameStartResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgGameStartResp& from);
  void MergeFrom(const LCMsgGameStartResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgGameStartResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgGameStartResp";
  }
  protected:
  explicit LCMsgGameStartResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayIndexFieldNumber = 8,
    kPlayerNewScoreFieldNumber = 9,
    kTableRonudFieldNumber = 1,
    kTotalEnterGoldFieldNumber = 2,
    kCurEnterGoldFieldNumber = 3,
    kBankerChairIdFieldNumber = 4,
    kNoeCardFieldNumber = 5,
  };
  // repeated int32 play_index = 8;
  int play_index_size() const;
  private:
  int _internal_play_index_size() const;
  public:
  void clear_play_index();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_play_index(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_play_index() const;
  void _internal_add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_play_index();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 play_index(int index) const;
  void set_play_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      play_index() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_play_index();

  // repeated int64 player_new_score = 9;
  int player_new_score_size() const;
  private:
  int _internal_player_new_score_size() const;
  public:
  void clear_player_new_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_new_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_player_new_score() const;
  void _internal_add_player_new_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_player_new_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 player_new_score(int index) const;
  void set_player_new_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_player_new_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      player_new_score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_player_new_score();

  // int32 table_ronud = 1;
  void clear_table_ronud();
  ::PROTOBUF_NAMESPACE_ID::int32 table_ronud() const;
  void set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_table_ronud() const;
  void _internal_set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total_enter_gold = 2;
  void clear_total_enter_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 total_enter_gold() const;
  void set_total_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_enter_gold() const;
  void _internal_set_total_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_enter_gold = 3;
  void clear_cur_enter_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_enter_gold() const;
  void set_cur_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_enter_gold() const;
  void _internal_set_cur_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 banker_chair_id = 4;
  void clear_banker_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id() const;
  void set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_chair_id() const;
  void _internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 noe_card = 5;
  void clear_noe_card();
  ::PROTOBUF_NAMESPACE_ID::int32 noe_card() const;
  void set_noe_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_noe_card() const;
  void _internal_set_noe_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgGameStartResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > play_index_;
  mutable std::atomic<int> _play_index_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > player_new_score_;
  mutable std::atomic<int> _player_new_score_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 table_ronud_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_enter_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_enter_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 noe_card_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgNotifyActionResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgNotifyActionResp) */ {
 public:
  inline LCMsgNotifyActionResp() : LCMsgNotifyActionResp(nullptr) {}
  virtual ~LCMsgNotifyActionResp();

  LCMsgNotifyActionResp(const LCMsgNotifyActionResp& from);
  LCMsgNotifyActionResp(LCMsgNotifyActionResp&& from) noexcept
    : LCMsgNotifyActionResp() {
    *this = ::std::move(from);
  }

  inline LCMsgNotifyActionResp& operator=(const LCMsgNotifyActionResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgNotifyActionResp& operator=(LCMsgNotifyActionResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgNotifyActionResp& default_instance();

  static inline const LCMsgNotifyActionResp* internal_default_instance() {
    return reinterpret_cast<const LCMsgNotifyActionResp*>(
               &_LCMsgNotifyActionResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(LCMsgNotifyActionResp& a, LCMsgNotifyActionResp& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgNotifyActionResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgNotifyActionResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgNotifyActionResp* New() const final {
    return CreateMaybeMessage<LCMsgNotifyActionResp>(nullptr);
  }

  LCMsgNotifyActionResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgNotifyActionResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgNotifyActionResp& from);
  void MergeFrom(const LCMsgNotifyActionResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgNotifyActionResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgNotifyActionResp";
  }
  protected:
  explicit LCMsgNotifyActionResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentActFieldNumber = 3,
    kOperTimeFieldNumber = 4,
  };
  // int32 current_act = 3;
  void clear_current_act();
  ::PROTOBUF_NAMESPACE_ID::int32 current_act() const;
  void set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_act() const;
  void _internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 oper_time = 4;
  void clear_oper_time();
  ::PROTOBUF_NAMESPACE_ID::int32 oper_time() const;
  void set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_oper_time() const;
  void _internal_set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgNotifyActionResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_act_;
  ::PROTOBUF_NAMESPACE_ID::int32 oper_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgAction) */ {
 public:
  inline LCMsgAction() : LCMsgAction(nullptr) {}
  virtual ~LCMsgAction();

  LCMsgAction(const LCMsgAction& from);
  LCMsgAction(LCMsgAction&& from) noexcept
    : LCMsgAction() {
    *this = ::std::move(from);
  }

  inline LCMsgAction& operator=(const LCMsgAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgAction& operator=(LCMsgAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgAction& default_instance();

  static inline const LCMsgAction* internal_default_instance() {
    return reinterpret_cast<const LCMsgAction*>(
               &_LCMsgAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(LCMsgAction& a, LCMsgAction& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgAction* New() const final {
    return CreateMaybeMessage<LCMsgAction>(nullptr);
  }

  LCMsgAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgAction& from);
  void MergeFrom(const LCMsgAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgAction";
  }
  protected:
  explicit LCMsgAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetScoreFieldNumber = 2,
    kActFieldNumber = 1,
  };
  // int64 bet_score = 2;
  void clear_bet_score();
  ::PROTOBUF_NAMESPACE_ID::int64 bet_score() const;
  void set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet_score() const;
  void _internal_set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 act = 1;
  void clear_act();
  ::PROTOBUF_NAMESPACE_ID::int32 act() const;
  void set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_act() const;
  void _internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 act_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgGetCardResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgGetCardResp) */ {
 public:
  inline LCMsgGetCardResp() : LCMsgGetCardResp(nullptr) {}
  virtual ~LCMsgGetCardResp();

  LCMsgGetCardResp(const LCMsgGetCardResp& from);
  LCMsgGetCardResp(LCMsgGetCardResp&& from) noexcept
    : LCMsgGetCardResp() {
    *this = ::std::move(from);
  }

  inline LCMsgGetCardResp& operator=(const LCMsgGetCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgGetCardResp& operator=(LCMsgGetCardResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgGetCardResp& default_instance();

  static inline const LCMsgGetCardResp* internal_default_instance() {
    return reinterpret_cast<const LCMsgGetCardResp*>(
               &_LCMsgGetCardResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LCMsgGetCardResp& a, LCMsgGetCardResp& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgGetCardResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgGetCardResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgGetCardResp* New() const final {
    return CreateMaybeMessage<LCMsgGetCardResp>(nullptr);
  }

  LCMsgGetCardResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgGetCardResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgGetCardResp& from);
  void MergeFrom(const LCMsgGetCardResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgGetCardResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgGetCardResp";
  }
  protected:
  explicit LCMsgGetCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 3,
    kChairIdFieldNumber = 1,
    kCardTypeFieldNumber = 2,
  };
  // repeated int32 cards = 3;
  int cards_size() const;
  private:
  int _internal_cards_size() const;
  public:
  void clear_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_cards() const;
  void _internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 cards(int index) const;
  void set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_cards();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 card_type = 2;
  void clear_card_type();
  ::PROTOBUF_NAMESPACE_ID::int32 card_type() const;
  void set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card_type() const;
  void _internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgGetCardResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > cards_;
  mutable std::atomic<int> _cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 card_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgAddBetResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgAddBetResp) */ {
 public:
  inline LCMsgAddBetResp() : LCMsgAddBetResp(nullptr) {}
  virtual ~LCMsgAddBetResp();

  LCMsgAddBetResp(const LCMsgAddBetResp& from);
  LCMsgAddBetResp(LCMsgAddBetResp&& from) noexcept
    : LCMsgAddBetResp() {
    *this = ::std::move(from);
  }

  inline LCMsgAddBetResp& operator=(const LCMsgAddBetResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgAddBetResp& operator=(LCMsgAddBetResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgAddBetResp& default_instance();

  static inline const LCMsgAddBetResp* internal_default_instance() {
    return reinterpret_cast<const LCMsgAddBetResp*>(
               &_LCMsgAddBetResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(LCMsgAddBetResp& a, LCMsgAddBetResp& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgAddBetResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgAddBetResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgAddBetResp* New() const final {
    return CreateMaybeMessage<LCMsgAddBetResp>(nullptr);
  }

  LCMsgAddBetResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgAddBetResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgAddBetResp& from);
  void MergeFrom(const LCMsgAddBetResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgAddBetResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgAddBetResp";
  }
  protected:
  explicit LCMsgAddBetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddScoreFieldNumber = 2,
    kAddChairIdFieldNumber = 1,
  };
  // int64 add_score = 2;
  void clear_add_score();
  ::PROTOBUF_NAMESPACE_ID::int64 add_score() const;
  void set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_add_score() const;
  void _internal_set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 add_chair_id = 1;
  void clear_add_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 add_chair_id() const;
  void set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_add_chair_id() const;
  void _internal_set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgAddBetResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 add_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 add_chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgEndPlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgEndPlayerInfo) */ {
 public:
  inline LCMsgEndPlayerInfo() : LCMsgEndPlayerInfo(nullptr) {}
  virtual ~LCMsgEndPlayerInfo();

  LCMsgEndPlayerInfo(const LCMsgEndPlayerInfo& from);
  LCMsgEndPlayerInfo(LCMsgEndPlayerInfo&& from) noexcept
    : LCMsgEndPlayerInfo() {
    *this = ::std::move(from);
  }

  inline LCMsgEndPlayerInfo& operator=(const LCMsgEndPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgEndPlayerInfo& operator=(LCMsgEndPlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgEndPlayerInfo& default_instance();

  static inline const LCMsgEndPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const LCMsgEndPlayerInfo*>(
               &_LCMsgEndPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(LCMsgEndPlayerInfo& a, LCMsgEndPlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgEndPlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgEndPlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgEndPlayerInfo* New() const final {
    return CreateMaybeMessage<LCMsgEndPlayerInfo>(nullptr);
  }

  LCMsgEndPlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgEndPlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgEndPlayerInfo& from);
  void MergeFrom(const LCMsgEndPlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgEndPlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgEndPlayerInfo";
  }
  protected:
  explicit LCMsgEndPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardsFieldNumber = 5,
    kGameScoreFieldNumber = 1,
    kTaxFieldNumber = 2,
    kTypeFieldNumber = 3,
    kNumberFieldNumber = 4,
  };
  // .Lucky9.LCMsgHandCards cards = 5;
  bool has_cards() const;
  private:
  bool _internal_has_cards() const;
  public:
  void clear_cards();
  const ::Lucky9::LCMsgHandCards& cards() const;
  ::Lucky9::LCMsgHandCards* release_cards();
  ::Lucky9::LCMsgHandCards* mutable_cards();
  void set_allocated_cards(::Lucky9::LCMsgHandCards* cards);
  private:
  const ::Lucky9::LCMsgHandCards& _internal_cards() const;
  ::Lucky9::LCMsgHandCards* _internal_mutable_cards();
  public:
  void unsafe_arena_set_allocated_cards(
      ::Lucky9::LCMsgHandCards* cards);
  ::Lucky9::LCMsgHandCards* unsafe_arena_release_cards();

  // int64 game_score = 1;
  void clear_game_score();
  ::PROTOBUF_NAMESPACE_ID::int64 game_score() const;
  void set_game_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_game_score() const;
  void _internal_set_game_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 tax = 2;
  void clear_tax();
  ::PROTOBUF_NAMESPACE_ID::int64 tax() const;
  void set_tax(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tax() const;
  void _internal_set_tax(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int64 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 number = 4;
  void clear_number();
  ::PROTOBUF_NAMESPACE_ID::int64 number() const;
  void set_number(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_number() const;
  void _internal_set_number(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgEndPlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Lucky9::LCMsgHandCards* cards_;
  ::PROTOBUF_NAMESPACE_ID::int64 game_score_;
  ::PROTOBUF_NAMESPACE_ID::int64 tax_;
  ::PROTOBUF_NAMESPACE_ID::int64 type_;
  ::PROTOBUF_NAMESPACE_ID::int64 number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgGameResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgGameResult) */ {
 public:
  inline LCMsgGameResult() : LCMsgGameResult(nullptr) {}
  virtual ~LCMsgGameResult();

  LCMsgGameResult(const LCMsgGameResult& from);
  LCMsgGameResult(LCMsgGameResult&& from) noexcept
    : LCMsgGameResult() {
    *this = ::std::move(from);
  }

  inline LCMsgGameResult& operator=(const LCMsgGameResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgGameResult& operator=(LCMsgGameResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgGameResult& default_instance();

  static inline const LCMsgGameResult* internal_default_instance() {
    return reinterpret_cast<const LCMsgGameResult*>(
               &_LCMsgGameResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(LCMsgGameResult& a, LCMsgGameResult& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgGameResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgGameResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgGameResult* New() const final {
    return CreateMaybeMessage<LCMsgGameResult>(nullptr);
  }

  LCMsgGameResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgGameResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgGameResult& from);
  void MergeFrom(const LCMsgGameResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgGameResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgGameResult";
  }
  protected:
  explicit LCMsgGameResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 1,
  };
  // repeated .Lucky9.LCMsgEndPlayerInfo players = 1;
  int players_size() const;
  private:
  int _internal_players_size() const;
  public:
  void clear_players();
  ::Lucky9::LCMsgEndPlayerInfo* mutable_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgEndPlayerInfo >*
      mutable_players();
  private:
  const ::Lucky9::LCMsgEndPlayerInfo& _internal_players(int index) const;
  ::Lucky9::LCMsgEndPlayerInfo* _internal_add_players();
  public:
  const ::Lucky9::LCMsgEndPlayerInfo& players(int index) const;
  ::Lucky9::LCMsgEndPlayerInfo* add_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgEndPlayerInfo >&
      players() const;

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgGameResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgEndPlayerInfo > players_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// -------------------------------------------------------------------

class LCMsgNotifyPlayerAct PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Lucky9.LCMsgNotifyPlayerAct) */ {
 public:
  inline LCMsgNotifyPlayerAct() : LCMsgNotifyPlayerAct(nullptr) {}
  virtual ~LCMsgNotifyPlayerAct();

  LCMsgNotifyPlayerAct(const LCMsgNotifyPlayerAct& from);
  LCMsgNotifyPlayerAct(LCMsgNotifyPlayerAct&& from) noexcept
    : LCMsgNotifyPlayerAct() {
    *this = ::std::move(from);
  }

  inline LCMsgNotifyPlayerAct& operator=(const LCMsgNotifyPlayerAct& from) {
    CopyFrom(from);
    return *this;
  }
  inline LCMsgNotifyPlayerAct& operator=(LCMsgNotifyPlayerAct&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LCMsgNotifyPlayerAct& default_instance();

  static inline const LCMsgNotifyPlayerAct* internal_default_instance() {
    return reinterpret_cast<const LCMsgNotifyPlayerAct*>(
               &_LCMsgNotifyPlayerAct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(LCMsgNotifyPlayerAct& a, LCMsgNotifyPlayerAct& b) {
    a.Swap(&b);
  }
  inline void Swap(LCMsgNotifyPlayerAct* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LCMsgNotifyPlayerAct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LCMsgNotifyPlayerAct* New() const final {
    return CreateMaybeMessage<LCMsgNotifyPlayerAct>(nullptr);
  }

  LCMsgNotifyPlayerAct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LCMsgNotifyPlayerAct>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LCMsgNotifyPlayerAct& from);
  void MergeFrom(const LCMsgNotifyPlayerAct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LCMsgNotifyPlayerAct* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Lucky9.LCMsgNotifyPlayerAct";
  }
  protected:
  explicit LCMsgNotifyPlayerAct(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Lucky9_2eproto);
    return ::descriptor_table_Lucky9_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kActFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 act = 2;
  void clear_act();
  ::PROTOBUF_NAMESPACE_ID::int32 act() const;
  void set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_act() const;
  void _internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Lucky9.LCMsgNotifyPlayerAct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 act_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Lucky9_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LCMsgTableState

// int32 state = 1;
inline void LCMsgTableState::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgTableState::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgTableState::state() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgTableState.state)
  return _internal_state();
}
inline void LCMsgTableState::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void LCMsgTableState::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgTableState.state)
}

// int32 out_ime = 2;
inline void LCMsgTableState::clear_out_ime() {
  out_ime_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgTableState::_internal_out_ime() const {
  return out_ime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgTableState::out_ime() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgTableState.out_ime)
  return _internal_out_ime();
}
inline void LCMsgTableState::_internal_set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_ime_ = value;
}
inline void LCMsgTableState::set_out_ime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_ime(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgTableState.out_ime)
}

// -------------------------------------------------------------------

// LCMsgHandCards

// int32 type = 1;
inline void LCMsgHandCards::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgHandCards::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgHandCards::type() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgHandCards.type)
  return _internal_type();
}
inline void LCMsgHandCards::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void LCMsgHandCards::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgHandCards.type)
}

// int32 number = 2;
inline void LCMsgHandCards::clear_number() {
  number_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgHandCards::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgHandCards::number() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgHandCards.number)
  return _internal_number();
}
inline void LCMsgHandCards::_internal_set_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  number_ = value;
}
inline void LCMsgHandCards::set_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgHandCards.number)
}

// repeated int32 cards = 3;
inline int LCMsgHandCards::_internal_cards_size() const {
  return cards_.size();
}
inline int LCMsgHandCards::cards_size() const {
  return _internal_cards_size();
}
inline void LCMsgHandCards::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgHandCards::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgHandCards::cards(int index) const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgHandCards.cards)
  return _internal_cards(index);
}
inline void LCMsgHandCards::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgHandCards.cards)
}
inline void LCMsgHandCards::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void LCMsgHandCards::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:Lucky9.LCMsgHandCards.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
LCMsgHandCards::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
LCMsgHandCards::cards() const {
  // @@protoc_insertion_point(field_list:Lucky9.LCMsgHandCards.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
LCMsgHandCards::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
LCMsgHandCards::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Lucky9.LCMsgHandCards.cards)
  return _internal_mutable_cards();
}

// -------------------------------------------------------------------

// LCMsgPlayerInfo

// int32 chair_id = 1;
inline void LCMsgPlayerInfo::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::chair_id() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.chair_id)
  return _internal_chair_id();
}
inline void LCMsgPlayerInfo::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void LCMsgPlayerInfo::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.chair_id)
}

// int32 play_status = 2;
inline void LCMsgPlayerInfo::clear_play_status() {
  play_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::_internal_play_status() const {
  return play_status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::play_status() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.play_status)
  return _internal_play_status();
}
inline void LCMsgPlayerInfo::_internal_set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  play_status_ = value;
}
inline void LCMsgPlayerInfo::set_play_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_play_status(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.play_status)
}

// int64 player_bet = 3;
inline void LCMsgPlayerInfo::clear_player_bet() {
  player_bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::_internal_player_bet() const {
  return player_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::player_bet() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.player_bet)
  return _internal_player_bet();
}
inline void LCMsgPlayerInfo::_internal_set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  player_bet_ = value;
}
inline void LCMsgPlayerInfo::set_player_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_player_bet(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.player_bet)
}

// int32 card_type = 4;
inline void LCMsgPlayerInfo::clear_card_type() {
  card_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::_internal_card_type() const {
  return card_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::card_type() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.card_type)
  return _internal_card_type();
}
inline void LCMsgPlayerInfo::_internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  card_type_ = value;
}
inline void LCMsgPlayerInfo::set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_card_type(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.card_type)
}

// int32 get_card = 5;
inline void LCMsgPlayerInfo::clear_get_card() {
  get_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::_internal_get_card() const {
  return get_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgPlayerInfo::get_card() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.get_card)
  return _internal_get_card();
}
inline void LCMsgPlayerInfo::_internal_set_get_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  get_card_ = value;
}
inline void LCMsgPlayerInfo::set_get_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_get_card(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.get_card)
}

// int64 gold = 6;
inline void LCMsgPlayerInfo::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::gold() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.gold)
  return _internal_gold();
}
inline void LCMsgPlayerInfo::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void LCMsgPlayerInfo::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.gold)
}

// int64 win_gold = 7;
inline void LCMsgPlayerInfo::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::win_gold() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.win_gold)
  return _internal_win_gold();
}
inline void LCMsgPlayerInfo::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void LCMsgPlayerInfo::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.win_gold)
}

// int64 win_conut = 8;
inline void LCMsgPlayerInfo::clear_win_conut() {
  win_conut_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::_internal_win_conut() const {
  return win_conut_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgPlayerInfo::win_conut() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.win_conut)
  return _internal_win_conut();
}
inline void LCMsgPlayerInfo::_internal_set_win_conut(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_conut_ = value;
}
inline void LCMsgPlayerInfo::set_win_conut(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_conut(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgPlayerInfo.win_conut)
}

// .Lucky9.LCMsgHandCards handls = 9;
inline bool LCMsgPlayerInfo::_internal_has_handls() const {
  return this != internal_default_instance() && handls_ != nullptr;
}
inline bool LCMsgPlayerInfo::has_handls() const {
  return _internal_has_handls();
}
inline void LCMsgPlayerInfo::clear_handls() {
  if (GetArena() == nullptr && handls_ != nullptr) {
    delete handls_;
  }
  handls_ = nullptr;
}
inline const ::Lucky9::LCMsgHandCards& LCMsgPlayerInfo::_internal_handls() const {
  const ::Lucky9::LCMsgHandCards* p = handls_;
  return p != nullptr ? *p : reinterpret_cast<const ::Lucky9::LCMsgHandCards&>(
      ::Lucky9::_LCMsgHandCards_default_instance_);
}
inline const ::Lucky9::LCMsgHandCards& LCMsgPlayerInfo::handls() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgPlayerInfo.handls)
  return _internal_handls();
}
inline void LCMsgPlayerInfo::unsafe_arena_set_allocated_handls(
    ::Lucky9::LCMsgHandCards* handls) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(handls_);
  }
  handls_ = handls;
  if (handls) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Lucky9.LCMsgPlayerInfo.handls)
}
inline ::Lucky9::LCMsgHandCards* LCMsgPlayerInfo::release_handls() {
  
  ::Lucky9::LCMsgHandCards* temp = handls_;
  handls_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Lucky9::LCMsgHandCards* LCMsgPlayerInfo::unsafe_arena_release_handls() {
  // @@protoc_insertion_point(field_release:Lucky9.LCMsgPlayerInfo.handls)
  
  ::Lucky9::LCMsgHandCards* temp = handls_;
  handls_ = nullptr;
  return temp;
}
inline ::Lucky9::LCMsgHandCards* LCMsgPlayerInfo::_internal_mutable_handls() {
  
  if (handls_ == nullptr) {
    auto* p = CreateMaybeMessage<::Lucky9::LCMsgHandCards>(GetArena());
    handls_ = p;
  }
  return handls_;
}
inline ::Lucky9::LCMsgHandCards* LCMsgPlayerInfo::mutable_handls() {
  // @@protoc_insertion_point(field_mutable:Lucky9.LCMsgPlayerInfo.handls)
  return _internal_mutable_handls();
}
inline void LCMsgPlayerInfo::set_allocated_handls(::Lucky9::LCMsgHandCards* handls) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete handls_;
  }
  if (handls) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(handls);
    if (message_arena != submessage_arena) {
      handls = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, handls, submessage_arena);
    }
    
  } else {
    
  }
  handls_ = handls;
  // @@protoc_insertion_point(field_set_allocated:Lucky9.LCMsgPlayerInfo.handls)
}

// -------------------------------------------------------------------

// LCMsgSceneInfo

// int64 max_score = 1;
inline void LCMsgSceneInfo::clear_max_score() {
  max_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::_internal_max_score() const {
  return max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::max_score() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.max_score)
  return _internal_max_score();
}
inline void LCMsgSceneInfo::_internal_set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  max_score_ = value;
}
inline void LCMsgSceneInfo::set_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_max_score(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.max_score)
}

// int64 table_max_score = 2;
inline void LCMsgSceneInfo::clear_table_max_score() {
  table_max_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::_internal_table_max_score() const {
  return table_max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::table_max_score() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.table_max_score)
  return _internal_table_max_score();
}
inline void LCMsgSceneInfo::_internal_set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  table_max_score_ = value;
}
inline void LCMsgSceneInfo::set_table_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_table_max_score(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.table_max_score)
}

// int64 cell_score = 3;
inline void LCMsgSceneInfo::clear_cell_score() {
  cell_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::_internal_cell_score() const {
  return cell_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::cell_score() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.cell_score)
  return _internal_cell_score();
}
inline void LCMsgSceneInfo::_internal_set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cell_score_ = value;
}
inline void LCMsgSceneInfo::set_cell_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cell_score(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.cell_score)
}

// int32 table_state = 4;
inline void LCMsgSceneInfo::clear_table_state() {
  table_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::_internal_table_state() const {
  return table_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::table_state() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.table_state)
  return _internal_table_state();
}
inline void LCMsgSceneInfo::_internal_set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_state_ = value;
}
inline void LCMsgSceneInfo::set_table_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_state(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.table_state)
}

// int32 table_ronud = 5;
inline void LCMsgSceneInfo::clear_table_ronud() {
  table_ronud_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::_internal_table_ronud() const {
  return table_ronud_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::table_ronud() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.table_ronud)
  return _internal_table_ronud();
}
inline void LCMsgSceneInfo::_internal_set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_ronud_ = value;
}
inline void LCMsgSceneInfo::set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_ronud(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.table_ronud)
}

// int64 total_bet_score = 6;
inline void LCMsgSceneInfo::clear_total_bet_score() {
  total_bet_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::_internal_total_bet_score() const {
  return total_bet_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgSceneInfo::total_bet_score() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.total_bet_score)
  return _internal_total_bet_score();
}
inline void LCMsgSceneInfo::_internal_set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_bet_score_ = value;
}
inline void LCMsgSceneInfo::set_total_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_bet_score(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.total_bet_score)
}

// int32 banker_chair_id = 8;
inline void LCMsgSceneInfo::clear_banker_chair_id() {
  banker_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::_internal_banker_chair_id() const {
  return banker_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.banker_chair_id)
  return _internal_banker_chair_id();
}
inline void LCMsgSceneInfo::_internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_chair_id_ = value;
}
inline void LCMsgSceneInfo::set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_chair_id(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.banker_chair_id)
}

// int32 out_time = 11;
inline void LCMsgSceneInfo::clear_out_time() {
  out_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::_internal_out_time() const {
  return out_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::out_time() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.out_time)
  return _internal_out_time();
}
inline void LCMsgSceneInfo::_internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_time_ = value;
}
inline void LCMsgSceneInfo::set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_time(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.out_time)
}

// int32 total_time = 12;
inline void LCMsgSceneInfo::clear_total_time() {
  total_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::_internal_total_time() const {
  return total_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgSceneInfo::total_time() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.total_time)
  return _internal_total_time();
}
inline void LCMsgSceneInfo::_internal_set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_time_ = value;
}
inline void LCMsgSceneInfo::set_total_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_time(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgSceneInfo.total_time)
}

// repeated .Lucky9.LCMsgPlayerInfo player_infos = 15;
inline int LCMsgSceneInfo::_internal_player_infos_size() const {
  return player_infos_.size();
}
inline int LCMsgSceneInfo::player_infos_size() const {
  return _internal_player_infos_size();
}
inline void LCMsgSceneInfo::clear_player_infos() {
  player_infos_.Clear();
}
inline ::Lucky9::LCMsgPlayerInfo* LCMsgSceneInfo::mutable_player_infos(int index) {
  // @@protoc_insertion_point(field_mutable:Lucky9.LCMsgSceneInfo.player_infos)
  return player_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgPlayerInfo >*
LCMsgSceneInfo::mutable_player_infos() {
  // @@protoc_insertion_point(field_mutable_list:Lucky9.LCMsgSceneInfo.player_infos)
  return &player_infos_;
}
inline const ::Lucky9::LCMsgPlayerInfo& LCMsgSceneInfo::_internal_player_infos(int index) const {
  return player_infos_.Get(index);
}
inline const ::Lucky9::LCMsgPlayerInfo& LCMsgSceneInfo::player_infos(int index) const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgSceneInfo.player_infos)
  return _internal_player_infos(index);
}
inline ::Lucky9::LCMsgPlayerInfo* LCMsgSceneInfo::_internal_add_player_infos() {
  return player_infos_.Add();
}
inline ::Lucky9::LCMsgPlayerInfo* LCMsgSceneInfo::add_player_infos() {
  // @@protoc_insertion_point(field_add:Lucky9.LCMsgSceneInfo.player_infos)
  return _internal_add_player_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgPlayerInfo >&
LCMsgSceneInfo::player_infos() const {
  // @@protoc_insertion_point(field_list:Lucky9.LCMsgSceneInfo.player_infos)
  return player_infos_;
}

// -------------------------------------------------------------------

// LCMsgGameStartResp

// int32 table_ronud = 1;
inline void LCMsgGameStartResp::clear_table_ronud() {
  table_ronud_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::_internal_table_ronud() const {
  return table_ronud_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::table_ronud() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameStartResp.table_ronud)
  return _internal_table_ronud();
}
inline void LCMsgGameStartResp::_internal_set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  table_ronud_ = value;
}
inline void LCMsgGameStartResp::set_table_ronud(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_table_ronud(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGameStartResp.table_ronud)
}

// int32 total_enter_gold = 2;
inline void LCMsgGameStartResp::clear_total_enter_gold() {
  total_enter_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::_internal_total_enter_gold() const {
  return total_enter_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::total_enter_gold() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameStartResp.total_enter_gold)
  return _internal_total_enter_gold();
}
inline void LCMsgGameStartResp::_internal_set_total_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_enter_gold_ = value;
}
inline void LCMsgGameStartResp::set_total_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_enter_gold(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGameStartResp.total_enter_gold)
}

// int32 cur_enter_gold = 3;
inline void LCMsgGameStartResp::clear_cur_enter_gold() {
  cur_enter_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::_internal_cur_enter_gold() const {
  return cur_enter_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::cur_enter_gold() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameStartResp.cur_enter_gold)
  return _internal_cur_enter_gold();
}
inline void LCMsgGameStartResp::_internal_set_cur_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_enter_gold_ = value;
}
inline void LCMsgGameStartResp::set_cur_enter_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_enter_gold(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGameStartResp.cur_enter_gold)
}

// int32 banker_chair_id = 4;
inline void LCMsgGameStartResp::clear_banker_chair_id() {
  banker_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::_internal_banker_chair_id() const {
  return banker_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::banker_chair_id() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameStartResp.banker_chair_id)
  return _internal_banker_chair_id();
}
inline void LCMsgGameStartResp::_internal_set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_chair_id_ = value;
}
inline void LCMsgGameStartResp::set_banker_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_chair_id(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGameStartResp.banker_chair_id)
}

// int32 noe_card = 5;
inline void LCMsgGameStartResp::clear_noe_card() {
  noe_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::_internal_noe_card() const {
  return noe_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::noe_card() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameStartResp.noe_card)
  return _internal_noe_card();
}
inline void LCMsgGameStartResp::_internal_set_noe_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  noe_card_ = value;
}
inline void LCMsgGameStartResp::set_noe_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_noe_card(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGameStartResp.noe_card)
}

// repeated int32 play_index = 8;
inline int LCMsgGameStartResp::_internal_play_index_size() const {
  return play_index_.size();
}
inline int LCMsgGameStartResp::play_index_size() const {
  return _internal_play_index_size();
}
inline void LCMsgGameStartResp::clear_play_index() {
  play_index_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::_internal_play_index(int index) const {
  return play_index_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGameStartResp::play_index(int index) const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameStartResp.play_index)
  return _internal_play_index(index);
}
inline void LCMsgGameStartResp::set_play_index(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  play_index_.Set(index, value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGameStartResp.play_index)
}
inline void LCMsgGameStartResp::_internal_add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  play_index_.Add(value);
}
inline void LCMsgGameStartResp::add_play_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_play_index(value);
  // @@protoc_insertion_point(field_add:Lucky9.LCMsgGameStartResp.play_index)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
LCMsgGameStartResp::_internal_play_index() const {
  return play_index_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
LCMsgGameStartResp::play_index() const {
  // @@protoc_insertion_point(field_list:Lucky9.LCMsgGameStartResp.play_index)
  return _internal_play_index();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
LCMsgGameStartResp::_internal_mutable_play_index() {
  return &play_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
LCMsgGameStartResp::mutable_play_index() {
  // @@protoc_insertion_point(field_mutable_list:Lucky9.LCMsgGameStartResp.play_index)
  return _internal_mutable_play_index();
}

// repeated int64 player_new_score = 9;
inline int LCMsgGameStartResp::_internal_player_new_score_size() const {
  return player_new_score_.size();
}
inline int LCMsgGameStartResp::player_new_score_size() const {
  return _internal_player_new_score_size();
}
inline void LCMsgGameStartResp::clear_player_new_score() {
  player_new_score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgGameStartResp::_internal_player_new_score(int index) const {
  return player_new_score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgGameStartResp::player_new_score(int index) const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameStartResp.player_new_score)
  return _internal_player_new_score(index);
}
inline void LCMsgGameStartResp::set_player_new_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_new_score_.Set(index, value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGameStartResp.player_new_score)
}
inline void LCMsgGameStartResp::_internal_add_player_new_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_new_score_.Add(value);
}
inline void LCMsgGameStartResp::add_player_new_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_player_new_score(value);
  // @@protoc_insertion_point(field_add:Lucky9.LCMsgGameStartResp.player_new_score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
LCMsgGameStartResp::_internal_player_new_score() const {
  return player_new_score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
LCMsgGameStartResp::player_new_score() const {
  // @@protoc_insertion_point(field_list:Lucky9.LCMsgGameStartResp.player_new_score)
  return _internal_player_new_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
LCMsgGameStartResp::_internal_mutable_player_new_score() {
  return &player_new_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
LCMsgGameStartResp::mutable_player_new_score() {
  // @@protoc_insertion_point(field_mutable_list:Lucky9.LCMsgGameStartResp.player_new_score)
  return _internal_mutable_player_new_score();
}

// -------------------------------------------------------------------

// LCMsgNotifyActionResp

// int32 current_act = 3;
inline void LCMsgNotifyActionResp::clear_current_act() {
  current_act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyActionResp::_internal_current_act() const {
  return current_act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyActionResp::current_act() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgNotifyActionResp.current_act)
  return _internal_current_act();
}
inline void LCMsgNotifyActionResp::_internal_set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_act_ = value;
}
inline void LCMsgNotifyActionResp::set_current_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_act(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgNotifyActionResp.current_act)
}

// int32 oper_time = 4;
inline void LCMsgNotifyActionResp::clear_oper_time() {
  oper_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyActionResp::_internal_oper_time() const {
  return oper_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyActionResp::oper_time() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgNotifyActionResp.oper_time)
  return _internal_oper_time();
}
inline void LCMsgNotifyActionResp::_internal_set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  oper_time_ = value;
}
inline void LCMsgNotifyActionResp::set_oper_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_oper_time(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgNotifyActionResp.oper_time)
}

// -------------------------------------------------------------------

// LCMsgAction

// int32 act = 1;
inline void LCMsgAction::clear_act() {
  act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgAction::_internal_act() const {
  return act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgAction::act() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgAction.act)
  return _internal_act();
}
inline void LCMsgAction::_internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  act_ = value;
}
inline void LCMsgAction::set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_act(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgAction.act)
}

// int64 bet_score = 2;
inline void LCMsgAction::clear_bet_score() {
  bet_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgAction::_internal_bet_score() const {
  return bet_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgAction::bet_score() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgAction.bet_score)
  return _internal_bet_score();
}
inline void LCMsgAction::_internal_set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_score_ = value;
}
inline void LCMsgAction::set_bet_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet_score(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgAction.bet_score)
}

// -------------------------------------------------------------------

// LCMsgGetCardResp

// int32 chair_id = 1;
inline void LCMsgGetCardResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGetCardResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGetCardResp::chair_id() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGetCardResp.chair_id)
  return _internal_chair_id();
}
inline void LCMsgGetCardResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void LCMsgGetCardResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGetCardResp.chair_id)
}

// int32 card_type = 2;
inline void LCMsgGetCardResp::clear_card_type() {
  card_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGetCardResp::_internal_card_type() const {
  return card_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGetCardResp::card_type() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGetCardResp.card_type)
  return _internal_card_type();
}
inline void LCMsgGetCardResp::_internal_set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  card_type_ = value;
}
inline void LCMsgGetCardResp::set_card_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_card_type(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGetCardResp.card_type)
}

// repeated int32 cards = 3;
inline int LCMsgGetCardResp::_internal_cards_size() const {
  return cards_.size();
}
inline int LCMsgGetCardResp::cards_size() const {
  return _internal_cards_size();
}
inline void LCMsgGetCardResp::clear_cards() {
  cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGetCardResp::_internal_cards(int index) const {
  return cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgGetCardResp::cards(int index) const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGetCardResp.cards)
  return _internal_cards(index);
}
inline void LCMsgGetCardResp::set_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgGetCardResp.cards)
}
inline void LCMsgGetCardResp::_internal_add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  cards_.Add(value);
}
inline void LCMsgGetCardResp::add_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_cards(value);
  // @@protoc_insertion_point(field_add:Lucky9.LCMsgGetCardResp.cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
LCMsgGetCardResp::_internal_cards() const {
  return cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
LCMsgGetCardResp::cards() const {
  // @@protoc_insertion_point(field_list:Lucky9.LCMsgGetCardResp.cards)
  return _internal_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
LCMsgGetCardResp::_internal_mutable_cards() {
  return &cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
LCMsgGetCardResp::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Lucky9.LCMsgGetCardResp.cards)
  return _internal_mutable_cards();
}

// -------------------------------------------------------------------

// LCMsgAddBetResp

// int32 add_chair_id = 1;
inline void LCMsgAddBetResp::clear_add_chair_id() {
  add_chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgAddBetResp::_internal_add_chair_id() const {
  return add_chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgAddBetResp::add_chair_id() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgAddBetResp.add_chair_id)
  return _internal_add_chair_id();
}
inline void LCMsgAddBetResp::_internal_set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  add_chair_id_ = value;
}
inline void LCMsgAddBetResp::set_add_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_add_chair_id(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgAddBetResp.add_chair_id)
}

// int64 add_score = 2;
inline void LCMsgAddBetResp::clear_add_score() {
  add_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgAddBetResp::_internal_add_score() const {
  return add_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgAddBetResp::add_score() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgAddBetResp.add_score)
  return _internal_add_score();
}
inline void LCMsgAddBetResp::_internal_set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  add_score_ = value;
}
inline void LCMsgAddBetResp::set_add_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_add_score(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgAddBetResp.add_score)
}

// -------------------------------------------------------------------

// LCMsgEndPlayerInfo

// int64 game_score = 1;
inline void LCMsgEndPlayerInfo::clear_game_score() {
  game_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::_internal_game_score() const {
  return game_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::game_score() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgEndPlayerInfo.game_score)
  return _internal_game_score();
}
inline void LCMsgEndPlayerInfo::_internal_set_game_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  game_score_ = value;
}
inline void LCMsgEndPlayerInfo::set_game_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_game_score(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgEndPlayerInfo.game_score)
}

// int64 tax = 2;
inline void LCMsgEndPlayerInfo::clear_tax() {
  tax_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::_internal_tax() const {
  return tax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::tax() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgEndPlayerInfo.tax)
  return _internal_tax();
}
inline void LCMsgEndPlayerInfo::_internal_set_tax(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  tax_ = value;
}
inline void LCMsgEndPlayerInfo::set_tax(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tax(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgEndPlayerInfo.tax)
}

// int64 type = 3;
inline void LCMsgEndPlayerInfo::clear_type() {
  type_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::type() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgEndPlayerInfo.type)
  return _internal_type();
}
inline void LCMsgEndPlayerInfo::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  type_ = value;
}
inline void LCMsgEndPlayerInfo::set_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgEndPlayerInfo.type)
}

// int64 number = 4;
inline void LCMsgEndPlayerInfo::clear_number() {
  number_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::_internal_number() const {
  return number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 LCMsgEndPlayerInfo::number() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgEndPlayerInfo.number)
  return _internal_number();
}
inline void LCMsgEndPlayerInfo::_internal_set_number(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  number_ = value;
}
inline void LCMsgEndPlayerInfo::set_number(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgEndPlayerInfo.number)
}

// .Lucky9.LCMsgHandCards cards = 5;
inline bool LCMsgEndPlayerInfo::_internal_has_cards() const {
  return this != internal_default_instance() && cards_ != nullptr;
}
inline bool LCMsgEndPlayerInfo::has_cards() const {
  return _internal_has_cards();
}
inline void LCMsgEndPlayerInfo::clear_cards() {
  if (GetArena() == nullptr && cards_ != nullptr) {
    delete cards_;
  }
  cards_ = nullptr;
}
inline const ::Lucky9::LCMsgHandCards& LCMsgEndPlayerInfo::_internal_cards() const {
  const ::Lucky9::LCMsgHandCards* p = cards_;
  return p != nullptr ? *p : reinterpret_cast<const ::Lucky9::LCMsgHandCards&>(
      ::Lucky9::_LCMsgHandCards_default_instance_);
}
inline const ::Lucky9::LCMsgHandCards& LCMsgEndPlayerInfo::cards() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgEndPlayerInfo.cards)
  return _internal_cards();
}
inline void LCMsgEndPlayerInfo::unsafe_arena_set_allocated_cards(
    ::Lucky9::LCMsgHandCards* cards) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cards_);
  }
  cards_ = cards;
  if (cards) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Lucky9.LCMsgEndPlayerInfo.cards)
}
inline ::Lucky9::LCMsgHandCards* LCMsgEndPlayerInfo::release_cards() {
  
  ::Lucky9::LCMsgHandCards* temp = cards_;
  cards_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Lucky9::LCMsgHandCards* LCMsgEndPlayerInfo::unsafe_arena_release_cards() {
  // @@protoc_insertion_point(field_release:Lucky9.LCMsgEndPlayerInfo.cards)
  
  ::Lucky9::LCMsgHandCards* temp = cards_;
  cards_ = nullptr;
  return temp;
}
inline ::Lucky9::LCMsgHandCards* LCMsgEndPlayerInfo::_internal_mutable_cards() {
  
  if (cards_ == nullptr) {
    auto* p = CreateMaybeMessage<::Lucky9::LCMsgHandCards>(GetArena());
    cards_ = p;
  }
  return cards_;
}
inline ::Lucky9::LCMsgHandCards* LCMsgEndPlayerInfo::mutable_cards() {
  // @@protoc_insertion_point(field_mutable:Lucky9.LCMsgEndPlayerInfo.cards)
  return _internal_mutable_cards();
}
inline void LCMsgEndPlayerInfo::set_allocated_cards(::Lucky9::LCMsgHandCards* cards) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cards_;
  }
  if (cards) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cards);
    if (message_arena != submessage_arena) {
      cards = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cards, submessage_arena);
    }
    
  } else {
    
  }
  cards_ = cards;
  // @@protoc_insertion_point(field_set_allocated:Lucky9.LCMsgEndPlayerInfo.cards)
}

// -------------------------------------------------------------------

// LCMsgGameResult

// repeated .Lucky9.LCMsgEndPlayerInfo players = 1;
inline int LCMsgGameResult::_internal_players_size() const {
  return players_.size();
}
inline int LCMsgGameResult::players_size() const {
  return _internal_players_size();
}
inline void LCMsgGameResult::clear_players() {
  players_.Clear();
}
inline ::Lucky9::LCMsgEndPlayerInfo* LCMsgGameResult::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Lucky9.LCMsgGameResult.players)
  return players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgEndPlayerInfo >*
LCMsgGameResult::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Lucky9.LCMsgGameResult.players)
  return &players_;
}
inline const ::Lucky9::LCMsgEndPlayerInfo& LCMsgGameResult::_internal_players(int index) const {
  return players_.Get(index);
}
inline const ::Lucky9::LCMsgEndPlayerInfo& LCMsgGameResult::players(int index) const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgGameResult.players)
  return _internal_players(index);
}
inline ::Lucky9::LCMsgEndPlayerInfo* LCMsgGameResult::_internal_add_players() {
  return players_.Add();
}
inline ::Lucky9::LCMsgEndPlayerInfo* LCMsgGameResult::add_players() {
  // @@protoc_insertion_point(field_add:Lucky9.LCMsgGameResult.players)
  return _internal_add_players();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Lucky9::LCMsgEndPlayerInfo >&
LCMsgGameResult::players() const {
  // @@protoc_insertion_point(field_list:Lucky9.LCMsgGameResult.players)
  return players_;
}

// -------------------------------------------------------------------

// LCMsgNotifyPlayerAct

// int32 chair_id = 1;
inline void LCMsgNotifyPlayerAct::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyPlayerAct::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyPlayerAct::chair_id() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgNotifyPlayerAct.chair_id)
  return _internal_chair_id();
}
inline void LCMsgNotifyPlayerAct::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void LCMsgNotifyPlayerAct::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgNotifyPlayerAct.chair_id)
}

// int32 act = 2;
inline void LCMsgNotifyPlayerAct::clear_act() {
  act_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyPlayerAct::_internal_act() const {
  return act_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LCMsgNotifyPlayerAct::act() const {
  // @@protoc_insertion_point(field_get:Lucky9.LCMsgNotifyPlayerAct.act)
  return _internal_act();
}
inline void LCMsgNotifyPlayerAct::_internal_set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  act_ = value;
}
inline void LCMsgNotifyPlayerAct::set_act(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_act(value);
  // @@protoc_insertion_point(field_set:Lucky9.LCMsgNotifyPlayerAct.act)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Lucky9

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Lucky9::ELCMsgGameState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Lucky9::ELCMsgGameState>() {
  return ::Lucky9::ELCMsgGameState_descriptor();
}
template <> struct is_proto_enum< ::Lucky9::ELCMsgPlayerState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Lucky9::ELCMsgPlayerState>() {
  return ::Lucky9::ELCMsgPlayerState_descriptor();
}
template <> struct is_proto_enum< ::Lucky9::ELCMsgCardType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Lucky9::ELCMsgCardType>() {
  return ::Lucky9::ELCMsgCardType_descriptor();
}
template <> struct is_proto_enum< ::Lucky9::ELCMsgGameAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Lucky9::ELCMsgGameAction>() {
  return ::Lucky9::ELCMsgGameAction_descriptor();
}
template <> struct is_proto_enum< ::Lucky9::ELCMsgIDSubGame> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Lucky9::ELCMsgIDSubGame>() {
  return ::Lucky9::ELCMsgIDSubGame_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Lucky9_2eproto
