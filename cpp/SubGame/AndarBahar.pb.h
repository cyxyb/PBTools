// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AndarBahar.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_AndarBahar_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_AndarBahar_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_AndarBahar_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_AndarBahar_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_AndarBahar_2eproto;
namespace AndarBahar {
class ABBankerInfo;
class ABBankerInfoDefaultTypeInternal;
extern ABBankerInfoDefaultTypeInternal _ABBankerInfo_default_instance_;
class ABBetInfo;
class ABBetInfoDefaultTypeInternal;
extern ABBetInfoDefaultTypeInternal _ABBetInfo_default_instance_;
class ABPlayerData;
class ABPlayerDataDefaultTypeInternal;
extern ABPlayerDataDefaultTypeInternal _ABPlayerData_default_instance_;
class ABUpWaitBankerInfo;
class ABUpWaitBankerInfoDefaultTypeInternal;
extern ABUpWaitBankerInfoDefaultTypeInternal _ABUpWaitBankerInfo_default_instance_;
class MsgBet;
class MsgBetDefaultTypeInternal;
extern MsgBetDefaultTypeInternal _MsgBet_default_instance_;
class MsgBetResp;
class MsgBetRespDefaultTypeInternal;
extern MsgBetRespDefaultTypeInternal _MsgBetResp_default_instance_;
class MsgOpBanker;
class MsgOpBankerDefaultTypeInternal;
extern MsgOpBankerDefaultTypeInternal _MsgOpBanker_default_instance_;
class MsgOpBankerResp;
class MsgOpBankerRespDefaultTypeInternal;
extern MsgOpBankerRespDefaultTypeInternal _MsgOpBankerResp_default_instance_;
class MsgResult;
class MsgResultDefaultTypeInternal;
extern MsgResultDefaultTypeInternal _MsgResult_default_instance_;
class MsgSceneInfo;
class MsgSceneInfoDefaultTypeInternal;
extern MsgSceneInfoDefaultTypeInternal _MsgSceneInfo_default_instance_;
class MsgSendCardResp;
class MsgSendCardRespDefaultTypeInternal;
extern MsgSendCardRespDefaultTypeInternal _MsgSendCardResp_default_instance_;
class MsgStartGameResp;
class MsgStartGameRespDefaultTypeInternal;
extern MsgStartGameRespDefaultTypeInternal _MsgStartGameResp_default_instance_;
class MsgWinMsg;
class MsgWinMsgDefaultTypeInternal;
extern MsgWinMsgDefaultTypeInternal _MsgWinMsg_default_instance_;
}  // namespace AndarBahar
PROTOBUF_NAMESPACE_OPEN
template<> ::AndarBahar::ABBankerInfo* Arena::CreateMaybeMessage<::AndarBahar::ABBankerInfo>(Arena*);
template<> ::AndarBahar::ABBetInfo* Arena::CreateMaybeMessage<::AndarBahar::ABBetInfo>(Arena*);
template<> ::AndarBahar::ABPlayerData* Arena::CreateMaybeMessage<::AndarBahar::ABPlayerData>(Arena*);
template<> ::AndarBahar::ABUpWaitBankerInfo* Arena::CreateMaybeMessage<::AndarBahar::ABUpWaitBankerInfo>(Arena*);
template<> ::AndarBahar::MsgBet* Arena::CreateMaybeMessage<::AndarBahar::MsgBet>(Arena*);
template<> ::AndarBahar::MsgBetResp* Arena::CreateMaybeMessage<::AndarBahar::MsgBetResp>(Arena*);
template<> ::AndarBahar::MsgOpBanker* Arena::CreateMaybeMessage<::AndarBahar::MsgOpBanker>(Arena*);
template<> ::AndarBahar::MsgOpBankerResp* Arena::CreateMaybeMessage<::AndarBahar::MsgOpBankerResp>(Arena*);
template<> ::AndarBahar::MsgResult* Arena::CreateMaybeMessage<::AndarBahar::MsgResult>(Arena*);
template<> ::AndarBahar::MsgSceneInfo* Arena::CreateMaybeMessage<::AndarBahar::MsgSceneInfo>(Arena*);
template<> ::AndarBahar::MsgSendCardResp* Arena::CreateMaybeMessage<::AndarBahar::MsgSendCardResp>(Arena*);
template<> ::AndarBahar::MsgStartGameResp* Arena::CreateMaybeMessage<::AndarBahar::MsgStartGameResp>(Arena*);
template<> ::AndarBahar::MsgWinMsg* Arena::CreateMaybeMessage<::AndarBahar::MsgWinMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace AndarBahar {

enum EGameState : int {
  GS_Ready = 0,
  GS_Start = 1,
  GS_Bet1 = 2,
  GS_Bet2 = 3,
  GS_SendCard1 = 4,
  GS_SendCard2 = 5,
  GS_Result = 6,
  EGameState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EGameState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EGameState_IsValid(int value);
constexpr EGameState EGameState_MIN = GS_Ready;
constexpr EGameState EGameState_MAX = GS_Result;
constexpr int EGameState_ARRAYSIZE = EGameState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGameState_descriptor();
template<typename T>
inline const std::string& EGameState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGameState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGameState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGameState_descriptor(), enum_t_value);
}
inline bool EGameState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGameState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGameState>(
    EGameState_descriptor(), name, value);
}
enum EMsgIDSubGame : int {
  MsgIDSubGame_Null = 0,
  MsgIDSubGame_Bet = 1,
  MsgIDSubGame_BetResp = 2,
  MsgIDSubGame_OpBanker = 3,
  MsgIDSubGame_OpBankerResp = 4,
  MsgIDSubGame_GameStartResp = 5,
  MsgIDSubGame_SendCardResp = 6,
  MsgIDSubGame_GameResultResp = 7,
  MsgIDSubGame_NotifyStateResp = 8,
  EMsgIDSubGame_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EMsgIDSubGame_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EMsgIDSubGame_IsValid(int value);
constexpr EMsgIDSubGame EMsgIDSubGame_MIN = MsgIDSubGame_Null;
constexpr EMsgIDSubGame EMsgIDSubGame_MAX = MsgIDSubGame_NotifyStateResp;
constexpr int EMsgIDSubGame_ARRAYSIZE = EMsgIDSubGame_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDSubGame_descriptor();
template<typename T>
inline const std::string& EMsgIDSubGame_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMsgIDSubGame>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMsgIDSubGame_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMsgIDSubGame_descriptor(), enum_t_value);
}
inline bool EMsgIDSubGame_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMsgIDSubGame* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMsgIDSubGame>(
    EMsgIDSubGame_descriptor(), name, value);
}
// ===================================================================

class ABBetInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.ABBetInfo) */ {
 public:
  inline ABBetInfo() : ABBetInfo(nullptr) {}
  virtual ~ABBetInfo();

  ABBetInfo(const ABBetInfo& from);
  ABBetInfo(ABBetInfo&& from) noexcept
    : ABBetInfo() {
    *this = ::std::move(from);
  }

  inline ABBetInfo& operator=(const ABBetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ABBetInfo& operator=(ABBetInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ABBetInfo& default_instance();

  static inline const ABBetInfo* internal_default_instance() {
    return reinterpret_cast<const ABBetInfo*>(
               &_ABBetInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ABBetInfo& a, ABBetInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ABBetInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ABBetInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ABBetInfo* New() const final {
    return CreateMaybeMessage<ABBetInfo>(nullptr);
  }

  ABBetInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ABBetInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ABBetInfo& from);
  void MergeFrom(const ABBetInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ABBetInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.ABBetInfo";
  }
  protected:
  explicit ABBetInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // int64 bet = 1;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 status = 2;
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.ABBetInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class ABPlayerData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.ABPlayerData) */ {
 public:
  inline ABPlayerData() : ABPlayerData(nullptr) {}
  virtual ~ABPlayerData();

  ABPlayerData(const ABPlayerData& from);
  ABPlayerData(ABPlayerData&& from) noexcept
    : ABPlayerData() {
    *this = ::std::move(from);
  }

  inline ABPlayerData& operator=(const ABPlayerData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ABPlayerData& operator=(ABPlayerData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ABPlayerData& default_instance();

  static inline const ABPlayerData* internal_default_instance() {
    return reinterpret_cast<const ABPlayerData*>(
               &_ABPlayerData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ABPlayerData& a, ABPlayerData& b) {
    a.Swap(&b);
  }
  inline void Swap(ABPlayerData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ABPlayerData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ABPlayerData* New() const final {
    return CreateMaybeMessage<ABPlayerData>(nullptr);
  }

  ABPlayerData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ABPlayerData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ABPlayerData& from);
  void MergeFrom(const ABPlayerData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ABPlayerData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.ABPlayerData";
  }
  protected:
  explicit ABPlayerData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetInfosFieldNumber = 5,
    kWinGoldFieldNumber = 2,
    kUserIdFieldNumber = 1,
    kTotalPlayFieldNumber = 3,
    kWinPlayFieldNumber = 4,
  };
  // repeated .AndarBahar.ABBetInfo bet_infos = 5;
  int bet_infos_size() const;
  private:
  int _internal_bet_infos_size() const;
  public:
  void clear_bet_infos();
  ::AndarBahar::ABBetInfo* mutable_bet_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABBetInfo >*
      mutable_bet_infos();
  private:
  const ::AndarBahar::ABBetInfo& _internal_bet_infos(int index) const;
  ::AndarBahar::ABBetInfo* _internal_add_bet_infos();
  public:
  const ::AndarBahar::ABBetInfo& bet_infos(int index) const;
  ::AndarBahar::ABBetInfo* add_bet_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABBetInfo >&
      bet_infos() const;

  // int64 win_gold = 2;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 total_play = 3;
  void clear_total_play();
  ::PROTOBUF_NAMESPACE_ID::int32 total_play() const;
  void set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_play() const;
  void _internal_set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 win_play = 4;
  void clear_win_play();
  ::PROTOBUF_NAMESPACE_ID::int32 win_play() const;
  void set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_win_play() const;
  void _internal_set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.ABPlayerData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABBetInfo > bet_infos_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_play_;
  ::PROTOBUF_NAMESPACE_ID::int32 win_play_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class ABUpWaitBankerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.ABUpWaitBankerInfo) */ {
 public:
  inline ABUpWaitBankerInfo() : ABUpWaitBankerInfo(nullptr) {}
  virtual ~ABUpWaitBankerInfo();

  ABUpWaitBankerInfo(const ABUpWaitBankerInfo& from);
  ABUpWaitBankerInfo(ABUpWaitBankerInfo&& from) noexcept
    : ABUpWaitBankerInfo() {
    *this = ::std::move(from);
  }

  inline ABUpWaitBankerInfo& operator=(const ABUpWaitBankerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ABUpWaitBankerInfo& operator=(ABUpWaitBankerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ABUpWaitBankerInfo& default_instance();

  static inline const ABUpWaitBankerInfo* internal_default_instance() {
    return reinterpret_cast<const ABUpWaitBankerInfo*>(
               &_ABUpWaitBankerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ABUpWaitBankerInfo& a, ABUpWaitBankerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ABUpWaitBankerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ABUpWaitBankerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ABUpWaitBankerInfo* New() const final {
    return CreateMaybeMessage<ABUpWaitBankerInfo>(nullptr);
  }

  ABUpWaitBankerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ABUpWaitBankerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ABUpWaitBankerInfo& from);
  void MergeFrom(const ABUpWaitBankerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ABUpWaitBankerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.ABUpWaitBankerInfo";
  }
  protected:
  explicit ABUpWaitBankerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpBankerGoldFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // int64 op_banker_gold = 2;
  void clear_op_banker_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 op_banker_gold() const;
  void set_op_banker_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_op_banker_gold() const;
  void _internal_set_op_banker_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.ABUpWaitBankerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 op_banker_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class ABBankerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.ABBankerInfo) */ {
 public:
  inline ABBankerInfo() : ABBankerInfo(nullptr) {}
  virtual ~ABBankerInfo();

  ABBankerInfo(const ABBankerInfo& from);
  ABBankerInfo(ABBankerInfo&& from) noexcept
    : ABBankerInfo() {
    *this = ::std::move(from);
  }

  inline ABBankerInfo& operator=(const ABBankerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ABBankerInfo& operator=(ABBankerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ABBankerInfo& default_instance();

  static inline const ABBankerInfo* internal_default_instance() {
    return reinterpret_cast<const ABBankerInfo*>(
               &_ABBankerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ABBankerInfo& a, ABBankerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ABBankerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ABBankerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ABBankerInfo* New() const final {
    return CreateMaybeMessage<ABBankerInfo>(nullptr);
  }

  ABBankerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ABBankerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ABBankerInfo& from);
  void MergeFrom(const ABBankerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ABBankerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.ABBankerInfo";
  }
  protected:
  explicit ABBankerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpGoldFieldNumber = 2,
    kIdFieldNumber = 1,
    kRoundFieldNumber = 3,
    kTotalWinFieldNumber = 4,
    kIsDownFieldNumber = 5,
  };
  // int64 op_gold = 2;
  void clear_op_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 op_gold() const;
  void set_op_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_op_gold() const;
  void _internal_set_op_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 round = 3;
  void clear_round();
  ::PROTOBUF_NAMESPACE_ID::int32 round() const;
  void set_round(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_round() const;
  void _internal_set_round(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 total_win = 4;
  void clear_total_win();
  ::PROTOBUF_NAMESPACE_ID::int64 total_win() const;
  void set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_win() const;
  void _internal_set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // bool is_down = 5;
  void clear_is_down();
  bool is_down() const;
  void set_is_down(bool value);
  private:
  bool _internal_is_down() const;
  void _internal_set_is_down(bool value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.ABBankerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 op_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 round_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_win_;
  bool is_down_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgSceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgSceneInfo) */ {
 public:
  inline MsgSceneInfo() : MsgSceneInfo(nullptr) {}
  virtual ~MsgSceneInfo();

  MsgSceneInfo(const MsgSceneInfo& from);
  MsgSceneInfo(MsgSceneInfo&& from) noexcept
    : MsgSceneInfo() {
    *this = ::std::move(from);
  }

  inline MsgSceneInfo& operator=(const MsgSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSceneInfo& operator=(MsgSceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgSceneInfo& default_instance();

  static inline const MsgSceneInfo* internal_default_instance() {
    return reinterpret_cast<const MsgSceneInfo*>(
               &_MsgSceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgSceneInfo& a, MsgSceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgSceneInfo* New() const final {
    return CreateMaybeMessage<MsgSceneInfo>(nullptr);
  }

  MsgSceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgSceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgSceneInfo& from);
  void MergeFrom(const MsgSceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgSceneInfo";
  }
  protected:
  explicit MsgSceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 1,
    kRecordsFieldNumber = 2,
    kBetLimitFieldNumber = 3,
    kUpBankerListFieldNumber = 4,
    kMulFieldNumber = 9,
    kRedCardsFieldNumber = 20,
    kBlueCardsFieldNumber = 21,
    kPlayerListFieldNumber = 22,
    kBankerInfoFieldNumber = 12,
    kPlayerLimitFieldNumber = 5,
    kBetTimeFieldNumber = 6,
    kOutTimeFieldNumber = 7,
    kStateFieldNumber = 8,
    kBankerMinLimitFieldNumber = 11,
    kBankerMaxFieldNumber = 10,
    kBaseCardFieldNumber = 13,
    kRedTotalBetFieldNumber = 14,
    kBluoTotalBetFieldNumber = 15,
  };
  // repeated int64 bet = 1;
  int bet_size() const;
  private:
  int _internal_bet_size() const;
  public:
  void clear_bet();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_bet() const;
  void _internal_add_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_bet();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 bet(int index) const;
  void set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      bet() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_bet();

  // repeated int32 records = 2;
  int records_size() const;
  private:
  int _internal_records_size() const;
  public:
  void clear_records();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_records(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_records() const;
  void _internal_add_records(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_records();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 records(int index) const;
  void set_records(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_records(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      records() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_records();

  // repeated int32 bet_limit = 3;
  int bet_limit_size() const;
  private:
  int _internal_bet_limit_size() const;
  public:
  void clear_bet_limit();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_limit(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bet_limit() const;
  void _internal_add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bet_limit();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bet_limit(int index) const;
  void set_bet_limit(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bet_limit() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bet_limit();

  // repeated .AndarBahar.ABUpWaitBankerInfo up_banker_list = 4;
  int up_banker_list_size() const;
  private:
  int _internal_up_banker_list_size() const;
  public:
  void clear_up_banker_list();
  ::AndarBahar::ABUpWaitBankerInfo* mutable_up_banker_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABUpWaitBankerInfo >*
      mutable_up_banker_list();
  private:
  const ::AndarBahar::ABUpWaitBankerInfo& _internal_up_banker_list(int index) const;
  ::AndarBahar::ABUpWaitBankerInfo* _internal_add_up_banker_list();
  public:
  const ::AndarBahar::ABUpWaitBankerInfo& up_banker_list(int index) const;
  ::AndarBahar::ABUpWaitBankerInfo* add_up_banker_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABUpWaitBankerInfo >&
      up_banker_list() const;

  // repeated int32 mul = 9;
  int mul_size() const;
  private:
  int _internal_mul_size() const;
  public:
  void clear_mul();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mul(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_mul() const;
  void _internal_add_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_mul();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 mul(int index) const;
  void set_mul(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      mul() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_mul();

  // repeated int32 red_cards = 20;
  int red_cards_size() const;
  private:
  int _internal_red_cards_size() const;
  public:
  void clear_red_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_red_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_red_cards() const;
  void _internal_add_red_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_red_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 red_cards(int index) const;
  void set_red_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_red_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      red_cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_red_cards();

  // repeated int32 blue_cards = 21;
  int blue_cards_size() const;
  private:
  int _internal_blue_cards_size() const;
  public:
  void clear_blue_cards();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_blue_cards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_blue_cards() const;
  void _internal_add_blue_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_blue_cards();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 blue_cards(int index) const;
  void set_blue_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_blue_cards(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      blue_cards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_blue_cards();

  // repeated .AndarBahar.ABPlayerData player_list = 22;
  int player_list_size() const;
  private:
  int _internal_player_list_size() const;
  public:
  void clear_player_list();
  ::AndarBahar::ABPlayerData* mutable_player_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABPlayerData >*
      mutable_player_list();
  private:
  const ::AndarBahar::ABPlayerData& _internal_player_list(int index) const;
  ::AndarBahar::ABPlayerData* _internal_add_player_list();
  public:
  const ::AndarBahar::ABPlayerData& player_list(int index) const;
  ::AndarBahar::ABPlayerData* add_player_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABPlayerData >&
      player_list() const;

  // .AndarBahar.ABBankerInfo banker_info = 12;
  bool has_banker_info() const;
  private:
  bool _internal_has_banker_info() const;
  public:
  void clear_banker_info();
  const ::AndarBahar::ABBankerInfo& banker_info() const;
  ::AndarBahar::ABBankerInfo* release_banker_info();
  ::AndarBahar::ABBankerInfo* mutable_banker_info();
  void set_allocated_banker_info(::AndarBahar::ABBankerInfo* banker_info);
  private:
  const ::AndarBahar::ABBankerInfo& _internal_banker_info() const;
  ::AndarBahar::ABBankerInfo* _internal_mutable_banker_info();
  public:
  void unsafe_arena_set_allocated_banker_info(
      ::AndarBahar::ABBankerInfo* banker_info);
  ::AndarBahar::ABBankerInfo* unsafe_arena_release_banker_info();

  // int32 player_limit = 5;
  void clear_player_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 player_limit() const;
  void set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_limit() const;
  void _internal_set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet_time = 6;
  void clear_bet_time();
  ::PROTOBUF_NAMESPACE_ID::int32 bet_time() const;
  void set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_time() const;
  void _internal_set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 out_time = 7;
  void clear_out_time();
  ::PROTOBUF_NAMESPACE_ID::int32 out_time() const;
  void set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_out_time() const;
  void _internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 state = 8;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 banker_min_limit = 11;
  void clear_banker_min_limit();
  ::PROTOBUF_NAMESPACE_ID::int64 banker_min_limit() const;
  void set_banker_min_limit(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_banker_min_limit() const;
  void _internal_set_banker_min_limit(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 banker_max = 10;
  void clear_banker_max();
  ::PROTOBUF_NAMESPACE_ID::int32 banker_max() const;
  void set_banker_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_banker_max() const;
  void _internal_set_banker_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 base_card = 13;
  void clear_base_card();
  ::PROTOBUF_NAMESPACE_ID::int32 base_card() const;
  void set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_base_card() const;
  void _internal_set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 red_total_bet = 14;
  void clear_red_total_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 red_total_bet() const;
  void set_red_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_red_total_bet() const;
  void _internal_set_red_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 bluo_total_bet = 15;
  void clear_bluo_total_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 bluo_total_bet() const;
  void set_bluo_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bluo_total_bet() const;
  void _internal_set_bluo_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgSceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > bet_;
  mutable std::atomic<int> _bet_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > records_;
  mutable std::atomic<int> _records_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bet_limit_;
  mutable std::atomic<int> _bet_limit_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABUpWaitBankerInfo > up_banker_list_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > mul_;
  mutable std::atomic<int> _mul_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > red_cards_;
  mutable std::atomic<int> _red_cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > blue_cards_;
  mutable std::atomic<int> _blue_cards_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABPlayerData > player_list_;
  ::AndarBahar::ABBankerInfo* banker_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_limit_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 out_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  ::PROTOBUF_NAMESPACE_ID::int64 banker_min_limit_;
  ::PROTOBUF_NAMESPACE_ID::int32 banker_max_;
  ::PROTOBUF_NAMESPACE_ID::int32 base_card_;
  ::PROTOBUF_NAMESPACE_ID::int64 red_total_bet_;
  ::PROTOBUF_NAMESPACE_ID::int64 bluo_total_bet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgStartGameResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgStartGameResp) */ {
 public:
  inline MsgStartGameResp() : MsgStartGameResp(nullptr) {}
  virtual ~MsgStartGameResp();

  MsgStartGameResp(const MsgStartGameResp& from);
  MsgStartGameResp(MsgStartGameResp&& from) noexcept
    : MsgStartGameResp() {
    *this = ::std::move(from);
  }

  inline MsgStartGameResp& operator=(const MsgStartGameResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStartGameResp& operator=(MsgStartGameResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgStartGameResp& default_instance();

  static inline const MsgStartGameResp* internal_default_instance() {
    return reinterpret_cast<const MsgStartGameResp*>(
               &_MsgStartGameResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgStartGameResp& a, MsgStartGameResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgStartGameResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStartGameResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgStartGameResp* New() const final {
    return CreateMaybeMessage<MsgStartGameResp>(nullptr);
  }

  MsgStartGameResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgStartGameResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgStartGameResp& from);
  void MergeFrom(const MsgStartGameResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStartGameResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgStartGameResp";
  }
  protected:
  explicit MsgStartGameResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBankerInfoFieldNumber = 1,
    kBaseCardFieldNumber = 3,
  };
  // .AndarBahar.ABBankerInfo banker_info = 1;
  bool has_banker_info() const;
  private:
  bool _internal_has_banker_info() const;
  public:
  void clear_banker_info();
  const ::AndarBahar::ABBankerInfo& banker_info() const;
  ::AndarBahar::ABBankerInfo* release_banker_info();
  ::AndarBahar::ABBankerInfo* mutable_banker_info();
  void set_allocated_banker_info(::AndarBahar::ABBankerInfo* banker_info);
  private:
  const ::AndarBahar::ABBankerInfo& _internal_banker_info() const;
  ::AndarBahar::ABBankerInfo* _internal_mutable_banker_info();
  public:
  void unsafe_arena_set_allocated_banker_info(
      ::AndarBahar::ABBankerInfo* banker_info);
  ::AndarBahar::ABBankerInfo* unsafe_arena_release_banker_info();

  // int32 base_card = 3;
  void clear_base_card();
  ::PROTOBUF_NAMESPACE_ID::int32 base_card() const;
  void set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_base_card() const;
  void _internal_set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgStartGameResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::AndarBahar::ABBankerInfo* banker_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 base_card_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgBet) */ {
 public:
  inline MsgBet() : MsgBet(nullptr) {}
  virtual ~MsgBet();

  MsgBet(const MsgBet& from);
  MsgBet(MsgBet&& from) noexcept
    : MsgBet() {
    *this = ::std::move(from);
  }

  inline MsgBet& operator=(const MsgBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBet& operator=(MsgBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBet& default_instance();

  static inline const MsgBet* internal_default_instance() {
    return reinterpret_cast<const MsgBet*>(
               &_MsgBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgBet& a, MsgBet& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBet* New() const final {
    return CreateMaybeMessage<MsgBet>(nullptr);
  }

  MsgBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBet& from);
  void MergeFrom(const MsgBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgBet";
  }
  protected:
  explicit MsgBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 1,
    kAreaFieldNumber = 2,
  };
  // int64 bet = 1;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 area = 2;
  void clear_area();
  ::PROTOBUF_NAMESPACE_ID::int32 area() const;
  void set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area() const;
  void _internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bet_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgBetResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgBetResp) */ {
 public:
  inline MsgBetResp() : MsgBetResp(nullptr) {}
  virtual ~MsgBetResp();

  MsgBetResp(const MsgBetResp& from);
  MsgBetResp(MsgBetResp&& from) noexcept
    : MsgBetResp() {
    *this = ::std::move(from);
  }

  inline MsgBetResp& operator=(const MsgBetResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBetResp& operator=(MsgBetResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBetResp& default_instance();

  static inline const MsgBetResp* internal_default_instance() {
    return reinterpret_cast<const MsgBetResp*>(
               &_MsgBetResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgBetResp& a, MsgBetResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBetResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBetResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBetResp* New() const final {
    return CreateMaybeMessage<MsgBetResp>(nullptr);
  }

  MsgBetResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBetResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBetResp& from);
  void MergeFrom(const MsgBetResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBetResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgBetResp";
  }
  protected:
  explicit MsgBetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetInfoFieldNumber = 4,
    kRetCodeFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kChairIdFieldNumber = 3,
  };
  // .AndarBahar.ABBetInfo bet_info = 4;
  bool has_bet_info() const;
  private:
  bool _internal_has_bet_info() const;
  public:
  void clear_bet_info();
  const ::AndarBahar::ABBetInfo& bet_info() const;
  ::AndarBahar::ABBetInfo* release_bet_info();
  ::AndarBahar::ABBetInfo* mutable_bet_info();
  void set_allocated_bet_info(::AndarBahar::ABBetInfo* bet_info);
  private:
  const ::AndarBahar::ABBetInfo& _internal_bet_info() const;
  ::AndarBahar::ABBetInfo* _internal_mutable_bet_info();
  public:
  void unsafe_arena_set_allocated_bet_info(
      ::AndarBahar::ABBetInfo* bet_info);
  ::AndarBahar::ABBetInfo* unsafe_arena_release_bet_info();

  // int32 ret_code = 1;
  void clear_ret_code();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code() const;
  void set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_code() const;
  void _internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 3;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgBetResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::AndarBahar::ABBetInfo* bet_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgSendCardResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgSendCardResp) */ {
 public:
  inline MsgSendCardResp() : MsgSendCardResp(nullptr) {}
  virtual ~MsgSendCardResp();

  MsgSendCardResp(const MsgSendCardResp& from);
  MsgSendCardResp(MsgSendCardResp&& from) noexcept
    : MsgSendCardResp() {
    *this = ::std::move(from);
  }

  inline MsgSendCardResp& operator=(const MsgSendCardResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSendCardResp& operator=(MsgSendCardResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgSendCardResp& default_instance();

  static inline const MsgSendCardResp* internal_default_instance() {
    return reinterpret_cast<const MsgSendCardResp*>(
               &_MsgSendCardResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgSendCardResp& a, MsgSendCardResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSendCardResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSendCardResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgSendCardResp* New() const final {
    return CreateMaybeMessage<MsgSendCardResp>(nullptr);
  }

  MsgSendCardResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgSendCardResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgSendCardResp& from);
  void MergeFrom(const MsgSendCardResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSendCardResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgSendCardResp";
  }
  protected:
  explicit MsgSendCardResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardFieldNumber = 1,
    kAreaFieldNumber = 2,
    kIsEndFieldNumber = 3,
  };
  // int32 card = 1;
  void clear_card();
  ::PROTOBUF_NAMESPACE_ID::int32 card() const;
  void set_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_card() const;
  void _internal_set_card(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 area = 2;
  void clear_area();
  ::PROTOBUF_NAMESPACE_ID::int32 area() const;
  void set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area() const;
  void _internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_end = 3;
  void clear_is_end();
  bool is_end() const;
  void set_is_end(bool value);
  private:
  bool _internal_is_end() const;
  void _internal_set_is_end(bool value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgSendCardResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 card_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_;
  bool is_end_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgOpBanker PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgOpBanker) */ {
 public:
  inline MsgOpBanker() : MsgOpBanker(nullptr) {}
  virtual ~MsgOpBanker();

  MsgOpBanker(const MsgOpBanker& from);
  MsgOpBanker(MsgOpBanker&& from) noexcept
    : MsgOpBanker() {
    *this = ::std::move(from);
  }

  inline MsgOpBanker& operator=(const MsgOpBanker& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgOpBanker& operator=(MsgOpBanker&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgOpBanker& default_instance();

  static inline const MsgOpBanker* internal_default_instance() {
    return reinterpret_cast<const MsgOpBanker*>(
               &_MsgOpBanker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgOpBanker& a, MsgOpBanker& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgOpBanker* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgOpBanker* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgOpBanker* New() const final {
    return CreateMaybeMessage<MsgOpBanker>(nullptr);
  }

  MsgOpBanker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgOpBanker>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgOpBanker& from);
  void MergeFrom(const MsgOpBanker& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgOpBanker* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgOpBanker";
  }
  protected:
  explicit MsgOpBanker(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpGoldFieldNumber = 2,
    kOpTypeFieldNumber = 1,
  };
  // int64 up_gold = 2;
  void clear_up_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 up_gold() const;
  void set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_up_gold() const;
  void _internal_set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 op_type = 1;
  void clear_op_type();
  ::PROTOBUF_NAMESPACE_ID::int32 op_type() const;
  void set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_op_type() const;
  void _internal_set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgOpBanker)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 up_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 op_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgOpBankerResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgOpBankerResp) */ {
 public:
  inline MsgOpBankerResp() : MsgOpBankerResp(nullptr) {}
  virtual ~MsgOpBankerResp();

  MsgOpBankerResp(const MsgOpBankerResp& from);
  MsgOpBankerResp(MsgOpBankerResp&& from) noexcept
    : MsgOpBankerResp() {
    *this = ::std::move(from);
  }

  inline MsgOpBankerResp& operator=(const MsgOpBankerResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgOpBankerResp& operator=(MsgOpBankerResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgOpBankerResp& default_instance();

  static inline const MsgOpBankerResp* internal_default_instance() {
    return reinterpret_cast<const MsgOpBankerResp*>(
               &_MsgOpBankerResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MsgOpBankerResp& a, MsgOpBankerResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgOpBankerResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgOpBankerResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgOpBankerResp* New() const final {
    return CreateMaybeMessage<MsgOpBankerResp>(nullptr);
  }

  MsgOpBankerResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgOpBankerResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgOpBankerResp& from);
  void MergeFrom(const MsgOpBankerResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgOpBankerResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgOpBankerResp";
  }
  protected:
  explicit MsgOpBankerResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kChairIdFieldNumber = 3,
    kOpTypeFieldNumber = 4,
    kUpGoldFieldNumber = 5,
  };
  // int32 ret_code = 1;
  void clear_ret_code();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code() const;
  void set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_code() const;
  void _internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 3;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 op_type = 4;
  void clear_op_type();
  ::PROTOBUF_NAMESPACE_ID::int32 op_type() const;
  void set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_op_type() const;
  void _internal_set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 up_gold = 5;
  void clear_up_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 up_gold() const;
  void set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_up_gold() const;
  void _internal_set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgOpBankerResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 op_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 up_gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgWinMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgWinMsg) */ {
 public:
  inline MsgWinMsg() : MsgWinMsg(nullptr) {}
  virtual ~MsgWinMsg();

  MsgWinMsg(const MsgWinMsg& from);
  MsgWinMsg(MsgWinMsg&& from) noexcept
    : MsgWinMsg() {
    *this = ::std::move(from);
  }

  inline MsgWinMsg& operator=(const MsgWinMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgWinMsg& operator=(MsgWinMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgWinMsg& default_instance();

  static inline const MsgWinMsg* internal_default_instance() {
    return reinterpret_cast<const MsgWinMsg*>(
               &_MsgWinMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MsgWinMsg& a, MsgWinMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgWinMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgWinMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgWinMsg* New() const final {
    return CreateMaybeMessage<MsgWinMsg>(nullptr);
  }

  MsgWinMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgWinMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgWinMsg& from);
  void MergeFrom(const MsgWinMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgWinMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgWinMsg";
  }
  protected:
  explicit MsgWinMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kChairIdFieldNumber = 2,
    kWinGoldFieldNumber = 3,
    kNewGoldFieldNumber = 4,
    kIsWinFieldNumber = 5,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 2;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 win_gold = 3;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 new_gold = 4;
  void clear_new_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 new_gold() const;
  void set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_new_gold() const;
  void _internal_set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // bool is_win = 5;
  void clear_is_win();
  bool is_win() const;
  void set_is_win(bool value);
  private:
  bool _internal_is_win() const;
  void _internal_set_is_win(bool value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgWinMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 new_gold_;
  bool is_win_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// -------------------------------------------------------------------

class MsgResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AndarBahar.MsgResult) */ {
 public:
  inline MsgResult() : MsgResult(nullptr) {}
  virtual ~MsgResult();

  MsgResult(const MsgResult& from);
  MsgResult(MsgResult&& from) noexcept
    : MsgResult() {
    *this = ::std::move(from);
  }

  inline MsgResult& operator=(const MsgResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgResult& operator=(MsgResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgResult& default_instance();

  static inline const MsgResult* internal_default_instance() {
    return reinterpret_cast<const MsgResult*>(
               &_MsgResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MsgResult& a, MsgResult& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgResult* New() const final {
    return CreateMaybeMessage<MsgResult>(nullptr);
  }

  MsgResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgResult& from);
  void MergeFrom(const MsgResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AndarBahar.MsgResult";
  }
  protected:
  explicit MsgResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_AndarBahar_2eproto);
    return ::descriptor_table_AndarBahar_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinMsgFieldNumber = 3,
    kBankerInfoFieldNumber = 2,
    kWinIndexFieldNumber = 1,
  };
  // repeated .AndarBahar.MsgWinMsg win_msg = 3;
  int win_msg_size() const;
  private:
  int _internal_win_msg_size() const;
  public:
  void clear_win_msg();
  ::AndarBahar::MsgWinMsg* mutable_win_msg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::MsgWinMsg >*
      mutable_win_msg();
  private:
  const ::AndarBahar::MsgWinMsg& _internal_win_msg(int index) const;
  ::AndarBahar::MsgWinMsg* _internal_add_win_msg();
  public:
  const ::AndarBahar::MsgWinMsg& win_msg(int index) const;
  ::AndarBahar::MsgWinMsg* add_win_msg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::MsgWinMsg >&
      win_msg() const;

  // .AndarBahar.ABBankerInfo banker_info = 2;
  bool has_banker_info() const;
  private:
  bool _internal_has_banker_info() const;
  public:
  void clear_banker_info();
  const ::AndarBahar::ABBankerInfo& banker_info() const;
  ::AndarBahar::ABBankerInfo* release_banker_info();
  ::AndarBahar::ABBankerInfo* mutable_banker_info();
  void set_allocated_banker_info(::AndarBahar::ABBankerInfo* banker_info);
  private:
  const ::AndarBahar::ABBankerInfo& _internal_banker_info() const;
  ::AndarBahar::ABBankerInfo* _internal_mutable_banker_info();
  public:
  void unsafe_arena_set_allocated_banker_info(
      ::AndarBahar::ABBankerInfo* banker_info);
  ::AndarBahar::ABBankerInfo* unsafe_arena_release_banker_info();

  // int32 win_index = 1;
  void clear_win_index();
  ::PROTOBUF_NAMESPACE_ID::int32 win_index() const;
  void set_win_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_win_index() const;
  void _internal_set_win_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:AndarBahar.MsgResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::MsgWinMsg > win_msg_;
  ::AndarBahar::ABBankerInfo* banker_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 win_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_AndarBahar_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ABBetInfo

// int64 bet = 1;
inline void ABBetInfo::clear_bet() {
  bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABBetInfo::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABBetInfo::bet() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABBetInfo.bet)
  return _internal_bet();
}
inline void ABBetInfo::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_ = value;
}
inline void ABBetInfo::set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABBetInfo.bet)
}

// int32 status = 2;
inline void ABBetInfo::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABBetInfo::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABBetInfo::status() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABBetInfo.status)
  return _internal_status();
}
inline void ABBetInfo::_internal_set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
}
inline void ABBetInfo::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABBetInfo.status)
}

// -------------------------------------------------------------------

// ABPlayerData

// int32 user_id = 1;
inline void ABPlayerData::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABPlayerData::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABPlayerData::user_id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABPlayerData.user_id)
  return _internal_user_id();
}
inline void ABPlayerData::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void ABPlayerData::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABPlayerData.user_id)
}

// int64 win_gold = 2;
inline void ABPlayerData::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABPlayerData::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABPlayerData::win_gold() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABPlayerData.win_gold)
  return _internal_win_gold();
}
inline void ABPlayerData::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void ABPlayerData::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABPlayerData.win_gold)
}

// int32 total_play = 3;
inline void ABPlayerData::clear_total_play() {
  total_play_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABPlayerData::_internal_total_play() const {
  return total_play_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABPlayerData::total_play() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABPlayerData.total_play)
  return _internal_total_play();
}
inline void ABPlayerData::_internal_set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  total_play_ = value;
}
inline void ABPlayerData::set_total_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_play(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABPlayerData.total_play)
}

// int32 win_play = 4;
inline void ABPlayerData::clear_win_play() {
  win_play_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABPlayerData::_internal_win_play() const {
  return win_play_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABPlayerData::win_play() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABPlayerData.win_play)
  return _internal_win_play();
}
inline void ABPlayerData::_internal_set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  win_play_ = value;
}
inline void ABPlayerData::set_win_play(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_win_play(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABPlayerData.win_play)
}

// repeated .AndarBahar.ABBetInfo bet_infos = 5;
inline int ABPlayerData::_internal_bet_infos_size() const {
  return bet_infos_.size();
}
inline int ABPlayerData::bet_infos_size() const {
  return _internal_bet_infos_size();
}
inline void ABPlayerData::clear_bet_infos() {
  bet_infos_.Clear();
}
inline ::AndarBahar::ABBetInfo* ABPlayerData::mutable_bet_infos(int index) {
  // @@protoc_insertion_point(field_mutable:AndarBahar.ABPlayerData.bet_infos)
  return bet_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABBetInfo >*
ABPlayerData::mutable_bet_infos() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.ABPlayerData.bet_infos)
  return &bet_infos_;
}
inline const ::AndarBahar::ABBetInfo& ABPlayerData::_internal_bet_infos(int index) const {
  return bet_infos_.Get(index);
}
inline const ::AndarBahar::ABBetInfo& ABPlayerData::bet_infos(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABPlayerData.bet_infos)
  return _internal_bet_infos(index);
}
inline ::AndarBahar::ABBetInfo* ABPlayerData::_internal_add_bet_infos() {
  return bet_infos_.Add();
}
inline ::AndarBahar::ABBetInfo* ABPlayerData::add_bet_infos() {
  // @@protoc_insertion_point(field_add:AndarBahar.ABPlayerData.bet_infos)
  return _internal_add_bet_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABBetInfo >&
ABPlayerData::bet_infos() const {
  // @@protoc_insertion_point(field_list:AndarBahar.ABPlayerData.bet_infos)
  return bet_infos_;
}

// -------------------------------------------------------------------

// ABUpWaitBankerInfo

// int32 id = 1;
inline void ABUpWaitBankerInfo::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABUpWaitBankerInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABUpWaitBankerInfo::id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABUpWaitBankerInfo.id)
  return _internal_id();
}
inline void ABUpWaitBankerInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ABUpWaitBankerInfo::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABUpWaitBankerInfo.id)
}

// int64 op_banker_gold = 2;
inline void ABUpWaitBankerInfo::clear_op_banker_gold() {
  op_banker_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABUpWaitBankerInfo::_internal_op_banker_gold() const {
  return op_banker_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABUpWaitBankerInfo::op_banker_gold() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABUpWaitBankerInfo.op_banker_gold)
  return _internal_op_banker_gold();
}
inline void ABUpWaitBankerInfo::_internal_set_op_banker_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  op_banker_gold_ = value;
}
inline void ABUpWaitBankerInfo::set_op_banker_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_op_banker_gold(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABUpWaitBankerInfo.op_banker_gold)
}

// -------------------------------------------------------------------

// ABBankerInfo

// int32 id = 1;
inline void ABBankerInfo::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABBankerInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABBankerInfo::id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABBankerInfo.id)
  return _internal_id();
}
inline void ABBankerInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ABBankerInfo::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABBankerInfo.id)
}

// int64 op_gold = 2;
inline void ABBankerInfo::clear_op_gold() {
  op_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABBankerInfo::_internal_op_gold() const {
  return op_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABBankerInfo::op_gold() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABBankerInfo.op_gold)
  return _internal_op_gold();
}
inline void ABBankerInfo::_internal_set_op_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  op_gold_ = value;
}
inline void ABBankerInfo::set_op_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_op_gold(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABBankerInfo.op_gold)
}

// int32 round = 3;
inline void ABBankerInfo::clear_round() {
  round_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABBankerInfo::_internal_round() const {
  return round_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ABBankerInfo::round() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABBankerInfo.round)
  return _internal_round();
}
inline void ABBankerInfo::_internal_set_round(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  round_ = value;
}
inline void ABBankerInfo::set_round(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_round(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABBankerInfo.round)
}

// int64 total_win = 4;
inline void ABBankerInfo::clear_total_win() {
  total_win_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABBankerInfo::_internal_total_win() const {
  return total_win_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ABBankerInfo::total_win() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABBankerInfo.total_win)
  return _internal_total_win();
}
inline void ABBankerInfo::_internal_set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_win_ = value;
}
inline void ABBankerInfo::set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_win(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABBankerInfo.total_win)
}

// bool is_down = 5;
inline void ABBankerInfo::clear_is_down() {
  is_down_ = false;
}
inline bool ABBankerInfo::_internal_is_down() const {
  return is_down_;
}
inline bool ABBankerInfo::is_down() const {
  // @@protoc_insertion_point(field_get:AndarBahar.ABBankerInfo.is_down)
  return _internal_is_down();
}
inline void ABBankerInfo::_internal_set_is_down(bool value) {
  
  is_down_ = value;
}
inline void ABBankerInfo::set_is_down(bool value) {
  _internal_set_is_down(value);
  // @@protoc_insertion_point(field_set:AndarBahar.ABBankerInfo.is_down)
}

// -------------------------------------------------------------------

// MsgSceneInfo

// repeated int64 bet = 1;
inline int MsgSceneInfo::_internal_bet_size() const {
  return bet_.size();
}
inline int MsgSceneInfo::bet_size() const {
  return _internal_bet_size();
}
inline void MsgSceneInfo::clear_bet() {
  bet_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::_internal_bet(int index) const {
  return bet_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::bet(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.bet)
  return _internal_bet(index);
}
inline void MsgSceneInfo::set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  bet_.Set(index, value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.bet)
}
inline void MsgSceneInfo::_internal_add_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  bet_.Add(value);
}
inline void MsgSceneInfo::add_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_bet(value);
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.bet)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MsgSceneInfo::_internal_bet() const {
  return bet_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
MsgSceneInfo::bet() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.bet)
  return _internal_bet();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MsgSceneInfo::_internal_mutable_bet() {
  return &bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
MsgSceneInfo::mutable_bet() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.bet)
  return _internal_mutable_bet();
}

// repeated int32 records = 2;
inline int MsgSceneInfo::_internal_records_size() const {
  return records_.size();
}
inline int MsgSceneInfo::records_size() const {
  return _internal_records_size();
}
inline void MsgSceneInfo::clear_records() {
  records_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_records(int index) const {
  return records_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::records(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.records)
  return _internal_records(index);
}
inline void MsgSceneInfo::set_records(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  records_.Set(index, value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.records)
}
inline void MsgSceneInfo::_internal_add_records(::PROTOBUF_NAMESPACE_ID::int32 value) {
  records_.Add(value);
}
inline void MsgSceneInfo::add_records(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_records(value);
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.records)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::_internal_records() const {
  return records_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::records() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.records)
  return _internal_records();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::_internal_mutable_records() {
  return &records_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.records)
  return _internal_mutable_records();
}

// repeated int32 bet_limit = 3;
inline int MsgSceneInfo::_internal_bet_limit_size() const {
  return bet_limit_.size();
}
inline int MsgSceneInfo::bet_limit_size() const {
  return _internal_bet_limit_size();
}
inline void MsgSceneInfo::clear_bet_limit() {
  bet_limit_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_bet_limit(int index) const {
  return bet_limit_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::bet_limit(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.bet_limit)
  return _internal_bet_limit(index);
}
inline void MsgSceneInfo::set_bet_limit(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.bet_limit)
}
inline void MsgSceneInfo::_internal_add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_.Add(value);
}
inline void MsgSceneInfo::add_bet_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bet_limit(value);
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.bet_limit)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::_internal_bet_limit() const {
  return bet_limit_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::bet_limit() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.bet_limit)
  return _internal_bet_limit();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::_internal_mutable_bet_limit() {
  return &bet_limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::mutable_bet_limit() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.bet_limit)
  return _internal_mutable_bet_limit();
}

// repeated .AndarBahar.ABUpWaitBankerInfo up_banker_list = 4;
inline int MsgSceneInfo::_internal_up_banker_list_size() const {
  return up_banker_list_.size();
}
inline int MsgSceneInfo::up_banker_list_size() const {
  return _internal_up_banker_list_size();
}
inline void MsgSceneInfo::clear_up_banker_list() {
  up_banker_list_.Clear();
}
inline ::AndarBahar::ABUpWaitBankerInfo* MsgSceneInfo::mutable_up_banker_list(int index) {
  // @@protoc_insertion_point(field_mutable:AndarBahar.MsgSceneInfo.up_banker_list)
  return up_banker_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABUpWaitBankerInfo >*
MsgSceneInfo::mutable_up_banker_list() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.up_banker_list)
  return &up_banker_list_;
}
inline const ::AndarBahar::ABUpWaitBankerInfo& MsgSceneInfo::_internal_up_banker_list(int index) const {
  return up_banker_list_.Get(index);
}
inline const ::AndarBahar::ABUpWaitBankerInfo& MsgSceneInfo::up_banker_list(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.up_banker_list)
  return _internal_up_banker_list(index);
}
inline ::AndarBahar::ABUpWaitBankerInfo* MsgSceneInfo::_internal_add_up_banker_list() {
  return up_banker_list_.Add();
}
inline ::AndarBahar::ABUpWaitBankerInfo* MsgSceneInfo::add_up_banker_list() {
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.up_banker_list)
  return _internal_add_up_banker_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABUpWaitBankerInfo >&
MsgSceneInfo::up_banker_list() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.up_banker_list)
  return up_banker_list_;
}

// int32 player_limit = 5;
inline void MsgSceneInfo::clear_player_limit() {
  player_limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_player_limit() const {
  return player_limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::player_limit() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.player_limit)
  return _internal_player_limit();
}
inline void MsgSceneInfo::_internal_set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  player_limit_ = value;
}
inline void MsgSceneInfo::set_player_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_limit(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.player_limit)
}

// int32 bet_time = 6;
inline void MsgSceneInfo::clear_bet_time() {
  bet_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_bet_time() const {
  return bet_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::bet_time() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.bet_time)
  return _internal_bet_time();
}
inline void MsgSceneInfo::_internal_set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_time_ = value;
}
inline void MsgSceneInfo::set_bet_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet_time(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.bet_time)
}

// int32 out_time = 7;
inline void MsgSceneInfo::clear_out_time() {
  out_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_out_time() const {
  return out_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::out_time() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.out_time)
  return _internal_out_time();
}
inline void MsgSceneInfo::_internal_set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  out_time_ = value;
}
inline void MsgSceneInfo::set_out_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_out_time(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.out_time)
}

// int32 state = 8;
inline void MsgSceneInfo::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::state() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.state)
  return _internal_state();
}
inline void MsgSceneInfo::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void MsgSceneInfo::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.state)
}

// repeated int32 mul = 9;
inline int MsgSceneInfo::_internal_mul_size() const {
  return mul_.size();
}
inline int MsgSceneInfo::mul_size() const {
  return _internal_mul_size();
}
inline void MsgSceneInfo::clear_mul() {
  mul_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_mul(int index) const {
  return mul_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::mul(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.mul)
  return _internal_mul(index);
}
inline void MsgSceneInfo::set_mul(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  mul_.Set(index, value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.mul)
}
inline void MsgSceneInfo::_internal_add_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  mul_.Add(value);
}
inline void MsgSceneInfo::add_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_mul(value);
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.mul)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::_internal_mul() const {
  return mul_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::mul() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.mul)
  return _internal_mul();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::_internal_mutable_mul() {
  return &mul_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::mutable_mul() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.mul)
  return _internal_mutable_mul();
}

// int32 banker_max = 10;
inline void MsgSceneInfo::clear_banker_max() {
  banker_max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_banker_max() const {
  return banker_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::banker_max() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.banker_max)
  return _internal_banker_max();
}
inline void MsgSceneInfo::_internal_set_banker_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  banker_max_ = value;
}
inline void MsgSceneInfo::set_banker_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_banker_max(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.banker_max)
}

// int64 banker_min_limit = 11;
inline void MsgSceneInfo::clear_banker_min_limit() {
  banker_min_limit_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::_internal_banker_min_limit() const {
  return banker_min_limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::banker_min_limit() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.banker_min_limit)
  return _internal_banker_min_limit();
}
inline void MsgSceneInfo::_internal_set_banker_min_limit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  banker_min_limit_ = value;
}
inline void MsgSceneInfo::set_banker_min_limit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_banker_min_limit(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.banker_min_limit)
}

// .AndarBahar.ABBankerInfo banker_info = 12;
inline bool MsgSceneInfo::_internal_has_banker_info() const {
  return this != internal_default_instance() && banker_info_ != nullptr;
}
inline bool MsgSceneInfo::has_banker_info() const {
  return _internal_has_banker_info();
}
inline void MsgSceneInfo::clear_banker_info() {
  if (GetArena() == nullptr && banker_info_ != nullptr) {
    delete banker_info_;
  }
  banker_info_ = nullptr;
}
inline const ::AndarBahar::ABBankerInfo& MsgSceneInfo::_internal_banker_info() const {
  const ::AndarBahar::ABBankerInfo* p = banker_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::AndarBahar::ABBankerInfo&>(
      ::AndarBahar::_ABBankerInfo_default_instance_);
}
inline const ::AndarBahar::ABBankerInfo& MsgSceneInfo::banker_info() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.banker_info)
  return _internal_banker_info();
}
inline void MsgSceneInfo::unsafe_arena_set_allocated_banker_info(
    ::AndarBahar::ABBankerInfo* banker_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(banker_info_);
  }
  banker_info_ = banker_info;
  if (banker_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AndarBahar.MsgSceneInfo.banker_info)
}
inline ::AndarBahar::ABBankerInfo* MsgSceneInfo::release_banker_info() {
  
  ::AndarBahar::ABBankerInfo* temp = banker_info_;
  banker_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::AndarBahar::ABBankerInfo* MsgSceneInfo::unsafe_arena_release_banker_info() {
  // @@protoc_insertion_point(field_release:AndarBahar.MsgSceneInfo.banker_info)
  
  ::AndarBahar::ABBankerInfo* temp = banker_info_;
  banker_info_ = nullptr;
  return temp;
}
inline ::AndarBahar::ABBankerInfo* MsgSceneInfo::_internal_mutable_banker_info() {
  
  if (banker_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::AndarBahar::ABBankerInfo>(GetArena());
    banker_info_ = p;
  }
  return banker_info_;
}
inline ::AndarBahar::ABBankerInfo* MsgSceneInfo::mutable_banker_info() {
  // @@protoc_insertion_point(field_mutable:AndarBahar.MsgSceneInfo.banker_info)
  return _internal_mutable_banker_info();
}
inline void MsgSceneInfo::set_allocated_banker_info(::AndarBahar::ABBankerInfo* banker_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete banker_info_;
  }
  if (banker_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(banker_info);
    if (message_arena != submessage_arena) {
      banker_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, banker_info, submessage_arena);
    }
    
  } else {
    
  }
  banker_info_ = banker_info;
  // @@protoc_insertion_point(field_set_allocated:AndarBahar.MsgSceneInfo.banker_info)
}

// int32 base_card = 13;
inline void MsgSceneInfo::clear_base_card() {
  base_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_base_card() const {
  return base_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::base_card() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.base_card)
  return _internal_base_card();
}
inline void MsgSceneInfo::_internal_set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  base_card_ = value;
}
inline void MsgSceneInfo::set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_base_card(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.base_card)
}

// int64 red_total_bet = 14;
inline void MsgSceneInfo::clear_red_total_bet() {
  red_total_bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::_internal_red_total_bet() const {
  return red_total_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::red_total_bet() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.red_total_bet)
  return _internal_red_total_bet();
}
inline void MsgSceneInfo::_internal_set_red_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  red_total_bet_ = value;
}
inline void MsgSceneInfo::set_red_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_red_total_bet(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.red_total_bet)
}

// int64 bluo_total_bet = 15;
inline void MsgSceneInfo::clear_bluo_total_bet() {
  bluo_total_bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::_internal_bluo_total_bet() const {
  return bluo_total_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSceneInfo::bluo_total_bet() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.bluo_total_bet)
  return _internal_bluo_total_bet();
}
inline void MsgSceneInfo::_internal_set_bluo_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bluo_total_bet_ = value;
}
inline void MsgSceneInfo::set_bluo_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bluo_total_bet(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.bluo_total_bet)
}

// repeated int32 red_cards = 20;
inline int MsgSceneInfo::_internal_red_cards_size() const {
  return red_cards_.size();
}
inline int MsgSceneInfo::red_cards_size() const {
  return _internal_red_cards_size();
}
inline void MsgSceneInfo::clear_red_cards() {
  red_cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_red_cards(int index) const {
  return red_cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::red_cards(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.red_cards)
  return _internal_red_cards(index);
}
inline void MsgSceneInfo::set_red_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  red_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.red_cards)
}
inline void MsgSceneInfo::_internal_add_red_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  red_cards_.Add(value);
}
inline void MsgSceneInfo::add_red_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_red_cards(value);
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.red_cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::_internal_red_cards() const {
  return red_cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::red_cards() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.red_cards)
  return _internal_red_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::_internal_mutable_red_cards() {
  return &red_cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::mutable_red_cards() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.red_cards)
  return _internal_mutable_red_cards();
}

// repeated int32 blue_cards = 21;
inline int MsgSceneInfo::_internal_blue_cards_size() const {
  return blue_cards_.size();
}
inline int MsgSceneInfo::blue_cards_size() const {
  return _internal_blue_cards_size();
}
inline void MsgSceneInfo::clear_blue_cards() {
  blue_cards_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_blue_cards(int index) const {
  return blue_cards_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::blue_cards(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.blue_cards)
  return _internal_blue_cards(index);
}
inline void MsgSceneInfo::set_blue_cards(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  blue_cards_.Set(index, value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSceneInfo.blue_cards)
}
inline void MsgSceneInfo::_internal_add_blue_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  blue_cards_.Add(value);
}
inline void MsgSceneInfo::add_blue_cards(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_blue_cards(value);
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.blue_cards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::_internal_blue_cards() const {
  return blue_cards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::blue_cards() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.blue_cards)
  return _internal_blue_cards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::_internal_mutable_blue_cards() {
  return &blue_cards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::mutable_blue_cards() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.blue_cards)
  return _internal_mutable_blue_cards();
}

// repeated .AndarBahar.ABPlayerData player_list = 22;
inline int MsgSceneInfo::_internal_player_list_size() const {
  return player_list_.size();
}
inline int MsgSceneInfo::player_list_size() const {
  return _internal_player_list_size();
}
inline void MsgSceneInfo::clear_player_list() {
  player_list_.Clear();
}
inline ::AndarBahar::ABPlayerData* MsgSceneInfo::mutable_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:AndarBahar.MsgSceneInfo.player_list)
  return player_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABPlayerData >*
MsgSceneInfo::mutable_player_list() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgSceneInfo.player_list)
  return &player_list_;
}
inline const ::AndarBahar::ABPlayerData& MsgSceneInfo::_internal_player_list(int index) const {
  return player_list_.Get(index);
}
inline const ::AndarBahar::ABPlayerData& MsgSceneInfo::player_list(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSceneInfo.player_list)
  return _internal_player_list(index);
}
inline ::AndarBahar::ABPlayerData* MsgSceneInfo::_internal_add_player_list() {
  return player_list_.Add();
}
inline ::AndarBahar::ABPlayerData* MsgSceneInfo::add_player_list() {
  // @@protoc_insertion_point(field_add:AndarBahar.MsgSceneInfo.player_list)
  return _internal_add_player_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::ABPlayerData >&
MsgSceneInfo::player_list() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgSceneInfo.player_list)
  return player_list_;
}

// -------------------------------------------------------------------

// MsgStartGameResp

// .AndarBahar.ABBankerInfo banker_info = 1;
inline bool MsgStartGameResp::_internal_has_banker_info() const {
  return this != internal_default_instance() && banker_info_ != nullptr;
}
inline bool MsgStartGameResp::has_banker_info() const {
  return _internal_has_banker_info();
}
inline void MsgStartGameResp::clear_banker_info() {
  if (GetArena() == nullptr && banker_info_ != nullptr) {
    delete banker_info_;
  }
  banker_info_ = nullptr;
}
inline const ::AndarBahar::ABBankerInfo& MsgStartGameResp::_internal_banker_info() const {
  const ::AndarBahar::ABBankerInfo* p = banker_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::AndarBahar::ABBankerInfo&>(
      ::AndarBahar::_ABBankerInfo_default_instance_);
}
inline const ::AndarBahar::ABBankerInfo& MsgStartGameResp::banker_info() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgStartGameResp.banker_info)
  return _internal_banker_info();
}
inline void MsgStartGameResp::unsafe_arena_set_allocated_banker_info(
    ::AndarBahar::ABBankerInfo* banker_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(banker_info_);
  }
  banker_info_ = banker_info;
  if (banker_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AndarBahar.MsgStartGameResp.banker_info)
}
inline ::AndarBahar::ABBankerInfo* MsgStartGameResp::release_banker_info() {
  
  ::AndarBahar::ABBankerInfo* temp = banker_info_;
  banker_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::AndarBahar::ABBankerInfo* MsgStartGameResp::unsafe_arena_release_banker_info() {
  // @@protoc_insertion_point(field_release:AndarBahar.MsgStartGameResp.banker_info)
  
  ::AndarBahar::ABBankerInfo* temp = banker_info_;
  banker_info_ = nullptr;
  return temp;
}
inline ::AndarBahar::ABBankerInfo* MsgStartGameResp::_internal_mutable_banker_info() {
  
  if (banker_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::AndarBahar::ABBankerInfo>(GetArena());
    banker_info_ = p;
  }
  return banker_info_;
}
inline ::AndarBahar::ABBankerInfo* MsgStartGameResp::mutable_banker_info() {
  // @@protoc_insertion_point(field_mutable:AndarBahar.MsgStartGameResp.banker_info)
  return _internal_mutable_banker_info();
}
inline void MsgStartGameResp::set_allocated_banker_info(::AndarBahar::ABBankerInfo* banker_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete banker_info_;
  }
  if (banker_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(banker_info);
    if (message_arena != submessage_arena) {
      banker_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, banker_info, submessage_arena);
    }
    
  } else {
    
  }
  banker_info_ = banker_info;
  // @@protoc_insertion_point(field_set_allocated:AndarBahar.MsgStartGameResp.banker_info)
}

// int32 base_card = 3;
inline void MsgStartGameResp::clear_base_card() {
  base_card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStartGameResp::_internal_base_card() const {
  return base_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgStartGameResp::base_card() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgStartGameResp.base_card)
  return _internal_base_card();
}
inline void MsgStartGameResp::_internal_set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  base_card_ = value;
}
inline void MsgStartGameResp::set_base_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_base_card(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgStartGameResp.base_card)
}

// -------------------------------------------------------------------

// MsgBet

// int64 bet = 1;
inline void MsgBet::clear_bet() {
  bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBet::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBet::bet() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgBet.bet)
  return _internal_bet();
}
inline void MsgBet::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bet_ = value;
}
inline void MsgBet::set_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgBet.bet)
}

// int32 area = 2;
inline void MsgBet::clear_area() {
  area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBet::_internal_area() const {
  return area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBet::area() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgBet.area)
  return _internal_area();
}
inline void MsgBet::_internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_ = value;
}
inline void MsgBet::set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgBet.area)
}

// -------------------------------------------------------------------

// MsgBetResp

// int32 ret_code = 1;
inline void MsgBetResp::clear_ret_code() {
  ret_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::_internal_ret_code() const {
  return ret_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::ret_code() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgBetResp.ret_code)
  return _internal_ret_code();
}
inline void MsgBetResp::_internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_code_ = value;
}
inline void MsgBetResp::set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgBetResp.ret_code)
}

// int32 user_id = 2;
inline void MsgBetResp::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::user_id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgBetResp.user_id)
  return _internal_user_id();
}
inline void MsgBetResp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgBetResp::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgBetResp.user_id)
}

// int32 chair_id = 3;
inline void MsgBetResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::chair_id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgBetResp.chair_id)
  return _internal_chair_id();
}
inline void MsgBetResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void MsgBetResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgBetResp.chair_id)
}

// .AndarBahar.ABBetInfo bet_info = 4;
inline bool MsgBetResp::_internal_has_bet_info() const {
  return this != internal_default_instance() && bet_info_ != nullptr;
}
inline bool MsgBetResp::has_bet_info() const {
  return _internal_has_bet_info();
}
inline void MsgBetResp::clear_bet_info() {
  if (GetArena() == nullptr && bet_info_ != nullptr) {
    delete bet_info_;
  }
  bet_info_ = nullptr;
}
inline const ::AndarBahar::ABBetInfo& MsgBetResp::_internal_bet_info() const {
  const ::AndarBahar::ABBetInfo* p = bet_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::AndarBahar::ABBetInfo&>(
      ::AndarBahar::_ABBetInfo_default_instance_);
}
inline const ::AndarBahar::ABBetInfo& MsgBetResp::bet_info() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgBetResp.bet_info)
  return _internal_bet_info();
}
inline void MsgBetResp::unsafe_arena_set_allocated_bet_info(
    ::AndarBahar::ABBetInfo* bet_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bet_info_);
  }
  bet_info_ = bet_info;
  if (bet_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AndarBahar.MsgBetResp.bet_info)
}
inline ::AndarBahar::ABBetInfo* MsgBetResp::release_bet_info() {
  
  ::AndarBahar::ABBetInfo* temp = bet_info_;
  bet_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::AndarBahar::ABBetInfo* MsgBetResp::unsafe_arena_release_bet_info() {
  // @@protoc_insertion_point(field_release:AndarBahar.MsgBetResp.bet_info)
  
  ::AndarBahar::ABBetInfo* temp = bet_info_;
  bet_info_ = nullptr;
  return temp;
}
inline ::AndarBahar::ABBetInfo* MsgBetResp::_internal_mutable_bet_info() {
  
  if (bet_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::AndarBahar::ABBetInfo>(GetArena());
    bet_info_ = p;
  }
  return bet_info_;
}
inline ::AndarBahar::ABBetInfo* MsgBetResp::mutable_bet_info() {
  // @@protoc_insertion_point(field_mutable:AndarBahar.MsgBetResp.bet_info)
  return _internal_mutable_bet_info();
}
inline void MsgBetResp::set_allocated_bet_info(::AndarBahar::ABBetInfo* bet_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bet_info_;
  }
  if (bet_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bet_info);
    if (message_arena != submessage_arena) {
      bet_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bet_info, submessage_arena);
    }
    
  } else {
    
  }
  bet_info_ = bet_info;
  // @@protoc_insertion_point(field_set_allocated:AndarBahar.MsgBetResp.bet_info)
}

// -------------------------------------------------------------------

// MsgSendCardResp

// int32 card = 1;
inline void MsgSendCardResp::clear_card() {
  card_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendCardResp::_internal_card() const {
  return card_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendCardResp::card() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSendCardResp.card)
  return _internal_card();
}
inline void MsgSendCardResp::_internal_set_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  card_ = value;
}
inline void MsgSendCardResp::set_card(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_card(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSendCardResp.card)
}

// int32 area = 2;
inline void MsgSendCardResp::clear_area() {
  area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendCardResp::_internal_area() const {
  return area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSendCardResp::area() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSendCardResp.area)
  return _internal_area();
}
inline void MsgSendCardResp::_internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_ = value;
}
inline void MsgSendCardResp::set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSendCardResp.area)
}

// bool is_end = 3;
inline void MsgSendCardResp::clear_is_end() {
  is_end_ = false;
}
inline bool MsgSendCardResp::_internal_is_end() const {
  return is_end_;
}
inline bool MsgSendCardResp::is_end() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgSendCardResp.is_end)
  return _internal_is_end();
}
inline void MsgSendCardResp::_internal_set_is_end(bool value) {
  
  is_end_ = value;
}
inline void MsgSendCardResp::set_is_end(bool value) {
  _internal_set_is_end(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgSendCardResp.is_end)
}

// -------------------------------------------------------------------

// MsgOpBanker

// int32 op_type = 1;
inline void MsgOpBanker::clear_op_type() {
  op_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBanker::_internal_op_type() const {
  return op_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBanker::op_type() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgOpBanker.op_type)
  return _internal_op_type();
}
inline void MsgOpBanker::_internal_set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  op_type_ = value;
}
inline void MsgOpBanker::set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_op_type(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgOpBanker.op_type)
}

// int64 up_gold = 2;
inline void MsgOpBanker::clear_up_gold() {
  up_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgOpBanker::_internal_up_gold() const {
  return up_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgOpBanker::up_gold() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgOpBanker.up_gold)
  return _internal_up_gold();
}
inline void MsgOpBanker::_internal_set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  up_gold_ = value;
}
inline void MsgOpBanker::set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_up_gold(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgOpBanker.up_gold)
}

// -------------------------------------------------------------------

// MsgOpBankerResp

// int32 ret_code = 1;
inline void MsgOpBankerResp::clear_ret_code() {
  ret_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::_internal_ret_code() const {
  return ret_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::ret_code() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgOpBankerResp.ret_code)
  return _internal_ret_code();
}
inline void MsgOpBankerResp::_internal_set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_code_ = value;
}
inline void MsgOpBankerResp::set_ret_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_code(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgOpBankerResp.ret_code)
}

// int32 user_id = 2;
inline void MsgOpBankerResp::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::user_id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgOpBankerResp.user_id)
  return _internal_user_id();
}
inline void MsgOpBankerResp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgOpBankerResp::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgOpBankerResp.user_id)
}

// int32 chair_id = 3;
inline void MsgOpBankerResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::chair_id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgOpBankerResp.chair_id)
  return _internal_chair_id();
}
inline void MsgOpBankerResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void MsgOpBankerResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgOpBankerResp.chair_id)
}

// int32 op_type = 4;
inline void MsgOpBankerResp::clear_op_type() {
  op_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::_internal_op_type() const {
  return op_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgOpBankerResp::op_type() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgOpBankerResp.op_type)
  return _internal_op_type();
}
inline void MsgOpBankerResp::_internal_set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  op_type_ = value;
}
inline void MsgOpBankerResp::set_op_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_op_type(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgOpBankerResp.op_type)
}

// int64 up_gold = 5;
inline void MsgOpBankerResp::clear_up_gold() {
  up_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgOpBankerResp::_internal_up_gold() const {
  return up_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgOpBankerResp::up_gold() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgOpBankerResp.up_gold)
  return _internal_up_gold();
}
inline void MsgOpBankerResp::_internal_set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  up_gold_ = value;
}
inline void MsgOpBankerResp::set_up_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_up_gold(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgOpBankerResp.up_gold)
}

// -------------------------------------------------------------------

// MsgWinMsg

// int32 user_id = 1;
inline void MsgWinMsg::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWinMsg::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWinMsg::user_id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgWinMsg.user_id)
  return _internal_user_id();
}
inline void MsgWinMsg::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgWinMsg::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgWinMsg.user_id)
}

// int32 chair_id = 2;
inline void MsgWinMsg::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWinMsg::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgWinMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgWinMsg.chair_id)
  return _internal_chair_id();
}
inline void MsgWinMsg::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void MsgWinMsg::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgWinMsg.chair_id)
}

// int64 win_gold = 3;
inline void MsgWinMsg::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgWinMsg::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgWinMsg::win_gold() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgWinMsg.win_gold)
  return _internal_win_gold();
}
inline void MsgWinMsg::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void MsgWinMsg::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgWinMsg.win_gold)
}

// int64 new_gold = 4;
inline void MsgWinMsg::clear_new_gold() {
  new_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgWinMsg::_internal_new_gold() const {
  return new_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgWinMsg::new_gold() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgWinMsg.new_gold)
  return _internal_new_gold();
}
inline void MsgWinMsg::_internal_set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  new_gold_ = value;
}
inline void MsgWinMsg::set_new_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_new_gold(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgWinMsg.new_gold)
}

// bool is_win = 5;
inline void MsgWinMsg::clear_is_win() {
  is_win_ = false;
}
inline bool MsgWinMsg::_internal_is_win() const {
  return is_win_;
}
inline bool MsgWinMsg::is_win() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgWinMsg.is_win)
  return _internal_is_win();
}
inline void MsgWinMsg::_internal_set_is_win(bool value) {
  
  is_win_ = value;
}
inline void MsgWinMsg::set_is_win(bool value) {
  _internal_set_is_win(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgWinMsg.is_win)
}

// -------------------------------------------------------------------

// MsgResult

// int32 win_index = 1;
inline void MsgResult::clear_win_index() {
  win_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgResult::_internal_win_index() const {
  return win_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgResult::win_index() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgResult.win_index)
  return _internal_win_index();
}
inline void MsgResult::_internal_set_win_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  win_index_ = value;
}
inline void MsgResult::set_win_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_win_index(value);
  // @@protoc_insertion_point(field_set:AndarBahar.MsgResult.win_index)
}

// .AndarBahar.ABBankerInfo banker_info = 2;
inline bool MsgResult::_internal_has_banker_info() const {
  return this != internal_default_instance() && banker_info_ != nullptr;
}
inline bool MsgResult::has_banker_info() const {
  return _internal_has_banker_info();
}
inline void MsgResult::clear_banker_info() {
  if (GetArena() == nullptr && banker_info_ != nullptr) {
    delete banker_info_;
  }
  banker_info_ = nullptr;
}
inline const ::AndarBahar::ABBankerInfo& MsgResult::_internal_banker_info() const {
  const ::AndarBahar::ABBankerInfo* p = banker_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::AndarBahar::ABBankerInfo&>(
      ::AndarBahar::_ABBankerInfo_default_instance_);
}
inline const ::AndarBahar::ABBankerInfo& MsgResult::banker_info() const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgResult.banker_info)
  return _internal_banker_info();
}
inline void MsgResult::unsafe_arena_set_allocated_banker_info(
    ::AndarBahar::ABBankerInfo* banker_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(banker_info_);
  }
  banker_info_ = banker_info;
  if (banker_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AndarBahar.MsgResult.banker_info)
}
inline ::AndarBahar::ABBankerInfo* MsgResult::release_banker_info() {
  
  ::AndarBahar::ABBankerInfo* temp = banker_info_;
  banker_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::AndarBahar::ABBankerInfo* MsgResult::unsafe_arena_release_banker_info() {
  // @@protoc_insertion_point(field_release:AndarBahar.MsgResult.banker_info)
  
  ::AndarBahar::ABBankerInfo* temp = banker_info_;
  banker_info_ = nullptr;
  return temp;
}
inline ::AndarBahar::ABBankerInfo* MsgResult::_internal_mutable_banker_info() {
  
  if (banker_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::AndarBahar::ABBankerInfo>(GetArena());
    banker_info_ = p;
  }
  return banker_info_;
}
inline ::AndarBahar::ABBankerInfo* MsgResult::mutable_banker_info() {
  // @@protoc_insertion_point(field_mutable:AndarBahar.MsgResult.banker_info)
  return _internal_mutable_banker_info();
}
inline void MsgResult::set_allocated_banker_info(::AndarBahar::ABBankerInfo* banker_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete banker_info_;
  }
  if (banker_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(banker_info);
    if (message_arena != submessage_arena) {
      banker_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, banker_info, submessage_arena);
    }
    
  } else {
    
  }
  banker_info_ = banker_info;
  // @@protoc_insertion_point(field_set_allocated:AndarBahar.MsgResult.banker_info)
}

// repeated .AndarBahar.MsgWinMsg win_msg = 3;
inline int MsgResult::_internal_win_msg_size() const {
  return win_msg_.size();
}
inline int MsgResult::win_msg_size() const {
  return _internal_win_msg_size();
}
inline void MsgResult::clear_win_msg() {
  win_msg_.Clear();
}
inline ::AndarBahar::MsgWinMsg* MsgResult::mutable_win_msg(int index) {
  // @@protoc_insertion_point(field_mutable:AndarBahar.MsgResult.win_msg)
  return win_msg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::MsgWinMsg >*
MsgResult::mutable_win_msg() {
  // @@protoc_insertion_point(field_mutable_list:AndarBahar.MsgResult.win_msg)
  return &win_msg_;
}
inline const ::AndarBahar::MsgWinMsg& MsgResult::_internal_win_msg(int index) const {
  return win_msg_.Get(index);
}
inline const ::AndarBahar::MsgWinMsg& MsgResult::win_msg(int index) const {
  // @@protoc_insertion_point(field_get:AndarBahar.MsgResult.win_msg)
  return _internal_win_msg(index);
}
inline ::AndarBahar::MsgWinMsg* MsgResult::_internal_add_win_msg() {
  return win_msg_.Add();
}
inline ::AndarBahar::MsgWinMsg* MsgResult::add_win_msg() {
  // @@protoc_insertion_point(field_add:AndarBahar.MsgResult.win_msg)
  return _internal_add_win_msg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AndarBahar::MsgWinMsg >&
MsgResult::win_msg() const {
  // @@protoc_insertion_point(field_list:AndarBahar.MsgResult.win_msg)
  return win_msg_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AndarBahar

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::AndarBahar::EGameState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AndarBahar::EGameState>() {
  return ::AndarBahar::EGameState_descriptor();
}
template <> struct is_proto_enum< ::AndarBahar::EMsgIDSubGame> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AndarBahar::EMsgIDSubGame>() {
  return ::AndarBahar::EMsgIDSubGame_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_AndarBahar_2eproto
