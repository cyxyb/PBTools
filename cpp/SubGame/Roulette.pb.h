// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Roulette.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Roulette_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Roulette_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Roulette_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Roulette_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Roulette_2eproto;
namespace Roulette {
class AgainBet;
class AgainBetDefaultTypeInternal;
extern AgainBetDefaultTypeInternal _AgainBet_default_instance_;
class BettonArea;
class BettonAreaDefaultTypeInternal;
extern BettonAreaDefaultTypeInternal _BettonArea_default_instance_;
class GmaeALLRecord;
class GmaeALLRecordDefaultTypeInternal;
extern GmaeALLRecordDefaultTypeInternal _GmaeALLRecord_default_instance_;
class GmaeConfg;
class GmaeConfgDefaultTypeInternal;
extern GmaeConfgDefaultTypeInternal _GmaeConfg_default_instance_;
class MsgAgainBetResp;
class MsgAgainBetRespDefaultTypeInternal;
extern MsgAgainBetRespDefaultTypeInternal _MsgAgainBetResp_default_instance_;
class MsgBet;
class MsgBetDefaultTypeInternal;
extern MsgBetDefaultTypeInternal _MsgBet_default_instance_;
class MsgBetResp;
class MsgBetRespDefaultTypeInternal;
extern MsgBetRespDefaultTypeInternal _MsgBetResp_default_instance_;
class MsgGmaeResult;
class MsgGmaeResultDefaultTypeInternal;
extern MsgGmaeResultDefaultTypeInternal _MsgGmaeResult_default_instance_;
class MsgSceneInfo;
class MsgSceneInfoDefaultTypeInternal;
extern MsgSceneInfoDefaultTypeInternal _MsgSceneInfo_default_instance_;
class RevocationBet;
class RevocationBetDefaultTypeInternal;
extern RevocationBetDefaultTypeInternal _RevocationBet_default_instance_;
class SingleAgainBet;
class SingleAgainBetDefaultTypeInternal;
extern SingleAgainBetDefaultTypeInternal _SingleAgainBet_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class WinMsg;
class WinMsgDefaultTypeInternal;
extern WinMsgDefaultTypeInternal _WinMsg_default_instance_;
}  // namespace Roulette
PROTOBUF_NAMESPACE_OPEN
template<> ::Roulette::AgainBet* Arena::CreateMaybeMessage<::Roulette::AgainBet>(Arena*);
template<> ::Roulette::BettonArea* Arena::CreateMaybeMessage<::Roulette::BettonArea>(Arena*);
template<> ::Roulette::GmaeALLRecord* Arena::CreateMaybeMessage<::Roulette::GmaeALLRecord>(Arena*);
template<> ::Roulette::GmaeConfg* Arena::CreateMaybeMessage<::Roulette::GmaeConfg>(Arena*);
template<> ::Roulette::MsgAgainBetResp* Arena::CreateMaybeMessage<::Roulette::MsgAgainBetResp>(Arena*);
template<> ::Roulette::MsgBet* Arena::CreateMaybeMessage<::Roulette::MsgBet>(Arena*);
template<> ::Roulette::MsgBetResp* Arena::CreateMaybeMessage<::Roulette::MsgBetResp>(Arena*);
template<> ::Roulette::MsgGmaeResult* Arena::CreateMaybeMessage<::Roulette::MsgGmaeResult>(Arena*);
template<> ::Roulette::MsgSceneInfo* Arena::CreateMaybeMessage<::Roulette::MsgSceneInfo>(Arena*);
template<> ::Roulette::RevocationBet* Arena::CreateMaybeMessage<::Roulette::RevocationBet>(Arena*);
template<> ::Roulette::SingleAgainBet* Arena::CreateMaybeMessage<::Roulette::SingleAgainBet>(Arena*);
template<> ::Roulette::UserInfo* Arena::CreateMaybeMessage<::Roulette::UserInfo>(Arena*);
template<> ::Roulette::WinMsg* Arena::CreateMaybeMessage<::Roulette::WinMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Roulette {

enum EMsgIDRoulette : int {
  MsgID_SC_GameRecord = 0,
  MsgID_SC_GameBottom = 1,
  MsgID_SC_BottomCancel = 2,
  MsgID_SC_GameResult = 3,
  MsgID_CS_GameBottom = 4,
  MsgID_CS_BottomCancel = 5,
  EMsgIDRoulette_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EMsgIDRoulette_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EMsgIDRoulette_IsValid(int value);
constexpr EMsgIDRoulette EMsgIDRoulette_MIN = MsgID_SC_GameRecord;
constexpr EMsgIDRoulette EMsgIDRoulette_MAX = MsgID_CS_BottomCancel;
constexpr int EMsgIDRoulette_ARRAYSIZE = EMsgIDRoulette_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDRoulette_descriptor();
template<typename T>
inline const std::string& EMsgIDRoulette_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMsgIDRoulette>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMsgIDRoulette_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMsgIDRoulette_descriptor(), enum_t_value);
}
inline bool EMsgIDRoulette_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMsgIDRoulette* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMsgIDRoulette>(
    EMsgIDRoulette_descriptor(), name, value);
}
// ===================================================================

class GmaeALLRecord PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.GmaeALLRecord) */ {
 public:
  inline GmaeALLRecord() : GmaeALLRecord(nullptr) {}
  virtual ~GmaeALLRecord();

  GmaeALLRecord(const GmaeALLRecord& from);
  GmaeALLRecord(GmaeALLRecord&& from) noexcept
    : GmaeALLRecord() {
    *this = ::std::move(from);
  }

  inline GmaeALLRecord& operator=(const GmaeALLRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline GmaeALLRecord& operator=(GmaeALLRecord&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GmaeALLRecord& default_instance();

  static inline const GmaeALLRecord* internal_default_instance() {
    return reinterpret_cast<const GmaeALLRecord*>(
               &_GmaeALLRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GmaeALLRecord& a, GmaeALLRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(GmaeALLRecord* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GmaeALLRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GmaeALLRecord* New() const final {
    return CreateMaybeMessage<GmaeALLRecord>(nullptr);
  }

  GmaeALLRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GmaeALLRecord>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GmaeALLRecord& from);
  void MergeFrom(const GmaeALLRecord& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GmaeALLRecord* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.GmaeALLRecord";
  }
  protected:
  explicit GmaeALLRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlackNumFieldNumber = 1,
    kRedNumFieldNumber = 2,
    kEvenNumFieldNumber = 3,
    kOddNumFieldNumber = 4,
    kBigNumFieldNumber = 5,
    kSmallNumFieldNumber = 6,
    kZeroNumFieldNumber = 7,
  };
  // int32 black_num = 1;
  void clear_black_num();
  ::PROTOBUF_NAMESPACE_ID::int32 black_num() const;
  void set_black_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_black_num() const;
  void _internal_set_black_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 red_num = 2;
  void clear_red_num();
  ::PROTOBUF_NAMESPACE_ID::int32 red_num() const;
  void set_red_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_red_num() const;
  void _internal_set_red_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 even_num = 3;
  void clear_even_num();
  ::PROTOBUF_NAMESPACE_ID::int32 even_num() const;
  void set_even_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_even_num() const;
  void _internal_set_even_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 odd_num = 4;
  void clear_odd_num();
  ::PROTOBUF_NAMESPACE_ID::int32 odd_num() const;
  void set_odd_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_odd_num() const;
  void _internal_set_odd_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 big_num = 5;
  void clear_big_num();
  ::PROTOBUF_NAMESPACE_ID::int32 big_num() const;
  void set_big_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_big_num() const;
  void _internal_set_big_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 small_num = 6;
  void clear_small_num();
  ::PROTOBUF_NAMESPACE_ID::int32 small_num() const;
  void set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_small_num() const;
  void _internal_set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 zero_num = 7;
  void clear_zero_num();
  ::PROTOBUF_NAMESPACE_ID::int32 zero_num() const;
  void set_zero_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_zero_num() const;
  void _internal_set_zero_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.GmaeALLRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 black_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 red_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 even_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 odd_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 big_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 small_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 zero_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class BettonArea PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.BettonArea) */ {
 public:
  inline BettonArea() : BettonArea(nullptr) {}
  virtual ~BettonArea();

  BettonArea(const BettonArea& from);
  BettonArea(BettonArea&& from) noexcept
    : BettonArea() {
    *this = ::std::move(from);
  }

  inline BettonArea& operator=(const BettonArea& from) {
    CopyFrom(from);
    return *this;
  }
  inline BettonArea& operator=(BettonArea&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BettonArea& default_instance();

  static inline const BettonArea* internal_default_instance() {
    return reinterpret_cast<const BettonArea*>(
               &_BettonArea_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BettonArea& a, BettonArea& b) {
    a.Swap(&b);
  }
  inline void Swap(BettonArea* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BettonArea* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BettonArea* New() const final {
    return CreateMaybeMessage<BettonArea>(nullptr);
  }

  BettonArea* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BettonArea>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BettonArea& from);
  void MergeFrom(const BettonArea& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BettonArea* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.BettonArea";
  }
  protected:
  explicit BettonArea(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAreaCfgFieldNumber = 1,
  };
  // repeated int32 area_cfg = 1;
  int area_cfg_size() const;
  private:
  int _internal_area_cfg_size() const;
  public:
  void clear_area_cfg();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area_cfg(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_area_cfg() const;
  void _internal_add_area_cfg(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_area_cfg();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 area_cfg(int index) const;
  void set_area_cfg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_area_cfg(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      area_cfg() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_area_cfg();

  // @@protoc_insertion_point(class_scope:Roulette.BettonArea)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > area_cfg_;
  mutable std::atomic<int> _area_cfg_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class UserInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.UserInfo) */ {
 public:
  inline UserInfo() : UserInfo(nullptr) {}
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);
  UserInfo(UserInfo&& from) noexcept
    : UserInfo() {
    *this = ::std::move(from);
  }

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UserInfo& a, UserInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(UserInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserInfo* New() const final {
    return CreateMaybeMessage<UserInfo>(nullptr);
  }

  UserInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.UserInfo";
  }
  protected:
  explicit UserInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalBetFieldNumber = 1,
    kTotalWinFieldNumber = 2,
  };
  // int64 total_bet = 1;
  void clear_total_bet();
  ::PROTOBUF_NAMESPACE_ID::int64 total_bet() const;
  void set_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_bet() const;
  void _internal_set_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 total_win = 2;
  void clear_total_win();
  ::PROTOBUF_NAMESPACE_ID::int64 total_win() const;
  void set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_win() const;
  void _internal_set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.UserInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_bet_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_win_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class GmaeConfg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.GmaeConfg) */ {
 public:
  inline GmaeConfg() : GmaeConfg(nullptr) {}
  virtual ~GmaeConfg();

  GmaeConfg(const GmaeConfg& from);
  GmaeConfg(GmaeConfg&& from) noexcept
    : GmaeConfg() {
    *this = ::std::move(from);
  }

  inline GmaeConfg& operator=(const GmaeConfg& from) {
    CopyFrom(from);
    return *this;
  }
  inline GmaeConfg& operator=(GmaeConfg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GmaeConfg& default_instance();

  static inline const GmaeConfg* internal_default_instance() {
    return reinterpret_cast<const GmaeConfg*>(
               &_GmaeConfg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GmaeConfg& a, GmaeConfg& b) {
    a.Swap(&b);
  }
  inline void Swap(GmaeConfg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GmaeConfg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GmaeConfg* New() const final {
    return CreateMaybeMessage<GmaeConfg>(nullptr);
  }

  GmaeConfg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GmaeConfg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GmaeConfg& from);
  void MergeFrom(const GmaeConfg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GmaeConfg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.GmaeConfg";
  }
  protected:
  explicit GmaeConfg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 1,
    kBetLimitMinFieldNumber = 2,
    kBetLimitMaxFieldNumber = 3,
    kBetAreaCfgFieldNumber = 4,
    kMultipleCfgFieldNumber = 5,
  };
  // repeated int32 bet = 1;
  int bet_size() const;
  private:
  int _internal_bet_size() const;
  public:
  void clear_bet();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bet() const;
  void _internal_add_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bet();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bet(int index) const;
  void set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bet() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bet();

  // repeated int32 bet_limit_min = 2;
  int bet_limit_min_size() const;
  private:
  int _internal_bet_limit_min_size() const;
  public:
  void clear_bet_limit_min();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_limit_min(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bet_limit_min() const;
  void _internal_add_bet_limit_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bet_limit_min();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bet_limit_min(int index) const;
  void set_bet_limit_min(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bet_limit_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bet_limit_min() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bet_limit_min();

  // repeated int32 bet_limit_max = 3;
  int bet_limit_max_size() const;
  private:
  int _internal_bet_limit_max_size() const;
  public:
  void clear_bet_limit_max();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_limit_max(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bet_limit_max() const;
  void _internal_add_bet_limit_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bet_limit_max();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bet_limit_max(int index) const;
  void set_bet_limit_max(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bet_limit_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bet_limit_max() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bet_limit_max();

  // repeated .Roulette.BettonArea bet_area_cfg = 4;
  int bet_area_cfg_size() const;
  private:
  int _internal_bet_area_cfg_size() const;
  public:
  void clear_bet_area_cfg();
  ::Roulette::BettonArea* mutable_bet_area_cfg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::BettonArea >*
      mutable_bet_area_cfg();
  private:
  const ::Roulette::BettonArea& _internal_bet_area_cfg(int index) const;
  ::Roulette::BettonArea* _internal_add_bet_area_cfg();
  public:
  const ::Roulette::BettonArea& bet_area_cfg(int index) const;
  ::Roulette::BettonArea* add_bet_area_cfg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::BettonArea >&
      bet_area_cfg() const;

  // repeated int32 multiple_cfg = 5;
  int multiple_cfg_size() const;
  private:
  int _internal_multiple_cfg_size() const;
  public:
  void clear_multiple_cfg();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_multiple_cfg(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_multiple_cfg() const;
  void _internal_add_multiple_cfg(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_multiple_cfg();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 multiple_cfg(int index) const;
  void set_multiple_cfg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_multiple_cfg(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      multiple_cfg() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_multiple_cfg();

  // @@protoc_insertion_point(class_scope:Roulette.GmaeConfg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bet_;
  mutable std::atomic<int> _bet_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bet_limit_min_;
  mutable std::atomic<int> _bet_limit_min_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bet_limit_max_;
  mutable std::atomic<int> _bet_limit_max_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::BettonArea > bet_area_cfg_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > multiple_cfg_;
  mutable std::atomic<int> _multiple_cfg_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class MsgSceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.MsgSceneInfo) */ {
 public:
  inline MsgSceneInfo() : MsgSceneInfo(nullptr) {}
  virtual ~MsgSceneInfo();

  MsgSceneInfo(const MsgSceneInfo& from);
  MsgSceneInfo(MsgSceneInfo&& from) noexcept
    : MsgSceneInfo() {
    *this = ::std::move(from);
  }

  inline MsgSceneInfo& operator=(const MsgSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSceneInfo& operator=(MsgSceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgSceneInfo& default_instance();

  static inline const MsgSceneInfo* internal_default_instance() {
    return reinterpret_cast<const MsgSceneInfo*>(
               &_MsgSceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgSceneInfo& a, MsgSceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgSceneInfo* New() const final {
    return CreateMaybeMessage<MsgSceneInfo>(nullptr);
  }

  MsgSceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgSceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgSceneInfo& from);
  void MergeFrom(const MsgSceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.MsgSceneInfo";
  }
  protected:
  explicit MsgSceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameRecordFieldNumber = 2,
    kAllRecordFieldNumber = 3,
    kGameBetFieldNumber = 6,
    kUserTopFieldNumber = 7,
    kGameFogFieldNumber = 1,
    kGameStateFieldNumber = 4,
    kTimesFieldNumber = 5,
  };
  // repeated int32 game_record = 2;
  int game_record_size() const;
  private:
  int _internal_game_record_size() const;
  public:
  void clear_game_record();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_record(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_game_record() const;
  void _internal_add_game_record(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_game_record();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 game_record(int index) const;
  void set_game_record(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_game_record(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      game_record() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_game_record();

  // repeated .Roulette.GmaeALLRecord all_record = 3;
  int all_record_size() const;
  private:
  int _internal_all_record_size() const;
  public:
  void clear_all_record();
  ::Roulette::GmaeALLRecord* mutable_all_record(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::GmaeALLRecord >*
      mutable_all_record();
  private:
  const ::Roulette::GmaeALLRecord& _internal_all_record(int index) const;
  ::Roulette::GmaeALLRecord* _internal_add_all_record();
  public:
  const ::Roulette::GmaeALLRecord& all_record(int index) const;
  ::Roulette::GmaeALLRecord* add_all_record();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::GmaeALLRecord >&
      all_record() const;

  // repeated int32 game_bet = 6;
  int game_bet_size() const;
  private:
  int _internal_game_bet_size() const;
  public:
  void clear_game_bet();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_bet(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_game_bet() const;
  void _internal_add_game_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_game_bet();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 game_bet(int index) const;
  void set_game_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_game_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      game_bet() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_game_bet();

  // repeated .Roulette.UserInfo user_top = 7;
  int user_top_size() const;
  private:
  int _internal_user_top_size() const;
  public:
  void clear_user_top();
  ::Roulette::UserInfo* mutable_user_top(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::UserInfo >*
      mutable_user_top();
  private:
  const ::Roulette::UserInfo& _internal_user_top(int index) const;
  ::Roulette::UserInfo* _internal_add_user_top();
  public:
  const ::Roulette::UserInfo& user_top(int index) const;
  ::Roulette::UserInfo* add_user_top();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::UserInfo >&
      user_top() const;

  // .Roulette.GmaeConfg game_fog = 1;
  bool has_game_fog() const;
  private:
  bool _internal_has_game_fog() const;
  public:
  void clear_game_fog();
  const ::Roulette::GmaeConfg& game_fog() const;
  ::Roulette::GmaeConfg* release_game_fog();
  ::Roulette::GmaeConfg* mutable_game_fog();
  void set_allocated_game_fog(::Roulette::GmaeConfg* game_fog);
  private:
  const ::Roulette::GmaeConfg& _internal_game_fog() const;
  ::Roulette::GmaeConfg* _internal_mutable_game_fog();
  public:
  void unsafe_arena_set_allocated_game_fog(
      ::Roulette::GmaeConfg* game_fog);
  ::Roulette::GmaeConfg* unsafe_arena_release_game_fog();

  // int32 game_state = 4;
  void clear_game_state();
  ::PROTOBUF_NAMESPACE_ID::int32 game_state() const;
  void set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_game_state() const;
  void _internal_set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 times = 5;
  void clear_times();
  ::PROTOBUF_NAMESPACE_ID::int32 times() const;
  void set_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_times() const;
  void _internal_set_times(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.MsgSceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > game_record_;
  mutable std::atomic<int> _game_record_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::GmaeALLRecord > all_record_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > game_bet_;
  mutable std::atomic<int> _game_bet_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::UserInfo > user_top_;
  ::Roulette::GmaeConfg* game_fog_;
  ::PROTOBUF_NAMESPACE_ID::int32 game_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 times_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class MsgBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.MsgBet) */ {
 public:
  inline MsgBet() : MsgBet(nullptr) {}
  virtual ~MsgBet();

  MsgBet(const MsgBet& from);
  MsgBet(MsgBet&& from) noexcept
    : MsgBet() {
    *this = ::std::move(from);
  }

  inline MsgBet& operator=(const MsgBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBet& operator=(MsgBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBet& default_instance();

  static inline const MsgBet* internal_default_instance() {
    return reinterpret_cast<const MsgBet*>(
               &_MsgBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgBet& a, MsgBet& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBet* New() const final {
    return CreateMaybeMessage<MsgBet>(nullptr);
  }

  MsgBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBet& from);
  void MergeFrom(const MsgBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.MsgBet";
  }
  protected:
  explicit MsgBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kAreaFieldNumber = 2,
  };
  // int32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 area = 2;
  void clear_area();
  ::PROTOBUF_NAMESPACE_ID::int32 area() const;
  void set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area() const;
  void _internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.MsgBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class MsgBetResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.MsgBetResp) */ {
 public:
  inline MsgBetResp() : MsgBetResp(nullptr) {}
  virtual ~MsgBetResp();

  MsgBetResp(const MsgBetResp& from);
  MsgBetResp(MsgBetResp&& from) noexcept
    : MsgBetResp() {
    *this = ::std::move(from);
  }

  inline MsgBetResp& operator=(const MsgBetResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBetResp& operator=(MsgBetResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBetResp& default_instance();

  static inline const MsgBetResp* internal_default_instance() {
    return reinterpret_cast<const MsgBetResp*>(
               &_MsgBetResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgBetResp& a, MsgBetResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBetResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBetResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBetResp* New() const final {
    return CreateMaybeMessage<MsgBetResp>(nullptr);
  }

  MsgBetResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBetResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBetResp& from);
  void MergeFrom(const MsgBetResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBetResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.MsgBetResp";
  }
  protected:
  explicit MsgBetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetInfoFieldNumber = 2,
    kChairIdFieldNumber = 1,
  };
  // .Roulette.MsgBet bet_info = 2;
  bool has_bet_info() const;
  private:
  bool _internal_has_bet_info() const;
  public:
  void clear_bet_info();
  const ::Roulette::MsgBet& bet_info() const;
  ::Roulette::MsgBet* release_bet_info();
  ::Roulette::MsgBet* mutable_bet_info();
  void set_allocated_bet_info(::Roulette::MsgBet* bet_info);
  private:
  const ::Roulette::MsgBet& _internal_bet_info() const;
  ::Roulette::MsgBet* _internal_mutable_bet_info();
  public:
  void unsafe_arena_set_allocated_bet_info(
      ::Roulette::MsgBet* bet_info);
  ::Roulette::MsgBet* unsafe_arena_release_bet_info();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.MsgBetResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Roulette::MsgBet* bet_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class SingleAgainBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.SingleAgainBet) */ {
 public:
  inline SingleAgainBet() : SingleAgainBet(nullptr) {}
  virtual ~SingleAgainBet();

  SingleAgainBet(const SingleAgainBet& from);
  SingleAgainBet(SingleAgainBet&& from) noexcept
    : SingleAgainBet() {
    *this = ::std::move(from);
  }

  inline SingleAgainBet& operator=(const SingleAgainBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline SingleAgainBet& operator=(SingleAgainBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SingleAgainBet& default_instance();

  static inline const SingleAgainBet* internal_default_instance() {
    return reinterpret_cast<const SingleAgainBet*>(
               &_SingleAgainBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SingleAgainBet& a, SingleAgainBet& b) {
    a.Swap(&b);
  }
  inline void Swap(SingleAgainBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SingleAgainBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SingleAgainBet* New() const final {
    return CreateMaybeMessage<SingleAgainBet>(nullptr);
  }

  SingleAgainBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SingleAgainBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SingleAgainBet& from);
  void MergeFrom(const SingleAgainBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SingleAgainBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.SingleAgainBet";
  }
  protected:
  explicit SingleAgainBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kAreaFieldNumber = 2,
    kCountFieldNumber = 3,
  };
  // int32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 area = 2;
  void clear_area();
  ::PROTOBUF_NAMESPACE_ID::int32 area() const;
  void set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area() const;
  void _internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 count = 3;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.SingleAgainBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class AgainBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.AgainBet) */ {
 public:
  inline AgainBet() : AgainBet(nullptr) {}
  virtual ~AgainBet();

  AgainBet(const AgainBet& from);
  AgainBet(AgainBet&& from) noexcept
    : AgainBet() {
    *this = ::std::move(from);
  }

  inline AgainBet& operator=(const AgainBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgainBet& operator=(AgainBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgainBet& default_instance();

  static inline const AgainBet* internal_default_instance() {
    return reinterpret_cast<const AgainBet*>(
               &_AgainBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(AgainBet& a, AgainBet& b) {
    a.Swap(&b);
  }
  inline void Swap(AgainBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgainBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgainBet* New() const final {
    return CreateMaybeMessage<AgainBet>(nullptr);
  }

  AgainBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgainBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgainBet& from);
  void MergeFrom(const AgainBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgainBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.AgainBet";
  }
  protected:
  explicit AgainBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgainBetInfoFieldNumber = 1,
  };
  // repeated .Roulette.SingleAgainBet again_bet_info = 1;
  int again_bet_info_size() const;
  private:
  int _internal_again_bet_info_size() const;
  public:
  void clear_again_bet_info();
  ::Roulette::SingleAgainBet* mutable_again_bet_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::SingleAgainBet >*
      mutable_again_bet_info();
  private:
  const ::Roulette::SingleAgainBet& _internal_again_bet_info(int index) const;
  ::Roulette::SingleAgainBet* _internal_add_again_bet_info();
  public:
  const ::Roulette::SingleAgainBet& again_bet_info(int index) const;
  ::Roulette::SingleAgainBet* add_again_bet_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::SingleAgainBet >&
      again_bet_info() const;

  // @@protoc_insertion_point(class_scope:Roulette.AgainBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::SingleAgainBet > again_bet_info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class MsgAgainBetResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.MsgAgainBetResp) */ {
 public:
  inline MsgAgainBetResp() : MsgAgainBetResp(nullptr) {}
  virtual ~MsgAgainBetResp();

  MsgAgainBetResp(const MsgAgainBetResp& from);
  MsgAgainBetResp(MsgAgainBetResp&& from) noexcept
    : MsgAgainBetResp() {
    *this = ::std::move(from);
  }

  inline MsgAgainBetResp& operator=(const MsgAgainBetResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAgainBetResp& operator=(MsgAgainBetResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgAgainBetResp& default_instance();

  static inline const MsgAgainBetResp* internal_default_instance() {
    return reinterpret_cast<const MsgAgainBetResp*>(
               &_MsgAgainBetResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgAgainBetResp& a, MsgAgainBetResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgAgainBetResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAgainBetResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgAgainBetResp* New() const final {
    return CreateMaybeMessage<MsgAgainBetResp>(nullptr);
  }

  MsgAgainBetResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgAgainBetResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgAgainBetResp& from);
  void MergeFrom(const MsgAgainBetResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAgainBetResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.MsgAgainBetResp";
  }
  protected:
  explicit MsgAgainBetResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgainBetInfoFieldNumber = 2,
    kChairIdFieldNumber = 1,
  };
  // .Roulette.AgainBet again_bet_info = 2;
  bool has_again_bet_info() const;
  private:
  bool _internal_has_again_bet_info() const;
  public:
  void clear_again_bet_info();
  const ::Roulette::AgainBet& again_bet_info() const;
  ::Roulette::AgainBet* release_again_bet_info();
  ::Roulette::AgainBet* mutable_again_bet_info();
  void set_allocated_again_bet_info(::Roulette::AgainBet* again_bet_info);
  private:
  const ::Roulette::AgainBet& _internal_again_bet_info() const;
  ::Roulette::AgainBet* _internal_mutable_again_bet_info();
  public:
  void unsafe_arena_set_allocated_again_bet_info(
      ::Roulette::AgainBet* again_bet_info);
  ::Roulette::AgainBet* unsafe_arena_release_again_bet_info();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.MsgAgainBetResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Roulette::AgainBet* again_bet_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class RevocationBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.RevocationBet) */ {
 public:
  inline RevocationBet() : RevocationBet(nullptr) {}
  virtual ~RevocationBet();

  RevocationBet(const RevocationBet& from);
  RevocationBet(RevocationBet&& from) noexcept
    : RevocationBet() {
    *this = ::std::move(from);
  }

  inline RevocationBet& operator=(const RevocationBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevocationBet& operator=(RevocationBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RevocationBet& default_instance();

  static inline const RevocationBet* internal_default_instance() {
    return reinterpret_cast<const RevocationBet*>(
               &_RevocationBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(RevocationBet& a, RevocationBet& b) {
    a.Swap(&b);
  }
  inline void Swap(RevocationBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RevocationBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RevocationBet* New() const final {
    return CreateMaybeMessage<RevocationBet>(nullptr);
  }

  RevocationBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RevocationBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RevocationBet& from);
  void MergeFrom(const RevocationBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RevocationBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.RevocationBet";
  }
  protected:
  explicit RevocationBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRevocationStateFieldNumber = 1,
    kBetIndexFieldNumber = 2,
  };
  // int32 revocation_state = 1;
  void clear_revocation_state();
  ::PROTOBUF_NAMESPACE_ID::int32 revocation_state() const;
  void set_revocation_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_revocation_state() const;
  void _internal_set_revocation_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet_index = 2;
  void clear_bet_index();
  ::PROTOBUF_NAMESPACE_ID::int32 bet_index() const;
  void set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_index() const;
  void _internal_set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.RevocationBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 revocation_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class WinMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.WinMsg) */ {
 public:
  inline WinMsg() : WinMsg(nullptr) {}
  virtual ~WinMsg();

  WinMsg(const WinMsg& from);
  WinMsg(WinMsg&& from) noexcept
    : WinMsg() {
    *this = ::std::move(from);
  }

  inline WinMsg& operator=(const WinMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline WinMsg& operator=(WinMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WinMsg& default_instance();

  static inline const WinMsg* internal_default_instance() {
    return reinterpret_cast<const WinMsg*>(
               &_WinMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(WinMsg& a, WinMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(WinMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WinMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WinMsg* New() const final {
    return CreateMaybeMessage<WinMsg>(nullptr);
  }

  WinMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WinMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WinMsg& from);
  void MergeFrom(const WinMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WinMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.WinMsg";
  }
  protected:
  explicit WinMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldFieldNumber = 2,
    kChairIdFieldNumber = 1,
  };
  // int64 gold = 2;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.WinMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// -------------------------------------------------------------------

class MsgGmaeResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Roulette.MsgGmaeResult) */ {
 public:
  inline MsgGmaeResult() : MsgGmaeResult(nullptr) {}
  virtual ~MsgGmaeResult();

  MsgGmaeResult(const MsgGmaeResult& from);
  MsgGmaeResult(MsgGmaeResult&& from) noexcept
    : MsgGmaeResult() {
    *this = ::std::move(from);
  }

  inline MsgGmaeResult& operator=(const MsgGmaeResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGmaeResult& operator=(MsgGmaeResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgGmaeResult& default_instance();

  static inline const MsgGmaeResult* internal_default_instance() {
    return reinterpret_cast<const MsgGmaeResult*>(
               &_MsgGmaeResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MsgGmaeResult& a, MsgGmaeResult& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGmaeResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGmaeResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgGmaeResult* New() const final {
    return CreateMaybeMessage<MsgGmaeResult>(nullptr);
  }

  MsgGmaeResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgGmaeResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgGmaeResult& from);
  void MergeFrom(const MsgGmaeResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGmaeResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Roulette.MsgGmaeResult";
  }
  protected:
  explicit MsgGmaeResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Roulette_2eproto);
    return ::descriptor_table_Roulette_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWinMsgFieldNumber = 2,
    kResultNumFieldNumber = 1,
  };
  // repeated .Roulette.WinMsg win_msg = 2;
  int win_msg_size() const;
  private:
  int _internal_win_msg_size() const;
  public:
  void clear_win_msg();
  ::Roulette::WinMsg* mutable_win_msg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::WinMsg >*
      mutable_win_msg();
  private:
  const ::Roulette::WinMsg& _internal_win_msg(int index) const;
  ::Roulette::WinMsg* _internal_add_win_msg();
  public:
  const ::Roulette::WinMsg& win_msg(int index) const;
  ::Roulette::WinMsg* add_win_msg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::WinMsg >&
      win_msg() const;

  // int32 result_num = 1;
  void clear_result_num();
  ::PROTOBUF_NAMESPACE_ID::int32 result_num() const;
  void set_result_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_result_num() const;
  void _internal_set_result_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Roulette.MsgGmaeResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::WinMsg > win_msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 result_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Roulette_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GmaeALLRecord

// int32 black_num = 1;
inline void GmaeALLRecord::clear_black_num() {
  black_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::_internal_black_num() const {
  return black_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::black_num() const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeALLRecord.black_num)
  return _internal_black_num();
}
inline void GmaeALLRecord::_internal_set_black_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  black_num_ = value;
}
inline void GmaeALLRecord::set_black_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_black_num(value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeALLRecord.black_num)
}

// int32 red_num = 2;
inline void GmaeALLRecord::clear_red_num() {
  red_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::_internal_red_num() const {
  return red_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::red_num() const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeALLRecord.red_num)
  return _internal_red_num();
}
inline void GmaeALLRecord::_internal_set_red_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  red_num_ = value;
}
inline void GmaeALLRecord::set_red_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_red_num(value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeALLRecord.red_num)
}

// int32 even_num = 3;
inline void GmaeALLRecord::clear_even_num() {
  even_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::_internal_even_num() const {
  return even_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::even_num() const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeALLRecord.even_num)
  return _internal_even_num();
}
inline void GmaeALLRecord::_internal_set_even_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  even_num_ = value;
}
inline void GmaeALLRecord::set_even_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_even_num(value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeALLRecord.even_num)
}

// int32 odd_num = 4;
inline void GmaeALLRecord::clear_odd_num() {
  odd_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::_internal_odd_num() const {
  return odd_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::odd_num() const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeALLRecord.odd_num)
  return _internal_odd_num();
}
inline void GmaeALLRecord::_internal_set_odd_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  odd_num_ = value;
}
inline void GmaeALLRecord::set_odd_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_odd_num(value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeALLRecord.odd_num)
}

// int32 big_num = 5;
inline void GmaeALLRecord::clear_big_num() {
  big_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::_internal_big_num() const {
  return big_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::big_num() const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeALLRecord.big_num)
  return _internal_big_num();
}
inline void GmaeALLRecord::_internal_set_big_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  big_num_ = value;
}
inline void GmaeALLRecord::set_big_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_big_num(value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeALLRecord.big_num)
}

// int32 small_num = 6;
inline void GmaeALLRecord::clear_small_num() {
  small_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::_internal_small_num() const {
  return small_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::small_num() const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeALLRecord.small_num)
  return _internal_small_num();
}
inline void GmaeALLRecord::_internal_set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  small_num_ = value;
}
inline void GmaeALLRecord::set_small_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_small_num(value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeALLRecord.small_num)
}

// int32 zero_num = 7;
inline void GmaeALLRecord::clear_zero_num() {
  zero_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::_internal_zero_num() const {
  return zero_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeALLRecord::zero_num() const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeALLRecord.zero_num)
  return _internal_zero_num();
}
inline void GmaeALLRecord::_internal_set_zero_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  zero_num_ = value;
}
inline void GmaeALLRecord::set_zero_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_zero_num(value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeALLRecord.zero_num)
}

// -------------------------------------------------------------------

// BettonArea

// repeated int32 area_cfg = 1;
inline int BettonArea::_internal_area_cfg_size() const {
  return area_cfg_.size();
}
inline int BettonArea::area_cfg_size() const {
  return _internal_area_cfg_size();
}
inline void BettonArea::clear_area_cfg() {
  area_cfg_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BettonArea::_internal_area_cfg(int index) const {
  return area_cfg_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BettonArea::area_cfg(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.BettonArea.area_cfg)
  return _internal_area_cfg(index);
}
inline void BettonArea::set_area_cfg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  area_cfg_.Set(index, value);
  // @@protoc_insertion_point(field_set:Roulette.BettonArea.area_cfg)
}
inline void BettonArea::_internal_add_area_cfg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  area_cfg_.Add(value);
}
inline void BettonArea::add_area_cfg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_area_cfg(value);
  // @@protoc_insertion_point(field_add:Roulette.BettonArea.area_cfg)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
BettonArea::_internal_area_cfg() const {
  return area_cfg_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
BettonArea::area_cfg() const {
  // @@protoc_insertion_point(field_list:Roulette.BettonArea.area_cfg)
  return _internal_area_cfg();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
BettonArea::_internal_mutable_area_cfg() {
  return &area_cfg_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
BettonArea::mutable_area_cfg() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.BettonArea.area_cfg)
  return _internal_mutable_area_cfg();
}

// -------------------------------------------------------------------

// UserInfo

// int64 total_bet = 1;
inline void UserInfo::clear_total_bet() {
  total_bet_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserInfo::_internal_total_bet() const {
  return total_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserInfo::total_bet() const {
  // @@protoc_insertion_point(field_get:Roulette.UserInfo.total_bet)
  return _internal_total_bet();
}
inline void UserInfo::_internal_set_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_bet_ = value;
}
inline void UserInfo::set_total_bet(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_bet(value);
  // @@protoc_insertion_point(field_set:Roulette.UserInfo.total_bet)
}

// int64 total_win = 2;
inline void UserInfo::clear_total_win() {
  total_win_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserInfo::_internal_total_win() const {
  return total_win_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserInfo::total_win() const {
  // @@protoc_insertion_point(field_get:Roulette.UserInfo.total_win)
  return _internal_total_win();
}
inline void UserInfo::_internal_set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_win_ = value;
}
inline void UserInfo::set_total_win(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_win(value);
  // @@protoc_insertion_point(field_set:Roulette.UserInfo.total_win)
}

// -------------------------------------------------------------------

// GmaeConfg

// repeated int32 bet = 1;
inline int GmaeConfg::_internal_bet_size() const {
  return bet_.size();
}
inline int GmaeConfg::bet_size() const {
  return _internal_bet_size();
}
inline void GmaeConfg::clear_bet() {
  bet_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::_internal_bet(int index) const {
  return bet_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::bet(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeConfg.bet)
  return _internal_bet(index);
}
inline void GmaeConfg::set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_.Set(index, value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeConfg.bet)
}
inline void GmaeConfg::_internal_add_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_.Add(value);
}
inline void GmaeConfg::add_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bet(value);
  // @@protoc_insertion_point(field_add:Roulette.GmaeConfg.bet)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::_internal_bet() const {
  return bet_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::bet() const {
  // @@protoc_insertion_point(field_list:Roulette.GmaeConfg.bet)
  return _internal_bet();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::_internal_mutable_bet() {
  return &bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::mutable_bet() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.GmaeConfg.bet)
  return _internal_mutable_bet();
}

// repeated int32 bet_limit_min = 2;
inline int GmaeConfg::_internal_bet_limit_min_size() const {
  return bet_limit_min_.size();
}
inline int GmaeConfg::bet_limit_min_size() const {
  return _internal_bet_limit_min_size();
}
inline void GmaeConfg::clear_bet_limit_min() {
  bet_limit_min_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::_internal_bet_limit_min(int index) const {
  return bet_limit_min_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::bet_limit_min(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeConfg.bet_limit_min)
  return _internal_bet_limit_min(index);
}
inline void GmaeConfg::set_bet_limit_min(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_min_.Set(index, value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeConfg.bet_limit_min)
}
inline void GmaeConfg::_internal_add_bet_limit_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_min_.Add(value);
}
inline void GmaeConfg::add_bet_limit_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bet_limit_min(value);
  // @@protoc_insertion_point(field_add:Roulette.GmaeConfg.bet_limit_min)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::_internal_bet_limit_min() const {
  return bet_limit_min_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::bet_limit_min() const {
  // @@protoc_insertion_point(field_list:Roulette.GmaeConfg.bet_limit_min)
  return _internal_bet_limit_min();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::_internal_mutable_bet_limit_min() {
  return &bet_limit_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::mutable_bet_limit_min() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.GmaeConfg.bet_limit_min)
  return _internal_mutable_bet_limit_min();
}

// repeated int32 bet_limit_max = 3;
inline int GmaeConfg::_internal_bet_limit_max_size() const {
  return bet_limit_max_.size();
}
inline int GmaeConfg::bet_limit_max_size() const {
  return _internal_bet_limit_max_size();
}
inline void GmaeConfg::clear_bet_limit_max() {
  bet_limit_max_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::_internal_bet_limit_max(int index) const {
  return bet_limit_max_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::bet_limit_max(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeConfg.bet_limit_max)
  return _internal_bet_limit_max(index);
}
inline void GmaeConfg::set_bet_limit_max(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_max_.Set(index, value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeConfg.bet_limit_max)
}
inline void GmaeConfg::_internal_add_bet_limit_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_limit_max_.Add(value);
}
inline void GmaeConfg::add_bet_limit_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bet_limit_max(value);
  // @@protoc_insertion_point(field_add:Roulette.GmaeConfg.bet_limit_max)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::_internal_bet_limit_max() const {
  return bet_limit_max_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::bet_limit_max() const {
  // @@protoc_insertion_point(field_list:Roulette.GmaeConfg.bet_limit_max)
  return _internal_bet_limit_max();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::_internal_mutable_bet_limit_max() {
  return &bet_limit_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::mutable_bet_limit_max() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.GmaeConfg.bet_limit_max)
  return _internal_mutable_bet_limit_max();
}

// repeated .Roulette.BettonArea bet_area_cfg = 4;
inline int GmaeConfg::_internal_bet_area_cfg_size() const {
  return bet_area_cfg_.size();
}
inline int GmaeConfg::bet_area_cfg_size() const {
  return _internal_bet_area_cfg_size();
}
inline void GmaeConfg::clear_bet_area_cfg() {
  bet_area_cfg_.Clear();
}
inline ::Roulette::BettonArea* GmaeConfg::mutable_bet_area_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:Roulette.GmaeConfg.bet_area_cfg)
  return bet_area_cfg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::BettonArea >*
GmaeConfg::mutable_bet_area_cfg() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.GmaeConfg.bet_area_cfg)
  return &bet_area_cfg_;
}
inline const ::Roulette::BettonArea& GmaeConfg::_internal_bet_area_cfg(int index) const {
  return bet_area_cfg_.Get(index);
}
inline const ::Roulette::BettonArea& GmaeConfg::bet_area_cfg(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeConfg.bet_area_cfg)
  return _internal_bet_area_cfg(index);
}
inline ::Roulette::BettonArea* GmaeConfg::_internal_add_bet_area_cfg() {
  return bet_area_cfg_.Add();
}
inline ::Roulette::BettonArea* GmaeConfg::add_bet_area_cfg() {
  // @@protoc_insertion_point(field_add:Roulette.GmaeConfg.bet_area_cfg)
  return _internal_add_bet_area_cfg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::BettonArea >&
GmaeConfg::bet_area_cfg() const {
  // @@protoc_insertion_point(field_list:Roulette.GmaeConfg.bet_area_cfg)
  return bet_area_cfg_;
}

// repeated int32 multiple_cfg = 5;
inline int GmaeConfg::_internal_multiple_cfg_size() const {
  return multiple_cfg_.size();
}
inline int GmaeConfg::multiple_cfg_size() const {
  return _internal_multiple_cfg_size();
}
inline void GmaeConfg::clear_multiple_cfg() {
  multiple_cfg_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::_internal_multiple_cfg(int index) const {
  return multiple_cfg_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GmaeConfg::multiple_cfg(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.GmaeConfg.multiple_cfg)
  return _internal_multiple_cfg(index);
}
inline void GmaeConfg::set_multiple_cfg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  multiple_cfg_.Set(index, value);
  // @@protoc_insertion_point(field_set:Roulette.GmaeConfg.multiple_cfg)
}
inline void GmaeConfg::_internal_add_multiple_cfg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  multiple_cfg_.Add(value);
}
inline void GmaeConfg::add_multiple_cfg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_multiple_cfg(value);
  // @@protoc_insertion_point(field_add:Roulette.GmaeConfg.multiple_cfg)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::_internal_multiple_cfg() const {
  return multiple_cfg_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GmaeConfg::multiple_cfg() const {
  // @@protoc_insertion_point(field_list:Roulette.GmaeConfg.multiple_cfg)
  return _internal_multiple_cfg();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::_internal_mutable_multiple_cfg() {
  return &multiple_cfg_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GmaeConfg::mutable_multiple_cfg() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.GmaeConfg.multiple_cfg)
  return _internal_mutable_multiple_cfg();
}

// -------------------------------------------------------------------

// MsgSceneInfo

// .Roulette.GmaeConfg game_fog = 1;
inline bool MsgSceneInfo::_internal_has_game_fog() const {
  return this != internal_default_instance() && game_fog_ != nullptr;
}
inline bool MsgSceneInfo::has_game_fog() const {
  return _internal_has_game_fog();
}
inline void MsgSceneInfo::clear_game_fog() {
  if (GetArena() == nullptr && game_fog_ != nullptr) {
    delete game_fog_;
  }
  game_fog_ = nullptr;
}
inline const ::Roulette::GmaeConfg& MsgSceneInfo::_internal_game_fog() const {
  const ::Roulette::GmaeConfg* p = game_fog_;
  return p != nullptr ? *p : reinterpret_cast<const ::Roulette::GmaeConfg&>(
      ::Roulette::_GmaeConfg_default_instance_);
}
inline const ::Roulette::GmaeConfg& MsgSceneInfo::game_fog() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgSceneInfo.game_fog)
  return _internal_game_fog();
}
inline void MsgSceneInfo::unsafe_arena_set_allocated_game_fog(
    ::Roulette::GmaeConfg* game_fog) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(game_fog_);
  }
  game_fog_ = game_fog;
  if (game_fog) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Roulette.MsgSceneInfo.game_fog)
}
inline ::Roulette::GmaeConfg* MsgSceneInfo::release_game_fog() {
  
  ::Roulette::GmaeConfg* temp = game_fog_;
  game_fog_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Roulette::GmaeConfg* MsgSceneInfo::unsafe_arena_release_game_fog() {
  // @@protoc_insertion_point(field_release:Roulette.MsgSceneInfo.game_fog)
  
  ::Roulette::GmaeConfg* temp = game_fog_;
  game_fog_ = nullptr;
  return temp;
}
inline ::Roulette::GmaeConfg* MsgSceneInfo::_internal_mutable_game_fog() {
  
  if (game_fog_ == nullptr) {
    auto* p = CreateMaybeMessage<::Roulette::GmaeConfg>(GetArena());
    game_fog_ = p;
  }
  return game_fog_;
}
inline ::Roulette::GmaeConfg* MsgSceneInfo::mutable_game_fog() {
  // @@protoc_insertion_point(field_mutable:Roulette.MsgSceneInfo.game_fog)
  return _internal_mutable_game_fog();
}
inline void MsgSceneInfo::set_allocated_game_fog(::Roulette::GmaeConfg* game_fog) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete game_fog_;
  }
  if (game_fog) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(game_fog);
    if (message_arena != submessage_arena) {
      game_fog = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, game_fog, submessage_arena);
    }
    
  } else {
    
  }
  game_fog_ = game_fog;
  // @@protoc_insertion_point(field_set_allocated:Roulette.MsgSceneInfo.game_fog)
}

// repeated int32 game_record = 2;
inline int MsgSceneInfo::_internal_game_record_size() const {
  return game_record_.size();
}
inline int MsgSceneInfo::game_record_size() const {
  return _internal_game_record_size();
}
inline void MsgSceneInfo::clear_game_record() {
  game_record_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_game_record(int index) const {
  return game_record_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::game_record(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.MsgSceneInfo.game_record)
  return _internal_game_record(index);
}
inline void MsgSceneInfo::set_game_record(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  game_record_.Set(index, value);
  // @@protoc_insertion_point(field_set:Roulette.MsgSceneInfo.game_record)
}
inline void MsgSceneInfo::_internal_add_game_record(::PROTOBUF_NAMESPACE_ID::int32 value) {
  game_record_.Add(value);
}
inline void MsgSceneInfo::add_game_record(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_game_record(value);
  // @@protoc_insertion_point(field_add:Roulette.MsgSceneInfo.game_record)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::_internal_game_record() const {
  return game_record_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::game_record() const {
  // @@protoc_insertion_point(field_list:Roulette.MsgSceneInfo.game_record)
  return _internal_game_record();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::_internal_mutable_game_record() {
  return &game_record_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::mutable_game_record() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.MsgSceneInfo.game_record)
  return _internal_mutable_game_record();
}

// repeated .Roulette.GmaeALLRecord all_record = 3;
inline int MsgSceneInfo::_internal_all_record_size() const {
  return all_record_.size();
}
inline int MsgSceneInfo::all_record_size() const {
  return _internal_all_record_size();
}
inline void MsgSceneInfo::clear_all_record() {
  all_record_.Clear();
}
inline ::Roulette::GmaeALLRecord* MsgSceneInfo::mutable_all_record(int index) {
  // @@protoc_insertion_point(field_mutable:Roulette.MsgSceneInfo.all_record)
  return all_record_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::GmaeALLRecord >*
MsgSceneInfo::mutable_all_record() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.MsgSceneInfo.all_record)
  return &all_record_;
}
inline const ::Roulette::GmaeALLRecord& MsgSceneInfo::_internal_all_record(int index) const {
  return all_record_.Get(index);
}
inline const ::Roulette::GmaeALLRecord& MsgSceneInfo::all_record(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.MsgSceneInfo.all_record)
  return _internal_all_record(index);
}
inline ::Roulette::GmaeALLRecord* MsgSceneInfo::_internal_add_all_record() {
  return all_record_.Add();
}
inline ::Roulette::GmaeALLRecord* MsgSceneInfo::add_all_record() {
  // @@protoc_insertion_point(field_add:Roulette.MsgSceneInfo.all_record)
  return _internal_add_all_record();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::GmaeALLRecord >&
MsgSceneInfo::all_record() const {
  // @@protoc_insertion_point(field_list:Roulette.MsgSceneInfo.all_record)
  return all_record_;
}

// int32 game_state = 4;
inline void MsgSceneInfo::clear_game_state() {
  game_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_game_state() const {
  return game_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::game_state() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgSceneInfo.game_state)
  return _internal_game_state();
}
inline void MsgSceneInfo::_internal_set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  game_state_ = value;
}
inline void MsgSceneInfo::set_game_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_game_state(value);
  // @@protoc_insertion_point(field_set:Roulette.MsgSceneInfo.game_state)
}

// int32 times = 5;
inline void MsgSceneInfo::clear_times() {
  times_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_times() const {
  return times_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::times() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgSceneInfo.times)
  return _internal_times();
}
inline void MsgSceneInfo::_internal_set_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  times_ = value;
}
inline void MsgSceneInfo::set_times(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_times(value);
  // @@protoc_insertion_point(field_set:Roulette.MsgSceneInfo.times)
}

// repeated int32 game_bet = 6;
inline int MsgSceneInfo::_internal_game_bet_size() const {
  return game_bet_.size();
}
inline int MsgSceneInfo::game_bet_size() const {
  return _internal_game_bet_size();
}
inline void MsgSceneInfo::clear_game_bet() {
  game_bet_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::_internal_game_bet(int index) const {
  return game_bet_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSceneInfo::game_bet(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.MsgSceneInfo.game_bet)
  return _internal_game_bet(index);
}
inline void MsgSceneInfo::set_game_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  game_bet_.Set(index, value);
  // @@protoc_insertion_point(field_set:Roulette.MsgSceneInfo.game_bet)
}
inline void MsgSceneInfo::_internal_add_game_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  game_bet_.Add(value);
}
inline void MsgSceneInfo::add_game_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_game_bet(value);
  // @@protoc_insertion_point(field_add:Roulette.MsgSceneInfo.game_bet)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::_internal_game_bet() const {
  return game_bet_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgSceneInfo::game_bet() const {
  // @@protoc_insertion_point(field_list:Roulette.MsgSceneInfo.game_bet)
  return _internal_game_bet();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::_internal_mutable_game_bet() {
  return &game_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgSceneInfo::mutable_game_bet() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.MsgSceneInfo.game_bet)
  return _internal_mutable_game_bet();
}

// repeated .Roulette.UserInfo user_top = 7;
inline int MsgSceneInfo::_internal_user_top_size() const {
  return user_top_.size();
}
inline int MsgSceneInfo::user_top_size() const {
  return _internal_user_top_size();
}
inline void MsgSceneInfo::clear_user_top() {
  user_top_.Clear();
}
inline ::Roulette::UserInfo* MsgSceneInfo::mutable_user_top(int index) {
  // @@protoc_insertion_point(field_mutable:Roulette.MsgSceneInfo.user_top)
  return user_top_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::UserInfo >*
MsgSceneInfo::mutable_user_top() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.MsgSceneInfo.user_top)
  return &user_top_;
}
inline const ::Roulette::UserInfo& MsgSceneInfo::_internal_user_top(int index) const {
  return user_top_.Get(index);
}
inline const ::Roulette::UserInfo& MsgSceneInfo::user_top(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.MsgSceneInfo.user_top)
  return _internal_user_top(index);
}
inline ::Roulette::UserInfo* MsgSceneInfo::_internal_add_user_top() {
  return user_top_.Add();
}
inline ::Roulette::UserInfo* MsgSceneInfo::add_user_top() {
  // @@protoc_insertion_point(field_add:Roulette.MsgSceneInfo.user_top)
  return _internal_add_user_top();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::UserInfo >&
MsgSceneInfo::user_top() const {
  // @@protoc_insertion_point(field_list:Roulette.MsgSceneInfo.user_top)
  return user_top_;
}

// -------------------------------------------------------------------

// MsgBet

// int32 index = 1;
inline void MsgBet::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBet::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBet::index() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgBet.index)
  return _internal_index();
}
inline void MsgBet::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void MsgBet::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:Roulette.MsgBet.index)
}

// int32 area = 2;
inline void MsgBet::clear_area() {
  area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBet::_internal_area() const {
  return area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBet::area() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgBet.area)
  return _internal_area();
}
inline void MsgBet::_internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_ = value;
}
inline void MsgBet::set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area(value);
  // @@protoc_insertion_point(field_set:Roulette.MsgBet.area)
}

// -------------------------------------------------------------------

// MsgBetResp

// int32 chair_id = 1;
inline void MsgBetResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBetResp::chair_id() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgBetResp.chair_id)
  return _internal_chair_id();
}
inline void MsgBetResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void MsgBetResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Roulette.MsgBetResp.chair_id)
}

// .Roulette.MsgBet bet_info = 2;
inline bool MsgBetResp::_internal_has_bet_info() const {
  return this != internal_default_instance() && bet_info_ != nullptr;
}
inline bool MsgBetResp::has_bet_info() const {
  return _internal_has_bet_info();
}
inline void MsgBetResp::clear_bet_info() {
  if (GetArena() == nullptr && bet_info_ != nullptr) {
    delete bet_info_;
  }
  bet_info_ = nullptr;
}
inline const ::Roulette::MsgBet& MsgBetResp::_internal_bet_info() const {
  const ::Roulette::MsgBet* p = bet_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::Roulette::MsgBet&>(
      ::Roulette::_MsgBet_default_instance_);
}
inline const ::Roulette::MsgBet& MsgBetResp::bet_info() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgBetResp.bet_info)
  return _internal_bet_info();
}
inline void MsgBetResp::unsafe_arena_set_allocated_bet_info(
    ::Roulette::MsgBet* bet_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bet_info_);
  }
  bet_info_ = bet_info;
  if (bet_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Roulette.MsgBetResp.bet_info)
}
inline ::Roulette::MsgBet* MsgBetResp::release_bet_info() {
  
  ::Roulette::MsgBet* temp = bet_info_;
  bet_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Roulette::MsgBet* MsgBetResp::unsafe_arena_release_bet_info() {
  // @@protoc_insertion_point(field_release:Roulette.MsgBetResp.bet_info)
  
  ::Roulette::MsgBet* temp = bet_info_;
  bet_info_ = nullptr;
  return temp;
}
inline ::Roulette::MsgBet* MsgBetResp::_internal_mutable_bet_info() {
  
  if (bet_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::Roulette::MsgBet>(GetArena());
    bet_info_ = p;
  }
  return bet_info_;
}
inline ::Roulette::MsgBet* MsgBetResp::mutable_bet_info() {
  // @@protoc_insertion_point(field_mutable:Roulette.MsgBetResp.bet_info)
  return _internal_mutable_bet_info();
}
inline void MsgBetResp::set_allocated_bet_info(::Roulette::MsgBet* bet_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bet_info_;
  }
  if (bet_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bet_info);
    if (message_arena != submessage_arena) {
      bet_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bet_info, submessage_arena);
    }
    
  } else {
    
  }
  bet_info_ = bet_info;
  // @@protoc_insertion_point(field_set_allocated:Roulette.MsgBetResp.bet_info)
}

// -------------------------------------------------------------------

// SingleAgainBet

// int32 index = 1;
inline void SingleAgainBet::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SingleAgainBet::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SingleAgainBet::index() const {
  // @@protoc_insertion_point(field_get:Roulette.SingleAgainBet.index)
  return _internal_index();
}
inline void SingleAgainBet::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void SingleAgainBet::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:Roulette.SingleAgainBet.index)
}

// int32 area = 2;
inline void SingleAgainBet::clear_area() {
  area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SingleAgainBet::_internal_area() const {
  return area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SingleAgainBet::area() const {
  // @@protoc_insertion_point(field_get:Roulette.SingleAgainBet.area)
  return _internal_area();
}
inline void SingleAgainBet::_internal_set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_ = value;
}
inline void SingleAgainBet::set_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area(value);
  // @@protoc_insertion_point(field_set:Roulette.SingleAgainBet.area)
}

// int32 count = 3;
inline void SingleAgainBet::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SingleAgainBet::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SingleAgainBet::count() const {
  // @@protoc_insertion_point(field_get:Roulette.SingleAgainBet.count)
  return _internal_count();
}
inline void SingleAgainBet::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void SingleAgainBet::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Roulette.SingleAgainBet.count)
}

// -------------------------------------------------------------------

// AgainBet

// repeated .Roulette.SingleAgainBet again_bet_info = 1;
inline int AgainBet::_internal_again_bet_info_size() const {
  return again_bet_info_.size();
}
inline int AgainBet::again_bet_info_size() const {
  return _internal_again_bet_info_size();
}
inline void AgainBet::clear_again_bet_info() {
  again_bet_info_.Clear();
}
inline ::Roulette::SingleAgainBet* AgainBet::mutable_again_bet_info(int index) {
  // @@protoc_insertion_point(field_mutable:Roulette.AgainBet.again_bet_info)
  return again_bet_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::SingleAgainBet >*
AgainBet::mutable_again_bet_info() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.AgainBet.again_bet_info)
  return &again_bet_info_;
}
inline const ::Roulette::SingleAgainBet& AgainBet::_internal_again_bet_info(int index) const {
  return again_bet_info_.Get(index);
}
inline const ::Roulette::SingleAgainBet& AgainBet::again_bet_info(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.AgainBet.again_bet_info)
  return _internal_again_bet_info(index);
}
inline ::Roulette::SingleAgainBet* AgainBet::_internal_add_again_bet_info() {
  return again_bet_info_.Add();
}
inline ::Roulette::SingleAgainBet* AgainBet::add_again_bet_info() {
  // @@protoc_insertion_point(field_add:Roulette.AgainBet.again_bet_info)
  return _internal_add_again_bet_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::SingleAgainBet >&
AgainBet::again_bet_info() const {
  // @@protoc_insertion_point(field_list:Roulette.AgainBet.again_bet_info)
  return again_bet_info_;
}

// -------------------------------------------------------------------

// MsgAgainBetResp

// int32 chair_id = 1;
inline void MsgAgainBetResp::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgAgainBetResp::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgAgainBetResp::chair_id() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgAgainBetResp.chair_id)
  return _internal_chair_id();
}
inline void MsgAgainBetResp::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void MsgAgainBetResp::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Roulette.MsgAgainBetResp.chair_id)
}

// .Roulette.AgainBet again_bet_info = 2;
inline bool MsgAgainBetResp::_internal_has_again_bet_info() const {
  return this != internal_default_instance() && again_bet_info_ != nullptr;
}
inline bool MsgAgainBetResp::has_again_bet_info() const {
  return _internal_has_again_bet_info();
}
inline void MsgAgainBetResp::clear_again_bet_info() {
  if (GetArena() == nullptr && again_bet_info_ != nullptr) {
    delete again_bet_info_;
  }
  again_bet_info_ = nullptr;
}
inline const ::Roulette::AgainBet& MsgAgainBetResp::_internal_again_bet_info() const {
  const ::Roulette::AgainBet* p = again_bet_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::Roulette::AgainBet&>(
      ::Roulette::_AgainBet_default_instance_);
}
inline const ::Roulette::AgainBet& MsgAgainBetResp::again_bet_info() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgAgainBetResp.again_bet_info)
  return _internal_again_bet_info();
}
inline void MsgAgainBetResp::unsafe_arena_set_allocated_again_bet_info(
    ::Roulette::AgainBet* again_bet_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(again_bet_info_);
  }
  again_bet_info_ = again_bet_info;
  if (again_bet_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Roulette.MsgAgainBetResp.again_bet_info)
}
inline ::Roulette::AgainBet* MsgAgainBetResp::release_again_bet_info() {
  
  ::Roulette::AgainBet* temp = again_bet_info_;
  again_bet_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Roulette::AgainBet* MsgAgainBetResp::unsafe_arena_release_again_bet_info() {
  // @@protoc_insertion_point(field_release:Roulette.MsgAgainBetResp.again_bet_info)
  
  ::Roulette::AgainBet* temp = again_bet_info_;
  again_bet_info_ = nullptr;
  return temp;
}
inline ::Roulette::AgainBet* MsgAgainBetResp::_internal_mutable_again_bet_info() {
  
  if (again_bet_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::Roulette::AgainBet>(GetArena());
    again_bet_info_ = p;
  }
  return again_bet_info_;
}
inline ::Roulette::AgainBet* MsgAgainBetResp::mutable_again_bet_info() {
  // @@protoc_insertion_point(field_mutable:Roulette.MsgAgainBetResp.again_bet_info)
  return _internal_mutable_again_bet_info();
}
inline void MsgAgainBetResp::set_allocated_again_bet_info(::Roulette::AgainBet* again_bet_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete again_bet_info_;
  }
  if (again_bet_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(again_bet_info);
    if (message_arena != submessage_arena) {
      again_bet_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, again_bet_info, submessage_arena);
    }
    
  } else {
    
  }
  again_bet_info_ = again_bet_info;
  // @@protoc_insertion_point(field_set_allocated:Roulette.MsgAgainBetResp.again_bet_info)
}

// -------------------------------------------------------------------

// RevocationBet

// int32 revocation_state = 1;
inline void RevocationBet::clear_revocation_state() {
  revocation_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RevocationBet::_internal_revocation_state() const {
  return revocation_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RevocationBet::revocation_state() const {
  // @@protoc_insertion_point(field_get:Roulette.RevocationBet.revocation_state)
  return _internal_revocation_state();
}
inline void RevocationBet::_internal_set_revocation_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  revocation_state_ = value;
}
inline void RevocationBet::set_revocation_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_revocation_state(value);
  // @@protoc_insertion_point(field_set:Roulette.RevocationBet.revocation_state)
}

// int32 bet_index = 2;
inline void RevocationBet::clear_bet_index() {
  bet_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RevocationBet::_internal_bet_index() const {
  return bet_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RevocationBet::bet_index() const {
  // @@protoc_insertion_point(field_get:Roulette.RevocationBet.bet_index)
  return _internal_bet_index();
}
inline void RevocationBet::_internal_set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_index_ = value;
}
inline void RevocationBet::set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet_index(value);
  // @@protoc_insertion_point(field_set:Roulette.RevocationBet.bet_index)
}

// -------------------------------------------------------------------

// WinMsg

// int32 chair_id = 1;
inline void WinMsg::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WinMsg::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 WinMsg::chair_id() const {
  // @@protoc_insertion_point(field_get:Roulette.WinMsg.chair_id)
  return _internal_chair_id();
}
inline void WinMsg::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void WinMsg::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:Roulette.WinMsg.chair_id)
}

// int64 gold = 2;
inline void WinMsg::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WinMsg::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 WinMsg::gold() const {
  // @@protoc_insertion_point(field_get:Roulette.WinMsg.gold)
  return _internal_gold();
}
inline void WinMsg::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void WinMsg::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:Roulette.WinMsg.gold)
}

// -------------------------------------------------------------------

// MsgGmaeResult

// int32 result_num = 1;
inline void MsgGmaeResult::clear_result_num() {
  result_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGmaeResult::_internal_result_num() const {
  return result_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGmaeResult::result_num() const {
  // @@protoc_insertion_point(field_get:Roulette.MsgGmaeResult.result_num)
  return _internal_result_num();
}
inline void MsgGmaeResult::_internal_set_result_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  result_num_ = value;
}
inline void MsgGmaeResult::set_result_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_result_num(value);
  // @@protoc_insertion_point(field_set:Roulette.MsgGmaeResult.result_num)
}

// repeated .Roulette.WinMsg win_msg = 2;
inline int MsgGmaeResult::_internal_win_msg_size() const {
  return win_msg_.size();
}
inline int MsgGmaeResult::win_msg_size() const {
  return _internal_win_msg_size();
}
inline void MsgGmaeResult::clear_win_msg() {
  win_msg_.Clear();
}
inline ::Roulette::WinMsg* MsgGmaeResult::mutable_win_msg(int index) {
  // @@protoc_insertion_point(field_mutable:Roulette.MsgGmaeResult.win_msg)
  return win_msg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::WinMsg >*
MsgGmaeResult::mutable_win_msg() {
  // @@protoc_insertion_point(field_mutable_list:Roulette.MsgGmaeResult.win_msg)
  return &win_msg_;
}
inline const ::Roulette::WinMsg& MsgGmaeResult::_internal_win_msg(int index) const {
  return win_msg_.Get(index);
}
inline const ::Roulette::WinMsg& MsgGmaeResult::win_msg(int index) const {
  // @@protoc_insertion_point(field_get:Roulette.MsgGmaeResult.win_msg)
  return _internal_win_msg(index);
}
inline ::Roulette::WinMsg* MsgGmaeResult::_internal_add_win_msg() {
  return win_msg_.Add();
}
inline ::Roulette::WinMsg* MsgGmaeResult::add_win_msg() {
  // @@protoc_insertion_point(field_add:Roulette.MsgGmaeResult.win_msg)
  return _internal_add_win_msg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Roulette::WinMsg >&
MsgGmaeResult::win_msg() const {
  // @@protoc_insertion_point(field_list:Roulette.MsgGmaeResult.win_msg)
  return win_msg_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Roulette

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Roulette::EMsgIDRoulette> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Roulette::EMsgIDRoulette>() {
  return ::Roulette::EMsgIDRoulette_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Roulette_2eproto
