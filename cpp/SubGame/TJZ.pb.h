// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TJZ.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_TJZ_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_TJZ_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_TJZ_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_TJZ_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_TJZ_2eproto;
namespace TJZ {
class CMD_3D_SC_Result;
class CMD_3D_SC_ResultDefaultTypeInternal;
extern CMD_3D_SC_ResultDefaultTypeInternal _CMD_3D_SC_Result_default_instance_;
class HitIcon;
class HitIconDefaultTypeInternal;
extern HitIconDefaultTypeInternal _HitIcon_default_instance_;
class SC_SceneInfo;
class SC_SceneInfoDefaultTypeInternal;
extern SC_SceneInfoDefaultTypeInternal _SC_SceneInfo_default_instance_;
}  // namespace TJZ
PROTOBUF_NAMESPACE_OPEN
template<> ::TJZ::CMD_3D_SC_Result* Arena::CreateMaybeMessage<::TJZ::CMD_3D_SC_Result>(Arena*);
template<> ::TJZ::HitIcon* Arena::CreateMaybeMessage<::TJZ::HitIcon>(Arena*);
template<> ::TJZ::SC_SceneInfo* Arena::CreateMaybeMessage<::TJZ::SC_SceneInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TJZ {

enum EMsgIDTJZ : int {
  SUB_CS_GAME_START = 0,
  SUB_SC_GAME_OVER = 1,
  EMsgIDTJZ_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EMsgIDTJZ_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EMsgIDTJZ_IsValid(int value);
constexpr EMsgIDTJZ EMsgIDTJZ_MIN = SUB_CS_GAME_START;
constexpr EMsgIDTJZ EMsgIDTJZ_MAX = SUB_SC_GAME_OVER;
constexpr int EMsgIDTJZ_ARRAYSIZE = EMsgIDTJZ_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDTJZ_descriptor();
template<typename T>
inline const std::string& EMsgIDTJZ_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMsgIDTJZ>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMsgIDTJZ_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMsgIDTJZ_descriptor(), enum_t_value);
}
inline bool EMsgIDTJZ_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMsgIDTJZ* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMsgIDTJZ>(
    EMsgIDTJZ_descriptor(), name, value);
}
// ===================================================================

class SC_SceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TJZ.SC_SceneInfo) */ {
 public:
  inline SC_SceneInfo() : SC_SceneInfo(nullptr) {}
  virtual ~SC_SceneInfo();

  SC_SceneInfo(const SC_SceneInfo& from);
  SC_SceneInfo(SC_SceneInfo&& from) noexcept
    : SC_SceneInfo() {
    *this = ::std::move(from);
  }

  inline SC_SceneInfo& operator=(const SC_SceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_SceneInfo& operator=(SC_SceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SC_SceneInfo& default_instance();

  static inline const SC_SceneInfo* internal_default_instance() {
    return reinterpret_cast<const SC_SceneInfo*>(
               &_SC_SceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SC_SceneInfo& a, SC_SceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_SceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_SceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SC_SceneInfo* New() const final {
    return CreateMaybeMessage<SC_SceneInfo>(nullptr);
  }

  SC_SceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SC_SceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SC_SceneInfo& from);
  void MergeFrom(const SC_SceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SC_SceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TJZ.SC_SceneInfo";
  }
  protected:
  explicit SC_SceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TJZ_2eproto);
    return ::descriptor_table_TJZ_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetFieldNumber = 2,
    kIconFieldNumber = 6,
    kCurJackpotFieldNumber = 1,
    kCurChipFieldNumber = 3,
    kCheatLimitChipFieldNumber = 4,
    kFreeCntFieldNumber = 5,
    kCurUpProcessFieldNumber = 7,
    kUpProcessFieldNumber = 8,
    kReturnFieldNumber = 9,
    kHisGoldMoreThanFieldNumber = 10,
  };
  // repeated int32 bet = 2;
  int bet_size() const;
  private:
  int _internal_bet_size() const;
  public:
  void clear_bet();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bet() const;
  void _internal_add_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bet();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bet(int index) const;
  void set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bet() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bet();

  // repeated int32 icon = 6;
  int icon_size() const;
  private:
  int _internal_icon_size() const;
  public:
  void clear_icon();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icon(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_icon() const;
  void _internal_add_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_icon();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 icon(int index) const;
  void set_icon(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      icon() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_icon();

  // int64 cur_jackpot = 1;
  void clear_cur_jackpot();
  ::PROTOBUF_NAMESPACE_ID::int64 cur_jackpot() const;
  void set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cur_jackpot() const;
  void _internal_set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 cur_chip = 3;
  void clear_cur_chip();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chip() const;
  void set_cur_chip(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_chip() const;
  void _internal_set_cur_chip(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cheat_limit_chip = 4;
  void clear_cheat_limit_chip();
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_limit_chip() const;
  void set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cheat_limit_chip() const;
  void _internal_set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 free_cnt = 5;
  void clear_free_cnt();
  ::PROTOBUF_NAMESPACE_ID::int32 free_cnt() const;
  void set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_free_cnt() const;
  void _internal_set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_up_process = 7;
  void clear_cur_up_process();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_up_process() const;
  void set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_up_process() const;
  void _internal_set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 up_process = 8;
  void clear_up_process();
  ::PROTOBUF_NAMESPACE_ID::int32 up_process() const;
  void set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_up_process() const;
  void _internal_set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool return = 9;
  void clear_return_();
  bool return_() const;
  void set_return_(bool value);
  private:
  bool _internal_return_() const;
  void _internal_set_return_(bool value);
  public:

  // bool his_gold_more_than = 10;
  void clear_his_gold_more_than();
  bool his_gold_more_than() const;
  void set_his_gold_more_than(bool value);
  private:
  bool _internal_his_gold_more_than() const;
  void _internal_set_his_gold_more_than(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TJZ.SC_SceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bet_;
  mutable std::atomic<int> _bet_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > icon_;
  mutable std::atomic<int> _icon_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 cur_jackpot_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_chip_;
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_limit_chip_;
  ::PROTOBUF_NAMESPACE_ID::int32 free_cnt_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_up_process_;
  ::PROTOBUF_NAMESPACE_ID::int32 up_process_;
  bool return__;
  bool his_gold_more_than_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TJZ_2eproto;
};
// -------------------------------------------------------------------

class HitIcon PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TJZ.HitIcon) */ {
 public:
  inline HitIcon() : HitIcon(nullptr) {}
  virtual ~HitIcon();

  HitIcon(const HitIcon& from);
  HitIcon(HitIcon&& from) noexcept
    : HitIcon() {
    *this = ::std::move(from);
  }

  inline HitIcon& operator=(const HitIcon& from) {
    CopyFrom(from);
    return *this;
  }
  inline HitIcon& operator=(HitIcon&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HitIcon& default_instance();

  static inline const HitIcon* internal_default_instance() {
    return reinterpret_cast<const HitIcon*>(
               &_HitIcon_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(HitIcon& a, HitIcon& b) {
    a.Swap(&b);
  }
  inline void Swap(HitIcon* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HitIcon* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HitIcon* New() const final {
    return CreateMaybeMessage<HitIcon>(nullptr);
  }

  HitIcon* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HitIcon>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HitIcon& from);
  void MergeFrom(const HitIcon& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HitIcon* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TJZ.HitIcon";
  }
  protected:
  explicit HitIcon(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TJZ_2eproto);
    return ::descriptor_table_TJZ_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsHitIconFieldNumber = 1,
  };
  // repeated bool is_hit_icon = 1;
  int is_hit_icon_size() const;
  private:
  int _internal_is_hit_icon_size() const;
  public:
  void clear_is_hit_icon();
  private:
  bool _internal_is_hit_icon(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_is_hit_icon() const;
  void _internal_add_is_hit_icon(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_is_hit_icon();
  public:
  bool is_hit_icon(int index) const;
  void set_is_hit_icon(int index, bool value);
  void add_is_hit_icon(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      is_hit_icon() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_is_hit_icon();

  // @@protoc_insertion_point(class_scope:TJZ.HitIcon)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > is_hit_icon_;
  mutable std::atomic<int> _is_hit_icon_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TJZ_2eproto;
};
// -------------------------------------------------------------------

class CMD_3D_SC_Result PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TJZ.CMD_3D_SC_Result) */ {
 public:
  inline CMD_3D_SC_Result() : CMD_3D_SC_Result(nullptr) {}
  virtual ~CMD_3D_SC_Result();

  CMD_3D_SC_Result(const CMD_3D_SC_Result& from);
  CMD_3D_SC_Result(CMD_3D_SC_Result&& from) noexcept
    : CMD_3D_SC_Result() {
    *this = ::std::move(from);
  }

  inline CMD_3D_SC_Result& operator=(const CMD_3D_SC_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_3D_SC_Result& operator=(CMD_3D_SC_Result&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_3D_SC_Result& default_instance();

  static inline const CMD_3D_SC_Result* internal_default_instance() {
    return reinterpret_cast<const CMD_3D_SC_Result*>(
               &_CMD_3D_SC_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMD_3D_SC_Result& a, CMD_3D_SC_Result& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_3D_SC_Result* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_3D_SC_Result* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_3D_SC_Result* New() const final {
    return CreateMaybeMessage<CMD_3D_SC_Result>(nullptr);
  }

  CMD_3D_SC_Result* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_3D_SC_Result>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_3D_SC_Result& from);
  void MergeFrom(const CMD_3D_SC_Result& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_3D_SC_Result* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TJZ.CMD_3D_SC_Result";
  }
  protected:
  explicit CMD_3D_SC_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_TJZ_2eproto);
    return ::descriptor_table_TJZ_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIconFieldNumber = 7,
    kIsHitFieldNumber = 8,
    kCurJackpotFieldNumber = 1,
    kHitJackpotGoldFieldNumber = 2,
    kLineWinSocreFieldNumber = 3,
    kWinTypeScoreFieldNumber = 4,
    kOddFieldNumber = 5,
    kCheatLimitChipFieldNumber = 6,
    kAddFreeCntFieldNumber = 9,
    kFreeCntFieldNumber = 10,
    kCurUpProcessFieldNumber = 11,
    kUpProcessFieldNumber = 12,
    kMaxWinTypeFieldNumber = 13,
    kReturnFieldNumber = 14,
    kHisGoldMoreThanFieldNumber = 15,
  };
  // repeated int32 icon = 7;
  int icon_size() const;
  private:
  int _internal_icon_size() const;
  public:
  void clear_icon();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_icon(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_icon() const;
  void _internal_add_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_icon();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 icon(int index) const;
  void set_icon(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_icon(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      icon() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_icon();

  // repeated .TJZ.HitIcon is_hit = 8;
  int is_hit_size() const;
  private:
  int _internal_is_hit_size() const;
  public:
  void clear_is_hit();
  ::TJZ::HitIcon* mutable_is_hit(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TJZ::HitIcon >*
      mutable_is_hit();
  private:
  const ::TJZ::HitIcon& _internal_is_hit(int index) const;
  ::TJZ::HitIcon* _internal_add_is_hit();
  public:
  const ::TJZ::HitIcon& is_hit(int index) const;
  ::TJZ::HitIcon* add_is_hit();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TJZ::HitIcon >&
      is_hit() const;

  // int64 cur_jackpot = 1;
  void clear_cur_jackpot();
  ::PROTOBUF_NAMESPACE_ID::int64 cur_jackpot() const;
  void set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cur_jackpot() const;
  void _internal_set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 hit_jackpot_gold = 2;
  void clear_hit_jackpot_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 hit_jackpot_gold() const;
  void set_hit_jackpot_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_hit_jackpot_gold() const;
  void _internal_set_hit_jackpot_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 line_win_socre = 3;
  void clear_line_win_socre();
  ::PROTOBUF_NAMESPACE_ID::int64 line_win_socre() const;
  void set_line_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_line_win_socre() const;
  void _internal_set_line_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 win_type_score = 4;
  void clear_win_type_score();
  ::PROTOBUF_NAMESPACE_ID::int64 win_type_score() const;
  void set_win_type_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_type_score() const;
  void _internal_set_win_type_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 odd = 5;
  void clear_odd();
  ::PROTOBUF_NAMESPACE_ID::int32 odd() const;
  void set_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_odd() const;
  void _internal_set_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cheat_limit_chip = 6;
  void clear_cheat_limit_chip();
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_limit_chip() const;
  void set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cheat_limit_chip() const;
  void _internal_set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 add_free_cnt = 9;
  void clear_add_free_cnt();
  ::PROTOBUF_NAMESPACE_ID::int32 add_free_cnt() const;
  void set_add_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_add_free_cnt() const;
  void _internal_set_add_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 free_cnt = 10;
  void clear_free_cnt();
  ::PROTOBUF_NAMESPACE_ID::int32 free_cnt() const;
  void set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_free_cnt() const;
  void _internal_set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cur_up_process = 11;
  void clear_cur_up_process();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_up_process() const;
  void set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_up_process() const;
  void _internal_set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 up_process = 12;
  void clear_up_process();
  ::PROTOBUF_NAMESPACE_ID::int32 up_process() const;
  void set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_up_process() const;
  void _internal_set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_win_type = 13;
  void clear_max_win_type();
  ::PROTOBUF_NAMESPACE_ID::int32 max_win_type() const;
  void set_max_win_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_win_type() const;
  void _internal_set_max_win_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool return = 14;
  void clear_return_();
  bool return_() const;
  void set_return_(bool value);
  private:
  bool _internal_return_() const;
  void _internal_set_return_(bool value);
  public:

  // bool his_gold_more_than = 15;
  void clear_his_gold_more_than();
  bool his_gold_more_than() const;
  void set_his_gold_more_than(bool value);
  private:
  bool _internal_his_gold_more_than() const;
  void _internal_set_his_gold_more_than(bool value);
  public:

  // @@protoc_insertion_point(class_scope:TJZ.CMD_3D_SC_Result)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > icon_;
  mutable std::atomic<int> _icon_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TJZ::HitIcon > is_hit_;
  ::PROTOBUF_NAMESPACE_ID::int64 cur_jackpot_;
  ::PROTOBUF_NAMESPACE_ID::int64 hit_jackpot_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 line_win_socre_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_type_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 odd_;
  ::PROTOBUF_NAMESPACE_ID::int32 cheat_limit_chip_;
  ::PROTOBUF_NAMESPACE_ID::int32 add_free_cnt_;
  ::PROTOBUF_NAMESPACE_ID::int32 free_cnt_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_up_process_;
  ::PROTOBUF_NAMESPACE_ID::int32 up_process_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_win_type_;
  bool return__;
  bool his_gold_more_than_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_TJZ_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SC_SceneInfo

// int64 cur_jackpot = 1;
inline void SC_SceneInfo::clear_cur_jackpot() {
  cur_jackpot_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::_internal_cur_jackpot() const {
  return cur_jackpot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::cur_jackpot() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.cur_jackpot)
  return _internal_cur_jackpot();
}
inline void SC_SceneInfo::_internal_set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cur_jackpot_ = value;
}
inline void SC_SceneInfo::set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cur_jackpot(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.cur_jackpot)
}

// repeated int32 bet = 2;
inline int SC_SceneInfo::_internal_bet_size() const {
  return bet_.size();
}
inline int SC_SceneInfo::bet_size() const {
  return _internal_bet_size();
}
inline void SC_SceneInfo::clear_bet() {
  bet_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_bet(int index) const {
  return bet_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::bet(int index) const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.bet)
  return _internal_bet(index);
}
inline void SC_SceneInfo::set_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_.Set(index, value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.bet)
}
inline void SC_SceneInfo::_internal_add_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bet_.Add(value);
}
inline void SC_SceneInfo::add_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bet(value);
  // @@protoc_insertion_point(field_add:TJZ.SC_SceneInfo.bet)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_bet() const {
  return bet_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::bet() const {
  // @@protoc_insertion_point(field_list:TJZ.SC_SceneInfo.bet)
  return _internal_bet();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_bet() {
  return &bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_bet() {
  // @@protoc_insertion_point(field_mutable_list:TJZ.SC_SceneInfo.bet)
  return _internal_mutable_bet();
}

// int32 cur_chip = 3;
inline void SC_SceneInfo::clear_cur_chip() {
  cur_chip_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_cur_chip() const {
  return cur_chip_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::cur_chip() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.cur_chip)
  return _internal_cur_chip();
}
inline void SC_SceneInfo::_internal_set_cur_chip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_chip_ = value;
}
inline void SC_SceneInfo::set_cur_chip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_chip(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.cur_chip)
}

// int32 cheat_limit_chip = 4;
inline void SC_SceneInfo::clear_cheat_limit_chip() {
  cheat_limit_chip_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_cheat_limit_chip() const {
  return cheat_limit_chip_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::cheat_limit_chip() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.cheat_limit_chip)
  return _internal_cheat_limit_chip();
}
inline void SC_SceneInfo::_internal_set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cheat_limit_chip_ = value;
}
inline void SC_SceneInfo::set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cheat_limit_chip(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.cheat_limit_chip)
}

// int32 free_cnt = 5;
inline void SC_SceneInfo::clear_free_cnt() {
  free_cnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_free_cnt() const {
  return free_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::free_cnt() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.free_cnt)
  return _internal_free_cnt();
}
inline void SC_SceneInfo::_internal_set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  free_cnt_ = value;
}
inline void SC_SceneInfo::set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_free_cnt(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.free_cnt)
}

// repeated int32 icon = 6;
inline int SC_SceneInfo::_internal_icon_size() const {
  return icon_.size();
}
inline int SC_SceneInfo::icon_size() const {
  return _internal_icon_size();
}
inline void SC_SceneInfo::clear_icon() {
  icon_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_icon(int index) const {
  return icon_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::icon(int index) const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.icon)
  return _internal_icon(index);
}
inline void SC_SceneInfo::set_icon(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_.Set(index, value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.icon)
}
inline void SC_SceneInfo::_internal_add_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_.Add(value);
}
inline void SC_SceneInfo::add_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_icon(value);
  // @@protoc_insertion_point(field_add:TJZ.SC_SceneInfo.icon)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_icon() const {
  return icon_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::icon() const {
  // @@protoc_insertion_point(field_list:TJZ.SC_SceneInfo.icon)
  return _internal_icon();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_icon() {
  return &icon_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_icon() {
  // @@protoc_insertion_point(field_mutable_list:TJZ.SC_SceneInfo.icon)
  return _internal_mutable_icon();
}

// int32 cur_up_process = 7;
inline void SC_SceneInfo::clear_cur_up_process() {
  cur_up_process_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_cur_up_process() const {
  return cur_up_process_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::cur_up_process() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.cur_up_process)
  return _internal_cur_up_process();
}
inline void SC_SceneInfo::_internal_set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_up_process_ = value;
}
inline void SC_SceneInfo::set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_up_process(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.cur_up_process)
}

// int32 up_process = 8;
inline void SC_SceneInfo::clear_up_process() {
  up_process_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_up_process() const {
  return up_process_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::up_process() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.up_process)
  return _internal_up_process();
}
inline void SC_SceneInfo::_internal_set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  up_process_ = value;
}
inline void SC_SceneInfo::set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_up_process(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.up_process)
}

// bool return = 9;
inline void SC_SceneInfo::clear_return_() {
  return__ = false;
}
inline bool SC_SceneInfo::_internal_return_() const {
  return return__;
}
inline bool SC_SceneInfo::return_() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.return)
  return _internal_return_();
}
inline void SC_SceneInfo::_internal_set_return_(bool value) {
  
  return__ = value;
}
inline void SC_SceneInfo::set_return_(bool value) {
  _internal_set_return_(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.return)
}

// bool his_gold_more_than = 10;
inline void SC_SceneInfo::clear_his_gold_more_than() {
  his_gold_more_than_ = false;
}
inline bool SC_SceneInfo::_internal_his_gold_more_than() const {
  return his_gold_more_than_;
}
inline bool SC_SceneInfo::his_gold_more_than() const {
  // @@protoc_insertion_point(field_get:TJZ.SC_SceneInfo.his_gold_more_than)
  return _internal_his_gold_more_than();
}
inline void SC_SceneInfo::_internal_set_his_gold_more_than(bool value) {
  
  his_gold_more_than_ = value;
}
inline void SC_SceneInfo::set_his_gold_more_than(bool value) {
  _internal_set_his_gold_more_than(value);
  // @@protoc_insertion_point(field_set:TJZ.SC_SceneInfo.his_gold_more_than)
}

// -------------------------------------------------------------------

// HitIcon

// repeated bool is_hit_icon = 1;
inline int HitIcon::_internal_is_hit_icon_size() const {
  return is_hit_icon_.size();
}
inline int HitIcon::is_hit_icon_size() const {
  return _internal_is_hit_icon_size();
}
inline void HitIcon::clear_is_hit_icon() {
  is_hit_icon_.Clear();
}
inline bool HitIcon::_internal_is_hit_icon(int index) const {
  return is_hit_icon_.Get(index);
}
inline bool HitIcon::is_hit_icon(int index) const {
  // @@protoc_insertion_point(field_get:TJZ.HitIcon.is_hit_icon)
  return _internal_is_hit_icon(index);
}
inline void HitIcon::set_is_hit_icon(int index, bool value) {
  is_hit_icon_.Set(index, value);
  // @@protoc_insertion_point(field_set:TJZ.HitIcon.is_hit_icon)
}
inline void HitIcon::_internal_add_is_hit_icon(bool value) {
  is_hit_icon_.Add(value);
}
inline void HitIcon::add_is_hit_icon(bool value) {
  _internal_add_is_hit_icon(value);
  // @@protoc_insertion_point(field_add:TJZ.HitIcon.is_hit_icon)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
HitIcon::_internal_is_hit_icon() const {
  return is_hit_icon_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
HitIcon::is_hit_icon() const {
  // @@protoc_insertion_point(field_list:TJZ.HitIcon.is_hit_icon)
  return _internal_is_hit_icon();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
HitIcon::_internal_mutable_is_hit_icon() {
  return &is_hit_icon_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
HitIcon::mutable_is_hit_icon() {
  // @@protoc_insertion_point(field_mutable_list:TJZ.HitIcon.is_hit_icon)
  return _internal_mutable_is_hit_icon();
}

// -------------------------------------------------------------------

// CMD_3D_SC_Result

// int64 cur_jackpot = 1;
inline void CMD_3D_SC_Result::clear_cur_jackpot() {
  cur_jackpot_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::_internal_cur_jackpot() const {
  return cur_jackpot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::cur_jackpot() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.cur_jackpot)
  return _internal_cur_jackpot();
}
inline void CMD_3D_SC_Result::_internal_set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cur_jackpot_ = value;
}
inline void CMD_3D_SC_Result::set_cur_jackpot(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cur_jackpot(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.cur_jackpot)
}

// int64 hit_jackpot_gold = 2;
inline void CMD_3D_SC_Result::clear_hit_jackpot_gold() {
  hit_jackpot_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::_internal_hit_jackpot_gold() const {
  return hit_jackpot_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::hit_jackpot_gold() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.hit_jackpot_gold)
  return _internal_hit_jackpot_gold();
}
inline void CMD_3D_SC_Result::_internal_set_hit_jackpot_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  hit_jackpot_gold_ = value;
}
inline void CMD_3D_SC_Result::set_hit_jackpot_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_hit_jackpot_gold(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.hit_jackpot_gold)
}

// int64 line_win_socre = 3;
inline void CMD_3D_SC_Result::clear_line_win_socre() {
  line_win_socre_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::_internal_line_win_socre() const {
  return line_win_socre_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::line_win_socre() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.line_win_socre)
  return _internal_line_win_socre();
}
inline void CMD_3D_SC_Result::_internal_set_line_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  line_win_socre_ = value;
}
inline void CMD_3D_SC_Result::set_line_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_line_win_socre(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.line_win_socre)
}

// int64 win_type_score = 4;
inline void CMD_3D_SC_Result::clear_win_type_score() {
  win_type_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::_internal_win_type_score() const {
  return win_type_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_3D_SC_Result::win_type_score() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.win_type_score)
  return _internal_win_type_score();
}
inline void CMD_3D_SC_Result::_internal_set_win_type_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_type_score_ = value;
}
inline void CMD_3D_SC_Result::set_win_type_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_type_score(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.win_type_score)
}

// int32 odd = 5;
inline void CMD_3D_SC_Result::clear_odd() {
  odd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_odd() const {
  return odd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::odd() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.odd)
  return _internal_odd();
}
inline void CMD_3D_SC_Result::_internal_set_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  odd_ = value;
}
inline void CMD_3D_SC_Result::set_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_odd(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.odd)
}

// int32 cheat_limit_chip = 6;
inline void CMD_3D_SC_Result::clear_cheat_limit_chip() {
  cheat_limit_chip_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_cheat_limit_chip() const {
  return cheat_limit_chip_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::cheat_limit_chip() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.cheat_limit_chip)
  return _internal_cheat_limit_chip();
}
inline void CMD_3D_SC_Result::_internal_set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cheat_limit_chip_ = value;
}
inline void CMD_3D_SC_Result::set_cheat_limit_chip(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cheat_limit_chip(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.cheat_limit_chip)
}

// repeated int32 icon = 7;
inline int CMD_3D_SC_Result::_internal_icon_size() const {
  return icon_.size();
}
inline int CMD_3D_SC_Result::icon_size() const {
  return _internal_icon_size();
}
inline void CMD_3D_SC_Result::clear_icon() {
  icon_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_icon(int index) const {
  return icon_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::icon(int index) const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.icon)
  return _internal_icon(index);
}
inline void CMD_3D_SC_Result::set_icon(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_.Set(index, value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.icon)
}
inline void CMD_3D_SC_Result::_internal_add_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  icon_.Add(value);
}
inline void CMD_3D_SC_Result::add_icon(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_icon(value);
  // @@protoc_insertion_point(field_add:TJZ.CMD_3D_SC_Result.icon)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_3D_SC_Result::_internal_icon() const {
  return icon_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_3D_SC_Result::icon() const {
  // @@protoc_insertion_point(field_list:TJZ.CMD_3D_SC_Result.icon)
  return _internal_icon();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_3D_SC_Result::_internal_mutable_icon() {
  return &icon_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_3D_SC_Result::mutable_icon() {
  // @@protoc_insertion_point(field_mutable_list:TJZ.CMD_3D_SC_Result.icon)
  return _internal_mutable_icon();
}

// repeated .TJZ.HitIcon is_hit = 8;
inline int CMD_3D_SC_Result::_internal_is_hit_size() const {
  return is_hit_.size();
}
inline int CMD_3D_SC_Result::is_hit_size() const {
  return _internal_is_hit_size();
}
inline void CMD_3D_SC_Result::clear_is_hit() {
  is_hit_.Clear();
}
inline ::TJZ::HitIcon* CMD_3D_SC_Result::mutable_is_hit(int index) {
  // @@protoc_insertion_point(field_mutable:TJZ.CMD_3D_SC_Result.is_hit)
  return is_hit_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TJZ::HitIcon >*
CMD_3D_SC_Result::mutable_is_hit() {
  // @@protoc_insertion_point(field_mutable_list:TJZ.CMD_3D_SC_Result.is_hit)
  return &is_hit_;
}
inline const ::TJZ::HitIcon& CMD_3D_SC_Result::_internal_is_hit(int index) const {
  return is_hit_.Get(index);
}
inline const ::TJZ::HitIcon& CMD_3D_SC_Result::is_hit(int index) const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.is_hit)
  return _internal_is_hit(index);
}
inline ::TJZ::HitIcon* CMD_3D_SC_Result::_internal_add_is_hit() {
  return is_hit_.Add();
}
inline ::TJZ::HitIcon* CMD_3D_SC_Result::add_is_hit() {
  // @@protoc_insertion_point(field_add:TJZ.CMD_3D_SC_Result.is_hit)
  return _internal_add_is_hit();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TJZ::HitIcon >&
CMD_3D_SC_Result::is_hit() const {
  // @@protoc_insertion_point(field_list:TJZ.CMD_3D_SC_Result.is_hit)
  return is_hit_;
}

// int32 add_free_cnt = 9;
inline void CMD_3D_SC_Result::clear_add_free_cnt() {
  add_free_cnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_add_free_cnt() const {
  return add_free_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::add_free_cnt() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.add_free_cnt)
  return _internal_add_free_cnt();
}
inline void CMD_3D_SC_Result::_internal_set_add_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  add_free_cnt_ = value;
}
inline void CMD_3D_SC_Result::set_add_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_add_free_cnt(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.add_free_cnt)
}

// int32 free_cnt = 10;
inline void CMD_3D_SC_Result::clear_free_cnt() {
  free_cnt_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_free_cnt() const {
  return free_cnt_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::free_cnt() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.free_cnt)
  return _internal_free_cnt();
}
inline void CMD_3D_SC_Result::_internal_set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  free_cnt_ = value;
}
inline void CMD_3D_SC_Result::set_free_cnt(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_free_cnt(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.free_cnt)
}

// int32 cur_up_process = 11;
inline void CMD_3D_SC_Result::clear_cur_up_process() {
  cur_up_process_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_cur_up_process() const {
  return cur_up_process_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::cur_up_process() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.cur_up_process)
  return _internal_cur_up_process();
}
inline void CMD_3D_SC_Result::_internal_set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_up_process_ = value;
}
inline void CMD_3D_SC_Result::set_cur_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_up_process(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.cur_up_process)
}

// int32 up_process = 12;
inline void CMD_3D_SC_Result::clear_up_process() {
  up_process_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_up_process() const {
  return up_process_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::up_process() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.up_process)
  return _internal_up_process();
}
inline void CMD_3D_SC_Result::_internal_set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  up_process_ = value;
}
inline void CMD_3D_SC_Result::set_up_process(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_up_process(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.up_process)
}

// int32 max_win_type = 13;
inline void CMD_3D_SC_Result::clear_max_win_type() {
  max_win_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::_internal_max_win_type() const {
  return max_win_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_3D_SC_Result::max_win_type() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.max_win_type)
  return _internal_max_win_type();
}
inline void CMD_3D_SC_Result::_internal_set_max_win_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_win_type_ = value;
}
inline void CMD_3D_SC_Result::set_max_win_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_win_type(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.max_win_type)
}

// bool return = 14;
inline void CMD_3D_SC_Result::clear_return_() {
  return__ = false;
}
inline bool CMD_3D_SC_Result::_internal_return_() const {
  return return__;
}
inline bool CMD_3D_SC_Result::return_() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.return)
  return _internal_return_();
}
inline void CMD_3D_SC_Result::_internal_set_return_(bool value) {
  
  return__ = value;
}
inline void CMD_3D_SC_Result::set_return_(bool value) {
  _internal_set_return_(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.return)
}

// bool his_gold_more_than = 15;
inline void CMD_3D_SC_Result::clear_his_gold_more_than() {
  his_gold_more_than_ = false;
}
inline bool CMD_3D_SC_Result::_internal_his_gold_more_than() const {
  return his_gold_more_than_;
}
inline bool CMD_3D_SC_Result::his_gold_more_than() const {
  // @@protoc_insertion_point(field_get:TJZ.CMD_3D_SC_Result.his_gold_more_than)
  return _internal_his_gold_more_than();
}
inline void CMD_3D_SC_Result::_internal_set_his_gold_more_than(bool value) {
  
  his_gold_more_than_ = value;
}
inline void CMD_3D_SC_Result::set_his_gold_more_than(bool value) {
  _internal_set_his_gold_more_than(value);
  // @@protoc_insertion_point(field_set:TJZ.CMD_3D_SC_Result.his_gold_more_than)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TJZ

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::TJZ::EMsgIDTJZ> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TJZ::EMsgIDTJZ>() {
  return ::TJZ::EMsgIDTJZ_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_TJZ_2eproto
