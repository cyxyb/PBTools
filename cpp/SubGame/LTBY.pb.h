// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LTBY.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_LTBY_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_LTBY_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_LTBY_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_LTBY_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[31]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_LTBY_2eproto;
class Bullet;
class BulletDefaultTypeInternal;
extern BulletDefaultTypeInternal _Bullet_default_instance_;
class CMD_C_ChangeBulletLevel;
class CMD_C_ChangeBulletLevelDefaultTypeInternal;
extern CMD_C_ChangeBulletLevelDefaultTypeInternal _CMD_C_ChangeBulletLevel_default_instance_;
class CMD_C_HitedFish;
class CMD_C_HitedFishDefaultTypeInternal;
extern CMD_C_HitedFishDefaultTypeInternal _CMD_C_HitedFish_default_instance_;
class CMD_C_JuBuZhaDan;
class CMD_C_JuBuZhaDanDefaultTypeInternal;
extern CMD_C_JuBuZhaDanDefaultTypeInternal _CMD_C_JuBuZhaDan_default_instance_;
class CMD_C_PlayerLock;
class CMD_C_PlayerLockDefaultTypeInternal;
extern CMD_C_PlayerLockDefaultTypeInternal _CMD_C_PlayerLock_default_instance_;
class CMD_C_PressShoot;
class CMD_C_PressShootDefaultTypeInternal;
extern CMD_C_PressShootDefaultTypeInternal _CMD_C_PressShoot_default_instance_;
class CMD_C_RobotShoot;
class CMD_C_RobotShootDefaultTypeInternal;
extern CMD_C_RobotShootDefaultTypeInternal _CMD_C_RobotShoot_default_instance_;
class CMD_C_ShuiHuZhuan;
class CMD_C_ShuiHuZhuanDefaultTypeInternal;
extern CMD_C_ShuiHuZhuanDefaultTypeInternal _CMD_C_ShuiHuZhuan_default_instance_;
class CMD_C_TongLeiZhaDan;
class CMD_C_TongLeiZhaDanDefaultTypeInternal;
extern CMD_C_TongLeiZhaDanDefaultTypeInternal _CMD_C_TongLeiZhaDan_default_instance_;
class CMD_S_AddFish;
class CMD_S_AddFishDefaultTypeInternal;
extern CMD_S_AddFishDefaultTypeInternal _CMD_S_AddFish_default_instance_;
class CMD_S_CONFIG;
class CMD_S_CONFIGDefaultTypeInternal;
extern CMD_S_CONFIGDefaultTypeInternal _CMD_S_CONFIG_default_instance_;
class CMD_S_ChangeBulletLevel;
class CMD_S_ChangeBulletLevelDefaultTypeInternal;
extern CMD_S_ChangeBulletLevelDefaultTypeInternal _CMD_S_ChangeBulletLevel_default_instance_;
class CMD_S_DaJiangZhangYu;
class CMD_S_DaJiangZhangYuDefaultTypeInternal;
extern CMD_S_DaJiangZhangYuDefaultTypeInternal _CMD_S_DaJiangZhangYu_default_instance_;
class CMD_S_DaSiXi;
class CMD_S_DaSiXiDefaultTypeInternal;
extern CMD_S_DaSiXiDefaultTypeInternal _CMD_S_DaSiXi_default_instance_;
class CMD_S_FishDead;
class CMD_S_FishDeadDefaultTypeInternal;
extern CMD_S_FishDeadDefaultTypeInternal _CMD_S_FishDead_default_instance_;
class CMD_S_JuBuZhaDan;
class CMD_S_JuBuZhaDanDefaultTypeInternal;
extern CMD_S_JuBuZhaDanDefaultTypeInternal _CMD_S_JuBuZhaDan_default_instance_;
class CMD_S_PlayerEnter;
class CMD_S_PlayerEnterDefaultTypeInternal;
extern CMD_S_PlayerEnterDefaultTypeInternal _CMD_S_PlayerEnter_default_instance_;
class CMD_S_PlayerGunLevel;
class CMD_S_PlayerGunLevelDefaultTypeInternal;
extern CMD_S_PlayerGunLevelDefaultTypeInternal _CMD_S_PlayerGunLevel_default_instance_;
class CMD_S_PlayerLock;
class CMD_S_PlayerLockDefaultTypeInternal;
extern CMD_S_PlayerLockDefaultTypeInternal _CMD_S_PlayerLock_default_instance_;
class CMD_S_PlayerShoot;
class CMD_S_PlayerShootDefaultTypeInternal;
extern CMD_S_PlayerShootDefaultTypeInternal _CMD_S_PlayerShoot_default_instance_;
class CMD_S_PlayerYCEnter;
class CMD_S_PlayerYCEnterDefaultTypeInternal;
extern CMD_S_PlayerYCEnterDefaultTypeInternal _CMD_S_PlayerYCEnter_default_instance_;
class CMD_S_RobotList;
class CMD_S_RobotListDefaultTypeInternal;
extern CMD_S_RobotListDefaultTypeInternal _CMD_S_RobotList_default_instance_;
class CMD_S_RobotShoot;
class CMD_S_RobotShootDefaultTypeInternal;
extern CMD_S_RobotShootDefaultTypeInternal _CMD_S_RobotShoot_default_instance_;
class CMD_S_ShootLK;
class CMD_S_ShootLKDefaultTypeInternal;
extern CMD_S_ShootLKDefaultTypeInternal _CMD_S_ShootLK_default_instance_;
class CMD_S_ShuiHuZhuan;
class CMD_S_ShuiHuZhuanDefaultTypeInternal;
extern CMD_S_ShuiHuZhuanDefaultTypeInternal _CMD_S_ShuiHuZhuan_default_instance_;
class CMD_S_TongLeiZhaDan;
class CMD_S_TongLeiZhaDanDefaultTypeInternal;
extern CMD_S_TongLeiZhaDanDefaultTypeInternal _CMD_S_TongLeiZhaDan_default_instance_;
class CMD_S_YiWangDaJin;
class CMD_S_YiWangDaJinDefaultTypeInternal;
extern CMD_S_YiWangDaJinDefaultTypeInternal _CMD_S_YiWangDaJin_default_instance_;
class CMD_S_YuWang;
class CMD_S_YuWangDefaultTypeInternal;
extern CMD_S_YuWangDefaultTypeInternal _CMD_S_YuWang_default_instance_;
class CMD_S_ZhongYiTang;
class CMD_S_ZhongYiTangDefaultTypeInternal;
extern CMD_S_ZhongYiTangDefaultTypeInternal _CMD_S_ZhongYiTang_default_instance_;
class FishDeadInfo;
class FishDeadInfoDefaultTypeInternal;
extern FishDeadInfoDefaultTypeInternal _FishDeadInfo_default_instance_;
class LoadFish;
class LoadFishDefaultTypeInternal;
extern LoadFishDefaultTypeInternal _LoadFish_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::Bullet* Arena::CreateMaybeMessage<::Bullet>(Arena*);
template<> ::CMD_C_ChangeBulletLevel* Arena::CreateMaybeMessage<::CMD_C_ChangeBulletLevel>(Arena*);
template<> ::CMD_C_HitedFish* Arena::CreateMaybeMessage<::CMD_C_HitedFish>(Arena*);
template<> ::CMD_C_JuBuZhaDan* Arena::CreateMaybeMessage<::CMD_C_JuBuZhaDan>(Arena*);
template<> ::CMD_C_PlayerLock* Arena::CreateMaybeMessage<::CMD_C_PlayerLock>(Arena*);
template<> ::CMD_C_PressShoot* Arena::CreateMaybeMessage<::CMD_C_PressShoot>(Arena*);
template<> ::CMD_C_RobotShoot* Arena::CreateMaybeMessage<::CMD_C_RobotShoot>(Arena*);
template<> ::CMD_C_ShuiHuZhuan* Arena::CreateMaybeMessage<::CMD_C_ShuiHuZhuan>(Arena*);
template<> ::CMD_C_TongLeiZhaDan* Arena::CreateMaybeMessage<::CMD_C_TongLeiZhaDan>(Arena*);
template<> ::CMD_S_AddFish* Arena::CreateMaybeMessage<::CMD_S_AddFish>(Arena*);
template<> ::CMD_S_CONFIG* Arena::CreateMaybeMessage<::CMD_S_CONFIG>(Arena*);
template<> ::CMD_S_ChangeBulletLevel* Arena::CreateMaybeMessage<::CMD_S_ChangeBulletLevel>(Arena*);
template<> ::CMD_S_DaJiangZhangYu* Arena::CreateMaybeMessage<::CMD_S_DaJiangZhangYu>(Arena*);
template<> ::CMD_S_DaSiXi* Arena::CreateMaybeMessage<::CMD_S_DaSiXi>(Arena*);
template<> ::CMD_S_FishDead* Arena::CreateMaybeMessage<::CMD_S_FishDead>(Arena*);
template<> ::CMD_S_JuBuZhaDan* Arena::CreateMaybeMessage<::CMD_S_JuBuZhaDan>(Arena*);
template<> ::CMD_S_PlayerEnter* Arena::CreateMaybeMessage<::CMD_S_PlayerEnter>(Arena*);
template<> ::CMD_S_PlayerGunLevel* Arena::CreateMaybeMessage<::CMD_S_PlayerGunLevel>(Arena*);
template<> ::CMD_S_PlayerLock* Arena::CreateMaybeMessage<::CMD_S_PlayerLock>(Arena*);
template<> ::CMD_S_PlayerShoot* Arena::CreateMaybeMessage<::CMD_S_PlayerShoot>(Arena*);
template<> ::CMD_S_PlayerYCEnter* Arena::CreateMaybeMessage<::CMD_S_PlayerYCEnter>(Arena*);
template<> ::CMD_S_RobotList* Arena::CreateMaybeMessage<::CMD_S_RobotList>(Arena*);
template<> ::CMD_S_RobotShoot* Arena::CreateMaybeMessage<::CMD_S_RobotShoot>(Arena*);
template<> ::CMD_S_ShootLK* Arena::CreateMaybeMessage<::CMD_S_ShootLK>(Arena*);
template<> ::CMD_S_ShuiHuZhuan* Arena::CreateMaybeMessage<::CMD_S_ShuiHuZhuan>(Arena*);
template<> ::CMD_S_TongLeiZhaDan* Arena::CreateMaybeMessage<::CMD_S_TongLeiZhaDan>(Arena*);
template<> ::CMD_S_YiWangDaJin* Arena::CreateMaybeMessage<::CMD_S_YiWangDaJin>(Arena*);
template<> ::CMD_S_YuWang* Arena::CreateMaybeMessage<::CMD_S_YuWang>(Arena*);
template<> ::CMD_S_ZhongYiTang* Arena::CreateMaybeMessage<::CMD_S_ZhongYiTang>(Arena*);
template<> ::FishDeadInfo* Arena::CreateMaybeMessage<::FishDeadInfo>(Arena*);
template<> ::LoadFish* Arena::CreateMaybeMessage<::LoadFish>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum EMsgIDSubGame : int {
  MsgIDSubGame_Null = 0,
  SUB_S_CanShoot = 49000,
  SUB_S_CantShoot = 49001,
  SUB_C_RobotShoot = 49002,
  SUB_S_GAME_START = 50001,
  SUB_S_ADD_FISH = 50002,
  SUB_S_FISH_DEAD = 50003,
  SUB_S_PLAYER_SHOOT = 50004,
  SUB_S_CONFIG = 50005,
  SUB_S_CHANGEBULLETLEVEL = 50006,
  SUB_S_SHUIHUZHUAN = 50007,
  SUB_S_ZHONGYITANG = 50008,
  SUB_S_DASANYUAN = 50009,
  SUB_S_DASIXI = 50010,
  SUB_S_YUWANG = 50011,
  SUB_S_TONGLEIZHADAN = 50012,
  SUB_S_YIWANGDAJIN = 50013,
  SUB_S_JUBUZHADAN = 50014,
  SUB_S_PLAYER_ENTER = 50015,
  SUB_S_SHOOT_LK = 50016,
  SUB_S_YUCHAOCOME = 50017,
  SUB_S_YUCHAOPRE = 50018,
  SUB_S_PLAYERGUNLEVEL = 50019,
  SUB_S_PlayerLock = 50020,
  SUB_S_PlayerCancelLock = 50021,
  SUB_S_RobotCome = 50022,
  SUB_S_RobotList = 50023,
  SUB_S_RobotShoot = 50024,
  SUB_S_RobotMoneyNotEnough = 50025,
  SUB_S_PLAYER_YC_ENTER = 50026,
  SUB_S_CHECK_ROBOT_LEAVE = 50027,
  SUB_C_PRESS_SHOOT = 50100,
  SUB_C_HITED_FISH = 50101,
  SUB_C_CHANGEBULLETLEVEL = 50102,
  SUB_C_SHUIHUZHUAN = 50103,
  SUB_C_YUWANG = 50104,
  SUB_C_TONGLEIZHADAN = 50105,
  SUB_C_JUBUZHADAN = 50106,
  SUB_C_PlayerLock = 50107,
  SUB_C_PlayerCancelLock = 50108,
  EMsgIDSubGame_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EMsgIDSubGame_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EMsgIDSubGame_IsValid(int value);
constexpr EMsgIDSubGame EMsgIDSubGame_MIN = MsgIDSubGame_Null;
constexpr EMsgIDSubGame EMsgIDSubGame_MAX = SUB_C_PlayerCancelLock;
constexpr int EMsgIDSubGame_ARRAYSIZE = EMsgIDSubGame_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDSubGame_descriptor();
template<typename T>
inline const std::string& EMsgIDSubGame_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMsgIDSubGame>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMsgIDSubGame_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMsgIDSubGame_descriptor(), enum_t_value);
}
inline bool EMsgIDSubGame_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMsgIDSubGame* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMsgIDSubGame>(
    EMsgIDSubGame_descriptor(), name, value);
}
// ===================================================================

class CMD_S_RobotShoot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_RobotShoot) */ {
 public:
  inline CMD_S_RobotShoot() : CMD_S_RobotShoot(nullptr) {}
  virtual ~CMD_S_RobotShoot();

  CMD_S_RobotShoot(const CMD_S_RobotShoot& from);
  CMD_S_RobotShoot(CMD_S_RobotShoot&& from) noexcept
    : CMD_S_RobotShoot() {
    *this = ::std::move(from);
  }

  inline CMD_S_RobotShoot& operator=(const CMD_S_RobotShoot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_RobotShoot& operator=(CMD_S_RobotShoot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_RobotShoot& default_instance();

  static inline const CMD_S_RobotShoot* internal_default_instance() {
    return reinterpret_cast<const CMD_S_RobotShoot*>(
               &_CMD_S_RobotShoot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMD_S_RobotShoot& a, CMD_S_RobotShoot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_RobotShoot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_RobotShoot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_RobotShoot* New() const final {
    return CreateMaybeMessage<CMD_S_RobotShoot>(nullptr);
  }

  CMD_S_RobotShoot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_RobotShoot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_RobotShoot& from);
  void MergeFrom(const CMD_S_RobotShoot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_RobotShoot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_RobotShoot";
  }
  protected:
  explicit CMD_S_RobotShoot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kLevelFieldNumber = 2,
    kTypeFieldNumber = 3,
    kIsLockFieldNumber = 4,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 level = 2;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_lock = 4;
  void clear_is_lock();
  ::PROTOBUF_NAMESPACE_ID::int32 is_lock() const;
  void set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_lock() const;
  void _internal_set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_RobotShoot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_lock_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_RobotList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_RobotList) */ {
 public:
  inline CMD_S_RobotList() : CMD_S_RobotList(nullptr) {}
  virtual ~CMD_S_RobotList();

  CMD_S_RobotList(const CMD_S_RobotList& from);
  CMD_S_RobotList(CMD_S_RobotList&& from) noexcept
    : CMD_S_RobotList() {
    *this = ::std::move(from);
  }

  inline CMD_S_RobotList& operator=(const CMD_S_RobotList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_RobotList& operator=(CMD_S_RobotList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_RobotList& default_instance();

  static inline const CMD_S_RobotList* internal_default_instance() {
    return reinterpret_cast<const CMD_S_RobotList*>(
               &_CMD_S_RobotList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMD_S_RobotList& a, CMD_S_RobotList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_RobotList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_RobotList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_RobotList* New() const final {
    return CreateMaybeMessage<CMD_S_RobotList>(nullptr);
  }

  CMD_S_RobotList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_RobotList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_RobotList& from);
  void MergeFrom(const CMD_S_RobotList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_RobotList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_RobotList";
  }
  protected:
  explicit CMD_S_RobotList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsRobotFieldNumber = 1,
  };
  // repeated bool is_robot = 1;
  int is_robot_size() const;
  private:
  int _internal_is_robot_size() const;
  public:
  void clear_is_robot();
  private:
  bool _internal_is_robot(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_is_robot() const;
  void _internal_add_is_robot(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_is_robot();
  public:
  bool is_robot(int index) const;
  void set_is_robot(int index, bool value);
  void add_is_robot(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      is_robot() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_is_robot();

  // @@protoc_insertion_point(class_scope:CMD_S_RobotList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > is_robot_;
  mutable std::atomic<int> _is_robot_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_PlayerLock PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_PlayerLock) */ {
 public:
  inline CMD_S_PlayerLock() : CMD_S_PlayerLock(nullptr) {}
  virtual ~CMD_S_PlayerLock();

  CMD_S_PlayerLock(const CMD_S_PlayerLock& from);
  CMD_S_PlayerLock(CMD_S_PlayerLock&& from) noexcept
    : CMD_S_PlayerLock() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlayerLock& operator=(const CMD_S_PlayerLock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_PlayerLock& operator=(CMD_S_PlayerLock&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_PlayerLock& default_instance();

  static inline const CMD_S_PlayerLock* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlayerLock*>(
               &_CMD_S_PlayerLock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMD_S_PlayerLock& a, CMD_S_PlayerLock& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_PlayerLock* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_PlayerLock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlayerLock* New() const final {
    return CreateMaybeMessage<CMD_S_PlayerLock>(nullptr);
  }

  CMD_S_PlayerLock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_PlayerLock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_PlayerLock& from);
  void MergeFrom(const CMD_S_PlayerLock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_PlayerLock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_PlayerLock";
  }
  protected:
  explicit CMD_S_PlayerLock(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kFishIdFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fish_id = 2;
  void clear_fish_id();
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id() const;
  void set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id() const;
  void _internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_PlayerLock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_ShootLK PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_ShootLK) */ {
 public:
  inline CMD_S_ShootLK() : CMD_S_ShootLK(nullptr) {}
  virtual ~CMD_S_ShootLK();

  CMD_S_ShootLK(const CMD_S_ShootLK& from);
  CMD_S_ShootLK(CMD_S_ShootLK&& from) noexcept
    : CMD_S_ShootLK() {
    *this = ::std::move(from);
  }

  inline CMD_S_ShootLK& operator=(const CMD_S_ShootLK& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_ShootLK& operator=(CMD_S_ShootLK&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_ShootLK& default_instance();

  static inline const CMD_S_ShootLK* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ShootLK*>(
               &_CMD_S_ShootLK_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMD_S_ShootLK& a, CMD_S_ShootLK& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_ShootLK* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_ShootLK* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ShootLK* New() const final {
    return CreateMaybeMessage<CMD_S_ShootLK>(nullptr);
  }

  CMD_S_ShootLK* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_ShootLK>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_ShootLK& from);
  void MergeFrom(const CMD_S_ShootLK& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_ShootLK* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_ShootLK";
  }
  protected:
  explicit CMD_S_ShootLK(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kIdFieldNumber = 2,
    kScoreFieldNumber = 3,
    kMultipleFieldNumber = 4,
    kIsDeadedFieldNumber = 5,
    kJbpStageFieldNumber = 6,
    kCurPlayerScoreFieldNumber = 8,
    kCurLkScoreFieldNumber = 7,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 score = 3;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 multiple = 4;
  void clear_multiple();
  ::PROTOBUF_NAMESPACE_ID::int32 multiple() const;
  void set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_multiple() const;
  void _internal_set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_deaded = 5;
  void clear_is_deaded();
  bool is_deaded() const;
  void set_is_deaded(bool value);
  private:
  bool _internal_is_deaded() const;
  void _internal_set_is_deaded(bool value);
  public:

  // int32 jbp_stage = 6;
  void clear_jbp_stage();
  ::PROTOBUF_NAMESPACE_ID::int32 jbp_stage() const;
  void set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_jbp_stage() const;
  void _internal_set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 cur_player_score = 8;
  void clear_cur_player_score();
  ::PROTOBUF_NAMESPACE_ID::int64 cur_player_score() const;
  void set_cur_player_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_cur_player_score() const;
  void _internal_set_cur_player_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 cur_lk_score = 7;
  void clear_cur_lk_score();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_lk_score() const;
  void set_cur_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_lk_score() const;
  void _internal_set_cur_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_ShootLK)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 score_;
  ::PROTOBUF_NAMESPACE_ID::int32 multiple_;
  bool is_deaded_;
  ::PROTOBUF_NAMESPACE_ID::int32 jbp_stage_;
  ::PROTOBUF_NAMESPACE_ID::int64 cur_player_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_lk_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_JuBuZhaDan PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_JuBuZhaDan) */ {
 public:
  inline CMD_S_JuBuZhaDan() : CMD_S_JuBuZhaDan(nullptr) {}
  virtual ~CMD_S_JuBuZhaDan();

  CMD_S_JuBuZhaDan(const CMD_S_JuBuZhaDan& from);
  CMD_S_JuBuZhaDan(CMD_S_JuBuZhaDan&& from) noexcept
    : CMD_S_JuBuZhaDan() {
    *this = ::std::move(from);
  }

  inline CMD_S_JuBuZhaDan& operator=(const CMD_S_JuBuZhaDan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_JuBuZhaDan& operator=(CMD_S_JuBuZhaDan&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_JuBuZhaDan& default_instance();

  static inline const CMD_S_JuBuZhaDan* internal_default_instance() {
    return reinterpret_cast<const CMD_S_JuBuZhaDan*>(
               &_CMD_S_JuBuZhaDan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMD_S_JuBuZhaDan& a, CMD_S_JuBuZhaDan& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_JuBuZhaDan* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_JuBuZhaDan* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_JuBuZhaDan* New() const final {
    return CreateMaybeMessage<CMD_S_JuBuZhaDan>(nullptr);
  }

  CMD_S_JuBuZhaDan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_JuBuZhaDan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_JuBuZhaDan& from);
  void MergeFrom(const CMD_S_JuBuZhaDan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_JuBuZhaDan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_JuBuZhaDan";
  }
  protected:
  explicit CMD_S_JuBuZhaDan(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kFishIdFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fish_id = 2;
  void clear_fish_id();
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id() const;
  void set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id() const;
  void _internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_JuBuZhaDan)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_YiWangDaJin PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_YiWangDaJin) */ {
 public:
  inline CMD_S_YiWangDaJin() : CMD_S_YiWangDaJin(nullptr) {}
  virtual ~CMD_S_YiWangDaJin();

  CMD_S_YiWangDaJin(const CMD_S_YiWangDaJin& from);
  CMD_S_YiWangDaJin(CMD_S_YiWangDaJin&& from) noexcept
    : CMD_S_YiWangDaJin() {
    *this = ::std::move(from);
  }

  inline CMD_S_YiWangDaJin& operator=(const CMD_S_YiWangDaJin& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_YiWangDaJin& operator=(CMD_S_YiWangDaJin&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_YiWangDaJin& default_instance();

  static inline const CMD_S_YiWangDaJin* internal_default_instance() {
    return reinterpret_cast<const CMD_S_YiWangDaJin*>(
               &_CMD_S_YiWangDaJin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMD_S_YiWangDaJin& a, CMD_S_YiWangDaJin& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_YiWangDaJin* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_YiWangDaJin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_YiWangDaJin* New() const final {
    return CreateMaybeMessage<CMD_S_YiWangDaJin>(nullptr);
  }

  CMD_S_YiWangDaJin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_YiWangDaJin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_YiWangDaJin& from);
  void MergeFrom(const CMD_S_YiWangDaJin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_YiWangDaJin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_YiWangDaJin";
  }
  protected:
  explicit CMD_S_YiWangDaJin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kBulletIdFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bullet_id = 2;
  void clear_bullet_id();
  ::PROTOBUF_NAMESPACE_ID::int32 bullet_id() const;
  void set_bullet_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bullet_id() const;
  void _internal_set_bullet_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_YiWangDaJin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 bullet_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_TongLeiZhaDan PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_TongLeiZhaDan) */ {
 public:
  inline CMD_S_TongLeiZhaDan() : CMD_S_TongLeiZhaDan(nullptr) {}
  virtual ~CMD_S_TongLeiZhaDan();

  CMD_S_TongLeiZhaDan(const CMD_S_TongLeiZhaDan& from);
  CMD_S_TongLeiZhaDan(CMD_S_TongLeiZhaDan&& from) noexcept
    : CMD_S_TongLeiZhaDan() {
    *this = ::std::move(from);
  }

  inline CMD_S_TongLeiZhaDan& operator=(const CMD_S_TongLeiZhaDan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_TongLeiZhaDan& operator=(CMD_S_TongLeiZhaDan&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_TongLeiZhaDan& default_instance();

  static inline const CMD_S_TongLeiZhaDan* internal_default_instance() {
    return reinterpret_cast<const CMD_S_TongLeiZhaDan*>(
               &_CMD_S_TongLeiZhaDan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMD_S_TongLeiZhaDan& a, CMD_S_TongLeiZhaDan& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_TongLeiZhaDan* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_TongLeiZhaDan* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_TongLeiZhaDan* New() const final {
    return CreateMaybeMessage<CMD_S_TongLeiZhaDan>(nullptr);
  }

  CMD_S_TongLeiZhaDan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_TongLeiZhaDan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_TongLeiZhaDan& from);
  void MergeFrom(const CMD_S_TongLeiZhaDan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_TongLeiZhaDan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_TongLeiZhaDan";
  }
  protected:
  explicit CMD_S_TongLeiZhaDan(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kFishIdFieldNumber = 2,
    kKindFieldNumber = 3,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fish_id = 2;
  void clear_fish_id();
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id() const;
  void set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id() const;
  void _internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 kind = 3;
  void clear_kind();
  ::PROTOBUF_NAMESPACE_ID::int32 kind() const;
  void set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind() const;
  void _internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_TongLeiZhaDan)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class LoadFish PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:LoadFish) */ {
 public:
  inline LoadFish() : LoadFish(nullptr) {}
  virtual ~LoadFish();

  LoadFish(const LoadFish& from);
  LoadFish(LoadFish&& from) noexcept
    : LoadFish() {
    *this = ::std::move(from);
  }

  inline LoadFish& operator=(const LoadFish& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadFish& operator=(LoadFish&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadFish& default_instance();

  static inline const LoadFish* internal_default_instance() {
    return reinterpret_cast<const LoadFish*>(
               &_LoadFish_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LoadFish& a, LoadFish& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadFish* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadFish* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadFish* New() const final {
    return CreateMaybeMessage<LoadFish>(nullptr);
  }

  LoadFish* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadFish>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadFish& from);
  void MergeFrom(const LoadFish& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadFish* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "LoadFish";
  }
  protected:
  explicit LoadFish(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKindFieldNumber = 1,
    kIdFieldNumber = 2,
    kCreateTimeFieldNumber = 3,
    kContinueTimeFieldNumber = 4,
    kRoadFieldNumber = 5,
    kGroupIdFieldNumber = 6,
    kGroupNoFieldNumber = 7,
    kNowTimeFieldNumber = 8,
    kMulFieldNumber = 9,
    kStageFieldNumber = 10,
    kIsAcedFieldNumber = 11,
    kJbpStageFieldNumber = 12,
    kLkMulFieldNumber = 13,
    kLkScoreFieldNumber = 14,
  };
  // int32 kind = 1;
  void clear_kind();
  ::PROTOBUF_NAMESPACE_ID::int32 kind() const;
  void set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind() const;
  void _internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 id = 2;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 create_time = 3;
  void clear_create_time();
  ::PROTOBUF_NAMESPACE_ID::int32 create_time() const;
  void set_create_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_create_time() const;
  void _internal_set_create_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 continue_time = 4;
  void clear_continue_time();
  ::PROTOBUF_NAMESPACE_ID::int32 continue_time() const;
  void set_continue_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_continue_time() const;
  void _internal_set_continue_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 road = 5;
  void clear_road();
  ::PROTOBUF_NAMESPACE_ID::int32 road() const;
  void set_road(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_road() const;
  void _internal_set_road(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 group_id = 6;
  void clear_group_id();
  ::PROTOBUF_NAMESPACE_ID::int32 group_id() const;
  void set_group_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_group_id() const;
  void _internal_set_group_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 group_no = 7;
  void clear_group_no();
  ::PROTOBUF_NAMESPACE_ID::int32 group_no() const;
  void set_group_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_group_no() const;
  void _internal_set_group_no(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 now_time = 8;
  void clear_now_time();
  ::PROTOBUF_NAMESPACE_ID::int32 now_time() const;
  void set_now_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_now_time() const;
  void _internal_set_now_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 mul = 9;
  void clear_mul();
  ::PROTOBUF_NAMESPACE_ID::int32 mul() const;
  void set_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mul() const;
  void _internal_set_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 stage = 10;
  void clear_stage();
  ::PROTOBUF_NAMESPACE_ID::int32 stage() const;
  void set_stage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_stage() const;
  void _internal_set_stage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_aced = 11;
  void clear_is_aced();
  ::PROTOBUF_NAMESPACE_ID::int32 is_aced() const;
  void set_is_aced(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_aced() const;
  void _internal_set_is_aced(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 jbp_stage = 12;
  void clear_jbp_stage();
  ::PROTOBUF_NAMESPACE_ID::int32 jbp_stage() const;
  void set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_jbp_stage() const;
  void _internal_set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 lk_mul = 13;
  void clear_lk_mul();
  ::PROTOBUF_NAMESPACE_ID::int32 lk_mul() const;
  void set_lk_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lk_mul() const;
  void _internal_set_lk_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 lk_score = 14;
  void clear_lk_score();
  ::PROTOBUF_NAMESPACE_ID::int32 lk_score() const;
  void set_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lk_score() const;
  void _internal_set_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:LoadFish)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 create_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 continue_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 road_;
  ::PROTOBUF_NAMESPACE_ID::int32 group_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 group_no_;
  ::PROTOBUF_NAMESPACE_ID::int32 now_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 mul_;
  ::PROTOBUF_NAMESPACE_ID::int32 stage_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_aced_;
  ::PROTOBUF_NAMESPACE_ID::int32 jbp_stage_;
  ::PROTOBUF_NAMESPACE_ID::int32 lk_mul_;
  ::PROTOBUF_NAMESPACE_ID::int32 lk_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_YuWang PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_YuWang) */ {
 public:
  inline CMD_S_YuWang() : CMD_S_YuWang(nullptr) {}
  virtual ~CMD_S_YuWang();

  CMD_S_YuWang(const CMD_S_YuWang& from);
  CMD_S_YuWang(CMD_S_YuWang&& from) noexcept
    : CMD_S_YuWang() {
    *this = ::std::move(from);
  }

  inline CMD_S_YuWang& operator=(const CMD_S_YuWang& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_YuWang& operator=(CMD_S_YuWang&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_YuWang& default_instance();

  static inline const CMD_S_YuWang* internal_default_instance() {
    return reinterpret_cast<const CMD_S_YuWang*>(
               &_CMD_S_YuWang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMD_S_YuWang& a, CMD_S_YuWang& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_YuWang* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_YuWang* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_YuWang* New() const final {
    return CreateMaybeMessage<CMD_S_YuWang>(nullptr);
  }

  CMD_S_YuWang* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_YuWang>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_YuWang& from);
  void MergeFrom(const CMD_S_YuWang& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_YuWang* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_YuWang";
  }
  protected:
  explicit CMD_S_YuWang(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFishIdFieldNumber = 4,
    kChairIdFieldNumber = 1,
    kKindFieldNumber = 2,
    kYuWangIdFieldNumber = 3,
  };
  // repeated .LoadFish fish_id = 4;
  int fish_id_size() const;
  private:
  int _internal_fish_id_size() const;
  public:
  void clear_fish_id();
  ::LoadFish* mutable_fish_id(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
      mutable_fish_id();
  private:
  const ::LoadFish& _internal_fish_id(int index) const;
  ::LoadFish* _internal_add_fish_id();
  public:
  const ::LoadFish& fish_id(int index) const;
  ::LoadFish* add_fish_id();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
      fish_id() const;

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 kind = 2;
  void clear_kind();
  ::PROTOBUF_NAMESPACE_ID::int32 kind() const;
  void set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_kind() const;
  void _internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 yu_wang_id = 3;
  void clear_yu_wang_id();
  ::PROTOBUF_NAMESPACE_ID::int32 yu_wang_id() const;
  void set_yu_wang_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_yu_wang_id() const;
  void _internal_set_yu_wang_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_YuWang)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish > fish_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 kind_;
  ::PROTOBUF_NAMESPACE_ID::int32 yu_wang_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_DaSiXi PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_DaSiXi) */ {
 public:
  inline CMD_S_DaSiXi() : CMD_S_DaSiXi(nullptr) {}
  virtual ~CMD_S_DaSiXi();

  CMD_S_DaSiXi(const CMD_S_DaSiXi& from);
  CMD_S_DaSiXi(CMD_S_DaSiXi&& from) noexcept
    : CMD_S_DaSiXi() {
    *this = ::std::move(from);
  }

  inline CMD_S_DaSiXi& operator=(const CMD_S_DaSiXi& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_DaSiXi& operator=(CMD_S_DaSiXi&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_DaSiXi& default_instance();

  static inline const CMD_S_DaSiXi* internal_default_instance() {
    return reinterpret_cast<const CMD_S_DaSiXi*>(
               &_CMD_S_DaSiXi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMD_S_DaSiXi& a, CMD_S_DaSiXi& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_DaSiXi* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_DaSiXi* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_DaSiXi* New() const final {
    return CreateMaybeMessage<CMD_S_DaSiXi>(nullptr);
  }

  CMD_S_DaSiXi* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_DaSiXi>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_DaSiXi& from);
  void MergeFrom(const CMD_S_DaSiXi& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_DaSiXi* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_DaSiXi";
  }
  protected:
  explicit CMD_S_DaSiXi(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kChairIdFieldNumber = 2,
    kScoreFieldNumber = 3,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 2;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 score = 3;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_DaSiXi)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_DaJiangZhangYu PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_DaJiangZhangYu) */ {
 public:
  inline CMD_S_DaJiangZhangYu() : CMD_S_DaJiangZhangYu(nullptr) {}
  virtual ~CMD_S_DaJiangZhangYu();

  CMD_S_DaJiangZhangYu(const CMD_S_DaJiangZhangYu& from);
  CMD_S_DaJiangZhangYu(CMD_S_DaJiangZhangYu&& from) noexcept
    : CMD_S_DaJiangZhangYu() {
    *this = ::std::move(from);
  }

  inline CMD_S_DaJiangZhangYu& operator=(const CMD_S_DaJiangZhangYu& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_DaJiangZhangYu& operator=(CMD_S_DaJiangZhangYu&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_DaJiangZhangYu& default_instance();

  static inline const CMD_S_DaJiangZhangYu* internal_default_instance() {
    return reinterpret_cast<const CMD_S_DaJiangZhangYu*>(
               &_CMD_S_DaJiangZhangYu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMD_S_DaJiangZhangYu& a, CMD_S_DaJiangZhangYu& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_DaJiangZhangYu* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_DaJiangZhangYu* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_DaJiangZhangYu* New() const final {
    return CreateMaybeMessage<CMD_S_DaJiangZhangYu>(nullptr);
  }

  CMD_S_DaJiangZhangYu* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_DaJiangZhangYu>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_DaJiangZhangYu& from);
  void MergeFrom(const CMD_S_DaJiangZhangYu& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_DaJiangZhangYu* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_DaJiangZhangYu";
  }
  protected:
  explicit CMD_S_DaJiangZhangYu(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kChairIdFieldNumber = 2,
    kOdd1FieldNumber = 3,
    kOdd2FieldNumber = 4,
    kOdd3FieldNumber = 5,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chair_id = 2;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 odd1 = 3;
  void clear_odd1();
  ::PROTOBUF_NAMESPACE_ID::int32 odd1() const;
  void set_odd1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_odd1() const;
  void _internal_set_odd1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 odd2 = 4;
  void clear_odd2();
  ::PROTOBUF_NAMESPACE_ID::int32 odd2() const;
  void set_odd2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_odd2() const;
  void _internal_set_odd2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 odd3 = 5;
  void clear_odd3();
  ::PROTOBUF_NAMESPACE_ID::int32 odd3() const;
  void set_odd3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_odd3() const;
  void _internal_set_odd3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_DaJiangZhangYu)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 odd1_;
  ::PROTOBUF_NAMESPACE_ID::int32 odd2_;
  ::PROTOBUF_NAMESPACE_ID::int32 odd3_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_ZhongYiTang PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_ZhongYiTang) */ {
 public:
  inline CMD_S_ZhongYiTang() : CMD_S_ZhongYiTang(nullptr) {}
  virtual ~CMD_S_ZhongYiTang();

  CMD_S_ZhongYiTang(const CMD_S_ZhongYiTang& from);
  CMD_S_ZhongYiTang(CMD_S_ZhongYiTang&& from) noexcept
    : CMD_S_ZhongYiTang() {
    *this = ::std::move(from);
  }

  inline CMD_S_ZhongYiTang& operator=(const CMD_S_ZhongYiTang& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_ZhongYiTang& operator=(CMD_S_ZhongYiTang&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_ZhongYiTang& default_instance();

  static inline const CMD_S_ZhongYiTang* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ZhongYiTang*>(
               &_CMD_S_ZhongYiTang_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMD_S_ZhongYiTang& a, CMD_S_ZhongYiTang& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_ZhongYiTang* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_ZhongYiTang* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ZhongYiTang* New() const final {
    return CreateMaybeMessage<CMD_S_ZhongYiTang>(nullptr);
  }

  CMD_S_ZhongYiTang* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_ZhongYiTang>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_ZhongYiTang& from);
  void MergeFrom(const CMD_S_ZhongYiTang& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_ZhongYiTang* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_ZhongYiTang";
  }
  protected:
  explicit CMD_S_ZhongYiTang(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kAddTimeFieldNumber = 2,
    kAddMulFieldNumber = 3,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 add_time = 2;
  void clear_add_time();
  ::PROTOBUF_NAMESPACE_ID::int32 add_time() const;
  void set_add_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_add_time() const;
  void _internal_set_add_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 add_mul = 3;
  void clear_add_mul();
  ::PROTOBUF_NAMESPACE_ID::int32 add_mul() const;
  void set_add_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_add_mul() const;
  void _internal_set_add_mul(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_ZhongYiTang)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 add_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 add_mul_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_ShuiHuZhuan PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_ShuiHuZhuan) */ {
 public:
  inline CMD_S_ShuiHuZhuan() : CMD_S_ShuiHuZhuan(nullptr) {}
  virtual ~CMD_S_ShuiHuZhuan();

  CMD_S_ShuiHuZhuan(const CMD_S_ShuiHuZhuan& from);
  CMD_S_ShuiHuZhuan(CMD_S_ShuiHuZhuan&& from) noexcept
    : CMD_S_ShuiHuZhuan() {
    *this = ::std::move(from);
  }

  inline CMD_S_ShuiHuZhuan& operator=(const CMD_S_ShuiHuZhuan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_ShuiHuZhuan& operator=(CMD_S_ShuiHuZhuan&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_ShuiHuZhuan& default_instance();

  static inline const CMD_S_ShuiHuZhuan* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ShuiHuZhuan*>(
               &_CMD_S_ShuiHuZhuan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMD_S_ShuiHuZhuan& a, CMD_S_ShuiHuZhuan& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_ShuiHuZhuan* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_ShuiHuZhuan* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ShuiHuZhuan* New() const final {
    return CreateMaybeMessage<CMD_S_ShuiHuZhuan>(nullptr);
  }

  CMD_S_ShuiHuZhuan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_ShuiHuZhuan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_ShuiHuZhuan& from);
  void MergeFrom(const CMD_S_ShuiHuZhuan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_ShuiHuZhuan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_ShuiHuZhuan";
  }
  protected:
  explicit CMD_S_ShuiHuZhuan(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFishIdFieldNumber = 2,
    kFishScoreFieldNumber = 3,
    kChairIdFieldNumber = 1,
  };
  // repeated int32 fish_id = 2;
  int fish_id_size() const;
  private:
  int _internal_fish_id_size() const;
  public:
  void clear_fish_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_fish_id() const;
  void _internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_fish_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id(int index) const;
  void set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      fish_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_fish_id();

  // repeated int32 fish_score = 3;
  int fish_score_size() const;
  private:
  int _internal_fish_score_size() const;
  public:
  void clear_fish_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_fish_score() const;
  void _internal_add_fish_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_fish_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 fish_score(int index) const;
  void set_fish_score(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_fish_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      fish_score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_fish_score();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_ShuiHuZhuan)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > fish_id_;
  mutable std::atomic<int> _fish_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > fish_score_;
  mutable std::atomic<int> _fish_score_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_ChangeBulletLevel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_ChangeBulletLevel) */ {
 public:
  inline CMD_S_ChangeBulletLevel() : CMD_S_ChangeBulletLevel(nullptr) {}
  virtual ~CMD_S_ChangeBulletLevel();

  CMD_S_ChangeBulletLevel(const CMD_S_ChangeBulletLevel& from);
  CMD_S_ChangeBulletLevel(CMD_S_ChangeBulletLevel&& from) noexcept
    : CMD_S_ChangeBulletLevel() {
    *this = ::std::move(from);
  }

  inline CMD_S_ChangeBulletLevel& operator=(const CMD_S_ChangeBulletLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_ChangeBulletLevel& operator=(CMD_S_ChangeBulletLevel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_ChangeBulletLevel& default_instance();

  static inline const CMD_S_ChangeBulletLevel* internal_default_instance() {
    return reinterpret_cast<const CMD_S_ChangeBulletLevel*>(
               &_CMD_S_ChangeBulletLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMD_S_ChangeBulletLevel& a, CMD_S_ChangeBulletLevel& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_ChangeBulletLevel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_ChangeBulletLevel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_ChangeBulletLevel* New() const final {
    return CreateMaybeMessage<CMD_S_ChangeBulletLevel>(nullptr);
  }

  CMD_S_ChangeBulletLevel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_ChangeBulletLevel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_ChangeBulletLevel& from);
  void MergeFrom(const CMD_S_ChangeBulletLevel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_ChangeBulletLevel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_ChangeBulletLevel";
  }
  protected:
  explicit CMD_S_ChangeBulletLevel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kGunTypeFieldNumber = 2,
    kGunLevelFieldNumber = 3,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gun_type = 2;
  void clear_gun_type();
  ::PROTOBUF_NAMESPACE_ID::int32 gun_type() const;
  void set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gun_type() const;
  void _internal_set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gun_level = 3;
  void clear_gun_level();
  ::PROTOBUF_NAMESPACE_ID::int32 gun_level() const;
  void set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gun_level() const;
  void _internal_set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_ChangeBulletLevel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 gun_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 gun_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_CONFIG PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_CONFIG) */ {
 public:
  inline CMD_S_CONFIG() : CMD_S_CONFIG(nullptr) {}
  virtual ~CMD_S_CONFIG();

  CMD_S_CONFIG(const CMD_S_CONFIG& from);
  CMD_S_CONFIG(CMD_S_CONFIG&& from) noexcept
    : CMD_S_CONFIG() {
    *this = ::std::move(from);
  }

  inline CMD_S_CONFIG& operator=(const CMD_S_CONFIG& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_CONFIG& operator=(CMD_S_CONFIG&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_CONFIG& default_instance();

  static inline const CMD_S_CONFIG* internal_default_instance() {
    return reinterpret_cast<const CMD_S_CONFIG*>(
               &_CMD_S_CONFIG_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMD_S_CONFIG& a, CMD_S_CONFIG& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_CONFIG* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_CONFIG* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_CONFIG* New() const final {
    return CreateMaybeMessage<CMD_S_CONFIG>(nullptr);
  }

  CMD_S_CONFIG* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_CONFIG>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_CONFIG& from);
  void MergeFrom(const CMD_S_CONFIG& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_CONFIG* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_CONFIG";
  }
  protected:
  explicit CMD_S_CONFIG(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBulletScoreFieldNumber = 1,
    kPlayerLockFishIdFieldNumber = 3,
    kPlayerCurScoreFieldNumber = 4,
    kBackgroundPictureIdFieldNumber = 2,
  };
  // repeated int32 bullet_score = 1;
  int bullet_score_size() const;
  private:
  int _internal_bullet_score_size() const;
  public:
  void clear_bullet_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bullet_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bullet_score() const;
  void _internal_add_bullet_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bullet_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bullet_score(int index) const;
  void set_bullet_score(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bullet_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bullet_score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bullet_score();

  // repeated int32 player_lock_fish_id = 3;
  int player_lock_fish_id_size() const;
  private:
  int _internal_player_lock_fish_id_size() const;
  public:
  void clear_player_lock_fish_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_lock_fish_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_player_lock_fish_id() const;
  void _internal_add_player_lock_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_player_lock_fish_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 player_lock_fish_id(int index) const;
  void set_player_lock_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_player_lock_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      player_lock_fish_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_player_lock_fish_id();

  // repeated int64 player_cur_score = 4;
  int player_cur_score_size() const;
  private:
  int _internal_player_cur_score_size() const;
  public:
  void clear_player_cur_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_cur_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_player_cur_score() const;
  void _internal_add_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_player_cur_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 player_cur_score(int index) const;
  void set_player_cur_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      player_cur_score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_player_cur_score();

  // int32 background_picture_id = 2;
  void clear_background_picture_id();
  ::PROTOBUF_NAMESPACE_ID::int32 background_picture_id() const;
  void set_background_picture_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_background_picture_id() const;
  void _internal_set_background_picture_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_CONFIG)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bullet_score_;
  mutable std::atomic<int> _bullet_score_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > player_lock_fish_id_;
  mutable std::atomic<int> _player_lock_fish_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > player_cur_score_;
  mutable std::atomic<int> _player_cur_score_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 background_picture_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_PlayerGunLevel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_PlayerGunLevel) */ {
 public:
  inline CMD_S_PlayerGunLevel() : CMD_S_PlayerGunLevel(nullptr) {}
  virtual ~CMD_S_PlayerGunLevel();

  CMD_S_PlayerGunLevel(const CMD_S_PlayerGunLevel& from);
  CMD_S_PlayerGunLevel(CMD_S_PlayerGunLevel&& from) noexcept
    : CMD_S_PlayerGunLevel() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlayerGunLevel& operator=(const CMD_S_PlayerGunLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_PlayerGunLevel& operator=(CMD_S_PlayerGunLevel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_PlayerGunLevel& default_instance();

  static inline const CMD_S_PlayerGunLevel* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlayerGunLevel*>(
               &_CMD_S_PlayerGunLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMD_S_PlayerGunLevel& a, CMD_S_PlayerGunLevel& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_PlayerGunLevel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_PlayerGunLevel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlayerGunLevel* New() const final {
    return CreateMaybeMessage<CMD_S_PlayerGunLevel>(nullptr);
  }

  CMD_S_PlayerGunLevel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_PlayerGunLevel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_PlayerGunLevel& from);
  void MergeFrom(const CMD_S_PlayerGunLevel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_PlayerGunLevel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_PlayerGunLevel";
  }
  protected:
  explicit CMD_S_PlayerGunLevel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGunLevelFieldNumber = 1,
    kGunTypeFieldNumber = 2,
  };
  // repeated int32 gun_level = 1;
  int gun_level_size() const;
  private:
  int _internal_gun_level_size() const;
  public:
  void clear_gun_level();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gun_level(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_gun_level() const;
  void _internal_add_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_gun_level();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 gun_level(int index) const;
  void set_gun_level(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      gun_level() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_gun_level();

  // repeated int32 gun_type = 2;
  int gun_type_size() const;
  private:
  int _internal_gun_type_size() const;
  public:
  void clear_gun_type();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gun_type(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_gun_type() const;
  void _internal_add_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_gun_type();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 gun_type(int index) const;
  void set_gun_type(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      gun_type() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_gun_type();

  // @@protoc_insertion_point(class_scope:CMD_S_PlayerGunLevel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > gun_level_;
  mutable std::atomic<int> _gun_level_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > gun_type_;
  mutable std::atomic<int> _gun_type_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_AddFish PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_AddFish) */ {
 public:
  inline CMD_S_AddFish() : CMD_S_AddFish(nullptr) {}
  virtual ~CMD_S_AddFish();

  CMD_S_AddFish(const CMD_S_AddFish& from);
  CMD_S_AddFish(CMD_S_AddFish&& from) noexcept
    : CMD_S_AddFish() {
    *this = ::std::move(from);
  }

  inline CMD_S_AddFish& operator=(const CMD_S_AddFish& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_AddFish& operator=(CMD_S_AddFish&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_AddFish& default_instance();

  static inline const CMD_S_AddFish* internal_default_instance() {
    return reinterpret_cast<const CMD_S_AddFish*>(
               &_CMD_S_AddFish_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMD_S_AddFish& a, CMD_S_AddFish& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_AddFish* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_AddFish* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_AddFish* New() const final {
    return CreateMaybeMessage<CMD_S_AddFish>(nullptr);
  }

  CMD_S_AddFish* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_AddFish>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_AddFish& from);
  void MergeFrom(const CMD_S_AddFish& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_AddFish* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_AddFish";
  }
  protected:
  explicit CMD_S_AddFish(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLoadFishFieldNumber = 1,
  };
  // repeated .LoadFish load_fish = 1;
  int load_fish_size() const;
  private:
  int _internal_load_fish_size() const;
  public:
  void clear_load_fish();
  ::LoadFish* mutable_load_fish(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
      mutable_load_fish();
  private:
  const ::LoadFish& _internal_load_fish(int index) const;
  ::LoadFish* _internal_add_load_fish();
  public:
  const ::LoadFish& load_fish(int index) const;
  ::LoadFish* add_load_fish();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
      load_fish() const;

  // @@protoc_insertion_point(class_scope:CMD_S_AddFish)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish > load_fish_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_PlayerEnter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_PlayerEnter) */ {
 public:
  inline CMD_S_PlayerEnter() : CMD_S_PlayerEnter(nullptr) {}
  virtual ~CMD_S_PlayerEnter();

  CMD_S_PlayerEnter(const CMD_S_PlayerEnter& from);
  CMD_S_PlayerEnter(CMD_S_PlayerEnter&& from) noexcept
    : CMD_S_PlayerEnter() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlayerEnter& operator=(const CMD_S_PlayerEnter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_PlayerEnter& operator=(CMD_S_PlayerEnter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_PlayerEnter& default_instance();

  static inline const CMD_S_PlayerEnter* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlayerEnter*>(
               &_CMD_S_PlayerEnter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMD_S_PlayerEnter& a, CMD_S_PlayerEnter& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_PlayerEnter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_PlayerEnter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlayerEnter* New() const final {
    return CreateMaybeMessage<CMD_S_PlayerEnter>(nullptr);
  }

  CMD_S_PlayerEnter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_PlayerEnter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_PlayerEnter& from);
  void MergeFrom(const CMD_S_PlayerEnter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_PlayerEnter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_PlayerEnter";
  }
  protected:
  explicit CMD_S_PlayerEnter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLoadFishFieldNumber = 1,
  };
  // repeated .LoadFish load_fish = 1;
  int load_fish_size() const;
  private:
  int _internal_load_fish_size() const;
  public:
  void clear_load_fish();
  ::LoadFish* mutable_load_fish(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
      mutable_load_fish();
  private:
  const ::LoadFish& _internal_load_fish(int index) const;
  ::LoadFish* _internal_add_load_fish();
  public:
  const ::LoadFish& load_fish(int index) const;
  ::LoadFish* add_load_fish();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
      load_fish() const;

  // @@protoc_insertion_point(class_scope:CMD_S_PlayerEnter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish > load_fish_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_PlayerYCEnter PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_PlayerYCEnter) */ {
 public:
  inline CMD_S_PlayerYCEnter() : CMD_S_PlayerYCEnter(nullptr) {}
  virtual ~CMD_S_PlayerYCEnter();

  CMD_S_PlayerYCEnter(const CMD_S_PlayerYCEnter& from);
  CMD_S_PlayerYCEnter(CMD_S_PlayerYCEnter&& from) noexcept
    : CMD_S_PlayerYCEnter() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlayerYCEnter& operator=(const CMD_S_PlayerYCEnter& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_PlayerYCEnter& operator=(CMD_S_PlayerYCEnter&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_PlayerYCEnter& default_instance();

  static inline const CMD_S_PlayerYCEnter* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlayerYCEnter*>(
               &_CMD_S_PlayerYCEnter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMD_S_PlayerYCEnter& a, CMD_S_PlayerYCEnter& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_PlayerYCEnter* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_PlayerYCEnter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlayerYCEnter* New() const final {
    return CreateMaybeMessage<CMD_S_PlayerYCEnter>(nullptr);
  }

  CMD_S_PlayerYCEnter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_PlayerYCEnter>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_PlayerYCEnter& from);
  void MergeFrom(const CMD_S_PlayerYCEnter& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_PlayerYCEnter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_PlayerYCEnter";
  }
  protected:
  explicit CMD_S_PlayerYCEnter(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLoadFishFieldNumber = 2,
    kYuChaoIdFieldNumber = 1,
  };
  // repeated .LoadFish load_fish = 2;
  int load_fish_size() const;
  private:
  int _internal_load_fish_size() const;
  public:
  void clear_load_fish();
  ::LoadFish* mutable_load_fish(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
      mutable_load_fish();
  private:
  const ::LoadFish& _internal_load_fish(int index) const;
  ::LoadFish* _internal_add_load_fish();
  public:
  const ::LoadFish& load_fish(int index) const;
  ::LoadFish* add_load_fish();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
      load_fish() const;

  // int32 yu_chao_id = 1;
  void clear_yu_chao_id();
  ::PROTOBUF_NAMESPACE_ID::int32 yu_chao_id() const;
  void set_yu_chao_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_yu_chao_id() const;
  void _internal_set_yu_chao_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_PlayerYCEnter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish > load_fish_;
  ::PROTOBUF_NAMESPACE_ID::int32 yu_chao_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class FishDeadInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FishDeadInfo) */ {
 public:
  inline FishDeadInfo() : FishDeadInfo(nullptr) {}
  virtual ~FishDeadInfo();

  FishDeadInfo(const FishDeadInfo& from);
  FishDeadInfo(FishDeadInfo&& from) noexcept
    : FishDeadInfo() {
    *this = ::std::move(from);
  }

  inline FishDeadInfo& operator=(const FishDeadInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline FishDeadInfo& operator=(FishDeadInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FishDeadInfo& default_instance();

  static inline const FishDeadInfo* internal_default_instance() {
    return reinterpret_cast<const FishDeadInfo*>(
               &_FishDeadInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(FishDeadInfo& a, FishDeadInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(FishDeadInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FishDeadInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FishDeadInfo* New() const final {
    return CreateMaybeMessage<FishDeadInfo>(nullptr);
  }

  FishDeadInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FishDeadInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FishDeadInfo& from);
  void MergeFrom(const FishDeadInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FishDeadInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FishDeadInfo";
  }
  protected:
  explicit FishDeadInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kScoreFieldNumber = 2,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 score = 2;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:FishDeadInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_FishDead PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_FishDead) */ {
 public:
  inline CMD_S_FishDead() : CMD_S_FishDead(nullptr) {}
  virtual ~CMD_S_FishDead();

  CMD_S_FishDead(const CMD_S_FishDead& from);
  CMD_S_FishDead(CMD_S_FishDead&& from) noexcept
    : CMD_S_FishDead() {
    *this = ::std::move(from);
  }

  inline CMD_S_FishDead& operator=(const CMD_S_FishDead& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_FishDead& operator=(CMD_S_FishDead&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_FishDead& default_instance();

  static inline const CMD_S_FishDead* internal_default_instance() {
    return reinterpret_cast<const CMD_S_FishDead*>(
               &_CMD_S_FishDead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMD_S_FishDead& a, CMD_S_FishDead& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_FishDead* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_FishDead* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_FishDead* New() const final {
    return CreateMaybeMessage<CMD_S_FishDead>(nullptr);
  }

  CMD_S_FishDead* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_FishDead>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_FishDead& from);
  void MergeFrom(const CMD_S_FishDead& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_FishDead* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_FishDead";
  }
  protected:
  explicit CMD_S_FishDead(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFishFieldNumber = 2,
    kChairIdFieldNumber = 1,
    kLeiLongOddFieldNumber = 4,
    kScoreFieldNumber = 3,
  };
  // repeated .FishDeadInfo fish = 2;
  int fish_size() const;
  private:
  int _internal_fish_size() const;
  public:
  void clear_fish();
  ::FishDeadInfo* mutable_fish(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FishDeadInfo >*
      mutable_fish();
  private:
  const ::FishDeadInfo& _internal_fish(int index) const;
  ::FishDeadInfo* _internal_add_fish();
  public:
  const ::FishDeadInfo& fish(int index) const;
  ::FishDeadInfo* add_fish();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FishDeadInfo >&
      fish() const;

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 lei_long_odd = 4;
  void clear_lei_long_odd();
  ::PROTOBUF_NAMESPACE_ID::int32 lei_long_odd() const;
  void set_lei_long_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lei_long_odd() const;
  void _internal_set_lei_long_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 score = 3;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int64 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_FishDead)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FishDeadInfo > fish_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 lei_long_odd_;
  ::PROTOBUF_NAMESPACE_ID::int64 score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_S_PlayerShoot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_S_PlayerShoot) */ {
 public:
  inline CMD_S_PlayerShoot() : CMD_S_PlayerShoot(nullptr) {}
  virtual ~CMD_S_PlayerShoot();

  CMD_S_PlayerShoot(const CMD_S_PlayerShoot& from);
  CMD_S_PlayerShoot(CMD_S_PlayerShoot&& from) noexcept
    : CMD_S_PlayerShoot() {
    *this = ::std::move(from);
  }

  inline CMD_S_PlayerShoot& operator=(const CMD_S_PlayerShoot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_S_PlayerShoot& operator=(CMD_S_PlayerShoot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_S_PlayerShoot& default_instance();

  static inline const CMD_S_PlayerShoot* internal_default_instance() {
    return reinterpret_cast<const CMD_S_PlayerShoot*>(
               &_CMD_S_PlayerShoot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMD_S_PlayerShoot& a, CMD_S_PlayerShoot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_S_PlayerShoot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_S_PlayerShoot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_S_PlayerShoot* New() const final {
    return CreateMaybeMessage<CMD_S_PlayerShoot>(nullptr);
  }

  CMD_S_PlayerShoot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_S_PlayerShoot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_S_PlayerShoot& from);
  void MergeFrom(const CMD_S_PlayerShoot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_S_PlayerShoot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_S_PlayerShoot";
  }
  protected:
  explicit CMD_S_PlayerShoot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kLevelFieldNumber = 4,
    kPlayerCurScoreFieldNumber = 6,
    kTypeFieldNumber = 5,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float x = 2;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 3;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // int32 level = 4;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 player_cur_score = 6;
  void clear_player_cur_score();
  ::PROTOBUF_NAMESPACE_ID::int64 player_cur_score() const;
  void set_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_cur_score() const;
  void _internal_set_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 type = 5;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_S_PlayerShoot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  float x_;
  float y_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int64 player_cur_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_RobotShoot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_RobotShoot) */ {
 public:
  inline CMD_C_RobotShoot() : CMD_C_RobotShoot(nullptr) {}
  virtual ~CMD_C_RobotShoot();

  CMD_C_RobotShoot(const CMD_C_RobotShoot& from);
  CMD_C_RobotShoot(CMD_C_RobotShoot&& from) noexcept
    : CMD_C_RobotShoot() {
    *this = ::std::move(from);
  }

  inline CMD_C_RobotShoot& operator=(const CMD_C_RobotShoot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_RobotShoot& operator=(CMD_C_RobotShoot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_RobotShoot& default_instance();

  static inline const CMD_C_RobotShoot* internal_default_instance() {
    return reinterpret_cast<const CMD_C_RobotShoot*>(
               &_CMD_C_RobotShoot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMD_C_RobotShoot& a, CMD_C_RobotShoot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_RobotShoot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_RobotShoot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_RobotShoot* New() const final {
    return CreateMaybeMessage<CMD_C_RobotShoot>(nullptr);
  }

  CMD_C_RobotShoot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_RobotShoot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_RobotShoot& from);
  void MergeFrom(const CMD_C_RobotShoot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_RobotShoot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_RobotShoot";
  }
  protected:
  explicit CMD_C_RobotShoot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kLevelFieldNumber = 2,
    kTypeFieldNumber = 3,
    kIsLockFieldNumber = 4,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 level = 2;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_lock = 4;
  void clear_is_lock();
  ::PROTOBUF_NAMESPACE_ID::int32 is_lock() const;
  void set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_lock() const;
  void _internal_set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_RobotShoot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_lock_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_PlayerLock PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_PlayerLock) */ {
 public:
  inline CMD_C_PlayerLock() : CMD_C_PlayerLock(nullptr) {}
  virtual ~CMD_C_PlayerLock();

  CMD_C_PlayerLock(const CMD_C_PlayerLock& from);
  CMD_C_PlayerLock(CMD_C_PlayerLock&& from) noexcept
    : CMD_C_PlayerLock() {
    *this = ::std::move(from);
  }

  inline CMD_C_PlayerLock& operator=(const CMD_C_PlayerLock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_PlayerLock& operator=(CMD_C_PlayerLock&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_PlayerLock& default_instance();

  static inline const CMD_C_PlayerLock* internal_default_instance() {
    return reinterpret_cast<const CMD_C_PlayerLock*>(
               &_CMD_C_PlayerLock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMD_C_PlayerLock& a, CMD_C_PlayerLock& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_PlayerLock* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_PlayerLock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_PlayerLock* New() const final {
    return CreateMaybeMessage<CMD_C_PlayerLock>(nullptr);
  }

  CMD_C_PlayerLock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_PlayerLock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_PlayerLock& from);
  void MergeFrom(const CMD_C_PlayerLock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_PlayerLock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_PlayerLock";
  }
  protected:
  explicit CMD_C_PlayerLock(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kFishIdFieldNumber = 2,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fish_id = 2;
  void clear_fish_id();
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id() const;
  void set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id() const;
  void _internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_PlayerLock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_JuBuZhaDan PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_JuBuZhaDan) */ {
 public:
  inline CMD_C_JuBuZhaDan() : CMD_C_JuBuZhaDan(nullptr) {}
  virtual ~CMD_C_JuBuZhaDan();

  CMD_C_JuBuZhaDan(const CMD_C_JuBuZhaDan& from);
  CMD_C_JuBuZhaDan(CMD_C_JuBuZhaDan&& from) noexcept
    : CMD_C_JuBuZhaDan() {
    *this = ::std::move(from);
  }

  inline CMD_C_JuBuZhaDan& operator=(const CMD_C_JuBuZhaDan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_JuBuZhaDan& operator=(CMD_C_JuBuZhaDan&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_JuBuZhaDan& default_instance();

  static inline const CMD_C_JuBuZhaDan* internal_default_instance() {
    return reinterpret_cast<const CMD_C_JuBuZhaDan*>(
               &_CMD_C_JuBuZhaDan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMD_C_JuBuZhaDan& a, CMD_C_JuBuZhaDan& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_JuBuZhaDan* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_JuBuZhaDan* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_JuBuZhaDan* New() const final {
    return CreateMaybeMessage<CMD_C_JuBuZhaDan>(nullptr);
  }

  CMD_C_JuBuZhaDan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_JuBuZhaDan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_JuBuZhaDan& from);
  void MergeFrom(const CMD_C_JuBuZhaDan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_JuBuZhaDan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_JuBuZhaDan";
  }
  protected:
  explicit CMD_C_JuBuZhaDan(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFishIdFieldNumber = 3,
    kChairIdFieldNumber = 1,
    kTeShuIuIdFieldNumber = 2,
  };
  // repeated int32 fish_id = 3;
  int fish_id_size() const;
  private:
  int _internal_fish_id_size() const;
  public:
  void clear_fish_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_fish_id() const;
  void _internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_fish_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id(int index) const;
  void set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      fish_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_fish_id();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 te_shu_iu_id = 2;
  void clear_te_shu_iu_id();
  ::PROTOBUF_NAMESPACE_ID::int32 te_shu_iu_id() const;
  void set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_te_shu_iu_id() const;
  void _internal_set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_JuBuZhaDan)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > fish_id_;
  mutable std::atomic<int> _fish_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 te_shu_iu_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_TongLeiZhaDan PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_TongLeiZhaDan) */ {
 public:
  inline CMD_C_TongLeiZhaDan() : CMD_C_TongLeiZhaDan(nullptr) {}
  virtual ~CMD_C_TongLeiZhaDan();

  CMD_C_TongLeiZhaDan(const CMD_C_TongLeiZhaDan& from);
  CMD_C_TongLeiZhaDan(CMD_C_TongLeiZhaDan&& from) noexcept
    : CMD_C_TongLeiZhaDan() {
    *this = ::std::move(from);
  }

  inline CMD_C_TongLeiZhaDan& operator=(const CMD_C_TongLeiZhaDan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_TongLeiZhaDan& operator=(CMD_C_TongLeiZhaDan&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_TongLeiZhaDan& default_instance();

  static inline const CMD_C_TongLeiZhaDan* internal_default_instance() {
    return reinterpret_cast<const CMD_C_TongLeiZhaDan*>(
               &_CMD_C_TongLeiZhaDan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMD_C_TongLeiZhaDan& a, CMD_C_TongLeiZhaDan& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_TongLeiZhaDan* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_TongLeiZhaDan* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_TongLeiZhaDan* New() const final {
    return CreateMaybeMessage<CMD_C_TongLeiZhaDan>(nullptr);
  }

  CMD_C_TongLeiZhaDan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_TongLeiZhaDan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_TongLeiZhaDan& from);
  void MergeFrom(const CMD_C_TongLeiZhaDan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_TongLeiZhaDan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_TongLeiZhaDan";
  }
  protected:
  explicit CMD_C_TongLeiZhaDan(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFishIdFieldNumber = 3,
    kChairIdFieldNumber = 1,
    kTeShuIuIdFieldNumber = 2,
  };
  // repeated int32 fish_id = 3;
  int fish_id_size() const;
  private:
  int _internal_fish_id_size() const;
  public:
  void clear_fish_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_fish_id() const;
  void _internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_fish_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id(int index) const;
  void set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      fish_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_fish_id();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 te_shu_iu_id = 2;
  void clear_te_shu_iu_id();
  ::PROTOBUF_NAMESPACE_ID::int32 te_shu_iu_id() const;
  void set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_te_shu_iu_id() const;
  void _internal_set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_TongLeiZhaDan)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > fish_id_;
  mutable std::atomic<int> _fish_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 te_shu_iu_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_ShuiHuZhuan PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_ShuiHuZhuan) */ {
 public:
  inline CMD_C_ShuiHuZhuan() : CMD_C_ShuiHuZhuan(nullptr) {}
  virtual ~CMD_C_ShuiHuZhuan();

  CMD_C_ShuiHuZhuan(const CMD_C_ShuiHuZhuan& from);
  CMD_C_ShuiHuZhuan(CMD_C_ShuiHuZhuan&& from) noexcept
    : CMD_C_ShuiHuZhuan() {
    *this = ::std::move(from);
  }

  inline CMD_C_ShuiHuZhuan& operator=(const CMD_C_ShuiHuZhuan& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_ShuiHuZhuan& operator=(CMD_C_ShuiHuZhuan&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_ShuiHuZhuan& default_instance();

  static inline const CMD_C_ShuiHuZhuan* internal_default_instance() {
    return reinterpret_cast<const CMD_C_ShuiHuZhuan*>(
               &_CMD_C_ShuiHuZhuan_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMD_C_ShuiHuZhuan& a, CMD_C_ShuiHuZhuan& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_ShuiHuZhuan* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_ShuiHuZhuan* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_ShuiHuZhuan* New() const final {
    return CreateMaybeMessage<CMD_C_ShuiHuZhuan>(nullptr);
  }

  CMD_C_ShuiHuZhuan* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_ShuiHuZhuan>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_ShuiHuZhuan& from);
  void MergeFrom(const CMD_C_ShuiHuZhuan& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_ShuiHuZhuan* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_ShuiHuZhuan";
  }
  protected:
  explicit CMD_C_ShuiHuZhuan(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFishIdFieldNumber = 3,
    kChairIdFieldNumber = 1,
    kTeShuIuIdFieldNumber = 2,
  };
  // repeated int32 fish_id = 3;
  int fish_id_size() const;
  private:
  int _internal_fish_id_size() const;
  public:
  void clear_fish_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fish_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_fish_id() const;
  void _internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_fish_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 fish_id(int index) const;
  void set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      fish_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_fish_id();

  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 te_shu_iu_id = 2;
  void clear_te_shu_iu_id();
  ::PROTOBUF_NAMESPACE_ID::int32 te_shu_iu_id() const;
  void set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_te_shu_iu_id() const;
  void _internal_set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_ShuiHuZhuan)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > fish_id_;
  mutable std::atomic<int> _fish_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 te_shu_iu_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_ChangeBulletLevel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_ChangeBulletLevel) */ {
 public:
  inline CMD_C_ChangeBulletLevel() : CMD_C_ChangeBulletLevel(nullptr) {}
  virtual ~CMD_C_ChangeBulletLevel();

  CMD_C_ChangeBulletLevel(const CMD_C_ChangeBulletLevel& from);
  CMD_C_ChangeBulletLevel(CMD_C_ChangeBulletLevel&& from) noexcept
    : CMD_C_ChangeBulletLevel() {
    *this = ::std::move(from);
  }

  inline CMD_C_ChangeBulletLevel& operator=(const CMD_C_ChangeBulletLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_ChangeBulletLevel& operator=(CMD_C_ChangeBulletLevel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_ChangeBulletLevel& default_instance();

  static inline const CMD_C_ChangeBulletLevel* internal_default_instance() {
    return reinterpret_cast<const CMD_C_ChangeBulletLevel*>(
               &_CMD_C_ChangeBulletLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMD_C_ChangeBulletLevel& a, CMD_C_ChangeBulletLevel& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_ChangeBulletLevel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_ChangeBulletLevel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_ChangeBulletLevel* New() const final {
    return CreateMaybeMessage<CMD_C_ChangeBulletLevel>(nullptr);
  }

  CMD_C_ChangeBulletLevel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_ChangeBulletLevel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_ChangeBulletLevel& from);
  void MergeFrom(const CMD_C_ChangeBulletLevel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_ChangeBulletLevel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_ChangeBulletLevel";
  }
  protected:
  explicit CMD_C_ChangeBulletLevel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
    kGunTypeFieldNumber = 2,
    kGunLevelFieldNumber = 3,
  };
  // int32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gun_type = 2;
  void clear_gun_type();
  ::PROTOBUF_NAMESPACE_ID::int32 gun_type() const;
  void set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gun_type() const;
  void _internal_set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 gun_level = 3;
  void clear_gun_level();
  ::PROTOBUF_NAMESPACE_ID::int32 gun_level() const;
  void set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gun_level() const;
  void _internal_set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_ChangeBulletLevel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 gun_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 gun_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class Bullet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Bullet) */ {
 public:
  inline Bullet() : Bullet(nullptr) {}
  virtual ~Bullet();

  Bullet(const Bullet& from);
  Bullet(Bullet&& from) noexcept
    : Bullet() {
    *this = ::std::move(from);
  }

  inline Bullet& operator=(const Bullet& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bullet& operator=(Bullet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Bullet& default_instance();

  static inline const Bullet* internal_default_instance() {
    return reinterpret_cast<const Bullet*>(
               &_Bullet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(Bullet& a, Bullet& b) {
    a.Swap(&b);
  }
  inline void Swap(Bullet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bullet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Bullet* New() const final {
    return CreateMaybeMessage<Bullet>(nullptr);
  }

  Bullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Bullet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Bullet& from);
  void MergeFrom(const Bullet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bullet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Bullet";
  }
  protected:
  explicit Bullet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kBulletKindFieldNumber = 2,
    kIsUseFieldNumber = 3,
    kLevelFieldNumber = 4,
    kTypeFieldNumber = 5,
    kChipsFieldNumber = 6,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bullet_kind = 2;
  void clear_bullet_kind();
  ::PROTOBUF_NAMESPACE_ID::int32 bullet_kind() const;
  void set_bullet_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bullet_kind() const;
  void _internal_set_bullet_kind(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_use = 3;
  void clear_is_use();
  ::PROTOBUF_NAMESPACE_ID::int32 is_use() const;
  void set_is_use(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_use() const;
  void _internal_set_is_use(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 level = 4;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 5;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 chips = 6;
  void clear_chips();
  ::PROTOBUF_NAMESPACE_ID::int32 chips() const;
  void set_chips(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chips() const;
  void _internal_set_chips(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Bullet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 bullet_kind_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_use_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 chips_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_PressShoot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_PressShoot) */ {
 public:
  inline CMD_C_PressShoot() : CMD_C_PressShoot(nullptr) {}
  virtual ~CMD_C_PressShoot();

  CMD_C_PressShoot(const CMD_C_PressShoot& from);
  CMD_C_PressShoot(CMD_C_PressShoot&& from) noexcept
    : CMD_C_PressShoot() {
    *this = ::std::move(from);
  }

  inline CMD_C_PressShoot& operator=(const CMD_C_PressShoot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_PressShoot& operator=(CMD_C_PressShoot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_PressShoot& default_instance();

  static inline const CMD_C_PressShoot* internal_default_instance() {
    return reinterpret_cast<const CMD_C_PressShoot*>(
               &_CMD_C_PressShoot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMD_C_PressShoot& a, CMD_C_PressShoot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_PressShoot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_PressShoot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_PressShoot* New() const final {
    return CreateMaybeMessage<CMD_C_PressShoot>(nullptr);
  }

  CMD_C_PressShoot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_PressShoot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_PressShoot& from);
  void MergeFrom(const CMD_C_PressShoot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_PressShoot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_PressShoot";
  }
  protected:
  explicit CMD_C_PressShoot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBulletFieldNumber = 4,
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kChairIdFieldNumber = 3,
  };
  // .Bullet bullet = 4;
  bool has_bullet() const;
  private:
  bool _internal_has_bullet() const;
  public:
  void clear_bullet();
  const ::Bullet& bullet() const;
  ::Bullet* release_bullet();
  ::Bullet* mutable_bullet();
  void set_allocated_bullet(::Bullet* bullet);
  private:
  const ::Bullet& _internal_bullet() const;
  ::Bullet* _internal_mutable_bullet();
  public:
  void unsafe_arena_set_allocated_bullet(
      ::Bullet* bullet);
  ::Bullet* unsafe_arena_release_bullet();

  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // int32 chair_id = 3;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_PressShoot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Bullet* bullet_;
  float x_;
  float y_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// -------------------------------------------------------------------

class CMD_C_HitedFish PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD_C_HitedFish) */ {
 public:
  inline CMD_C_HitedFish() : CMD_C_HitedFish(nullptr) {}
  virtual ~CMD_C_HitedFish();

  CMD_C_HitedFish(const CMD_C_HitedFish& from);
  CMD_C_HitedFish(CMD_C_HitedFish&& from) noexcept
    : CMD_C_HitedFish() {
    *this = ::std::move(from);
  }

  inline CMD_C_HitedFish& operator=(const CMD_C_HitedFish& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMD_C_HitedFish& operator=(CMD_C_HitedFish&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMD_C_HitedFish& default_instance();

  static inline const CMD_C_HitedFish* internal_default_instance() {
    return reinterpret_cast<const CMD_C_HitedFish*>(
               &_CMD_C_HitedFish_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMD_C_HitedFish& a, CMD_C_HitedFish& b) {
    a.Swap(&b);
  }
  inline void Swap(CMD_C_HitedFish* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMD_C_HitedFish* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMD_C_HitedFish* New() const final {
    return CreateMaybeMessage<CMD_C_HitedFish>(nullptr);
  }

  CMD_C_HitedFish* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMD_C_HitedFish>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMD_C_HitedFish& from);
  void MergeFrom(const CMD_C_HitedFish& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMD_C_HitedFish* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD_C_HitedFish";
  }
  protected:
  explicit CMD_C_HitedFish(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LTBY_2eproto);
    return ::descriptor_table_LTBY_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHitFishFieldNumber = 3,
    kBulletFieldNumber = 1,
    kChairIdFieldNumber = 2,
  };
  // repeated int32 hit_fish = 3;
  int hit_fish_size() const;
  private:
  int _internal_hit_fish_size() const;
  public:
  void clear_hit_fish();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hit_fish(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_hit_fish() const;
  void _internal_add_hit_fish(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_hit_fish();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 hit_fish(int index) const;
  void set_hit_fish(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_hit_fish(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      hit_fish() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_hit_fish();

  // .Bullet bullet = 1;
  bool has_bullet() const;
  private:
  bool _internal_has_bullet() const;
  public:
  void clear_bullet();
  const ::Bullet& bullet() const;
  ::Bullet* release_bullet();
  ::Bullet* mutable_bullet();
  void set_allocated_bullet(::Bullet* bullet);
  private:
  const ::Bullet& _internal_bullet() const;
  ::Bullet* _internal_mutable_bullet();
  public:
  void unsafe_arena_set_allocated_bullet(
      ::Bullet* bullet);
  ::Bullet* unsafe_arena_release_bullet();

  // int32 chair_id = 2;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD_C_HitedFish)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > hit_fish_;
  mutable std::atomic<int> _hit_fish_cached_byte_size_;
  ::Bullet* bullet_;
  ::PROTOBUF_NAMESPACE_ID::int32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LTBY_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMD_S_RobotShoot

// int32 chair_id = 1;
inline void CMD_S_RobotShoot::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_RobotShoot.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_RobotShoot::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_RobotShoot::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_RobotShoot.chair_id)
}

// int32 level = 2;
inline void CMD_S_RobotShoot::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::level() const {
  // @@protoc_insertion_point(field_get:CMD_S_RobotShoot.level)
  return _internal_level();
}
inline void CMD_S_RobotShoot::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void CMD_S_RobotShoot::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMD_S_RobotShoot.level)
}

// int32 type = 3;
inline void CMD_S_RobotShoot::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::type() const {
  // @@protoc_insertion_point(field_get:CMD_S_RobotShoot.type)
  return _internal_type();
}
inline void CMD_S_RobotShoot::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void CMD_S_RobotShoot::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMD_S_RobotShoot.type)
}

// int32 is_lock = 4;
inline void CMD_S_RobotShoot::clear_is_lock() {
  is_lock_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::_internal_is_lock() const {
  return is_lock_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_RobotShoot::is_lock() const {
  // @@protoc_insertion_point(field_get:CMD_S_RobotShoot.is_lock)
  return _internal_is_lock();
}
inline void CMD_S_RobotShoot::_internal_set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_lock_ = value;
}
inline void CMD_S_RobotShoot::set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_lock(value);
  // @@protoc_insertion_point(field_set:CMD_S_RobotShoot.is_lock)
}

// -------------------------------------------------------------------

// CMD_S_RobotList

// repeated bool is_robot = 1;
inline int CMD_S_RobotList::_internal_is_robot_size() const {
  return is_robot_.size();
}
inline int CMD_S_RobotList::is_robot_size() const {
  return _internal_is_robot_size();
}
inline void CMD_S_RobotList::clear_is_robot() {
  is_robot_.Clear();
}
inline bool CMD_S_RobotList::_internal_is_robot(int index) const {
  return is_robot_.Get(index);
}
inline bool CMD_S_RobotList::is_robot(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_RobotList.is_robot)
  return _internal_is_robot(index);
}
inline void CMD_S_RobotList::set_is_robot(int index, bool value) {
  is_robot_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_RobotList.is_robot)
}
inline void CMD_S_RobotList::_internal_add_is_robot(bool value) {
  is_robot_.Add(value);
}
inline void CMD_S_RobotList::add_is_robot(bool value) {
  _internal_add_is_robot(value);
  // @@protoc_insertion_point(field_add:CMD_S_RobotList.is_robot)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
CMD_S_RobotList::_internal_is_robot() const {
  return is_robot_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
CMD_S_RobotList::is_robot() const {
  // @@protoc_insertion_point(field_list:CMD_S_RobotList.is_robot)
  return _internal_is_robot();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
CMD_S_RobotList::_internal_mutable_is_robot() {
  return &is_robot_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
CMD_S_RobotList::mutable_is_robot() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_RobotList.is_robot)
  return _internal_mutable_is_robot();
}

// -------------------------------------------------------------------

// CMD_S_PlayerLock

// int32 chair_id = 1;
inline void CMD_S_PlayerLock::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerLock::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerLock::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerLock.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_PlayerLock::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_PlayerLock::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerLock.chair_id)
}

// int32 fish_id = 2;
inline void CMD_S_PlayerLock::clear_fish_id() {
  fish_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerLock::_internal_fish_id() const {
  return fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerLock::fish_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerLock.fish_id)
  return _internal_fish_id();
}
inline void CMD_S_PlayerLock::_internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fish_id_ = value;
}
inline void CMD_S_PlayerLock::set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fish_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerLock.fish_id)
}

// -------------------------------------------------------------------

// CMD_S_ShootLK

// int32 chair_id = 1;
inline void CMD_S_ShootLK::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_ShootLK::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_ShootLK::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.chair_id)
}

// int32 id = 2;
inline void CMD_S_ShootLK::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::id() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.id)
  return _internal_id();
}
inline void CMD_S_ShootLK::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void CMD_S_ShootLK::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.id)
}

// int32 score = 3;
inline void CMD_S_ShootLK::clear_score() {
  score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::score() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.score)
  return _internal_score();
}
inline void CMD_S_ShootLK::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  score_ = value;
}
inline void CMD_S_ShootLK::set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.score)
}

// int32 multiple = 4;
inline void CMD_S_ShootLK::clear_multiple() {
  multiple_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::_internal_multiple() const {
  return multiple_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::multiple() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.multiple)
  return _internal_multiple();
}
inline void CMD_S_ShootLK::_internal_set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  multiple_ = value;
}
inline void CMD_S_ShootLK::set_multiple(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_multiple(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.multiple)
}

// bool is_deaded = 5;
inline void CMD_S_ShootLK::clear_is_deaded() {
  is_deaded_ = false;
}
inline bool CMD_S_ShootLK::_internal_is_deaded() const {
  return is_deaded_;
}
inline bool CMD_S_ShootLK::is_deaded() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.is_deaded)
  return _internal_is_deaded();
}
inline void CMD_S_ShootLK::_internal_set_is_deaded(bool value) {
  
  is_deaded_ = value;
}
inline void CMD_S_ShootLK::set_is_deaded(bool value) {
  _internal_set_is_deaded(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.is_deaded)
}

// int32 jbp_stage = 6;
inline void CMD_S_ShootLK::clear_jbp_stage() {
  jbp_stage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::_internal_jbp_stage() const {
  return jbp_stage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::jbp_stage() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.jbp_stage)
  return _internal_jbp_stage();
}
inline void CMD_S_ShootLK::_internal_set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  jbp_stage_ = value;
}
inline void CMD_S_ShootLK::set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_jbp_stage(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.jbp_stage)
}

// int32 cur_lk_score = 7;
inline void CMD_S_ShootLK::clear_cur_lk_score() {
  cur_lk_score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::_internal_cur_lk_score() const {
  return cur_lk_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShootLK::cur_lk_score() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.cur_lk_score)
  return _internal_cur_lk_score();
}
inline void CMD_S_ShootLK::_internal_set_cur_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_lk_score_ = value;
}
inline void CMD_S_ShootLK::set_cur_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_lk_score(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.cur_lk_score)
}

// int64 cur_player_score = 8;
inline void CMD_S_ShootLK::clear_cur_player_score() {
  cur_player_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_ShootLK::_internal_cur_player_score() const {
  return cur_player_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_ShootLK::cur_player_score() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShootLK.cur_player_score)
  return _internal_cur_player_score();
}
inline void CMD_S_ShootLK::_internal_set_cur_player_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  cur_player_score_ = value;
}
inline void CMD_S_ShootLK::set_cur_player_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_cur_player_score(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShootLK.cur_player_score)
}

// -------------------------------------------------------------------

// CMD_S_JuBuZhaDan

// int32 chair_id = 1;
inline void CMD_S_JuBuZhaDan::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_JuBuZhaDan::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_JuBuZhaDan::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_JuBuZhaDan.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_JuBuZhaDan::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_JuBuZhaDan::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_JuBuZhaDan.chair_id)
}

// int32 fish_id = 2;
inline void CMD_S_JuBuZhaDan::clear_fish_id() {
  fish_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_JuBuZhaDan::_internal_fish_id() const {
  return fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_JuBuZhaDan::fish_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_JuBuZhaDan.fish_id)
  return _internal_fish_id();
}
inline void CMD_S_JuBuZhaDan::_internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fish_id_ = value;
}
inline void CMD_S_JuBuZhaDan::set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fish_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_JuBuZhaDan.fish_id)
}

// -------------------------------------------------------------------

// CMD_S_YiWangDaJin

// int32 chair_id = 1;
inline void CMD_S_YiWangDaJin::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YiWangDaJin::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YiWangDaJin::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_YiWangDaJin.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_YiWangDaJin::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_YiWangDaJin::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_YiWangDaJin.chair_id)
}

// int32 bullet_id = 2;
inline void CMD_S_YiWangDaJin::clear_bullet_id() {
  bullet_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YiWangDaJin::_internal_bullet_id() const {
  return bullet_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YiWangDaJin::bullet_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_YiWangDaJin.bullet_id)
  return _internal_bullet_id();
}
inline void CMD_S_YiWangDaJin::_internal_set_bullet_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bullet_id_ = value;
}
inline void CMD_S_YiWangDaJin::set_bullet_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bullet_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_YiWangDaJin.bullet_id)
}

// -------------------------------------------------------------------

// CMD_S_TongLeiZhaDan

// int32 chair_id = 1;
inline void CMD_S_TongLeiZhaDan::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_TongLeiZhaDan::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_TongLeiZhaDan::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_TongLeiZhaDan.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_TongLeiZhaDan::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_TongLeiZhaDan::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_TongLeiZhaDan.chair_id)
}

// int32 fish_id = 2;
inline void CMD_S_TongLeiZhaDan::clear_fish_id() {
  fish_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_TongLeiZhaDan::_internal_fish_id() const {
  return fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_TongLeiZhaDan::fish_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_TongLeiZhaDan.fish_id)
  return _internal_fish_id();
}
inline void CMD_S_TongLeiZhaDan::_internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fish_id_ = value;
}
inline void CMD_S_TongLeiZhaDan::set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fish_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_TongLeiZhaDan.fish_id)
}

// int32 kind = 3;
inline void CMD_S_TongLeiZhaDan::clear_kind() {
  kind_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_TongLeiZhaDan::_internal_kind() const {
  return kind_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_TongLeiZhaDan::kind() const {
  // @@protoc_insertion_point(field_get:CMD_S_TongLeiZhaDan.kind)
  return _internal_kind();
}
inline void CMD_S_TongLeiZhaDan::_internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_ = value;
}
inline void CMD_S_TongLeiZhaDan::set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:CMD_S_TongLeiZhaDan.kind)
}

// -------------------------------------------------------------------

// LoadFish

// int32 kind = 1;
inline void LoadFish::clear_kind() {
  kind_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_kind() const {
  return kind_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::kind() const {
  // @@protoc_insertion_point(field_get:LoadFish.kind)
  return _internal_kind();
}
inline void LoadFish::_internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_ = value;
}
inline void LoadFish::set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:LoadFish.kind)
}

// int32 id = 2;
inline void LoadFish::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::id() const {
  // @@protoc_insertion_point(field_get:LoadFish.id)
  return _internal_id();
}
inline void LoadFish::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void LoadFish::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:LoadFish.id)
}

// int32 create_time = 3;
inline void LoadFish::clear_create_time() {
  create_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_create_time() const {
  return create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::create_time() const {
  // @@protoc_insertion_point(field_get:LoadFish.create_time)
  return _internal_create_time();
}
inline void LoadFish::_internal_set_create_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  create_time_ = value;
}
inline void LoadFish::set_create_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_create_time(value);
  // @@protoc_insertion_point(field_set:LoadFish.create_time)
}

// int32 continue_time = 4;
inline void LoadFish::clear_continue_time() {
  continue_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_continue_time() const {
  return continue_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::continue_time() const {
  // @@protoc_insertion_point(field_get:LoadFish.continue_time)
  return _internal_continue_time();
}
inline void LoadFish::_internal_set_continue_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  continue_time_ = value;
}
inline void LoadFish::set_continue_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_continue_time(value);
  // @@protoc_insertion_point(field_set:LoadFish.continue_time)
}

// int32 road = 5;
inline void LoadFish::clear_road() {
  road_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_road() const {
  return road_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::road() const {
  // @@protoc_insertion_point(field_get:LoadFish.road)
  return _internal_road();
}
inline void LoadFish::_internal_set_road(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  road_ = value;
}
inline void LoadFish::set_road(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_road(value);
  // @@protoc_insertion_point(field_set:LoadFish.road)
}

// int32 group_id = 6;
inline void LoadFish::clear_group_id() {
  group_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_group_id() const {
  return group_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::group_id() const {
  // @@protoc_insertion_point(field_get:LoadFish.group_id)
  return _internal_group_id();
}
inline void LoadFish::_internal_set_group_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  group_id_ = value;
}
inline void LoadFish::set_group_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_group_id(value);
  // @@protoc_insertion_point(field_set:LoadFish.group_id)
}

// int32 group_no = 7;
inline void LoadFish::clear_group_no() {
  group_no_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_group_no() const {
  return group_no_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::group_no() const {
  // @@protoc_insertion_point(field_get:LoadFish.group_no)
  return _internal_group_no();
}
inline void LoadFish::_internal_set_group_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  group_no_ = value;
}
inline void LoadFish::set_group_no(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_group_no(value);
  // @@protoc_insertion_point(field_set:LoadFish.group_no)
}

// int32 now_time = 8;
inline void LoadFish::clear_now_time() {
  now_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_now_time() const {
  return now_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::now_time() const {
  // @@protoc_insertion_point(field_get:LoadFish.now_time)
  return _internal_now_time();
}
inline void LoadFish::_internal_set_now_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  now_time_ = value;
}
inline void LoadFish::set_now_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_now_time(value);
  // @@protoc_insertion_point(field_set:LoadFish.now_time)
}

// int32 mul = 9;
inline void LoadFish::clear_mul() {
  mul_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_mul() const {
  return mul_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::mul() const {
  // @@protoc_insertion_point(field_get:LoadFish.mul)
  return _internal_mul();
}
inline void LoadFish::_internal_set_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mul_ = value;
}
inline void LoadFish::set_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mul(value);
  // @@protoc_insertion_point(field_set:LoadFish.mul)
}

// int32 stage = 10;
inline void LoadFish::clear_stage() {
  stage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_stage() const {
  return stage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::stage() const {
  // @@protoc_insertion_point(field_get:LoadFish.stage)
  return _internal_stage();
}
inline void LoadFish::_internal_set_stage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  stage_ = value;
}
inline void LoadFish::set_stage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_stage(value);
  // @@protoc_insertion_point(field_set:LoadFish.stage)
}

// int32 is_aced = 11;
inline void LoadFish::clear_is_aced() {
  is_aced_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_is_aced() const {
  return is_aced_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::is_aced() const {
  // @@protoc_insertion_point(field_get:LoadFish.is_aced)
  return _internal_is_aced();
}
inline void LoadFish::_internal_set_is_aced(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_aced_ = value;
}
inline void LoadFish::set_is_aced(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_aced(value);
  // @@protoc_insertion_point(field_set:LoadFish.is_aced)
}

// int32 jbp_stage = 12;
inline void LoadFish::clear_jbp_stage() {
  jbp_stage_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_jbp_stage() const {
  return jbp_stage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::jbp_stage() const {
  // @@protoc_insertion_point(field_get:LoadFish.jbp_stage)
  return _internal_jbp_stage();
}
inline void LoadFish::_internal_set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  jbp_stage_ = value;
}
inline void LoadFish::set_jbp_stage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_jbp_stage(value);
  // @@protoc_insertion_point(field_set:LoadFish.jbp_stage)
}

// int32 lk_mul = 13;
inline void LoadFish::clear_lk_mul() {
  lk_mul_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_lk_mul() const {
  return lk_mul_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::lk_mul() const {
  // @@protoc_insertion_point(field_get:LoadFish.lk_mul)
  return _internal_lk_mul();
}
inline void LoadFish::_internal_set_lk_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lk_mul_ = value;
}
inline void LoadFish::set_lk_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lk_mul(value);
  // @@protoc_insertion_point(field_set:LoadFish.lk_mul)
}

// int32 lk_score = 14;
inline void LoadFish::clear_lk_score() {
  lk_score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::_internal_lk_score() const {
  return lk_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 LoadFish::lk_score() const {
  // @@protoc_insertion_point(field_get:LoadFish.lk_score)
  return _internal_lk_score();
}
inline void LoadFish::_internal_set_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lk_score_ = value;
}
inline void LoadFish::set_lk_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lk_score(value);
  // @@protoc_insertion_point(field_set:LoadFish.lk_score)
}

// -------------------------------------------------------------------

// CMD_S_YuWang

// int32 chair_id = 1;
inline void CMD_S_YuWang::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YuWang::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YuWang::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_YuWang.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_YuWang::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_YuWang::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_YuWang.chair_id)
}

// int32 kind = 2;
inline void CMD_S_YuWang::clear_kind() {
  kind_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YuWang::_internal_kind() const {
  return kind_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YuWang::kind() const {
  // @@protoc_insertion_point(field_get:CMD_S_YuWang.kind)
  return _internal_kind();
}
inline void CMD_S_YuWang::_internal_set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  kind_ = value;
}
inline void CMD_S_YuWang::set_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:CMD_S_YuWang.kind)
}

// int32 yu_wang_id = 3;
inline void CMD_S_YuWang::clear_yu_wang_id() {
  yu_wang_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YuWang::_internal_yu_wang_id() const {
  return yu_wang_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_YuWang::yu_wang_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_YuWang.yu_wang_id)
  return _internal_yu_wang_id();
}
inline void CMD_S_YuWang::_internal_set_yu_wang_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  yu_wang_id_ = value;
}
inline void CMD_S_YuWang::set_yu_wang_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_yu_wang_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_YuWang.yu_wang_id)
}

// repeated .LoadFish fish_id = 4;
inline int CMD_S_YuWang::_internal_fish_id_size() const {
  return fish_id_.size();
}
inline int CMD_S_YuWang::fish_id_size() const {
  return _internal_fish_id_size();
}
inline void CMD_S_YuWang::clear_fish_id() {
  fish_id_.Clear();
}
inline ::LoadFish* CMD_S_YuWang::mutable_fish_id(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_S_YuWang.fish_id)
  return fish_id_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
CMD_S_YuWang::mutable_fish_id() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_YuWang.fish_id)
  return &fish_id_;
}
inline const ::LoadFish& CMD_S_YuWang::_internal_fish_id(int index) const {
  return fish_id_.Get(index);
}
inline const ::LoadFish& CMD_S_YuWang::fish_id(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_YuWang.fish_id)
  return _internal_fish_id(index);
}
inline ::LoadFish* CMD_S_YuWang::_internal_add_fish_id() {
  return fish_id_.Add();
}
inline ::LoadFish* CMD_S_YuWang::add_fish_id() {
  // @@protoc_insertion_point(field_add:CMD_S_YuWang.fish_id)
  return _internal_add_fish_id();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
CMD_S_YuWang::fish_id() const {
  // @@protoc_insertion_point(field_list:CMD_S_YuWang.fish_id)
  return fish_id_;
}

// -------------------------------------------------------------------

// CMD_S_DaSiXi

// int32 id = 1;
inline void CMD_S_DaSiXi::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaSiXi::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaSiXi::id() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaSiXi.id)
  return _internal_id();
}
inline void CMD_S_DaSiXi::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void CMD_S_DaSiXi::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaSiXi.id)
}

// int32 chair_id = 2;
inline void CMD_S_DaSiXi::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaSiXi::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaSiXi::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaSiXi.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_DaSiXi::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_DaSiXi::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaSiXi.chair_id)
}

// int32 score = 3;
inline void CMD_S_DaSiXi::clear_score() {
  score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaSiXi::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaSiXi::score() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaSiXi.score)
  return _internal_score();
}
inline void CMD_S_DaSiXi::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  score_ = value;
}
inline void CMD_S_DaSiXi::set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaSiXi.score)
}

// -------------------------------------------------------------------

// CMD_S_DaJiangZhangYu

// int32 id = 1;
inline void CMD_S_DaJiangZhangYu::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::id() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaJiangZhangYu.id)
  return _internal_id();
}
inline void CMD_S_DaJiangZhangYu::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void CMD_S_DaJiangZhangYu::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaJiangZhangYu.id)
}

// int32 chair_id = 2;
inline void CMD_S_DaJiangZhangYu::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaJiangZhangYu.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_DaJiangZhangYu::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_DaJiangZhangYu::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaJiangZhangYu.chair_id)
}

// int32 odd1 = 3;
inline void CMD_S_DaJiangZhangYu::clear_odd1() {
  odd1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::_internal_odd1() const {
  return odd1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::odd1() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaJiangZhangYu.odd1)
  return _internal_odd1();
}
inline void CMD_S_DaJiangZhangYu::_internal_set_odd1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  odd1_ = value;
}
inline void CMD_S_DaJiangZhangYu::set_odd1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_odd1(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaJiangZhangYu.odd1)
}

// int32 odd2 = 4;
inline void CMD_S_DaJiangZhangYu::clear_odd2() {
  odd2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::_internal_odd2() const {
  return odd2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::odd2() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaJiangZhangYu.odd2)
  return _internal_odd2();
}
inline void CMD_S_DaJiangZhangYu::_internal_set_odd2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  odd2_ = value;
}
inline void CMD_S_DaJiangZhangYu::set_odd2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_odd2(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaJiangZhangYu.odd2)
}

// int32 odd3 = 5;
inline void CMD_S_DaJiangZhangYu::clear_odd3() {
  odd3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::_internal_odd3() const {
  return odd3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_DaJiangZhangYu::odd3() const {
  // @@protoc_insertion_point(field_get:CMD_S_DaJiangZhangYu.odd3)
  return _internal_odd3();
}
inline void CMD_S_DaJiangZhangYu::_internal_set_odd3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  odd3_ = value;
}
inline void CMD_S_DaJiangZhangYu::set_odd3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_odd3(value);
  // @@protoc_insertion_point(field_set:CMD_S_DaJiangZhangYu.odd3)
}

// -------------------------------------------------------------------

// CMD_S_ZhongYiTang

// int32 chair_id = 1;
inline void CMD_S_ZhongYiTang::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ZhongYiTang::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ZhongYiTang::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_ZhongYiTang.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_ZhongYiTang::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_ZhongYiTang::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_ZhongYiTang.chair_id)
}

// int32 add_time = 2;
inline void CMD_S_ZhongYiTang::clear_add_time() {
  add_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ZhongYiTang::_internal_add_time() const {
  return add_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ZhongYiTang::add_time() const {
  // @@protoc_insertion_point(field_get:CMD_S_ZhongYiTang.add_time)
  return _internal_add_time();
}
inline void CMD_S_ZhongYiTang::_internal_set_add_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  add_time_ = value;
}
inline void CMD_S_ZhongYiTang::set_add_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_add_time(value);
  // @@protoc_insertion_point(field_set:CMD_S_ZhongYiTang.add_time)
}

// int32 add_mul = 3;
inline void CMD_S_ZhongYiTang::clear_add_mul() {
  add_mul_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ZhongYiTang::_internal_add_mul() const {
  return add_mul_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ZhongYiTang::add_mul() const {
  // @@protoc_insertion_point(field_get:CMD_S_ZhongYiTang.add_mul)
  return _internal_add_mul();
}
inline void CMD_S_ZhongYiTang::_internal_set_add_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  add_mul_ = value;
}
inline void CMD_S_ZhongYiTang::set_add_mul(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_add_mul(value);
  // @@protoc_insertion_point(field_set:CMD_S_ZhongYiTang.add_mul)
}

// -------------------------------------------------------------------

// CMD_S_ShuiHuZhuan

// int32 chair_id = 1;
inline void CMD_S_ShuiHuZhuan::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShuiHuZhuan::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShuiHuZhuan::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_ShuiHuZhuan.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_ShuiHuZhuan::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_ShuiHuZhuan::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_ShuiHuZhuan.chair_id)
}

// repeated int32 fish_id = 2;
inline int CMD_S_ShuiHuZhuan::_internal_fish_id_size() const {
  return fish_id_.size();
}
inline int CMD_S_ShuiHuZhuan::fish_id_size() const {
  return _internal_fish_id_size();
}
inline void CMD_S_ShuiHuZhuan::clear_fish_id() {
  fish_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShuiHuZhuan::_internal_fish_id(int index) const {
  return fish_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShuiHuZhuan::fish_id(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_ShuiHuZhuan.fish_id)
  return _internal_fish_id(index);
}
inline void CMD_S_ShuiHuZhuan::set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_ShuiHuZhuan.fish_id)
}
inline void CMD_S_ShuiHuZhuan::_internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Add(value);
}
inline void CMD_S_ShuiHuZhuan::add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_fish_id(value);
  // @@protoc_insertion_point(field_add:CMD_S_ShuiHuZhuan.fish_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_ShuiHuZhuan::_internal_fish_id() const {
  return fish_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_ShuiHuZhuan::fish_id() const {
  // @@protoc_insertion_point(field_list:CMD_S_ShuiHuZhuan.fish_id)
  return _internal_fish_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_ShuiHuZhuan::_internal_mutable_fish_id() {
  return &fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_ShuiHuZhuan::mutable_fish_id() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_ShuiHuZhuan.fish_id)
  return _internal_mutable_fish_id();
}

// repeated int32 fish_score = 3;
inline int CMD_S_ShuiHuZhuan::_internal_fish_score_size() const {
  return fish_score_.size();
}
inline int CMD_S_ShuiHuZhuan::fish_score_size() const {
  return _internal_fish_score_size();
}
inline void CMD_S_ShuiHuZhuan::clear_fish_score() {
  fish_score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShuiHuZhuan::_internal_fish_score(int index) const {
  return fish_score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ShuiHuZhuan::fish_score(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_ShuiHuZhuan.fish_score)
  return _internal_fish_score(index);
}
inline void CMD_S_ShuiHuZhuan::set_fish_score(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_score_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_ShuiHuZhuan.fish_score)
}
inline void CMD_S_ShuiHuZhuan::_internal_add_fish_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_score_.Add(value);
}
inline void CMD_S_ShuiHuZhuan::add_fish_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_fish_score(value);
  // @@protoc_insertion_point(field_add:CMD_S_ShuiHuZhuan.fish_score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_ShuiHuZhuan::_internal_fish_score() const {
  return fish_score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_ShuiHuZhuan::fish_score() const {
  // @@protoc_insertion_point(field_list:CMD_S_ShuiHuZhuan.fish_score)
  return _internal_fish_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_ShuiHuZhuan::_internal_mutable_fish_score() {
  return &fish_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_ShuiHuZhuan::mutable_fish_score() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_ShuiHuZhuan.fish_score)
  return _internal_mutable_fish_score();
}

// -------------------------------------------------------------------

// CMD_S_ChangeBulletLevel

// int32 chair_id = 1;
inline void CMD_S_ChangeBulletLevel::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ChangeBulletLevel::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ChangeBulletLevel::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_ChangeBulletLevel.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_ChangeBulletLevel::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_ChangeBulletLevel::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_ChangeBulletLevel.chair_id)
}

// int32 gun_type = 2;
inline void CMD_S_ChangeBulletLevel::clear_gun_type() {
  gun_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ChangeBulletLevel::_internal_gun_type() const {
  return gun_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ChangeBulletLevel::gun_type() const {
  // @@protoc_insertion_point(field_get:CMD_S_ChangeBulletLevel.gun_type)
  return _internal_gun_type();
}
inline void CMD_S_ChangeBulletLevel::_internal_set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gun_type_ = value;
}
inline void CMD_S_ChangeBulletLevel::set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gun_type(value);
  // @@protoc_insertion_point(field_set:CMD_S_ChangeBulletLevel.gun_type)
}

// int32 gun_level = 3;
inline void CMD_S_ChangeBulletLevel::clear_gun_level() {
  gun_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ChangeBulletLevel::_internal_gun_level() const {
  return gun_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_ChangeBulletLevel::gun_level() const {
  // @@protoc_insertion_point(field_get:CMD_S_ChangeBulletLevel.gun_level)
  return _internal_gun_level();
}
inline void CMD_S_ChangeBulletLevel::_internal_set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gun_level_ = value;
}
inline void CMD_S_ChangeBulletLevel::set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gun_level(value);
  // @@protoc_insertion_point(field_set:CMD_S_ChangeBulletLevel.gun_level)
}

// -------------------------------------------------------------------

// CMD_S_CONFIG

// repeated int32 bullet_score = 1;
inline int CMD_S_CONFIG::_internal_bullet_score_size() const {
  return bullet_score_.size();
}
inline int CMD_S_CONFIG::bullet_score_size() const {
  return _internal_bullet_score_size();
}
inline void CMD_S_CONFIG::clear_bullet_score() {
  bullet_score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_CONFIG::_internal_bullet_score(int index) const {
  return bullet_score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_CONFIG::bullet_score(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_CONFIG.bullet_score)
  return _internal_bullet_score(index);
}
inline void CMD_S_CONFIG::set_bullet_score(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bullet_score_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_CONFIG.bullet_score)
}
inline void CMD_S_CONFIG::_internal_add_bullet_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bullet_score_.Add(value);
}
inline void CMD_S_CONFIG::add_bullet_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bullet_score(value);
  // @@protoc_insertion_point(field_add:CMD_S_CONFIG.bullet_score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_CONFIG::_internal_bullet_score() const {
  return bullet_score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_CONFIG::bullet_score() const {
  // @@protoc_insertion_point(field_list:CMD_S_CONFIG.bullet_score)
  return _internal_bullet_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_CONFIG::_internal_mutable_bullet_score() {
  return &bullet_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_CONFIG::mutable_bullet_score() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_CONFIG.bullet_score)
  return _internal_mutable_bullet_score();
}

// int32 background_picture_id = 2;
inline void CMD_S_CONFIG::clear_background_picture_id() {
  background_picture_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_CONFIG::_internal_background_picture_id() const {
  return background_picture_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_CONFIG::background_picture_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_CONFIG.background_picture_id)
  return _internal_background_picture_id();
}
inline void CMD_S_CONFIG::_internal_set_background_picture_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  background_picture_id_ = value;
}
inline void CMD_S_CONFIG::set_background_picture_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_background_picture_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_CONFIG.background_picture_id)
}

// repeated int32 player_lock_fish_id = 3;
inline int CMD_S_CONFIG::_internal_player_lock_fish_id_size() const {
  return player_lock_fish_id_.size();
}
inline int CMD_S_CONFIG::player_lock_fish_id_size() const {
  return _internal_player_lock_fish_id_size();
}
inline void CMD_S_CONFIG::clear_player_lock_fish_id() {
  player_lock_fish_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_CONFIG::_internal_player_lock_fish_id(int index) const {
  return player_lock_fish_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_CONFIG::player_lock_fish_id(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_CONFIG.player_lock_fish_id)
  return _internal_player_lock_fish_id(index);
}
inline void CMD_S_CONFIG::set_player_lock_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  player_lock_fish_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_CONFIG.player_lock_fish_id)
}
inline void CMD_S_CONFIG::_internal_add_player_lock_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  player_lock_fish_id_.Add(value);
}
inline void CMD_S_CONFIG::add_player_lock_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_player_lock_fish_id(value);
  // @@protoc_insertion_point(field_add:CMD_S_CONFIG.player_lock_fish_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_CONFIG::_internal_player_lock_fish_id() const {
  return player_lock_fish_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_CONFIG::player_lock_fish_id() const {
  // @@protoc_insertion_point(field_list:CMD_S_CONFIG.player_lock_fish_id)
  return _internal_player_lock_fish_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_CONFIG::_internal_mutable_player_lock_fish_id() {
  return &player_lock_fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_CONFIG::mutable_player_lock_fish_id() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_CONFIG.player_lock_fish_id)
  return _internal_mutable_player_lock_fish_id();
}

// repeated int64 player_cur_score = 4;
inline int CMD_S_CONFIG::_internal_player_cur_score_size() const {
  return player_cur_score_.size();
}
inline int CMD_S_CONFIG::player_cur_score_size() const {
  return _internal_player_cur_score_size();
}
inline void CMD_S_CONFIG::clear_player_cur_score() {
  player_cur_score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_CONFIG::_internal_player_cur_score(int index) const {
  return player_cur_score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_CONFIG::player_cur_score(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_CONFIG.player_cur_score)
  return _internal_player_cur_score(index);
}
inline void CMD_S_CONFIG::set_player_cur_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_cur_score_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_CONFIG.player_cur_score)
}
inline void CMD_S_CONFIG::_internal_add_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_cur_score_.Add(value);
}
inline void CMD_S_CONFIG::add_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_player_cur_score(value);
  // @@protoc_insertion_point(field_add:CMD_S_CONFIG.player_cur_score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
CMD_S_CONFIG::_internal_player_cur_score() const {
  return player_cur_score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
CMD_S_CONFIG::player_cur_score() const {
  // @@protoc_insertion_point(field_list:CMD_S_CONFIG.player_cur_score)
  return _internal_player_cur_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
CMD_S_CONFIG::_internal_mutable_player_cur_score() {
  return &player_cur_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
CMD_S_CONFIG::mutable_player_cur_score() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_CONFIG.player_cur_score)
  return _internal_mutable_player_cur_score();
}

// -------------------------------------------------------------------

// CMD_S_PlayerGunLevel

// repeated int32 gun_level = 1;
inline int CMD_S_PlayerGunLevel::_internal_gun_level_size() const {
  return gun_level_.size();
}
inline int CMD_S_PlayerGunLevel::gun_level_size() const {
  return _internal_gun_level_size();
}
inline void CMD_S_PlayerGunLevel::clear_gun_level() {
  gun_level_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerGunLevel::_internal_gun_level(int index) const {
  return gun_level_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerGunLevel::gun_level(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerGunLevel.gun_level)
  return _internal_gun_level(index);
}
inline void CMD_S_PlayerGunLevel::set_gun_level(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  gun_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerGunLevel.gun_level)
}
inline void CMD_S_PlayerGunLevel::_internal_add_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  gun_level_.Add(value);
}
inline void CMD_S_PlayerGunLevel::add_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_gun_level(value);
  // @@protoc_insertion_point(field_add:CMD_S_PlayerGunLevel.gun_level)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_PlayerGunLevel::_internal_gun_level() const {
  return gun_level_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_PlayerGunLevel::gun_level() const {
  // @@protoc_insertion_point(field_list:CMD_S_PlayerGunLevel.gun_level)
  return _internal_gun_level();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_PlayerGunLevel::_internal_mutable_gun_level() {
  return &gun_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_PlayerGunLevel::mutable_gun_level() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_PlayerGunLevel.gun_level)
  return _internal_mutable_gun_level();
}

// repeated int32 gun_type = 2;
inline int CMD_S_PlayerGunLevel::_internal_gun_type_size() const {
  return gun_type_.size();
}
inline int CMD_S_PlayerGunLevel::gun_type_size() const {
  return _internal_gun_type_size();
}
inline void CMD_S_PlayerGunLevel::clear_gun_type() {
  gun_type_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerGunLevel::_internal_gun_type(int index) const {
  return gun_type_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerGunLevel::gun_type(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerGunLevel.gun_type)
  return _internal_gun_type(index);
}
inline void CMD_S_PlayerGunLevel::set_gun_type(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  gun_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerGunLevel.gun_type)
}
inline void CMD_S_PlayerGunLevel::_internal_add_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  gun_type_.Add(value);
}
inline void CMD_S_PlayerGunLevel::add_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_gun_type(value);
  // @@protoc_insertion_point(field_add:CMD_S_PlayerGunLevel.gun_type)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_PlayerGunLevel::_internal_gun_type() const {
  return gun_type_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_S_PlayerGunLevel::gun_type() const {
  // @@protoc_insertion_point(field_list:CMD_S_PlayerGunLevel.gun_type)
  return _internal_gun_type();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_PlayerGunLevel::_internal_mutable_gun_type() {
  return &gun_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_S_PlayerGunLevel::mutable_gun_type() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_PlayerGunLevel.gun_type)
  return _internal_mutable_gun_type();
}

// -------------------------------------------------------------------

// CMD_S_AddFish

// repeated .LoadFish load_fish = 1;
inline int CMD_S_AddFish::_internal_load_fish_size() const {
  return load_fish_.size();
}
inline int CMD_S_AddFish::load_fish_size() const {
  return _internal_load_fish_size();
}
inline void CMD_S_AddFish::clear_load_fish() {
  load_fish_.Clear();
}
inline ::LoadFish* CMD_S_AddFish::mutable_load_fish(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_S_AddFish.load_fish)
  return load_fish_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
CMD_S_AddFish::mutable_load_fish() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_AddFish.load_fish)
  return &load_fish_;
}
inline const ::LoadFish& CMD_S_AddFish::_internal_load_fish(int index) const {
  return load_fish_.Get(index);
}
inline const ::LoadFish& CMD_S_AddFish::load_fish(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_AddFish.load_fish)
  return _internal_load_fish(index);
}
inline ::LoadFish* CMD_S_AddFish::_internal_add_load_fish() {
  return load_fish_.Add();
}
inline ::LoadFish* CMD_S_AddFish::add_load_fish() {
  // @@protoc_insertion_point(field_add:CMD_S_AddFish.load_fish)
  return _internal_add_load_fish();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
CMD_S_AddFish::load_fish() const {
  // @@protoc_insertion_point(field_list:CMD_S_AddFish.load_fish)
  return load_fish_;
}

// -------------------------------------------------------------------

// CMD_S_PlayerEnter

// repeated .LoadFish load_fish = 1;
inline int CMD_S_PlayerEnter::_internal_load_fish_size() const {
  return load_fish_.size();
}
inline int CMD_S_PlayerEnter::load_fish_size() const {
  return _internal_load_fish_size();
}
inline void CMD_S_PlayerEnter::clear_load_fish() {
  load_fish_.Clear();
}
inline ::LoadFish* CMD_S_PlayerEnter::mutable_load_fish(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_S_PlayerEnter.load_fish)
  return load_fish_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
CMD_S_PlayerEnter::mutable_load_fish() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_PlayerEnter.load_fish)
  return &load_fish_;
}
inline const ::LoadFish& CMD_S_PlayerEnter::_internal_load_fish(int index) const {
  return load_fish_.Get(index);
}
inline const ::LoadFish& CMD_S_PlayerEnter::load_fish(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerEnter.load_fish)
  return _internal_load_fish(index);
}
inline ::LoadFish* CMD_S_PlayerEnter::_internal_add_load_fish() {
  return load_fish_.Add();
}
inline ::LoadFish* CMD_S_PlayerEnter::add_load_fish() {
  // @@protoc_insertion_point(field_add:CMD_S_PlayerEnter.load_fish)
  return _internal_add_load_fish();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
CMD_S_PlayerEnter::load_fish() const {
  // @@protoc_insertion_point(field_list:CMD_S_PlayerEnter.load_fish)
  return load_fish_;
}

// -------------------------------------------------------------------

// CMD_S_PlayerYCEnter

// int32 yu_chao_id = 1;
inline void CMD_S_PlayerYCEnter::clear_yu_chao_id() {
  yu_chao_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerYCEnter::_internal_yu_chao_id() const {
  return yu_chao_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerYCEnter::yu_chao_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerYCEnter.yu_chao_id)
  return _internal_yu_chao_id();
}
inline void CMD_S_PlayerYCEnter::_internal_set_yu_chao_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  yu_chao_id_ = value;
}
inline void CMD_S_PlayerYCEnter::set_yu_chao_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_yu_chao_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerYCEnter.yu_chao_id)
}

// repeated .LoadFish load_fish = 2;
inline int CMD_S_PlayerYCEnter::_internal_load_fish_size() const {
  return load_fish_.size();
}
inline int CMD_S_PlayerYCEnter::load_fish_size() const {
  return _internal_load_fish_size();
}
inline void CMD_S_PlayerYCEnter::clear_load_fish() {
  load_fish_.Clear();
}
inline ::LoadFish* CMD_S_PlayerYCEnter::mutable_load_fish(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_S_PlayerYCEnter.load_fish)
  return load_fish_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >*
CMD_S_PlayerYCEnter::mutable_load_fish() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_PlayerYCEnter.load_fish)
  return &load_fish_;
}
inline const ::LoadFish& CMD_S_PlayerYCEnter::_internal_load_fish(int index) const {
  return load_fish_.Get(index);
}
inline const ::LoadFish& CMD_S_PlayerYCEnter::load_fish(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerYCEnter.load_fish)
  return _internal_load_fish(index);
}
inline ::LoadFish* CMD_S_PlayerYCEnter::_internal_add_load_fish() {
  return load_fish_.Add();
}
inline ::LoadFish* CMD_S_PlayerYCEnter::add_load_fish() {
  // @@protoc_insertion_point(field_add:CMD_S_PlayerYCEnter.load_fish)
  return _internal_add_load_fish();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::LoadFish >&
CMD_S_PlayerYCEnter::load_fish() const {
  // @@protoc_insertion_point(field_list:CMD_S_PlayerYCEnter.load_fish)
  return load_fish_;
}

// -------------------------------------------------------------------

// FishDeadInfo

// int32 id = 1;
inline void FishDeadInfo::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FishDeadInfo::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FishDeadInfo::id() const {
  // @@protoc_insertion_point(field_get:FishDeadInfo.id)
  return _internal_id();
}
inline void FishDeadInfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void FishDeadInfo::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:FishDeadInfo.id)
}

// int32 score = 2;
inline void FishDeadInfo::clear_score() {
  score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FishDeadInfo::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FishDeadInfo::score() const {
  // @@protoc_insertion_point(field_get:FishDeadInfo.score)
  return _internal_score();
}
inline void FishDeadInfo::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  score_ = value;
}
inline void FishDeadInfo::set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:FishDeadInfo.score)
}

// -------------------------------------------------------------------

// CMD_S_FishDead

// int32 chair_id = 1;
inline void CMD_S_FishDead::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_FishDead::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_FishDead::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_FishDead.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_FishDead::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_FishDead::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_FishDead.chair_id)
}

// repeated .FishDeadInfo fish = 2;
inline int CMD_S_FishDead::_internal_fish_size() const {
  return fish_.size();
}
inline int CMD_S_FishDead::fish_size() const {
  return _internal_fish_size();
}
inline void CMD_S_FishDead::clear_fish() {
  fish_.Clear();
}
inline ::FishDeadInfo* CMD_S_FishDead::mutable_fish(int index) {
  // @@protoc_insertion_point(field_mutable:CMD_S_FishDead.fish)
  return fish_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FishDeadInfo >*
CMD_S_FishDead::mutable_fish() {
  // @@protoc_insertion_point(field_mutable_list:CMD_S_FishDead.fish)
  return &fish_;
}
inline const ::FishDeadInfo& CMD_S_FishDead::_internal_fish(int index) const {
  return fish_.Get(index);
}
inline const ::FishDeadInfo& CMD_S_FishDead::fish(int index) const {
  // @@protoc_insertion_point(field_get:CMD_S_FishDead.fish)
  return _internal_fish(index);
}
inline ::FishDeadInfo* CMD_S_FishDead::_internal_add_fish() {
  return fish_.Add();
}
inline ::FishDeadInfo* CMD_S_FishDead::add_fish() {
  // @@protoc_insertion_point(field_add:CMD_S_FishDead.fish)
  return _internal_add_fish();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::FishDeadInfo >&
CMD_S_FishDead::fish() const {
  // @@protoc_insertion_point(field_list:CMD_S_FishDead.fish)
  return fish_;
}

// int64 score = 3;
inline void CMD_S_FishDead::clear_score() {
  score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_FishDead::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_FishDead::score() const {
  // @@protoc_insertion_point(field_get:CMD_S_FishDead.score)
  return _internal_score();
}
inline void CMD_S_FishDead::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  score_ = value;
}
inline void CMD_S_FishDead::set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:CMD_S_FishDead.score)
}

// int32 lei_long_odd = 4;
inline void CMD_S_FishDead::clear_lei_long_odd() {
  lei_long_odd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_FishDead::_internal_lei_long_odd() const {
  return lei_long_odd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_FishDead::lei_long_odd() const {
  // @@protoc_insertion_point(field_get:CMD_S_FishDead.lei_long_odd)
  return _internal_lei_long_odd();
}
inline void CMD_S_FishDead::_internal_set_lei_long_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lei_long_odd_ = value;
}
inline void CMD_S_FishDead::set_lei_long_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lei_long_odd(value);
  // @@protoc_insertion_point(field_set:CMD_S_FishDead.lei_long_odd)
}

// -------------------------------------------------------------------

// CMD_S_PlayerShoot

// int32 chair_id = 1;
inline void CMD_S_PlayerShoot::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerShoot::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerShoot::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerShoot.chair_id)
  return _internal_chair_id();
}
inline void CMD_S_PlayerShoot::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_S_PlayerShoot::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerShoot.chair_id)
}

// float x = 2;
inline void CMD_S_PlayerShoot::clear_x() {
  x_ = 0;
}
inline float CMD_S_PlayerShoot::_internal_x() const {
  return x_;
}
inline float CMD_S_PlayerShoot::x() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerShoot.x)
  return _internal_x();
}
inline void CMD_S_PlayerShoot::_internal_set_x(float value) {
  
  x_ = value;
}
inline void CMD_S_PlayerShoot::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerShoot.x)
}

// float y = 3;
inline void CMD_S_PlayerShoot::clear_y() {
  y_ = 0;
}
inline float CMD_S_PlayerShoot::_internal_y() const {
  return y_;
}
inline float CMD_S_PlayerShoot::y() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerShoot.y)
  return _internal_y();
}
inline void CMD_S_PlayerShoot::_internal_set_y(float value) {
  
  y_ = value;
}
inline void CMD_S_PlayerShoot::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerShoot.y)
}

// int32 level = 4;
inline void CMD_S_PlayerShoot::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerShoot::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerShoot::level() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerShoot.level)
  return _internal_level();
}
inline void CMD_S_PlayerShoot::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void CMD_S_PlayerShoot::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerShoot.level)
}

// int32 type = 5;
inline void CMD_S_PlayerShoot::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerShoot::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_S_PlayerShoot::type() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerShoot.type)
  return _internal_type();
}
inline void CMD_S_PlayerShoot::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void CMD_S_PlayerShoot::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerShoot.type)
}

// int64 player_cur_score = 6;
inline void CMD_S_PlayerShoot::clear_player_cur_score() {
  player_cur_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_PlayerShoot::_internal_player_cur_score() const {
  return player_cur_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMD_S_PlayerShoot::player_cur_score() const {
  // @@protoc_insertion_point(field_get:CMD_S_PlayerShoot.player_cur_score)
  return _internal_player_cur_score();
}
inline void CMD_S_PlayerShoot::_internal_set_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  player_cur_score_ = value;
}
inline void CMD_S_PlayerShoot::set_player_cur_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_player_cur_score(value);
  // @@protoc_insertion_point(field_set:CMD_S_PlayerShoot.player_cur_score)
}

// -------------------------------------------------------------------

// CMD_C_RobotShoot

// int32 chair_id = 1;
inline void CMD_C_RobotShoot::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_RobotShoot.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_RobotShoot::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_RobotShoot::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_RobotShoot.chair_id)
}

// int32 level = 2;
inline void CMD_C_RobotShoot::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::level() const {
  // @@protoc_insertion_point(field_get:CMD_C_RobotShoot.level)
  return _internal_level();
}
inline void CMD_C_RobotShoot::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void CMD_C_RobotShoot::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMD_C_RobotShoot.level)
}

// int32 type = 3;
inline void CMD_C_RobotShoot::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::type() const {
  // @@protoc_insertion_point(field_get:CMD_C_RobotShoot.type)
  return _internal_type();
}
inline void CMD_C_RobotShoot::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void CMD_C_RobotShoot::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMD_C_RobotShoot.type)
}

// int32 is_lock = 4;
inline void CMD_C_RobotShoot::clear_is_lock() {
  is_lock_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::_internal_is_lock() const {
  return is_lock_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_RobotShoot::is_lock() const {
  // @@protoc_insertion_point(field_get:CMD_C_RobotShoot.is_lock)
  return _internal_is_lock();
}
inline void CMD_C_RobotShoot::_internal_set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_lock_ = value;
}
inline void CMD_C_RobotShoot::set_is_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_lock(value);
  // @@protoc_insertion_point(field_set:CMD_C_RobotShoot.is_lock)
}

// -------------------------------------------------------------------

// CMD_C_PlayerLock

// int32 chair_id = 1;
inline void CMD_C_PlayerLock::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_PlayerLock::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_PlayerLock::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_PlayerLock.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_PlayerLock::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_PlayerLock::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_PlayerLock.chair_id)
}

// int32 fish_id = 2;
inline void CMD_C_PlayerLock::clear_fish_id() {
  fish_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_PlayerLock::_internal_fish_id() const {
  return fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_PlayerLock::fish_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_PlayerLock.fish_id)
  return _internal_fish_id();
}
inline void CMD_C_PlayerLock::_internal_set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fish_id_ = value;
}
inline void CMD_C_PlayerLock::set_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fish_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_PlayerLock.fish_id)
}

// -------------------------------------------------------------------

// CMD_C_JuBuZhaDan

// int32 chair_id = 1;
inline void CMD_C_JuBuZhaDan::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_JuBuZhaDan::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_JuBuZhaDan::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_JuBuZhaDan.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_JuBuZhaDan::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_JuBuZhaDan::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_JuBuZhaDan.chair_id)
}

// int32 te_shu_iu_id = 2;
inline void CMD_C_JuBuZhaDan::clear_te_shu_iu_id() {
  te_shu_iu_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_JuBuZhaDan::_internal_te_shu_iu_id() const {
  return te_shu_iu_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_JuBuZhaDan::te_shu_iu_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_JuBuZhaDan.te_shu_iu_id)
  return _internal_te_shu_iu_id();
}
inline void CMD_C_JuBuZhaDan::_internal_set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  te_shu_iu_id_ = value;
}
inline void CMD_C_JuBuZhaDan::set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_te_shu_iu_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_JuBuZhaDan.te_shu_iu_id)
}

// repeated int32 fish_id = 3;
inline int CMD_C_JuBuZhaDan::_internal_fish_id_size() const {
  return fish_id_.size();
}
inline int CMD_C_JuBuZhaDan::fish_id_size() const {
  return _internal_fish_id_size();
}
inline void CMD_C_JuBuZhaDan::clear_fish_id() {
  fish_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_JuBuZhaDan::_internal_fish_id(int index) const {
  return fish_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_JuBuZhaDan::fish_id(int index) const {
  // @@protoc_insertion_point(field_get:CMD_C_JuBuZhaDan.fish_id)
  return _internal_fish_id(index);
}
inline void CMD_C_JuBuZhaDan::set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_C_JuBuZhaDan.fish_id)
}
inline void CMD_C_JuBuZhaDan::_internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Add(value);
}
inline void CMD_C_JuBuZhaDan::add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_fish_id(value);
  // @@protoc_insertion_point(field_add:CMD_C_JuBuZhaDan.fish_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_JuBuZhaDan::_internal_fish_id() const {
  return fish_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_JuBuZhaDan::fish_id() const {
  // @@protoc_insertion_point(field_list:CMD_C_JuBuZhaDan.fish_id)
  return _internal_fish_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_JuBuZhaDan::_internal_mutable_fish_id() {
  return &fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_JuBuZhaDan::mutable_fish_id() {
  // @@protoc_insertion_point(field_mutable_list:CMD_C_JuBuZhaDan.fish_id)
  return _internal_mutable_fish_id();
}

// -------------------------------------------------------------------

// CMD_C_TongLeiZhaDan

// int32 chair_id = 1;
inline void CMD_C_TongLeiZhaDan::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_TongLeiZhaDan::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_TongLeiZhaDan::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_TongLeiZhaDan.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_TongLeiZhaDan::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_TongLeiZhaDan::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_TongLeiZhaDan.chair_id)
}

// int32 te_shu_iu_id = 2;
inline void CMD_C_TongLeiZhaDan::clear_te_shu_iu_id() {
  te_shu_iu_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_TongLeiZhaDan::_internal_te_shu_iu_id() const {
  return te_shu_iu_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_TongLeiZhaDan::te_shu_iu_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_TongLeiZhaDan.te_shu_iu_id)
  return _internal_te_shu_iu_id();
}
inline void CMD_C_TongLeiZhaDan::_internal_set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  te_shu_iu_id_ = value;
}
inline void CMD_C_TongLeiZhaDan::set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_te_shu_iu_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_TongLeiZhaDan.te_shu_iu_id)
}

// repeated int32 fish_id = 3;
inline int CMD_C_TongLeiZhaDan::_internal_fish_id_size() const {
  return fish_id_.size();
}
inline int CMD_C_TongLeiZhaDan::fish_id_size() const {
  return _internal_fish_id_size();
}
inline void CMD_C_TongLeiZhaDan::clear_fish_id() {
  fish_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_TongLeiZhaDan::_internal_fish_id(int index) const {
  return fish_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_TongLeiZhaDan::fish_id(int index) const {
  // @@protoc_insertion_point(field_get:CMD_C_TongLeiZhaDan.fish_id)
  return _internal_fish_id(index);
}
inline void CMD_C_TongLeiZhaDan::set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_C_TongLeiZhaDan.fish_id)
}
inline void CMD_C_TongLeiZhaDan::_internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Add(value);
}
inline void CMD_C_TongLeiZhaDan::add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_fish_id(value);
  // @@protoc_insertion_point(field_add:CMD_C_TongLeiZhaDan.fish_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_TongLeiZhaDan::_internal_fish_id() const {
  return fish_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_TongLeiZhaDan::fish_id() const {
  // @@protoc_insertion_point(field_list:CMD_C_TongLeiZhaDan.fish_id)
  return _internal_fish_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_TongLeiZhaDan::_internal_mutable_fish_id() {
  return &fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_TongLeiZhaDan::mutable_fish_id() {
  // @@protoc_insertion_point(field_mutable_list:CMD_C_TongLeiZhaDan.fish_id)
  return _internal_mutable_fish_id();
}

// -------------------------------------------------------------------

// CMD_C_ShuiHuZhuan

// int32 chair_id = 1;
inline void CMD_C_ShuiHuZhuan::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ShuiHuZhuan::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ShuiHuZhuan::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_ShuiHuZhuan.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_ShuiHuZhuan::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_ShuiHuZhuan::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_ShuiHuZhuan.chair_id)
}

// int32 te_shu_iu_id = 2;
inline void CMD_C_ShuiHuZhuan::clear_te_shu_iu_id() {
  te_shu_iu_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ShuiHuZhuan::_internal_te_shu_iu_id() const {
  return te_shu_iu_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ShuiHuZhuan::te_shu_iu_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_ShuiHuZhuan.te_shu_iu_id)
  return _internal_te_shu_iu_id();
}
inline void CMD_C_ShuiHuZhuan::_internal_set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  te_shu_iu_id_ = value;
}
inline void CMD_C_ShuiHuZhuan::set_te_shu_iu_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_te_shu_iu_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_ShuiHuZhuan.te_shu_iu_id)
}

// repeated int32 fish_id = 3;
inline int CMD_C_ShuiHuZhuan::_internal_fish_id_size() const {
  return fish_id_.size();
}
inline int CMD_C_ShuiHuZhuan::fish_id_size() const {
  return _internal_fish_id_size();
}
inline void CMD_C_ShuiHuZhuan::clear_fish_id() {
  fish_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ShuiHuZhuan::_internal_fish_id(int index) const {
  return fish_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ShuiHuZhuan::fish_id(int index) const {
  // @@protoc_insertion_point(field_get:CMD_C_ShuiHuZhuan.fish_id)
  return _internal_fish_id(index);
}
inline void CMD_C_ShuiHuZhuan::set_fish_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_C_ShuiHuZhuan.fish_id)
}
inline void CMD_C_ShuiHuZhuan::_internal_add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  fish_id_.Add(value);
}
inline void CMD_C_ShuiHuZhuan::add_fish_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_fish_id(value);
  // @@protoc_insertion_point(field_add:CMD_C_ShuiHuZhuan.fish_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_ShuiHuZhuan::_internal_fish_id() const {
  return fish_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_ShuiHuZhuan::fish_id() const {
  // @@protoc_insertion_point(field_list:CMD_C_ShuiHuZhuan.fish_id)
  return _internal_fish_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_ShuiHuZhuan::_internal_mutable_fish_id() {
  return &fish_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_ShuiHuZhuan::mutable_fish_id() {
  // @@protoc_insertion_point(field_mutable_list:CMD_C_ShuiHuZhuan.fish_id)
  return _internal_mutable_fish_id();
}

// -------------------------------------------------------------------

// CMD_C_ChangeBulletLevel

// int32 chair_id = 1;
inline void CMD_C_ChangeBulletLevel::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ChangeBulletLevel::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ChangeBulletLevel::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_ChangeBulletLevel.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_ChangeBulletLevel::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_ChangeBulletLevel::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_ChangeBulletLevel.chair_id)
}

// int32 gun_type = 2;
inline void CMD_C_ChangeBulletLevel::clear_gun_type() {
  gun_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ChangeBulletLevel::_internal_gun_type() const {
  return gun_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ChangeBulletLevel::gun_type() const {
  // @@protoc_insertion_point(field_get:CMD_C_ChangeBulletLevel.gun_type)
  return _internal_gun_type();
}
inline void CMD_C_ChangeBulletLevel::_internal_set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gun_type_ = value;
}
inline void CMD_C_ChangeBulletLevel::set_gun_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gun_type(value);
  // @@protoc_insertion_point(field_set:CMD_C_ChangeBulletLevel.gun_type)
}

// int32 gun_level = 3;
inline void CMD_C_ChangeBulletLevel::clear_gun_level() {
  gun_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ChangeBulletLevel::_internal_gun_level() const {
  return gun_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_ChangeBulletLevel::gun_level() const {
  // @@protoc_insertion_point(field_get:CMD_C_ChangeBulletLevel.gun_level)
  return _internal_gun_level();
}
inline void CMD_C_ChangeBulletLevel::_internal_set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gun_level_ = value;
}
inline void CMD_C_ChangeBulletLevel::set_gun_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gun_level(value);
  // @@protoc_insertion_point(field_set:CMD_C_ChangeBulletLevel.gun_level)
}

// -------------------------------------------------------------------

// Bullet

// int32 id = 1;
inline void Bullet::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::id() const {
  // @@protoc_insertion_point(field_get:Bullet.id)
  return _internal_id();
}
inline void Bullet::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void Bullet::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Bullet.id)
}

// int32 bullet_kind = 2;
inline void Bullet::clear_bullet_kind() {
  bullet_kind_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::_internal_bullet_kind() const {
  return bullet_kind_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::bullet_kind() const {
  // @@protoc_insertion_point(field_get:Bullet.bullet_kind)
  return _internal_bullet_kind();
}
inline void Bullet::_internal_set_bullet_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bullet_kind_ = value;
}
inline void Bullet::set_bullet_kind(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bullet_kind(value);
  // @@protoc_insertion_point(field_set:Bullet.bullet_kind)
}

// int32 is_use = 3;
inline void Bullet::clear_is_use() {
  is_use_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::_internal_is_use() const {
  return is_use_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::is_use() const {
  // @@protoc_insertion_point(field_get:Bullet.is_use)
  return _internal_is_use();
}
inline void Bullet::_internal_set_is_use(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_use_ = value;
}
inline void Bullet::set_is_use(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_use(value);
  // @@protoc_insertion_point(field_set:Bullet.is_use)
}

// int32 level = 4;
inline void Bullet::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::level() const {
  // @@protoc_insertion_point(field_get:Bullet.level)
  return _internal_level();
}
inline void Bullet::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void Bullet::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Bullet.level)
}

// int32 type = 5;
inline void Bullet::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::type() const {
  // @@protoc_insertion_point(field_get:Bullet.type)
  return _internal_type();
}
inline void Bullet::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void Bullet::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Bullet.type)
}

// int32 chips = 6;
inline void Bullet::clear_chips() {
  chips_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::_internal_chips() const {
  return chips_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Bullet::chips() const {
  // @@protoc_insertion_point(field_get:Bullet.chips)
  return _internal_chips();
}
inline void Bullet::_internal_set_chips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chips_ = value;
}
inline void Bullet::set_chips(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chips(value);
  // @@protoc_insertion_point(field_set:Bullet.chips)
}

// -------------------------------------------------------------------

// CMD_C_PressShoot

// float x = 1;
inline void CMD_C_PressShoot::clear_x() {
  x_ = 0;
}
inline float CMD_C_PressShoot::_internal_x() const {
  return x_;
}
inline float CMD_C_PressShoot::x() const {
  // @@protoc_insertion_point(field_get:CMD_C_PressShoot.x)
  return _internal_x();
}
inline void CMD_C_PressShoot::_internal_set_x(float value) {
  
  x_ = value;
}
inline void CMD_C_PressShoot::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMD_C_PressShoot.x)
}

// float y = 2;
inline void CMD_C_PressShoot::clear_y() {
  y_ = 0;
}
inline float CMD_C_PressShoot::_internal_y() const {
  return y_;
}
inline float CMD_C_PressShoot::y() const {
  // @@protoc_insertion_point(field_get:CMD_C_PressShoot.y)
  return _internal_y();
}
inline void CMD_C_PressShoot::_internal_set_y(float value) {
  
  y_ = value;
}
inline void CMD_C_PressShoot::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMD_C_PressShoot.y)
}

// int32 chair_id = 3;
inline void CMD_C_PressShoot::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_PressShoot::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_PressShoot::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_PressShoot.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_PressShoot::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_PressShoot::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_PressShoot.chair_id)
}

// .Bullet bullet = 4;
inline bool CMD_C_PressShoot::_internal_has_bullet() const {
  return this != internal_default_instance() && bullet_ != nullptr;
}
inline bool CMD_C_PressShoot::has_bullet() const {
  return _internal_has_bullet();
}
inline void CMD_C_PressShoot::clear_bullet() {
  if (GetArena() == nullptr && bullet_ != nullptr) {
    delete bullet_;
  }
  bullet_ = nullptr;
}
inline const ::Bullet& CMD_C_PressShoot::_internal_bullet() const {
  const ::Bullet* p = bullet_;
  return p != nullptr ? *p : reinterpret_cast<const ::Bullet&>(
      ::_Bullet_default_instance_);
}
inline const ::Bullet& CMD_C_PressShoot::bullet() const {
  // @@protoc_insertion_point(field_get:CMD_C_PressShoot.bullet)
  return _internal_bullet();
}
inline void CMD_C_PressShoot::unsafe_arena_set_allocated_bullet(
    ::Bullet* bullet) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bullet_);
  }
  bullet_ = bullet;
  if (bullet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMD_C_PressShoot.bullet)
}
inline ::Bullet* CMD_C_PressShoot::release_bullet() {
  
  ::Bullet* temp = bullet_;
  bullet_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Bullet* CMD_C_PressShoot::unsafe_arena_release_bullet() {
  // @@protoc_insertion_point(field_release:CMD_C_PressShoot.bullet)
  
  ::Bullet* temp = bullet_;
  bullet_ = nullptr;
  return temp;
}
inline ::Bullet* CMD_C_PressShoot::_internal_mutable_bullet() {
  
  if (bullet_ == nullptr) {
    auto* p = CreateMaybeMessage<::Bullet>(GetArena());
    bullet_ = p;
  }
  return bullet_;
}
inline ::Bullet* CMD_C_PressShoot::mutable_bullet() {
  // @@protoc_insertion_point(field_mutable:CMD_C_PressShoot.bullet)
  return _internal_mutable_bullet();
}
inline void CMD_C_PressShoot::set_allocated_bullet(::Bullet* bullet) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bullet_;
  }
  if (bullet) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bullet);
    if (message_arena != submessage_arena) {
      bullet = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bullet, submessage_arena);
    }
    
  } else {
    
  }
  bullet_ = bullet;
  // @@protoc_insertion_point(field_set_allocated:CMD_C_PressShoot.bullet)
}

// -------------------------------------------------------------------

// CMD_C_HitedFish

// .Bullet bullet = 1;
inline bool CMD_C_HitedFish::_internal_has_bullet() const {
  return this != internal_default_instance() && bullet_ != nullptr;
}
inline bool CMD_C_HitedFish::has_bullet() const {
  return _internal_has_bullet();
}
inline void CMD_C_HitedFish::clear_bullet() {
  if (GetArena() == nullptr && bullet_ != nullptr) {
    delete bullet_;
  }
  bullet_ = nullptr;
}
inline const ::Bullet& CMD_C_HitedFish::_internal_bullet() const {
  const ::Bullet* p = bullet_;
  return p != nullptr ? *p : reinterpret_cast<const ::Bullet&>(
      ::_Bullet_default_instance_);
}
inline const ::Bullet& CMD_C_HitedFish::bullet() const {
  // @@protoc_insertion_point(field_get:CMD_C_HitedFish.bullet)
  return _internal_bullet();
}
inline void CMD_C_HitedFish::unsafe_arena_set_allocated_bullet(
    ::Bullet* bullet) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(bullet_);
  }
  bullet_ = bullet;
  if (bullet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMD_C_HitedFish.bullet)
}
inline ::Bullet* CMD_C_HitedFish::release_bullet() {
  
  ::Bullet* temp = bullet_;
  bullet_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Bullet* CMD_C_HitedFish::unsafe_arena_release_bullet() {
  // @@protoc_insertion_point(field_release:CMD_C_HitedFish.bullet)
  
  ::Bullet* temp = bullet_;
  bullet_ = nullptr;
  return temp;
}
inline ::Bullet* CMD_C_HitedFish::_internal_mutable_bullet() {
  
  if (bullet_ == nullptr) {
    auto* p = CreateMaybeMessage<::Bullet>(GetArena());
    bullet_ = p;
  }
  return bullet_;
}
inline ::Bullet* CMD_C_HitedFish::mutable_bullet() {
  // @@protoc_insertion_point(field_mutable:CMD_C_HitedFish.bullet)
  return _internal_mutable_bullet();
}
inline void CMD_C_HitedFish::set_allocated_bullet(::Bullet* bullet) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete bullet_;
  }
  if (bullet) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bullet);
    if (message_arena != submessage_arena) {
      bullet = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bullet, submessage_arena);
    }
    
  } else {
    
  }
  bullet_ = bullet;
  // @@protoc_insertion_point(field_set_allocated:CMD_C_HitedFish.bullet)
}

// int32 chair_id = 2;
inline void CMD_C_HitedFish::clear_chair_id() {
  chair_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_HitedFish::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_HitedFish::chair_id() const {
  // @@protoc_insertion_point(field_get:CMD_C_HitedFish.chair_id)
  return _internal_chair_id();
}
inline void CMD_C_HitedFish::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chair_id_ = value;
}
inline void CMD_C_HitedFish::set_chair_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:CMD_C_HitedFish.chair_id)
}

// repeated int32 hit_fish = 3;
inline int CMD_C_HitedFish::_internal_hit_fish_size() const {
  return hit_fish_.size();
}
inline int CMD_C_HitedFish::hit_fish_size() const {
  return _internal_hit_fish_size();
}
inline void CMD_C_HitedFish::clear_hit_fish() {
  hit_fish_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_HitedFish::_internal_hit_fish(int index) const {
  return hit_fish_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMD_C_HitedFish::hit_fish(int index) const {
  // @@protoc_insertion_point(field_get:CMD_C_HitedFish.hit_fish)
  return _internal_hit_fish(index);
}
inline void CMD_C_HitedFish::set_hit_fish(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  hit_fish_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMD_C_HitedFish.hit_fish)
}
inline void CMD_C_HitedFish::_internal_add_hit_fish(::PROTOBUF_NAMESPACE_ID::int32 value) {
  hit_fish_.Add(value);
}
inline void CMD_C_HitedFish::add_hit_fish(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_hit_fish(value);
  // @@protoc_insertion_point(field_add:CMD_C_HitedFish.hit_fish)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_HitedFish::_internal_hit_fish() const {
  return hit_fish_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMD_C_HitedFish::hit_fish() const {
  // @@protoc_insertion_point(field_list:CMD_C_HitedFish.hit_fish)
  return _internal_hit_fish();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_HitedFish::_internal_mutable_hit_fish() {
  return &hit_fish_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMD_C_HitedFish::mutable_hit_fish() {
  // @@protoc_insertion_point(field_mutable_list:CMD_C_HitedFish.hit_fish)
  return _internal_mutable_hit_fish();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EMsgIDSubGame> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EMsgIDSubGame>() {
  return ::EMsgIDSubGame_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_LTBY_2eproto
