// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Crash.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Crash_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Crash_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Crash_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Crash_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Crash_2eproto;
namespace CRASH {
class SC_SceneInfo;
class SC_SceneInfoDefaultTypeInternal;
extern SC_SceneInfoDefaultTypeInternal _SC_SceneInfo_default_instance_;
class sC2SPlayerBet;
class sC2SPlayerBetDefaultTypeInternal;
extern sC2SPlayerBetDefaultTypeInternal _sC2SPlayerBet_default_instance_;
class sS2CCancelBet;
class sS2CCancelBetDefaultTypeInternal;
extern sS2CCancelBetDefaultTypeInternal _sS2CCancelBet_default_instance_;
class sS2CNotifyProgress;
class sS2CNotifyProgressDefaultTypeInternal;
extern sS2CNotifyProgressDefaultTypeInternal _sS2CNotifyProgress_default_instance_;
class sS2CPlayerBet;
class sS2CPlayerBetDefaultTypeInternal;
extern sS2CPlayerBetDefaultTypeInternal _sS2CPlayerBet_default_instance_;
class sS2CPlayerDot;
class sS2CPlayerDotDefaultTypeInternal;
extern sS2CPlayerDotDefaultTypeInternal _sS2CPlayerDot_default_instance_;
}  // namespace CRASH
PROTOBUF_NAMESPACE_OPEN
template<> ::CRASH::SC_SceneInfo* Arena::CreateMaybeMessage<::CRASH::SC_SceneInfo>(Arena*);
template<> ::CRASH::sC2SPlayerBet* Arena::CreateMaybeMessage<::CRASH::sC2SPlayerBet>(Arena*);
template<> ::CRASH::sS2CCancelBet* Arena::CreateMaybeMessage<::CRASH::sS2CCancelBet>(Arena*);
template<> ::CRASH::sS2CNotifyProgress* Arena::CreateMaybeMessage<::CRASH::sS2CNotifyProgress>(Arena*);
template<> ::CRASH::sS2CPlayerBet* Arena::CreateMaybeMessage<::CRASH::sS2CPlayerBet>(Arena*);
template<> ::CRASH::sS2CPlayerDot* Arena::CreateMaybeMessage<::CRASH::sS2CPlayerDot>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace CRASH {

enum EMsgIDCRASH : int {
  SUB_CS_Bet = 0,
  SUB_CS_CancelBet = 1,
  SUB_CS_PlayerDot = 2,
  SUB_SC_Bet = 3,
  SUB_SC_CancelBet = 4,
  SUB_SC_PlayerDot = 5,
  SUB_SC_NotifyProgress = 6,
  SUB_SC_ChangeState = 7,
  SUB_S_CHECK_ROBOT_LEAVE = 8,
  EMsgIDCRASH_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  EMsgIDCRASH_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool EMsgIDCRASH_IsValid(int value);
constexpr EMsgIDCRASH EMsgIDCRASH_MIN = SUB_CS_Bet;
constexpr EMsgIDCRASH EMsgIDCRASH_MAX = SUB_S_CHECK_ROBOT_LEAVE;
constexpr int EMsgIDCRASH_ARRAYSIZE = EMsgIDCRASH_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgIDCRASH_descriptor();
template<typename T>
inline const std::string& EMsgIDCRASH_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EMsgIDCRASH>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EMsgIDCRASH_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EMsgIDCRASH_descriptor(), enum_t_value);
}
inline bool EMsgIDCRASH_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EMsgIDCRASH* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EMsgIDCRASH>(
    EMsgIDCRASH_descriptor(), name, value);
}
// ===================================================================

class sC2SPlayerBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CRASH.sC2SPlayerBet) */ {
 public:
  inline sC2SPlayerBet() : sC2SPlayerBet(nullptr) {}
  virtual ~sC2SPlayerBet();

  sC2SPlayerBet(const sC2SPlayerBet& from);
  sC2SPlayerBet(sC2SPlayerBet&& from) noexcept
    : sC2SPlayerBet() {
    *this = ::std::move(from);
  }

  inline sC2SPlayerBet& operator=(const sC2SPlayerBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline sC2SPlayerBet& operator=(sC2SPlayerBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const sC2SPlayerBet& default_instance();

  static inline const sC2SPlayerBet* internal_default_instance() {
    return reinterpret_cast<const sC2SPlayerBet*>(
               &_sC2SPlayerBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(sC2SPlayerBet& a, sC2SPlayerBet& b) {
    a.Swap(&b);
  }
  inline void Swap(sC2SPlayerBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(sC2SPlayerBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline sC2SPlayerBet* New() const final {
    return CreateMaybeMessage<sC2SPlayerBet>(nullptr);
  }

  sC2SPlayerBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<sC2SPlayerBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const sC2SPlayerBet& from);
  void MergeFrom(const sC2SPlayerBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sC2SPlayerBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CRASH.sC2SPlayerBet";
  }
  protected:
  explicit sC2SPlayerBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Crash_2eproto);
    return ::descriptor_table_Crash_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAreaIndexFieldNumber = 1,
    kBetIndexFieldNumber = 2,
    kDotOddIndexFieldNumber = 3,
  };
  // int32 area_index = 1;
  void clear_area_index();
  ::PROTOBUF_NAMESPACE_ID::int32 area_index() const;
  void set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area_index() const;
  void _internal_set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet_index = 2;
  void clear_bet_index();
  ::PROTOBUF_NAMESPACE_ID::int32 bet_index() const;
  void set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet_index() const;
  void _internal_set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 dot_odd_index = 3;
  void clear_dot_odd_index();
  ::PROTOBUF_NAMESPACE_ID::int32 dot_odd_index() const;
  void set_dot_odd_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dot_odd_index() const;
  void _internal_set_dot_odd_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CRASH.sC2SPlayerBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 dot_odd_index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Crash_2eproto;
};
// -------------------------------------------------------------------

class SC_SceneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CRASH.SC_SceneInfo) */ {
 public:
  inline SC_SceneInfo() : SC_SceneInfo(nullptr) {}
  virtual ~SC_SceneInfo();

  SC_SceneInfo(const SC_SceneInfo& from);
  SC_SceneInfo(SC_SceneInfo&& from) noexcept
    : SC_SceneInfo() {
    *this = ::std::move(from);
  }

  inline SC_SceneInfo& operator=(const SC_SceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SC_SceneInfo& operator=(SC_SceneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SC_SceneInfo& default_instance();

  static inline const SC_SceneInfo* internal_default_instance() {
    return reinterpret_cast<const SC_SceneInfo*>(
               &_SC_SceneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SC_SceneInfo& a, SC_SceneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SC_SceneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SC_SceneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SC_SceneInfo* New() const final {
    return CreateMaybeMessage<SC_SceneInfo>(nullptr);
  }

  SC_SceneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SC_SceneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SC_SceneInfo& from);
  void MergeFrom(const SC_SceneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SC_SceneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CRASH.SC_SceneInfo";
  }
  protected:
  explicit SC_SceneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Crash_2eproto);
    return ::descriptor_table_Crash_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerBetFieldNumber = 3,
    kPlayerWinGoldFieldNumber = 4,
    kPlayerWinDotOddFieldNumber = 5,
    kPlayerTotalWinSocreFieldNumber = 6,
    kPlayerMaxScoreFieldNumber = 7,
    kHistoryResultFieldNumber = 9,
    kCurStateFieldNumber = 1,
    kRemainTimeFieldNumber = 2,
    kHistoryNumFieldNumber = 8,
  };
  // repeated int32 player_bet = 3;
  int player_bet_size() const;
  private:
  int _internal_player_bet_size() const;
  public:
  void clear_player_bet();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_bet(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_player_bet() const;
  void _internal_add_player_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_player_bet();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 player_bet(int index) const;
  void set_player_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_player_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      player_bet() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_player_bet();

  // repeated int64 player_win_gold = 4;
  int player_win_gold_size() const;
  private:
  int _internal_player_win_gold_size() const;
  public:
  void clear_player_win_gold();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_win_gold(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_player_win_gold() const;
  void _internal_add_player_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_player_win_gold();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 player_win_gold(int index) const;
  void set_player_win_gold(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_player_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      player_win_gold() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_player_win_gold();

  // repeated int32 player_win_dot_odd = 5;
  int player_win_dot_odd_size() const;
  private:
  int _internal_player_win_dot_odd_size() const;
  public:
  void clear_player_win_dot_odd();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_win_dot_odd(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_player_win_dot_odd() const;
  void _internal_add_player_win_dot_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_player_win_dot_odd();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 player_win_dot_odd(int index) const;
  void set_player_win_dot_odd(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_player_win_dot_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      player_win_dot_odd() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_player_win_dot_odd();

  // repeated int64 player_total_win_socre = 6;
  int player_total_win_socre_size() const;
  private:
  int _internal_player_total_win_socre_size() const;
  public:
  void clear_player_total_win_socre();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_total_win_socre(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_player_total_win_socre() const;
  void _internal_add_player_total_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_player_total_win_socre();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 player_total_win_socre(int index) const;
  void set_player_total_win_socre(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_player_total_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      player_total_win_socre() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_player_total_win_socre();

  // repeated int64 player_max_score = 7;
  int player_max_score_size() const;
  private:
  int _internal_player_max_score_size() const;
  public:
  void clear_player_max_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_player_max_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_player_max_score() const;
  void _internal_add_player_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_player_max_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 player_max_score(int index) const;
  void set_player_max_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_player_max_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      player_max_score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_player_max_score();

  // repeated int32 history_result = 9;
  int history_result_size() const;
  private:
  int _internal_history_result_size() const;
  public:
  void clear_history_result();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_history_result(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_history_result() const;
  void _internal_add_history_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_history_result();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 history_result(int index) const;
  void set_history_result(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_history_result(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      history_result() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_history_result();

  // int32 cur_state = 1;
  void clear_cur_state();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_state() const;
  void set_cur_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_state() const;
  void _internal_set_cur_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 remain_time = 2;
  void clear_remain_time();
  ::PROTOBUF_NAMESPACE_ID::int32 remain_time() const;
  void set_remain_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_remain_time() const;
  void _internal_set_remain_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 history_num = 8;
  void clear_history_num();
  ::PROTOBUF_NAMESPACE_ID::int32 history_num() const;
  void set_history_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_history_num() const;
  void _internal_set_history_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CRASH.SC_SceneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > player_bet_;
  mutable std::atomic<int> _player_bet_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > player_win_gold_;
  mutable std::atomic<int> _player_win_gold_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > player_win_dot_odd_;
  mutable std::atomic<int> _player_win_dot_odd_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > player_total_win_socre_;
  mutable std::atomic<int> _player_total_win_socre_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > player_max_score_;
  mutable std::atomic<int> _player_max_score_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > history_result_;
  mutable std::atomic<int> _history_result_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 remain_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 history_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Crash_2eproto;
};
// -------------------------------------------------------------------

class sS2CPlayerBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CRASH.sS2CPlayerBet) */ {
 public:
  inline sS2CPlayerBet() : sS2CPlayerBet(nullptr) {}
  virtual ~sS2CPlayerBet();

  sS2CPlayerBet(const sS2CPlayerBet& from);
  sS2CPlayerBet(sS2CPlayerBet&& from) noexcept
    : sS2CPlayerBet() {
    *this = ::std::move(from);
  }

  inline sS2CPlayerBet& operator=(const sS2CPlayerBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline sS2CPlayerBet& operator=(sS2CPlayerBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const sS2CPlayerBet& default_instance();

  static inline const sS2CPlayerBet* internal_default_instance() {
    return reinterpret_cast<const sS2CPlayerBet*>(
               &_sS2CPlayerBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(sS2CPlayerBet& a, sS2CPlayerBet& b) {
    a.Swap(&b);
  }
  inline void Swap(sS2CPlayerBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(sS2CPlayerBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline sS2CPlayerBet* New() const final {
    return CreateMaybeMessage<sS2CPlayerBet>(nullptr);
  }

  sS2CPlayerBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<sS2CPlayerBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const sS2CPlayerBet& from);
  void MergeFrom(const sS2CPlayerBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sS2CPlayerBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CRASH.sS2CPlayerBet";
  }
  protected:
  explicit sS2CPlayerBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Crash_2eproto);
    return ::descriptor_table_Crash_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairidFieldNumber = 1,
    kAreaIndexFieldNumber = 2,
    kBetFieldNumber = 3,
  };
  // int32 chairid = 1;
  void clear_chairid();
  ::PROTOBUF_NAMESPACE_ID::int32 chairid() const;
  void set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chairid() const;
  void _internal_set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 area_index = 2;
  void clear_area_index();
  ::PROTOBUF_NAMESPACE_ID::int32 area_index() const;
  void set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area_index() const;
  void _internal_set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet = 3;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int32 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CRASH.sS2CPlayerBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chairid_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Crash_2eproto;
};
// -------------------------------------------------------------------

class sS2CCancelBet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CRASH.sS2CCancelBet) */ {
 public:
  inline sS2CCancelBet() : sS2CCancelBet(nullptr) {}
  virtual ~sS2CCancelBet();

  sS2CCancelBet(const sS2CCancelBet& from);
  sS2CCancelBet(sS2CCancelBet&& from) noexcept
    : sS2CCancelBet() {
    *this = ::std::move(from);
  }

  inline sS2CCancelBet& operator=(const sS2CCancelBet& from) {
    CopyFrom(from);
    return *this;
  }
  inline sS2CCancelBet& operator=(sS2CCancelBet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const sS2CCancelBet& default_instance();

  static inline const sS2CCancelBet* internal_default_instance() {
    return reinterpret_cast<const sS2CCancelBet*>(
               &_sS2CCancelBet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(sS2CCancelBet& a, sS2CCancelBet& b) {
    a.Swap(&b);
  }
  inline void Swap(sS2CCancelBet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(sS2CCancelBet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline sS2CCancelBet* New() const final {
    return CreateMaybeMessage<sS2CCancelBet>(nullptr);
  }

  sS2CCancelBet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<sS2CCancelBet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const sS2CCancelBet& from);
  void MergeFrom(const sS2CCancelBet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sS2CCancelBet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CRASH.sS2CCancelBet";
  }
  protected:
  explicit sS2CCancelBet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Crash_2eproto);
    return ::descriptor_table_Crash_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairidFieldNumber = 1,
    kBetFieldNumber = 2,
  };
  // int32 chairid = 1;
  void clear_chairid();
  ::PROTOBUF_NAMESPACE_ID::int32 chairid() const;
  void set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chairid() const;
  void _internal_set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 bet = 2;
  void clear_bet();
  ::PROTOBUF_NAMESPACE_ID::int32 bet() const;
  void set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bet() const;
  void _internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CRASH.sS2CCancelBet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chairid_;
  ::PROTOBUF_NAMESPACE_ID::int32 bet_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Crash_2eproto;
};
// -------------------------------------------------------------------

class sS2CPlayerDot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CRASH.sS2CPlayerDot) */ {
 public:
  inline sS2CPlayerDot() : sS2CPlayerDot(nullptr) {}
  virtual ~sS2CPlayerDot();

  sS2CPlayerDot(const sS2CPlayerDot& from);
  sS2CPlayerDot(sS2CPlayerDot&& from) noexcept
    : sS2CPlayerDot() {
    *this = ::std::move(from);
  }

  inline sS2CPlayerDot& operator=(const sS2CPlayerDot& from) {
    CopyFrom(from);
    return *this;
  }
  inline sS2CPlayerDot& operator=(sS2CPlayerDot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const sS2CPlayerDot& default_instance();

  static inline const sS2CPlayerDot* internal_default_instance() {
    return reinterpret_cast<const sS2CPlayerDot*>(
               &_sS2CPlayerDot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(sS2CPlayerDot& a, sS2CPlayerDot& b) {
    a.Swap(&b);
  }
  inline void Swap(sS2CPlayerDot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(sS2CPlayerDot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline sS2CPlayerDot* New() const final {
    return CreateMaybeMessage<sS2CPlayerDot>(nullptr);
  }

  sS2CPlayerDot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<sS2CPlayerDot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const sS2CPlayerDot& from);
  void MergeFrom(const sS2CPlayerDot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sS2CPlayerDot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CRASH.sS2CPlayerDot";
  }
  protected:
  explicit sS2CPlayerDot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Crash_2eproto);
    return ::descriptor_table_Crash_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairidFieldNumber = 1,
    kAreaIndexFieldNumber = 2,
    kWinGoldFieldNumber = 4,
    kOddFieldNumber = 3,
  };
  // int32 chairid = 1;
  void clear_chairid();
  ::PROTOBUF_NAMESPACE_ID::int32 chairid() const;
  void set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_chairid() const;
  void _internal_set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 area_index = 2;
  void clear_area_index();
  ::PROTOBUF_NAMESPACE_ID::int32 area_index() const;
  void set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area_index() const;
  void _internal_set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 win_gold = 4;
  void clear_win_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold() const;
  void set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_win_gold() const;
  void _internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 odd = 3;
  void clear_odd();
  ::PROTOBUF_NAMESPACE_ID::int32 odd() const;
  void set_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_odd() const;
  void _internal_set_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CRASH.sS2CPlayerDot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 chairid_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_index_;
  ::PROTOBUF_NAMESPACE_ID::int64 win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 odd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Crash_2eproto;
};
// -------------------------------------------------------------------

class sS2CNotifyProgress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CRASH.sS2CNotifyProgress) */ {
 public:
  inline sS2CNotifyProgress() : sS2CNotifyProgress(nullptr) {}
  virtual ~sS2CNotifyProgress();

  sS2CNotifyProgress(const sS2CNotifyProgress& from);
  sS2CNotifyProgress(sS2CNotifyProgress&& from) noexcept
    : sS2CNotifyProgress() {
    *this = ::std::move(from);
  }

  inline sS2CNotifyProgress& operator=(const sS2CNotifyProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline sS2CNotifyProgress& operator=(sS2CNotifyProgress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const sS2CNotifyProgress& default_instance();

  static inline const sS2CNotifyProgress* internal_default_instance() {
    return reinterpret_cast<const sS2CNotifyProgress*>(
               &_sS2CNotifyProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(sS2CNotifyProgress& a, sS2CNotifyProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(sS2CNotifyProgress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(sS2CNotifyProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline sS2CNotifyProgress* New() const final {
    return CreateMaybeMessage<sS2CNotifyProgress>(nullptr);
  }

  sS2CNotifyProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<sS2CNotifyProgress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const sS2CNotifyProgress& from);
  void MergeFrom(const sS2CNotifyProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(sS2CNotifyProgress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CRASH.sS2CNotifyProgress";
  }
  protected:
  explicit sS2CNotifyProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Crash_2eproto);
    return ::descriptor_table_Crash_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsBoomFieldNumber = 1,
    kCurOddFieldNumber = 2,
  };
  // bool is_boom = 1;
  void clear_is_boom();
  bool is_boom() const;
  void set_is_boom(bool value);
  private:
  bool _internal_is_boom() const;
  void _internal_set_is_boom(bool value);
  public:

  // int32 cur_odd = 2;
  void clear_cur_odd();
  ::PROTOBUF_NAMESPACE_ID::int32 cur_odd() const;
  void set_cur_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cur_odd() const;
  void _internal_set_cur_odd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CRASH.sS2CNotifyProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool is_boom_;
  ::PROTOBUF_NAMESPACE_ID::int32 cur_odd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Crash_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// sC2SPlayerBet

// int32 area_index = 1;
inline void sC2SPlayerBet::clear_area_index() {
  area_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sC2SPlayerBet::_internal_area_index() const {
  return area_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sC2SPlayerBet::area_index() const {
  // @@protoc_insertion_point(field_get:CRASH.sC2SPlayerBet.area_index)
  return _internal_area_index();
}
inline void sC2SPlayerBet::_internal_set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_index_ = value;
}
inline void sC2SPlayerBet::set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area_index(value);
  // @@protoc_insertion_point(field_set:CRASH.sC2SPlayerBet.area_index)
}

// int32 bet_index = 2;
inline void sC2SPlayerBet::clear_bet_index() {
  bet_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sC2SPlayerBet::_internal_bet_index() const {
  return bet_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sC2SPlayerBet::bet_index() const {
  // @@protoc_insertion_point(field_get:CRASH.sC2SPlayerBet.bet_index)
  return _internal_bet_index();
}
inline void sC2SPlayerBet::_internal_set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_index_ = value;
}
inline void sC2SPlayerBet::set_bet_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet_index(value);
  // @@protoc_insertion_point(field_set:CRASH.sC2SPlayerBet.bet_index)
}

// int32 dot_odd_index = 3;
inline void sC2SPlayerBet::clear_dot_odd_index() {
  dot_odd_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sC2SPlayerBet::_internal_dot_odd_index() const {
  return dot_odd_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sC2SPlayerBet::dot_odd_index() const {
  // @@protoc_insertion_point(field_get:CRASH.sC2SPlayerBet.dot_odd_index)
  return _internal_dot_odd_index();
}
inline void sC2SPlayerBet::_internal_set_dot_odd_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dot_odd_index_ = value;
}
inline void sC2SPlayerBet::set_dot_odd_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dot_odd_index(value);
  // @@protoc_insertion_point(field_set:CRASH.sC2SPlayerBet.dot_odd_index)
}

// -------------------------------------------------------------------

// SC_SceneInfo

// int32 cur_state = 1;
inline void SC_SceneInfo::clear_cur_state() {
  cur_state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_cur_state() const {
  return cur_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::cur_state() const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.cur_state)
  return _internal_cur_state();
}
inline void SC_SceneInfo::_internal_set_cur_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_state_ = value;
}
inline void SC_SceneInfo::set_cur_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_state(value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.cur_state)
}

// int32 remain_time = 2;
inline void SC_SceneInfo::clear_remain_time() {
  remain_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_remain_time() const {
  return remain_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::remain_time() const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.remain_time)
  return _internal_remain_time();
}
inline void SC_SceneInfo::_internal_set_remain_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  remain_time_ = value;
}
inline void SC_SceneInfo::set_remain_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_remain_time(value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.remain_time)
}

// repeated int32 player_bet = 3;
inline int SC_SceneInfo::_internal_player_bet_size() const {
  return player_bet_.size();
}
inline int SC_SceneInfo::player_bet_size() const {
  return _internal_player_bet_size();
}
inline void SC_SceneInfo::clear_player_bet() {
  player_bet_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_player_bet(int index) const {
  return player_bet_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::player_bet(int index) const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.player_bet)
  return _internal_player_bet(index);
}
inline void SC_SceneInfo::set_player_bet(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  player_bet_.Set(index, value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.player_bet)
}
inline void SC_SceneInfo::_internal_add_player_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  player_bet_.Add(value);
}
inline void SC_SceneInfo::add_player_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_player_bet(value);
  // @@protoc_insertion_point(field_add:CRASH.SC_SceneInfo.player_bet)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_player_bet() const {
  return player_bet_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::player_bet() const {
  // @@protoc_insertion_point(field_list:CRASH.SC_SceneInfo.player_bet)
  return _internal_player_bet();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_player_bet() {
  return &player_bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_player_bet() {
  // @@protoc_insertion_point(field_mutable_list:CRASH.SC_SceneInfo.player_bet)
  return _internal_mutable_player_bet();
}

// repeated int64 player_win_gold = 4;
inline int SC_SceneInfo::_internal_player_win_gold_size() const {
  return player_win_gold_.size();
}
inline int SC_SceneInfo::player_win_gold_size() const {
  return _internal_player_win_gold_size();
}
inline void SC_SceneInfo::clear_player_win_gold() {
  player_win_gold_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::_internal_player_win_gold(int index) const {
  return player_win_gold_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::player_win_gold(int index) const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.player_win_gold)
  return _internal_player_win_gold(index);
}
inline void SC_SceneInfo::set_player_win_gold(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_win_gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.player_win_gold)
}
inline void SC_SceneInfo::_internal_add_player_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_win_gold_.Add(value);
}
inline void SC_SceneInfo::add_player_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_player_win_gold(value);
  // @@protoc_insertion_point(field_add:CRASH.SC_SceneInfo.player_win_gold)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SC_SceneInfo::_internal_player_win_gold() const {
  return player_win_gold_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SC_SceneInfo::player_win_gold() const {
  // @@protoc_insertion_point(field_list:CRASH.SC_SceneInfo.player_win_gold)
  return _internal_player_win_gold();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SC_SceneInfo::_internal_mutable_player_win_gold() {
  return &player_win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SC_SceneInfo::mutable_player_win_gold() {
  // @@protoc_insertion_point(field_mutable_list:CRASH.SC_SceneInfo.player_win_gold)
  return _internal_mutable_player_win_gold();
}

// repeated int32 player_win_dot_odd = 5;
inline int SC_SceneInfo::_internal_player_win_dot_odd_size() const {
  return player_win_dot_odd_.size();
}
inline int SC_SceneInfo::player_win_dot_odd_size() const {
  return _internal_player_win_dot_odd_size();
}
inline void SC_SceneInfo::clear_player_win_dot_odd() {
  player_win_dot_odd_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_player_win_dot_odd(int index) const {
  return player_win_dot_odd_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::player_win_dot_odd(int index) const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.player_win_dot_odd)
  return _internal_player_win_dot_odd(index);
}
inline void SC_SceneInfo::set_player_win_dot_odd(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  player_win_dot_odd_.Set(index, value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.player_win_dot_odd)
}
inline void SC_SceneInfo::_internal_add_player_win_dot_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  player_win_dot_odd_.Add(value);
}
inline void SC_SceneInfo::add_player_win_dot_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_player_win_dot_odd(value);
  // @@protoc_insertion_point(field_add:CRASH.SC_SceneInfo.player_win_dot_odd)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_player_win_dot_odd() const {
  return player_win_dot_odd_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::player_win_dot_odd() const {
  // @@protoc_insertion_point(field_list:CRASH.SC_SceneInfo.player_win_dot_odd)
  return _internal_player_win_dot_odd();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_player_win_dot_odd() {
  return &player_win_dot_odd_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_player_win_dot_odd() {
  // @@protoc_insertion_point(field_mutable_list:CRASH.SC_SceneInfo.player_win_dot_odd)
  return _internal_mutable_player_win_dot_odd();
}

// repeated int64 player_total_win_socre = 6;
inline int SC_SceneInfo::_internal_player_total_win_socre_size() const {
  return player_total_win_socre_.size();
}
inline int SC_SceneInfo::player_total_win_socre_size() const {
  return _internal_player_total_win_socre_size();
}
inline void SC_SceneInfo::clear_player_total_win_socre() {
  player_total_win_socre_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::_internal_player_total_win_socre(int index) const {
  return player_total_win_socre_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::player_total_win_socre(int index) const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.player_total_win_socre)
  return _internal_player_total_win_socre(index);
}
inline void SC_SceneInfo::set_player_total_win_socre(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_total_win_socre_.Set(index, value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.player_total_win_socre)
}
inline void SC_SceneInfo::_internal_add_player_total_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_total_win_socre_.Add(value);
}
inline void SC_SceneInfo::add_player_total_win_socre(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_player_total_win_socre(value);
  // @@protoc_insertion_point(field_add:CRASH.SC_SceneInfo.player_total_win_socre)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SC_SceneInfo::_internal_player_total_win_socre() const {
  return player_total_win_socre_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SC_SceneInfo::player_total_win_socre() const {
  // @@protoc_insertion_point(field_list:CRASH.SC_SceneInfo.player_total_win_socre)
  return _internal_player_total_win_socre();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SC_SceneInfo::_internal_mutable_player_total_win_socre() {
  return &player_total_win_socre_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SC_SceneInfo::mutable_player_total_win_socre() {
  // @@protoc_insertion_point(field_mutable_list:CRASH.SC_SceneInfo.player_total_win_socre)
  return _internal_mutable_player_total_win_socre();
}

// repeated int64 player_max_score = 7;
inline int SC_SceneInfo::_internal_player_max_score_size() const {
  return player_max_score_.size();
}
inline int SC_SceneInfo::player_max_score_size() const {
  return _internal_player_max_score_size();
}
inline void SC_SceneInfo::clear_player_max_score() {
  player_max_score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::_internal_player_max_score(int index) const {
  return player_max_score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 SC_SceneInfo::player_max_score(int index) const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.player_max_score)
  return _internal_player_max_score(index);
}
inline void SC_SceneInfo::set_player_max_score(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_max_score_.Set(index, value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.player_max_score)
}
inline void SC_SceneInfo::_internal_add_player_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  player_max_score_.Add(value);
}
inline void SC_SceneInfo::add_player_max_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_player_max_score(value);
  // @@protoc_insertion_point(field_add:CRASH.SC_SceneInfo.player_max_score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SC_SceneInfo::_internal_player_max_score() const {
  return player_max_score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
SC_SceneInfo::player_max_score() const {
  // @@protoc_insertion_point(field_list:CRASH.SC_SceneInfo.player_max_score)
  return _internal_player_max_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SC_SceneInfo::_internal_mutable_player_max_score() {
  return &player_max_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
SC_SceneInfo::mutable_player_max_score() {
  // @@protoc_insertion_point(field_mutable_list:CRASH.SC_SceneInfo.player_max_score)
  return _internal_mutable_player_max_score();
}

// int32 history_num = 8;
inline void SC_SceneInfo::clear_history_num() {
  history_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_history_num() const {
  return history_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::history_num() const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.history_num)
  return _internal_history_num();
}
inline void SC_SceneInfo::_internal_set_history_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  history_num_ = value;
}
inline void SC_SceneInfo::set_history_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_history_num(value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.history_num)
}

// repeated int32 history_result = 9;
inline int SC_SceneInfo::_internal_history_result_size() const {
  return history_result_.size();
}
inline int SC_SceneInfo::history_result_size() const {
  return _internal_history_result_size();
}
inline void SC_SceneInfo::clear_history_result() {
  history_result_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::_internal_history_result(int index) const {
  return history_result_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SC_SceneInfo::history_result(int index) const {
  // @@protoc_insertion_point(field_get:CRASH.SC_SceneInfo.history_result)
  return _internal_history_result(index);
}
inline void SC_SceneInfo::set_history_result(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  history_result_.Set(index, value);
  // @@protoc_insertion_point(field_set:CRASH.SC_SceneInfo.history_result)
}
inline void SC_SceneInfo::_internal_add_history_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  history_result_.Add(value);
}
inline void SC_SceneInfo::add_history_result(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_history_result(value);
  // @@protoc_insertion_point(field_add:CRASH.SC_SceneInfo.history_result)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::_internal_history_result() const {
  return history_result_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SC_SceneInfo::history_result() const {
  // @@protoc_insertion_point(field_list:CRASH.SC_SceneInfo.history_result)
  return _internal_history_result();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::_internal_mutable_history_result() {
  return &history_result_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SC_SceneInfo::mutable_history_result() {
  // @@protoc_insertion_point(field_mutable_list:CRASH.SC_SceneInfo.history_result)
  return _internal_mutable_history_result();
}

// -------------------------------------------------------------------

// sS2CPlayerBet

// int32 chairid = 1;
inline void sS2CPlayerBet::clear_chairid() {
  chairid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerBet::_internal_chairid() const {
  return chairid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerBet::chairid() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CPlayerBet.chairid)
  return _internal_chairid();
}
inline void sS2CPlayerBet::_internal_set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chairid_ = value;
}
inline void sS2CPlayerBet::set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chairid(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CPlayerBet.chairid)
}

// int32 area_index = 2;
inline void sS2CPlayerBet::clear_area_index() {
  area_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerBet::_internal_area_index() const {
  return area_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerBet::area_index() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CPlayerBet.area_index)
  return _internal_area_index();
}
inline void sS2CPlayerBet::_internal_set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_index_ = value;
}
inline void sS2CPlayerBet::set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area_index(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CPlayerBet.area_index)
}

// int32 bet = 3;
inline void sS2CPlayerBet::clear_bet() {
  bet_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerBet::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerBet::bet() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CPlayerBet.bet)
  return _internal_bet();
}
inline void sS2CPlayerBet::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_ = value;
}
inline void sS2CPlayerBet::set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CPlayerBet.bet)
}

// -------------------------------------------------------------------

// sS2CCancelBet

// int32 chairid = 1;
inline void sS2CCancelBet::clear_chairid() {
  chairid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CCancelBet::_internal_chairid() const {
  return chairid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CCancelBet::chairid() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CCancelBet.chairid)
  return _internal_chairid();
}
inline void sS2CCancelBet::_internal_set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chairid_ = value;
}
inline void sS2CCancelBet::set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chairid(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CCancelBet.chairid)
}

// int32 bet = 2;
inline void sS2CCancelBet::clear_bet() {
  bet_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CCancelBet::_internal_bet() const {
  return bet_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CCancelBet::bet() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CCancelBet.bet)
  return _internal_bet();
}
inline void sS2CCancelBet::_internal_set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bet_ = value;
}
inline void sS2CCancelBet::set_bet(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bet(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CCancelBet.bet)
}

// -------------------------------------------------------------------

// sS2CPlayerDot

// int32 chairid = 1;
inline void sS2CPlayerDot::clear_chairid() {
  chairid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerDot::_internal_chairid() const {
  return chairid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerDot::chairid() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CPlayerDot.chairid)
  return _internal_chairid();
}
inline void sS2CPlayerDot::_internal_set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  chairid_ = value;
}
inline void sS2CPlayerDot::set_chairid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_chairid(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CPlayerDot.chairid)
}

// int32 area_index = 2;
inline void sS2CPlayerDot::clear_area_index() {
  area_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerDot::_internal_area_index() const {
  return area_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerDot::area_index() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CPlayerDot.area_index)
  return _internal_area_index();
}
inline void sS2CPlayerDot::_internal_set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_index_ = value;
}
inline void sS2CPlayerDot::set_area_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area_index(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CPlayerDot.area_index)
}

// int32 odd = 3;
inline void sS2CPlayerDot::clear_odd() {
  odd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerDot::_internal_odd() const {
  return odd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CPlayerDot::odd() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CPlayerDot.odd)
  return _internal_odd();
}
inline void sS2CPlayerDot::_internal_set_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  odd_ = value;
}
inline void sS2CPlayerDot::set_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_odd(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CPlayerDot.odd)
}

// int64 win_gold = 4;
inline void sS2CPlayerDot::clear_win_gold() {
  win_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 sS2CPlayerDot::_internal_win_gold() const {
  return win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 sS2CPlayerDot::win_gold() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CPlayerDot.win_gold)
  return _internal_win_gold();
}
inline void sS2CPlayerDot::_internal_set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  win_gold_ = value;
}
inline void sS2CPlayerDot::set_win_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_win_gold(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CPlayerDot.win_gold)
}

// -------------------------------------------------------------------

// sS2CNotifyProgress

// bool is_boom = 1;
inline void sS2CNotifyProgress::clear_is_boom() {
  is_boom_ = false;
}
inline bool sS2CNotifyProgress::_internal_is_boom() const {
  return is_boom_;
}
inline bool sS2CNotifyProgress::is_boom() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CNotifyProgress.is_boom)
  return _internal_is_boom();
}
inline void sS2CNotifyProgress::_internal_set_is_boom(bool value) {
  
  is_boom_ = value;
}
inline void sS2CNotifyProgress::set_is_boom(bool value) {
  _internal_set_is_boom(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CNotifyProgress.is_boom)
}

// int32 cur_odd = 2;
inline void sS2CNotifyProgress::clear_cur_odd() {
  cur_odd_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CNotifyProgress::_internal_cur_odd() const {
  return cur_odd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 sS2CNotifyProgress::cur_odd() const {
  // @@protoc_insertion_point(field_get:CRASH.sS2CNotifyProgress.cur_odd)
  return _internal_cur_odd();
}
inline void sS2CNotifyProgress::_internal_set_cur_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cur_odd_ = value;
}
inline void sS2CNotifyProgress::set_cur_odd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cur_odd(value);
  // @@protoc_insertion_point(field_set:CRASH.sS2CNotifyProgress.cur_odd)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace CRASH

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CRASH::EMsgIDCRASH> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CRASH::EMsgIDCRASH>() {
  return ::CRASH::EMsgIDCRASH_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Crash_2eproto
