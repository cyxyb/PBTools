// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Login_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Login_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Login_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Login_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[49]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Login_2eproto;
class ActiveInfoRet;
class ActiveInfoRetDefaultTypeInternal;
extern ActiveInfoRetDefaultTypeInternal _ActiveInfoRet_default_instance_;
class MsgActiveInfo;
class MsgActiveInfoDefaultTypeInternal;
extern MsgActiveInfoDefaultTypeInternal _MsgActiveInfo_default_instance_;
class MsgActiveInfoCSPick;
class MsgActiveInfoCSPickDefaultTypeInternal;
extern MsgActiveInfoCSPickDefaultTypeInternal _MsgActiveInfoCSPick_default_instance_;
class MsgActiveInfoSCPick;
class MsgActiveInfoSCPickDefaultTypeInternal;
extern MsgActiveInfoSCPickDefaultTypeInternal _MsgActiveInfoSCPick_default_instance_;
class MsgActiveInfoSCRet;
class MsgActiveInfoSCRetDefaultTypeInternal;
extern MsgActiveInfoSCRetDefaultTypeInternal _MsgActiveInfoSCRet_default_instance_;
class MsgBankChangePassword;
class MsgBankChangePasswordDefaultTypeInternal;
extern MsgBankChangePasswordDefaultTypeInternal _MsgBankChangePassword_default_instance_;
class MsgBankOperate;
class MsgBankOperateDefaultTypeInternal;
extern MsgBankOperateDefaultTypeInternal _MsgBankOperate_default_instance_;
class MsgBankQueryNicname;
class MsgBankQueryNicnameDefaultTypeInternal;
extern MsgBankQueryNicnameDefaultTypeInternal _MsgBankQueryNicname_default_instance_;
class MsgBankRecord;
class MsgBankRecordDefaultTypeInternal;
extern MsgBankRecordDefaultTypeInternal _MsgBankRecord_default_instance_;
class MsgBankRecordResp;
class MsgBankRecordRespDefaultTypeInternal;
extern MsgBankRecordRespDefaultTypeInternal _MsgBankRecordResp_default_instance_;
class MsgBankTakeOut;
class MsgBankTakeOutDefaultTypeInternal;
extern MsgBankTakeOutDefaultTypeInternal _MsgBankTakeOut_default_instance_;
class MsgBankTransfer;
class MsgBankTransferDefaultTypeInternal;
extern MsgBankTransferDefaultTypeInternal _MsgBankTransfer_default_instance_;
class MsgBankTransferResp;
class MsgBankTransferRespDefaultTypeInternal;
extern MsgBankTransferRespDefaultTypeInternal _MsgBankTransferResp_default_instance_;
class MsgBindParentData;
class MsgBindParentDataDefaultTypeInternal;
extern MsgBindParentDataDefaultTypeInternal _MsgBindParentData_default_instance_;
class MsgBindPhone;
class MsgBindPhoneDefaultTypeInternal;
extern MsgBindPhoneDefaultTypeInternal _MsgBindPhone_default_instance_;
class MsgCheckInInfo;
class MsgCheckInInfoDefaultTypeInternal;
extern MsgCheckInInfoDefaultTypeInternal _MsgCheckInInfo_default_instance_;
class MsgCommonKV;
class MsgCommonKVDefaultTypeInternal;
extern MsgCommonKVDefaultTypeInternal _MsgCommonKV_default_instance_;
class MsgForgetPassword;
class MsgForgetPasswordDefaultTypeInternal;
extern MsgForgetPasswordDefaultTypeInternal _MsgForgetPassword_default_instance_;
class MsgGetAvatarInfo;
class MsgGetAvatarInfoDefaultTypeInternal;
extern MsgGetAvatarInfoDefaultTypeInternal _MsgGetAvatarInfo_default_instance_;
class MsgGetRank;
class MsgGetRankDefaultTypeInternal;
extern MsgGetRankDefaultTypeInternal _MsgGetRank_default_instance_;
class MsgInviteAwardConfig;
class MsgInviteAwardConfigDefaultTypeInternal;
extern MsgInviteAwardConfigDefaultTypeInternal _MsgInviteAwardConfig_default_instance_;
class MsgInviteAwardInfo;
class MsgInviteAwardInfoDefaultTypeInternal;
extern MsgInviteAwardInfoDefaultTypeInternal _MsgInviteAwardInfo_default_instance_;
class MsgItem;
class MsgItemDefaultTypeInternal;
extern MsgItemDefaultTypeInternal _MsgItem_default_instance_;
class MsgMailData;
class MsgMailDataDefaultTypeInternal;
extern MsgMailDataDefaultTypeInternal _MsgMailData_default_instance_;
class MsgMailsInfo;
class MsgMailsInfoDefaultTypeInternal;
extern MsgMailsInfoDefaultTypeInternal _MsgMailsInfo_default_instance_;
class MsgModifyPassword;
class MsgModifyPasswordDefaultTypeInternal;
extern MsgModifyPasswordDefaultTypeInternal _MsgModifyPassword_default_instance_;
class MsgModifySignature;
class MsgModifySignatureDefaultTypeInternal;
extern MsgModifySignatureDefaultTypeInternal _MsgModifySignature_default_instance_;
class MsgPhoneCode;
class MsgPhoneCodeDefaultTypeInternal;
extern MsgPhoneCodeDefaultTypeInternal _MsgPhoneCode_default_instance_;
class MsgPlayerInfo;
class MsgPlayerInfoDefaultTypeInternal;
extern MsgPlayerInfoDefaultTypeInternal _MsgPlayerInfo_default_instance_;
class MsgPlayerItem;
class MsgPlayerItemDefaultTypeInternal;
extern MsgPlayerItemDefaultTypeInternal _MsgPlayerItem_default_instance_;
class MsgPlayerLogin;
class MsgPlayerLoginDefaultTypeInternal;
extern MsgPlayerLoginDefaultTypeInternal _MsgPlayerLogin_default_instance_;
class MsgPlayerLoginResp;
class MsgPlayerLoginRespDefaultTypeInternal;
extern MsgPlayerLoginRespDefaultTypeInternal _MsgPlayerLoginResp_default_instance_;
class MsgQueryRebateRecord;
class MsgQueryRebateRecordDefaultTypeInternal;
extern MsgQueryRebateRecordDefaultTypeInternal _MsgQueryRebateRecord_default_instance_;
class MsgQueryRebateRecordInfo;
class MsgQueryRebateRecordInfoDefaultTypeInternal;
extern MsgQueryRebateRecordInfoDefaultTypeInternal _MsgQueryRebateRecordInfo_default_instance_;
class MsgRechargeInfo;
class MsgRechargeInfoDefaultTypeInternal;
extern MsgRechargeInfoDefaultTypeInternal _MsgRechargeInfo_default_instance_;
class MsgShareData;
class MsgShareDataDefaultTypeInternal;
extern MsgShareDataDefaultTypeInternal _MsgShareData_default_instance_;
class MsgSubagentInformation;
class MsgSubagentInformationDefaultTypeInternal;
extern MsgSubagentInformationDefaultTypeInternal _MsgSubagentInformation_default_instance_;
class MsgTopInfo;
class MsgTopInfoDefaultTypeInternal;
extern MsgTopInfoDefaultTypeInternal _MsgTopInfo_default_instance_;
class MsgTopListResp;
class MsgTopListRespDefaultTypeInternal;
extern MsgTopListRespDefaultTypeInternal _MsgTopListResp_default_instance_;
class MsgTtotalSubagentInformation;
class MsgTtotalSubagentInformationDefaultTypeInternal;
extern MsgTtotalSubagentInformationDefaultTypeInternal _MsgTtotalSubagentInformation_default_instance_;
class MsgTurnCfg;
class MsgTurnCfgDefaultTypeInternal;
extern MsgTurnCfgDefaultTypeInternal _MsgTurnCfg_default_instance_;
class MsgTurnPlayInfo;
class MsgTurnPlayInfoDefaultTypeInternal;
extern MsgTurnPlayInfoDefaultTypeInternal _MsgTurnPlayInfo_default_instance_;
class MsgTurntable;
class MsgTurntableDefaultTypeInternal;
extern MsgTurntableDefaultTypeInternal _MsgTurntable_default_instance_;
class MsgTurntableData;
class MsgTurntableDataDefaultTypeInternal;
extern MsgTurntableDataDefaultTypeInternal _MsgTurntableData_default_instance_;
class MsgTurntableHistoryData;
class MsgTurntableHistoryDataDefaultTypeInternal;
extern MsgTurntableHistoryDataDefaultTypeInternal _MsgTurntableHistoryData_default_instance_;
class MsgTurntableResp;
class MsgTurntableRespDefaultTypeInternal;
extern MsgTurntableRespDefaultTypeInternal _MsgTurntableResp_default_instance_;
class MsgUpgradeVIP;
class MsgUpgradeVIPDefaultTypeInternal;
extern MsgUpgradeVIPDefaultTypeInternal _MsgUpgradeVIP_default_instance_;
class MsgVIPConfig;
class MsgVIPConfigDefaultTypeInternal;
extern MsgVIPConfigDefaultTypeInternal _MsgVIPConfig_default_instance_;
class MsgVIPInfo;
class MsgVIPInfoDefaultTypeInternal;
extern MsgVIPInfoDefaultTypeInternal _MsgVIPInfo_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ActiveInfoRet* Arena::CreateMaybeMessage<::ActiveInfoRet>(Arena*);
template<> ::MsgActiveInfo* Arena::CreateMaybeMessage<::MsgActiveInfo>(Arena*);
template<> ::MsgActiveInfoCSPick* Arena::CreateMaybeMessage<::MsgActiveInfoCSPick>(Arena*);
template<> ::MsgActiveInfoSCPick* Arena::CreateMaybeMessage<::MsgActiveInfoSCPick>(Arena*);
template<> ::MsgActiveInfoSCRet* Arena::CreateMaybeMessage<::MsgActiveInfoSCRet>(Arena*);
template<> ::MsgBankChangePassword* Arena::CreateMaybeMessage<::MsgBankChangePassword>(Arena*);
template<> ::MsgBankOperate* Arena::CreateMaybeMessage<::MsgBankOperate>(Arena*);
template<> ::MsgBankQueryNicname* Arena::CreateMaybeMessage<::MsgBankQueryNicname>(Arena*);
template<> ::MsgBankRecord* Arena::CreateMaybeMessage<::MsgBankRecord>(Arena*);
template<> ::MsgBankRecordResp* Arena::CreateMaybeMessage<::MsgBankRecordResp>(Arena*);
template<> ::MsgBankTakeOut* Arena::CreateMaybeMessage<::MsgBankTakeOut>(Arena*);
template<> ::MsgBankTransfer* Arena::CreateMaybeMessage<::MsgBankTransfer>(Arena*);
template<> ::MsgBankTransferResp* Arena::CreateMaybeMessage<::MsgBankTransferResp>(Arena*);
template<> ::MsgBindParentData* Arena::CreateMaybeMessage<::MsgBindParentData>(Arena*);
template<> ::MsgBindPhone* Arena::CreateMaybeMessage<::MsgBindPhone>(Arena*);
template<> ::MsgCheckInInfo* Arena::CreateMaybeMessage<::MsgCheckInInfo>(Arena*);
template<> ::MsgCommonKV* Arena::CreateMaybeMessage<::MsgCommonKV>(Arena*);
template<> ::MsgForgetPassword* Arena::CreateMaybeMessage<::MsgForgetPassword>(Arena*);
template<> ::MsgGetAvatarInfo* Arena::CreateMaybeMessage<::MsgGetAvatarInfo>(Arena*);
template<> ::MsgGetRank* Arena::CreateMaybeMessage<::MsgGetRank>(Arena*);
template<> ::MsgInviteAwardConfig* Arena::CreateMaybeMessage<::MsgInviteAwardConfig>(Arena*);
template<> ::MsgInviteAwardInfo* Arena::CreateMaybeMessage<::MsgInviteAwardInfo>(Arena*);
template<> ::MsgItem* Arena::CreateMaybeMessage<::MsgItem>(Arena*);
template<> ::MsgMailData* Arena::CreateMaybeMessage<::MsgMailData>(Arena*);
template<> ::MsgMailsInfo* Arena::CreateMaybeMessage<::MsgMailsInfo>(Arena*);
template<> ::MsgModifyPassword* Arena::CreateMaybeMessage<::MsgModifyPassword>(Arena*);
template<> ::MsgModifySignature* Arena::CreateMaybeMessage<::MsgModifySignature>(Arena*);
template<> ::MsgPhoneCode* Arena::CreateMaybeMessage<::MsgPhoneCode>(Arena*);
template<> ::MsgPlayerInfo* Arena::CreateMaybeMessage<::MsgPlayerInfo>(Arena*);
template<> ::MsgPlayerItem* Arena::CreateMaybeMessage<::MsgPlayerItem>(Arena*);
template<> ::MsgPlayerLogin* Arena::CreateMaybeMessage<::MsgPlayerLogin>(Arena*);
template<> ::MsgPlayerLoginResp* Arena::CreateMaybeMessage<::MsgPlayerLoginResp>(Arena*);
template<> ::MsgQueryRebateRecord* Arena::CreateMaybeMessage<::MsgQueryRebateRecord>(Arena*);
template<> ::MsgQueryRebateRecordInfo* Arena::CreateMaybeMessage<::MsgQueryRebateRecordInfo>(Arena*);
template<> ::MsgRechargeInfo* Arena::CreateMaybeMessage<::MsgRechargeInfo>(Arena*);
template<> ::MsgShareData* Arena::CreateMaybeMessage<::MsgShareData>(Arena*);
template<> ::MsgSubagentInformation* Arena::CreateMaybeMessage<::MsgSubagentInformation>(Arena*);
template<> ::MsgTopInfo* Arena::CreateMaybeMessage<::MsgTopInfo>(Arena*);
template<> ::MsgTopListResp* Arena::CreateMaybeMessage<::MsgTopListResp>(Arena*);
template<> ::MsgTtotalSubagentInformation* Arena::CreateMaybeMessage<::MsgTtotalSubagentInformation>(Arena*);
template<> ::MsgTurnCfg* Arena::CreateMaybeMessage<::MsgTurnCfg>(Arena*);
template<> ::MsgTurnPlayInfo* Arena::CreateMaybeMessage<::MsgTurnPlayInfo>(Arena*);
template<> ::MsgTurntable* Arena::CreateMaybeMessage<::MsgTurntable>(Arena*);
template<> ::MsgTurntableData* Arena::CreateMaybeMessage<::MsgTurntableData>(Arena*);
template<> ::MsgTurntableHistoryData* Arena::CreateMaybeMessage<::MsgTurntableHistoryData>(Arena*);
template<> ::MsgTurntableResp* Arena::CreateMaybeMessage<::MsgTurntableResp>(Arena*);
template<> ::MsgUpgradeVIP* Arena::CreateMaybeMessage<::MsgUpgradeVIP>(Arena*);
template<> ::MsgVIPConfig* Arena::CreateMaybeMessage<::MsgVIPConfig>(Arena*);
template<> ::MsgVIPInfo* Arena::CreateMaybeMessage<::MsgVIPInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class MsgPlayerLogin PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPlayerLogin) */ {
 public:
  inline MsgPlayerLogin() : MsgPlayerLogin(nullptr) {}
  virtual ~MsgPlayerLogin();

  MsgPlayerLogin(const MsgPlayerLogin& from);
  MsgPlayerLogin(MsgPlayerLogin&& from) noexcept
    : MsgPlayerLogin() {
    *this = ::std::move(from);
  }

  inline MsgPlayerLogin& operator=(const MsgPlayerLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPlayerLogin& operator=(MsgPlayerLogin&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPlayerLogin& default_instance();

  static inline const MsgPlayerLogin* internal_default_instance() {
    return reinterpret_cast<const MsgPlayerLogin*>(
               &_MsgPlayerLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgPlayerLogin& a, MsgPlayerLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPlayerLogin* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPlayerLogin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPlayerLogin* New() const final {
    return CreateMaybeMessage<MsgPlayerLogin>(nullptr);
  }

  MsgPlayerLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPlayerLogin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPlayerLogin& from);
  void MergeFrom(const MsgPlayerLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPlayerLogin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPlayerLogin";
  }
  protected:
  explicit MsgPlayerLogin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountFieldNumber = 1,
    kPasswordFieldNumber = 2,
    kMachineNumFieldNumber = 7,
    kUserIpFieldNumber = 8,
    kAvatarFieldNumber = 10,
    kNicknameFieldNumber = 11,
    kPhoneFieldNumber = 12,
    kInviteCodeFieldNumber = 14,
    kPlatformIdFieldNumber = 3,
    kChannelIdFieldNumber = 4,
    kClientTypeFieldNumber = 5,
    kLoginTypeFieldNumber = 6,
    kIsDrainFieldNumber = 9,
    kCodeFieldNumber = 13,
  };
  // string account = 1;
  void clear_account();
  const std::string& account() const;
  void set_account(const std::string& value);
  void set_account(std::string&& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  std::string* mutable_account();
  std::string* release_account();
  void set_allocated_account(std::string* account);
  private:
  const std::string& _internal_account() const;
  void _internal_set_account(const std::string& value);
  std::string* _internal_mutable_account();
  public:

  // string password = 2;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // string machine_num = 7;
  void clear_machine_num();
  const std::string& machine_num() const;
  void set_machine_num(const std::string& value);
  void set_machine_num(std::string&& value);
  void set_machine_num(const char* value);
  void set_machine_num(const char* value, size_t size);
  std::string* mutable_machine_num();
  std::string* release_machine_num();
  void set_allocated_machine_num(std::string* machine_num);
  private:
  const std::string& _internal_machine_num() const;
  void _internal_set_machine_num(const std::string& value);
  std::string* _internal_mutable_machine_num();
  public:

  // string user_ip = 8;
  void clear_user_ip();
  const std::string& user_ip() const;
  void set_user_ip(const std::string& value);
  void set_user_ip(std::string&& value);
  void set_user_ip(const char* value);
  void set_user_ip(const char* value, size_t size);
  std::string* mutable_user_ip();
  std::string* release_user_ip();
  void set_allocated_user_ip(std::string* user_ip);
  private:
  const std::string& _internal_user_ip() const;
  void _internal_set_user_ip(const std::string& value);
  std::string* _internal_mutable_user_ip();
  public:

  // string avatar = 10;
  void clear_avatar();
  const std::string& avatar() const;
  void set_avatar(const std::string& value);
  void set_avatar(std::string&& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  std::string* mutable_avatar();
  std::string* release_avatar();
  void set_allocated_avatar(std::string* avatar);
  private:
  const std::string& _internal_avatar() const;
  void _internal_set_avatar(const std::string& value);
  std::string* _internal_mutable_avatar();
  public:

  // string nickname = 11;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // string phone = 12;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string invite_code = 14;
  void clear_invite_code();
  const std::string& invite_code() const;
  void set_invite_code(const std::string& value);
  void set_invite_code(std::string&& value);
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  std::string* mutable_invite_code();
  std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // int32 platform_id = 3;
  void clear_platform_id();
  ::PROTOBUF_NAMESPACE_ID::int32 platform_id() const;
  void set_platform_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_platform_id() const;
  void _internal_set_platform_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 channel_id = 4;
  void clear_channel_id();
  ::PROTOBUF_NAMESPACE_ID::int32 channel_id() const;
  void set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_channel_id() const;
  void _internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 client_type = 5;
  void clear_client_type();
  ::PROTOBUF_NAMESPACE_ID::int32 client_type() const;
  void set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_client_type() const;
  void _internal_set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 login_type = 6;
  void clear_login_type();
  ::PROTOBUF_NAMESPACE_ID::int32 login_type() const;
  void set_login_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_login_type() const;
  void _internal_set_login_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_drain = 9;
  void clear_is_drain();
  bool is_drain() const;
  void set_is_drain(bool value);
  private:
  bool _internal_is_drain() const;
  void _internal_set_is_drain(bool value);
  public:

  // int32 code = 13;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgPlayerLogin)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr machine_num_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr user_ip_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 platform_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 channel_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 client_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 login_type_;
  bool is_drain_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgPlayerLoginResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPlayerLoginResp) */ {
 public:
  inline MsgPlayerLoginResp() : MsgPlayerLoginResp(nullptr) {}
  virtual ~MsgPlayerLoginResp();

  MsgPlayerLoginResp(const MsgPlayerLoginResp& from);
  MsgPlayerLoginResp(MsgPlayerLoginResp&& from) noexcept
    : MsgPlayerLoginResp() {
    *this = ::std::move(from);
  }

  inline MsgPlayerLoginResp& operator=(const MsgPlayerLoginResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPlayerLoginResp& operator=(MsgPlayerLoginResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPlayerLoginResp& default_instance();

  static inline const MsgPlayerLoginResp* internal_default_instance() {
    return reinterpret_cast<const MsgPlayerLoginResp*>(
               &_MsgPlayerLoginResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgPlayerLoginResp& a, MsgPlayerLoginResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPlayerLoginResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPlayerLoginResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPlayerLoginResp* New() const final {
    return CreateMaybeMessage<MsgPlayerLoginResp>(nullptr);
  }

  MsgPlayerLoginResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPlayerLoginResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPlayerLoginResp& from);
  void MergeFrom(const MsgPlayerLoginResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPlayerLoginResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPlayerLoginResp";
  }
  protected:
  explicit MsgPlayerLoginResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountFieldNumber = 4,
    kNicknameFieldNumber = 5,
    kAvatarFieldNumber = 6,
    kPhoneNumFieldNumber = 11,
    kInviteCodeFieldNumber = 14,
    kSignatureFieldNumber = 16,
    kResCodeFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kBeautifulIdFieldNumber = 3,
    kUserTypeFieldNumber = 8,
    kCoinFieldNumber = 10,
    kFirstRechargeFieldNumber = 7,
    kIsDrainFieldNumber = 9,
    kBankPasswordFieldNumber = 15,
    kVipLevelFieldNumber = 12,
    kAvatarFrameFieldNumber = 13,
    kAgentLevelFieldNumber = 17,
  };
  // string account = 4;
  void clear_account();
  const std::string& account() const;
  void set_account(const std::string& value);
  void set_account(std::string&& value);
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  std::string* mutable_account();
  std::string* release_account();
  void set_allocated_account(std::string* account);
  private:
  const std::string& _internal_account() const;
  void _internal_set_account(const std::string& value);
  std::string* _internal_mutable_account();
  public:

  // string nickname = 5;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // string avatar = 6;
  void clear_avatar();
  const std::string& avatar() const;
  void set_avatar(const std::string& value);
  void set_avatar(std::string&& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  std::string* mutable_avatar();
  std::string* release_avatar();
  void set_allocated_avatar(std::string* avatar);
  private:
  const std::string& _internal_avatar() const;
  void _internal_set_avatar(const std::string& value);
  std::string* _internal_mutable_avatar();
  public:

  // string phone_num = 11;
  void clear_phone_num();
  const std::string& phone_num() const;
  void set_phone_num(const std::string& value);
  void set_phone_num(std::string&& value);
  void set_phone_num(const char* value);
  void set_phone_num(const char* value, size_t size);
  std::string* mutable_phone_num();
  std::string* release_phone_num();
  void set_allocated_phone_num(std::string* phone_num);
  private:
  const std::string& _internal_phone_num() const;
  void _internal_set_phone_num(const std::string& value);
  std::string* _internal_mutable_phone_num();
  public:

  // string invite_code = 14;
  void clear_invite_code();
  const std::string& invite_code() const;
  void set_invite_code(const std::string& value);
  void set_invite_code(std::string&& value);
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  std::string* mutable_invite_code();
  std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // string signature = 16;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // int32 res_code = 1;
  void clear_res_code();
  ::PROTOBUF_NAMESPACE_ID::int32 res_code() const;
  void set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_code() const;
  void _internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 beautiful_id = 3;
  void clear_beautiful_id();
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id() const;
  void set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_beautiful_id() const;
  void _internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_type = 8;
  void clear_user_type();
  ::PROTOBUF_NAMESPACE_ID::int32 user_type() const;
  void set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_type() const;
  void _internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 coin = 10;
  void clear_coin();
  ::PROTOBUF_NAMESPACE_ID::uint64 coin() const;
  void set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_coin() const;
  void _internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool first_recharge = 7;
  void clear_first_recharge();
  bool first_recharge() const;
  void set_first_recharge(bool value);
  private:
  bool _internal_first_recharge() const;
  void _internal_set_first_recharge(bool value);
  public:

  // bool is_drain = 9;
  void clear_is_drain();
  bool is_drain() const;
  void set_is_drain(bool value);
  private:
  bool _internal_is_drain() const;
  void _internal_set_is_drain(bool value);
  public:

  // bool bank_password = 15;
  void clear_bank_password();
  bool bank_password() const;
  void set_bank_password(bool value);
  private:
  bool _internal_bank_password() const;
  void _internal_set_bank_password(bool value);
  public:

  // int32 vip_level = 12;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 avatar_frame = 13;
  void clear_avatar_frame();
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame() const;
  void set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatar_frame() const;
  void _internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 agent_level = 17;
  void clear_agent_level();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_level() const;
  void set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agent_level() const;
  void _internal_set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgPlayerLoginResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_num_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_type_;
  ::PROTOBUF_NAMESPACE_ID::uint64 coin_;
  bool first_recharge_;
  bool is_drain_;
  bool bank_password_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgModifyPassword PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgModifyPassword) */ {
 public:
  inline MsgModifyPassword() : MsgModifyPassword(nullptr) {}
  virtual ~MsgModifyPassword();

  MsgModifyPassword(const MsgModifyPassword& from);
  MsgModifyPassword(MsgModifyPassword&& from) noexcept
    : MsgModifyPassword() {
    *this = ::std::move(from);
  }

  inline MsgModifyPassword& operator=(const MsgModifyPassword& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgModifyPassword& operator=(MsgModifyPassword&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgModifyPassword& default_instance();

  static inline const MsgModifyPassword* internal_default_instance() {
    return reinterpret_cast<const MsgModifyPassword*>(
               &_MsgModifyPassword_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgModifyPassword& a, MsgModifyPassword& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgModifyPassword* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgModifyPassword* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgModifyPassword* New() const final {
    return CreateMaybeMessage<MsgModifyPassword>(nullptr);
  }

  MsgModifyPassword* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgModifyPassword>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgModifyPassword& from);
  void MergeFrom(const MsgModifyPassword& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgModifyPassword* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgModifyPassword";
  }
  protected:
  explicit MsgModifyPassword(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOldPasswordFieldNumber = 1,
    kNewPasswordFieldNumber = 2,
  };
  // string old_password = 1;
  void clear_old_password();
  const std::string& old_password() const;
  void set_old_password(const std::string& value);
  void set_old_password(std::string&& value);
  void set_old_password(const char* value);
  void set_old_password(const char* value, size_t size);
  std::string* mutable_old_password();
  std::string* release_old_password();
  void set_allocated_old_password(std::string* old_password);
  private:
  const std::string& _internal_old_password() const;
  void _internal_set_old_password(const std::string& value);
  std::string* _internal_mutable_old_password();
  public:

  // string new_password = 2;
  void clear_new_password();
  const std::string& new_password() const;
  void set_new_password(const std::string& value);
  void set_new_password(std::string&& value);
  void set_new_password(const char* value);
  void set_new_password(const char* value, size_t size);
  std::string* mutable_new_password();
  std::string* release_new_password();
  void set_allocated_new_password(std::string* new_password);
  private:
  const std::string& _internal_new_password() const;
  void _internal_set_new_password(const std::string& value);
  std::string* _internal_mutable_new_password();
  public:

  // @@protoc_insertion_point(class_scope:MsgModifyPassword)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr old_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr new_password_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBindPhone PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBindPhone) */ {
 public:
  inline MsgBindPhone() : MsgBindPhone(nullptr) {}
  virtual ~MsgBindPhone();

  MsgBindPhone(const MsgBindPhone& from);
  MsgBindPhone(MsgBindPhone&& from) noexcept
    : MsgBindPhone() {
    *this = ::std::move(from);
  }

  inline MsgBindPhone& operator=(const MsgBindPhone& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBindPhone& operator=(MsgBindPhone&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBindPhone& default_instance();

  static inline const MsgBindPhone* internal_default_instance() {
    return reinterpret_cast<const MsgBindPhone*>(
               &_MsgBindPhone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgBindPhone& a, MsgBindPhone& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBindPhone* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBindPhone* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBindPhone* New() const final {
    return CreateMaybeMessage<MsgBindPhone>(nullptr);
  }

  MsgBindPhone* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBindPhone>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBindPhone& from);
  void MergeFrom(const MsgBindPhone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBindPhone* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBindPhone";
  }
  protected:
  explicit MsgBindPhone(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneNumFieldNumber = 2,
    kPasswordFieldNumber = 3,
    kInviteCodeFieldNumber = 4,
    kCodeFieldNumber = 1,
  };
  // string phone_num = 2;
  void clear_phone_num();
  const std::string& phone_num() const;
  void set_phone_num(const std::string& value);
  void set_phone_num(std::string&& value);
  void set_phone_num(const char* value);
  void set_phone_num(const char* value, size_t size);
  std::string* mutable_phone_num();
  std::string* release_phone_num();
  void set_allocated_phone_num(std::string* phone_num);
  private:
  const std::string& _internal_phone_num() const;
  void _internal_set_phone_num(const std::string& value);
  std::string* _internal_mutable_phone_num();
  public:

  // string password = 3;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // string invite_code = 4;
  void clear_invite_code();
  const std::string& invite_code() const;
  void set_invite_code(const std::string& value);
  void set_invite_code(std::string&& value);
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  std::string* mutable_invite_code();
  std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // int32 code = 1;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBindPhone)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_num_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgCommonKV PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgCommonKV) */ {
 public:
  inline MsgCommonKV() : MsgCommonKV(nullptr) {}
  virtual ~MsgCommonKV();

  MsgCommonKV(const MsgCommonKV& from);
  MsgCommonKV(MsgCommonKV&& from) noexcept
    : MsgCommonKV() {
    *this = ::std::move(from);
  }

  inline MsgCommonKV& operator=(const MsgCommonKV& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCommonKV& operator=(MsgCommonKV&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgCommonKV& default_instance();

  static inline const MsgCommonKV* internal_default_instance() {
    return reinterpret_cast<const MsgCommonKV*>(
               &_MsgCommonKV_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgCommonKV& a, MsgCommonKV& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCommonKV* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCommonKV* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgCommonKV* New() const final {
    return CreateMaybeMessage<MsgCommonKV>(nullptr);
  }

  MsgCommonKV* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgCommonKV>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgCommonKV& from);
  void MergeFrom(const MsgCommonKV& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCommonKV* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgCommonKV";
  }
  protected:
  explicit MsgCommonKV(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKFieldNumber = 1,
    kVFieldNumber = 2,
  };
  // int32 k = 1;
  void clear_k();
  ::PROTOBUF_NAMESPACE_ID::int32 k() const;
  void set_k(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_k() const;
  void _internal_set_k(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 v = 2;
  void clear_v();
  ::PROTOBUF_NAMESPACE_ID::int32 v() const;
  void set_v(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_v() const;
  void _internal_set_v(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgCommonKV)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 k_;
  ::PROTOBUF_NAMESPACE_ID::int32 v_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgCheckInInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgCheckInInfo) */ {
 public:
  inline MsgCheckInInfo() : MsgCheckInInfo(nullptr) {}
  virtual ~MsgCheckInInfo();

  MsgCheckInInfo(const MsgCheckInInfo& from);
  MsgCheckInInfo(MsgCheckInInfo&& from) noexcept
    : MsgCheckInInfo() {
    *this = ::std::move(from);
  }

  inline MsgCheckInInfo& operator=(const MsgCheckInInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCheckInInfo& operator=(MsgCheckInInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgCheckInInfo& default_instance();

  static inline const MsgCheckInInfo* internal_default_instance() {
    return reinterpret_cast<const MsgCheckInInfo*>(
               &_MsgCheckInInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgCheckInInfo& a, MsgCheckInInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCheckInInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCheckInInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgCheckInInfo* New() const final {
    return CreateMaybeMessage<MsgCheckInInfo>(nullptr);
  }

  MsgCheckInInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgCheckInInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgCheckInInfo& from);
  void MergeFrom(const MsgCheckInInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCheckInInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgCheckInInfo";
  }
  protected:
  explicit MsgCheckInInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCheckInCfgFieldNumber = 4,
    kCheckDaysFieldNumber = 1,
    kIsOpenFieldNumber = 2,
    kCanPickFieldNumber = 3,
  };
  // repeated .MsgCommonKV CheckInCfg = 4;
  int checkincfg_size() const;
  private:
  int _internal_checkincfg_size() const;
  public:
  void clear_checkincfg();
  ::MsgCommonKV* mutable_checkincfg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgCommonKV >*
      mutable_checkincfg();
  private:
  const ::MsgCommonKV& _internal_checkincfg(int index) const;
  ::MsgCommonKV* _internal_add_checkincfg();
  public:
  const ::MsgCommonKV& checkincfg(int index) const;
  ::MsgCommonKV* add_checkincfg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgCommonKV >&
      checkincfg() const;

  // int32 check_days = 1;
  void clear_check_days();
  ::PROTOBUF_NAMESPACE_ID::int32 check_days() const;
  void set_check_days(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_check_days() const;
  void _internal_set_check_days(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_open = 2;
  void clear_is_open();
  bool is_open() const;
  void set_is_open(bool value);
  private:
  bool _internal_is_open() const;
  void _internal_set_is_open(bool value);
  public:

  // bool can_pick = 3;
  void clear_can_pick();
  bool can_pick() const;
  void set_can_pick(bool value);
  private:
  bool _internal_can_pick() const;
  void _internal_set_can_pick(bool value);
  public:

  // @@protoc_insertion_point(class_scope:MsgCheckInInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgCommonKV > checkincfg_;
  ::PROTOBUF_NAMESPACE_ID::int32 check_days_;
  bool is_open_;
  bool can_pick_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTurntableHistoryData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTurntableHistoryData) */ {
 public:
  inline MsgTurntableHistoryData() : MsgTurntableHistoryData(nullptr) {}
  virtual ~MsgTurntableHistoryData();

  MsgTurntableHistoryData(const MsgTurntableHistoryData& from);
  MsgTurntableHistoryData(MsgTurntableHistoryData&& from) noexcept
    : MsgTurntableHistoryData() {
    *this = ::std::move(from);
  }

  inline MsgTurntableHistoryData& operator=(const MsgTurntableHistoryData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTurntableHistoryData& operator=(MsgTurntableHistoryData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTurntableHistoryData& default_instance();

  static inline const MsgTurntableHistoryData* internal_default_instance() {
    return reinterpret_cast<const MsgTurntableHistoryData*>(
               &_MsgTurntableHistoryData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgTurntableHistoryData& a, MsgTurntableHistoryData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTurntableHistoryData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTurntableHistoryData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTurntableHistoryData* New() const final {
    return CreateMaybeMessage<MsgTurntableHistoryData>(nullptr);
  }

  MsgTurntableHistoryData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTurntableHistoryData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTurntableHistoryData& from);
  void MergeFrom(const MsgTurntableHistoryData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTurntableHistoryData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTurntableHistoryData";
  }
  protected:
  explicit MsgTurntableHistoryData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNickNameFieldNumber = 2,
    kTimeFieldNumber = 7,
    kUserIdFieldNumber = 1,
    kScoreFieldNumber = 3,
    kAwardFieldNumber = 4,
    kTypeFieldNumber = 5,
    kAwardTypeFieldNumber = 6,
  };
  // string nick_name = 2;
  void clear_nick_name();
  const std::string& nick_name() const;
  void set_nick_name(const std::string& value);
  void set_nick_name(std::string&& value);
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  std::string* mutable_nick_name();
  std::string* release_nick_name();
  void set_allocated_nick_name(std::string* nick_name);
  private:
  const std::string& _internal_nick_name() const;
  void _internal_set_nick_name(const std::string& value);
  std::string* _internal_mutable_nick_name();
  public:

  // string time = 7;
  void clear_time();
  const std::string& time() const;
  void set_time(const std::string& value);
  void set_time(std::string&& value);
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  std::string* mutable_time();
  std::string* release_time();
  void set_allocated_time(std::string* time);
  private:
  const std::string& _internal_time() const;
  void _internal_set_time(const std::string& value);
  std::string* _internal_mutable_time();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 score = 3;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int32 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 award = 4;
  void clear_award();
  ::PROTOBUF_NAMESPACE_ID::int32 award() const;
  void set_award(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_award() const;
  void _internal_set_award(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 5;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 award_type = 6;
  void clear_award_type();
  ::PROTOBUF_NAMESPACE_ID::int32 award_type() const;
  void set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_award_type() const;
  void _internal_set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTurntableHistoryData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nick_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr time_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 score_;
  ::PROTOBUF_NAMESPACE_ID::int32 award_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 award_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTurnPlayInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTurnPlayInfo) */ {
 public:
  inline MsgTurnPlayInfo() : MsgTurnPlayInfo(nullptr) {}
  virtual ~MsgTurnPlayInfo();

  MsgTurnPlayInfo(const MsgTurnPlayInfo& from);
  MsgTurnPlayInfo(MsgTurnPlayInfo&& from) noexcept
    : MsgTurnPlayInfo() {
    *this = ::std::move(from);
  }

  inline MsgTurnPlayInfo& operator=(const MsgTurnPlayInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTurnPlayInfo& operator=(MsgTurnPlayInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTurnPlayInfo& default_instance();

  static inline const MsgTurnPlayInfo* internal_default_instance() {
    return reinterpret_cast<const MsgTurnPlayInfo*>(
               &_MsgTurnPlayInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgTurnPlayInfo& a, MsgTurnPlayInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTurnPlayInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTurnPlayInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTurnPlayInfo* New() const final {
    return CreateMaybeMessage<MsgTurnPlayInfo>(nullptr);
  }

  MsgTurnPlayInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTurnPlayInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTurnPlayInfo& from);
  void MergeFrom(const MsgTurnPlayInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTurnPlayInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTurnPlayInfo";
  }
  protected:
  explicit MsgTurnPlayInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayNumFieldNumber = 1,
    kLimitTurnFieldNumber = 2,
    kNeedScoreFieldNumber = 3,
    kTurnProFieldNumber = 4,
    kTurnMaxProFieldNumber = 5,
  };
  // int32 play_num = 1;
  void clear_play_num();
  ::PROTOBUF_NAMESPACE_ID::int32 play_num() const;
  void set_play_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_play_num() const;
  void _internal_set_play_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 limit_turn = 2;
  void clear_limit_turn();
  ::PROTOBUF_NAMESPACE_ID::int32 limit_turn() const;
  void set_limit_turn(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit_turn() const;
  void _internal_set_limit_turn(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 need_score = 3;
  void clear_need_score();
  ::PROTOBUF_NAMESPACE_ID::int32 need_score() const;
  void set_need_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_need_score() const;
  void _internal_set_need_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 turn_pro = 4;
  void clear_turn_pro();
  ::PROTOBUF_NAMESPACE_ID::int32 turn_pro() const;
  void set_turn_pro(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_turn_pro() const;
  void _internal_set_turn_pro(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 turn_max_pro = 5;
  void clear_turn_max_pro();
  ::PROTOBUF_NAMESPACE_ID::int32 turn_max_pro() const;
  void set_turn_max_pro(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_turn_max_pro() const;
  void _internal_set_turn_max_pro(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTurnPlayInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 play_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_turn_;
  ::PROTOBUF_NAMESPACE_ID::int32 need_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 turn_pro_;
  ::PROTOBUF_NAMESPACE_ID::int32 turn_max_pro_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTurnCfg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTurnCfg) */ {
 public:
  inline MsgTurnCfg() : MsgTurnCfg(nullptr) {}
  virtual ~MsgTurnCfg();

  MsgTurnCfg(const MsgTurnCfg& from);
  MsgTurnCfg(MsgTurnCfg&& from) noexcept
    : MsgTurnCfg() {
    *this = ::std::move(from);
  }

  inline MsgTurnCfg& operator=(const MsgTurnCfg& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTurnCfg& operator=(MsgTurnCfg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTurnCfg& default_instance();

  static inline const MsgTurnCfg* internal_default_instance() {
    return reinterpret_cast<const MsgTurnCfg*>(
               &_MsgTurnCfg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgTurnCfg& a, MsgTurnCfg& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTurnCfg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTurnCfg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTurnCfg* New() const final {
    return CreateMaybeMessage<MsgTurnCfg>(nullptr);
  }

  MsgTurnCfg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTurnCfg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTurnCfg& from);
  void MergeFrom(const MsgTurnCfg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTurnCfg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTurnCfg";
  }
  protected:
  explicit MsgTurnCfg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kArwadFieldNumber = 2,
    kArwadTypeFieldNumber = 3,
    kTypeFieldNumber = 4,
  };
  // int32 index = 1;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 arwad = 2;
  void clear_arwad();
  ::PROTOBUF_NAMESPACE_ID::int32 arwad() const;
  void set_arwad(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arwad() const;
  void _internal_set_arwad(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 arwad_type = 3;
  void clear_arwad_type();
  ::PROTOBUF_NAMESPACE_ID::int32 arwad_type() const;
  void set_arwad_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_arwad_type() const;
  void _internal_set_arwad_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 4;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTurnCfg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 arwad_;
  ::PROTOBUF_NAMESPACE_ID::int32 arwad_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTurntableData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTurntableData) */ {
 public:
  inline MsgTurntableData() : MsgTurntableData(nullptr) {}
  virtual ~MsgTurntableData();

  MsgTurntableData(const MsgTurntableData& from);
  MsgTurntableData(MsgTurntableData&& from) noexcept
    : MsgTurntableData() {
    *this = ::std::move(from);
  }

  inline MsgTurntableData& operator=(const MsgTurntableData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTurntableData& operator=(MsgTurntableData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTurntableData& default_instance();

  static inline const MsgTurntableData* internal_default_instance() {
    return reinterpret_cast<const MsgTurntableData*>(
               &_MsgTurntableData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgTurntableData& a, MsgTurntableData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTurntableData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTurntableData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTurntableData* New() const final {
    return CreateMaybeMessage<MsgTurntableData>(nullptr);
  }

  MsgTurntableData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTurntableData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTurntableData& from);
  void MergeFrom(const MsgTurntableData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTurntableData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTurntableData";
  }
  protected:
  explicit MsgTurntableData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSilverCfgFieldNumber = 6,
    kGoldCfgFieldNumber = 7,
    kThisHistoryFieldNumber = 8,
    kBigHistoryFieldNumber = 9,
    kSilverInfoFieldNumber = 4,
    kGoldInfoFieldNumber = 5,
    kScoreFieldNumber = 1,
    kGoldToScoreFieldNumber = 3,
  };
  // repeated .MsgTurnCfg silver_cfg = 6;
  int silver_cfg_size() const;
  private:
  int _internal_silver_cfg_size() const;
  public:
  void clear_silver_cfg();
  ::MsgTurnCfg* mutable_silver_cfg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >*
      mutable_silver_cfg();
  private:
  const ::MsgTurnCfg& _internal_silver_cfg(int index) const;
  ::MsgTurnCfg* _internal_add_silver_cfg();
  public:
  const ::MsgTurnCfg& silver_cfg(int index) const;
  ::MsgTurnCfg* add_silver_cfg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >&
      silver_cfg() const;

  // repeated .MsgTurnCfg gold_cfg = 7;
  int gold_cfg_size() const;
  private:
  int _internal_gold_cfg_size() const;
  public:
  void clear_gold_cfg();
  ::MsgTurnCfg* mutable_gold_cfg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >*
      mutable_gold_cfg();
  private:
  const ::MsgTurnCfg& _internal_gold_cfg(int index) const;
  ::MsgTurnCfg* _internal_add_gold_cfg();
  public:
  const ::MsgTurnCfg& gold_cfg(int index) const;
  ::MsgTurnCfg* add_gold_cfg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >&
      gold_cfg() const;

  // repeated .MsgTurntableHistoryData this_history = 8;
  int this_history_size() const;
  private:
  int _internal_this_history_size() const;
  public:
  void clear_this_history();
  ::MsgTurntableHistoryData* mutable_this_history(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >*
      mutable_this_history();
  private:
  const ::MsgTurntableHistoryData& _internal_this_history(int index) const;
  ::MsgTurntableHistoryData* _internal_add_this_history();
  public:
  const ::MsgTurntableHistoryData& this_history(int index) const;
  ::MsgTurntableHistoryData* add_this_history();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >&
      this_history() const;

  // repeated .MsgTurntableHistoryData big_history = 9;
  int big_history_size() const;
  private:
  int _internal_big_history_size() const;
  public:
  void clear_big_history();
  ::MsgTurntableHistoryData* mutable_big_history(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >*
      mutable_big_history();
  private:
  const ::MsgTurntableHistoryData& _internal_big_history(int index) const;
  ::MsgTurntableHistoryData* _internal_add_big_history();
  public:
  const ::MsgTurntableHistoryData& big_history(int index) const;
  ::MsgTurntableHistoryData* add_big_history();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >&
      big_history() const;

  // .MsgTurnPlayInfo silver_info = 4;
  bool has_silver_info() const;
  private:
  bool _internal_has_silver_info() const;
  public:
  void clear_silver_info();
  const ::MsgTurnPlayInfo& silver_info() const;
  ::MsgTurnPlayInfo* release_silver_info();
  ::MsgTurnPlayInfo* mutable_silver_info();
  void set_allocated_silver_info(::MsgTurnPlayInfo* silver_info);
  private:
  const ::MsgTurnPlayInfo& _internal_silver_info() const;
  ::MsgTurnPlayInfo* _internal_mutable_silver_info();
  public:
  void unsafe_arena_set_allocated_silver_info(
      ::MsgTurnPlayInfo* silver_info);
  ::MsgTurnPlayInfo* unsafe_arena_release_silver_info();

  // .MsgTurnPlayInfo gold_info = 5;
  bool has_gold_info() const;
  private:
  bool _internal_has_gold_info() const;
  public:
  void clear_gold_info();
  const ::MsgTurnPlayInfo& gold_info() const;
  ::MsgTurnPlayInfo* release_gold_info();
  ::MsgTurnPlayInfo* mutable_gold_info();
  void set_allocated_gold_info(::MsgTurnPlayInfo* gold_info);
  private:
  const ::MsgTurnPlayInfo& _internal_gold_info() const;
  ::MsgTurnPlayInfo* _internal_mutable_gold_info();
  public:
  void unsafe_arena_set_allocated_gold_info(
      ::MsgTurnPlayInfo* gold_info);
  ::MsgTurnPlayInfo* unsafe_arena_release_gold_info();

  // int64 score = 1;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int64 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 gold_to_score = 3;
  void clear_gold_to_score();
  ::PROTOBUF_NAMESPACE_ID::int32 gold_to_score() const;
  void set_gold_to_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gold_to_score() const;
  void _internal_set_gold_to_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTurntableData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg > silver_cfg_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg > gold_cfg_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData > this_history_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData > big_history_;
  ::MsgTurnPlayInfo* silver_info_;
  ::MsgTurnPlayInfo* gold_info_;
  ::PROTOBUF_NAMESPACE_ID::int64 score_;
  ::PROTOBUF_NAMESPACE_ID::int32 gold_to_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTurntable PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTurntable) */ {
 public:
  inline MsgTurntable() : MsgTurntable(nullptr) {}
  virtual ~MsgTurntable();

  MsgTurntable(const MsgTurntable& from);
  MsgTurntable(MsgTurntable&& from) noexcept
    : MsgTurntable() {
    *this = ::std::move(from);
  }

  inline MsgTurntable& operator=(const MsgTurntable& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTurntable& operator=(MsgTurntable&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTurntable& default_instance();

  static inline const MsgTurntable* internal_default_instance() {
    return reinterpret_cast<const MsgTurntable*>(
               &_MsgTurntable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MsgTurntable& a, MsgTurntable& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTurntable* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTurntable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTurntable* New() const final {
    return CreateMaybeMessage<MsgTurntable>(nullptr);
  }

  MsgTurntable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTurntable>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTurntable& from);
  void MergeFrom(const MsgTurntable& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTurntable* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTurntable";
  }
  protected:
  explicit MsgTurntable(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTurnTypeFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // int64 turn_type = 2;
  void clear_turn_type();
  ::PROTOBUF_NAMESPACE_ID::int64 turn_type() const;
  void set_turn_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_turn_type() const;
  void _internal_set_turn_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTurntable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 turn_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTurntableResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTurntableResp) */ {
 public:
  inline MsgTurntableResp() : MsgTurntableResp(nullptr) {}
  virtual ~MsgTurntableResp();

  MsgTurntableResp(const MsgTurntableResp& from);
  MsgTurntableResp(MsgTurntableResp&& from) noexcept
    : MsgTurntableResp() {
    *this = ::std::move(from);
  }

  inline MsgTurntableResp& operator=(const MsgTurntableResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTurntableResp& operator=(MsgTurntableResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTurntableResp& default_instance();

  static inline const MsgTurntableResp* internal_default_instance() {
    return reinterpret_cast<const MsgTurntableResp*>(
               &_MsgTurntableResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MsgTurntableResp& a, MsgTurntableResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTurntableResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTurntableResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTurntableResp* New() const final {
    return CreateMaybeMessage<MsgTurntableResp>(nullptr);
  }

  MsgTurntableResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTurntableResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTurntableResp& from);
  void MergeFrom(const MsgTurntableResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTurntableResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTurntableResp";
  }
  protected:
  explicit MsgTurntableResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScoreFieldNumber = 1,
    kNewValueFieldNumber = 3,
    kTurnIndexFieldNumber = 4,
    kGetValueFieldNumber = 5,
    kAwardTypeFieldNumber = 2,
  };
  // int64 score = 1;
  void clear_score();
  ::PROTOBUF_NAMESPACE_ID::int64 score() const;
  void set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_score() const;
  void _internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 new_value = 3;
  void clear_new_value();
  ::PROTOBUF_NAMESPACE_ID::int64 new_value() const;
  void set_new_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_new_value() const;
  void _internal_set_new_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 turnIndex = 4;
  void clear_turnindex();
  ::PROTOBUF_NAMESPACE_ID::int64 turnindex() const;
  void set_turnindex(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_turnindex() const;
  void _internal_set_turnindex(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 get_value = 5;
  void clear_get_value();
  ::PROTOBUF_NAMESPACE_ID::int64 get_value() const;
  void set_get_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_get_value() const;
  void _internal_set_get_value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 award_type = 2;
  void clear_award_type();
  ::PROTOBUF_NAMESPACE_ID::int32 award_type() const;
  void set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_award_type() const;
  void _internal_set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTurntableResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 score_;
  ::PROTOBUF_NAMESPACE_ID::int64 new_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 turnindex_;
  ::PROTOBUF_NAMESPACE_ID::int64 get_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 award_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgMailsInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgMailsInfo) */ {
 public:
  inline MsgMailsInfo() : MsgMailsInfo(nullptr) {}
  virtual ~MsgMailsInfo();

  MsgMailsInfo(const MsgMailsInfo& from);
  MsgMailsInfo(MsgMailsInfo&& from) noexcept
    : MsgMailsInfo() {
    *this = ::std::move(from);
  }

  inline MsgMailsInfo& operator=(const MsgMailsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMailsInfo& operator=(MsgMailsInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgMailsInfo& default_instance();

  static inline const MsgMailsInfo* internal_default_instance() {
    return reinterpret_cast<const MsgMailsInfo*>(
               &_MsgMailsInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MsgMailsInfo& a, MsgMailsInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgMailsInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMailsInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgMailsInfo* New() const final {
    return CreateMaybeMessage<MsgMailsInfo>(nullptr);
  }

  MsgMailsInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgMailsInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgMailsInfo& from);
  void MergeFrom(const MsgMailsInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMailsInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgMailsInfo";
  }
  protected:
  explicit MsgMailsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMailsFieldNumber = 1,
  };
  // repeated .MsgMailData mails = 1;
  int mails_size() const;
  private:
  int _internal_mails_size() const;
  public:
  void clear_mails();
  ::MsgMailData* mutable_mails(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgMailData >*
      mutable_mails();
  private:
  const ::MsgMailData& _internal_mails(int index) const;
  ::MsgMailData* _internal_add_mails();
  public:
  const ::MsgMailData& mails(int index) const;
  ::MsgMailData* add_mails();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgMailData >&
      mails() const;

  // @@protoc_insertion_point(class_scope:MsgMailsInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgMailData > mails_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgMailData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgMailData) */ {
 public:
  inline MsgMailData() : MsgMailData(nullptr) {}
  virtual ~MsgMailData();

  MsgMailData(const MsgMailData& from);
  MsgMailData(MsgMailData&& from) noexcept
    : MsgMailData() {
    *this = ::std::move(from);
  }

  inline MsgMailData& operator=(const MsgMailData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMailData& operator=(MsgMailData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgMailData& default_instance();

  static inline const MsgMailData* internal_default_instance() {
    return reinterpret_cast<const MsgMailData*>(
               &_MsgMailData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MsgMailData& a, MsgMailData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgMailData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMailData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgMailData* New() const final {
    return CreateMaybeMessage<MsgMailData>(nullptr);
  }

  MsgMailData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgMailData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgMailData& from);
  void MergeFrom(const MsgMailData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMailData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgMailData";
  }
  protected:
  explicit MsgMailData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 4,
    kContentFieldNumber = 5,
    kMailIdFieldNumber = 1,
    kSendUserIdFieldNumber = 2,
    kGoldFieldNumber = 6,
    kSendTimeFieldNumber = 3,
    kIsReadFieldNumber = 7,
    kIsClaimFieldNumber = 8,
    kToUserIdFieldNumber = 9,
  };
  // string title = 4;
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // string content = 5;
  void clear_content();
  const std::string& content() const;
  void set_content(const std::string& value);
  void set_content(std::string&& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  std::string* mutable_content();
  std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // int32 mail_id = 1;
  void clear_mail_id();
  ::PROTOBUF_NAMESPACE_ID::int32 mail_id() const;
  void set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mail_id() const;
  void _internal_set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 send_user_id = 2;
  void clear_send_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 send_user_id() const;
  void set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_send_user_id() const;
  void _internal_set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 gold = 6;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 send_time = 3;
  void clear_send_time();
  ::PROTOBUF_NAMESPACE_ID::int32 send_time() const;
  void set_send_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_send_time() const;
  void _internal_set_send_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_read = 7;
  void clear_is_read();
  bool is_read() const;
  void set_is_read(bool value);
  private:
  bool _internal_is_read() const;
  void _internal_set_is_read(bool value);
  public:

  // bool is_claim = 8;
  void clear_is_claim();
  bool is_claim() const;
  void set_is_claim(bool value);
  private:
  bool _internal_is_claim() const;
  void _internal_set_is_claim(bool value);
  public:

  // int32 to_user_id = 9;
  void clear_to_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 to_user_id() const;
  void set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_to_user_id() const;
  void _internal_set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgMailData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
  ::PROTOBUF_NAMESPACE_ID::int32 mail_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 send_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 send_time_;
  bool is_read_;
  bool is_claim_;
  ::PROTOBUF_NAMESPACE_ID::int32 to_user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgShareData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgShareData) */ {
 public:
  inline MsgShareData() : MsgShareData(nullptr) {}
  virtual ~MsgShareData();

  MsgShareData(const MsgShareData& from);
  MsgShareData(MsgShareData&& from) noexcept
    : MsgShareData() {
    *this = ::std::move(from);
  }

  inline MsgShareData& operator=(const MsgShareData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgShareData& operator=(MsgShareData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgShareData& default_instance();

  static inline const MsgShareData* internal_default_instance() {
    return reinterpret_cast<const MsgShareData*>(
               &_MsgShareData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(MsgShareData& a, MsgShareData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgShareData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgShareData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgShareData* New() const final {
    return CreateMaybeMessage<MsgShareData>(nullptr);
  }

  MsgShareData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgShareData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgShareData& from);
  void MergeFrom(const MsgShareData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgShareData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgShareData";
  }
  protected:
  explicit MsgShareData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBindListFieldNumber = 2,
    kInviteCodeFieldNumber = 1,
  };
  // repeated int32 bind_list = 2;
  int bind_list_size() const;
  private:
  int _internal_bind_list_size() const;
  public:
  void clear_bind_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bind_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_bind_list() const;
  void _internal_add_bind_list(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_bind_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 bind_list(int index) const;
  void set_bind_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_bind_list(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      bind_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_bind_list();

  // string invite_code = 1;
  void clear_invite_code();
  const std::string& invite_code() const;
  void set_invite_code(const std::string& value);
  void set_invite_code(std::string&& value);
  void set_invite_code(const char* value);
  void set_invite_code(const char* value, size_t size);
  std::string* mutable_invite_code();
  std::string* release_invite_code();
  void set_allocated_invite_code(std::string* invite_code);
  private:
  const std::string& _internal_invite_code() const;
  void _internal_set_invite_code(const std::string& value);
  std::string* _internal_mutable_invite_code();
  public:

  // @@protoc_insertion_point(class_scope:MsgShareData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > bind_list_;
  mutable std::atomic<int> _bind_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invite_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBindParentData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBindParentData) */ {
 public:
  inline MsgBindParentData() : MsgBindParentData(nullptr) {}
  virtual ~MsgBindParentData();

  MsgBindParentData(const MsgBindParentData& from);
  MsgBindParentData(MsgBindParentData&& from) noexcept
    : MsgBindParentData() {
    *this = ::std::move(from);
  }

  inline MsgBindParentData& operator=(const MsgBindParentData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBindParentData& operator=(MsgBindParentData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBindParentData& default_instance();

  static inline const MsgBindParentData* internal_default_instance() {
    return reinterpret_cast<const MsgBindParentData*>(
               &_MsgBindParentData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(MsgBindParentData& a, MsgBindParentData& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBindParentData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBindParentData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBindParentData* New() const final {
    return CreateMaybeMessage<MsgBindParentData>(nullptr);
  }

  MsgBindParentData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBindParentData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBindParentData& from);
  void MergeFrom(const MsgBindParentData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBindParentData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBindParentData";
  }
  protected:
  explicit MsgBindParentData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStrCodeFieldNumber = 1,
  };
  // string strCode = 1;
  void clear_strcode();
  const std::string& strcode() const;
  void set_strcode(const std::string& value);
  void set_strcode(std::string&& value);
  void set_strcode(const char* value);
  void set_strcode(const char* value, size_t size);
  std::string* mutable_strcode();
  std::string* release_strcode();
  void set_allocated_strcode(std::string* strcode);
  private:
  const std::string& _internal_strcode() const;
  void _internal_set_strcode(const std::string& value);
  std::string* _internal_mutable_strcode();
  public:

  // @@protoc_insertion_point(class_scope:MsgBindParentData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr strcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgInviteAwardInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgInviteAwardInfo) */ {
 public:
  inline MsgInviteAwardInfo() : MsgInviteAwardInfo(nullptr) {}
  virtual ~MsgInviteAwardInfo();

  MsgInviteAwardInfo(const MsgInviteAwardInfo& from);
  MsgInviteAwardInfo(MsgInviteAwardInfo&& from) noexcept
    : MsgInviteAwardInfo() {
    *this = ::std::move(from);
  }

  inline MsgInviteAwardInfo& operator=(const MsgInviteAwardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInviteAwardInfo& operator=(MsgInviteAwardInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgInviteAwardInfo& default_instance();

  static inline const MsgInviteAwardInfo* internal_default_instance() {
    return reinterpret_cast<const MsgInviteAwardInfo*>(
               &_MsgInviteAwardInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(MsgInviteAwardInfo& a, MsgInviteAwardInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgInviteAwardInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInviteAwardInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgInviteAwardInfo* New() const final {
    return CreateMaybeMessage<MsgInviteAwardInfo>(nullptr);
  }

  MsgInviteAwardInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgInviteAwardInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgInviteAwardInfo& from);
  void MergeFrom(const MsgInviteAwardInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInviteAwardInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgInviteAwardInfo";
  }
  protected:
  explicit MsgInviteAwardInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAwardCfgFieldNumber = 3,
    kInviteNumFieldNumber = 1,
    kPickIndexFieldNumber = 2,
  };
  // repeated .MsgInviteAwardConfig awardCfg = 3;
  int awardcfg_size() const;
  private:
  int _internal_awardcfg_size() const;
  public:
  void clear_awardcfg();
  ::MsgInviteAwardConfig* mutable_awardcfg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgInviteAwardConfig >*
      mutable_awardcfg();
  private:
  const ::MsgInviteAwardConfig& _internal_awardcfg(int index) const;
  ::MsgInviteAwardConfig* _internal_add_awardcfg();
  public:
  const ::MsgInviteAwardConfig& awardcfg(int index) const;
  ::MsgInviteAwardConfig* add_awardcfg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgInviteAwardConfig >&
      awardcfg() const;

  // int32 inviteNum = 1;
  void clear_invitenum();
  ::PROTOBUF_NAMESPACE_ID::int32 invitenum() const;
  void set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_invitenum() const;
  void _internal_set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pickIndex = 2;
  void clear_pickindex();
  ::PROTOBUF_NAMESPACE_ID::int32 pickindex() const;
  void set_pickindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pickindex() const;
  void _internal_set_pickindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgInviteAwardInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgInviteAwardConfig > awardcfg_;
  ::PROTOBUF_NAMESPACE_ID::int32 invitenum_;
  ::PROTOBUF_NAMESPACE_ID::int32 pickindex_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgInviteAwardConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgInviteAwardConfig) */ {
 public:
  inline MsgInviteAwardConfig() : MsgInviteAwardConfig(nullptr) {}
  virtual ~MsgInviteAwardConfig();

  MsgInviteAwardConfig(const MsgInviteAwardConfig& from);
  MsgInviteAwardConfig(MsgInviteAwardConfig&& from) noexcept
    : MsgInviteAwardConfig() {
    *this = ::std::move(from);
  }

  inline MsgInviteAwardConfig& operator=(const MsgInviteAwardConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInviteAwardConfig& operator=(MsgInviteAwardConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgInviteAwardConfig& default_instance();

  static inline const MsgInviteAwardConfig* internal_default_instance() {
    return reinterpret_cast<const MsgInviteAwardConfig*>(
               &_MsgInviteAwardConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(MsgInviteAwardConfig& a, MsgInviteAwardConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgInviteAwardConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInviteAwardConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgInviteAwardConfig* New() const final {
    return CreateMaybeMessage<MsgInviteAwardConfig>(nullptr);
  }

  MsgInviteAwardConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgInviteAwardConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgInviteAwardConfig& from);
  void MergeFrom(const MsgInviteAwardConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgInviteAwardConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgInviteAwardConfig";
  }
  protected:
  explicit MsgInviteAwardConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteNumFieldNumber = 1,
    kAwardFieldNumber = 2,
  };
  // int32 inviteNum = 1;
  void clear_invitenum();
  ::PROTOBUF_NAMESPACE_ID::int32 invitenum() const;
  void set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_invitenum() const;
  void _internal_set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 award = 2;
  void clear_award();
  ::PROTOBUF_NAMESPACE_ID::int32 award() const;
  void set_award(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_award() const;
  void _internal_set_award(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgInviteAwardConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 invitenum_;
  ::PROTOBUF_NAMESPACE_ID::int32 award_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgRechargeInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgRechargeInfo) */ {
 public:
  inline MsgRechargeInfo() : MsgRechargeInfo(nullptr) {}
  virtual ~MsgRechargeInfo();

  MsgRechargeInfo(const MsgRechargeInfo& from);
  MsgRechargeInfo(MsgRechargeInfo&& from) noexcept
    : MsgRechargeInfo() {
    *this = ::std::move(from);
  }

  inline MsgRechargeInfo& operator=(const MsgRechargeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRechargeInfo& operator=(MsgRechargeInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgRechargeInfo& default_instance();

  static inline const MsgRechargeInfo* internal_default_instance() {
    return reinterpret_cast<const MsgRechargeInfo*>(
               &_MsgRechargeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(MsgRechargeInfo& a, MsgRechargeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgRechargeInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRechargeInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgRechargeInfo* New() const final {
    return CreateMaybeMessage<MsgRechargeInfo>(nullptr);
  }

  MsgRechargeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgRechargeInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgRechargeInfo& from);
  void MergeFrom(const MsgRechargeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRechargeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgRechargeInfo";
  }
  protected:
  explicit MsgRechargeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInviteCodeFieldNumber = 5,
    kTodayAwardFieldNumber = 2,
    kTotalAwardFieldNumber = 3,
    kCanPickAmountFieldNumber = 4,
    kInviteNumFieldNumber = 1,
  };
  // string inviteCode = 5;
  void clear_invitecode();
  const std::string& invitecode() const;
  void set_invitecode(const std::string& value);
  void set_invitecode(std::string&& value);
  void set_invitecode(const char* value);
  void set_invitecode(const char* value, size_t size);
  std::string* mutable_invitecode();
  std::string* release_invitecode();
  void set_allocated_invitecode(std::string* invitecode);
  private:
  const std::string& _internal_invitecode() const;
  void _internal_set_invitecode(const std::string& value);
  std::string* _internal_mutable_invitecode();
  public:

  // int64 todayAward = 2;
  void clear_todayaward();
  ::PROTOBUF_NAMESPACE_ID::int64 todayaward() const;
  void set_todayaward(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_todayaward() const;
  void _internal_set_todayaward(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 totalAward = 3;
  void clear_totalaward();
  ::PROTOBUF_NAMESPACE_ID::int64 totalaward() const;
  void set_totalaward(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_totalaward() const;
  void _internal_set_totalaward(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 canPickAmount = 4;
  void clear_canpickamount();
  ::PROTOBUF_NAMESPACE_ID::int64 canpickamount() const;
  void set_canpickamount(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_canpickamount() const;
  void _internal_set_canpickamount(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 inviteNum = 1;
  void clear_invitenum();
  ::PROTOBUF_NAMESPACE_ID::int32 invitenum() const;
  void set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_invitenum() const;
  void _internal_set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgRechargeInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr invitecode_;
  ::PROTOBUF_NAMESPACE_ID::int64 todayaward_;
  ::PROTOBUF_NAMESPACE_ID::int64 totalaward_;
  ::PROTOBUF_NAMESPACE_ID::int64 canpickamount_;
  ::PROTOBUF_NAMESPACE_ID::int32 invitenum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgQueryRebateRecordInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgQueryRebateRecordInfo) */ {
 public:
  inline MsgQueryRebateRecordInfo() : MsgQueryRebateRecordInfo(nullptr) {}
  virtual ~MsgQueryRebateRecordInfo();

  MsgQueryRebateRecordInfo(const MsgQueryRebateRecordInfo& from);
  MsgQueryRebateRecordInfo(MsgQueryRebateRecordInfo&& from) noexcept
    : MsgQueryRebateRecordInfo() {
    *this = ::std::move(from);
  }

  inline MsgQueryRebateRecordInfo& operator=(const MsgQueryRebateRecordInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQueryRebateRecordInfo& operator=(MsgQueryRebateRecordInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgQueryRebateRecordInfo& default_instance();

  static inline const MsgQueryRebateRecordInfo* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRebateRecordInfo*>(
               &_MsgQueryRebateRecordInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(MsgQueryRebateRecordInfo& a, MsgQueryRebateRecordInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQueryRebateRecordInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQueryRebateRecordInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRebateRecordInfo* New() const final {
    return CreateMaybeMessage<MsgQueryRebateRecordInfo>(nullptr);
  }

  MsgQueryRebateRecordInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRebateRecordInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgQueryRebateRecordInfo& from);
  void MergeFrom(const MsgQueryRebateRecordInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRebateRecordInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgQueryRebateRecordInfo";
  }
  protected:
  explicit MsgQueryRebateRecordInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQueryRebateRecordFieldNumber = 1,
  };
  // repeated .MsgQueryRebateRecord queryRebateRecord = 1;
  int queryrebaterecord_size() const;
  private:
  int _internal_queryrebaterecord_size() const;
  public:
  void clear_queryrebaterecord();
  ::MsgQueryRebateRecord* mutable_queryrebaterecord(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgQueryRebateRecord >*
      mutable_queryrebaterecord();
  private:
  const ::MsgQueryRebateRecord& _internal_queryrebaterecord(int index) const;
  ::MsgQueryRebateRecord* _internal_add_queryrebaterecord();
  public:
  const ::MsgQueryRebateRecord& queryrebaterecord(int index) const;
  ::MsgQueryRebateRecord* add_queryrebaterecord();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgQueryRebateRecord >&
      queryrebaterecord() const;

  // @@protoc_insertion_point(class_scope:MsgQueryRebateRecordInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgQueryRebateRecord > queryrebaterecord_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgQueryRebateRecord PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgQueryRebateRecord) */ {
 public:
  inline MsgQueryRebateRecord() : MsgQueryRebateRecord(nullptr) {}
  virtual ~MsgQueryRebateRecord();

  MsgQueryRebateRecord(const MsgQueryRebateRecord& from);
  MsgQueryRebateRecord(MsgQueryRebateRecord&& from) noexcept
    : MsgQueryRebateRecord() {
    *this = ::std::move(from);
  }

  inline MsgQueryRebateRecord& operator=(const MsgQueryRebateRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgQueryRebateRecord& operator=(MsgQueryRebateRecord&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgQueryRebateRecord& default_instance();

  static inline const MsgQueryRebateRecord* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRebateRecord*>(
               &_MsgQueryRebateRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(MsgQueryRebateRecord& a, MsgQueryRebateRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgQueryRebateRecord* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgQueryRebateRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRebateRecord* New() const final {
    return CreateMaybeMessage<MsgQueryRebateRecord>(nullptr);
  }

  MsgQueryRebateRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRebateRecord>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgQueryRebateRecord& from);
  void MergeFrom(const MsgQueryRebateRecord& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRebateRecord* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgQueryRebateRecord";
  }
  protected:
  explicit MsgQueryRebateRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRechargeUserIdFieldNumber = 1,
    kRechargeAmountFieldNumber = 2,
    kRebateFieldNumber = 3,
  };
  // int32 rechargeUserId = 1;
  void clear_rechargeuserid();
  ::PROTOBUF_NAMESPACE_ID::int32 rechargeuserid() const;
  void set_rechargeuserid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rechargeuserid() const;
  void _internal_set_rechargeuserid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 rechargeAmount = 2;
  void clear_rechargeamount();
  ::PROTOBUF_NAMESPACE_ID::int32 rechargeamount() const;
  void set_rechargeamount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rechargeamount() const;
  void _internal_set_rechargeamount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 rebate = 3;
  void clear_rebate();
  ::PROTOBUF_NAMESPACE_ID::int32 rebate() const;
  void set_rebate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rebate() const;
  void _internal_set_rebate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgQueryRebateRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 rechargeuserid_;
  ::PROTOBUF_NAMESPACE_ID::int32 rechargeamount_;
  ::PROTOBUF_NAMESPACE_ID::int32 rebate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgForgetPassword PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgForgetPassword) */ {
 public:
  inline MsgForgetPassword() : MsgForgetPassword(nullptr) {}
  virtual ~MsgForgetPassword();

  MsgForgetPassword(const MsgForgetPassword& from);
  MsgForgetPassword(MsgForgetPassword&& from) noexcept
    : MsgForgetPassword() {
    *this = ::std::move(from);
  }

  inline MsgForgetPassword& operator=(const MsgForgetPassword& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgForgetPassword& operator=(MsgForgetPassword&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgForgetPassword& default_instance();

  static inline const MsgForgetPassword* internal_default_instance() {
    return reinterpret_cast<const MsgForgetPassword*>(
               &_MsgForgetPassword_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(MsgForgetPassword& a, MsgForgetPassword& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgForgetPassword* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgForgetPassword* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgForgetPassword* New() const final {
    return CreateMaybeMessage<MsgForgetPassword>(nullptr);
  }

  MsgForgetPassword* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgForgetPassword>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgForgetPassword& from);
  void MergeFrom(const MsgForgetPassword& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgForgetPassword* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgForgetPassword";
  }
  protected:
  explicit MsgForgetPassword(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhoneFieldNumber = 2,
    kNewPasswordFieldNumber = 4,
    kClientTypeFieldNumber = 1,
    kCodeFieldNumber = 3,
  };
  // string phone = 2;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // string new_password = 4;
  void clear_new_password();
  const std::string& new_password() const;
  void set_new_password(const std::string& value);
  void set_new_password(std::string&& value);
  void set_new_password(const char* value);
  void set_new_password(const char* value, size_t size);
  std::string* mutable_new_password();
  std::string* release_new_password();
  void set_allocated_new_password(std::string* new_password);
  private:
  const std::string& _internal_new_password() const;
  void _internal_set_new_password(const std::string& value);
  std::string* _internal_mutable_new_password();
  public:

  // int32 client_type = 1;
  void clear_client_type();
  ::PROTOBUF_NAMESPACE_ID::int32 client_type() const;
  void set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_client_type() const;
  void _internal_set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 code = 3;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgForgetPassword)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr new_password_;
  ::PROTOBUF_NAMESPACE_ID::int32 client_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgVIPInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgVIPInfo) */ {
 public:
  inline MsgVIPInfo() : MsgVIPInfo(nullptr) {}
  virtual ~MsgVIPInfo();

  MsgVIPInfo(const MsgVIPInfo& from);
  MsgVIPInfo(MsgVIPInfo&& from) noexcept
    : MsgVIPInfo() {
    *this = ::std::move(from);
  }

  inline MsgVIPInfo& operator=(const MsgVIPInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVIPInfo& operator=(MsgVIPInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgVIPInfo& default_instance();

  static inline const MsgVIPInfo* internal_default_instance() {
    return reinterpret_cast<const MsgVIPInfo*>(
               &_MsgVIPInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(MsgVIPInfo& a, MsgVIPInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgVIPInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVIPInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgVIPInfo* New() const final {
    return CreateMaybeMessage<MsgVIPInfo>(nullptr);
  }

  MsgVIPInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgVIPInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgVIPInfo& from);
  void MergeFrom(const MsgVIPInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgVIPInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgVIPInfo";
  }
  protected:
  explicit MsgVIPInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNeedScoreFieldNumber = 2,
    kVipLevelFieldNumber = 1,
    kTurntableNumFieldNumber = 3,
    kTrumpetDiscountFieldNumber = 4,
    kCheckAdditionFieldNumber = 5,
    kShareAdditionFieldNumber = 6,
    kAvatarFieldNumber = 8,
    kAvatarFrameFieldNumber = 9,
    kWorldChatFieldNumber = 7,
    kOneToOneFieldNumber = 11,
    kAwardGoldFieldNumber = 10,
  };
  // int64 need_score = 2;
  void clear_need_score();
  ::PROTOBUF_NAMESPACE_ID::int64 need_score() const;
  void set_need_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_need_score() const;
  void _internal_set_need_score(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 vip_level = 1;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 turntable_num = 3;
  void clear_turntable_num();
  ::PROTOBUF_NAMESPACE_ID::int32 turntable_num() const;
  void set_turntable_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_turntable_num() const;
  void _internal_set_turntable_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 trumpet_discount = 4;
  void clear_trumpet_discount();
  ::PROTOBUF_NAMESPACE_ID::int32 trumpet_discount() const;
  void set_trumpet_discount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_trumpet_discount() const;
  void _internal_set_trumpet_discount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 check_addition = 5;
  void clear_check_addition();
  ::PROTOBUF_NAMESPACE_ID::int32 check_addition() const;
  void set_check_addition(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_check_addition() const;
  void _internal_set_check_addition(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 share_addition = 6;
  void clear_share_addition();
  ::PROTOBUF_NAMESPACE_ID::int32 share_addition() const;
  void set_share_addition(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_share_addition() const;
  void _internal_set_share_addition(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 avatar = 8;
  void clear_avatar();
  ::PROTOBUF_NAMESPACE_ID::int32 avatar() const;
  void set_avatar(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatar() const;
  void _internal_set_avatar(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 avatar_frame = 9;
  void clear_avatar_frame();
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame() const;
  void set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatar_frame() const;
  void _internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool world_chat = 7;
  void clear_world_chat();
  bool world_chat() const;
  void set_world_chat(bool value);
  private:
  bool _internal_world_chat() const;
  void _internal_set_world_chat(bool value);
  public:

  // bool one_to_one = 11;
  void clear_one_to_one();
  bool one_to_one() const;
  void set_one_to_one(bool value);
  private:
  bool _internal_one_to_one() const;
  void _internal_set_one_to_one(bool value);
  public:

  // int32 award_gold = 10;
  void clear_award_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 award_gold() const;
  void set_award_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_award_gold() const;
  void _internal_set_award_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgVIPInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 need_score_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 turntable_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 trumpet_discount_;
  ::PROTOBUF_NAMESPACE_ID::int32 check_addition_;
  ::PROTOBUF_NAMESPACE_ID::int32 share_addition_;
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_;
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame_;
  bool world_chat_;
  bool one_to_one_;
  ::PROTOBUF_NAMESPACE_ID::int32 award_gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgVIPConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgVIPConfig) */ {
 public:
  inline MsgVIPConfig() : MsgVIPConfig(nullptr) {}
  virtual ~MsgVIPConfig();

  MsgVIPConfig(const MsgVIPConfig& from);
  MsgVIPConfig(MsgVIPConfig&& from) noexcept
    : MsgVIPConfig() {
    *this = ::std::move(from);
  }

  inline MsgVIPConfig& operator=(const MsgVIPConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVIPConfig& operator=(MsgVIPConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgVIPConfig& default_instance();

  static inline const MsgVIPConfig* internal_default_instance() {
    return reinterpret_cast<const MsgVIPConfig*>(
               &_MsgVIPConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MsgVIPConfig& a, MsgVIPConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgVIPConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVIPConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgVIPConfig* New() const final {
    return CreateMaybeMessage<MsgVIPConfig>(nullptr);
  }

  MsgVIPConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgVIPConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgVIPConfig& from);
  void MergeFrom(const MsgVIPConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgVIPConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgVIPConfig";
  }
  protected:
  explicit MsgVIPConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVipInfoFieldNumber = 1,
  };
  // repeated .MsgVIPInfo vip_info = 1;
  int vip_info_size() const;
  private:
  int _internal_vip_info_size() const;
  public:
  void clear_vip_info();
  ::MsgVIPInfo* mutable_vip_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgVIPInfo >*
      mutable_vip_info();
  private:
  const ::MsgVIPInfo& _internal_vip_info(int index) const;
  ::MsgVIPInfo* _internal_add_vip_info();
  public:
  const ::MsgVIPInfo& vip_info(int index) const;
  ::MsgVIPInfo* add_vip_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgVIPInfo >&
      vip_info() const;

  // @@protoc_insertion_point(class_scope:MsgVIPConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgVIPInfo > vip_info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgUpgradeVIP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgUpgradeVIP) */ {
 public:
  inline MsgUpgradeVIP() : MsgUpgradeVIP(nullptr) {}
  virtual ~MsgUpgradeVIP();

  MsgUpgradeVIP(const MsgUpgradeVIP& from);
  MsgUpgradeVIP(MsgUpgradeVIP&& from) noexcept
    : MsgUpgradeVIP() {
    *this = ::std::move(from);
  }

  inline MsgUpgradeVIP& operator=(const MsgUpgradeVIP& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpgradeVIP& operator=(MsgUpgradeVIP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgUpgradeVIP& default_instance();

  static inline const MsgUpgradeVIP* internal_default_instance() {
    return reinterpret_cast<const MsgUpgradeVIP*>(
               &_MsgUpgradeVIP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MsgUpgradeVIP& a, MsgUpgradeVIP& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpgradeVIP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpgradeVIP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgUpgradeVIP* New() const final {
    return CreateMaybeMessage<MsgUpgradeVIP>(nullptr);
  }

  MsgUpgradeVIP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpgradeVIP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgUpgradeVIP& from);
  void MergeFrom(const MsgUpgradeVIP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpgradeVIP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgUpgradeVIP";
  }
  protected:
  explicit MsgUpgradeVIP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldFieldNumber = 2,
    kResCodeFieldNumber = 1,
  };
  // int64 gold = 2;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 res_code = 1;
  void clear_res_code();
  ::PROTOBUF_NAMESPACE_ID::int32 res_code() const;
  void set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_res_code() const;
  void _internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgUpgradeVIP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 res_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgGetAvatarInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgGetAvatarInfo) */ {
 public:
  inline MsgGetAvatarInfo() : MsgGetAvatarInfo(nullptr) {}
  virtual ~MsgGetAvatarInfo();

  MsgGetAvatarInfo(const MsgGetAvatarInfo& from);
  MsgGetAvatarInfo(MsgGetAvatarInfo&& from) noexcept
    : MsgGetAvatarInfo() {
    *this = ::std::move(from);
  }

  inline MsgGetAvatarInfo& operator=(const MsgGetAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGetAvatarInfo& operator=(MsgGetAvatarInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgGetAvatarInfo& default_instance();

  static inline const MsgGetAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const MsgGetAvatarInfo*>(
               &_MsgGetAvatarInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MsgGetAvatarInfo& a, MsgGetAvatarInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGetAvatarInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGetAvatarInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgGetAvatarInfo* New() const final {
    return CreateMaybeMessage<MsgGetAvatarInfo>(nullptr);
  }

  MsgGetAvatarInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetAvatarInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgGetAvatarInfo& from);
  void MergeFrom(const MsgGetAvatarInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGetAvatarInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgGetAvatarInfo";
  }
  protected:
  explicit MsgGetAvatarInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarsFieldNumber = 1,
  };
  // repeated int32 avatars = 1;
  int avatars_size() const;
  private:
  int _internal_avatars_size() const;
  public:
  void clear_avatars();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatars(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_avatars() const;
  void _internal_add_avatars(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_avatars();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 avatars(int index) const;
  void set_avatars(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_avatars(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      avatars() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_avatars();

  // @@protoc_insertion_point(class_scope:MsgGetAvatarInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > avatars_;
  mutable std::atomic<int> _avatars_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgPlayerInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPlayerInfo) */ {
 public:
  inline MsgPlayerInfo() : MsgPlayerInfo(nullptr) {}
  virtual ~MsgPlayerInfo();

  MsgPlayerInfo(const MsgPlayerInfo& from);
  MsgPlayerInfo(MsgPlayerInfo&& from) noexcept
    : MsgPlayerInfo() {
    *this = ::std::move(from);
  }

  inline MsgPlayerInfo& operator=(const MsgPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPlayerInfo& operator=(MsgPlayerInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPlayerInfo& default_instance();

  static inline const MsgPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const MsgPlayerInfo*>(
               &_MsgPlayerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MsgPlayerInfo& a, MsgPlayerInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPlayerInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPlayerInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPlayerInfo* New() const final {
    return CreateMaybeMessage<MsgPlayerInfo>(nullptr);
  }

  MsgPlayerInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPlayerInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPlayerInfo& from);
  void MergeFrom(const MsgPlayerInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPlayerInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPlayerInfo";
  }
  protected:
  explicit MsgPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 3,
    kAvatarFieldNumber = 4,
    kPhoneNumFieldNumber = 6,
    kSignatureFieldNumber = 9,
    kUserIdFieldNumber = 1,
    kBeautifulIdFieldNumber = 2,
    kCoinFieldNumber = 5,
    kVipLevelFieldNumber = 7,
    kAvatarFrameFieldNumber = 8,
    kZmdWinGoldFieldNumber = 11,
    kZmdGameIdFieldNumber = 10,
  };
  // string nickname = 3;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // string avatar = 4;
  void clear_avatar();
  const std::string& avatar() const;
  void set_avatar(const std::string& value);
  void set_avatar(std::string&& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  std::string* mutable_avatar();
  std::string* release_avatar();
  void set_allocated_avatar(std::string* avatar);
  private:
  const std::string& _internal_avatar() const;
  void _internal_set_avatar(const std::string& value);
  std::string* _internal_mutable_avatar();
  public:

  // string phone_num = 6;
  void clear_phone_num();
  const std::string& phone_num() const;
  void set_phone_num(const std::string& value);
  void set_phone_num(std::string&& value);
  void set_phone_num(const char* value);
  void set_phone_num(const char* value, size_t size);
  std::string* mutable_phone_num();
  std::string* release_phone_num();
  void set_allocated_phone_num(std::string* phone_num);
  private:
  const std::string& _internal_phone_num() const;
  void _internal_set_phone_num(const std::string& value);
  std::string* _internal_mutable_phone_num();
  public:

  // string signature = 9;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 beautiful_id = 2;
  void clear_beautiful_id();
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id() const;
  void set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_beautiful_id() const;
  void _internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 coin = 5;
  void clear_coin();
  ::PROTOBUF_NAMESPACE_ID::uint64 coin() const;
  void set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_coin() const;
  void _internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 vip_level = 7;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 avatar_frame = 8;
  void clear_avatar_frame();
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame() const;
  void set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatar_frame() const;
  void _internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 zmd_win_gold = 11;
  void clear_zmd_win_gold();
  ::PROTOBUF_NAMESPACE_ID::uint64 zmd_win_gold() const;
  void set_zmd_win_gold(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_zmd_win_gold() const;
  void _internal_set_zmd_win_gold(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 zmd_game_id = 10;
  void clear_zmd_game_id();
  ::PROTOBUF_NAMESPACE_ID::int32 zmd_game_id() const;
  void set_zmd_game_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_zmd_game_id() const;
  void _internal_set_zmd_game_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgPlayerInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_num_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 beautiful_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 coin_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame_;
  ::PROTOBUF_NAMESPACE_ID::uint64 zmd_win_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 zmd_game_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgActiveInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgActiveInfo) */ {
 public:
  inline MsgActiveInfo() : MsgActiveInfo(nullptr) {}
  virtual ~MsgActiveInfo();

  MsgActiveInfo(const MsgActiveInfo& from);
  MsgActiveInfo(MsgActiveInfo&& from) noexcept
    : MsgActiveInfo() {
    *this = ::std::move(from);
  }

  inline MsgActiveInfo& operator=(const MsgActiveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgActiveInfo& operator=(MsgActiveInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgActiveInfo& default_instance();

  static inline const MsgActiveInfo* internal_default_instance() {
    return reinterpret_cast<const MsgActiveInfo*>(
               &_MsgActiveInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(MsgActiveInfo& a, MsgActiveInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgActiveInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgActiveInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgActiveInfo* New() const final {
    return CreateMaybeMessage<MsgActiveInfo>(nullptr);
  }

  MsgActiveInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgActiveInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgActiveInfo& from);
  void MergeFrom(const MsgActiveInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgActiveInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgActiveInfo";
  }
  protected:
  explicit MsgActiveInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kActiveIdFieldNumber = 2,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 active_id = 2;
  void clear_active_id();
  ::PROTOBUF_NAMESPACE_ID::int32 active_id() const;
  void set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_active_id() const;
  void _internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgActiveInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 active_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class ActiveInfoRet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ActiveInfoRet) */ {
 public:
  inline ActiveInfoRet() : ActiveInfoRet(nullptr) {}
  virtual ~ActiveInfoRet();

  ActiveInfoRet(const ActiveInfoRet& from);
  ActiveInfoRet(ActiveInfoRet&& from) noexcept
    : ActiveInfoRet() {
    *this = ::std::move(from);
  }

  inline ActiveInfoRet& operator=(const ActiveInfoRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActiveInfoRet& operator=(ActiveInfoRet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActiveInfoRet& default_instance();

  static inline const ActiveInfoRet* internal_default_instance() {
    return reinterpret_cast<const ActiveInfoRet*>(
               &_ActiveInfoRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(ActiveInfoRet& a, ActiveInfoRet& b) {
    a.Swap(&b);
  }
  inline void Swap(ActiveInfoRet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActiveInfoRet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActiveInfoRet* New() const final {
    return CreateMaybeMessage<ActiveInfoRet>(nullptr);
  }

  ActiveInfoRet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActiveInfoRet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActiveInfoRet& from);
  void MergeFrom(const ActiveInfoRet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActiveInfoRet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ActiveInfoRet";
  }
  protected:
  explicit ActiveInfoRet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveIdFieldNumber = 1,
    kSubActiveIdFieldNumber = 2,
    kParam1FieldNumber = 3,
    kParam2FieldNumber = 4,
    kParam3FieldNumber = 5,
    kProgress1FieldNumber = 6,
    kProgress2FieldNumber = 7,
    kProgress3FieldNumber = 8,
    kRewardFieldNumber = 9,
    kRewardTypeFieldNumber = 10,
    kIsPickFieldNumber = 11,
  };
  // int32 active_id = 1;
  void clear_active_id();
  ::PROTOBUF_NAMESPACE_ID::int32 active_id() const;
  void set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_active_id() const;
  void _internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sub_active_id = 2;
  void clear_sub_active_id();
  ::PROTOBUF_NAMESPACE_ID::int32 sub_active_id() const;
  void set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sub_active_id() const;
  void _internal_set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param1 = 3;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param2 = 4;
  void clear_param2();
  ::PROTOBUF_NAMESPACE_ID::int32 param2() const;
  void set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param2() const;
  void _internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param3 = 5;
  void clear_param3();
  ::PROTOBUF_NAMESPACE_ID::int32 param3() const;
  void set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param3() const;
  void _internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 progress1 = 6;
  void clear_progress1();
  ::PROTOBUF_NAMESPACE_ID::int32 progress1() const;
  void set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress1() const;
  void _internal_set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 progress2 = 7;
  void clear_progress2();
  ::PROTOBUF_NAMESPACE_ID::int32 progress2() const;
  void set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress2() const;
  void _internal_set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 progress3 = 8;
  void clear_progress3();
  ::PROTOBUF_NAMESPACE_ID::int32 progress3() const;
  void set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress3() const;
  void _internal_set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 reward = 9;
  void clear_reward();
  ::PROTOBUF_NAMESPACE_ID::int32 reward() const;
  void set_reward(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reward() const;
  void _internal_set_reward(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 reward_type = 10;
  void clear_reward_type();
  ::PROTOBUF_NAMESPACE_ID::int32 reward_type() const;
  void set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reward_type() const;
  void _internal_set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool is_pick = 11;
  void clear_is_pick();
  bool is_pick() const;
  void set_is_pick(bool value);
  private:
  bool _internal_is_pick() const;
  void _internal_set_is_pick(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ActiveInfoRet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 active_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 sub_active_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  ::PROTOBUF_NAMESPACE_ID::int32 param2_;
  ::PROTOBUF_NAMESPACE_ID::int32 param3_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress1_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress2_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress3_;
  ::PROTOBUF_NAMESPACE_ID::int32 reward_;
  ::PROTOBUF_NAMESPACE_ID::int32 reward_type_;
  bool is_pick_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgActiveInfoSCRet PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgActiveInfoSCRet) */ {
 public:
  inline MsgActiveInfoSCRet() : MsgActiveInfoSCRet(nullptr) {}
  virtual ~MsgActiveInfoSCRet();

  MsgActiveInfoSCRet(const MsgActiveInfoSCRet& from);
  MsgActiveInfoSCRet(MsgActiveInfoSCRet&& from) noexcept
    : MsgActiveInfoSCRet() {
    *this = ::std::move(from);
  }

  inline MsgActiveInfoSCRet& operator=(const MsgActiveInfoSCRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgActiveInfoSCRet& operator=(MsgActiveInfoSCRet&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgActiveInfoSCRet& default_instance();

  static inline const MsgActiveInfoSCRet* internal_default_instance() {
    return reinterpret_cast<const MsgActiveInfoSCRet*>(
               &_MsgActiveInfoSCRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(MsgActiveInfoSCRet& a, MsgActiveInfoSCRet& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgActiveInfoSCRet* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgActiveInfoSCRet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgActiveInfoSCRet* New() const final {
    return CreateMaybeMessage<MsgActiveInfoSCRet>(nullptr);
  }

  MsgActiveInfoSCRet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgActiveInfoSCRet>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgActiveInfoSCRet& from);
  void MergeFrom(const MsgActiveInfoSCRet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgActiveInfoSCRet* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgActiveInfoSCRet";
  }
  protected:
  explicit MsgActiveInfoSCRet(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVecInfoFieldNumber = 1,
  };
  // repeated .ActiveInfoRet vec_info = 1;
  int vec_info_size() const;
  private:
  int _internal_vec_info_size() const;
  public:
  void clear_vec_info();
  ::ActiveInfoRet* mutable_vec_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ActiveInfoRet >*
      mutable_vec_info();
  private:
  const ::ActiveInfoRet& _internal_vec_info(int index) const;
  ::ActiveInfoRet* _internal_add_vec_info();
  public:
  const ::ActiveInfoRet& vec_info(int index) const;
  ::ActiveInfoRet* add_vec_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ActiveInfoRet >&
      vec_info() const;

  // @@protoc_insertion_point(class_scope:MsgActiveInfoSCRet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ActiveInfoRet > vec_info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgActiveInfoCSPick PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgActiveInfoCSPick) */ {
 public:
  inline MsgActiveInfoCSPick() : MsgActiveInfoCSPick(nullptr) {}
  virtual ~MsgActiveInfoCSPick();

  MsgActiveInfoCSPick(const MsgActiveInfoCSPick& from);
  MsgActiveInfoCSPick(MsgActiveInfoCSPick&& from) noexcept
    : MsgActiveInfoCSPick() {
    *this = ::std::move(from);
  }

  inline MsgActiveInfoCSPick& operator=(const MsgActiveInfoCSPick& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgActiveInfoCSPick& operator=(MsgActiveInfoCSPick&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgActiveInfoCSPick& default_instance();

  static inline const MsgActiveInfoCSPick* internal_default_instance() {
    return reinterpret_cast<const MsgActiveInfoCSPick*>(
               &_MsgActiveInfoCSPick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(MsgActiveInfoCSPick& a, MsgActiveInfoCSPick& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgActiveInfoCSPick* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgActiveInfoCSPick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgActiveInfoCSPick* New() const final {
    return CreateMaybeMessage<MsgActiveInfoCSPick>(nullptr);
  }

  MsgActiveInfoCSPick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgActiveInfoCSPick>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgActiveInfoCSPick& from);
  void MergeFrom(const MsgActiveInfoCSPick& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgActiveInfoCSPick* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgActiveInfoCSPick";
  }
  protected:
  explicit MsgActiveInfoCSPick(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
    kActiveIdFieldNumber = 2,
    kSubActiveIdFieldNumber = 3,
  };
  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 active_id = 2;
  void clear_active_id();
  ::PROTOBUF_NAMESPACE_ID::int32 active_id() const;
  void set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_active_id() const;
  void _internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sub_active_id = 3;
  void clear_sub_active_id();
  ::PROTOBUF_NAMESPACE_ID::int32 sub_active_id() const;
  void set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sub_active_id() const;
  void _internal_set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgActiveInfoCSPick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 active_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 sub_active_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgActiveInfoSCPick PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgActiveInfoSCPick) */ {
 public:
  inline MsgActiveInfoSCPick() : MsgActiveInfoSCPick(nullptr) {}
  virtual ~MsgActiveInfoSCPick();

  MsgActiveInfoSCPick(const MsgActiveInfoSCPick& from);
  MsgActiveInfoSCPick(MsgActiveInfoSCPick&& from) noexcept
    : MsgActiveInfoSCPick() {
    *this = ::std::move(from);
  }

  inline MsgActiveInfoSCPick& operator=(const MsgActiveInfoSCPick& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgActiveInfoSCPick& operator=(MsgActiveInfoSCPick&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgActiveInfoSCPick& default_instance();

  static inline const MsgActiveInfoSCPick* internal_default_instance() {
    return reinterpret_cast<const MsgActiveInfoSCPick*>(
               &_MsgActiveInfoSCPick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MsgActiveInfoSCPick& a, MsgActiveInfoSCPick& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgActiveInfoSCPick* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgActiveInfoSCPick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgActiveInfoSCPick* New() const final {
    return CreateMaybeMessage<MsgActiveInfoSCPick>(nullptr);
  }

  MsgActiveInfoSCPick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgActiveInfoSCPick>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgActiveInfoSCPick& from);
  void MergeFrom(const MsgActiveInfoSCPick& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgActiveInfoSCPick* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgActiveInfoSCPick";
  }
  protected:
  explicit MsgActiveInfoSCPick(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveIdFieldNumber = 1,
    kSubActiveIdFieldNumber = 2,
    kParam1FieldNumber = 3,
    kParam2FieldNumber = 4,
    kParam3FieldNumber = 5,
    kProgress1FieldNumber = 6,
    kProgress2FieldNumber = 7,
    kProgress3FieldNumber = 8,
    kRewardFieldNumber = 9,
    kRewardTypeFieldNumber = 10,
    kIsPickFieldNumber = 11,
    kResFieldNumber = 12,
  };
  // int32 active_id = 1;
  void clear_active_id();
  ::PROTOBUF_NAMESPACE_ID::int32 active_id() const;
  void set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_active_id() const;
  void _internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sub_active_id = 2;
  void clear_sub_active_id();
  ::PROTOBUF_NAMESPACE_ID::int32 sub_active_id() const;
  void set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sub_active_id() const;
  void _internal_set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param1 = 3;
  void clear_param1();
  ::PROTOBUF_NAMESPACE_ID::int32 param1() const;
  void set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param1() const;
  void _internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param2 = 4;
  void clear_param2();
  ::PROTOBUF_NAMESPACE_ID::int32 param2() const;
  void set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param2() const;
  void _internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 param3 = 5;
  void clear_param3();
  ::PROTOBUF_NAMESPACE_ID::int32 param3() const;
  void set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_param3() const;
  void _internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 progress1 = 6;
  void clear_progress1();
  ::PROTOBUF_NAMESPACE_ID::int32 progress1() const;
  void set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress1() const;
  void _internal_set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 progress2 = 7;
  void clear_progress2();
  ::PROTOBUF_NAMESPACE_ID::int32 progress2() const;
  void set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress2() const;
  void _internal_set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 progress3 = 8;
  void clear_progress3();
  ::PROTOBUF_NAMESPACE_ID::int32 progress3() const;
  void set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress3() const;
  void _internal_set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 reward = 9;
  void clear_reward();
  ::PROTOBUF_NAMESPACE_ID::int32 reward() const;
  void set_reward(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reward() const;
  void _internal_set_reward(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 reward_type = 10;
  void clear_reward_type();
  ::PROTOBUF_NAMESPACE_ID::int32 reward_type() const;
  void set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reward_type() const;
  void _internal_set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_pick = 11;
  void clear_is_pick();
  ::PROTOBUF_NAMESPACE_ID::int32 is_pick() const;
  void set_is_pick(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_pick() const;
  void _internal_set_is_pick(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool res = 12;
  void clear_res();
  bool res() const;
  void set_res(bool value);
  private:
  bool _internal_res() const;
  void _internal_set_res(bool value);
  public:

  // @@protoc_insertion_point(class_scope:MsgActiveInfoSCPick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 active_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 sub_active_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 param1_;
  ::PROTOBUF_NAMESPACE_ID::int32 param2_;
  ::PROTOBUF_NAMESPACE_ID::int32 param3_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress1_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress2_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress3_;
  ::PROTOBUF_NAMESPACE_ID::int32 reward_;
  ::PROTOBUF_NAMESPACE_ID::int32 reward_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_pick_;
  bool res_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgModifySignature PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgModifySignature) */ {
 public:
  inline MsgModifySignature() : MsgModifySignature(nullptr) {}
  virtual ~MsgModifySignature();

  MsgModifySignature(const MsgModifySignature& from);
  MsgModifySignature(MsgModifySignature&& from) noexcept
    : MsgModifySignature() {
    *this = ::std::move(from);
  }

  inline MsgModifySignature& operator=(const MsgModifySignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgModifySignature& operator=(MsgModifySignature&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgModifySignature& default_instance();

  static inline const MsgModifySignature* internal_default_instance() {
    return reinterpret_cast<const MsgModifySignature*>(
               &_MsgModifySignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(MsgModifySignature& a, MsgModifySignature& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgModifySignature* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgModifySignature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgModifySignature* New() const final {
    return CreateMaybeMessage<MsgModifySignature>(nullptr);
  }

  MsgModifySignature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgModifySignature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgModifySignature& from);
  void MergeFrom(const MsgModifySignature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgModifySignature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgModifySignature";
  }
  protected:
  explicit MsgModifySignature(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSignatureFieldNumber = 2,
    kUserIdFieldNumber = 1,
  };
  // string signature = 2;
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgModifySignature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankChangePassword PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankChangePassword) */ {
 public:
  inline MsgBankChangePassword() : MsgBankChangePassword(nullptr) {}
  virtual ~MsgBankChangePassword();

  MsgBankChangePassword(const MsgBankChangePassword& from);
  MsgBankChangePassword(MsgBankChangePassword&& from) noexcept
    : MsgBankChangePassword() {
    *this = ::std::move(from);
  }

  inline MsgBankChangePassword& operator=(const MsgBankChangePassword& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankChangePassword& operator=(MsgBankChangePassword&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankChangePassword& default_instance();

  static inline const MsgBankChangePassword* internal_default_instance() {
    return reinterpret_cast<const MsgBankChangePassword*>(
               &_MsgBankChangePassword_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(MsgBankChangePassword& a, MsgBankChangePassword& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankChangePassword* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankChangePassword* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankChangePassword* New() const final {
    return CreateMaybeMessage<MsgBankChangePassword>(nullptr);
  }

  MsgBankChangePassword* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankChangePassword>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankChangePassword& from);
  void MergeFrom(const MsgBankChangePassword& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankChangePassword* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankChangePassword";
  }
  protected:
  explicit MsgBankChangePassword(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 1,
    kCodeFieldNumber = 2,
  };
  // string password = 1;
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // int32 code = 2;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBankChangePassword)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankOperate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankOperate) */ {
 public:
  inline MsgBankOperate() : MsgBankOperate(nullptr) {}
  virtual ~MsgBankOperate();

  MsgBankOperate(const MsgBankOperate& from);
  MsgBankOperate(MsgBankOperate&& from) noexcept
    : MsgBankOperate() {
    *this = ::std::move(from);
  }

  inline MsgBankOperate& operator=(const MsgBankOperate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankOperate& operator=(MsgBankOperate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankOperate& default_instance();

  static inline const MsgBankOperate* internal_default_instance() {
    return reinterpret_cast<const MsgBankOperate*>(
               &_MsgBankOperate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(MsgBankOperate& a, MsgBankOperate& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankOperate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankOperate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankOperate* New() const final {
    return CreateMaybeMessage<MsgBankOperate>(nullptr);
  }

  MsgBankOperate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankOperate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankOperate& from);
  void MergeFrom(const MsgBankOperate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankOperate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankOperate";
  }
  protected:
  explicit MsgBankOperate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGoldFieldNumber = 1,
    kOperateTypeFieldNumber = 2,
  };
  // int64 gold = 1;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 operate_type = 2;
  void clear_operate_type();
  ::PROTOBUF_NAMESPACE_ID::int32 operate_type() const;
  void set_operate_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_operate_type() const;
  void _internal_set_operate_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBankOperate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 operate_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankTakeOut PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankTakeOut) */ {
 public:
  inline MsgBankTakeOut() : MsgBankTakeOut(nullptr) {}
  virtual ~MsgBankTakeOut();

  MsgBankTakeOut(const MsgBankTakeOut& from);
  MsgBankTakeOut(MsgBankTakeOut&& from) noexcept
    : MsgBankTakeOut() {
    *this = ::std::move(from);
  }

  inline MsgBankTakeOut& operator=(const MsgBankTakeOut& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankTakeOut& operator=(MsgBankTakeOut&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankTakeOut& default_instance();

  static inline const MsgBankTakeOut* internal_default_instance() {
    return reinterpret_cast<const MsgBankTakeOut*>(
               &_MsgBankTakeOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(MsgBankTakeOut& a, MsgBankTakeOut& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankTakeOut* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankTakeOut* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankTakeOut* New() const final {
    return CreateMaybeMessage<MsgBankTakeOut>(nullptr);
  }

  MsgBankTakeOut* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankTakeOut>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankTakeOut& from);
  void MergeFrom(const MsgBankTakeOut& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankTakeOut* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankTakeOut";
  }
  protected:
  explicit MsgBankTakeOut(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserGoldFieldNumber = 2,
    kBankGoldFieldNumber = 3,
    kRetValueFieldNumber = 1,
  };
  // int64 user_gold = 2;
  void clear_user_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 user_gold() const;
  void set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_user_gold() const;
  void _internal_set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 bank_gold = 3;
  void clear_bank_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 bank_gold() const;
  void set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bank_gold() const;
  void _internal_set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 ret_value = 1;
  void clear_ret_value();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value() const;
  void set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_value() const;
  void _internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBankTakeOut)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 user_gold_;
  ::PROTOBUF_NAMESPACE_ID::int64 bank_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankTransfer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankTransfer) */ {
 public:
  inline MsgBankTransfer() : MsgBankTransfer(nullptr) {}
  virtual ~MsgBankTransfer();

  MsgBankTransfer(const MsgBankTransfer& from);
  MsgBankTransfer(MsgBankTransfer&& from) noexcept
    : MsgBankTransfer() {
    *this = ::std::move(from);
  }

  inline MsgBankTransfer& operator=(const MsgBankTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankTransfer& operator=(MsgBankTransfer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankTransfer& default_instance();

  static inline const MsgBankTransfer* internal_default_instance() {
    return reinterpret_cast<const MsgBankTransfer*>(
               &_MsgBankTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(MsgBankTransfer& a, MsgBankTransfer& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankTransfer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankTransfer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankTransfer* New() const final {
    return CreateMaybeMessage<MsgBankTransfer>(nullptr);
  }

  MsgBankTransfer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankTransfer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankTransfer& from);
  void MergeFrom(const MsgBankTransfer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankTransfer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankTransfer";
  }
  protected:
  explicit MsgBankTransfer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransferGoldFieldNumber = 2,
    kRecvUserIdFieldNumber = 1,
  };
  // int64 transfer_gold = 2;
  void clear_transfer_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_gold() const;
  void set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_transfer_gold() const;
  void _internal_set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 recv_user_id = 1;
  void clear_recv_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id() const;
  void set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recv_user_id() const;
  void _internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBankTransfer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTopInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTopInfo) */ {
 public:
  inline MsgTopInfo() : MsgTopInfo(nullptr) {}
  virtual ~MsgTopInfo();

  MsgTopInfo(const MsgTopInfo& from);
  MsgTopInfo(MsgTopInfo&& from) noexcept
    : MsgTopInfo() {
    *this = ::std::move(from);
  }

  inline MsgTopInfo& operator=(const MsgTopInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTopInfo& operator=(MsgTopInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTopInfo& default_instance();

  static inline const MsgTopInfo* internal_default_instance() {
    return reinterpret_cast<const MsgTopInfo*>(
               &_MsgTopInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(MsgTopInfo& a, MsgTopInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTopInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTopInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTopInfo* New() const final {
    return CreateMaybeMessage<MsgTopInfo>(nullptr);
  }

  MsgTopInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTopInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTopInfo& from);
  void MergeFrom(const MsgTopInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTopInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTopInfo";
  }
  protected:
  explicit MsgTopInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeadUrlFieldNumber = 6,
    kNickNameFieldNumber = 7,
    kRankIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kGoldFieldNumber = 3,
    kVipLevelFieldNumber = 4,
    kAvatarFrameFieldNumber = 5,
  };
  // string head_url = 6;
  void clear_head_url();
  const std::string& head_url() const;
  void set_head_url(const std::string& value);
  void set_head_url(std::string&& value);
  void set_head_url(const char* value);
  void set_head_url(const char* value, size_t size);
  std::string* mutable_head_url();
  std::string* release_head_url();
  void set_allocated_head_url(std::string* head_url);
  private:
  const std::string& _internal_head_url() const;
  void _internal_set_head_url(const std::string& value);
  std::string* _internal_mutable_head_url();
  public:

  // string nick_name = 7;
  void clear_nick_name();
  const std::string& nick_name() const;
  void set_nick_name(const std::string& value);
  void set_nick_name(std::string&& value);
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  std::string* mutable_nick_name();
  std::string* release_nick_name();
  void set_allocated_nick_name(std::string* nick_name);
  private:
  const std::string& _internal_nick_name() const;
  void _internal_set_nick_name(const std::string& value);
  std::string* _internal_mutable_nick_name();
  public:

  // int32 rank_id = 1;
  void clear_rank_id();
  ::PROTOBUF_NAMESPACE_ID::int32 rank_id() const;
  void set_rank_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rank_id() const;
  void _internal_set_rank_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 gold = 3;
  void clear_gold();
  ::PROTOBUF_NAMESPACE_ID::uint64 gold() const;
  void set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gold() const;
  void _internal_set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 vip_level = 4;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 avatar_frame = 5;
  void clear_avatar_frame();
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame() const;
  void set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_avatar_frame() const;
  void _internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTopInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr head_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nick_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 vip_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 avatar_frame_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgGetRank PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgGetRank) */ {
 public:
  inline MsgGetRank() : MsgGetRank(nullptr) {}
  virtual ~MsgGetRank();

  MsgGetRank(const MsgGetRank& from);
  MsgGetRank(MsgGetRank&& from) noexcept
    : MsgGetRank() {
    *this = ::std::move(from);
  }

  inline MsgGetRank& operator=(const MsgGetRank& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGetRank& operator=(MsgGetRank&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgGetRank& default_instance();

  static inline const MsgGetRank* internal_default_instance() {
    return reinterpret_cast<const MsgGetRank*>(
               &_MsgGetRank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(MsgGetRank& a, MsgGetRank& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgGetRank* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGetRank* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgGetRank* New() const final {
    return CreateMaybeMessage<MsgGetRank>(nullptr);
  }

  MsgGetRank* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgGetRank>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgGetRank& from);
  void MergeFrom(const MsgGetRank& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgGetRank* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgGetRank";
  }
  protected:
  explicit MsgGetRank(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRankTypeFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kCurrentPageFieldNumber = 3,
    kMaxRowFieldNumber = 4,
  };
  // int32 rank_type = 1;
  void clear_rank_type();
  ::PROTOBUF_NAMESPACE_ID::int32 rank_type() const;
  void set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rank_type() const;
  void _internal_set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 user_id = 2;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 current_page = 3;
  void clear_current_page();
  ::PROTOBUF_NAMESPACE_ID::int32 current_page() const;
  void set_current_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_page() const;
  void _internal_set_current_page(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_row = 4;
  void clear_max_row();
  ::PROTOBUF_NAMESPACE_ID::int32 max_row() const;
  void set_max_row(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_row() const;
  void _internal_set_max_row(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgGetRank)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_page_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_row_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTopListResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTopListResp) */ {
 public:
  inline MsgTopListResp() : MsgTopListResp(nullptr) {}
  virtual ~MsgTopListResp();

  MsgTopListResp(const MsgTopListResp& from);
  MsgTopListResp(MsgTopListResp&& from) noexcept
    : MsgTopListResp() {
    *this = ::std::move(from);
  }

  inline MsgTopListResp& operator=(const MsgTopListResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTopListResp& operator=(MsgTopListResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTopListResp& default_instance();

  static inline const MsgTopListResp* internal_default_instance() {
    return reinterpret_cast<const MsgTopListResp*>(
               &_MsgTopListResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(MsgTopListResp& a, MsgTopListResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTopListResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTopListResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTopListResp* New() const final {
    return CreateMaybeMessage<MsgTopListResp>(nullptr);
  }

  MsgTopListResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTopListResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTopListResp& from);
  void MergeFrom(const MsgTopListResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTopListResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTopListResp";
  }
  protected:
  explicit MsgTopListResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListsFieldNumber = 6,
    kUserIdFieldNumber = 1,
    kRankTypeFieldNumber = 2,
    kThisGoldFieldNumber = 4,
    kThisRankNdexFieldNumber = 3,
    kIsEndFieldNumber = 5,
  };
  // repeated .MsgTopInfo lists = 6;
  int lists_size() const;
  private:
  int _internal_lists_size() const;
  public:
  void clear_lists();
  ::MsgTopInfo* mutable_lists(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTopInfo >*
      mutable_lists();
  private:
  const ::MsgTopInfo& _internal_lists(int index) const;
  ::MsgTopInfo* _internal_add_lists();
  public:
  const ::MsgTopInfo& lists(int index) const;
  ::MsgTopInfo* add_lists();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTopInfo >&
      lists() const;

  // int32 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 rank_type = 2;
  void clear_rank_type();
  ::PROTOBUF_NAMESPACE_ID::int32 rank_type() const;
  void set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rank_type() const;
  void _internal_set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 this_gold = 4;
  void clear_this_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 this_gold() const;
  void set_this_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_this_gold() const;
  void _internal_set_this_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 this_rank_ndex = 3;
  void clear_this_rank_ndex();
  ::PROTOBUF_NAMESPACE_ID::int32 this_rank_ndex() const;
  void set_this_rank_ndex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_this_rank_ndex() const;
  void _internal_set_this_rank_ndex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_end = 5;
  void clear_is_end();
  ::PROTOBUF_NAMESPACE_ID::int32 is_end() const;
  void set_is_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_end() const;
  void _internal_set_is_end(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgTopListResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTopInfo > lists_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 this_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 this_rank_ndex_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_end_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankTransferResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankTransferResp) */ {
 public:
  inline MsgBankTransferResp() : MsgBankTransferResp(nullptr) {}
  virtual ~MsgBankTransferResp();

  MsgBankTransferResp(const MsgBankTransferResp& from);
  MsgBankTransferResp(MsgBankTransferResp&& from) noexcept
    : MsgBankTransferResp() {
    *this = ::std::move(from);
  }

  inline MsgBankTransferResp& operator=(const MsgBankTransferResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankTransferResp& operator=(MsgBankTransferResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankTransferResp& default_instance();

  static inline const MsgBankTransferResp* internal_default_instance() {
    return reinterpret_cast<const MsgBankTransferResp*>(
               &_MsgBankTransferResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(MsgBankTransferResp& a, MsgBankTransferResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankTransferResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankTransferResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankTransferResp* New() const final {
    return CreateMaybeMessage<MsgBankTransferResp>(nullptr);
  }

  MsgBankTransferResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankTransferResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankTransferResp& from);
  void MergeFrom(const MsgBankTransferResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankTransferResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankTransferResp";
  }
  protected:
  explicit MsgBankTransferResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBankGoldFieldNumber = 2,
    kRetValueFieldNumber = 1,
  };
  // int64 bank_gold = 2;
  void clear_bank_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 bank_gold() const;
  void set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bank_gold() const;
  void _internal_set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 ret_value = 1;
  void clear_ret_value();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value() const;
  void set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_value() const;
  void _internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBankTransferResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 bank_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankRecord PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankRecord) */ {
 public:
  inline MsgBankRecord() : MsgBankRecord(nullptr) {}
  virtual ~MsgBankRecord();

  MsgBankRecord(const MsgBankRecord& from);
  MsgBankRecord(MsgBankRecord&& from) noexcept
    : MsgBankRecord() {
    *this = ::std::move(from);
  }

  inline MsgBankRecord& operator=(const MsgBankRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankRecord& operator=(MsgBankRecord&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankRecord& default_instance();

  static inline const MsgBankRecord* internal_default_instance() {
    return reinterpret_cast<const MsgBankRecord*>(
               &_MsgBankRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(MsgBankRecord& a, MsgBankRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankRecord* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankRecord* New() const final {
    return CreateMaybeMessage<MsgBankRecord>(nullptr);
  }

  MsgBankRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankRecord>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankRecord& from);
  void MergeFrom(const MsgBankRecord& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankRecord* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankRecord";
  }
  protected:
  explicit MsgBankRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimerFieldNumber = 3,
    kTransferGoldFieldNumber = 2,
    kSendUserIdFieldNumber = 1,
    kRecvUserIdFieldNumber = 4,
  };
  // string timer = 3;
  void clear_timer();
  const std::string& timer() const;
  void set_timer(const std::string& value);
  void set_timer(std::string&& value);
  void set_timer(const char* value);
  void set_timer(const char* value, size_t size);
  std::string* mutable_timer();
  std::string* release_timer();
  void set_allocated_timer(std::string* timer);
  private:
  const std::string& _internal_timer() const;
  void _internal_set_timer(const std::string& value);
  std::string* _internal_mutable_timer();
  public:

  // int64 transfer_gold = 2;
  void clear_transfer_gold();
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_gold() const;
  void set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_transfer_gold() const;
  void _internal_set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 send_user_id = 1;
  void clear_send_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 send_user_id() const;
  void set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_send_user_id() const;
  void _internal_set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 recv_user_id = 4;
  void clear_recv_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id() const;
  void set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recv_user_id() const;
  void _internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBankRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr timer_;
  ::PROTOBUF_NAMESPACE_ID::int64 transfer_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 send_user_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 recv_user_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankRecordResp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankRecordResp) */ {
 public:
  inline MsgBankRecordResp() : MsgBankRecordResp(nullptr) {}
  virtual ~MsgBankRecordResp();

  MsgBankRecordResp(const MsgBankRecordResp& from);
  MsgBankRecordResp(MsgBankRecordResp&& from) noexcept
    : MsgBankRecordResp() {
    *this = ::std::move(from);
  }

  inline MsgBankRecordResp& operator=(const MsgBankRecordResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankRecordResp& operator=(MsgBankRecordResp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankRecordResp& default_instance();

  static inline const MsgBankRecordResp* internal_default_instance() {
    return reinterpret_cast<const MsgBankRecordResp*>(
               &_MsgBankRecordResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(MsgBankRecordResp& a, MsgBankRecordResp& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankRecordResp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankRecordResp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankRecordResp* New() const final {
    return CreateMaybeMessage<MsgBankRecordResp>(nullptr);
  }

  MsgBankRecordResp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankRecordResp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankRecordResp& from);
  void MergeFrom(const MsgBankRecordResp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankRecordResp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankRecordResp";
  }
  protected:
  explicit MsgBankRecordResp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordsFieldNumber = 1,
  };
  // repeated .MsgBankRecord records = 1;
  int records_size() const;
  private:
  int _internal_records_size() const;
  public:
  void clear_records();
  ::MsgBankRecord* mutable_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgBankRecord >*
      mutable_records();
  private:
  const ::MsgBankRecord& _internal_records(int index) const;
  ::MsgBankRecord* _internal_add_records();
  public:
  const ::MsgBankRecord& records(int index) const;
  ::MsgBankRecord* add_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgBankRecord >&
      records() const;

  // @@protoc_insertion_point(class_scope:MsgBankRecordResp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgBankRecord > records_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgPhoneCode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPhoneCode) */ {
 public:
  inline MsgPhoneCode() : MsgPhoneCode(nullptr) {}
  virtual ~MsgPhoneCode();

  MsgPhoneCode(const MsgPhoneCode& from);
  MsgPhoneCode(MsgPhoneCode&& from) noexcept
    : MsgPhoneCode() {
    *this = ::std::move(from);
  }

  inline MsgPhoneCode& operator=(const MsgPhoneCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPhoneCode& operator=(MsgPhoneCode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPhoneCode& default_instance();

  static inline const MsgPhoneCode* internal_default_instance() {
    return reinterpret_cast<const MsgPhoneCode*>(
               &_MsgPhoneCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(MsgPhoneCode& a, MsgPhoneCode& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPhoneCode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPhoneCode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPhoneCode* New() const final {
    return CreateMaybeMessage<MsgPhoneCode>(nullptr);
  }

  MsgPhoneCode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPhoneCode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPhoneCode& from);
  void MergeFrom(const MsgPhoneCode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPhoneCode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPhoneCode";
  }
  protected:
  explicit MsgPhoneCode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAreaCodeFieldNumber = 1,
    kPhoneFieldNumber = 2,
  };
  // string area_code = 1;
  void clear_area_code();
  const std::string& area_code() const;
  void set_area_code(const std::string& value);
  void set_area_code(std::string&& value);
  void set_area_code(const char* value);
  void set_area_code(const char* value, size_t size);
  std::string* mutable_area_code();
  std::string* release_area_code();
  void set_allocated_area_code(std::string* area_code);
  private:
  const std::string& _internal_area_code() const;
  void _internal_set_area_code(const std::string& value);
  std::string* _internal_mutable_area_code();
  public:

  // string phone = 2;
  void clear_phone();
  const std::string& phone() const;
  void set_phone(const std::string& value);
  void set_phone(std::string&& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  std::string* mutable_phone();
  std::string* release_phone();
  void set_allocated_phone(std::string* phone);
  private:
  const std::string& _internal_phone() const;
  void _internal_set_phone(const std::string& value);
  std::string* _internal_mutable_phone();
  public:

  // @@protoc_insertion_point(class_scope:MsgPhoneCode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr area_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr phone_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgItem) */ {
 public:
  inline MsgItem() : MsgItem(nullptr) {}
  virtual ~MsgItem();

  MsgItem(const MsgItem& from);
  MsgItem(MsgItem&& from) noexcept
    : MsgItem() {
    *this = ::std::move(from);
  }

  inline MsgItem& operator=(const MsgItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgItem& operator=(MsgItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgItem& default_instance();

  static inline const MsgItem* internal_default_instance() {
    return reinterpret_cast<const MsgItem*>(
               &_MsgItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(MsgItem& a, MsgItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgItem* New() const final {
    return CreateMaybeMessage<MsgItem>(nullptr);
  }

  MsgItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgItem& from);
  void MergeFrom(const MsgItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgItem";
  }
  protected:
  explicit MsgItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemNumFieldNumber = 2,
    kItemIdFieldNumber = 1,
  };
  // int64 item_num = 2;
  void clear_item_num();
  ::PROTOBUF_NAMESPACE_ID::int64 item_num() const;
  void set_item_num(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_item_num() const;
  void _internal_set_item_num(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 item_id = 1;
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 item_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgPlayerItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgPlayerItem) */ {
 public:
  inline MsgPlayerItem() : MsgPlayerItem(nullptr) {}
  virtual ~MsgPlayerItem();

  MsgPlayerItem(const MsgPlayerItem& from);
  MsgPlayerItem(MsgPlayerItem&& from) noexcept
    : MsgPlayerItem() {
    *this = ::std::move(from);
  }

  inline MsgPlayerItem& operator=(const MsgPlayerItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPlayerItem& operator=(MsgPlayerItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgPlayerItem& default_instance();

  static inline const MsgPlayerItem* internal_default_instance() {
    return reinterpret_cast<const MsgPlayerItem*>(
               &_MsgPlayerItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(MsgPlayerItem& a, MsgPlayerItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgPlayerItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPlayerItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgPlayerItem* New() const final {
    return CreateMaybeMessage<MsgPlayerItem>(nullptr);
  }

  MsgPlayerItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgPlayerItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgPlayerItem& from);
  void MergeFrom(const MsgPlayerItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPlayerItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgPlayerItem";
  }
  protected:
  explicit MsgPlayerItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
  };
  // repeated .MsgItem item = 1;
  int item_size() const;
  private:
  int _internal_item_size() const;
  public:
  void clear_item();
  ::MsgItem* mutable_item(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgItem >*
      mutable_item();
  private:
  const ::MsgItem& _internal_item(int index) const;
  ::MsgItem* _internal_add_item();
  public:
  const ::MsgItem& item(int index) const;
  ::MsgItem* add_item();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgItem >&
      item() const;

  // @@protoc_insertion_point(class_scope:MsgPlayerItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgItem > item_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgBankQueryNicname PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgBankQueryNicname) */ {
 public:
  inline MsgBankQueryNicname() : MsgBankQueryNicname(nullptr) {}
  virtual ~MsgBankQueryNicname();

  MsgBankQueryNicname(const MsgBankQueryNicname& from);
  MsgBankQueryNicname(MsgBankQueryNicname&& from) noexcept
    : MsgBankQueryNicname() {
    *this = ::std::move(from);
  }

  inline MsgBankQueryNicname& operator=(const MsgBankQueryNicname& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBankQueryNicname& operator=(MsgBankQueryNicname&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgBankQueryNicname& default_instance();

  static inline const MsgBankQueryNicname* internal_default_instance() {
    return reinterpret_cast<const MsgBankQueryNicname*>(
               &_MsgBankQueryNicname_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(MsgBankQueryNicname& a, MsgBankQueryNicname& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgBankQueryNicname* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBankQueryNicname* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgBankQueryNicname* New() const final {
    return CreateMaybeMessage<MsgBankQueryNicname>(nullptr);
  }

  MsgBankQueryNicname* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgBankQueryNicname>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgBankQueryNicname& from);
  void MergeFrom(const MsgBankQueryNicname& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBankQueryNicname* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgBankQueryNicname";
  }
  protected:
  explicit MsgBankQueryNicname(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 2,
    kRetValueFieldNumber = 1,
    kTaxFieldNumber = 3,
  };
  // string nickname = 2;
  void clear_nickname();
  const std::string& nickname() const;
  void set_nickname(const std::string& value);
  void set_nickname(std::string&& value);
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  std::string* mutable_nickname();
  std::string* release_nickname();
  void set_allocated_nickname(std::string* nickname);
  private:
  const std::string& _internal_nickname() const;
  void _internal_set_nickname(const std::string& value);
  std::string* _internal_mutable_nickname();
  public:

  // int32 ret_Value = 1;
  void clear_ret_value();
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value() const;
  void set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ret_value() const;
  void _internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 tax = 3;
  void clear_tax();
  ::PROTOBUF_NAMESPACE_ID::int32 tax() const;
  void set_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tax() const;
  void _internal_set_tax(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgBankQueryNicname)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr nickname_;
  ::PROTOBUF_NAMESPACE_ID::int32 ret_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 tax_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgSubagentInformation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgSubagentInformation) */ {
 public:
  inline MsgSubagentInformation() : MsgSubagentInformation(nullptr) {}
  virtual ~MsgSubagentInformation();

  MsgSubagentInformation(const MsgSubagentInformation& from);
  MsgSubagentInformation(MsgSubagentInformation&& from) noexcept
    : MsgSubagentInformation() {
    *this = ::std::move(from);
  }

  inline MsgSubagentInformation& operator=(const MsgSubagentInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSubagentInformation& operator=(MsgSubagentInformation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgSubagentInformation& default_instance();

  static inline const MsgSubagentInformation* internal_default_instance() {
    return reinterpret_cast<const MsgSubagentInformation*>(
               &_MsgSubagentInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(MsgSubagentInformation& a, MsgSubagentInformation& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSubagentInformation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSubagentInformation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgSubagentInformation* New() const final {
    return CreateMaybeMessage<MsgSubagentInformation>(nullptr);
  }

  MsgSubagentInformation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgSubagentInformation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgSubagentInformation& from);
  void MergeFrom(const MsgSubagentInformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSubagentInformation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgSubagentInformation";
  }
  protected:
  explicit MsgSubagentInformation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentNicknameFieldNumber = 1,
    kAgentUserIdFieldNumber = 2,
    kAgentTypeFieldNumber = 3,
    kTotalShiftToFieldNumber = 4,
    kTotalRollOutFieldNumber = 5,
    kVipLevelFieldNumber = 6,
  };
  // string agent_nickname = 1;
  void clear_agent_nickname();
  const std::string& agent_nickname() const;
  void set_agent_nickname(const std::string& value);
  void set_agent_nickname(std::string&& value);
  void set_agent_nickname(const char* value);
  void set_agent_nickname(const char* value, size_t size);
  std::string* mutable_agent_nickname();
  std::string* release_agent_nickname();
  void set_allocated_agent_nickname(std::string* agent_nickname);
  private:
  const std::string& _internal_agent_nickname() const;
  void _internal_set_agent_nickname(const std::string& value);
  std::string* _internal_mutable_agent_nickname();
  public:

  // int32 agent_user_id = 2;
  void clear_agent_user_id();
  ::PROTOBUF_NAMESPACE_ID::int32 agent_user_id() const;
  void set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agent_user_id() const;
  void _internal_set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool agent_type = 3;
  void clear_agent_type();
  bool agent_type() const;
  void set_agent_type(bool value);
  private:
  bool _internal_agent_type() const;
  void _internal_set_agent_type(bool value);
  public:

  // int64 total_shift_to = 4;
  void clear_total_shift_to();
  ::PROTOBUF_NAMESPACE_ID::int64 total_shift_to() const;
  void set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_shift_to() const;
  void _internal_set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 total_roll_out = 5;
  void clear_total_roll_out();
  ::PROTOBUF_NAMESPACE_ID::int64 total_roll_out() const;
  void set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_total_roll_out() const;
  void _internal_set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 vip_level = 6;
  void clear_vip_level();
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level() const;
  void set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vip_level() const;
  void _internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:MsgSubagentInformation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr agent_nickname_;
  ::PROTOBUF_NAMESPACE_ID::int32 agent_user_id_;
  bool agent_type_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_shift_to_;
  ::PROTOBUF_NAMESPACE_ID::int64 total_roll_out_;
  ::PROTOBUF_NAMESPACE_ID::int32 vip_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// -------------------------------------------------------------------

class MsgTtotalSubagentInformation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:MsgTtotalSubagentInformation) */ {
 public:
  inline MsgTtotalSubagentInformation() : MsgTtotalSubagentInformation(nullptr) {}
  virtual ~MsgTtotalSubagentInformation();

  MsgTtotalSubagentInformation(const MsgTtotalSubagentInformation& from);
  MsgTtotalSubagentInformation(MsgTtotalSubagentInformation&& from) noexcept
    : MsgTtotalSubagentInformation() {
    *this = ::std::move(from);
  }

  inline MsgTtotalSubagentInformation& operator=(const MsgTtotalSubagentInformation& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTtotalSubagentInformation& operator=(MsgTtotalSubagentInformation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MsgTtotalSubagentInformation& default_instance();

  static inline const MsgTtotalSubagentInformation* internal_default_instance() {
    return reinterpret_cast<const MsgTtotalSubagentInformation*>(
               &_MsgTtotalSubagentInformation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(MsgTtotalSubagentInformation& a, MsgTtotalSubagentInformation& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgTtotalSubagentInformation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTtotalSubagentInformation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MsgTtotalSubagentInformation* New() const final {
    return CreateMaybeMessage<MsgTtotalSubagentInformation>(nullptr);
  }

  MsgTtotalSubagentInformation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MsgTtotalSubagentInformation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MsgTtotalSubagentInformation& from);
  void MergeFrom(const MsgTtotalSubagentInformation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTtotalSubagentInformation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "MsgTtotalSubagentInformation";
  }
  protected:
  explicit MsgTtotalSubagentInformation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Login_2eproto);
    return ::descriptor_table_Login_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAgentInfoFieldNumber = 1,
  };
  // repeated .MsgSubagentInformation agent_info = 1;
  int agent_info_size() const;
  private:
  int _internal_agent_info_size() const;
  public:
  void clear_agent_info();
  ::MsgSubagentInformation* mutable_agent_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgSubagentInformation >*
      mutable_agent_info();
  private:
  const ::MsgSubagentInformation& _internal_agent_info(int index) const;
  ::MsgSubagentInformation* _internal_add_agent_info();
  public:
  const ::MsgSubagentInformation& agent_info(int index) const;
  ::MsgSubagentInformation* add_agent_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgSubagentInformation >&
      agent_info() const;

  // @@protoc_insertion_point(class_scope:MsgTtotalSubagentInformation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgSubagentInformation > agent_info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Login_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgPlayerLogin

// string account = 1;
inline void MsgPlayerLogin::clear_account() {
  account_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::account() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.account)
  return _internal_account();
}
inline void MsgPlayerLogin::set_account(const std::string& value) {
  _internal_set_account(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.account)
}
inline std::string* MsgPlayerLogin::mutable_account() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.account)
  return _internal_mutable_account();
}
inline const std::string& MsgPlayerLogin::_internal_account() const {
  return account_.Get();
}
inline void MsgPlayerLogin::_internal_set_account(const std::string& value) {
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_account(std::string&& value) {
  
  account_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.account)
}
inline void MsgPlayerLogin::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.account)
}
inline void MsgPlayerLogin::set_account(const char* value,
    size_t size) {
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.account)
}
inline std::string* MsgPlayerLogin::_internal_mutable_account() {
  
  return account_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_account() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.account)
  return account_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_account(std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.account)
}

// string password = 2;
inline void MsgPlayerLogin::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::password() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.password)
  return _internal_password();
}
inline void MsgPlayerLogin::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.password)
}
inline std::string* MsgPlayerLogin::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.password)
  return _internal_mutable_password();
}
inline const std::string& MsgPlayerLogin::_internal_password() const {
  return password_.Get();
}
inline void MsgPlayerLogin::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.password)
}
inline void MsgPlayerLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.password)
}
inline void MsgPlayerLogin::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.password)
}
inline std::string* MsgPlayerLogin::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_password() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.password)
}

// int32 platform_id = 3;
inline void MsgPlayerLogin::clear_platform_id() {
  platform_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::_internal_platform_id() const {
  return platform_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::platform_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.platform_id)
  return _internal_platform_id();
}
inline void MsgPlayerLogin::_internal_set_platform_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  platform_id_ = value;
}
inline void MsgPlayerLogin::set_platform_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_platform_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.platform_id)
}

// int32 channel_id = 4;
inline void MsgPlayerLogin::clear_channel_id() {
  channel_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::_internal_channel_id() const {
  return channel_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::channel_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.channel_id)
  return _internal_channel_id();
}
inline void MsgPlayerLogin::_internal_set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channel_id_ = value;
}
inline void MsgPlayerLogin::set_channel_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.channel_id)
}

// int32 client_type = 5;
inline void MsgPlayerLogin::clear_client_type() {
  client_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::_internal_client_type() const {
  return client_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::client_type() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.client_type)
  return _internal_client_type();
}
inline void MsgPlayerLogin::_internal_set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  client_type_ = value;
}
inline void MsgPlayerLogin::set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_client_type(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.client_type)
}

// int32 login_type = 6;
inline void MsgPlayerLogin::clear_login_type() {
  login_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::_internal_login_type() const {
  return login_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::login_type() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.login_type)
  return _internal_login_type();
}
inline void MsgPlayerLogin::_internal_set_login_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  login_type_ = value;
}
inline void MsgPlayerLogin::set_login_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_login_type(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.login_type)
}

// string machine_num = 7;
inline void MsgPlayerLogin::clear_machine_num() {
  machine_num_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::machine_num() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.machine_num)
  return _internal_machine_num();
}
inline void MsgPlayerLogin::set_machine_num(const std::string& value) {
  _internal_set_machine_num(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.machine_num)
}
inline std::string* MsgPlayerLogin::mutable_machine_num() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.machine_num)
  return _internal_mutable_machine_num();
}
inline const std::string& MsgPlayerLogin::_internal_machine_num() const {
  return machine_num_.Get();
}
inline void MsgPlayerLogin::_internal_set_machine_num(const std::string& value) {
  
  machine_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_machine_num(std::string&& value) {
  
  machine_num_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.machine_num)
}
inline void MsgPlayerLogin::set_machine_num(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  machine_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.machine_num)
}
inline void MsgPlayerLogin::set_machine_num(const char* value,
    size_t size) {
  
  machine_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.machine_num)
}
inline std::string* MsgPlayerLogin::_internal_mutable_machine_num() {
  
  return machine_num_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_machine_num() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.machine_num)
  return machine_num_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_machine_num(std::string* machine_num) {
  if (machine_num != nullptr) {
    
  } else {
    
  }
  machine_num_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), machine_num,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.machine_num)
}

// string user_ip = 8;
inline void MsgPlayerLogin::clear_user_ip() {
  user_ip_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::user_ip() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.user_ip)
  return _internal_user_ip();
}
inline void MsgPlayerLogin::set_user_ip(const std::string& value) {
  _internal_set_user_ip(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.user_ip)
}
inline std::string* MsgPlayerLogin::mutable_user_ip() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.user_ip)
  return _internal_mutable_user_ip();
}
inline const std::string& MsgPlayerLogin::_internal_user_ip() const {
  return user_ip_.Get();
}
inline void MsgPlayerLogin::_internal_set_user_ip(const std::string& value) {
  
  user_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_user_ip(std::string&& value) {
  
  user_ip_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.user_ip)
}
inline void MsgPlayerLogin::set_user_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.user_ip)
}
inline void MsgPlayerLogin::set_user_ip(const char* value,
    size_t size) {
  
  user_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.user_ip)
}
inline std::string* MsgPlayerLogin::_internal_mutable_user_ip() {
  
  return user_ip_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_user_ip() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.user_ip)
  return user_ip_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_user_ip(std::string* user_ip) {
  if (user_ip != nullptr) {
    
  } else {
    
  }
  user_ip_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), user_ip,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.user_ip)
}

// bool is_drain = 9;
inline void MsgPlayerLogin::clear_is_drain() {
  is_drain_ = false;
}
inline bool MsgPlayerLogin::_internal_is_drain() const {
  return is_drain_;
}
inline bool MsgPlayerLogin::is_drain() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.is_drain)
  return _internal_is_drain();
}
inline void MsgPlayerLogin::_internal_set_is_drain(bool value) {
  
  is_drain_ = value;
}
inline void MsgPlayerLogin::set_is_drain(bool value) {
  _internal_set_is_drain(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.is_drain)
}

// string avatar = 10;
inline void MsgPlayerLogin::clear_avatar() {
  avatar_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::avatar() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.avatar)
  return _internal_avatar();
}
inline void MsgPlayerLogin::set_avatar(const std::string& value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.avatar)
}
inline std::string* MsgPlayerLogin::mutable_avatar() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.avatar)
  return _internal_mutable_avatar();
}
inline const std::string& MsgPlayerLogin::_internal_avatar() const {
  return avatar_.Get();
}
inline void MsgPlayerLogin::_internal_set_avatar(const std::string& value) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_avatar(std::string&& value) {
  
  avatar_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.avatar)
}
inline void MsgPlayerLogin::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.avatar)
}
inline void MsgPlayerLogin::set_avatar(const char* value,
    size_t size) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.avatar)
}
inline std::string* MsgPlayerLogin::_internal_mutable_avatar() {
  
  return avatar_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_avatar() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.avatar)
  return avatar_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_avatar(std::string* avatar) {
  if (avatar != nullptr) {
    
  } else {
    
  }
  avatar_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.avatar)
}

// string nickname = 11;
inline void MsgPlayerLogin::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.nickname)
  return _internal_nickname();
}
inline void MsgPlayerLogin::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.nickname)
}
inline std::string* MsgPlayerLogin::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgPlayerLogin::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgPlayerLogin::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.nickname)
}
inline void MsgPlayerLogin::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.nickname)
}
inline void MsgPlayerLogin::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.nickname)
}
inline std::string* MsgPlayerLogin::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.nickname)
}

// string phone = 12;
inline void MsgPlayerLogin::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::phone() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.phone)
  return _internal_phone();
}
inline void MsgPlayerLogin::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.phone)
}
inline std::string* MsgPlayerLogin::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgPlayerLogin::_internal_phone() const {
  return phone_.Get();
}
inline void MsgPlayerLogin::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.phone)
}
inline void MsgPlayerLogin::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.phone)
}
inline void MsgPlayerLogin::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.phone)
}
inline std::string* MsgPlayerLogin::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_phone() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.phone)
}

// int32 code = 13;
inline void MsgPlayerLogin::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLogin::code() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.code)
  return _internal_code();
}
inline void MsgPlayerLogin::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void MsgPlayerLogin::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.code)
}

// string invite_code = 14;
inline void MsgPlayerLogin::clear_invite_code() {
  invite_code_.ClearToEmpty();
}
inline const std::string& MsgPlayerLogin::invite_code() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLogin.invite_code)
  return _internal_invite_code();
}
inline void MsgPlayerLogin::set_invite_code(const std::string& value) {
  _internal_set_invite_code(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLogin.invite_code)
}
inline std::string* MsgPlayerLogin::mutable_invite_code() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLogin.invite_code)
  return _internal_mutable_invite_code();
}
inline const std::string& MsgPlayerLogin::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void MsgPlayerLogin::_internal_set_invite_code(const std::string& value) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLogin::set_invite_code(std::string&& value) {
  
  invite_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLogin.invite_code)
}
inline void MsgPlayerLogin::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLogin.invite_code)
}
inline void MsgPlayerLogin::set_invite_code(const char* value,
    size_t size) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLogin.invite_code)
}
inline std::string* MsgPlayerLogin::_internal_mutable_invite_code() {
  
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLogin::release_invite_code() {
  // @@protoc_insertion_point(field_release:MsgPlayerLogin.invite_code)
  return invite_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLogin::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    
  } else {
    
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLogin.invite_code)
}

// -------------------------------------------------------------------

// MsgPlayerLoginResp

// int32 res_code = 1;
inline void MsgPlayerLoginResp::clear_res_code() {
  res_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::_internal_res_code() const {
  return res_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::res_code() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.res_code)
  return _internal_res_code();
}
inline void MsgPlayerLoginResp::_internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_code_ = value;
}
inline void MsgPlayerLoginResp::set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_code(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.res_code)
}

// int32 user_id = 2;
inline void MsgPlayerLoginResp::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::user_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.user_id)
  return _internal_user_id();
}
inline void MsgPlayerLoginResp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgPlayerLoginResp::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.user_id)
}

// int32 beautiful_id = 3;
inline void MsgPlayerLoginResp::clear_beautiful_id() {
  beautiful_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::_internal_beautiful_id() const {
  return beautiful_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::beautiful_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.beautiful_id)
  return _internal_beautiful_id();
}
inline void MsgPlayerLoginResp::_internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  beautiful_id_ = value;
}
inline void MsgPlayerLoginResp::set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_beautiful_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.beautiful_id)
}

// string account = 4;
inline void MsgPlayerLoginResp::clear_account() {
  account_.ClearToEmpty();
}
inline const std::string& MsgPlayerLoginResp::account() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.account)
  return _internal_account();
}
inline void MsgPlayerLoginResp::set_account(const std::string& value) {
  _internal_set_account(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.account)
}
inline std::string* MsgPlayerLoginResp::mutable_account() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLoginResp.account)
  return _internal_mutable_account();
}
inline const std::string& MsgPlayerLoginResp::_internal_account() const {
  return account_.Get();
}
inline void MsgPlayerLoginResp::_internal_set_account(const std::string& value) {
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLoginResp::set_account(std::string&& value) {
  
  account_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLoginResp.account)
}
inline void MsgPlayerLoginResp::set_account(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLoginResp.account)
}
inline void MsgPlayerLoginResp::set_account(const char* value,
    size_t size) {
  
  account_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLoginResp.account)
}
inline std::string* MsgPlayerLoginResp::_internal_mutable_account() {
  
  return account_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLoginResp::release_account() {
  // @@protoc_insertion_point(field_release:MsgPlayerLoginResp.account)
  return account_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLoginResp::set_allocated_account(std::string* account) {
  if (account != nullptr) {
    
  } else {
    
  }
  account_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLoginResp.account)
}

// string nickname = 5;
inline void MsgPlayerLoginResp::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgPlayerLoginResp::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.nickname)
  return _internal_nickname();
}
inline void MsgPlayerLoginResp::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.nickname)
}
inline std::string* MsgPlayerLoginResp::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLoginResp.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgPlayerLoginResp::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgPlayerLoginResp::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLoginResp::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLoginResp.nickname)
}
inline void MsgPlayerLoginResp::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLoginResp.nickname)
}
inline void MsgPlayerLoginResp::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLoginResp.nickname)
}
inline std::string* MsgPlayerLoginResp::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLoginResp::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgPlayerLoginResp.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLoginResp::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLoginResp.nickname)
}

// string avatar = 6;
inline void MsgPlayerLoginResp::clear_avatar() {
  avatar_.ClearToEmpty();
}
inline const std::string& MsgPlayerLoginResp::avatar() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.avatar)
  return _internal_avatar();
}
inline void MsgPlayerLoginResp::set_avatar(const std::string& value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.avatar)
}
inline std::string* MsgPlayerLoginResp::mutable_avatar() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLoginResp.avatar)
  return _internal_mutable_avatar();
}
inline const std::string& MsgPlayerLoginResp::_internal_avatar() const {
  return avatar_.Get();
}
inline void MsgPlayerLoginResp::_internal_set_avatar(const std::string& value) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLoginResp::set_avatar(std::string&& value) {
  
  avatar_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLoginResp.avatar)
}
inline void MsgPlayerLoginResp::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLoginResp.avatar)
}
inline void MsgPlayerLoginResp::set_avatar(const char* value,
    size_t size) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLoginResp.avatar)
}
inline std::string* MsgPlayerLoginResp::_internal_mutable_avatar() {
  
  return avatar_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLoginResp::release_avatar() {
  // @@protoc_insertion_point(field_release:MsgPlayerLoginResp.avatar)
  return avatar_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLoginResp::set_allocated_avatar(std::string* avatar) {
  if (avatar != nullptr) {
    
  } else {
    
  }
  avatar_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLoginResp.avatar)
}

// bool first_recharge = 7;
inline void MsgPlayerLoginResp::clear_first_recharge() {
  first_recharge_ = false;
}
inline bool MsgPlayerLoginResp::_internal_first_recharge() const {
  return first_recharge_;
}
inline bool MsgPlayerLoginResp::first_recharge() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.first_recharge)
  return _internal_first_recharge();
}
inline void MsgPlayerLoginResp::_internal_set_first_recharge(bool value) {
  
  first_recharge_ = value;
}
inline void MsgPlayerLoginResp::set_first_recharge(bool value) {
  _internal_set_first_recharge(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.first_recharge)
}

// int32 user_type = 8;
inline void MsgPlayerLoginResp::clear_user_type() {
  user_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::_internal_user_type() const {
  return user_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::user_type() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.user_type)
  return _internal_user_type();
}
inline void MsgPlayerLoginResp::_internal_set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_type_ = value;
}
inline void MsgPlayerLoginResp::set_user_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_type(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.user_type)
}

// bool is_drain = 9;
inline void MsgPlayerLoginResp::clear_is_drain() {
  is_drain_ = false;
}
inline bool MsgPlayerLoginResp::_internal_is_drain() const {
  return is_drain_;
}
inline bool MsgPlayerLoginResp::is_drain() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.is_drain)
  return _internal_is_drain();
}
inline void MsgPlayerLoginResp::_internal_set_is_drain(bool value) {
  
  is_drain_ = value;
}
inline void MsgPlayerLoginResp::set_is_drain(bool value) {
  _internal_set_is_drain(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.is_drain)
}

// uint64 coin = 10;
inline void MsgPlayerLoginResp::clear_coin() {
  coin_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgPlayerLoginResp::_internal_coin() const {
  return coin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgPlayerLoginResp::coin() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.coin)
  return _internal_coin();
}
inline void MsgPlayerLoginResp::_internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  coin_ = value;
}
inline void MsgPlayerLoginResp::set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_coin(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.coin)
}

// string phone_num = 11;
inline void MsgPlayerLoginResp::clear_phone_num() {
  phone_num_.ClearToEmpty();
}
inline const std::string& MsgPlayerLoginResp::phone_num() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.phone_num)
  return _internal_phone_num();
}
inline void MsgPlayerLoginResp::set_phone_num(const std::string& value) {
  _internal_set_phone_num(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.phone_num)
}
inline std::string* MsgPlayerLoginResp::mutable_phone_num() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLoginResp.phone_num)
  return _internal_mutable_phone_num();
}
inline const std::string& MsgPlayerLoginResp::_internal_phone_num() const {
  return phone_num_.Get();
}
inline void MsgPlayerLoginResp::_internal_set_phone_num(const std::string& value) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLoginResp::set_phone_num(std::string&& value) {
  
  phone_num_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLoginResp.phone_num)
}
inline void MsgPlayerLoginResp::set_phone_num(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLoginResp.phone_num)
}
inline void MsgPlayerLoginResp::set_phone_num(const char* value,
    size_t size) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLoginResp.phone_num)
}
inline std::string* MsgPlayerLoginResp::_internal_mutable_phone_num() {
  
  return phone_num_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLoginResp::release_phone_num() {
  // @@protoc_insertion_point(field_release:MsgPlayerLoginResp.phone_num)
  return phone_num_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLoginResp::set_allocated_phone_num(std::string* phone_num) {
  if (phone_num != nullptr) {
    
  } else {
    
  }
  phone_num_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone_num,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLoginResp.phone_num)
}

// int32 vip_level = 12;
inline void MsgPlayerLoginResp::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.vip_level)
  return _internal_vip_level();
}
inline void MsgPlayerLoginResp::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgPlayerLoginResp::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.vip_level)
}

// int32 avatar_frame = 13;
inline void MsgPlayerLoginResp::clear_avatar_frame() {
  avatar_frame_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::_internal_avatar_frame() const {
  return avatar_frame_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::avatar_frame() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.avatar_frame)
  return _internal_avatar_frame();
}
inline void MsgPlayerLoginResp::_internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avatar_frame_ = value;
}
inline void MsgPlayerLoginResp::set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avatar_frame(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.avatar_frame)
}

// string invite_code = 14;
inline void MsgPlayerLoginResp::clear_invite_code() {
  invite_code_.ClearToEmpty();
}
inline const std::string& MsgPlayerLoginResp::invite_code() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.invite_code)
  return _internal_invite_code();
}
inline void MsgPlayerLoginResp::set_invite_code(const std::string& value) {
  _internal_set_invite_code(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.invite_code)
}
inline std::string* MsgPlayerLoginResp::mutable_invite_code() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLoginResp.invite_code)
  return _internal_mutable_invite_code();
}
inline const std::string& MsgPlayerLoginResp::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void MsgPlayerLoginResp::_internal_set_invite_code(const std::string& value) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLoginResp::set_invite_code(std::string&& value) {
  
  invite_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLoginResp.invite_code)
}
inline void MsgPlayerLoginResp::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLoginResp.invite_code)
}
inline void MsgPlayerLoginResp::set_invite_code(const char* value,
    size_t size) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLoginResp.invite_code)
}
inline std::string* MsgPlayerLoginResp::_internal_mutable_invite_code() {
  
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLoginResp::release_invite_code() {
  // @@protoc_insertion_point(field_release:MsgPlayerLoginResp.invite_code)
  return invite_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLoginResp::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    
  } else {
    
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLoginResp.invite_code)
}

// bool bank_password = 15;
inline void MsgPlayerLoginResp::clear_bank_password() {
  bank_password_ = false;
}
inline bool MsgPlayerLoginResp::_internal_bank_password() const {
  return bank_password_;
}
inline bool MsgPlayerLoginResp::bank_password() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.bank_password)
  return _internal_bank_password();
}
inline void MsgPlayerLoginResp::_internal_set_bank_password(bool value) {
  
  bank_password_ = value;
}
inline void MsgPlayerLoginResp::set_bank_password(bool value) {
  _internal_set_bank_password(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.bank_password)
}

// string signature = 16;
inline void MsgPlayerLoginResp::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& MsgPlayerLoginResp::signature() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.signature)
  return _internal_signature();
}
inline void MsgPlayerLoginResp::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.signature)
}
inline std::string* MsgPlayerLoginResp::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerLoginResp.signature)
  return _internal_mutable_signature();
}
inline const std::string& MsgPlayerLoginResp::_internal_signature() const {
  return signature_.Get();
}
inline void MsgPlayerLoginResp::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerLoginResp::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerLoginResp.signature)
}
inline void MsgPlayerLoginResp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerLoginResp.signature)
}
inline void MsgPlayerLoginResp::set_signature(const char* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerLoginResp.signature)
}
inline std::string* MsgPlayerLoginResp::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerLoginResp::release_signature() {
  // @@protoc_insertion_point(field_release:MsgPlayerLoginResp.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerLoginResp::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerLoginResp.signature)
}

// int32 agent_level = 17;
inline void MsgPlayerLoginResp::clear_agent_level() {
  agent_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::_internal_agent_level() const {
  return agent_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerLoginResp::agent_level() const {
  // @@protoc_insertion_point(field_get:MsgPlayerLoginResp.agent_level)
  return _internal_agent_level();
}
inline void MsgPlayerLoginResp::_internal_set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agent_level_ = value;
}
inline void MsgPlayerLoginResp::set_agent_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agent_level(value);
  // @@protoc_insertion_point(field_set:MsgPlayerLoginResp.agent_level)
}

// -------------------------------------------------------------------

// MsgModifyPassword

// string old_password = 1;
inline void MsgModifyPassword::clear_old_password() {
  old_password_.ClearToEmpty();
}
inline const std::string& MsgModifyPassword::old_password() const {
  // @@protoc_insertion_point(field_get:MsgModifyPassword.old_password)
  return _internal_old_password();
}
inline void MsgModifyPassword::set_old_password(const std::string& value) {
  _internal_set_old_password(value);
  // @@protoc_insertion_point(field_set:MsgModifyPassword.old_password)
}
inline std::string* MsgModifyPassword::mutable_old_password() {
  // @@protoc_insertion_point(field_mutable:MsgModifyPassword.old_password)
  return _internal_mutable_old_password();
}
inline const std::string& MsgModifyPassword::_internal_old_password() const {
  return old_password_.Get();
}
inline void MsgModifyPassword::_internal_set_old_password(const std::string& value) {
  
  old_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgModifyPassword::set_old_password(std::string&& value) {
  
  old_password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgModifyPassword.old_password)
}
inline void MsgModifyPassword::set_old_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  old_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgModifyPassword.old_password)
}
inline void MsgModifyPassword::set_old_password(const char* value,
    size_t size) {
  
  old_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgModifyPassword.old_password)
}
inline std::string* MsgModifyPassword::_internal_mutable_old_password() {
  
  return old_password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgModifyPassword::release_old_password() {
  // @@protoc_insertion_point(field_release:MsgModifyPassword.old_password)
  return old_password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgModifyPassword::set_allocated_old_password(std::string* old_password) {
  if (old_password != nullptr) {
    
  } else {
    
  }
  old_password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), old_password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgModifyPassword.old_password)
}

// string new_password = 2;
inline void MsgModifyPassword::clear_new_password() {
  new_password_.ClearToEmpty();
}
inline const std::string& MsgModifyPassword::new_password() const {
  // @@protoc_insertion_point(field_get:MsgModifyPassword.new_password)
  return _internal_new_password();
}
inline void MsgModifyPassword::set_new_password(const std::string& value) {
  _internal_set_new_password(value);
  // @@protoc_insertion_point(field_set:MsgModifyPassword.new_password)
}
inline std::string* MsgModifyPassword::mutable_new_password() {
  // @@protoc_insertion_point(field_mutable:MsgModifyPassword.new_password)
  return _internal_mutable_new_password();
}
inline const std::string& MsgModifyPassword::_internal_new_password() const {
  return new_password_.Get();
}
inline void MsgModifyPassword::_internal_set_new_password(const std::string& value) {
  
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgModifyPassword::set_new_password(std::string&& value) {
  
  new_password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgModifyPassword.new_password)
}
inline void MsgModifyPassword::set_new_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgModifyPassword.new_password)
}
inline void MsgModifyPassword::set_new_password(const char* value,
    size_t size) {
  
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgModifyPassword.new_password)
}
inline std::string* MsgModifyPassword::_internal_mutable_new_password() {
  
  return new_password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgModifyPassword::release_new_password() {
  // @@protoc_insertion_point(field_release:MsgModifyPassword.new_password)
  return new_password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgModifyPassword::set_allocated_new_password(std::string* new_password) {
  if (new_password != nullptr) {
    
  } else {
    
  }
  new_password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), new_password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgModifyPassword.new_password)
}

// -------------------------------------------------------------------

// MsgBindPhone

// int32 code = 1;
inline void MsgBindPhone::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBindPhone::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBindPhone::code() const {
  // @@protoc_insertion_point(field_get:MsgBindPhone.code)
  return _internal_code();
}
inline void MsgBindPhone::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void MsgBindPhone::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:MsgBindPhone.code)
}

// string phone_num = 2;
inline void MsgBindPhone::clear_phone_num() {
  phone_num_.ClearToEmpty();
}
inline const std::string& MsgBindPhone::phone_num() const {
  // @@protoc_insertion_point(field_get:MsgBindPhone.phone_num)
  return _internal_phone_num();
}
inline void MsgBindPhone::set_phone_num(const std::string& value) {
  _internal_set_phone_num(value);
  // @@protoc_insertion_point(field_set:MsgBindPhone.phone_num)
}
inline std::string* MsgBindPhone::mutable_phone_num() {
  // @@protoc_insertion_point(field_mutable:MsgBindPhone.phone_num)
  return _internal_mutable_phone_num();
}
inline const std::string& MsgBindPhone::_internal_phone_num() const {
  return phone_num_.Get();
}
inline void MsgBindPhone::_internal_set_phone_num(const std::string& value) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgBindPhone::set_phone_num(std::string&& value) {
  
  phone_num_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgBindPhone.phone_num)
}
inline void MsgBindPhone::set_phone_num(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgBindPhone.phone_num)
}
inline void MsgBindPhone::set_phone_num(const char* value,
    size_t size) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgBindPhone.phone_num)
}
inline std::string* MsgBindPhone::_internal_mutable_phone_num() {
  
  return phone_num_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgBindPhone::release_phone_num() {
  // @@protoc_insertion_point(field_release:MsgBindPhone.phone_num)
  return phone_num_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgBindPhone::set_allocated_phone_num(std::string* phone_num) {
  if (phone_num != nullptr) {
    
  } else {
    
  }
  phone_num_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone_num,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgBindPhone.phone_num)
}

// string password = 3;
inline void MsgBindPhone::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgBindPhone::password() const {
  // @@protoc_insertion_point(field_get:MsgBindPhone.password)
  return _internal_password();
}
inline void MsgBindPhone::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgBindPhone.password)
}
inline std::string* MsgBindPhone::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgBindPhone.password)
  return _internal_mutable_password();
}
inline const std::string& MsgBindPhone::_internal_password() const {
  return password_.Get();
}
inline void MsgBindPhone::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgBindPhone::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgBindPhone.password)
}
inline void MsgBindPhone::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgBindPhone.password)
}
inline void MsgBindPhone::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgBindPhone.password)
}
inline std::string* MsgBindPhone::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgBindPhone::release_password() {
  // @@protoc_insertion_point(field_release:MsgBindPhone.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgBindPhone::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgBindPhone.password)
}

// string invite_code = 4;
inline void MsgBindPhone::clear_invite_code() {
  invite_code_.ClearToEmpty();
}
inline const std::string& MsgBindPhone::invite_code() const {
  // @@protoc_insertion_point(field_get:MsgBindPhone.invite_code)
  return _internal_invite_code();
}
inline void MsgBindPhone::set_invite_code(const std::string& value) {
  _internal_set_invite_code(value);
  // @@protoc_insertion_point(field_set:MsgBindPhone.invite_code)
}
inline std::string* MsgBindPhone::mutable_invite_code() {
  // @@protoc_insertion_point(field_mutable:MsgBindPhone.invite_code)
  return _internal_mutable_invite_code();
}
inline const std::string& MsgBindPhone::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void MsgBindPhone::_internal_set_invite_code(const std::string& value) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgBindPhone::set_invite_code(std::string&& value) {
  
  invite_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgBindPhone.invite_code)
}
inline void MsgBindPhone::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgBindPhone.invite_code)
}
inline void MsgBindPhone::set_invite_code(const char* value,
    size_t size) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgBindPhone.invite_code)
}
inline std::string* MsgBindPhone::_internal_mutable_invite_code() {
  
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgBindPhone::release_invite_code() {
  // @@protoc_insertion_point(field_release:MsgBindPhone.invite_code)
  return invite_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgBindPhone::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    
  } else {
    
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgBindPhone.invite_code)
}

// -------------------------------------------------------------------

// MsgCommonKV

// int32 k = 1;
inline void MsgCommonKV::clear_k() {
  k_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCommonKV::_internal_k() const {
  return k_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCommonKV::k() const {
  // @@protoc_insertion_point(field_get:MsgCommonKV.k)
  return _internal_k();
}
inline void MsgCommonKV::_internal_set_k(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  k_ = value;
}
inline void MsgCommonKV::set_k(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_k(value);
  // @@protoc_insertion_point(field_set:MsgCommonKV.k)
}

// int32 v = 2;
inline void MsgCommonKV::clear_v() {
  v_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCommonKV::_internal_v() const {
  return v_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCommonKV::v() const {
  // @@protoc_insertion_point(field_get:MsgCommonKV.v)
  return _internal_v();
}
inline void MsgCommonKV::_internal_set_v(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  v_ = value;
}
inline void MsgCommonKV::set_v(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_v(value);
  // @@protoc_insertion_point(field_set:MsgCommonKV.v)
}

// -------------------------------------------------------------------

// MsgCheckInInfo

// int32 check_days = 1;
inline void MsgCheckInInfo::clear_check_days() {
  check_days_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCheckInInfo::_internal_check_days() const {
  return check_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgCheckInInfo::check_days() const {
  // @@protoc_insertion_point(field_get:MsgCheckInInfo.check_days)
  return _internal_check_days();
}
inline void MsgCheckInInfo::_internal_set_check_days(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  check_days_ = value;
}
inline void MsgCheckInInfo::set_check_days(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_check_days(value);
  // @@protoc_insertion_point(field_set:MsgCheckInInfo.check_days)
}

// bool is_open = 2;
inline void MsgCheckInInfo::clear_is_open() {
  is_open_ = false;
}
inline bool MsgCheckInInfo::_internal_is_open() const {
  return is_open_;
}
inline bool MsgCheckInInfo::is_open() const {
  // @@protoc_insertion_point(field_get:MsgCheckInInfo.is_open)
  return _internal_is_open();
}
inline void MsgCheckInInfo::_internal_set_is_open(bool value) {
  
  is_open_ = value;
}
inline void MsgCheckInInfo::set_is_open(bool value) {
  _internal_set_is_open(value);
  // @@protoc_insertion_point(field_set:MsgCheckInInfo.is_open)
}

// bool can_pick = 3;
inline void MsgCheckInInfo::clear_can_pick() {
  can_pick_ = false;
}
inline bool MsgCheckInInfo::_internal_can_pick() const {
  return can_pick_;
}
inline bool MsgCheckInInfo::can_pick() const {
  // @@protoc_insertion_point(field_get:MsgCheckInInfo.can_pick)
  return _internal_can_pick();
}
inline void MsgCheckInInfo::_internal_set_can_pick(bool value) {
  
  can_pick_ = value;
}
inline void MsgCheckInInfo::set_can_pick(bool value) {
  _internal_set_can_pick(value);
  // @@protoc_insertion_point(field_set:MsgCheckInInfo.can_pick)
}

// repeated .MsgCommonKV CheckInCfg = 4;
inline int MsgCheckInInfo::_internal_checkincfg_size() const {
  return checkincfg_.size();
}
inline int MsgCheckInInfo::checkincfg_size() const {
  return _internal_checkincfg_size();
}
inline void MsgCheckInInfo::clear_checkincfg() {
  checkincfg_.Clear();
}
inline ::MsgCommonKV* MsgCheckInInfo::mutable_checkincfg(int index) {
  // @@protoc_insertion_point(field_mutable:MsgCheckInInfo.CheckInCfg)
  return checkincfg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgCommonKV >*
MsgCheckInInfo::mutable_checkincfg() {
  // @@protoc_insertion_point(field_mutable_list:MsgCheckInInfo.CheckInCfg)
  return &checkincfg_;
}
inline const ::MsgCommonKV& MsgCheckInInfo::_internal_checkincfg(int index) const {
  return checkincfg_.Get(index);
}
inline const ::MsgCommonKV& MsgCheckInInfo::checkincfg(int index) const {
  // @@protoc_insertion_point(field_get:MsgCheckInInfo.CheckInCfg)
  return _internal_checkincfg(index);
}
inline ::MsgCommonKV* MsgCheckInInfo::_internal_add_checkincfg() {
  return checkincfg_.Add();
}
inline ::MsgCommonKV* MsgCheckInInfo::add_checkincfg() {
  // @@protoc_insertion_point(field_add:MsgCheckInInfo.CheckInCfg)
  return _internal_add_checkincfg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgCommonKV >&
MsgCheckInInfo::checkincfg() const {
  // @@protoc_insertion_point(field_list:MsgCheckInInfo.CheckInCfg)
  return checkincfg_;
}

// -------------------------------------------------------------------

// MsgTurntableHistoryData

// int32 user_id = 1;
inline void MsgTurntableHistoryData::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::user_id() const {
  // @@protoc_insertion_point(field_get:MsgTurntableHistoryData.user_id)
  return _internal_user_id();
}
inline void MsgTurntableHistoryData::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgTurntableHistoryData::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgTurntableHistoryData.user_id)
}

// string nick_name = 2;
inline void MsgTurntableHistoryData::clear_nick_name() {
  nick_name_.ClearToEmpty();
}
inline const std::string& MsgTurntableHistoryData::nick_name() const {
  // @@protoc_insertion_point(field_get:MsgTurntableHistoryData.nick_name)
  return _internal_nick_name();
}
inline void MsgTurntableHistoryData::set_nick_name(const std::string& value) {
  _internal_set_nick_name(value);
  // @@protoc_insertion_point(field_set:MsgTurntableHistoryData.nick_name)
}
inline std::string* MsgTurntableHistoryData::mutable_nick_name() {
  // @@protoc_insertion_point(field_mutable:MsgTurntableHistoryData.nick_name)
  return _internal_mutable_nick_name();
}
inline const std::string& MsgTurntableHistoryData::_internal_nick_name() const {
  return nick_name_.Get();
}
inline void MsgTurntableHistoryData::_internal_set_nick_name(const std::string& value) {
  
  nick_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgTurntableHistoryData::set_nick_name(std::string&& value) {
  
  nick_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgTurntableHistoryData.nick_name)
}
inline void MsgTurntableHistoryData::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nick_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgTurntableHistoryData.nick_name)
}
inline void MsgTurntableHistoryData::set_nick_name(const char* value,
    size_t size) {
  
  nick_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgTurntableHistoryData.nick_name)
}
inline std::string* MsgTurntableHistoryData::_internal_mutable_nick_name() {
  
  return nick_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgTurntableHistoryData::release_nick_name() {
  // @@protoc_insertion_point(field_release:MsgTurntableHistoryData.nick_name)
  return nick_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgTurntableHistoryData::set_allocated_nick_name(std::string* nick_name) {
  if (nick_name != nullptr) {
    
  } else {
    
  }
  nick_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nick_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgTurntableHistoryData.nick_name)
}

// int32 score = 3;
inline void MsgTurntableHistoryData::clear_score() {
  score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::score() const {
  // @@protoc_insertion_point(field_get:MsgTurntableHistoryData.score)
  return _internal_score();
}
inline void MsgTurntableHistoryData::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  score_ = value;
}
inline void MsgTurntableHistoryData::set_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:MsgTurntableHistoryData.score)
}

// int32 award = 4;
inline void MsgTurntableHistoryData::clear_award() {
  award_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::_internal_award() const {
  return award_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::award() const {
  // @@protoc_insertion_point(field_get:MsgTurntableHistoryData.award)
  return _internal_award();
}
inline void MsgTurntableHistoryData::_internal_set_award(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  award_ = value;
}
inline void MsgTurntableHistoryData::set_award(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_award(value);
  // @@protoc_insertion_point(field_set:MsgTurntableHistoryData.award)
}

// int32 type = 5;
inline void MsgTurntableHistoryData::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::type() const {
  // @@protoc_insertion_point(field_get:MsgTurntableHistoryData.type)
  return _internal_type();
}
inline void MsgTurntableHistoryData::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgTurntableHistoryData::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgTurntableHistoryData.type)
}

// int32 award_type = 6;
inline void MsgTurntableHistoryData::clear_award_type() {
  award_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::_internal_award_type() const {
  return award_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableHistoryData::award_type() const {
  // @@protoc_insertion_point(field_get:MsgTurntableHistoryData.award_type)
  return _internal_award_type();
}
inline void MsgTurntableHistoryData::_internal_set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  award_type_ = value;
}
inline void MsgTurntableHistoryData::set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_award_type(value);
  // @@protoc_insertion_point(field_set:MsgTurntableHistoryData.award_type)
}

// string time = 7;
inline void MsgTurntableHistoryData::clear_time() {
  time_.ClearToEmpty();
}
inline const std::string& MsgTurntableHistoryData::time() const {
  // @@protoc_insertion_point(field_get:MsgTurntableHistoryData.time)
  return _internal_time();
}
inline void MsgTurntableHistoryData::set_time(const std::string& value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:MsgTurntableHistoryData.time)
}
inline std::string* MsgTurntableHistoryData::mutable_time() {
  // @@protoc_insertion_point(field_mutable:MsgTurntableHistoryData.time)
  return _internal_mutable_time();
}
inline const std::string& MsgTurntableHistoryData::_internal_time() const {
  return time_.Get();
}
inline void MsgTurntableHistoryData::_internal_set_time(const std::string& value) {
  
  time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgTurntableHistoryData::set_time(std::string&& value) {
  
  time_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgTurntableHistoryData.time)
}
inline void MsgTurntableHistoryData::set_time(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgTurntableHistoryData.time)
}
inline void MsgTurntableHistoryData::set_time(const char* value,
    size_t size) {
  
  time_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgTurntableHistoryData.time)
}
inline std::string* MsgTurntableHistoryData::_internal_mutable_time() {
  
  return time_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgTurntableHistoryData::release_time() {
  // @@protoc_insertion_point(field_release:MsgTurntableHistoryData.time)
  return time_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgTurntableHistoryData::set_allocated_time(std::string* time) {
  if (time != nullptr) {
    
  } else {
    
  }
  time_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), time,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgTurntableHistoryData.time)
}

// -------------------------------------------------------------------

// MsgTurnPlayInfo

// int32 play_num = 1;
inline void MsgTurnPlayInfo::clear_play_num() {
  play_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::_internal_play_num() const {
  return play_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::play_num() const {
  // @@protoc_insertion_point(field_get:MsgTurnPlayInfo.play_num)
  return _internal_play_num();
}
inline void MsgTurnPlayInfo::_internal_set_play_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  play_num_ = value;
}
inline void MsgTurnPlayInfo::set_play_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_play_num(value);
  // @@protoc_insertion_point(field_set:MsgTurnPlayInfo.play_num)
}

// int32 limit_turn = 2;
inline void MsgTurnPlayInfo::clear_limit_turn() {
  limit_turn_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::_internal_limit_turn() const {
  return limit_turn_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::limit_turn() const {
  // @@protoc_insertion_point(field_get:MsgTurnPlayInfo.limit_turn)
  return _internal_limit_turn();
}
inline void MsgTurnPlayInfo::_internal_set_limit_turn(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_turn_ = value;
}
inline void MsgTurnPlayInfo::set_limit_turn(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit_turn(value);
  // @@protoc_insertion_point(field_set:MsgTurnPlayInfo.limit_turn)
}

// int32 need_score = 3;
inline void MsgTurnPlayInfo::clear_need_score() {
  need_score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::_internal_need_score() const {
  return need_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::need_score() const {
  // @@protoc_insertion_point(field_get:MsgTurnPlayInfo.need_score)
  return _internal_need_score();
}
inline void MsgTurnPlayInfo::_internal_set_need_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  need_score_ = value;
}
inline void MsgTurnPlayInfo::set_need_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_need_score(value);
  // @@protoc_insertion_point(field_set:MsgTurnPlayInfo.need_score)
}

// int32 turn_pro = 4;
inline void MsgTurnPlayInfo::clear_turn_pro() {
  turn_pro_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::_internal_turn_pro() const {
  return turn_pro_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::turn_pro() const {
  // @@protoc_insertion_point(field_get:MsgTurnPlayInfo.turn_pro)
  return _internal_turn_pro();
}
inline void MsgTurnPlayInfo::_internal_set_turn_pro(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  turn_pro_ = value;
}
inline void MsgTurnPlayInfo::set_turn_pro(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_turn_pro(value);
  // @@protoc_insertion_point(field_set:MsgTurnPlayInfo.turn_pro)
}

// int32 turn_max_pro = 5;
inline void MsgTurnPlayInfo::clear_turn_max_pro() {
  turn_max_pro_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::_internal_turn_max_pro() const {
  return turn_max_pro_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnPlayInfo::turn_max_pro() const {
  // @@protoc_insertion_point(field_get:MsgTurnPlayInfo.turn_max_pro)
  return _internal_turn_max_pro();
}
inline void MsgTurnPlayInfo::_internal_set_turn_max_pro(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  turn_max_pro_ = value;
}
inline void MsgTurnPlayInfo::set_turn_max_pro(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_turn_max_pro(value);
  // @@protoc_insertion_point(field_set:MsgTurnPlayInfo.turn_max_pro)
}

// -------------------------------------------------------------------

// MsgTurnCfg

// int32 index = 1;
inline void MsgTurnCfg::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::index() const {
  // @@protoc_insertion_point(field_get:MsgTurnCfg.index)
  return _internal_index();
}
inline void MsgTurnCfg::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void MsgTurnCfg::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:MsgTurnCfg.index)
}

// int32 arwad = 2;
inline void MsgTurnCfg::clear_arwad() {
  arwad_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::_internal_arwad() const {
  return arwad_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::arwad() const {
  // @@protoc_insertion_point(field_get:MsgTurnCfg.arwad)
  return _internal_arwad();
}
inline void MsgTurnCfg::_internal_set_arwad(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  arwad_ = value;
}
inline void MsgTurnCfg::set_arwad(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_arwad(value);
  // @@protoc_insertion_point(field_set:MsgTurnCfg.arwad)
}

// int32 arwad_type = 3;
inline void MsgTurnCfg::clear_arwad_type() {
  arwad_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::_internal_arwad_type() const {
  return arwad_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::arwad_type() const {
  // @@protoc_insertion_point(field_get:MsgTurnCfg.arwad_type)
  return _internal_arwad_type();
}
inline void MsgTurnCfg::_internal_set_arwad_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  arwad_type_ = value;
}
inline void MsgTurnCfg::set_arwad_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_arwad_type(value);
  // @@protoc_insertion_point(field_set:MsgTurnCfg.arwad_type)
}

// int32 type = 4;
inline void MsgTurnCfg::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurnCfg::type() const {
  // @@protoc_insertion_point(field_get:MsgTurnCfg.type)
  return _internal_type();
}
inline void MsgTurnCfg::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void MsgTurnCfg::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:MsgTurnCfg.type)
}

// -------------------------------------------------------------------

// MsgTurntableData

// int64 score = 1;
inline void MsgTurntableData::clear_score() {
  score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableData::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableData::score() const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.score)
  return _internal_score();
}
inline void MsgTurntableData::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  score_ = value;
}
inline void MsgTurntableData::set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:MsgTurntableData.score)
}

// int32 gold_to_score = 3;
inline void MsgTurntableData::clear_gold_to_score() {
  gold_to_score_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableData::_internal_gold_to_score() const {
  return gold_to_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableData::gold_to_score() const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.gold_to_score)
  return _internal_gold_to_score();
}
inline void MsgTurntableData::_internal_set_gold_to_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gold_to_score_ = value;
}
inline void MsgTurntableData::set_gold_to_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gold_to_score(value);
  // @@protoc_insertion_point(field_set:MsgTurntableData.gold_to_score)
}

// .MsgTurnPlayInfo silver_info = 4;
inline bool MsgTurntableData::_internal_has_silver_info() const {
  return this != internal_default_instance() && silver_info_ != nullptr;
}
inline bool MsgTurntableData::has_silver_info() const {
  return _internal_has_silver_info();
}
inline void MsgTurntableData::clear_silver_info() {
  if (GetArena() == nullptr && silver_info_ != nullptr) {
    delete silver_info_;
  }
  silver_info_ = nullptr;
}
inline const ::MsgTurnPlayInfo& MsgTurntableData::_internal_silver_info() const {
  const ::MsgTurnPlayInfo* p = silver_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::MsgTurnPlayInfo&>(
      ::_MsgTurnPlayInfo_default_instance_);
}
inline const ::MsgTurnPlayInfo& MsgTurntableData::silver_info() const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.silver_info)
  return _internal_silver_info();
}
inline void MsgTurntableData::unsafe_arena_set_allocated_silver_info(
    ::MsgTurnPlayInfo* silver_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(silver_info_);
  }
  silver_info_ = silver_info;
  if (silver_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MsgTurntableData.silver_info)
}
inline ::MsgTurnPlayInfo* MsgTurntableData::release_silver_info() {
  
  ::MsgTurnPlayInfo* temp = silver_info_;
  silver_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MsgTurnPlayInfo* MsgTurntableData::unsafe_arena_release_silver_info() {
  // @@protoc_insertion_point(field_release:MsgTurntableData.silver_info)
  
  ::MsgTurnPlayInfo* temp = silver_info_;
  silver_info_ = nullptr;
  return temp;
}
inline ::MsgTurnPlayInfo* MsgTurntableData::_internal_mutable_silver_info() {
  
  if (silver_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::MsgTurnPlayInfo>(GetArena());
    silver_info_ = p;
  }
  return silver_info_;
}
inline ::MsgTurnPlayInfo* MsgTurntableData::mutable_silver_info() {
  // @@protoc_insertion_point(field_mutable:MsgTurntableData.silver_info)
  return _internal_mutable_silver_info();
}
inline void MsgTurntableData::set_allocated_silver_info(::MsgTurnPlayInfo* silver_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete silver_info_;
  }
  if (silver_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(silver_info);
    if (message_arena != submessage_arena) {
      silver_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, silver_info, submessage_arena);
    }
    
  } else {
    
  }
  silver_info_ = silver_info;
  // @@protoc_insertion_point(field_set_allocated:MsgTurntableData.silver_info)
}

// .MsgTurnPlayInfo gold_info = 5;
inline bool MsgTurntableData::_internal_has_gold_info() const {
  return this != internal_default_instance() && gold_info_ != nullptr;
}
inline bool MsgTurntableData::has_gold_info() const {
  return _internal_has_gold_info();
}
inline void MsgTurntableData::clear_gold_info() {
  if (GetArena() == nullptr && gold_info_ != nullptr) {
    delete gold_info_;
  }
  gold_info_ = nullptr;
}
inline const ::MsgTurnPlayInfo& MsgTurntableData::_internal_gold_info() const {
  const ::MsgTurnPlayInfo* p = gold_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::MsgTurnPlayInfo&>(
      ::_MsgTurnPlayInfo_default_instance_);
}
inline const ::MsgTurnPlayInfo& MsgTurntableData::gold_info() const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.gold_info)
  return _internal_gold_info();
}
inline void MsgTurntableData::unsafe_arena_set_allocated_gold_info(
    ::MsgTurnPlayInfo* gold_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gold_info_);
  }
  gold_info_ = gold_info;
  if (gold_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MsgTurntableData.gold_info)
}
inline ::MsgTurnPlayInfo* MsgTurntableData::release_gold_info() {
  
  ::MsgTurnPlayInfo* temp = gold_info_;
  gold_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::MsgTurnPlayInfo* MsgTurntableData::unsafe_arena_release_gold_info() {
  // @@protoc_insertion_point(field_release:MsgTurntableData.gold_info)
  
  ::MsgTurnPlayInfo* temp = gold_info_;
  gold_info_ = nullptr;
  return temp;
}
inline ::MsgTurnPlayInfo* MsgTurntableData::_internal_mutable_gold_info() {
  
  if (gold_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::MsgTurnPlayInfo>(GetArena());
    gold_info_ = p;
  }
  return gold_info_;
}
inline ::MsgTurnPlayInfo* MsgTurntableData::mutable_gold_info() {
  // @@protoc_insertion_point(field_mutable:MsgTurntableData.gold_info)
  return _internal_mutable_gold_info();
}
inline void MsgTurntableData::set_allocated_gold_info(::MsgTurnPlayInfo* gold_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete gold_info_;
  }
  if (gold_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gold_info);
    if (message_arena != submessage_arena) {
      gold_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gold_info, submessage_arena);
    }
    
  } else {
    
  }
  gold_info_ = gold_info;
  // @@protoc_insertion_point(field_set_allocated:MsgTurntableData.gold_info)
}

// repeated .MsgTurnCfg silver_cfg = 6;
inline int MsgTurntableData::_internal_silver_cfg_size() const {
  return silver_cfg_.size();
}
inline int MsgTurntableData::silver_cfg_size() const {
  return _internal_silver_cfg_size();
}
inline void MsgTurntableData::clear_silver_cfg() {
  silver_cfg_.Clear();
}
inline ::MsgTurnCfg* MsgTurntableData::mutable_silver_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:MsgTurntableData.silver_cfg)
  return silver_cfg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >*
MsgTurntableData::mutable_silver_cfg() {
  // @@protoc_insertion_point(field_mutable_list:MsgTurntableData.silver_cfg)
  return &silver_cfg_;
}
inline const ::MsgTurnCfg& MsgTurntableData::_internal_silver_cfg(int index) const {
  return silver_cfg_.Get(index);
}
inline const ::MsgTurnCfg& MsgTurntableData::silver_cfg(int index) const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.silver_cfg)
  return _internal_silver_cfg(index);
}
inline ::MsgTurnCfg* MsgTurntableData::_internal_add_silver_cfg() {
  return silver_cfg_.Add();
}
inline ::MsgTurnCfg* MsgTurntableData::add_silver_cfg() {
  // @@protoc_insertion_point(field_add:MsgTurntableData.silver_cfg)
  return _internal_add_silver_cfg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >&
MsgTurntableData::silver_cfg() const {
  // @@protoc_insertion_point(field_list:MsgTurntableData.silver_cfg)
  return silver_cfg_;
}

// repeated .MsgTurnCfg gold_cfg = 7;
inline int MsgTurntableData::_internal_gold_cfg_size() const {
  return gold_cfg_.size();
}
inline int MsgTurntableData::gold_cfg_size() const {
  return _internal_gold_cfg_size();
}
inline void MsgTurntableData::clear_gold_cfg() {
  gold_cfg_.Clear();
}
inline ::MsgTurnCfg* MsgTurntableData::mutable_gold_cfg(int index) {
  // @@protoc_insertion_point(field_mutable:MsgTurntableData.gold_cfg)
  return gold_cfg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >*
MsgTurntableData::mutable_gold_cfg() {
  // @@protoc_insertion_point(field_mutable_list:MsgTurntableData.gold_cfg)
  return &gold_cfg_;
}
inline const ::MsgTurnCfg& MsgTurntableData::_internal_gold_cfg(int index) const {
  return gold_cfg_.Get(index);
}
inline const ::MsgTurnCfg& MsgTurntableData::gold_cfg(int index) const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.gold_cfg)
  return _internal_gold_cfg(index);
}
inline ::MsgTurnCfg* MsgTurntableData::_internal_add_gold_cfg() {
  return gold_cfg_.Add();
}
inline ::MsgTurnCfg* MsgTurntableData::add_gold_cfg() {
  // @@protoc_insertion_point(field_add:MsgTurntableData.gold_cfg)
  return _internal_add_gold_cfg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurnCfg >&
MsgTurntableData::gold_cfg() const {
  // @@protoc_insertion_point(field_list:MsgTurntableData.gold_cfg)
  return gold_cfg_;
}

// repeated .MsgTurntableHistoryData this_history = 8;
inline int MsgTurntableData::_internal_this_history_size() const {
  return this_history_.size();
}
inline int MsgTurntableData::this_history_size() const {
  return _internal_this_history_size();
}
inline void MsgTurntableData::clear_this_history() {
  this_history_.Clear();
}
inline ::MsgTurntableHistoryData* MsgTurntableData::mutable_this_history(int index) {
  // @@protoc_insertion_point(field_mutable:MsgTurntableData.this_history)
  return this_history_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >*
MsgTurntableData::mutable_this_history() {
  // @@protoc_insertion_point(field_mutable_list:MsgTurntableData.this_history)
  return &this_history_;
}
inline const ::MsgTurntableHistoryData& MsgTurntableData::_internal_this_history(int index) const {
  return this_history_.Get(index);
}
inline const ::MsgTurntableHistoryData& MsgTurntableData::this_history(int index) const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.this_history)
  return _internal_this_history(index);
}
inline ::MsgTurntableHistoryData* MsgTurntableData::_internal_add_this_history() {
  return this_history_.Add();
}
inline ::MsgTurntableHistoryData* MsgTurntableData::add_this_history() {
  // @@protoc_insertion_point(field_add:MsgTurntableData.this_history)
  return _internal_add_this_history();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >&
MsgTurntableData::this_history() const {
  // @@protoc_insertion_point(field_list:MsgTurntableData.this_history)
  return this_history_;
}

// repeated .MsgTurntableHistoryData big_history = 9;
inline int MsgTurntableData::_internal_big_history_size() const {
  return big_history_.size();
}
inline int MsgTurntableData::big_history_size() const {
  return _internal_big_history_size();
}
inline void MsgTurntableData::clear_big_history() {
  big_history_.Clear();
}
inline ::MsgTurntableHistoryData* MsgTurntableData::mutable_big_history(int index) {
  // @@protoc_insertion_point(field_mutable:MsgTurntableData.big_history)
  return big_history_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >*
MsgTurntableData::mutable_big_history() {
  // @@protoc_insertion_point(field_mutable_list:MsgTurntableData.big_history)
  return &big_history_;
}
inline const ::MsgTurntableHistoryData& MsgTurntableData::_internal_big_history(int index) const {
  return big_history_.Get(index);
}
inline const ::MsgTurntableHistoryData& MsgTurntableData::big_history(int index) const {
  // @@protoc_insertion_point(field_get:MsgTurntableData.big_history)
  return _internal_big_history(index);
}
inline ::MsgTurntableHistoryData* MsgTurntableData::_internal_add_big_history() {
  return big_history_.Add();
}
inline ::MsgTurntableHistoryData* MsgTurntableData::add_big_history() {
  // @@protoc_insertion_point(field_add:MsgTurntableData.big_history)
  return _internal_add_big_history();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTurntableHistoryData >&
MsgTurntableData::big_history() const {
  // @@protoc_insertion_point(field_list:MsgTurntableData.big_history)
  return big_history_;
}

// -------------------------------------------------------------------

// MsgTurntable

// int32 user_id = 1;
inline void MsgTurntable::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntable::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntable::user_id() const {
  // @@protoc_insertion_point(field_get:MsgTurntable.user_id)
  return _internal_user_id();
}
inline void MsgTurntable::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgTurntable::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgTurntable.user_id)
}

// int64 turn_type = 2;
inline void MsgTurntable::clear_turn_type() {
  turn_type_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntable::_internal_turn_type() const {
  return turn_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntable::turn_type() const {
  // @@protoc_insertion_point(field_get:MsgTurntable.turn_type)
  return _internal_turn_type();
}
inline void MsgTurntable::_internal_set_turn_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  turn_type_ = value;
}
inline void MsgTurntable::set_turn_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_turn_type(value);
  // @@protoc_insertion_point(field_set:MsgTurntable.turn_type)
}

// -------------------------------------------------------------------

// MsgTurntableResp

// int64 score = 1;
inline void MsgTurntableResp::clear_score() {
  score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::_internal_score() const {
  return score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::score() const {
  // @@protoc_insertion_point(field_get:MsgTurntableResp.score)
  return _internal_score();
}
inline void MsgTurntableResp::_internal_set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  score_ = value;
}
inline void MsgTurntableResp::set_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:MsgTurntableResp.score)
}

// int32 award_type = 2;
inline void MsgTurntableResp::clear_award_type() {
  award_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableResp::_internal_award_type() const {
  return award_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTurntableResp::award_type() const {
  // @@protoc_insertion_point(field_get:MsgTurntableResp.award_type)
  return _internal_award_type();
}
inline void MsgTurntableResp::_internal_set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  award_type_ = value;
}
inline void MsgTurntableResp::set_award_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_award_type(value);
  // @@protoc_insertion_point(field_set:MsgTurntableResp.award_type)
}

// int64 new_value = 3;
inline void MsgTurntableResp::clear_new_value() {
  new_value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::_internal_new_value() const {
  return new_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::new_value() const {
  // @@protoc_insertion_point(field_get:MsgTurntableResp.new_value)
  return _internal_new_value();
}
inline void MsgTurntableResp::_internal_set_new_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  new_value_ = value;
}
inline void MsgTurntableResp::set_new_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_new_value(value);
  // @@protoc_insertion_point(field_set:MsgTurntableResp.new_value)
}

// int64 turnIndex = 4;
inline void MsgTurntableResp::clear_turnindex() {
  turnindex_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::_internal_turnindex() const {
  return turnindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::turnindex() const {
  // @@protoc_insertion_point(field_get:MsgTurntableResp.turnIndex)
  return _internal_turnindex();
}
inline void MsgTurntableResp::_internal_set_turnindex(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  turnindex_ = value;
}
inline void MsgTurntableResp::set_turnindex(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_turnindex(value);
  // @@protoc_insertion_point(field_set:MsgTurntableResp.turnIndex)
}

// int64 get_value = 5;
inline void MsgTurntableResp::clear_get_value() {
  get_value_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::_internal_get_value() const {
  return get_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTurntableResp::get_value() const {
  // @@protoc_insertion_point(field_get:MsgTurntableResp.get_value)
  return _internal_get_value();
}
inline void MsgTurntableResp::_internal_set_get_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  get_value_ = value;
}
inline void MsgTurntableResp::set_get_value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_get_value(value);
  // @@protoc_insertion_point(field_set:MsgTurntableResp.get_value)
}

// -------------------------------------------------------------------

// MsgMailsInfo

// repeated .MsgMailData mails = 1;
inline int MsgMailsInfo::_internal_mails_size() const {
  return mails_.size();
}
inline int MsgMailsInfo::mails_size() const {
  return _internal_mails_size();
}
inline void MsgMailsInfo::clear_mails() {
  mails_.Clear();
}
inline ::MsgMailData* MsgMailsInfo::mutable_mails(int index) {
  // @@protoc_insertion_point(field_mutable:MsgMailsInfo.mails)
  return mails_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgMailData >*
MsgMailsInfo::mutable_mails() {
  // @@protoc_insertion_point(field_mutable_list:MsgMailsInfo.mails)
  return &mails_;
}
inline const ::MsgMailData& MsgMailsInfo::_internal_mails(int index) const {
  return mails_.Get(index);
}
inline const ::MsgMailData& MsgMailsInfo::mails(int index) const {
  // @@protoc_insertion_point(field_get:MsgMailsInfo.mails)
  return _internal_mails(index);
}
inline ::MsgMailData* MsgMailsInfo::_internal_add_mails() {
  return mails_.Add();
}
inline ::MsgMailData* MsgMailsInfo::add_mails() {
  // @@protoc_insertion_point(field_add:MsgMailsInfo.mails)
  return _internal_add_mails();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgMailData >&
MsgMailsInfo::mails() const {
  // @@protoc_insertion_point(field_list:MsgMailsInfo.mails)
  return mails_;
}

// -------------------------------------------------------------------

// MsgMailData

// int32 mail_id = 1;
inline void MsgMailData::clear_mail_id() {
  mail_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::_internal_mail_id() const {
  return mail_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::mail_id() const {
  // @@protoc_insertion_point(field_get:MsgMailData.mail_id)
  return _internal_mail_id();
}
inline void MsgMailData::_internal_set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  mail_id_ = value;
}
inline void MsgMailData::set_mail_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mail_id(value);
  // @@protoc_insertion_point(field_set:MsgMailData.mail_id)
}

// int32 send_user_id = 2;
inline void MsgMailData::clear_send_user_id() {
  send_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::_internal_send_user_id() const {
  return send_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::send_user_id() const {
  // @@protoc_insertion_point(field_get:MsgMailData.send_user_id)
  return _internal_send_user_id();
}
inline void MsgMailData::_internal_set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  send_user_id_ = value;
}
inline void MsgMailData::set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_send_user_id(value);
  // @@protoc_insertion_point(field_set:MsgMailData.send_user_id)
}

// int32 send_time = 3;
inline void MsgMailData::clear_send_time() {
  send_time_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::_internal_send_time() const {
  return send_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::send_time() const {
  // @@protoc_insertion_point(field_get:MsgMailData.send_time)
  return _internal_send_time();
}
inline void MsgMailData::_internal_set_send_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  send_time_ = value;
}
inline void MsgMailData::set_send_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_send_time(value);
  // @@protoc_insertion_point(field_set:MsgMailData.send_time)
}

// string title = 4;
inline void MsgMailData::clear_title() {
  title_.ClearToEmpty();
}
inline const std::string& MsgMailData::title() const {
  // @@protoc_insertion_point(field_get:MsgMailData.title)
  return _internal_title();
}
inline void MsgMailData::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:MsgMailData.title)
}
inline std::string* MsgMailData::mutable_title() {
  // @@protoc_insertion_point(field_mutable:MsgMailData.title)
  return _internal_mutable_title();
}
inline const std::string& MsgMailData::_internal_title() const {
  return title_.Get();
}
inline void MsgMailData::_internal_set_title(const std::string& value) {
  
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgMailData::set_title(std::string&& value) {
  
  title_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgMailData.title)
}
inline void MsgMailData::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgMailData.title)
}
inline void MsgMailData::set_title(const char* value,
    size_t size) {
  
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgMailData.title)
}
inline std::string* MsgMailData::_internal_mutable_title() {
  
  return title_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgMailData::release_title() {
  // @@protoc_insertion_point(field_release:MsgMailData.title)
  return title_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgMailData::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgMailData.title)
}

// string content = 5;
inline void MsgMailData::clear_content() {
  content_.ClearToEmpty();
}
inline const std::string& MsgMailData::content() const {
  // @@protoc_insertion_point(field_get:MsgMailData.content)
  return _internal_content();
}
inline void MsgMailData::set_content(const std::string& value) {
  _internal_set_content(value);
  // @@protoc_insertion_point(field_set:MsgMailData.content)
}
inline std::string* MsgMailData::mutable_content() {
  // @@protoc_insertion_point(field_mutable:MsgMailData.content)
  return _internal_mutable_content();
}
inline const std::string& MsgMailData::_internal_content() const {
  return content_.Get();
}
inline void MsgMailData::_internal_set_content(const std::string& value) {
  
  content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgMailData::set_content(std::string&& value) {
  
  content_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgMailData.content)
}
inline void MsgMailData::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgMailData.content)
}
inline void MsgMailData::set_content(const char* value,
    size_t size) {
  
  content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgMailData.content)
}
inline std::string* MsgMailData::_internal_mutable_content() {
  
  return content_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgMailData::release_content() {
  // @@protoc_insertion_point(field_release:MsgMailData.content)
  return content_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgMailData::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgMailData.content)
}

// int64 gold = 6;
inline void MsgMailData::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgMailData::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgMailData::gold() const {
  // @@protoc_insertion_point(field_get:MsgMailData.gold)
  return _internal_gold();
}
inline void MsgMailData::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void MsgMailData::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:MsgMailData.gold)
}

// bool is_read = 7;
inline void MsgMailData::clear_is_read() {
  is_read_ = false;
}
inline bool MsgMailData::_internal_is_read() const {
  return is_read_;
}
inline bool MsgMailData::is_read() const {
  // @@protoc_insertion_point(field_get:MsgMailData.is_read)
  return _internal_is_read();
}
inline void MsgMailData::_internal_set_is_read(bool value) {
  
  is_read_ = value;
}
inline void MsgMailData::set_is_read(bool value) {
  _internal_set_is_read(value);
  // @@protoc_insertion_point(field_set:MsgMailData.is_read)
}

// bool is_claim = 8;
inline void MsgMailData::clear_is_claim() {
  is_claim_ = false;
}
inline bool MsgMailData::_internal_is_claim() const {
  return is_claim_;
}
inline bool MsgMailData::is_claim() const {
  // @@protoc_insertion_point(field_get:MsgMailData.is_claim)
  return _internal_is_claim();
}
inline void MsgMailData::_internal_set_is_claim(bool value) {
  
  is_claim_ = value;
}
inline void MsgMailData::set_is_claim(bool value) {
  _internal_set_is_claim(value);
  // @@protoc_insertion_point(field_set:MsgMailData.is_claim)
}

// int32 to_user_id = 9;
inline void MsgMailData::clear_to_user_id() {
  to_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::_internal_to_user_id() const {
  return to_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgMailData::to_user_id() const {
  // @@protoc_insertion_point(field_get:MsgMailData.to_user_id)
  return _internal_to_user_id();
}
inline void MsgMailData::_internal_set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  to_user_id_ = value;
}
inline void MsgMailData::set_to_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_to_user_id(value);
  // @@protoc_insertion_point(field_set:MsgMailData.to_user_id)
}

// -------------------------------------------------------------------

// MsgShareData

// string invite_code = 1;
inline void MsgShareData::clear_invite_code() {
  invite_code_.ClearToEmpty();
}
inline const std::string& MsgShareData::invite_code() const {
  // @@protoc_insertion_point(field_get:MsgShareData.invite_code)
  return _internal_invite_code();
}
inline void MsgShareData::set_invite_code(const std::string& value) {
  _internal_set_invite_code(value);
  // @@protoc_insertion_point(field_set:MsgShareData.invite_code)
}
inline std::string* MsgShareData::mutable_invite_code() {
  // @@protoc_insertion_point(field_mutable:MsgShareData.invite_code)
  return _internal_mutable_invite_code();
}
inline const std::string& MsgShareData::_internal_invite_code() const {
  return invite_code_.Get();
}
inline void MsgShareData::_internal_set_invite_code(const std::string& value) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgShareData::set_invite_code(std::string&& value) {
  
  invite_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgShareData.invite_code)
}
inline void MsgShareData::set_invite_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgShareData.invite_code)
}
inline void MsgShareData::set_invite_code(const char* value,
    size_t size) {
  
  invite_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgShareData.invite_code)
}
inline std::string* MsgShareData::_internal_mutable_invite_code() {
  
  return invite_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgShareData::release_invite_code() {
  // @@protoc_insertion_point(field_release:MsgShareData.invite_code)
  return invite_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgShareData::set_allocated_invite_code(std::string* invite_code) {
  if (invite_code != nullptr) {
    
  } else {
    
  }
  invite_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invite_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgShareData.invite_code)
}

// repeated int32 bind_list = 2;
inline int MsgShareData::_internal_bind_list_size() const {
  return bind_list_.size();
}
inline int MsgShareData::bind_list_size() const {
  return _internal_bind_list_size();
}
inline void MsgShareData::clear_bind_list() {
  bind_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgShareData::_internal_bind_list(int index) const {
  return bind_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgShareData::bind_list(int index) const {
  // @@protoc_insertion_point(field_get:MsgShareData.bind_list)
  return _internal_bind_list(index);
}
inline void MsgShareData::set_bind_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  bind_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgShareData.bind_list)
}
inline void MsgShareData::_internal_add_bind_list(::PROTOBUF_NAMESPACE_ID::int32 value) {
  bind_list_.Add(value);
}
inline void MsgShareData::add_bind_list(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_bind_list(value);
  // @@protoc_insertion_point(field_add:MsgShareData.bind_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgShareData::_internal_bind_list() const {
  return bind_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgShareData::bind_list() const {
  // @@protoc_insertion_point(field_list:MsgShareData.bind_list)
  return _internal_bind_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgShareData::_internal_mutable_bind_list() {
  return &bind_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgShareData::mutable_bind_list() {
  // @@protoc_insertion_point(field_mutable_list:MsgShareData.bind_list)
  return _internal_mutable_bind_list();
}

// -------------------------------------------------------------------

// MsgBindParentData

// string strCode = 1;
inline void MsgBindParentData::clear_strcode() {
  strcode_.ClearToEmpty();
}
inline const std::string& MsgBindParentData::strcode() const {
  // @@protoc_insertion_point(field_get:MsgBindParentData.strCode)
  return _internal_strcode();
}
inline void MsgBindParentData::set_strcode(const std::string& value) {
  _internal_set_strcode(value);
  // @@protoc_insertion_point(field_set:MsgBindParentData.strCode)
}
inline std::string* MsgBindParentData::mutable_strcode() {
  // @@protoc_insertion_point(field_mutable:MsgBindParentData.strCode)
  return _internal_mutable_strcode();
}
inline const std::string& MsgBindParentData::_internal_strcode() const {
  return strcode_.Get();
}
inline void MsgBindParentData::_internal_set_strcode(const std::string& value) {
  
  strcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgBindParentData::set_strcode(std::string&& value) {
  
  strcode_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgBindParentData.strCode)
}
inline void MsgBindParentData::set_strcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  strcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgBindParentData.strCode)
}
inline void MsgBindParentData::set_strcode(const char* value,
    size_t size) {
  
  strcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgBindParentData.strCode)
}
inline std::string* MsgBindParentData::_internal_mutable_strcode() {
  
  return strcode_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgBindParentData::release_strcode() {
  // @@protoc_insertion_point(field_release:MsgBindParentData.strCode)
  return strcode_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgBindParentData::set_allocated_strcode(std::string* strcode) {
  if (strcode != nullptr) {
    
  } else {
    
  }
  strcode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), strcode,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgBindParentData.strCode)
}

// -------------------------------------------------------------------

// MsgInviteAwardInfo

// int32 inviteNum = 1;
inline void MsgInviteAwardInfo::clear_invitenum() {
  invitenum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardInfo::_internal_invitenum() const {
  return invitenum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardInfo::invitenum() const {
  // @@protoc_insertion_point(field_get:MsgInviteAwardInfo.inviteNum)
  return _internal_invitenum();
}
inline void MsgInviteAwardInfo::_internal_set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  invitenum_ = value;
}
inline void MsgInviteAwardInfo::set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_invitenum(value);
  // @@protoc_insertion_point(field_set:MsgInviteAwardInfo.inviteNum)
}

// int32 pickIndex = 2;
inline void MsgInviteAwardInfo::clear_pickindex() {
  pickindex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardInfo::_internal_pickindex() const {
  return pickindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardInfo::pickindex() const {
  // @@protoc_insertion_point(field_get:MsgInviteAwardInfo.pickIndex)
  return _internal_pickindex();
}
inline void MsgInviteAwardInfo::_internal_set_pickindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pickindex_ = value;
}
inline void MsgInviteAwardInfo::set_pickindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pickindex(value);
  // @@protoc_insertion_point(field_set:MsgInviteAwardInfo.pickIndex)
}

// repeated .MsgInviteAwardConfig awardCfg = 3;
inline int MsgInviteAwardInfo::_internal_awardcfg_size() const {
  return awardcfg_.size();
}
inline int MsgInviteAwardInfo::awardcfg_size() const {
  return _internal_awardcfg_size();
}
inline void MsgInviteAwardInfo::clear_awardcfg() {
  awardcfg_.Clear();
}
inline ::MsgInviteAwardConfig* MsgInviteAwardInfo::mutable_awardcfg(int index) {
  // @@protoc_insertion_point(field_mutable:MsgInviteAwardInfo.awardCfg)
  return awardcfg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgInviteAwardConfig >*
MsgInviteAwardInfo::mutable_awardcfg() {
  // @@protoc_insertion_point(field_mutable_list:MsgInviteAwardInfo.awardCfg)
  return &awardcfg_;
}
inline const ::MsgInviteAwardConfig& MsgInviteAwardInfo::_internal_awardcfg(int index) const {
  return awardcfg_.Get(index);
}
inline const ::MsgInviteAwardConfig& MsgInviteAwardInfo::awardcfg(int index) const {
  // @@protoc_insertion_point(field_get:MsgInviteAwardInfo.awardCfg)
  return _internal_awardcfg(index);
}
inline ::MsgInviteAwardConfig* MsgInviteAwardInfo::_internal_add_awardcfg() {
  return awardcfg_.Add();
}
inline ::MsgInviteAwardConfig* MsgInviteAwardInfo::add_awardcfg() {
  // @@protoc_insertion_point(field_add:MsgInviteAwardInfo.awardCfg)
  return _internal_add_awardcfg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgInviteAwardConfig >&
MsgInviteAwardInfo::awardcfg() const {
  // @@protoc_insertion_point(field_list:MsgInviteAwardInfo.awardCfg)
  return awardcfg_;
}

// -------------------------------------------------------------------

// MsgInviteAwardConfig

// int32 inviteNum = 1;
inline void MsgInviteAwardConfig::clear_invitenum() {
  invitenum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardConfig::_internal_invitenum() const {
  return invitenum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardConfig::invitenum() const {
  // @@protoc_insertion_point(field_get:MsgInviteAwardConfig.inviteNum)
  return _internal_invitenum();
}
inline void MsgInviteAwardConfig::_internal_set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  invitenum_ = value;
}
inline void MsgInviteAwardConfig::set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_invitenum(value);
  // @@protoc_insertion_point(field_set:MsgInviteAwardConfig.inviteNum)
}

// int32 award = 2;
inline void MsgInviteAwardConfig::clear_award() {
  award_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardConfig::_internal_award() const {
  return award_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgInviteAwardConfig::award() const {
  // @@protoc_insertion_point(field_get:MsgInviteAwardConfig.award)
  return _internal_award();
}
inline void MsgInviteAwardConfig::_internal_set_award(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  award_ = value;
}
inline void MsgInviteAwardConfig::set_award(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_award(value);
  // @@protoc_insertion_point(field_set:MsgInviteAwardConfig.award)
}

// -------------------------------------------------------------------

// MsgRechargeInfo

// int32 inviteNum = 1;
inline void MsgRechargeInfo::clear_invitenum() {
  invitenum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRechargeInfo::_internal_invitenum() const {
  return invitenum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgRechargeInfo::invitenum() const {
  // @@protoc_insertion_point(field_get:MsgRechargeInfo.inviteNum)
  return _internal_invitenum();
}
inline void MsgRechargeInfo::_internal_set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  invitenum_ = value;
}
inline void MsgRechargeInfo::set_invitenum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_invitenum(value);
  // @@protoc_insertion_point(field_set:MsgRechargeInfo.inviteNum)
}

// int64 todayAward = 2;
inline void MsgRechargeInfo::clear_todayaward() {
  todayaward_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRechargeInfo::_internal_todayaward() const {
  return todayaward_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRechargeInfo::todayaward() const {
  // @@protoc_insertion_point(field_get:MsgRechargeInfo.todayAward)
  return _internal_todayaward();
}
inline void MsgRechargeInfo::_internal_set_todayaward(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  todayaward_ = value;
}
inline void MsgRechargeInfo::set_todayaward(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_todayaward(value);
  // @@protoc_insertion_point(field_set:MsgRechargeInfo.todayAward)
}

// int64 totalAward = 3;
inline void MsgRechargeInfo::clear_totalaward() {
  totalaward_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRechargeInfo::_internal_totalaward() const {
  return totalaward_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRechargeInfo::totalaward() const {
  // @@protoc_insertion_point(field_get:MsgRechargeInfo.totalAward)
  return _internal_totalaward();
}
inline void MsgRechargeInfo::_internal_set_totalaward(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  totalaward_ = value;
}
inline void MsgRechargeInfo::set_totalaward(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_totalaward(value);
  // @@protoc_insertion_point(field_set:MsgRechargeInfo.totalAward)
}

// int64 canPickAmount = 4;
inline void MsgRechargeInfo::clear_canpickamount() {
  canpickamount_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRechargeInfo::_internal_canpickamount() const {
  return canpickamount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgRechargeInfo::canpickamount() const {
  // @@protoc_insertion_point(field_get:MsgRechargeInfo.canPickAmount)
  return _internal_canpickamount();
}
inline void MsgRechargeInfo::_internal_set_canpickamount(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  canpickamount_ = value;
}
inline void MsgRechargeInfo::set_canpickamount(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_canpickamount(value);
  // @@protoc_insertion_point(field_set:MsgRechargeInfo.canPickAmount)
}

// string inviteCode = 5;
inline void MsgRechargeInfo::clear_invitecode() {
  invitecode_.ClearToEmpty();
}
inline const std::string& MsgRechargeInfo::invitecode() const {
  // @@protoc_insertion_point(field_get:MsgRechargeInfo.inviteCode)
  return _internal_invitecode();
}
inline void MsgRechargeInfo::set_invitecode(const std::string& value) {
  _internal_set_invitecode(value);
  // @@protoc_insertion_point(field_set:MsgRechargeInfo.inviteCode)
}
inline std::string* MsgRechargeInfo::mutable_invitecode() {
  // @@protoc_insertion_point(field_mutable:MsgRechargeInfo.inviteCode)
  return _internal_mutable_invitecode();
}
inline const std::string& MsgRechargeInfo::_internal_invitecode() const {
  return invitecode_.Get();
}
inline void MsgRechargeInfo::_internal_set_invitecode(const std::string& value) {
  
  invitecode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgRechargeInfo::set_invitecode(std::string&& value) {
  
  invitecode_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgRechargeInfo.inviteCode)
}
inline void MsgRechargeInfo::set_invitecode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  invitecode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgRechargeInfo.inviteCode)
}
inline void MsgRechargeInfo::set_invitecode(const char* value,
    size_t size) {
  
  invitecode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgRechargeInfo.inviteCode)
}
inline std::string* MsgRechargeInfo::_internal_mutable_invitecode() {
  
  return invitecode_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgRechargeInfo::release_invitecode() {
  // @@protoc_insertion_point(field_release:MsgRechargeInfo.inviteCode)
  return invitecode_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgRechargeInfo::set_allocated_invitecode(std::string* invitecode) {
  if (invitecode != nullptr) {
    
  } else {
    
  }
  invitecode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), invitecode,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgRechargeInfo.inviteCode)
}

// -------------------------------------------------------------------

// MsgQueryRebateRecordInfo

// repeated .MsgQueryRebateRecord queryRebateRecord = 1;
inline int MsgQueryRebateRecordInfo::_internal_queryrebaterecord_size() const {
  return queryrebaterecord_.size();
}
inline int MsgQueryRebateRecordInfo::queryrebaterecord_size() const {
  return _internal_queryrebaterecord_size();
}
inline void MsgQueryRebateRecordInfo::clear_queryrebaterecord() {
  queryrebaterecord_.Clear();
}
inline ::MsgQueryRebateRecord* MsgQueryRebateRecordInfo::mutable_queryrebaterecord(int index) {
  // @@protoc_insertion_point(field_mutable:MsgQueryRebateRecordInfo.queryRebateRecord)
  return queryrebaterecord_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgQueryRebateRecord >*
MsgQueryRebateRecordInfo::mutable_queryrebaterecord() {
  // @@protoc_insertion_point(field_mutable_list:MsgQueryRebateRecordInfo.queryRebateRecord)
  return &queryrebaterecord_;
}
inline const ::MsgQueryRebateRecord& MsgQueryRebateRecordInfo::_internal_queryrebaterecord(int index) const {
  return queryrebaterecord_.Get(index);
}
inline const ::MsgQueryRebateRecord& MsgQueryRebateRecordInfo::queryrebaterecord(int index) const {
  // @@protoc_insertion_point(field_get:MsgQueryRebateRecordInfo.queryRebateRecord)
  return _internal_queryrebaterecord(index);
}
inline ::MsgQueryRebateRecord* MsgQueryRebateRecordInfo::_internal_add_queryrebaterecord() {
  return queryrebaterecord_.Add();
}
inline ::MsgQueryRebateRecord* MsgQueryRebateRecordInfo::add_queryrebaterecord() {
  // @@protoc_insertion_point(field_add:MsgQueryRebateRecordInfo.queryRebateRecord)
  return _internal_add_queryrebaterecord();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgQueryRebateRecord >&
MsgQueryRebateRecordInfo::queryrebaterecord() const {
  // @@protoc_insertion_point(field_list:MsgQueryRebateRecordInfo.queryRebateRecord)
  return queryrebaterecord_;
}

// -------------------------------------------------------------------

// MsgQueryRebateRecord

// int32 rechargeUserId = 1;
inline void MsgQueryRebateRecord::clear_rechargeuserid() {
  rechargeuserid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgQueryRebateRecord::_internal_rechargeuserid() const {
  return rechargeuserid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgQueryRebateRecord::rechargeuserid() const {
  // @@protoc_insertion_point(field_get:MsgQueryRebateRecord.rechargeUserId)
  return _internal_rechargeuserid();
}
inline void MsgQueryRebateRecord::_internal_set_rechargeuserid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rechargeuserid_ = value;
}
inline void MsgQueryRebateRecord::set_rechargeuserid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rechargeuserid(value);
  // @@protoc_insertion_point(field_set:MsgQueryRebateRecord.rechargeUserId)
}

// int32 rechargeAmount = 2;
inline void MsgQueryRebateRecord::clear_rechargeamount() {
  rechargeamount_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgQueryRebateRecord::_internal_rechargeamount() const {
  return rechargeamount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgQueryRebateRecord::rechargeamount() const {
  // @@protoc_insertion_point(field_get:MsgQueryRebateRecord.rechargeAmount)
  return _internal_rechargeamount();
}
inline void MsgQueryRebateRecord::_internal_set_rechargeamount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rechargeamount_ = value;
}
inline void MsgQueryRebateRecord::set_rechargeamount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rechargeamount(value);
  // @@protoc_insertion_point(field_set:MsgQueryRebateRecord.rechargeAmount)
}

// int32 rebate = 3;
inline void MsgQueryRebateRecord::clear_rebate() {
  rebate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgQueryRebateRecord::_internal_rebate() const {
  return rebate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgQueryRebateRecord::rebate() const {
  // @@protoc_insertion_point(field_get:MsgQueryRebateRecord.rebate)
  return _internal_rebate();
}
inline void MsgQueryRebateRecord::_internal_set_rebate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rebate_ = value;
}
inline void MsgQueryRebateRecord::set_rebate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rebate(value);
  // @@protoc_insertion_point(field_set:MsgQueryRebateRecord.rebate)
}

// -------------------------------------------------------------------

// MsgForgetPassword

// int32 client_type = 1;
inline void MsgForgetPassword::clear_client_type() {
  client_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgForgetPassword::_internal_client_type() const {
  return client_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgForgetPassword::client_type() const {
  // @@protoc_insertion_point(field_get:MsgForgetPassword.client_type)
  return _internal_client_type();
}
inline void MsgForgetPassword::_internal_set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  client_type_ = value;
}
inline void MsgForgetPassword::set_client_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_client_type(value);
  // @@protoc_insertion_point(field_set:MsgForgetPassword.client_type)
}

// string phone = 2;
inline void MsgForgetPassword::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgForgetPassword::phone() const {
  // @@protoc_insertion_point(field_get:MsgForgetPassword.phone)
  return _internal_phone();
}
inline void MsgForgetPassword::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgForgetPassword.phone)
}
inline std::string* MsgForgetPassword::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgForgetPassword.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgForgetPassword::_internal_phone() const {
  return phone_.Get();
}
inline void MsgForgetPassword::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgForgetPassword::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgForgetPassword.phone)
}
inline void MsgForgetPassword::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgForgetPassword.phone)
}
inline void MsgForgetPassword::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgForgetPassword.phone)
}
inline std::string* MsgForgetPassword::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgForgetPassword::release_phone() {
  // @@protoc_insertion_point(field_release:MsgForgetPassword.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgForgetPassword::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgForgetPassword.phone)
}

// int32 code = 3;
inline void MsgForgetPassword::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgForgetPassword::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgForgetPassword::code() const {
  // @@protoc_insertion_point(field_get:MsgForgetPassword.code)
  return _internal_code();
}
inline void MsgForgetPassword::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void MsgForgetPassword::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:MsgForgetPassword.code)
}

// string new_password = 4;
inline void MsgForgetPassword::clear_new_password() {
  new_password_.ClearToEmpty();
}
inline const std::string& MsgForgetPassword::new_password() const {
  // @@protoc_insertion_point(field_get:MsgForgetPassword.new_password)
  return _internal_new_password();
}
inline void MsgForgetPassword::set_new_password(const std::string& value) {
  _internal_set_new_password(value);
  // @@protoc_insertion_point(field_set:MsgForgetPassword.new_password)
}
inline std::string* MsgForgetPassword::mutable_new_password() {
  // @@protoc_insertion_point(field_mutable:MsgForgetPassword.new_password)
  return _internal_mutable_new_password();
}
inline const std::string& MsgForgetPassword::_internal_new_password() const {
  return new_password_.Get();
}
inline void MsgForgetPassword::_internal_set_new_password(const std::string& value) {
  
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgForgetPassword::set_new_password(std::string&& value) {
  
  new_password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgForgetPassword.new_password)
}
inline void MsgForgetPassword::set_new_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgForgetPassword.new_password)
}
inline void MsgForgetPassword::set_new_password(const char* value,
    size_t size) {
  
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgForgetPassword.new_password)
}
inline std::string* MsgForgetPassword::_internal_mutable_new_password() {
  
  return new_password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgForgetPassword::release_new_password() {
  // @@protoc_insertion_point(field_release:MsgForgetPassword.new_password)
  return new_password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgForgetPassword::set_allocated_new_password(std::string* new_password) {
  if (new_password != nullptr) {
    
  } else {
    
  }
  new_password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), new_password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgForgetPassword.new_password)
}

// -------------------------------------------------------------------

// MsgVIPInfo

// int32 vip_level = 1;
inline void MsgVIPInfo::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.vip_level)
  return _internal_vip_level();
}
inline void MsgVIPInfo::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgVIPInfo::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.vip_level)
}

// int64 need_score = 2;
inline void MsgVIPInfo::clear_need_score() {
  need_score_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgVIPInfo::_internal_need_score() const {
  return need_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgVIPInfo::need_score() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.need_score)
  return _internal_need_score();
}
inline void MsgVIPInfo::_internal_set_need_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  need_score_ = value;
}
inline void MsgVIPInfo::set_need_score(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_need_score(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.need_score)
}

// int32 turntable_num = 3;
inline void MsgVIPInfo::clear_turntable_num() {
  turntable_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_turntable_num() const {
  return turntable_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::turntable_num() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.turntable_num)
  return _internal_turntable_num();
}
inline void MsgVIPInfo::_internal_set_turntable_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  turntable_num_ = value;
}
inline void MsgVIPInfo::set_turntable_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_turntable_num(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.turntable_num)
}

// int32 trumpet_discount = 4;
inline void MsgVIPInfo::clear_trumpet_discount() {
  trumpet_discount_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_trumpet_discount() const {
  return trumpet_discount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::trumpet_discount() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.trumpet_discount)
  return _internal_trumpet_discount();
}
inline void MsgVIPInfo::_internal_set_trumpet_discount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  trumpet_discount_ = value;
}
inline void MsgVIPInfo::set_trumpet_discount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_trumpet_discount(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.trumpet_discount)
}

// int32 check_addition = 5;
inline void MsgVIPInfo::clear_check_addition() {
  check_addition_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_check_addition() const {
  return check_addition_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::check_addition() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.check_addition)
  return _internal_check_addition();
}
inline void MsgVIPInfo::_internal_set_check_addition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  check_addition_ = value;
}
inline void MsgVIPInfo::set_check_addition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_check_addition(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.check_addition)
}

// int32 share_addition = 6;
inline void MsgVIPInfo::clear_share_addition() {
  share_addition_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_share_addition() const {
  return share_addition_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::share_addition() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.share_addition)
  return _internal_share_addition();
}
inline void MsgVIPInfo::_internal_set_share_addition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  share_addition_ = value;
}
inline void MsgVIPInfo::set_share_addition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_share_addition(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.share_addition)
}

// bool world_chat = 7;
inline void MsgVIPInfo::clear_world_chat() {
  world_chat_ = false;
}
inline bool MsgVIPInfo::_internal_world_chat() const {
  return world_chat_;
}
inline bool MsgVIPInfo::world_chat() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.world_chat)
  return _internal_world_chat();
}
inline void MsgVIPInfo::_internal_set_world_chat(bool value) {
  
  world_chat_ = value;
}
inline void MsgVIPInfo::set_world_chat(bool value) {
  _internal_set_world_chat(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.world_chat)
}

// int32 avatar = 8;
inline void MsgVIPInfo::clear_avatar() {
  avatar_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_avatar() const {
  return avatar_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::avatar() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.avatar)
  return _internal_avatar();
}
inline void MsgVIPInfo::_internal_set_avatar(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avatar_ = value;
}
inline void MsgVIPInfo::set_avatar(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.avatar)
}

// int32 avatar_frame = 9;
inline void MsgVIPInfo::clear_avatar_frame() {
  avatar_frame_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_avatar_frame() const {
  return avatar_frame_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::avatar_frame() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.avatar_frame)
  return _internal_avatar_frame();
}
inline void MsgVIPInfo::_internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avatar_frame_ = value;
}
inline void MsgVIPInfo::set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avatar_frame(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.avatar_frame)
}

// int32 award_gold = 10;
inline void MsgVIPInfo::clear_award_gold() {
  award_gold_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::_internal_award_gold() const {
  return award_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgVIPInfo::award_gold() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.award_gold)
  return _internal_award_gold();
}
inline void MsgVIPInfo::_internal_set_award_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  award_gold_ = value;
}
inline void MsgVIPInfo::set_award_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_award_gold(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.award_gold)
}

// bool one_to_one = 11;
inline void MsgVIPInfo::clear_one_to_one() {
  one_to_one_ = false;
}
inline bool MsgVIPInfo::_internal_one_to_one() const {
  return one_to_one_;
}
inline bool MsgVIPInfo::one_to_one() const {
  // @@protoc_insertion_point(field_get:MsgVIPInfo.one_to_one)
  return _internal_one_to_one();
}
inline void MsgVIPInfo::_internal_set_one_to_one(bool value) {
  
  one_to_one_ = value;
}
inline void MsgVIPInfo::set_one_to_one(bool value) {
  _internal_set_one_to_one(value);
  // @@protoc_insertion_point(field_set:MsgVIPInfo.one_to_one)
}

// -------------------------------------------------------------------

// MsgVIPConfig

// repeated .MsgVIPInfo vip_info = 1;
inline int MsgVIPConfig::_internal_vip_info_size() const {
  return vip_info_.size();
}
inline int MsgVIPConfig::vip_info_size() const {
  return _internal_vip_info_size();
}
inline void MsgVIPConfig::clear_vip_info() {
  vip_info_.Clear();
}
inline ::MsgVIPInfo* MsgVIPConfig::mutable_vip_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgVIPConfig.vip_info)
  return vip_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgVIPInfo >*
MsgVIPConfig::mutable_vip_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgVIPConfig.vip_info)
  return &vip_info_;
}
inline const ::MsgVIPInfo& MsgVIPConfig::_internal_vip_info(int index) const {
  return vip_info_.Get(index);
}
inline const ::MsgVIPInfo& MsgVIPConfig::vip_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgVIPConfig.vip_info)
  return _internal_vip_info(index);
}
inline ::MsgVIPInfo* MsgVIPConfig::_internal_add_vip_info() {
  return vip_info_.Add();
}
inline ::MsgVIPInfo* MsgVIPConfig::add_vip_info() {
  // @@protoc_insertion_point(field_add:MsgVIPConfig.vip_info)
  return _internal_add_vip_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgVIPInfo >&
MsgVIPConfig::vip_info() const {
  // @@protoc_insertion_point(field_list:MsgVIPConfig.vip_info)
  return vip_info_;
}

// -------------------------------------------------------------------

// MsgUpgradeVIP

// int32 res_code = 1;
inline void MsgUpgradeVIP::clear_res_code() {
  res_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpgradeVIP::_internal_res_code() const {
  return res_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgUpgradeVIP::res_code() const {
  // @@protoc_insertion_point(field_get:MsgUpgradeVIP.res_code)
  return _internal_res_code();
}
inline void MsgUpgradeVIP::_internal_set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  res_code_ = value;
}
inline void MsgUpgradeVIP::set_res_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_res_code(value);
  // @@protoc_insertion_point(field_set:MsgUpgradeVIP.res_code)
}

// int64 gold = 2;
inline void MsgUpgradeVIP::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgUpgradeVIP::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgUpgradeVIP::gold() const {
  // @@protoc_insertion_point(field_get:MsgUpgradeVIP.gold)
  return _internal_gold();
}
inline void MsgUpgradeVIP::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void MsgUpgradeVIP::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:MsgUpgradeVIP.gold)
}

// -------------------------------------------------------------------

// MsgGetAvatarInfo

// repeated int32 avatars = 1;
inline int MsgGetAvatarInfo::_internal_avatars_size() const {
  return avatars_.size();
}
inline int MsgGetAvatarInfo::avatars_size() const {
  return _internal_avatars_size();
}
inline void MsgGetAvatarInfo::clear_avatars() {
  avatars_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetAvatarInfo::_internal_avatars(int index) const {
  return avatars_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetAvatarInfo::avatars(int index) const {
  // @@protoc_insertion_point(field_get:MsgGetAvatarInfo.avatars)
  return _internal_avatars(index);
}
inline void MsgGetAvatarInfo::set_avatars(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  avatars_.Set(index, value);
  // @@protoc_insertion_point(field_set:MsgGetAvatarInfo.avatars)
}
inline void MsgGetAvatarInfo::_internal_add_avatars(::PROTOBUF_NAMESPACE_ID::int32 value) {
  avatars_.Add(value);
}
inline void MsgGetAvatarInfo::add_avatars(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_avatars(value);
  // @@protoc_insertion_point(field_add:MsgGetAvatarInfo.avatars)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgGetAvatarInfo::_internal_avatars() const {
  return avatars_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
MsgGetAvatarInfo::avatars() const {
  // @@protoc_insertion_point(field_list:MsgGetAvatarInfo.avatars)
  return _internal_avatars();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgGetAvatarInfo::_internal_mutable_avatars() {
  return &avatars_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
MsgGetAvatarInfo::mutable_avatars() {
  // @@protoc_insertion_point(field_mutable_list:MsgGetAvatarInfo.avatars)
  return _internal_mutable_avatars();
}

// -------------------------------------------------------------------

// MsgPlayerInfo

// int32 user_id = 1;
inline void MsgPlayerInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::user_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.user_id)
  return _internal_user_id();
}
inline void MsgPlayerInfo::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgPlayerInfo::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.user_id)
}

// int32 beautiful_id = 2;
inline void MsgPlayerInfo::clear_beautiful_id() {
  beautiful_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::_internal_beautiful_id() const {
  return beautiful_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::beautiful_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.beautiful_id)
  return _internal_beautiful_id();
}
inline void MsgPlayerInfo::_internal_set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  beautiful_id_ = value;
}
inline void MsgPlayerInfo::set_beautiful_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_beautiful_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.beautiful_id)
}

// string nickname = 3;
inline void MsgPlayerInfo::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgPlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.nickname)
  return _internal_nickname();
}
inline void MsgPlayerInfo::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.nickname)
}
inline std::string* MsgPlayerInfo::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerInfo.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgPlayerInfo::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgPlayerInfo::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerInfo::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerInfo.nickname)
}
inline void MsgPlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerInfo.nickname)
}
inline void MsgPlayerInfo::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerInfo.nickname)
}
inline std::string* MsgPlayerInfo::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgPlayerInfo.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerInfo::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerInfo.nickname)
}

// string avatar = 4;
inline void MsgPlayerInfo::clear_avatar() {
  avatar_.ClearToEmpty();
}
inline const std::string& MsgPlayerInfo::avatar() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.avatar)
  return _internal_avatar();
}
inline void MsgPlayerInfo::set_avatar(const std::string& value) {
  _internal_set_avatar(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.avatar)
}
inline std::string* MsgPlayerInfo::mutable_avatar() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerInfo.avatar)
  return _internal_mutable_avatar();
}
inline const std::string& MsgPlayerInfo::_internal_avatar() const {
  return avatar_.Get();
}
inline void MsgPlayerInfo::_internal_set_avatar(const std::string& value) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerInfo::set_avatar(std::string&& value) {
  
  avatar_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerInfo.avatar)
}
inline void MsgPlayerInfo::set_avatar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerInfo.avatar)
}
inline void MsgPlayerInfo::set_avatar(const char* value,
    size_t size) {
  
  avatar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerInfo.avatar)
}
inline std::string* MsgPlayerInfo::_internal_mutable_avatar() {
  
  return avatar_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:MsgPlayerInfo.avatar)
  return avatar_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerInfo::set_allocated_avatar(std::string* avatar) {
  if (avatar != nullptr) {
    
  } else {
    
  }
  avatar_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerInfo.avatar)
}

// uint64 coin = 5;
inline void MsgPlayerInfo::clear_coin() {
  coin_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgPlayerInfo::_internal_coin() const {
  return coin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgPlayerInfo::coin() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.coin)
  return _internal_coin();
}
inline void MsgPlayerInfo::_internal_set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  coin_ = value;
}
inline void MsgPlayerInfo::set_coin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_coin(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.coin)
}

// string phone_num = 6;
inline void MsgPlayerInfo::clear_phone_num() {
  phone_num_.ClearToEmpty();
}
inline const std::string& MsgPlayerInfo::phone_num() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.phone_num)
  return _internal_phone_num();
}
inline void MsgPlayerInfo::set_phone_num(const std::string& value) {
  _internal_set_phone_num(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.phone_num)
}
inline std::string* MsgPlayerInfo::mutable_phone_num() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerInfo.phone_num)
  return _internal_mutable_phone_num();
}
inline const std::string& MsgPlayerInfo::_internal_phone_num() const {
  return phone_num_.Get();
}
inline void MsgPlayerInfo::_internal_set_phone_num(const std::string& value) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerInfo::set_phone_num(std::string&& value) {
  
  phone_num_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerInfo.phone_num)
}
inline void MsgPlayerInfo::set_phone_num(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerInfo.phone_num)
}
inline void MsgPlayerInfo::set_phone_num(const char* value,
    size_t size) {
  
  phone_num_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerInfo.phone_num)
}
inline std::string* MsgPlayerInfo::_internal_mutable_phone_num() {
  
  return phone_num_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerInfo::release_phone_num() {
  // @@protoc_insertion_point(field_release:MsgPlayerInfo.phone_num)
  return phone_num_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerInfo::set_allocated_phone_num(std::string* phone_num) {
  if (phone_num != nullptr) {
    
  } else {
    
  }
  phone_num_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone_num,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerInfo.phone_num)
}

// int32 vip_level = 7;
inline void MsgPlayerInfo::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.vip_level)
  return _internal_vip_level();
}
inline void MsgPlayerInfo::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgPlayerInfo::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.vip_level)
}

// int32 avatar_frame = 8;
inline void MsgPlayerInfo::clear_avatar_frame() {
  avatar_frame_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::_internal_avatar_frame() const {
  return avatar_frame_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::avatar_frame() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.avatar_frame)
  return _internal_avatar_frame();
}
inline void MsgPlayerInfo::_internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avatar_frame_ = value;
}
inline void MsgPlayerInfo::set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avatar_frame(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.avatar_frame)
}

// string signature = 9;
inline void MsgPlayerInfo::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& MsgPlayerInfo::signature() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.signature)
  return _internal_signature();
}
inline void MsgPlayerInfo::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.signature)
}
inline std::string* MsgPlayerInfo::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:MsgPlayerInfo.signature)
  return _internal_mutable_signature();
}
inline const std::string& MsgPlayerInfo::_internal_signature() const {
  return signature_.Get();
}
inline void MsgPlayerInfo::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPlayerInfo::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPlayerInfo.signature)
}
inline void MsgPlayerInfo::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPlayerInfo.signature)
}
inline void MsgPlayerInfo::set_signature(const char* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPlayerInfo.signature)
}
inline std::string* MsgPlayerInfo::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPlayerInfo::release_signature() {
  // @@protoc_insertion_point(field_release:MsgPlayerInfo.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPlayerInfo::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPlayerInfo.signature)
}

// int32 zmd_game_id = 10;
inline void MsgPlayerInfo::clear_zmd_game_id() {
  zmd_game_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::_internal_zmd_game_id() const {
  return zmd_game_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgPlayerInfo::zmd_game_id() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.zmd_game_id)
  return _internal_zmd_game_id();
}
inline void MsgPlayerInfo::_internal_set_zmd_game_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  zmd_game_id_ = value;
}
inline void MsgPlayerInfo::set_zmd_game_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_zmd_game_id(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.zmd_game_id)
}

// uint64 zmd_win_gold = 11;
inline void MsgPlayerInfo::clear_zmd_win_gold() {
  zmd_win_gold_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgPlayerInfo::_internal_zmd_win_gold() const {
  return zmd_win_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgPlayerInfo::zmd_win_gold() const {
  // @@protoc_insertion_point(field_get:MsgPlayerInfo.zmd_win_gold)
  return _internal_zmd_win_gold();
}
inline void MsgPlayerInfo::_internal_set_zmd_win_gold(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  zmd_win_gold_ = value;
}
inline void MsgPlayerInfo::set_zmd_win_gold(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_zmd_win_gold(value);
  // @@protoc_insertion_point(field_set:MsgPlayerInfo.zmd_win_gold)
}

// -------------------------------------------------------------------

// MsgActiveInfo

// int32 user_id = 1;
inline void MsgActiveInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfo::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfo::user_id() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfo.user_id)
  return _internal_user_id();
}
inline void MsgActiveInfo::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgActiveInfo::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfo.user_id)
}

// int32 active_id = 2;
inline void MsgActiveInfo::clear_active_id() {
  active_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfo::_internal_active_id() const {
  return active_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfo::active_id() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfo.active_id)
  return _internal_active_id();
}
inline void MsgActiveInfo::_internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  active_id_ = value;
}
inline void MsgActiveInfo::set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_active_id(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfo.active_id)
}

// -------------------------------------------------------------------

// ActiveInfoRet

// int32 active_id = 1;
inline void ActiveInfoRet::clear_active_id() {
  active_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_active_id() const {
  return active_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::active_id() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.active_id)
  return _internal_active_id();
}
inline void ActiveInfoRet::_internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  active_id_ = value;
}
inline void ActiveInfoRet::set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_active_id(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.active_id)
}

// int32 sub_active_id = 2;
inline void ActiveInfoRet::clear_sub_active_id() {
  sub_active_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_sub_active_id() const {
  return sub_active_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::sub_active_id() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.sub_active_id)
  return _internal_sub_active_id();
}
inline void ActiveInfoRet::_internal_set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sub_active_id_ = value;
}
inline void ActiveInfoRet::set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sub_active_id(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.sub_active_id)
}

// int32 param1 = 3;
inline void ActiveInfoRet::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::param1() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.param1)
  return _internal_param1();
}
inline void ActiveInfoRet::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void ActiveInfoRet::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.param1)
}

// int32 param2 = 4;
inline void ActiveInfoRet::clear_param2() {
  param2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_param2() const {
  return param2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::param2() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.param2)
  return _internal_param2();
}
inline void ActiveInfoRet::_internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param2_ = value;
}
inline void ActiveInfoRet::set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.param2)
}

// int32 param3 = 5;
inline void ActiveInfoRet::clear_param3() {
  param3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_param3() const {
  return param3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::param3() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.param3)
  return _internal_param3();
}
inline void ActiveInfoRet::_internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param3_ = value;
}
inline void ActiveInfoRet::set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param3(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.param3)
}

// int32 progress1 = 6;
inline void ActiveInfoRet::clear_progress1() {
  progress1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_progress1() const {
  return progress1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::progress1() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.progress1)
  return _internal_progress1();
}
inline void ActiveInfoRet::_internal_set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  progress1_ = value;
}
inline void ActiveInfoRet::set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress1(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.progress1)
}

// int32 progress2 = 7;
inline void ActiveInfoRet::clear_progress2() {
  progress2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_progress2() const {
  return progress2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::progress2() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.progress2)
  return _internal_progress2();
}
inline void ActiveInfoRet::_internal_set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  progress2_ = value;
}
inline void ActiveInfoRet::set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress2(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.progress2)
}

// int32 progress3 = 8;
inline void ActiveInfoRet::clear_progress3() {
  progress3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_progress3() const {
  return progress3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::progress3() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.progress3)
  return _internal_progress3();
}
inline void ActiveInfoRet::_internal_set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  progress3_ = value;
}
inline void ActiveInfoRet::set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress3(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.progress3)
}

// int32 reward = 9;
inline void ActiveInfoRet::clear_reward() {
  reward_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_reward() const {
  return reward_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::reward() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.reward)
  return _internal_reward();
}
inline void ActiveInfoRet::_internal_set_reward(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  reward_ = value;
}
inline void ActiveInfoRet::set_reward(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reward(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.reward)
}

// int32 reward_type = 10;
inline void ActiveInfoRet::clear_reward_type() {
  reward_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::_internal_reward_type() const {
  return reward_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActiveInfoRet::reward_type() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.reward_type)
  return _internal_reward_type();
}
inline void ActiveInfoRet::_internal_set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  reward_type_ = value;
}
inline void ActiveInfoRet::set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reward_type(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.reward_type)
}

// bool is_pick = 11;
inline void ActiveInfoRet::clear_is_pick() {
  is_pick_ = false;
}
inline bool ActiveInfoRet::_internal_is_pick() const {
  return is_pick_;
}
inline bool ActiveInfoRet::is_pick() const {
  // @@protoc_insertion_point(field_get:ActiveInfoRet.is_pick)
  return _internal_is_pick();
}
inline void ActiveInfoRet::_internal_set_is_pick(bool value) {
  
  is_pick_ = value;
}
inline void ActiveInfoRet::set_is_pick(bool value) {
  _internal_set_is_pick(value);
  // @@protoc_insertion_point(field_set:ActiveInfoRet.is_pick)
}

// -------------------------------------------------------------------

// MsgActiveInfoSCRet

// repeated .ActiveInfoRet vec_info = 1;
inline int MsgActiveInfoSCRet::_internal_vec_info_size() const {
  return vec_info_.size();
}
inline int MsgActiveInfoSCRet::vec_info_size() const {
  return _internal_vec_info_size();
}
inline void MsgActiveInfoSCRet::clear_vec_info() {
  vec_info_.Clear();
}
inline ::ActiveInfoRet* MsgActiveInfoSCRet::mutable_vec_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgActiveInfoSCRet.vec_info)
  return vec_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ActiveInfoRet >*
MsgActiveInfoSCRet::mutable_vec_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgActiveInfoSCRet.vec_info)
  return &vec_info_;
}
inline const ::ActiveInfoRet& MsgActiveInfoSCRet::_internal_vec_info(int index) const {
  return vec_info_.Get(index);
}
inline const ::ActiveInfoRet& MsgActiveInfoSCRet::vec_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCRet.vec_info)
  return _internal_vec_info(index);
}
inline ::ActiveInfoRet* MsgActiveInfoSCRet::_internal_add_vec_info() {
  return vec_info_.Add();
}
inline ::ActiveInfoRet* MsgActiveInfoSCRet::add_vec_info() {
  // @@protoc_insertion_point(field_add:MsgActiveInfoSCRet.vec_info)
  return _internal_add_vec_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ActiveInfoRet >&
MsgActiveInfoSCRet::vec_info() const {
  // @@protoc_insertion_point(field_list:MsgActiveInfoSCRet.vec_info)
  return vec_info_;
}

// -------------------------------------------------------------------

// MsgActiveInfoCSPick

// int32 user_id = 1;
inline void MsgActiveInfoCSPick::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoCSPick::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoCSPick::user_id() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoCSPick.user_id)
  return _internal_user_id();
}
inline void MsgActiveInfoCSPick::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgActiveInfoCSPick::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoCSPick.user_id)
}

// int32 active_id = 2;
inline void MsgActiveInfoCSPick::clear_active_id() {
  active_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoCSPick::_internal_active_id() const {
  return active_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoCSPick::active_id() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoCSPick.active_id)
  return _internal_active_id();
}
inline void MsgActiveInfoCSPick::_internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  active_id_ = value;
}
inline void MsgActiveInfoCSPick::set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_active_id(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoCSPick.active_id)
}

// int32 sub_active_id = 3;
inline void MsgActiveInfoCSPick::clear_sub_active_id() {
  sub_active_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoCSPick::_internal_sub_active_id() const {
  return sub_active_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoCSPick::sub_active_id() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoCSPick.sub_active_id)
  return _internal_sub_active_id();
}
inline void MsgActiveInfoCSPick::_internal_set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sub_active_id_ = value;
}
inline void MsgActiveInfoCSPick::set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sub_active_id(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoCSPick.sub_active_id)
}

// -------------------------------------------------------------------

// MsgActiveInfoSCPick

// int32 active_id = 1;
inline void MsgActiveInfoSCPick::clear_active_id() {
  active_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_active_id() const {
  return active_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::active_id() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.active_id)
  return _internal_active_id();
}
inline void MsgActiveInfoSCPick::_internal_set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  active_id_ = value;
}
inline void MsgActiveInfoSCPick::set_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_active_id(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.active_id)
}

// int32 sub_active_id = 2;
inline void MsgActiveInfoSCPick::clear_sub_active_id() {
  sub_active_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_sub_active_id() const {
  return sub_active_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::sub_active_id() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.sub_active_id)
  return _internal_sub_active_id();
}
inline void MsgActiveInfoSCPick::_internal_set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sub_active_id_ = value;
}
inline void MsgActiveInfoSCPick::set_sub_active_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sub_active_id(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.sub_active_id)
}

// int32 param1 = 3;
inline void MsgActiveInfoSCPick::clear_param1() {
  param1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_param1() const {
  return param1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::param1() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.param1)
  return _internal_param1();
}
inline void MsgActiveInfoSCPick::_internal_set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param1_ = value;
}
inline void MsgActiveInfoSCPick::set_param1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.param1)
}

// int32 param2 = 4;
inline void MsgActiveInfoSCPick::clear_param2() {
  param2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_param2() const {
  return param2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::param2() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.param2)
  return _internal_param2();
}
inline void MsgActiveInfoSCPick::_internal_set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param2_ = value;
}
inline void MsgActiveInfoSCPick::set_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.param2)
}

// int32 param3 = 5;
inline void MsgActiveInfoSCPick::clear_param3() {
  param3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_param3() const {
  return param3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::param3() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.param3)
  return _internal_param3();
}
inline void MsgActiveInfoSCPick::_internal_set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  param3_ = value;
}
inline void MsgActiveInfoSCPick::set_param3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_param3(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.param3)
}

// int32 progress1 = 6;
inline void MsgActiveInfoSCPick::clear_progress1() {
  progress1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_progress1() const {
  return progress1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::progress1() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.progress1)
  return _internal_progress1();
}
inline void MsgActiveInfoSCPick::_internal_set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  progress1_ = value;
}
inline void MsgActiveInfoSCPick::set_progress1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress1(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.progress1)
}

// int32 progress2 = 7;
inline void MsgActiveInfoSCPick::clear_progress2() {
  progress2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_progress2() const {
  return progress2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::progress2() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.progress2)
  return _internal_progress2();
}
inline void MsgActiveInfoSCPick::_internal_set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  progress2_ = value;
}
inline void MsgActiveInfoSCPick::set_progress2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress2(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.progress2)
}

// int32 progress3 = 8;
inline void MsgActiveInfoSCPick::clear_progress3() {
  progress3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_progress3() const {
  return progress3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::progress3() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.progress3)
  return _internal_progress3();
}
inline void MsgActiveInfoSCPick::_internal_set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  progress3_ = value;
}
inline void MsgActiveInfoSCPick::set_progress3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress3(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.progress3)
}

// int32 reward = 9;
inline void MsgActiveInfoSCPick::clear_reward() {
  reward_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_reward() const {
  return reward_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::reward() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.reward)
  return _internal_reward();
}
inline void MsgActiveInfoSCPick::_internal_set_reward(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  reward_ = value;
}
inline void MsgActiveInfoSCPick::set_reward(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reward(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.reward)
}

// int32 reward_type = 10;
inline void MsgActiveInfoSCPick::clear_reward_type() {
  reward_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_reward_type() const {
  return reward_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::reward_type() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.reward_type)
  return _internal_reward_type();
}
inline void MsgActiveInfoSCPick::_internal_set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  reward_type_ = value;
}
inline void MsgActiveInfoSCPick::set_reward_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reward_type(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.reward_type)
}

// int32 is_pick = 11;
inline void MsgActiveInfoSCPick::clear_is_pick() {
  is_pick_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::_internal_is_pick() const {
  return is_pick_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgActiveInfoSCPick::is_pick() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.is_pick)
  return _internal_is_pick();
}
inline void MsgActiveInfoSCPick::_internal_set_is_pick(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_pick_ = value;
}
inline void MsgActiveInfoSCPick::set_is_pick(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_pick(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.is_pick)
}

// bool res = 12;
inline void MsgActiveInfoSCPick::clear_res() {
  res_ = false;
}
inline bool MsgActiveInfoSCPick::_internal_res() const {
  return res_;
}
inline bool MsgActiveInfoSCPick::res() const {
  // @@protoc_insertion_point(field_get:MsgActiveInfoSCPick.res)
  return _internal_res();
}
inline void MsgActiveInfoSCPick::_internal_set_res(bool value) {
  
  res_ = value;
}
inline void MsgActiveInfoSCPick::set_res(bool value) {
  _internal_set_res(value);
  // @@protoc_insertion_point(field_set:MsgActiveInfoSCPick.res)
}

// -------------------------------------------------------------------

// MsgModifySignature

// int32 user_id = 1;
inline void MsgModifySignature::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgModifySignature::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgModifySignature::user_id() const {
  // @@protoc_insertion_point(field_get:MsgModifySignature.user_id)
  return _internal_user_id();
}
inline void MsgModifySignature::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgModifySignature::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgModifySignature.user_id)
}

// string signature = 2;
inline void MsgModifySignature::clear_signature() {
  signature_.ClearToEmpty();
}
inline const std::string& MsgModifySignature::signature() const {
  // @@protoc_insertion_point(field_get:MsgModifySignature.signature)
  return _internal_signature();
}
inline void MsgModifySignature::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:MsgModifySignature.signature)
}
inline std::string* MsgModifySignature::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:MsgModifySignature.signature)
  return _internal_mutable_signature();
}
inline const std::string& MsgModifySignature::_internal_signature() const {
  return signature_.Get();
}
inline void MsgModifySignature::_internal_set_signature(const std::string& value) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgModifySignature::set_signature(std::string&& value) {
  
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgModifySignature.signature)
}
inline void MsgModifySignature::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgModifySignature.signature)
}
inline void MsgModifySignature::set_signature(const char* value,
    size_t size) {
  
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgModifySignature.signature)
}
inline std::string* MsgModifySignature::_internal_mutable_signature() {
  
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgModifySignature::release_signature() {
  // @@protoc_insertion_point(field_release:MsgModifySignature.signature)
  return signature_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgModifySignature::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    
  } else {
    
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgModifySignature.signature)
}

// -------------------------------------------------------------------

// MsgBankChangePassword

// string password = 1;
inline void MsgBankChangePassword::clear_password() {
  password_.ClearToEmpty();
}
inline const std::string& MsgBankChangePassword::password() const {
  // @@protoc_insertion_point(field_get:MsgBankChangePassword.password)
  return _internal_password();
}
inline void MsgBankChangePassword::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:MsgBankChangePassword.password)
}
inline std::string* MsgBankChangePassword::mutable_password() {
  // @@protoc_insertion_point(field_mutable:MsgBankChangePassword.password)
  return _internal_mutable_password();
}
inline const std::string& MsgBankChangePassword::_internal_password() const {
  return password_.Get();
}
inline void MsgBankChangePassword::_internal_set_password(const std::string& value) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgBankChangePassword::set_password(std::string&& value) {
  
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgBankChangePassword.password)
}
inline void MsgBankChangePassword::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgBankChangePassword.password)
}
inline void MsgBankChangePassword::set_password(const char* value,
    size_t size) {
  
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgBankChangePassword.password)
}
inline std::string* MsgBankChangePassword::_internal_mutable_password() {
  
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgBankChangePassword::release_password() {
  // @@protoc_insertion_point(field_release:MsgBankChangePassword.password)
  return password_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgBankChangePassword::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgBankChangePassword.password)
}

// int32 code = 2;
inline void MsgBankChangePassword::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankChangePassword::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankChangePassword::code() const {
  // @@protoc_insertion_point(field_get:MsgBankChangePassword.code)
  return _internal_code();
}
inline void MsgBankChangePassword::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void MsgBankChangePassword::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:MsgBankChangePassword.code)
}

// -------------------------------------------------------------------

// MsgBankOperate

// int64 gold = 1;
inline void MsgBankOperate::clear_gold() {
  gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankOperate::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankOperate::gold() const {
  // @@protoc_insertion_point(field_get:MsgBankOperate.gold)
  return _internal_gold();
}
inline void MsgBankOperate::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  gold_ = value;
}
inline void MsgBankOperate::set_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:MsgBankOperate.gold)
}

// int32 operate_type = 2;
inline void MsgBankOperate::clear_operate_type() {
  operate_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankOperate::_internal_operate_type() const {
  return operate_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankOperate::operate_type() const {
  // @@protoc_insertion_point(field_get:MsgBankOperate.operate_type)
  return _internal_operate_type();
}
inline void MsgBankOperate::_internal_set_operate_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  operate_type_ = value;
}
inline void MsgBankOperate::set_operate_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_operate_type(value);
  // @@protoc_insertion_point(field_set:MsgBankOperate.operate_type)
}

// -------------------------------------------------------------------

// MsgBankTakeOut

// int32 ret_value = 1;
inline void MsgBankTakeOut::clear_ret_value() {
  ret_value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankTakeOut::_internal_ret_value() const {
  return ret_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankTakeOut::ret_value() const {
  // @@protoc_insertion_point(field_get:MsgBankTakeOut.ret_value)
  return _internal_ret_value();
}
inline void MsgBankTakeOut::_internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_value_ = value;
}
inline void MsgBankTakeOut::set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_value(value);
  // @@protoc_insertion_point(field_set:MsgBankTakeOut.ret_value)
}

// int64 user_gold = 2;
inline void MsgBankTakeOut::clear_user_gold() {
  user_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTakeOut::_internal_user_gold() const {
  return user_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTakeOut::user_gold() const {
  // @@protoc_insertion_point(field_get:MsgBankTakeOut.user_gold)
  return _internal_user_gold();
}
inline void MsgBankTakeOut::_internal_set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  user_gold_ = value;
}
inline void MsgBankTakeOut::set_user_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_user_gold(value);
  // @@protoc_insertion_point(field_set:MsgBankTakeOut.user_gold)
}

// int64 bank_gold = 3;
inline void MsgBankTakeOut::clear_bank_gold() {
  bank_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTakeOut::_internal_bank_gold() const {
  return bank_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTakeOut::bank_gold() const {
  // @@protoc_insertion_point(field_get:MsgBankTakeOut.bank_gold)
  return _internal_bank_gold();
}
inline void MsgBankTakeOut::_internal_set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bank_gold_ = value;
}
inline void MsgBankTakeOut::set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bank_gold(value);
  // @@protoc_insertion_point(field_set:MsgBankTakeOut.bank_gold)
}

// -------------------------------------------------------------------

// MsgBankTransfer

// int32 recv_user_id = 1;
inline void MsgBankTransfer::clear_recv_user_id() {
  recv_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankTransfer::_internal_recv_user_id() const {
  return recv_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankTransfer::recv_user_id() const {
  // @@protoc_insertion_point(field_get:MsgBankTransfer.recv_user_id)
  return _internal_recv_user_id();
}
inline void MsgBankTransfer::_internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recv_user_id_ = value;
}
inline void MsgBankTransfer::set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recv_user_id(value);
  // @@protoc_insertion_point(field_set:MsgBankTransfer.recv_user_id)
}

// int64 transfer_gold = 2;
inline void MsgBankTransfer::clear_transfer_gold() {
  transfer_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTransfer::_internal_transfer_gold() const {
  return transfer_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTransfer::transfer_gold() const {
  // @@protoc_insertion_point(field_get:MsgBankTransfer.transfer_gold)
  return _internal_transfer_gold();
}
inline void MsgBankTransfer::_internal_set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  transfer_gold_ = value;
}
inline void MsgBankTransfer::set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_transfer_gold(value);
  // @@protoc_insertion_point(field_set:MsgBankTransfer.transfer_gold)
}

// -------------------------------------------------------------------

// MsgTopInfo

// int32 rank_id = 1;
inline void MsgTopInfo::clear_rank_id() {
  rank_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopInfo::_internal_rank_id() const {
  return rank_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopInfo::rank_id() const {
  // @@protoc_insertion_point(field_get:MsgTopInfo.rank_id)
  return _internal_rank_id();
}
inline void MsgTopInfo::_internal_set_rank_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_id_ = value;
}
inline void MsgTopInfo::set_rank_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rank_id(value);
  // @@protoc_insertion_point(field_set:MsgTopInfo.rank_id)
}

// int32 user_id = 2;
inline void MsgTopInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopInfo::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopInfo::user_id() const {
  // @@protoc_insertion_point(field_get:MsgTopInfo.user_id)
  return _internal_user_id();
}
inline void MsgTopInfo::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgTopInfo::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgTopInfo.user_id)
}

// uint64 gold = 3;
inline void MsgTopInfo::clear_gold() {
  gold_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgTopInfo::_internal_gold() const {
  return gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MsgTopInfo::gold() const {
  // @@protoc_insertion_point(field_get:MsgTopInfo.gold)
  return _internal_gold();
}
inline void MsgTopInfo::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  gold_ = value;
}
inline void MsgTopInfo::set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gold(value);
  // @@protoc_insertion_point(field_set:MsgTopInfo.gold)
}

// uint32 vip_level = 4;
inline void MsgTopInfo::clear_vip_level() {
  vip_level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MsgTopInfo::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MsgTopInfo::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgTopInfo.vip_level)
  return _internal_vip_level();
}
inline void MsgTopInfo::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  vip_level_ = value;
}
inline void MsgTopInfo::set_vip_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgTopInfo.vip_level)
}

// int32 avatar_frame = 5;
inline void MsgTopInfo::clear_avatar_frame() {
  avatar_frame_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopInfo::_internal_avatar_frame() const {
  return avatar_frame_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopInfo::avatar_frame() const {
  // @@protoc_insertion_point(field_get:MsgTopInfo.avatar_frame)
  return _internal_avatar_frame();
}
inline void MsgTopInfo::_internal_set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  avatar_frame_ = value;
}
inline void MsgTopInfo::set_avatar_frame(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_avatar_frame(value);
  // @@protoc_insertion_point(field_set:MsgTopInfo.avatar_frame)
}

// string head_url = 6;
inline void MsgTopInfo::clear_head_url() {
  head_url_.ClearToEmpty();
}
inline const std::string& MsgTopInfo::head_url() const {
  // @@protoc_insertion_point(field_get:MsgTopInfo.head_url)
  return _internal_head_url();
}
inline void MsgTopInfo::set_head_url(const std::string& value) {
  _internal_set_head_url(value);
  // @@protoc_insertion_point(field_set:MsgTopInfo.head_url)
}
inline std::string* MsgTopInfo::mutable_head_url() {
  // @@protoc_insertion_point(field_mutable:MsgTopInfo.head_url)
  return _internal_mutable_head_url();
}
inline const std::string& MsgTopInfo::_internal_head_url() const {
  return head_url_.Get();
}
inline void MsgTopInfo::_internal_set_head_url(const std::string& value) {
  
  head_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgTopInfo::set_head_url(std::string&& value) {
  
  head_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgTopInfo.head_url)
}
inline void MsgTopInfo::set_head_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  head_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgTopInfo.head_url)
}
inline void MsgTopInfo::set_head_url(const char* value,
    size_t size) {
  
  head_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgTopInfo.head_url)
}
inline std::string* MsgTopInfo::_internal_mutable_head_url() {
  
  return head_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgTopInfo::release_head_url() {
  // @@protoc_insertion_point(field_release:MsgTopInfo.head_url)
  return head_url_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgTopInfo::set_allocated_head_url(std::string* head_url) {
  if (head_url != nullptr) {
    
  } else {
    
  }
  head_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), head_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgTopInfo.head_url)
}

// string nick_name = 7;
inline void MsgTopInfo::clear_nick_name() {
  nick_name_.ClearToEmpty();
}
inline const std::string& MsgTopInfo::nick_name() const {
  // @@protoc_insertion_point(field_get:MsgTopInfo.nick_name)
  return _internal_nick_name();
}
inline void MsgTopInfo::set_nick_name(const std::string& value) {
  _internal_set_nick_name(value);
  // @@protoc_insertion_point(field_set:MsgTopInfo.nick_name)
}
inline std::string* MsgTopInfo::mutable_nick_name() {
  // @@protoc_insertion_point(field_mutable:MsgTopInfo.nick_name)
  return _internal_mutable_nick_name();
}
inline const std::string& MsgTopInfo::_internal_nick_name() const {
  return nick_name_.Get();
}
inline void MsgTopInfo::_internal_set_nick_name(const std::string& value) {
  
  nick_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgTopInfo::set_nick_name(std::string&& value) {
  
  nick_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgTopInfo.nick_name)
}
inline void MsgTopInfo::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nick_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgTopInfo.nick_name)
}
inline void MsgTopInfo::set_nick_name(const char* value,
    size_t size) {
  
  nick_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgTopInfo.nick_name)
}
inline std::string* MsgTopInfo::_internal_mutable_nick_name() {
  
  return nick_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgTopInfo::release_nick_name() {
  // @@protoc_insertion_point(field_release:MsgTopInfo.nick_name)
  return nick_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgTopInfo::set_allocated_nick_name(std::string* nick_name) {
  if (nick_name != nullptr) {
    
  } else {
    
  }
  nick_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nick_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgTopInfo.nick_name)
}

// -------------------------------------------------------------------

// MsgGetRank

// int32 rank_type = 1;
inline void MsgGetRank::clear_rank_type() {
  rank_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::_internal_rank_type() const {
  return rank_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::rank_type() const {
  // @@protoc_insertion_point(field_get:MsgGetRank.rank_type)
  return _internal_rank_type();
}
inline void MsgGetRank::_internal_set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_type_ = value;
}
inline void MsgGetRank::set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rank_type(value);
  // @@protoc_insertion_point(field_set:MsgGetRank.rank_type)
}

// int32 user_id = 2;
inline void MsgGetRank::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::user_id() const {
  // @@protoc_insertion_point(field_get:MsgGetRank.user_id)
  return _internal_user_id();
}
inline void MsgGetRank::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgGetRank::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgGetRank.user_id)
}

// int32 current_page = 3;
inline void MsgGetRank::clear_current_page() {
  current_page_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::_internal_current_page() const {
  return current_page_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::current_page() const {
  // @@protoc_insertion_point(field_get:MsgGetRank.current_page)
  return _internal_current_page();
}
inline void MsgGetRank::_internal_set_current_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  current_page_ = value;
}
inline void MsgGetRank::set_current_page(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_page(value);
  // @@protoc_insertion_point(field_set:MsgGetRank.current_page)
}

// int32 max_row = 4;
inline void MsgGetRank::clear_max_row() {
  max_row_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::_internal_max_row() const {
  return max_row_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgGetRank::max_row() const {
  // @@protoc_insertion_point(field_get:MsgGetRank.max_row)
  return _internal_max_row();
}
inline void MsgGetRank::_internal_set_max_row(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_row_ = value;
}
inline void MsgGetRank::set_max_row(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_row(value);
  // @@protoc_insertion_point(field_set:MsgGetRank.max_row)
}

// -------------------------------------------------------------------

// MsgTopListResp

// int32 user_id = 1;
inline void MsgTopListResp::clear_user_id() {
  user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::user_id() const {
  // @@protoc_insertion_point(field_get:MsgTopListResp.user_id)
  return _internal_user_id();
}
inline void MsgTopListResp::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  user_id_ = value;
}
inline void MsgTopListResp::set_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:MsgTopListResp.user_id)
}

// int32 rank_type = 2;
inline void MsgTopListResp::clear_rank_type() {
  rank_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::_internal_rank_type() const {
  return rank_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::rank_type() const {
  // @@protoc_insertion_point(field_get:MsgTopListResp.rank_type)
  return _internal_rank_type();
}
inline void MsgTopListResp::_internal_set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_type_ = value;
}
inline void MsgTopListResp::set_rank_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rank_type(value);
  // @@protoc_insertion_point(field_set:MsgTopListResp.rank_type)
}

// int32 this_rank_ndex = 3;
inline void MsgTopListResp::clear_this_rank_ndex() {
  this_rank_ndex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::_internal_this_rank_ndex() const {
  return this_rank_ndex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::this_rank_ndex() const {
  // @@protoc_insertion_point(field_get:MsgTopListResp.this_rank_ndex)
  return _internal_this_rank_ndex();
}
inline void MsgTopListResp::_internal_set_this_rank_ndex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  this_rank_ndex_ = value;
}
inline void MsgTopListResp::set_this_rank_ndex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_this_rank_ndex(value);
  // @@protoc_insertion_point(field_set:MsgTopListResp.this_rank_ndex)
}

// int64 this_gold = 4;
inline void MsgTopListResp::clear_this_gold() {
  this_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTopListResp::_internal_this_gold() const {
  return this_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgTopListResp::this_gold() const {
  // @@protoc_insertion_point(field_get:MsgTopListResp.this_gold)
  return _internal_this_gold();
}
inline void MsgTopListResp::_internal_set_this_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  this_gold_ = value;
}
inline void MsgTopListResp::set_this_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_this_gold(value);
  // @@protoc_insertion_point(field_set:MsgTopListResp.this_gold)
}

// int32 is_end = 5;
inline void MsgTopListResp::clear_is_end() {
  is_end_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::_internal_is_end() const {
  return is_end_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgTopListResp::is_end() const {
  // @@protoc_insertion_point(field_get:MsgTopListResp.is_end)
  return _internal_is_end();
}
inline void MsgTopListResp::_internal_set_is_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_end_ = value;
}
inline void MsgTopListResp::set_is_end(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_end(value);
  // @@protoc_insertion_point(field_set:MsgTopListResp.is_end)
}

// repeated .MsgTopInfo lists = 6;
inline int MsgTopListResp::_internal_lists_size() const {
  return lists_.size();
}
inline int MsgTopListResp::lists_size() const {
  return _internal_lists_size();
}
inline void MsgTopListResp::clear_lists() {
  lists_.Clear();
}
inline ::MsgTopInfo* MsgTopListResp::mutable_lists(int index) {
  // @@protoc_insertion_point(field_mutable:MsgTopListResp.lists)
  return lists_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTopInfo >*
MsgTopListResp::mutable_lists() {
  // @@protoc_insertion_point(field_mutable_list:MsgTopListResp.lists)
  return &lists_;
}
inline const ::MsgTopInfo& MsgTopListResp::_internal_lists(int index) const {
  return lists_.Get(index);
}
inline const ::MsgTopInfo& MsgTopListResp::lists(int index) const {
  // @@protoc_insertion_point(field_get:MsgTopListResp.lists)
  return _internal_lists(index);
}
inline ::MsgTopInfo* MsgTopListResp::_internal_add_lists() {
  return lists_.Add();
}
inline ::MsgTopInfo* MsgTopListResp::add_lists() {
  // @@protoc_insertion_point(field_add:MsgTopListResp.lists)
  return _internal_add_lists();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgTopInfo >&
MsgTopListResp::lists() const {
  // @@protoc_insertion_point(field_list:MsgTopListResp.lists)
  return lists_;
}

// -------------------------------------------------------------------

// MsgBankTransferResp

// int32 ret_value = 1;
inline void MsgBankTransferResp::clear_ret_value() {
  ret_value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankTransferResp::_internal_ret_value() const {
  return ret_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankTransferResp::ret_value() const {
  // @@protoc_insertion_point(field_get:MsgBankTransferResp.ret_value)
  return _internal_ret_value();
}
inline void MsgBankTransferResp::_internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_value_ = value;
}
inline void MsgBankTransferResp::set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_value(value);
  // @@protoc_insertion_point(field_set:MsgBankTransferResp.ret_value)
}

// int64 bank_gold = 2;
inline void MsgBankTransferResp::clear_bank_gold() {
  bank_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTransferResp::_internal_bank_gold() const {
  return bank_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankTransferResp::bank_gold() const {
  // @@protoc_insertion_point(field_get:MsgBankTransferResp.bank_gold)
  return _internal_bank_gold();
}
inline void MsgBankTransferResp::_internal_set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  bank_gold_ = value;
}
inline void MsgBankTransferResp::set_bank_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bank_gold(value);
  // @@protoc_insertion_point(field_set:MsgBankTransferResp.bank_gold)
}

// -------------------------------------------------------------------

// MsgBankRecord

// int32 send_user_id = 1;
inline void MsgBankRecord::clear_send_user_id() {
  send_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankRecord::_internal_send_user_id() const {
  return send_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankRecord::send_user_id() const {
  // @@protoc_insertion_point(field_get:MsgBankRecord.send_user_id)
  return _internal_send_user_id();
}
inline void MsgBankRecord::_internal_set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  send_user_id_ = value;
}
inline void MsgBankRecord::set_send_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_send_user_id(value);
  // @@protoc_insertion_point(field_set:MsgBankRecord.send_user_id)
}

// int64 transfer_gold = 2;
inline void MsgBankRecord::clear_transfer_gold() {
  transfer_gold_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankRecord::_internal_transfer_gold() const {
  return transfer_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgBankRecord::transfer_gold() const {
  // @@protoc_insertion_point(field_get:MsgBankRecord.transfer_gold)
  return _internal_transfer_gold();
}
inline void MsgBankRecord::_internal_set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  transfer_gold_ = value;
}
inline void MsgBankRecord::set_transfer_gold(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_transfer_gold(value);
  // @@protoc_insertion_point(field_set:MsgBankRecord.transfer_gold)
}

// string timer = 3;
inline void MsgBankRecord::clear_timer() {
  timer_.ClearToEmpty();
}
inline const std::string& MsgBankRecord::timer() const {
  // @@protoc_insertion_point(field_get:MsgBankRecord.timer)
  return _internal_timer();
}
inline void MsgBankRecord::set_timer(const std::string& value) {
  _internal_set_timer(value);
  // @@protoc_insertion_point(field_set:MsgBankRecord.timer)
}
inline std::string* MsgBankRecord::mutable_timer() {
  // @@protoc_insertion_point(field_mutable:MsgBankRecord.timer)
  return _internal_mutable_timer();
}
inline const std::string& MsgBankRecord::_internal_timer() const {
  return timer_.Get();
}
inline void MsgBankRecord::_internal_set_timer(const std::string& value) {
  
  timer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgBankRecord::set_timer(std::string&& value) {
  
  timer_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgBankRecord.timer)
}
inline void MsgBankRecord::set_timer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  timer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgBankRecord.timer)
}
inline void MsgBankRecord::set_timer(const char* value,
    size_t size) {
  
  timer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgBankRecord.timer)
}
inline std::string* MsgBankRecord::_internal_mutable_timer() {
  
  return timer_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgBankRecord::release_timer() {
  // @@protoc_insertion_point(field_release:MsgBankRecord.timer)
  return timer_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgBankRecord::set_allocated_timer(std::string* timer) {
  if (timer != nullptr) {
    
  } else {
    
  }
  timer_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), timer,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgBankRecord.timer)
}

// int32 recv_user_id = 4;
inline void MsgBankRecord::clear_recv_user_id() {
  recv_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankRecord::_internal_recv_user_id() const {
  return recv_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankRecord::recv_user_id() const {
  // @@protoc_insertion_point(field_get:MsgBankRecord.recv_user_id)
  return _internal_recv_user_id();
}
inline void MsgBankRecord::_internal_set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recv_user_id_ = value;
}
inline void MsgBankRecord::set_recv_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recv_user_id(value);
  // @@protoc_insertion_point(field_set:MsgBankRecord.recv_user_id)
}

// -------------------------------------------------------------------

// MsgBankRecordResp

// repeated .MsgBankRecord records = 1;
inline int MsgBankRecordResp::_internal_records_size() const {
  return records_.size();
}
inline int MsgBankRecordResp::records_size() const {
  return _internal_records_size();
}
inline void MsgBankRecordResp::clear_records() {
  records_.Clear();
}
inline ::MsgBankRecord* MsgBankRecordResp::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:MsgBankRecordResp.records)
  return records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgBankRecord >*
MsgBankRecordResp::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:MsgBankRecordResp.records)
  return &records_;
}
inline const ::MsgBankRecord& MsgBankRecordResp::_internal_records(int index) const {
  return records_.Get(index);
}
inline const ::MsgBankRecord& MsgBankRecordResp::records(int index) const {
  // @@protoc_insertion_point(field_get:MsgBankRecordResp.records)
  return _internal_records(index);
}
inline ::MsgBankRecord* MsgBankRecordResp::_internal_add_records() {
  return records_.Add();
}
inline ::MsgBankRecord* MsgBankRecordResp::add_records() {
  // @@protoc_insertion_point(field_add:MsgBankRecordResp.records)
  return _internal_add_records();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgBankRecord >&
MsgBankRecordResp::records() const {
  // @@protoc_insertion_point(field_list:MsgBankRecordResp.records)
  return records_;
}

// -------------------------------------------------------------------

// MsgPhoneCode

// string area_code = 1;
inline void MsgPhoneCode::clear_area_code() {
  area_code_.ClearToEmpty();
}
inline const std::string& MsgPhoneCode::area_code() const {
  // @@protoc_insertion_point(field_get:MsgPhoneCode.area_code)
  return _internal_area_code();
}
inline void MsgPhoneCode::set_area_code(const std::string& value) {
  _internal_set_area_code(value);
  // @@protoc_insertion_point(field_set:MsgPhoneCode.area_code)
}
inline std::string* MsgPhoneCode::mutable_area_code() {
  // @@protoc_insertion_point(field_mutable:MsgPhoneCode.area_code)
  return _internal_mutable_area_code();
}
inline const std::string& MsgPhoneCode::_internal_area_code() const {
  return area_code_.Get();
}
inline void MsgPhoneCode::_internal_set_area_code(const std::string& value) {
  
  area_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPhoneCode::set_area_code(std::string&& value) {
  
  area_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPhoneCode.area_code)
}
inline void MsgPhoneCode::set_area_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  area_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPhoneCode.area_code)
}
inline void MsgPhoneCode::set_area_code(const char* value,
    size_t size) {
  
  area_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPhoneCode.area_code)
}
inline std::string* MsgPhoneCode::_internal_mutable_area_code() {
  
  return area_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPhoneCode::release_area_code() {
  // @@protoc_insertion_point(field_release:MsgPhoneCode.area_code)
  return area_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPhoneCode::set_allocated_area_code(std::string* area_code) {
  if (area_code != nullptr) {
    
  } else {
    
  }
  area_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), area_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPhoneCode.area_code)
}

// string phone = 2;
inline void MsgPhoneCode::clear_phone() {
  phone_.ClearToEmpty();
}
inline const std::string& MsgPhoneCode::phone() const {
  // @@protoc_insertion_point(field_get:MsgPhoneCode.phone)
  return _internal_phone();
}
inline void MsgPhoneCode::set_phone(const std::string& value) {
  _internal_set_phone(value);
  // @@protoc_insertion_point(field_set:MsgPhoneCode.phone)
}
inline std::string* MsgPhoneCode::mutable_phone() {
  // @@protoc_insertion_point(field_mutable:MsgPhoneCode.phone)
  return _internal_mutable_phone();
}
inline const std::string& MsgPhoneCode::_internal_phone() const {
  return phone_.Get();
}
inline void MsgPhoneCode::_internal_set_phone(const std::string& value) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgPhoneCode::set_phone(std::string&& value) {
  
  phone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgPhoneCode.phone)
}
inline void MsgPhoneCode::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgPhoneCode.phone)
}
inline void MsgPhoneCode::set_phone(const char* value,
    size_t size) {
  
  phone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgPhoneCode.phone)
}
inline std::string* MsgPhoneCode::_internal_mutable_phone() {
  
  return phone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgPhoneCode::release_phone() {
  // @@protoc_insertion_point(field_release:MsgPhoneCode.phone)
  return phone_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgPhoneCode::set_allocated_phone(std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), phone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgPhoneCode.phone)
}

// -------------------------------------------------------------------

// MsgItem

// int32 item_id = 1;
inline void MsgItem::clear_item_id() {
  item_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgItem::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgItem::item_id() const {
  // @@protoc_insertion_point(field_get:MsgItem.item_id)
  return _internal_item_id();
}
inline void MsgItem::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  item_id_ = value;
}
inline void MsgItem::set_item_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:MsgItem.item_id)
}

// int64 item_num = 2;
inline void MsgItem::clear_item_num() {
  item_num_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgItem::_internal_item_num() const {
  return item_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgItem::item_num() const {
  // @@protoc_insertion_point(field_get:MsgItem.item_num)
  return _internal_item_num();
}
inline void MsgItem::_internal_set_item_num(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  item_num_ = value;
}
inline void MsgItem::set_item_num(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_item_num(value);
  // @@protoc_insertion_point(field_set:MsgItem.item_num)
}

// -------------------------------------------------------------------

// MsgPlayerItem

// repeated .MsgItem item = 1;
inline int MsgPlayerItem::_internal_item_size() const {
  return item_.size();
}
inline int MsgPlayerItem::item_size() const {
  return _internal_item_size();
}
inline void MsgPlayerItem::clear_item() {
  item_.Clear();
}
inline ::MsgItem* MsgPlayerItem::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:MsgPlayerItem.item)
  return item_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgItem >*
MsgPlayerItem::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:MsgPlayerItem.item)
  return &item_;
}
inline const ::MsgItem& MsgPlayerItem::_internal_item(int index) const {
  return item_.Get(index);
}
inline const ::MsgItem& MsgPlayerItem::item(int index) const {
  // @@protoc_insertion_point(field_get:MsgPlayerItem.item)
  return _internal_item(index);
}
inline ::MsgItem* MsgPlayerItem::_internal_add_item() {
  return item_.Add();
}
inline ::MsgItem* MsgPlayerItem::add_item() {
  // @@protoc_insertion_point(field_add:MsgPlayerItem.item)
  return _internal_add_item();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgItem >&
MsgPlayerItem::item() const {
  // @@protoc_insertion_point(field_list:MsgPlayerItem.item)
  return item_;
}

// -------------------------------------------------------------------

// MsgBankQueryNicname

// int32 ret_Value = 1;
inline void MsgBankQueryNicname::clear_ret_value() {
  ret_value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankQueryNicname::_internal_ret_value() const {
  return ret_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankQueryNicname::ret_value() const {
  // @@protoc_insertion_point(field_get:MsgBankQueryNicname.ret_Value)
  return _internal_ret_value();
}
inline void MsgBankQueryNicname::_internal_set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ret_value_ = value;
}
inline void MsgBankQueryNicname::set_ret_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ret_value(value);
  // @@protoc_insertion_point(field_set:MsgBankQueryNicname.ret_Value)
}

// string nickname = 2;
inline void MsgBankQueryNicname::clear_nickname() {
  nickname_.ClearToEmpty();
}
inline const std::string& MsgBankQueryNicname::nickname() const {
  // @@protoc_insertion_point(field_get:MsgBankQueryNicname.nickname)
  return _internal_nickname();
}
inline void MsgBankQueryNicname::set_nickname(const std::string& value) {
  _internal_set_nickname(value);
  // @@protoc_insertion_point(field_set:MsgBankQueryNicname.nickname)
}
inline std::string* MsgBankQueryNicname::mutable_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgBankQueryNicname.nickname)
  return _internal_mutable_nickname();
}
inline const std::string& MsgBankQueryNicname::_internal_nickname() const {
  return nickname_.Get();
}
inline void MsgBankQueryNicname::_internal_set_nickname(const std::string& value) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgBankQueryNicname::set_nickname(std::string&& value) {
  
  nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgBankQueryNicname.nickname)
}
inline void MsgBankQueryNicname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgBankQueryNicname.nickname)
}
inline void MsgBankQueryNicname::set_nickname(const char* value,
    size_t size) {
  
  nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgBankQueryNicname.nickname)
}
inline std::string* MsgBankQueryNicname::_internal_mutable_nickname() {
  
  return nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgBankQueryNicname::release_nickname() {
  // @@protoc_insertion_point(field_release:MsgBankQueryNicname.nickname)
  return nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgBankQueryNicname::set_allocated_nickname(std::string* nickname) {
  if (nickname != nullptr) {
    
  } else {
    
  }
  nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgBankQueryNicname.nickname)
}

// int32 tax = 3;
inline void MsgBankQueryNicname::clear_tax() {
  tax_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankQueryNicname::_internal_tax() const {
  return tax_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgBankQueryNicname::tax() const {
  // @@protoc_insertion_point(field_get:MsgBankQueryNicname.tax)
  return _internal_tax();
}
inline void MsgBankQueryNicname::_internal_set_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tax_ = value;
}
inline void MsgBankQueryNicname::set_tax(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tax(value);
  // @@protoc_insertion_point(field_set:MsgBankQueryNicname.tax)
}

// -------------------------------------------------------------------

// MsgSubagentInformation

// string agent_nickname = 1;
inline void MsgSubagentInformation::clear_agent_nickname() {
  agent_nickname_.ClearToEmpty();
}
inline const std::string& MsgSubagentInformation::agent_nickname() const {
  // @@protoc_insertion_point(field_get:MsgSubagentInformation.agent_nickname)
  return _internal_agent_nickname();
}
inline void MsgSubagentInformation::set_agent_nickname(const std::string& value) {
  _internal_set_agent_nickname(value);
  // @@protoc_insertion_point(field_set:MsgSubagentInformation.agent_nickname)
}
inline std::string* MsgSubagentInformation::mutable_agent_nickname() {
  // @@protoc_insertion_point(field_mutable:MsgSubagentInformation.agent_nickname)
  return _internal_mutable_agent_nickname();
}
inline const std::string& MsgSubagentInformation::_internal_agent_nickname() const {
  return agent_nickname_.Get();
}
inline void MsgSubagentInformation::_internal_set_agent_nickname(const std::string& value) {
  
  agent_nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MsgSubagentInformation::set_agent_nickname(std::string&& value) {
  
  agent_nickname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:MsgSubagentInformation.agent_nickname)
}
inline void MsgSubagentInformation::set_agent_nickname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  agent_nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:MsgSubagentInformation.agent_nickname)
}
inline void MsgSubagentInformation::set_agent_nickname(const char* value,
    size_t size) {
  
  agent_nickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:MsgSubagentInformation.agent_nickname)
}
inline std::string* MsgSubagentInformation::_internal_mutable_agent_nickname() {
  
  return agent_nickname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MsgSubagentInformation::release_agent_nickname() {
  // @@protoc_insertion_point(field_release:MsgSubagentInformation.agent_nickname)
  return agent_nickname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MsgSubagentInformation::set_allocated_agent_nickname(std::string* agent_nickname) {
  if (agent_nickname != nullptr) {
    
  } else {
    
  }
  agent_nickname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), agent_nickname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:MsgSubagentInformation.agent_nickname)
}

// int32 agent_user_id = 2;
inline void MsgSubagentInformation::clear_agent_user_id() {
  agent_user_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSubagentInformation::_internal_agent_user_id() const {
  return agent_user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSubagentInformation::agent_user_id() const {
  // @@protoc_insertion_point(field_get:MsgSubagentInformation.agent_user_id)
  return _internal_agent_user_id();
}
inline void MsgSubagentInformation::_internal_set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agent_user_id_ = value;
}
inline void MsgSubagentInformation::set_agent_user_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agent_user_id(value);
  // @@protoc_insertion_point(field_set:MsgSubagentInformation.agent_user_id)
}

// bool agent_type = 3;
inline void MsgSubagentInformation::clear_agent_type() {
  agent_type_ = false;
}
inline bool MsgSubagentInformation::_internal_agent_type() const {
  return agent_type_;
}
inline bool MsgSubagentInformation::agent_type() const {
  // @@protoc_insertion_point(field_get:MsgSubagentInformation.agent_type)
  return _internal_agent_type();
}
inline void MsgSubagentInformation::_internal_set_agent_type(bool value) {
  
  agent_type_ = value;
}
inline void MsgSubagentInformation::set_agent_type(bool value) {
  _internal_set_agent_type(value);
  // @@protoc_insertion_point(field_set:MsgSubagentInformation.agent_type)
}

// int64 total_shift_to = 4;
inline void MsgSubagentInformation::clear_total_shift_to() {
  total_shift_to_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSubagentInformation::_internal_total_shift_to() const {
  return total_shift_to_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSubagentInformation::total_shift_to() const {
  // @@protoc_insertion_point(field_get:MsgSubagentInformation.total_shift_to)
  return _internal_total_shift_to();
}
inline void MsgSubagentInformation::_internal_set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_shift_to_ = value;
}
inline void MsgSubagentInformation::set_total_shift_to(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_shift_to(value);
  // @@protoc_insertion_point(field_set:MsgSubagentInformation.total_shift_to)
}

// int64 total_roll_out = 5;
inline void MsgSubagentInformation::clear_total_roll_out() {
  total_roll_out_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSubagentInformation::_internal_total_roll_out() const {
  return total_roll_out_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MsgSubagentInformation::total_roll_out() const {
  // @@protoc_insertion_point(field_get:MsgSubagentInformation.total_roll_out)
  return _internal_total_roll_out();
}
inline void MsgSubagentInformation::_internal_set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  total_roll_out_ = value;
}
inline void MsgSubagentInformation::set_total_roll_out(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_total_roll_out(value);
  // @@protoc_insertion_point(field_set:MsgSubagentInformation.total_roll_out)
}

// int32 vip_level = 6;
inline void MsgSubagentInformation::clear_vip_level() {
  vip_level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSubagentInformation::_internal_vip_level() const {
  return vip_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MsgSubagentInformation::vip_level() const {
  // @@protoc_insertion_point(field_get:MsgSubagentInformation.vip_level)
  return _internal_vip_level();
}
inline void MsgSubagentInformation::_internal_set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vip_level_ = value;
}
inline void MsgSubagentInformation::set_vip_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vip_level(value);
  // @@protoc_insertion_point(field_set:MsgSubagentInformation.vip_level)
}

// -------------------------------------------------------------------

// MsgTtotalSubagentInformation

// repeated .MsgSubagentInformation agent_info = 1;
inline int MsgTtotalSubagentInformation::_internal_agent_info_size() const {
  return agent_info_.size();
}
inline int MsgTtotalSubagentInformation::agent_info_size() const {
  return _internal_agent_info_size();
}
inline void MsgTtotalSubagentInformation::clear_agent_info() {
  agent_info_.Clear();
}
inline ::MsgSubagentInformation* MsgTtotalSubagentInformation::mutable_agent_info(int index) {
  // @@protoc_insertion_point(field_mutable:MsgTtotalSubagentInformation.agent_info)
  return agent_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgSubagentInformation >*
MsgTtotalSubagentInformation::mutable_agent_info() {
  // @@protoc_insertion_point(field_mutable_list:MsgTtotalSubagentInformation.agent_info)
  return &agent_info_;
}
inline const ::MsgSubagentInformation& MsgTtotalSubagentInformation::_internal_agent_info(int index) const {
  return agent_info_.Get(index);
}
inline const ::MsgSubagentInformation& MsgTtotalSubagentInformation::agent_info(int index) const {
  // @@protoc_insertion_point(field_get:MsgTtotalSubagentInformation.agent_info)
  return _internal_agent_info(index);
}
inline ::MsgSubagentInformation* MsgTtotalSubagentInformation::_internal_add_agent_info() {
  return agent_info_.Add();
}
inline ::MsgSubagentInformation* MsgTtotalSubagentInformation::add_agent_info() {
  // @@protoc_insertion_point(field_add:MsgTtotalSubagentInformation.agent_info)
  return _internal_add_agent_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::MsgSubagentInformation >&
MsgTtotalSubagentInformation::agent_info() const {
  // @@protoc_insertion_point(field_list:MsgTtotalSubagentInformation.agent_info)
  return agent_info_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Login_2eproto
