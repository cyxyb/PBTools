syntax = "proto3";

package AndarBahar;

enum EGameState
{
	GS_Ready	 = 0;	//准备
	GS_Start	 = 1;	//开始游戏
	GS_Bet1		 = 2;	//下注1
	GS_Bet2		 = 3;	//下注2
	GS_SendCard1 = 4;	//发牌1
	GS_SendCard2 = 5;	//发牌2
	GS_Result	 = 6;	//结算
}

enum EMsgIDSubGame
{
	MsgIDSubGame_Null					= 0;
	MsgIDSubGame_Bet					= 1;	//玩家下注(MsgBet)
	MsgIDSubGame_BetResp				= 2;	//玩家下注返回(MsgBetResp)
	MsgIDSubGame_OpBanker				= 3;	//玩家操作上下庄(MsgOpBanker)
	MsgIDSubGame_OpBankerResp			= 4;	//玩家操作上下庄(MsgOpBankerResp)
	MsgIDSubGame_GameStartResp			= 5;	//游戏结果(MsgStartGameResp)
	MsgIDSubGame_SendCardResp			= 6;	//游戏结果(MsgSendCardResp)
	MsgIDSubGame_GameResultResp			= 7;	//游戏结果(MsgResult)
	MsgIDSubGame_NotifyStateResp		= 8;	//游戏状态(MsgCommonN32)
}

message ABBetInfo
{
	int64				bet				= 1;	//下注金额  
	int32				status			= 2;	//下注状态 0未操作 1 红 2 蓝 3跳过	
}

message ABPlayerData
{
	int32				user_id			= 1;
	int64				win_gold		= 2;	// 总赢
	int32				total_play		= 3;	// 总玩次数
	int32				win_play		= 4;	// 赢次数
	repeated ABBetInfo	bet_infos		= 5;	// 下注状态
}

message ABUpWaitBankerInfo
{
	int32				id				= 1;	// 庄家ID
	int64				op_banker_gold	= 2;	// 用户可输赢金币是否要下庄
};

message ABBankerInfo
{
	int32				id				= 1;	// 庄家ID
	int64				op_gold			= 2;	// 用户可输赢金币是否要下庄
	int32				round			= 3;	// 已经上庄轮数 包涵本局	
	int64				total_win		= 4;	// 庄家总输赢金币
	bool				is_down			= 5;	// 是否要下庄 服务器用的
};

//场景消息
message MsgSceneInfo
{
	repeated int64  	bet     		= 1;	//固定押注配置
	repeated int32		records			= 2;	//开牌结果(1:红 2:黑)
	repeated int32		bet_limit		= 3;	//个人区域限制
	repeated ABUpWaitBankerInfo up_banker_list	= 4;	//上庄申列表
	int32				player_limit	= 5;	//个人下注限制
	int32				bet_time		= 6;	//下注总时间
	int32				out_time		= 7;	//剩余时间
	int32				state			= 8;	//当前状态
	repeated int32		mul				= 9;	//倍数(红、黑、)
	int32				banker_max		= 10;	//当庄最大轮数 
	int64				banker_min_limit= 11;	//上庄最小金币限制
	ABBankerInfo		banker_info		= 12;	//庄信息
	int32				base_card		= 13;	//底牌
	int64				red_total_bet	= 14;	//红方总下注
	int64				bluo_total_bet	= 15;	//蓝方总下注

	repeated int32		red_cards		= 20;	//红方牌列表
	repeated int32		blue_cards		= 21;	//蓝方牌列表
	repeated ABPlayerData player_list	= 22;	//玩家状态	
}

//开始游戏
message MsgStartGameResp
{
	ABBankerInfo		banker_info		= 1;	//庄信息
	int32				base_card		= 3;	//底牌
}

//玩家下注
message MsgBet
{
	int64				bet				= 1;	//押注金币
	int32				area			= 2;	//押注区域(0:跳过 1:红 2:蓝 )
}

//玩家下注返回
message MsgBetResp
{
	int32				ret_code		= 1;	//返回码
	int32				user_id			= 2;	//玩家id
	int32				chair_id		= 3;	//玩家椅子号
	ABBetInfo			bet_info		= 4;	//玩家下注信息
}         

message MsgSendCardResp
{
	int32				card			= 1;	//牌
	int32				area			= 2;	//发牌区域
	bool				is_end			= 3;	//是否结束 

}

//操作庄
message MsgOpBanker
{
	int32				op_type			= 1;	// 1 = 上庄 2 = 下庄 
	int64				up_gold			= 2;	// 携带金币
}

//操作庄
message MsgOpBankerResp
{
	int32				ret_code		= 1;	//返回码
	int32				user_id			= 2;	//玩家id
	int32				chair_id		= 3;	//玩家椅子号
	int32				op_type			= 4;	// 1 = 上庄 2 = 下庄 3 = 被动下庄
	int64				up_gold			= 5;	// 携带金币

}


//玩家输赢信息                              
message MsgWinMsg                           
{                                           
	int32				user_id			= 1;	//玩家id
	int32				chair_id		= 2;	//玩家椅子号
	int64				win_gold		= 3;	//玩家输赢信息
	int64				new_gold		= 4;	//最新金币
	bool				is_win			= 5;	//是否压中
}                                           

//游戏结果                                  
message MsgResult                           
{                                           
	int32				win_index		= 1;	//开牌结果(1:红 2:蓝)赢
	ABBankerInfo		banker_info		= 2;	//庄家输赢的金币
	repeated MsgWinMsg 	win_msg			= 3;	//玩家输赢信息
}                                           
