syntax = "proto3";

package RedAndBlack_India;

enum EMsgIDSubGame
{
	MsgIDSubGame_Null					= 0;
	MsgIDSubGame_Bet					= 1;	//玩家下注(MsgBet)
	MsgIDSubGame_BetResp				= 2;	//玩家下注返回(MsgBetResp)
	MsgIDSubGame_AgainBet				= 3;	//玩家续投(MsgAgainBet)
	MsgIDSubGame_AgainBetResp			= 4;	//玩家续投返回(MsgAgainBetResp)
	MsgIDSubGame_GameResultResp			= 5;	//游戏结果(MsgResult)
	MsgIDSubGame_BetRecordResp			= 6;	//玩家下注记录(MsgBetRecord)
	MsgIDSubGame_NotifyStateResp		= 7;	//游戏状态(MsgCommonN32)
}

//开牌记录
message MsgRecord
{
	int32	result			= 1;	//开牌结果(0:红 1:黑 2:红和幸运一击 3:黑和幸运一击)
	int32	card_type		= 2;	//赢牌类型
}

//场景消息
message MsgSceneInfo
{
	repeated int32  	bet     		= 1;	//固定押注配置
	repeated MsgRecord	record			= 2;	//开牌记录
	repeated int32		bet_limit		= 3;	//个人区域限制
	int32				player_limit	= 4;	//个人下注限制
	repeated int32		state_time		= 5;	//各个状态配置时间(0:准备 7s 1:下注 15s 2:结算 10s)
	int32				remain_time		= 6;	//已过时间
	int32				state			= 7;	//当前状态
}

//玩家下注
message MsgBet
{
	int32			index			= 1;	//押注下标
	int32			area			= 2;	//押注区域(0:红 1:黑 2:幸运一击)
}

//玩家下注返回
message MsgBetResp
{
	int32			chair_id		= 1;	//玩家椅子号
	MsgBet			bet_info		= 2;	//玩家下注信息
}

//玩家下注
message MsgSingleAgainBet
{
	int32			index			= 1;	//押注下标
	int32			area			= 2;	//押注区域(0:红 1:黑 2:幸运一击)
	int32			count			= 3;	//次数
}

//玩家续投
message MsgAgainBet
{
	repeated MsgSingleAgainBet again_bet_info = 1;	//玩家续投
}

//玩家续投返回
message MsgAgainBetResp
{
	int32			chair_id		= 1;	//玩家椅子号
	MsgAgainBet		again_bet_info	= 2;	//玩家续投信息
}                                           

//玩家输赢信息                              
message MsgWinMsg                           
{                                           
	int32			chair_id		= 1;	//玩家椅子号
	int64			gold			= 2;	//玩家输赢信息
}                                           

//游戏结果                                  
message MsgResult                           
{                                           
	repeated MsgWinMsg 	win_msg		= 1;	//玩家输赢信息
	repeated int32		card		= 2;	//牌信息
	repeated int32		card_type	= 3;	//牌类型
	int32				result		= 4;	//开牌结果(0:红 1:黑 2:红和幸运一击 3:黑和幸运一击)
}                                           

//下注记录                                  
message MsgTotalBet                        
{               
	int32				chair_id	= 1;	//玩家椅子号
	repeated int32		bet			= 2;	//玩家押注
	repeated int64		gold		= 3;	//玩家输赢金币
}                                           

//下注记录                                  
message MsgBetRecord                        
{                                           
	repeated MsgTotalBet	bet_record	= 1;	//下注记录
}

